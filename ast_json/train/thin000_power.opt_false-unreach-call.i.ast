TranslationUnitDecl 0x55734a43bf88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55734a43c848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55734a43c520 '__int128'
|-TypedefDecl 0x55734a43c8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55734a43c540 'unsigned __int128'
|-TypedefDecl 0x55734a43cbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55734a43c990 'struct __NSConstantString_tag'
|   `-Record 0x55734a43c910 '__NSConstantString_tag'
|-TypedefDecl 0x55734a43cc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55734a43cc20 'char *'
|   `-BuiltinType 0x55734a43c020 'char'
|-TypedefDecl 0x55734a47bb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55734a43cf00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55734a43cd40 'struct __va_list_tag'
|     `-Record 0x55734a43ccc0 '__va_list_tag'
|-FunctionDecl 0x55734a47bca0 <pthread-wmm/thin000_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55734a47bbd0 <col:31> col:34 'int'
|-FunctionDecl 0x55734a47be68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55734a47bf90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55734a47c0d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55734a47c048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55734a47c308 <col:40, col:99>
|   |-IfStmt 0x55734a47c2d8 <col:42, col:88>
|   | |-UnaryOperator 0x55734a47c1b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55734a47c1a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55734a47c180 <col:47> 'int' lvalue ParmVar 0x55734a47c048 'expression' 'int'
|   | `-CompoundStmt 0x55734a47c2c0 <col:59, col:88>
|   |   `-LabelStmt 0x55734a47c2a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55734a47c238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55734a47c220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55734a47c1d0 <col:68> 'void () __attribute__((noreturn))' Function 0x55734a47bf90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55734a47c2f0 <col:89>
|   `-ReturnStmt 0x55734a47c2f8 <col:91>
|-FunctionDecl 0x55734a47c350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55734a47c410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55734a47c790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55734a47c4c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55734a47c548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55734a47c5c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55734a47c648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55734a47c850 <line:10:22>
|-FunctionDecl 0x55734a4a28a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55734a47c8c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55734a47c940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55734a47c9c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55734a47ca40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55734a4a2960 <line:13:22>
|-FunctionDecl 0x55734a4a2c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55734a4a29d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55734a4a2a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55734a4a2ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55734a4a2cc8 <line:15:22>
|-TypedefDecl 0x55734a4a2d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55734a43c0e0 'unsigned char'
|-TypedefDecl 0x55734a4a2da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55734a43c100 'unsigned short'
|-TypedefDecl 0x55734a4a2e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55734a43c120 'unsigned int'
|-TypedefDecl 0x55734a4a2e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55734a43c140 'unsigned long'
|-TypedefDecl 0x55734a4a2ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55734a43c040 'signed char'
|-TypedefDecl 0x55734a4a2f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55734a43c0e0 'unsigned char'
|-TypedefDecl 0x55734a4a2fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55734a43c060 'short'
|-TypedefDecl 0x55734a4a3048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55734a43c100 'unsigned short'
|-TypedefDecl 0x55734a4a30b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55734a43c080 'int'
|-TypedefDecl 0x55734a4a3128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55734a43c120 'unsigned int'
|-TypedefDecl 0x55734a4a3198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55734a43c0a0 'long'
|-TypedefDecl 0x55734a4a3208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55734a43c140 'unsigned long'
|-TypedefDecl 0x55734a4a3278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55734a43c0a0 'long'
|-TypedefDecl 0x55734a4a32e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55734a43c140 'unsigned long'
|-TypedefDecl 0x55734a4a3358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55734a43c140 'unsigned long'
|-TypedefDecl 0x55734a4a33c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55734a43c120 'unsigned int'
|-TypedefDecl 0x55734a4a3438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55734a43c120 'unsigned int'
|-TypedefDecl 0x55734a4a34a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55734a43c140 'unsigned long'
|-TypedefDecl 0x55734a4a3518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55734a43c140 'unsigned long'
|-TypedefDecl 0x55734a4a3588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55734a43c120 'unsigned int'
|-TypedefDecl 0x55734a4a35f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55734a43c140 'unsigned long'
|-TypedefDecl 0x55734a4a3668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55734a43c0a0 'long'
|-TypedefDecl 0x55734a4a36d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55734a43c0a0 'long'
|-TypedefDecl 0x55734a4a3748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55734a43c080 'int'
|-RecordDecl 0x55734a4a37a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55734a4a3918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55734a4a39d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55734a4a3970 'struct __fsid_t' sugar
|   `-RecordType 0x55734a4a3820 '__fsid_t'
|     `-Record 0x55734a4a37a0 ''
|-TypedefDecl 0x55734a4a3a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55734a43c0a0 'long'
|-TypedefDecl 0x55734a4a3ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55734a43c140 'unsigned long'
|-TypedefDecl 0x55734a4a3b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55734a43c140 'unsigned long'
|-TypedefDecl 0x55734a4a3ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55734a43c120 'unsigned int'
|-TypedefDecl 0x55734a4a3c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55734a43c0a0 'long'
|-TypedefDecl 0x55734a4a3c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55734a43c120 'unsigned int'
|-TypedefDecl 0x55734a4a3cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55734a43c0a0 'long'
|-TypedefDecl 0x55734a4a3d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55734a43c080 'int'
|-TypedefDecl 0x55734a4a3dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55734a43c080 'int'
|-TypedefDecl 0x55734a4a3e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55734a43c080 'int'
|-TypedefDecl 0x55734a4a3eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55734a43c7a0 'void *'
|   `-BuiltinType 0x55734a43bfe0 'void'
|-TypedefDecl 0x55734a4a3f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55734a43c0a0 'long'
|-TypedefDecl 0x55734a4a3f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55734a43c0a0 'long'
|-TypedefDecl 0x55734a4a4008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55734a43c0a0 'long'
|-TypedefDecl 0x55734a4a4078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55734a43c140 'unsigned long'
|-TypedefDecl 0x55734a4a40e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55734a43c140 'unsigned long'
|-TypedefDecl 0x55734a4a4158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55734a43c140 'unsigned long'
|-TypedefDecl 0x55734a4a41c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55734a43c140 'unsigned long'
|-TypedefDecl 0x55734a4a4238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55734a43c0a0 'long'
|-TypedefDecl 0x55734a4a42a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55734a43c0a0 'long'
|-TypedefDecl 0x55734a4a4318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55734a43c0a0 'long'
|-TypedefDecl 0x55734a4a4388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55734a43c140 'unsigned long'
|-TypedefDecl 0x55734a4a4418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55734a4a43e0 '__off64_t' sugar
|   |-Typedef 0x55734a4a36d8 '__off64_t'
|   `-BuiltinType 0x55734a43c0a0 'long'
|-TypedefDecl 0x55734a4a4510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55734a4a44d0 '__quad_t *'
|   `-TypedefType 0x55734a4a4470 '__quad_t' sugar
|     |-Typedef 0x55734a4a3278 '__quad_t'
|     `-BuiltinType 0x55734a43c0a0 'long'
|-TypedefDecl 0x55734a4a4580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55734a43cc20 'char *'
|   `-BuiltinType 0x55734a43c020 'char'
|-TypedefDecl 0x55734a4a45f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55734a43c0a0 'long'
|-TypedefDecl 0x55734a4a4660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55734a43c120 'unsigned int'
|-FunctionDecl 0x55734a4a47a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55734a4a46d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55734a4a4ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55734a4a4ad8 <line:72:3, col:34>
|     `-CallExpr 0x55734a4a4a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55734a4a4a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55734a4a4a10 <col:10> '<builtin fn type>' Function 0x55734a4a4880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55734a4a4ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55734a4a4a30 <col:29> 'unsigned int' lvalue ParmVar 0x55734a4a46d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55734a4a4880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55734a4a4920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55734a4a4990 <col:10> Implicit
| `-ConstAttr 0x55734a4a49e8 <col:10> Implicit
|-FunctionDecl 0x55734a4a4c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55734a4a4b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55734a4a4f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55734a4a4f48 <line:77:3, col:34>
|     `-CallExpr 0x55734a4a4f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55734a4a4ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55734a4a4e78 <col:10> '<builtin fn type>' Function 0x55734a4a4ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55734a4a4f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55734a4a4e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55734a4a4b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55734a4a4ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55734a4a4d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55734a4a4df8 <col:10> Implicit
| `-ConstAttr 0x55734a4a4e50 <col:10> Implicit
|-TypedefDecl 0x55734a4a4f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55734a43c140 'unsigned long'
|-TypedefDecl 0x55734a4a5018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55734a4a4fe0 '__time_t' sugar
|   |-Typedef 0x55734a4a3c18 '__time_t'
|   `-BuiltinType 0x55734a43c0a0 'long'
|-RecordDecl 0x55734a4a5070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55734a4a5128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55734a4a51b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55734a4a5248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55734a4a5210 '__pid_t' sugar
|   |-Typedef 0x55734a4a3748 '__pid_t'
|   `-BuiltinType 0x55734a43c080 'int'
|-RecordDecl 0x55734a4a52a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55734a4a5360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55734a4a53b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55734a4a5470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55734a4a54d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55734a43c140 'unsigned long'
|-RecordDecl 0x55734a4a5530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55734a4a57c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55734a4a78b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55734a4a5810 'struct cpu_set_t' sugar
|   `-RecordType 0x55734a4a55b0 'cpu_set_t'
|     `-Record 0x55734a4a5530 ''
|-FunctionDecl 0x55734a4a7b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55734a4a7958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55734a4a7a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55734a4a7c38 <line:107:19>
|-FunctionDecl 0x55734a4a7e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55734a4a7ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55734a4a7eb8 <col:69>
|-FunctionDecl 0x55734a4a8030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55734a4a7f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55734a4a80d8 <col:64>
|-FunctionDecl 0x55734a4a8398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55734a4a8140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55734a4a8278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55734a4a8448 <line:113:22>
|-FunctionDecl 0x55734a4a86c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55734a4a84b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55734a4a85a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55734a4a8778 <col:88>
|-FunctionDecl 0x55734a4a8a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55734a4a87e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55734a4a88c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55734a4a8950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55734a4a8b50 <col:62>
|-FunctionDecl 0x55734a4a8cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55734a4a8bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55734a4a8d70 <col:63>
|-FunctionDecl 0x55734a4a8e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55734a4a8f38 <col:47>
|-FunctionDecl 0x55734a4a9040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55734a4a8fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55734a4a90e8 <col:69>
|-FunctionDecl 0x55734a4a91f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55734a4a9158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55734a4a9298 <col:69>
|-FunctionDecl 0x55734a4a9558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55734a4a9300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55734a4a9438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55734a4a9608 <col:88>
|-TypedefDecl 0x55734a4a9698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55734a4a9660 '__clock_t' sugar
|   |-Typedef 0x55734a4a3a58 '__clock_t'
|   `-BuiltinType 0x55734a43c0a0 'long'
|-TypedefDecl 0x55734a4a9728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55734a4a96f0 '__clockid_t' sugar
|   |-Typedef 0x55734a4a3e48 '__clockid_t'
|   `-BuiltinType 0x55734a43c080 'int'
|-TypedefDecl 0x55734a4a97b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55734a4a9780 '__timer_t' sugar
|   |-Typedef 0x55734a4a3eb8 '__timer_t'
|   `-PointerType 0x55734a43c7a0 'void *'
|     `-BuiltinType 0x55734a43bfe0 'void'
|-RecordDecl 0x55734a4a9810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55734a4a98e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55734a4a9950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55734a4a99b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55734a4a9a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55734a4a9a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55734a4a9af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55734a4a9b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55734a4a9bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55734a4a9c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55734a4a9c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55734a4a9cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55734a4a9d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55734a4a9e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55734a4a9e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55734a4a9f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55734a4aa100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55734a4aa1a0 <col:45>
|-FunctionDecl 0x55734a4aa380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55734a4aa270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55734a4aa428 <col:54>
|-FunctionDecl 0x55734a4aa628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55734a4aa490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55734a4aa508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55734a4aa6d8 <line:157:22>
| `-ConstAttr 0x55734a4aa730 <col:63>
|-FunctionDecl 0x55734a4ab560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55734a4aa828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55734a4ab608 <col:56>
|-FunctionDecl 0x55734a4ab9b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55734a4ab678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55734a4ab6f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55734a4ab770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55734a4ab868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55734a4aba70 <col:54>
|-RecordDecl 0x55734a4abac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55734a4abb78 parent 0x55734a43bf88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55734a4abdd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55734a4abe78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55734a4abee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55734a4abf48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55734a4ac038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55734a4ac158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55734a4ac100 'struct __locale_struct *'
|   `-ElaboratedType 0x55734a4ac090 'struct __locale_struct' sugar
|     `-RecordType 0x55734a4abb50 'struct __locale_struct'
|       `-Record 0x55734a4abac8 '__locale_struct'
|-TypedefDecl 0x55734a4ac208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55734a4ac1d0 '__locale_t' sugar
|   |-Typedef 0x55734a4ac158 '__locale_t'
|   `-PointerType 0x55734a4ac100 'struct __locale_struct *'
|     `-ElaboratedType 0x55734a4ac090 'struct __locale_struct' sugar
|       `-RecordType 0x55734a4abb50 'struct __locale_struct'
|         `-Record 0x55734a4abac8 '__locale_struct'
|-FunctionDecl 0x55734a4ac610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55734a4ac278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55734a4ac2f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55734a4ac370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55734a4ac400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55734a4ac478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55734a4ac6d8 <col:40>
|-FunctionDecl 0x55734a4ac8c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55734a4ac7a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55734a4ac970 <col:66>
|-FunctionDecl 0x55734a4aca80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55734a4ac9d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55734a4acb28 <col:69>
|-FunctionDecl 0x55734a4acd58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55734a4acb90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55734a4acc20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55734a4ace08 <col:52>
|-FunctionDecl 0x55734a4acfb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55734a4ace70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55734a4acf00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55734a4ad060 <col:55>
|-FunctionDecl 0x55734a4ad1f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55734a4ad0e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55734a4ad2a0 <col:62>
|-FunctionDecl 0x55734a4ad418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55734a4ad308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55734a4ad4c0 <col:60>
|-FunctionDecl 0x55734a4ad718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55734a4ad578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55734a4ad5f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55734a4ad7c8 <col:44>
|-FunctionDecl 0x55734a4ad9d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55734a4ad830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55734a4ad8b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55734a4ada88 <col:49>
|-VarDecl 0x55734a4adb88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55734a4adc08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55734a4adc88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55734a4add50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55734a4ade80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55734a4adf20 <col:42>
|-VarDecl 0x55734a4adf90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55734a4ae010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55734a4ae198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55734a4ae088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55734a4ae240 <col:57>
|-FunctionDecl 0x55734a4ae350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55734a4ae2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55734a4ae3f8 <col:56>
|-FunctionDecl 0x55734a4af540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55734a4ae478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55734a4af5e8 <col:59>
|-FunctionDecl 0x55734a4af6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55734a4af658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55734a4af798 <col:48>
| `-ConstAttr 0x55734a4af7f0 <col:89>
|-FunctionDecl 0x55734a4afa58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55734a4af8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55734a4af938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55734a4afcb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55734a4afb48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55734a4afbd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55734a4afd68 <col:88>
|-FunctionDecl 0x55734a4aff00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55734a4afdd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55734a4afe60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55734a4affb0 <col:88>
|-FunctionDecl 0x55734a4b01c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55734a4b0018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55734a4b00a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55734a4b0278 <line:208:22>
|-FunctionDecl 0x55734a4b05e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55734a4b02e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55734a4b0360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55734a4b03f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55734a4b0480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55734a4b08e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55734a4b06e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55734a4b07c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55734a4b0998 <col:85>
|-FunctionDecl 0x55734a4b0d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55734a4b0a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55734a4b0b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55734a4b0c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55734a4b0e40 <col:52>
|-FunctionDecl 0x55734a4b0fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55734a4b0ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55734a4b1060 <col:61>
|-FunctionDecl 0x55734a4b1560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55734a4b10c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55734a4b1148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55734a4b1278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55734a4b1368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55734a4b1620 <col:62>
|-FunctionDecl 0x55734a4b1838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55734a4b1688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55734a4b1718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55734a4b18e8 <line:221:22>
|-FunctionDecl 0x55734a4b19e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55734a4b1950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55734a4b1a90 <col:65>
|-TypedefDecl 0x55734a4b1b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55734a43c140 'unsigned long'
|-RecordDecl 0x55734a4b1b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55734a4b1ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55734a4b1d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55734a4b1db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55734a4b1d60 'union pthread_attr_t' sugar
|   `-RecordType 0x55734a4b1be0 'union pthread_attr_t'
|     `-Record 0x55734a4b1b58 'pthread_attr_t'
|-RecordDecl 0x55734a4b1e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55734a4b1f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55734a4b2000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55734a4b20b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55734a4b2050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55734a4b1e90 'struct __pthread_internal_list'
|     `-Record 0x55734a4b1e10 '__pthread_internal_list'
|-RecordDecl 0x55734a4b2120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55734a4b21c8 parent 0x55734a43bf88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55734a4b22a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55734a4b2308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55734a4b2370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55734a4b23d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55734a4b2440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55734a4b24a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55734a4b6580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55734a4b6630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55734a4b6720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55734a4b6788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55734a4b6910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55734a4b68b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55734a4b21a0 'pthread_mutex_t'
|     `-Record 0x55734a4b2120 ''
|-RecordDecl 0x55734a4b6980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55734a4b6ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55734a4b6b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55734a4b6be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55734a4b6b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55734a4b6a00 'pthread_mutexattr_t'
|     `-Record 0x55734a4b6980 ''
|-RecordDecl 0x55734a4b6c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55734a4b6cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55734a4b6dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55734a4b6e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55734a4b6e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55734a4b6ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55734a4b6f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55734a4b6fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55734a4b7030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55734a4b7098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55734a4b7150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/thin000_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/thin000_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55734a4b7240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55734a4b72a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55734a4b73e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55734a4b7380 'union pthread_cond_t' sugar
|   `-RecordType 0x55734a4b6cd0 'pthread_cond_t'
|     `-Record 0x55734a4b6c50 ''
|-RecordDecl 0x55734a4b7450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55734a4b7590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55734a4b75f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55734a4b76b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55734a4b7650 'union pthread_condattr_t' sugar
|   `-RecordType 0x55734a4b74d0 'pthread_condattr_t'
|     `-Record 0x55734a4b7450 ''
|-TypedefDecl 0x55734a4b7738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55734a43c120 'unsigned int'
|-TypedefDecl 0x55734a4b77a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55734a43c080 'int'
|-RecordDecl 0x55734a4b7800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55734a4b78a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55734a4b7970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55734a4b79d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55734a4b7a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55734a4b7aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55734a4b7b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55734a4b7b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55734a4b7be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55734a4b7c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55734a4b7cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55734a4b7d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55734a4b7d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55734a4b7e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/thin000_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/thin000_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55734a4b7ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55734a4b7f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55734a4b8090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55734a4b8030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55734a4b7880 'pthread_rwlock_t'
|     `-Record 0x55734a4b7800 ''
|-RecordDecl 0x55734a4b8100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55734a4b8240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55734a4b82a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55734a4b8360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55734a4b8300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55734a4b8180 'pthread_rwlockattr_t'
|     `-Record 0x55734a4b8100 ''
|-TypedefDecl 0x55734a4b83e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55734a43c084 'volatile int' volatile
|   `-BuiltinType 0x55734a43c080 'int'
|-RecordDecl 0x55734a4b8440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55734a4ba5b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55734a4ba618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55734a4ba6d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55734a4ba670 'union pthread_barrier_t' sugar
|   `-RecordType 0x55734a4b84c0 'pthread_barrier_t'
|     `-Record 0x55734a4b8440 ''
|-RecordDecl 0x55734a4ba740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55734a4ba840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55734a4ba8a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55734a4ba960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55734a4ba900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55734a4ba7c0 'pthread_barrierattr_t'
|     `-Record 0x55734a4ba740 ''
|-TypedefDecl 0x55734a4baa78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55734a4baa10 'long [8]' 8 
|   `-BuiltinType 0x55734a43c0a0 'long'
|-EnumDecl 0x55734a4baad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55734a4bab98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55734a4babe8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55734a4bac38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55734a4bad08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55734a4bad58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55734a4bada8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55734a4badf8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55734a4bae80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55734a4bae68 <col:26> 'int'
| |   `-DeclRefExpr 0x55734a4bae48 <col:26> 'int' EnumConstant 0x55734a4bad08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55734a4baf08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55734a4baef0 <col:29> 'int'
| |   `-DeclRefExpr 0x55734a4baed0 <col:29> 'int' EnumConstant 0x55734a4bad58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55734a4baf90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55734a4baf78 <col:30> 'int'
| |   `-DeclRefExpr 0x55734a4baf58 <col:30> 'int' EnumConstant 0x55734a4bada8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55734a4bb018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55734a4bb000 <col:27> 'int'
|     `-DeclRefExpr 0x55734a4bafe0 <col:27> 'int' EnumConstant 0x55734a4bae80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55734a4bb068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55734a4bb138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55734a4bb1c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55734a4bb1a8 <col:30> 'int'
| |   `-DeclRefExpr 0x55734a4bb188 <col:30> 'int' EnumConstant 0x55734a4bb138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55734a4bb210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55734a4bb298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55734a4bb280 <col:29> 'int'
|     `-DeclRefExpr 0x55734a4bb260 <col:29> 'int' EnumConstant 0x55734a4bb210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55734a4bb2e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55734a4bb3b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55734a4bb408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55734a4bb458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55734a4bb4a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55734a4bb5c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55734a4bb610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55734a4bb660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55734a4bb6e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55734a4bb6d0 <col:31> 'int'
|     `-DeclRefExpr 0x55734a4bb6b0 <col:31> 'int' EnumConstant 0x55734a4bb5c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55734a4bb738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55734a4bb808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55734a4bb858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55734a4bb8a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55734a4bb978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55734a4bb9c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55734a4bba18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55734a4bbae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55734a4bbb38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55734a4bbb88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55734a4bbdc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55734a4bbe30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55734a4bbe98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55734a4bbfb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55734a4bc008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55734a4bc0d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55734a4bc128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55734a4bc178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55734a4bc248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55734a4bc298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55734a4bc8f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55734a4bc390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55734a4bc4a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55734a4bc6e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55734a4bc760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55734a4bc9b8 <col:47>
| |-NonNullAttr 0x55734a4bca10 <col:77, col:94> 1 3
| `-CallbackAttr 0x55734a4bca48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55734a4bcb70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55734a4bcaa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55734a4bcdc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55734a4bcc28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55734a4bcca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55734a4bcf98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55734a4bce88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55734a4bd040 <col:60>
|-FunctionDecl 0x55734a4bd190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55734a4bd230 <col:54>
| `-ConstAttr 0x55734a4bd288 <col:95>
|-FunctionDecl 0x55734a4bd458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55734a4bd2c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55734a4bd338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55734a4bd508 <line:394:19>
| `-ConstAttr 0x55734a4bd560 <col:60>
|-FunctionDecl 0x55734a4bdf68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55734a4bde30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55734a4be010 <col:71>
| `-NonNullAttr 0x55734a4be068 <col:112, col:126> 1
|-FunctionDecl 0x55734a4be170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55734a4be0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55734a4be218 <line:397:22>
| `-NonNullAttr 0x55734a4be270 <col:63, col:77> 1
|-FunctionDecl 0x55734a4be498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55734a4be2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55734a4be338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55734a4be548 <line:400:22>
| `-NonNullAttr 0x55734a4be5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55734a4be7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55734a4be5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55734a4be668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55734a4be858 <line:403:22>
| `-NonNullAttr 0x55734a4be8b0 <col:63, col:77> 1
|-FunctionDecl 0x55734a4beb08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55734a4be8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55734a4be9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55734a4bebb8 <line:406:22>
| `-NonNullAttr 0x55734a4bec10 <col:63, col:80> 1 2
|-FunctionDecl 0x55734a4bfe48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55734a4bec58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55734a4becd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55734a4bfef8 <line:409:22>
| `-NonNullAttr 0x55734a4bff50 <col:63, col:77> 1
|-FunctionDecl 0x55734a4c0188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55734a4bff98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55734a4c0028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55734a4c0238 <line:412:22>
| `-NonNullAttr 0x55734a4c0290 <col:63, col:80> 1 2
|-FunctionDecl 0x55734a4c04c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55734a4c02d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55734a4c0368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55734a4c0578 <col:37>
| `-NonNullAttr 0x55734a4c05d0 <col:78, col:95> 1 2
|-FunctionDecl 0x55734a4c07b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55734a4c0618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55734a4c0698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55734a4c0868 <line:418:22>
| `-NonNullAttr 0x55734a4c08c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55734a4c0a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55734a4c0908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55734a4c0988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55734a4c0af8 <line:420:22>
| `-NonNullAttr 0x55734a4c0b50 <col:63, col:77> 1
|-FunctionDecl 0x55734a4c0cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55734a4c0b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55734a4c0c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55734a4c0da8 <line:423:22>
| `-NonNullAttr 0x55734a4c1e30 <col:63, col:80> 1 2
|-FunctionDecl 0x55734a4c1fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55734a4c1e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55734a4c1ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55734a4c2068 <line:426:22>
| `-NonNullAttr 0x55734a4c20c0 <col:63, col:77> 1
|-FunctionDecl 0x55734a4c2268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55734a4c2108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55734a4c2188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55734a4c2318 <line:429:22>
| `-NonNullAttr 0x55734a4c2370 <col:63, col:80> 1 2
|-FunctionDecl 0x55734a4c24f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55734a4c23b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55734a4c2438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55734a4c25a8 <line:431:22>
| `-NonNullAttr 0x55734a4c2600 <col:63, col:77> 1
|-FunctionDecl 0x55734a4c2828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55734a4c2648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55734a4c26c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55734a4c28d8 <line:434:22>
| |-NonNullAttr 0x55734a4c2930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55734a4c2968 <col:100> "" ""
|-FunctionDecl 0x55734a4c2b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55734a4c29b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55734a4c2a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55734a4c2c28 <line:437:22>
| |-NonNullAttr 0x55734a4c2c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x55734a4c2cb8 <col:97> "" ""
|-FunctionDecl 0x55734a4c2eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55734a4c2d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55734a4c2d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55734a4c2f68 <line:440:22>
| `-NonNullAttr 0x55734a4c2fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x55734a4c3140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55734a4c3008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55734a4c3080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55734a4c31f0 <line:443:22>
| `-NonNullAttr 0x55734a4c3248 <col:63, col:77> 1
|-FunctionDecl 0x55734a4c3538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55734a4c3298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55734a4c3318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55734a4c3390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55734a4c35f0 <line:447:22>
| `-NonNullAttr 0x55734a4c3648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55734a4c38f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55734a4c36a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55734a4c3720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55734a4c3798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55734a4c39b0 <col:43>
| `-NonNullAttr 0x55734a4c3a08 <col:84, col:98> 1
|-FunctionDecl 0x55734a4c3cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55734a4c3a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55734a4c3ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55734a4c3b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55734a4c3d80 <line:452:22>
| `-NonNullAttr 0x55734a4c3dd8 <col:63, col:77> 3
|-FunctionDecl 0x55734a4c40e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55734a4c3e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55734a4c3ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55734a4c3f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55734a4c41a0 <line:456:22>
| `-NonNullAttr 0x55734a4c41f8 <col:63, col:80> 2 3
|-FunctionDecl 0x55734a4c43e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55734a4c4248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55734a4c42c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55734a4c4498 <line:458:22>
|-FunctionDecl 0x55734a4c4868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55734a4c4560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55734a4c4700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55734a4c4918 <col:52, col:69> 1 2
|-FunctionDecl 0x55734a4c4ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55734a4c49a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55734a4c4a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55734a4c4ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55734a4c4b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55734a4c4c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55734a4c4e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55734a4c4d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55734a4c4fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55734a4c5040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55734a4c50e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55734a4c51d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55734a4c5240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55734a4c5410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/thin000_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55734a4c5508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55734a4c55c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55734a4c5560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55734a4c50c0 '__pthread_unwind_buf_t'
| |   `-Record 0x55734a4c5040 ''
| `-AlignedAttr 0x55734a4c5618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55734a4c5690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55734a4c57f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55734a4c5858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55734a4c58c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55734a4c5928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55734a4c5b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55734a4c5a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55734a4c5c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55734a4c5be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55734a4c5e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55734a4c5d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55734a4c5f18 <line:487:22>
|-RecordDecl 0x55734a4c5f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55734a4c6288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55734a4c60e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55734a4c6168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55734a4c6338 <col:86>
| `-ReturnsTwiceAttr 0x55734a4c6390 <col:12> Implicit
|-FunctionDecl 0x55734a4c66b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55734a4c6460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55734a4c6570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55734a4c6768 <line:493:22>
| `-NonNullAttr 0x55734a4c67c0 <col:63, col:77> 1
|-FunctionDecl 0x55734a4c6938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55734a4c6808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55734a4c69e0 <line:495:22>
| `-NonNullAttr 0x55734a4c6a38 <col:63, col:77> 1
|-FunctionDecl 0x55734a4c6b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55734a4c6a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55734a4c6be8 <line:497:22>
| `-NonNullAttr 0x55734a4c6c40 <col:52, col:66> 1
|-FunctionDecl 0x55734a4c6d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55734a4c6c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55734a4c6de8 <line:499:22>
| `-NonNullAttr 0x55734a4c6e40 <col:52, col:66> 1
|-FunctionDecl 0x55734a4c7088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55734a4c6e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55734a4c6f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55734a4c7138 <col:36>
| `-NonNullAttr 0x55734a4c7190 <col:66, col:83> 1 2
|-FunctionDecl 0x55734a4c7290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55734a4c71d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55734a4c7338 <line:504:22>
| `-NonNullAttr 0x55734a4c7390 <col:52, col:66> 1
|-FunctionDecl 0x55734a4c7628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55734a4c7440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55734a4c74c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55734a4c76d8 <line:508:22>
| `-NonNullAttr 0x55734a4c7730 <col:63, col:80> 1 2
|-FunctionDecl 0x55734a4c79f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55734a4c7778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55734a4c77f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55734a4c7878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55734a4c7ab0 <line:512:22>
| `-NonNullAttr 0x55734a4c7b08 <col:63, col:80> 1 3
|-FunctionDecl 0x55734a4c7c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55734a4c7b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55734a4c7cb8 <line:514:22>
| `-NonNullAttr 0x55734a4c7d10 <col:63, col:77> 1
|-FunctionDecl 0x55734a4c7f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55734a4c7dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55734a4c7fe0 <line:516:22>
| `-NonNullAttr 0x55734a4c8038 <col:63, col:77> 1
|-FunctionDecl 0x55734a4c8140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55734a4c8088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55734a4c81e8 <line:518:22>
| `-NonNullAttr 0x55734a4c8240 <col:63, col:77> 1
|-FunctionDecl 0x55734a4c8468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55734a4c8288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55734a4c8308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55734a4c8518 <line:522:22>
| `-NonNullAttr 0x55734a4c8570 <col:63, col:80> 1 2
|-FunctionDecl 0x55734a4c8778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55734a4c85b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55734a4c8638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55734a4c8828 <line:525:22>
| `-NonNullAttr 0x55734a4c8880 <col:63, col:77> 1
|-FunctionDecl 0x55734a4c8a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55734a4c88c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55734a4c8948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55734a4c8ad8 <line:528:22>
| `-NonNullAttr 0x55734a4c8b30 <col:63, col:80> 1 2
|-FunctionDecl 0x55734a4c8cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55734a4c8b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55734a4c8bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55734a4c8d68 <line:530:22>
| `-NonNullAttr 0x55734a4c8dc0 <col:63, col:77> 1
|-FunctionDecl 0x55734a4c9f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55734a4c8e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55734a4c9eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55734a4ca040 <line:534:22>
| `-NonNullAttr 0x55734a4ca098 <col:63, col:80> 1 2
|-FunctionDecl 0x55734a4ca228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55734a4ca0e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55734a4ca168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55734a4ca2d8 <line:537:22>
| `-NonNullAttr 0x55734a4ca330 <col:63, col:77> 1
|-FunctionDecl 0x55734a4ca4d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55734a4ca378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55734a4ca3f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55734a4ca588 <line:541:22>
| `-NonNullAttr 0x55734a4ca5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55734a4ca768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55734a4ca628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55734a4ca6a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55734a4ca818 <line:544:22>
| `-NonNullAttr 0x55734a4ca870 <col:63, col:77> 1
|-FunctionDecl 0x55734a4caa58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55734a4ca8b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55734a4ca938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55734a4cab08 <line:547:22>
| `-NonNullAttr 0x55734a4cab60 <col:63, col:80> 1 2
|-FunctionDecl 0x55734a4cace8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55734a4caba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55734a4cac28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55734a4cad98 <line:550:22>
| `-NonNullAttr 0x55734a4cadf0 <col:63, col:77> 1
|-FunctionDecl 0x55734a4cc168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55734a4cbf10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55734a4cc020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55734a4cc218 <col:29>
| `-NonNullAttr 0x55734a4cc270 <col:70, col:84> 1
|-FunctionDecl 0x55734a4cc3e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55734a4cc2b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55734a4cc490 <line:555:22>
| `-NonNullAttr 0x55734a4cc4e8 <col:63, col:77> 1
|-FunctionDecl 0x55734a4cc5f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55734a4cc538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55734a4cc698 <line:557:22>
| `-NonNullAttr 0x55734a4cc6f0 <col:52, col:66> 1
|-FunctionDecl 0x55734a4cc7f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55734a4cc738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55734a4cc898 <line:559:19>
| `-NonNullAttr 0x55734a4cc8f0 <col:49, col:63> 1
|-FunctionDecl 0x55734a4ccb28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55734a4cc938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55734a4cc9c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55734a4ccbd8 <col:39>
| `-NonNullAttr 0x55734a4ccc30 <col:69, col:86> 1 2
|-FunctionDecl 0x55734a4ccd30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55734a4ccc78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55734a4ccdd8 <line:564:22>
| `-NonNullAttr 0x55734a4cce30 <col:52, col:66> 1
|-FunctionDecl 0x55734a4ccf98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55734a4ccee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55734a4cd040 <line:566:22>
| `-NonNullAttr 0x55734a4cd098 <col:52, col:66> 1
|-FunctionDecl 0x55734a4cd258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55734a4cd0e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55734a4cd178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55734a4cd308 <col:39>
| `-NonNullAttr 0x55734a4cd360 <col:69, col:86> 1 2
|-FunctionDecl 0x55734a4cd460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55734a4cd3a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55734a4cd508 <line:571:22>
| `-NonNullAttr 0x55734a4cd560 <col:52, col:66> 1
|-FunctionDecl 0x55734a4cd748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55734a4cd610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55734a4cd7f0 <line:573:22>
| `-NonNullAttr 0x55734a4cd848 <col:63, col:77> 1
|-FunctionDecl 0x55734a4cd950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55734a4cd898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55734a4cd9f8 <line:575:22>
| `-NonNullAttr 0x55734a4cda50 <col:63, col:77> 1
|-FunctionDecl 0x55734a4cdc78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55734a4cda98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55734a4cdb18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55734a4cdd28 <line:579:22>
| `-NonNullAttr 0x55734a4cdd80 <col:63, col:80> 1 2
|-FunctionDecl 0x55734a4cdfa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55734a4cddc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55734a4cde48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55734a4ce058 <line:582:22>
| `-NonNullAttr 0x55734a4ce0b0 <col:63, col:77> 1
|-FunctionDecl 0x55734a4ce258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55734a4ce0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55734a4ce178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55734a4ce308 <line:586:22>
| `-NonNullAttr 0x55734a4ce360 <col:63, col:80> 1 2
|-FunctionDecl 0x55734a4ce4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55734a4ce3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55734a4ce428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55734a4ce598 <col:36>
| `-NonNullAttr 0x55734a4ce5f0 <col:77, col:91> 1
|-FunctionDecl 0x55734a4ce928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55734a4ce6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55734a4ce7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55734a4ce9d8 <line:591:22>
| `-NonNullAttr 0x55734a4cea30 <col:63, col:77> 1
|-FunctionDecl 0x55734a4ceba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55734a4cea78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55734a4cec50 <line:593:22>
| `-NonNullAttr 0x55734a4ceca8 <col:63, col:77> 1
|-FunctionDecl 0x55734a4cedb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55734a4cecf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55734a4cee58 <line:595:22>
| `-NonNullAttr 0x55734a4ceeb0 <col:52, col:66> 1
|-FunctionDecl 0x55734a4cefc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55734a4cef10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55734a4cf070 <line:597:22>
| `-NonNullAttr 0x55734a4cf0c8 <col:52, col:66> 1
|-FunctionDecl 0x55734a4cf2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55734a4cf118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55734a4cf190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55734a4cf3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55734a4cf6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55734a4cf428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55734a4cf4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55734a4cf530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55734a4cf790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55734a4cf9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55734a4cf870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55734a4cfa50 <line:606:22>
| `-NonNullAttr 0x55734a4cfaa8 <col:63, col:77> 1
|-FunctionDecl 0x55734a4cfbb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55734a4cfaf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55734a4cfc58 <line:608:22>
| `-NonNullAttr 0x55734a4cfcb0 <col:63, col:77> 1
|-FunctionDecl 0x55734a4cff10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55734a4cfcf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55734a4cfd78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55734a4cffc0 <line:612:22>
| `-NonNullAttr 0x55734a4d0018 <col:63, col:80> 1 2
|-FunctionDecl 0x55734a4d0228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55734a4d0068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55734a4d00e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55734a4d02d8 <col:37>
| `-NonNullAttr 0x55734a4d0330 <col:78, col:92> 1
|-FunctionDecl 0x55734a4d0548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55734a4d0378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55734a4d0420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55734a4d05f8 <line:618:22>
| `-NonNullAttr 0x55734a4d0650 <col:63, col:80> 1 2
|-FunctionDecl 0x55734a4d0818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55734a4d0698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55734a4d0710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55734a4d08c8 <line:621:22>
| `-NonNullAttr 0x55734a4d0920 <col:63, col:77> 1
|-FunctionDecl 0x55734a4d0bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55734a4d0a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55734a4d0a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55734a4d0c78 <line:623:22>
| `-NonNullAttr 0x55734a4d0cd0 <col:63, col:77> 1
|-FunctionDecl 0x55734a4d0e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55734a4d0d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55734a4d0f20 <line:625:22>
| `-NonNullAttr 0x55734a4d0f78 <col:63, col:77> 1
|-FunctionDecl 0x55734a4d1080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55734a4d0fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55734a4d1128 <line:627:22>
| `-NonNullAttr 0x55734a4d1180 <col:52, col:66> 1
|-FunctionDecl 0x55734a4d1280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55734a4d11c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55734a4d1328 <line:629:22>
| `-NonNullAttr 0x55734a4d1380 <col:52, col:66> 1
|-FunctionDecl 0x55734a4d1480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55734a4d13c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55734a4d1528 <line:631:22>
| `-NonNullAttr 0x55734a4d1580 <col:52, col:66> 1
|-FunctionDecl 0x55734a4d1958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55734a4d1660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55734a4d1770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55734a4d17f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55734a4d1a10 <line:635:22>
| `-NonNullAttr 0x55734a4d1a68 <col:63, col:77> 1
|-FunctionDecl 0x55734a4d1be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55734a4d1ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55734a4d1c90 <line:637:22>
| `-NonNullAttr 0x55734a4d1ce8 <col:63, col:77> 1
|-FunctionDecl 0x55734a4d1df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55734a4d1d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55734a4d1e98 <line:639:22>
| `-NonNullAttr 0x55734a4d1ef0 <col:52, col:66> 1
|-FunctionDecl 0x55734a4d20e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55734a4d1fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55734a4d2190 <line:641:22>
| `-NonNullAttr 0x55734a4d21e8 <col:63, col:77> 1
|-FunctionDecl 0x55734a4d22f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55734a4d2238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55734a4d2398 <line:643:22>
| `-NonNullAttr 0x55734a4d23f0 <col:63, col:77> 1
|-FunctionDecl 0x55734a4d2618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55734a4d2438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55734a4d24b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55734a4d26c8 <line:647:22>
| `-NonNullAttr 0x55734a4d2720 <col:63, col:80> 1 2
|-FunctionDecl 0x55734a4d2928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55734a4d2768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55734a4d27e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55734a4d29d8 <line:650:22>
| `-NonNullAttr 0x55734a4d2a30 <col:63, col:77> 1
|-FunctionDecl 0x55734a4d2d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55734a4d2b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55734a4d2c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55734a4d2e28 <line:653:22>
| `-NonNullAttr 0x55734a4d2e80 <col:63, col:77> 1
|-FunctionDecl 0x55734a4d2fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55734a4d2ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55734a4d3090 <col:69>
|-FunctionDecl 0x55734a4d3208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55734a4d30f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55734a4d32b0 <col:72>
|-FunctionDecl 0x55734a4d34e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55734a4d3318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55734a4d33c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55734a4d3598 <col:44>
|-FunctionDecl 0x55734a4d37b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55734a4d3600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55734a4d3678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55734a4d3868 <line:660:22>
| `-NonNullAttr 0x55734a4d38c0 <col:63, col:77> 2
|-FunctionDecl 0x55734a4d3d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55734a4d39a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55734a4d3ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55734a4d3bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55734a4d3dc0 <col:47>
|-FunctionDecl 0x55734a4d4f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55734a4d3e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55734a4d50b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55734a4d5020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55734a4d5180 <line:667:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55734a4d5240 <line:668:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55734a4d5300 <line:669:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55734a4d53b8 <line:670:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55734a4d5438 prev 0x55734a4d53b8 <line:671:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55734a4d54a0 <col:24> 'int' 0
|-VarDecl 0x55734a4d54d8 <line:672:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55734a4d5558 prev 0x55734a4d54d8 <line:673:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55734a4d55c0 <col:27> 'int' 0
|-VarDecl 0x55734a4d55f8 <line:674:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55734a4d5678 prev 0x55734a4d55f8 <line:675:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55734a4d56e0 <col:27> 'int' 0
|-VarDecl 0x55734a4d5710 <line:676:1, col:7> col:7 __unbuffered_p1_EAX$flush_delayed '_Bool'
|-VarDecl 0x55734a4d5790 <line:677:1, col:5> col:5 __unbuffered_p1_EAX$mem_tmp 'int'
|-VarDecl 0x55734a4d5808 <line:678:1, col:7> col:7 __unbuffered_p1_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x55734a4d5880 <line:679:1, col:7> col:7 __unbuffered_p1_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x55734a4d58f8 <line:680:1, col:7> col:7 __unbuffered_p1_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x55734a4d5970 <line:681:1, col:7> col:7 __unbuffered_p1_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x55734a4d59e8 <line:682:1, col:7> col:7 __unbuffered_p1_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x55734a4d5a60 <line:683:1, col:7> col:7 __unbuffered_p1_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x55734a4d5ad8 <line:684:1, col:7> col:7 used __unbuffered_p1_EAX$read_delayed '_Bool'
|-VarDecl 0x55734a4d5b58 <line:685:1, col:6> col:6 used __unbuffered_p1_EAX$read_delayed_var 'int *'
|-VarDecl 0x55734a4d5bd8 <line:686:1, col:5> col:5 __unbuffered_p1_EAX$w_buff0 'int'
|-VarDecl 0x55734a4d5c50 <line:687:1, col:7> col:7 __unbuffered_p1_EAX$w_buff0_used '_Bool'
|-VarDecl 0x55734a4d5cd0 <line:688:1, col:5> col:5 __unbuffered_p1_EAX$w_buff1 'int'
|-VarDecl 0x55734a4d5d48 <line:689:1, col:7> col:7 __unbuffered_p1_EAX$w_buff1_used '_Bool'
|-VarDecl 0x55734a4d5dc0 <line:690:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55734a4d5e38 <line:691:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55734a4d5eb8 <line:692:1, col:5> col:5 used x 'int'
|-VarDecl 0x55734a4d5f70 prev 0x55734a4d5eb8 <line:693:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55734a4d5fd8 <col:9> 'int' 0
|-VarDecl 0x55734a4d6008 <line:694:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x55734a4d6088 <line:695:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x55734a4d6100 <line:696:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x55734a4d6178 <line:697:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x55734a4d61f0 <line:698:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x55734a4d6268 <line:699:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x55734a4d62e0 <line:700:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x55734a4d6358 <line:701:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x55734a4d63d0 <line:702:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x55734a4d6450 <line:703:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x55734a4d64d0 <line:704:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x55734a4d6548 <line:705:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x55734a4d65c8 <line:706:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x55734a4d6640 <line:707:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x55734a4d66c0 <line:708:1, col:5> col:5 used y 'int'
|-VarDecl 0x55734a4d6740 prev 0x55734a4d66c0 <line:709:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55734a4d67a8 <col:9> 'int' 0
|-VarDecl 0x55734a4d67d8 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55734a4d6850 <line:711:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x55734a4d68c8 <line:712:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55734a4d69e0 prev 0x55734a4d4f60 <line:713:1, line:740:1> line:713:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55734a4d6948 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55734a4d81b8 <line:714:1, line:740:1>
|   |-CallExpr 0x55734a4d6af8 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55734a4d6ae0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55734a4d6a88 <col:3> 'void ()' Function 0x55734a47c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55734a4d6b70 <line:716:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55734a4d6b18 <col:3> 'int' lvalue Var 0x55734a4d5558 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55734a4d6b58 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55734a4d6b38 <col:25> 'int' lvalue Var 0x55734a4d6740 'y' 'int'
|   |-CallExpr 0x55734a4d6bc8 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55734a4d6bb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55734a4d6b90 <col:3> 'void ()' Function 0x55734a47c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55734a4d6c20 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55734a4d6c08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55734a4d6be8 <col:3> 'void ()' Function 0x55734a47c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55734a4d6c98 <line:719:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55734a4d6c40 <col:3> 'int' lvalue Var 0x55734a4d65c8 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55734a4d6c80 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55734a4d6c60 <col:15> 'int' lvalue Var 0x55734a4d64d0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55734a4d6cf8 <line:720:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55734a4d6cb8 <col:3> 'int' lvalue Var 0x55734a4d64d0 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x55734a4d6cd8 <col:15> 'int' 1
|   |-BinaryOperator 0x55734a4d6d70 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55734a4d6d18 <col:3> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55734a4d6d58 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55734a4d6d38 <col:20> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55734a4d6e08 <line:722:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55734a4d6d90 <col:3> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55734a4d6de0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55734a4d6db0 <col:27> 'int' 1
|   |-CallExpr 0x55734a4d6f98 <line:723:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55734a4d6f80 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55734a4d6e28 <col:3> 'void (int)' Function 0x55734a47c0d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55734a4d6f28 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55734a4d6f08 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55734a4d6ee8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55734a4d6ea0 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55734a4d6e88 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55734a4d6e48 <col:23> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55734a4d6ed0 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55734a4d6eb8 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55734a4d6e68 <col:41> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55734a4d7018 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55734a4d6fc0 <col:3> '_Bool' lvalue Var 0x55734a4d6268 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55734a4d7000 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55734a4d6fe0 <col:20> '_Bool' lvalue Var 0x55734a4d6100 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55734a4d7090 <line:725:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55734a4d7038 <col:3> '_Bool' lvalue Var 0x55734a4d62e0 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55734a4d7078 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55734a4d7058 <col:20> '_Bool' lvalue Var 0x55734a4d6178 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55734a4d7108 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55734a4d70b0 <col:3> '_Bool' lvalue Var 0x55734a4d6358 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55734a4d70f0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55734a4d70d0 <col:20> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55734a4d71a0 <line:727:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55734a4d7128 <col:3> '_Bool' lvalue Var 0x55734a4d6178 'x$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x55734a4d7178 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55734a4d7148 <col:27> 'int' 1
|   |-CallExpr 0x55734a4d71f8 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55734a4d71e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55734a4d71c0 <col:3> 'void ()' Function 0x55734a47c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55734a4d7250 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55734a4d7238 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55734a4d7218 <col:3> 'void ()' Function 0x55734a47c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55734a4d7538 <line:730:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55734a4d7270 <col:3> 'int' lvalue Var 0x55734a4d5f70 'x' 'int'
|   | `-ConditionalOperator 0x55734a4d7508 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55734a4d7330 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55734a4d72e8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55734a4d72d0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55734a4d7290 <col:7> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55734a4d7318 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55734a4d7300 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55734a4d72b0 <col:25> '_Bool' lvalue Var 0x55734a4d6178 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55734a4d74f0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55734a4d7350 <col:42> 'int' lvalue Var 0x55734a4d64d0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55734a4d74d0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55734a4d74a0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55734a4d7410 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55734a4d73c8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55734a4d73b0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55734a4d7370 <col:55> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55734a4d73f8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55734a4d73e0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55734a4d7390 <col:73> '_Bool' lvalue Var 0x55734a4d62e0 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55734a4d7470 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55734a4d7430 <col:90> 'int' lvalue Var 0x55734a4d65c8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55734a4d7488 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55734a4d7450 <col:102> 'int' lvalue Var 0x55734a4d5f70 'x' 'int'
|   |-BinaryOperator 0x55734a4d7740 <line:731:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55734a4d7558 <col:3> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55734a4d7728 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55734a4d76f8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55734a4d7618 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55734a4d75d0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55734a4d75b8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55734a4d7578 <col:20> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55734a4d7600 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55734a4d75e8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55734a4d7598 <col:38> '_Bool' lvalue Var 0x55734a4d6178 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55734a4d76b0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55734a4d7668 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55734a4d7638 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55734a4d76e0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55734a4d76c8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55734a4d7690 <col:66> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55734a4d7a28 <line:732:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55734a4d7760 <col:3> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55734a4d7a10 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55734a4d79e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55734a4d7900 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55734a4d7820 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55734a4d77d8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55734a4d77c0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55734a4d7780 <col:20> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55734a4d7808 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55734a4d77f0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55734a4d77a0 <col:38> '_Bool' lvalue Var 0x55734a4d6178 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55734a4d78e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55734a4d7898 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55734a4d7880 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55734a4d7840 <col:56> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55734a4d78c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55734a4d78b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55734a4d7860 <col:74> '_Bool' lvalue Var 0x55734a4d62e0 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55734a4d7998 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55734a4d7950 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55734a4d7920 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55734a4d79c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55734a4d79b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55734a4d7978 <col:102> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55734a4d7c30 <line:733:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55734a4d7a48 <col:3> '_Bool' lvalue Var 0x55734a4d6178 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55734a4d7c18 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55734a4d7be8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55734a4d7b08 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55734a4d7ac0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55734a4d7aa8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55734a4d7a68 <col:20> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55734a4d7af0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55734a4d7ad8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55734a4d7a88 <col:38> '_Bool' lvalue Var 0x55734a4d6178 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55734a4d7ba0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55734a4d7b58 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55734a4d7b28 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55734a4d7bd0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55734a4d7bb8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55734a4d7b80 <col:66> '_Bool' lvalue Var 0x55734a4d6178 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55734a4d7f18 <line:734:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55734a4d7c50 <col:3> '_Bool' lvalue Var 0x55734a4d62e0 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55734a4d7f00 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55734a4d7ed0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55734a4d7df0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55734a4d7d10 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55734a4d7cc8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55734a4d7cb0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55734a4d7c70 <col:20> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55734a4d7cf8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55734a4d7ce0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55734a4d7c90 <col:38> '_Bool' lvalue Var 0x55734a4d6178 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55734a4d7dd0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55734a4d7d88 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55734a4d7d70 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55734a4d7d30 <col:56> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55734a4d7db8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55734a4d7da0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55734a4d7d50 <col:74> '_Bool' lvalue Var 0x55734a4d62e0 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55734a4d7e88 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55734a4d7e40 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55734a4d7e10 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55734a4d7eb8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55734a4d7ea0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55734a4d7e68 <col:102> '_Bool' lvalue Var 0x55734a4d62e0 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55734a4d7f90 <line:735:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55734a4d7f58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55734a4d7f38 <col:3> 'void ()' Function 0x55734a47c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55734a4d7fe8 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55734a4d7fd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55734a4d7fb0 <col:3> 'void ()' Function 0x55734a47c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55734a4d80a0 <line:737:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55734a4d8008 <col:3> 'int' lvalue Var 0x55734a4d5438 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55734a4d8080 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55734a4d8068 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55734a4d8028 <col:22> 'int' lvalue Var 0x55734a4d5438 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55734a4d8048 <col:41> 'int' 1
|   |-CallExpr 0x55734a4d80f8 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55734a4d80e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55734a4d80c0 <col:3> 'void ()' Function 0x55734a47c410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55734a4d81a8 <line:739:3, col:36>
|     `-CallExpr 0x55734a4d8188 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55734a4d8170 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55734a4d8118 <col:10> 'void *(void)' Function 0x55734a47be68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55734a4d8340 prev 0x55734a4d50b8 <line:741:1, line:776:1> line:741:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55734a4d82a8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55734a4dd900 <line:742:1, line:776:1>
|   |-CallExpr 0x55734a4d8420 <line:743:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55734a4d8408 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55734a4d83e8 <col:3> 'void ()' Function 0x55734a47c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55734a4d84d0 <line:744:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55734a4d8440 <col:3> '_Bool' lvalue Var 0x55734a4d67d8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55734a4d84b8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55734a4d8498 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55734a4d8480 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55734a4d8460 <col:19> 'void *(void)' Function 0x55734a47be68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55734a4d8580 <line:745:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55734a4d84f0 <col:3> '_Bool' lvalue Var 0x55734a4d68c8 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55734a4d8568 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55734a4d8548 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55734a4d8530 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55734a4d8510 <col:19> 'void *(void)' Function 0x55734a47be68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55734a4d85f8 <line:746:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55734a4d85a0 <col:3> '_Bool' lvalue Var 0x55734a4d6008 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55734a4d85e0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55734a4d85c0 <col:21> '_Bool' lvalue Var 0x55734a4d68c8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55734a4d8670 <line:747:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55734a4d8618 <col:3> 'int' lvalue Var 0x55734a4d6088 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55734a4d8658 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55734a4d8638 <col:15> 'int' lvalue Var 0x55734a4d5f70 'x' 'int'
|   |-BinaryOperator 0x55734a4d8720 <line:748:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55734a4d8690 <col:3> '_Bool' lvalue Var 0x55734a4d6850 'weak$$choice1' '_Bool'
|   | `-ImplicitCastExpr 0x55734a4d8708 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55734a4d86e8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55734a4d86d0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55734a4d86b0 <col:19> 'void *(void)' Function 0x55734a47be68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55734a4d9158 <line:749:3, col:363> 'int' '='
|   | |-DeclRefExpr 0x55734a4d8740 <col:3> 'int' lvalue Var 0x55734a4d5f70 'x' 'int'
|   | `-ConditionalOperator 0x55734a4d9128 <col:7, col:363> 'int'
|   |   |-UnaryOperator 0x55734a4d8798 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | `-ImplicitCastExpr 0x55734a4d8780 <col:8> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55734a4d8760 <col:8> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |   |-ImplicitCastExpr 0x55734a4d9110 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55734a4d87b0 <col:25> 'int' lvalue Var 0x55734a4d5f70 'x' 'int'
|   |   `-ParenExpr 0x55734a4d90f0 <col:29, col:363> 'int'
|   |     `-ConditionalOperator 0x55734a4d90c0 <col:30, col:362> 'int'
|   |       |-BinaryOperator 0x55734a4d8870 <col:30, col:48> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55734a4d8828 <col:30> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55734a4d8810 <col:30> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55734a4d87d0 <col:30> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55734a4d8858 <col:48> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55734a4d8840 <col:48> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55734a4d87f0 <col:48> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55734a4d90a8 <col:65> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55734a4d8890 <col:65> 'int' lvalue Var 0x55734a4d64d0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55734a4d9088 <col:77, col:362> 'int'
|   |         `-ConditionalOperator 0x55734a4d9058 <col:78, col:361> 'int'
|   |           |-BinaryOperator 0x55734a4d8a30 <col:78, col:134> 'int' '&&'
|   |           | |-BinaryOperator 0x55734a4d89c0 <col:78, col:115> 'int' '&&'
|   |           | | |-BinaryOperator 0x55734a4d8950 <col:78, col:97> 'int' '&&'
|   |           | | | |-ImplicitCastExpr 0x55734a4d8938 <col:78> 'int' <IntegralCast>
|   |           | | | | `-ImplicitCastExpr 0x55734a4d8920 <col:78> '_Bool' <LValueToRValue>
|   |           | | | |   `-DeclRefExpr 0x55734a4d88b0 <col:78> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |           | | | `-UnaryOperator 0x55734a4d8908 <col:96, col:97> 'int' prefix '!' cannot overflow
|   |           | | |   `-ImplicitCastExpr 0x55734a4d88f0 <col:97> '_Bool' <LValueToRValue>
|   |           | | |     `-DeclRefExpr 0x55734a4d88d0 <col:97> '_Bool' lvalue Var 0x55734a4d6358 'x$r_buff1_thd2' '_Bool'
|   |           | | `-ImplicitCastExpr 0x55734a4d89a8 <col:115> 'int' <IntegralCast>
|   |           | |   `-ImplicitCastExpr 0x55734a4d8990 <col:115> '_Bool' <LValueToRValue>
|   |           | |     `-DeclRefExpr 0x55734a4d8970 <col:115> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
|   |           | `-UnaryOperator 0x55734a4d8a18 <col:133, col:134> 'int' prefix '!' cannot overflow
|   |           |   `-ImplicitCastExpr 0x55734a4d8a00 <col:134> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55734a4d89e0 <col:134> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |           |-ParenExpr 0x55734a4d8c18 <col:151, col:211> 'int'
|   |           | `-ConditionalOperator 0x55734a4d8be8 <col:152, col:210> 'int'
|   |           |   |-ImplicitCastExpr 0x55734a4d8bb8 <col:152> 'int' <IntegralCast>
|   |           |   | `-ImplicitCastExpr 0x55734a4d8ba0 <col:152> '_Bool' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x55734a4d8a50 <col:152> '_Bool' lvalue Var 0x55734a4d67d8 'weak$$choice0' '_Bool'
|   |           |   |-ImplicitCastExpr 0x55734a4d8bd0 <col:168> 'int' <LValueToRValue>
|   |           |   | `-DeclRefExpr 0x55734a4d8a70 <col:168> 'int' lvalue Var 0x55734a4d5f70 'x' 'int'
|   |           |   `-ParenExpr 0x55734a4d8b80 <col:172, col:210> 'int'
|   |           |     `-ConditionalOperator 0x55734a4d8b50 <col:173, col:201> 'int'
|   |           |       |-ImplicitCastExpr 0x55734a4d8b08 <col:173> 'int' <IntegralCast>
|   |           |       | `-ImplicitCastExpr 0x55734a4d8af0 <col:173> '_Bool' <LValueToRValue>
|   |           |       |   `-DeclRefExpr 0x55734a4d8a90 <col:173> '_Bool' lvalue Var 0x55734a4d6850 'weak$$choice1' '_Bool'
|   |           |       |-ImplicitCastExpr 0x55734a4d8b20 <col:189> 'int' <LValueToRValue>
|   |           |       | `-DeclRefExpr 0x55734a4d8ab0 <col:189> 'int' lvalue Var 0x55734a4d64d0 'x$w_buff0' 'int'
|   |           |       `-ImplicitCastExpr 0x55734a4d8b38 <col:201> 'int' <LValueToRValue>
|   |           |         `-DeclRefExpr 0x55734a4d8ad0 <col:201> 'int' lvalue Var 0x55734a4d65c8 'x$w_buff1' 'int'
|   |           `-ParenExpr 0x55734a4d9038 <col:215, col:361> 'int'
|   |             `-ConditionalOperator 0x55734a4d9008 <col:216, col:360> 'int'
|   |               |-BinaryOperator 0x55734a4d8db8 <col:216, col:271> 'int' '&&'
|   |               | |-BinaryOperator 0x55734a4d8d48 <col:216, col:252> 'int' '&&'
|   |               | | |-BinaryOperator 0x55734a4d8cd8 <col:216, col:234> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55734a4d8c90 <col:216> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55734a4d8c78 <col:216> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55734a4d8c38 <col:216> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |               | | | `-ImplicitCastExpr 0x55734a4d8cc0 <col:234> 'int' <IntegralCast>
|   |               | | |   `-ImplicitCastExpr 0x55734a4d8ca8 <col:234> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55734a4d8c58 <col:234> '_Bool' lvalue Var 0x55734a4d6358 'x$r_buff1_thd2' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55734a4d8d30 <col:252> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55734a4d8d18 <col:252> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55734a4d8cf8 <col:252> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55734a4d8da0 <col:270, col:271> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55734a4d8d88 <col:271> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55734a4d8d68 <col:271> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |               |-ParenExpr 0x55734a4d8ec8 <col:288, col:326> 'int'
|   |               | `-ConditionalOperator 0x55734a4d8e98 <col:289, col:317> 'int'
|   |               |   |-ImplicitCastExpr 0x55734a4d8e50 <col:289> 'int' <IntegralCast>
|   |               |   | `-ImplicitCastExpr 0x55734a4d8e38 <col:289> '_Bool' <LValueToRValue>
|   |               |   |   `-DeclRefExpr 0x55734a4d8dd8 <col:289> '_Bool' lvalue Var 0x55734a4d67d8 'weak$$choice0' '_Bool'
|   |               |   |-ImplicitCastExpr 0x55734a4d8e68 <col:305> 'int' <LValueToRValue>
|   |               |   | `-DeclRefExpr 0x55734a4d8df8 <col:305> 'int' lvalue Var 0x55734a4d65c8 'x$w_buff1' 'int'
|   |               |   `-ImplicitCastExpr 0x55734a4d8e80 <col:317> 'int' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55734a4d8e18 <col:317> 'int' lvalue Var 0x55734a4d64d0 'x$w_buff0' 'int'
|   |               `-ParenExpr 0x55734a4d8fe8 <col:330, col:360> 'int'
|   |                 `-ConditionalOperator 0x55734a4d8fb8 <col:331, col:359> 'int'
|   |                   |-ImplicitCastExpr 0x55734a4d8f60 <col:331> 'int' <IntegralCast>
|   |                   | `-ImplicitCastExpr 0x55734a4d8f48 <col:331> '_Bool' <LValueToRValue>
|   |                   |   `-DeclRefExpr 0x55734a4d8ee8 <col:331> '_Bool' lvalue Var 0x55734a4d67d8 'weak$$choice0' '_Bool'
|   |                   |-ImplicitCastExpr 0x55734a4d8f78 <col:347> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55734a4d8f08 <col:347> 'int' lvalue Var 0x55734a4d64d0 'x$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x55734a4d8fa0 <col:359> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55734a4d8f28 <col:359> 'int' lvalue Var 0x55734a4d5f70 'x' 'int'
|   |-BinaryOperator 0x55734a4d98f8 <line:750:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x55734a4d9178 <col:3> 'int' lvalue Var 0x55734a4d64d0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55734a4d98c8 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x55734a4d9898 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55734a4d9880 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55734a4d9198 <col:15> '_Bool' lvalue Var 0x55734a4d68c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55734a4d98b0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55734a4d91b8 <col:31> 'int' lvalue Var 0x55734a4d64d0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55734a4d9860 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x55734a4d9830 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x55734a4d9210 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x55734a4d91f8 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55734a4d91d8 <col:45> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x55734a4d9818 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55734a4d9228 <col:62> 'int' lvalue Var 0x55734a4d64d0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55734a4d97f8 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x55734a4d97c8 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x55734a4d92e8 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55734a4d92a0 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55734a4d9288 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55734a4d9248 <col:75> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55734a4d92d0 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55734a4d92b8 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55734a4d9268 <col:93> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55734a4d97b0 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55734a4d9308 <col:110> 'int' lvalue Var 0x55734a4d64d0 'x$w_buff0' 'int'
|   |           `-ParenExpr 0x55734a4d9790 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x55734a4d9760 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x55734a4d94a8 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x55734a4d9438 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x55734a4d93c8 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55734a4d93b0 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55734a4d9398 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55734a4d9328 <col:123> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x55734a4d9380 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x55734a4d9368 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55734a4d9348 <col:142> '_Bool' lvalue Var 0x55734a4d6358 'x$r_buff1_thd2' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55734a4d9420 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55734a4d9408 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55734a4d93e8 <col:160> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55734a4d9490 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55734a4d9478 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55734a4d9458 <col:179> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |               |-ImplicitCastExpr 0x55734a4d9748 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x55734a4d94c8 <col:196> 'int' lvalue Var 0x55734a4d64d0 'x$w_buff0' 'int'
|   |               `-ParenExpr 0x55734a4d9728 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x55734a4d96f8 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x55734a4d9668 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x55734a4d95f8 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x55734a4d9588 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x55734a4d9540 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x55734a4d9528 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x55734a4d94e8 <col:209> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x55734a4d9570 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x55734a4d9558 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x55734a4d9508 <col:227> '_Bool' lvalue Var 0x55734a4d6358 'x$r_buff1_thd2' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x55734a4d95e0 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x55734a4d95c8 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x55734a4d95a8 <col:245> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x55734a4d9650 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x55734a4d9638 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x55734a4d9618 <col:264> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |                   |-ImplicitCastExpr 0x55734a4d96c8 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55734a4d9688 <col:281> 'int' lvalue Var 0x55734a4d64d0 'x$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x55734a4d96e0 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55734a4d96a8 <col:293> 'int' lvalue Var 0x55734a4d64d0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55734a4da0b0 <line:751:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x55734a4d9918 <col:3> 'int' lvalue Var 0x55734a4d65c8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55734a4da080 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x55734a4da050 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55734a4da038 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55734a4d9938 <col:15> '_Bool' lvalue Var 0x55734a4d68c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55734a4da068 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55734a4d9958 <col:31> 'int' lvalue Var 0x55734a4d65c8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55734a4da018 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x55734a4d9fe8 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x55734a4d99b0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x55734a4d9998 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55734a4d9978 <col:45> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x55734a4d9fd0 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55734a4d99c8 <col:62> 'int' lvalue Var 0x55734a4d65c8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55734a4d9fb0 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x55734a4d9f68 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x55734a4d9a88 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55734a4d9a40 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55734a4d9a28 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55734a4d99e8 <col:75> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55734a4d9a70 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55734a4d9a58 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55734a4d9a08 <col:93> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55734a4d9f50 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55734a4d9aa8 <col:110> 'int' lvalue Var 0x55734a4d65c8 'x$w_buff1' 'int'
|   |           `-ParenExpr 0x55734a4d9f30 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x55734a4d9f00 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x55734a4d9c48 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x55734a4d9bd8 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x55734a4d9b68 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55734a4d9b50 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55734a4d9b38 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55734a4d9ac8 <col:123> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x55734a4d9b20 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x55734a4d9b08 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55734a4d9ae8 <col:142> '_Bool' lvalue Var 0x55734a4d6358 'x$r_buff1_thd2' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55734a4d9bc0 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55734a4d9ba8 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55734a4d9b88 <col:160> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55734a4d9c30 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55734a4d9c18 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55734a4d9bf8 <col:179> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |               |-ImplicitCastExpr 0x55734a4d9ee8 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x55734a4d9c68 <col:196> 'int' lvalue Var 0x55734a4d65c8 'x$w_buff1' 'int'
|   |               `-ParenExpr 0x55734a4d9ec8 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x55734a4d9e98 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x55734a4d9e08 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x55734a4d9d98 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x55734a4d9d28 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x55734a4d9ce0 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x55734a4d9cc8 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x55734a4d9c88 <col:209> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x55734a4d9d10 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x55734a4d9cf8 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x55734a4d9ca8 <col:227> '_Bool' lvalue Var 0x55734a4d6358 'x$r_buff1_thd2' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x55734a4d9d80 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x55734a4d9d68 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x55734a4d9d48 <col:245> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x55734a4d9df0 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x55734a4d9dd8 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x55734a4d9db8 <col:264> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |                   |-ImplicitCastExpr 0x55734a4d9e68 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55734a4d9e28 <col:281> 'int' lvalue Var 0x55734a4d65c8 'x$w_buff1' 'int'
|   |                   `-ImplicitCastExpr 0x55734a4d9e80 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55734a4d9e48 <col:293> 'int' lvalue Var 0x55734a4d65c8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55734a4da988 <line:752:3, col:349> '_Bool' '='
|   | |-DeclRefExpr 0x55734a4da0d0 <col:3> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55734a4da970 <col:20, col:349> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55734a4da940 <col:20, col:349> 'int'
|   |     |-ImplicitCastExpr 0x55734a4da8f8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55734a4da8e0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55734a4da0f0 <col:20> '_Bool' lvalue Var 0x55734a4d68c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55734a4da928 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55734a4da910 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55734a4da110 <col:36> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55734a4da8c0 <col:53, col:349> 'int'
|   |       `-ConditionalOperator 0x55734a4da890 <col:54, col:348> 'int'
|   |         |-UnaryOperator 0x55734a4da168 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55734a4da150 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55734a4da130 <col:55> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55734a4da878 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55734a4da860 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55734a4da180 <col:72> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55734a4da840 <col:89, col:348> 'int'
|   |           `-ConditionalOperator 0x55734a4da810 <col:90, col:347> 'int'
|   |             |-BinaryOperator 0x55734a4da240 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55734a4da1f8 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55734a4da1e0 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55734a4da1a0 <col:90> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55734a4da228 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55734a4da210 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55734a4da1c0 <col:108> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55734a4da7f8 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55734a4da290 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55734a4da260 <col:132> 'int' 0
|   |             `-ParenExpr 0x55734a4da7d8 <col:136, col:347> 'int'
|   |               `-ConditionalOperator 0x55734a4da7a8 <col:137, col:346> 'int'
|   |                 |-BinaryOperator 0x55734a4da438 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55734a4da3c8 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55734a4da358 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55734a4da340 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55734a4da328 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55734a4da2b8 <col:137> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55734a4da310 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55734a4da2f8 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55734a4da2d8 <col:156> '_Bool' lvalue Var 0x55734a4d6358 'x$r_buff1_thd2' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55734a4da3b0 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55734a4da398 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55734a4da378 <col:174> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55734a4da420 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55734a4da408 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55734a4da3e8 <col:193> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |                 |-BinaryOperator 0x55734a4da4f8 <col:210, col:228> 'int' '||'
|   |                 | |-ImplicitCastExpr 0x55734a4da4e0 <col:210> 'int' <IntegralCast>
|   |                 | | `-ImplicitCastExpr 0x55734a4da4c8 <col:210> '_Bool' <LValueToRValue>
|   |                 | |   `-DeclRefExpr 0x55734a4da458 <col:210> '_Bool' lvalue Var 0x55734a4d67d8 'weak$$choice0' '_Bool'
|   |                 | `-UnaryOperator 0x55734a4da4b0 <col:227, col:228> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55734a4da498 <col:228> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55734a4da478 <col:228> '_Bool' lvalue Var 0x55734a4d6850 'weak$$choice1' '_Bool'
|   |                 `-ParenExpr 0x55734a4da788 <col:244, col:346> 'int'
|   |                   `-ConditionalOperator 0x55734a4da758 <col:245, col:333> 'int'
|   |                     |-BinaryOperator 0x55734a4da698 <col:245, col:300> 'int' '&&'
|   |                     | |-BinaryOperator 0x55734a4da628 <col:245, col:281> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55734a4da5b8 <col:245, col:263> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55734a4da570 <col:245> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55734a4da558 <col:245> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55734a4da518 <col:245> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55734a4da5a0 <col:263> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55734a4da588 <col:263> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55734a4da538 <col:263> '_Bool' lvalue Var 0x55734a4d6358 'x$r_buff1_thd2' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55734a4da610 <col:281> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55734a4da5f8 <col:281> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55734a4da5d8 <col:281> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55734a4da680 <col:299, col:300> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55734a4da668 <col:300> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55734a4da648 <col:300> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |                     |-ImplicitCastExpr 0x55734a4da710 <col:317> 'int' <IntegralCast>
|   |                     | `-ImplicitCastExpr 0x55734a4da6f8 <col:317> '_Bool' <LValueToRValue>
|   |                     |   `-DeclRefExpr 0x55734a4da6b8 <col:317> '_Bool' lvalue Var 0x55734a4d67d8 'weak$$choice0' '_Bool'
|   |                     `-ImplicitCastExpr 0x55734a4da740 <col:333> 'int' <IntegralCast>
|   |                       `-ImplicitCastExpr 0x55734a4da728 <col:333> '_Bool' <LValueToRValue>
|   |                         `-DeclRefExpr 0x55734a4da6d8 <col:333> '_Bool' lvalue Var 0x55734a4d67d8 'weak$$choice0' '_Bool'
|   |-BinaryOperator 0x55734a4db250 <line:753:3, col:321> '_Bool' '='
|   | |-DeclRefExpr 0x55734a4da9a8 <col:3> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55734a4db238 <col:20, col:321> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55734a4db208 <col:20, col:321> 'int'
|   |     |-ImplicitCastExpr 0x55734a4db1c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55734a4db1a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55734a4da9c8 <col:20> '_Bool' lvalue Var 0x55734a4d68c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55734a4db1f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55734a4db1d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55734a4da9e8 <col:36> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55734a4db188 <col:53, col:321> 'int'
|   |       `-ConditionalOperator 0x55734a4db158 <col:54, col:320> 'int'
|   |         |-UnaryOperator 0x55734a4daa40 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55734a4daa28 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55734a4daa08 <col:55> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55734a4db140 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55734a4db128 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55734a4daa58 <col:72> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55734a4db108 <col:89, col:320> 'int'
|   |           `-ConditionalOperator 0x55734a4db0d8 <col:90, col:319> 'int'
|   |             |-BinaryOperator 0x55734a4dab18 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55734a4daad0 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55734a4daab8 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55734a4daa78 <col:90> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55734a4dab00 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55734a4daae8 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55734a4daa98 <col:108> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55734a4db0c0 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55734a4dab68 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55734a4dab38 <col:132> 'int' 0
|   |             `-ParenExpr 0x55734a4db0a0 <col:136, col:319> 'int'
|   |               `-ConditionalOperator 0x55734a4db070 <col:137, col:318> 'int'
|   |                 |-BinaryOperator 0x55734a4dad10 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55734a4daca0 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55734a4dac30 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55734a4dac18 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55734a4dac00 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55734a4dab90 <col:137> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55734a4dabe8 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55734a4dabd0 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55734a4dabb0 <col:156> '_Bool' lvalue Var 0x55734a4d6358 'x$r_buff1_thd2' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55734a4dac88 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55734a4dac70 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55734a4dac50 <col:174> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55734a4dacf8 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55734a4dace0 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55734a4dacc0 <col:193> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |                 |-ImplicitCastExpr 0x55734a4db058 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x55734a4db040 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x55734a4dad30 <col:210> '_Bool' lvalue Var 0x55734a4d67d8 'weak$$choice0' '_Bool'
|   |                 `-ParenExpr 0x55734a4db020 <col:226, col:318> 'int'
|   |                   `-ConditionalOperator 0x55734a4daff0 <col:227, col:317> 'int'
|   |                     |-BinaryOperator 0x55734a4daed0 <col:227, col:282> 'int' '&&'
|   |                     | |-BinaryOperator 0x55734a4dae60 <col:227, col:263> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55734a4dadf0 <col:227, col:245> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55734a4dada8 <col:227> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55734a4dad90 <col:227> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55734a4dad50 <col:227> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55734a4dadd8 <col:245> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55734a4dadc0 <col:245> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55734a4dad70 <col:245> '_Bool' lvalue Var 0x55734a4d6358 'x$r_buff1_thd2' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55734a4dae48 <col:263> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55734a4dae30 <col:263> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55734a4dae10 <col:263> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55734a4daeb8 <col:281, col:282> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55734a4daea0 <col:282> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55734a4dae80 <col:282> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |                     |-ImplicitCastExpr 0x55734a4dafc0 <col:299, col:306> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55734a4daf20 <col:299, col:306> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55734a4daef0 <col:306> 'int' 0
|   |                     `-ImplicitCastExpr 0x55734a4dafd8 <col:310, col:317> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55734a4daf78 <col:310, col:317> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55734a4daf48 <col:317> 'int' 0
|   |-BinaryOperator 0x55734a4dbaf8 <line:754:3, col:322> '_Bool' '='
|   | |-DeclRefExpr 0x55734a4db270 <col:3> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55734a4dbae0 <col:20, col:322> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55734a4dbab0 <col:20, col:322> 'int'
|   |     |-ImplicitCastExpr 0x55734a4dba68 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55734a4dba50 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55734a4db290 <col:20> '_Bool' lvalue Var 0x55734a4d68c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55734a4dba98 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55734a4dba80 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55734a4db2b0 <col:36> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55734a4dba30 <col:53, col:322> 'int'
|   |       `-ConditionalOperator 0x55734a4dba00 <col:54, col:321> 'int'
|   |         |-UnaryOperator 0x55734a4db308 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55734a4db2f0 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55734a4db2d0 <col:55> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55734a4db9e8 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55734a4db9d0 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55734a4db320 <col:72> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55734a4db9b0 <col:89, col:321> 'int'
|   |           `-ConditionalOperator 0x55734a4db980 <col:90, col:320> 'int'
|   |             |-BinaryOperator 0x55734a4db3e0 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55734a4db398 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55734a4db380 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55734a4db340 <col:90> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55734a4db3c8 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55734a4db3b0 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55734a4db360 <col:108> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55734a4db968 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55734a4db430 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55734a4db400 <col:132> 'int' 0
|   |             `-ParenExpr 0x55734a4db948 <col:136, col:320> 'int'
|   |               `-ConditionalOperator 0x55734a4db918 <col:137, col:319> 'int'
|   |                 |-BinaryOperator 0x55734a4db5d8 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55734a4db568 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55734a4db4f8 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55734a4db4e0 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55734a4db4c8 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55734a4db458 <col:137> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55734a4db4b0 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55734a4db498 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55734a4db478 <col:156> '_Bool' lvalue Var 0x55734a4d6358 'x$r_buff1_thd2' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55734a4db550 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55734a4db538 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55734a4db518 <col:174> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55734a4db5c0 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55734a4db5a8 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55734a4db588 <col:193> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |                 |-ImplicitCastExpr 0x55734a4db900 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x55734a4db8e8 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x55734a4db5f8 <col:210> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |                 `-ParenExpr 0x55734a4db8c8 <col:227, col:319> 'int'
|   |                   `-ConditionalOperator 0x55734a4db898 <col:228, col:318> 'int'
|   |                     |-BinaryOperator 0x55734a4db798 <col:228, col:283> 'int' '&&'
|   |                     | |-BinaryOperator 0x55734a4db728 <col:228, col:264> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55734a4db6b8 <col:228, col:246> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55734a4db670 <col:228> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55734a4db658 <col:228> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55734a4db618 <col:228> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55734a4db6a0 <col:246> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55734a4db688 <col:246> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55734a4db638 <col:246> '_Bool' lvalue Var 0x55734a4d6358 'x$r_buff1_thd2' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55734a4db710 <col:264> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55734a4db6f8 <col:264> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55734a4db6d8 <col:264> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55734a4db780 <col:282, col:283> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55734a4db768 <col:283> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55734a4db748 <col:283> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |                     |-ImplicitCastExpr 0x55734a4db868 <col:300, col:307> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55734a4db7e8 <col:300, col:307> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55734a4db7b8 <col:307> 'int' 0
|   |                     `-ImplicitCastExpr 0x55734a4db880 <col:311, col:318> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55734a4db840 <col:311, col:318> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55734a4db810 <col:318> 'int' 0
|   |-BinaryOperator 0x55734a4dc4d0 <line:755:3, col:351> '_Bool' '='
|   | |-DeclRefExpr 0x55734a4dbb18 <col:3> '_Bool' lvalue Var 0x55734a4d6358 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55734a4dc4b8 <col:20, col:351> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55734a4dc488 <col:20, col:351> 'int'
|   |     |-ImplicitCastExpr 0x55734a4dc440 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55734a4dc428 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55734a4dbb38 <col:20> '_Bool' lvalue Var 0x55734a4d68c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55734a4dc470 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55734a4dc458 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55734a4dbb58 <col:36> '_Bool' lvalue Var 0x55734a4d6358 'x$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x55734a4dc408 <col:53, col:351> 'int'
|   |       `-ConditionalOperator 0x55734a4dc3d8 <col:54, col:350> 'int'
|   |         |-UnaryOperator 0x55734a4dbbb0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55734a4dbb98 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55734a4dbb78 <col:55> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55734a4dc3c0 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55734a4dc3a8 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55734a4dbbc8 <col:72> '_Bool' lvalue Var 0x55734a4d6358 'x$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x55734a4dc388 <col:89, col:350> 'int'
|   |           `-ConditionalOperator 0x55734a4dc358 <col:90, col:349> 'int'
|   |             |-BinaryOperator 0x55734a4dbc88 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55734a4dbc40 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55734a4dbc28 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55734a4dbbe8 <col:90> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55734a4dbc70 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55734a4dbc58 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55734a4dbc08 <col:108> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55734a4dc340 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55734a4dbcd8 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55734a4dbca8 <col:132> 'int' 0
|   |             `-ParenExpr 0x55734a4dc320 <col:136, col:349> 'int'
|   |               `-ConditionalOperator 0x55734a4dc2f0 <col:137, col:348> 'int'
|   |                 |-BinaryOperator 0x55734a4dbe80 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55734a4dbe10 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55734a4dbda0 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55734a4dbd88 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55734a4dbd70 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55734a4dbd00 <col:137> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55734a4dbd58 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55734a4dbd40 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55734a4dbd20 <col:156> '_Bool' lvalue Var 0x55734a4d6358 'x$r_buff1_thd2' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55734a4dbdf8 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55734a4dbde0 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55734a4dbdc0 <col:174> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55734a4dbe68 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55734a4dbe50 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55734a4dbe30 <col:193> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |                 |-ParenExpr 0x55734a4dc000 <col:210, col:252> 'int'
|   |                 | `-ConditionalOperator 0x55734a4dbfd0 <col:211, col:251> 'int'
|   |                 |   |-ImplicitCastExpr 0x55734a4dbf50 <col:211> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x55734a4dbf38 <col:211> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x55734a4dbea0 <col:211> '_Bool' lvalue Var 0x55734a4d67d8 'weak$$choice0' '_Bool'
|   |                 |   |-ImplicitCastExpr 0x55734a4dbf80 <col:227> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x55734a4dbf68 <col:227> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x55734a4dbec0 <col:227> '_Bool' lvalue Var 0x55734a4d6358 'x$r_buff1_thd2' '_Bool'
|   |                 |   `-ImplicitCastExpr 0x55734a4dbf98 <col:244, col:251> 'int' <IntegralCast>
|   |                 |     `-CStyleCastExpr 0x55734a4dbf10 <col:244, col:251> '_Bool' <IntegralToBoolean>
|   |                 |       `-IntegerLiteral 0x55734a4dbee0 <col:251> 'int' 0
|   |                 `-ParenExpr 0x55734a4dc2d0 <col:256, col:348> 'int'
|   |                   `-ConditionalOperator 0x55734a4dc2a0 <col:257, col:347> 'int'
|   |                     |-BinaryOperator 0x55734a4dc1a0 <col:257, col:312> 'int' '&&'
|   |                     | |-BinaryOperator 0x55734a4dc130 <col:257, col:293> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55734a4dc0c0 <col:257, col:275> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55734a4dc078 <col:257> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55734a4dc060 <col:257> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55734a4dc020 <col:257> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55734a4dc0a8 <col:275> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55734a4dc090 <col:275> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55734a4dc040 <col:275> '_Bool' lvalue Var 0x55734a4d6358 'x$r_buff1_thd2' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55734a4dc118 <col:293> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55734a4dc100 <col:293> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55734a4dc0e0 <col:293> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55734a4dc188 <col:311, col:312> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55734a4dc170 <col:312> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55734a4dc150 <col:312> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |                     |-ImplicitCastExpr 0x55734a4dc270 <col:329, col:336> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55734a4dc1f0 <col:329, col:336> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55734a4dc1c0 <col:336> 'int' 0
|   |                     `-ImplicitCastExpr 0x55734a4dc288 <col:340, col:347> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55734a4dc248 <col:340, col:347> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55734a4dc218 <col:347> 'int' 0
|   |-BinaryOperator 0x55734a4dc568 <line:756:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55734a4dc4f0 <col:3> '_Bool' lvalue Var 0x55734a4d5ad8 '__unbuffered_p1_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55734a4dc540 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55734a4dc510 <col:45> 'int' 1
|   |-BinaryOperator 0x55734a4dc5e0 <line:757:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x55734a4dc588 <col:3> 'int *' lvalue Var 0x55734a4d5b58 '__unbuffered_p1_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x55734a4dc5c8 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x55734a4dc5a8 <col:43> 'int' lvalue Var 0x55734a4d5f70 'x' 'int'
|   |-BinaryOperator 0x55734a4dc658 <line:758:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55734a4dc600 <col:3> 'int' lvalue Var 0x55734a4d5678 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55734a4dc640 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55734a4dc620 <col:25> 'int' lvalue Var 0x55734a4d5f70 'x' 'int'
|   |-BinaryOperator 0x55734a4dc788 <line:759:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55734a4dc678 <col:3> 'int' lvalue Var 0x55734a4d5f70 'x' 'int'
|   | `-ConditionalOperator 0x55734a4dc758 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55734a4dc710 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55734a4dc6f8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55734a4dc698 <col:7> '_Bool' lvalue Var 0x55734a4d6008 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55734a4dc728 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55734a4dc6b8 <col:25> 'int' lvalue Var 0x55734a4d6088 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55734a4dc740 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55734a4dc6d8 <col:37> 'int' lvalue Var 0x55734a4d5f70 'x' 'int'
|   |-BinaryOperator 0x55734a4dc820 <line:760:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55734a4dc7a8 <col:3> '_Bool' lvalue Var 0x55734a4d6008 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55734a4dc7f8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55734a4dc7c8 <col:28> 'int' 0
|   |-CallExpr 0x55734a4dc878 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55734a4dc860 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55734a4dc840 <col:3> 'void ()' Function 0x55734a47c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55734a4dc8d0 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55734a4dc8b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55734a4dc898 <col:3> 'void ()' Function 0x55734a47c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55734a4dc930 <line:763:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55734a4dc8f0 <col:3> 'int' lvalue Var 0x55734a4d6740 'y' 'int'
|   | `-IntegerLiteral 0x55734a4dc910 <col:7> 'int' 1
|   |-CallExpr 0x55734a4dc988 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55734a4dc970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55734a4dc950 <col:3> 'void ()' Function 0x55734a47c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55734a4dc9e0 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55734a4dc9c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55734a4dc9a8 <col:3> 'void ()' Function 0x55734a47c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55734a4dccc8 <line:766:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55734a4dca00 <col:3> 'int' lvalue Var 0x55734a4d5f70 'x' 'int'
|   | `-ConditionalOperator 0x55734a4dcc98 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55734a4dcac0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55734a4dca78 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55734a4dca60 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55734a4dca20 <col:7> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55734a4dcaa8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55734a4dca90 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55734a4dca40 <col:25> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55734a4dcc80 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55734a4dcae0 <col:42> 'int' lvalue Var 0x55734a4d64d0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55734a4dcc60 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55734a4dcc30 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55734a4dcba0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55734a4dcb58 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55734a4dcb40 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55734a4dcb00 <col:55> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55734a4dcb88 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55734a4dcb70 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55734a4dcb20 <col:73> '_Bool' lvalue Var 0x55734a4d6358 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55734a4dcc00 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55734a4dcbc0 <col:90> 'int' lvalue Var 0x55734a4d65c8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55734a4dcc18 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55734a4dcbe0 <col:102> 'int' lvalue Var 0x55734a4d5f70 'x' 'int'
|   |-BinaryOperator 0x55734a4dced0 <line:767:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55734a4dcce8 <col:3> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55734a4dceb8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55734a4dce88 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55734a4dcda8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55734a4dcd60 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55734a4dcd48 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55734a4dcd08 <col:20> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55734a4dcd90 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55734a4dcd78 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55734a4dcd28 <col:38> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55734a4dce40 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55734a4dcdf8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55734a4dcdc8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55734a4dce70 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55734a4dce58 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55734a4dce20 <col:66> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55734a4dd1c8 <line:768:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55734a4dcef0 <col:3> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55734a4dd1b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55734a4dd180 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55734a4dd0a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55734a4dcfb0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55734a4dcf68 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55734a4dcf50 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55734a4dcf10 <col:20> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55734a4dcf98 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55734a4dcf80 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55734a4dcf30 <col:38> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55734a4dd080 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55734a4dd038 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55734a4dd020 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55734a4dcfe0 <col:56> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55734a4dd068 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55734a4dd050 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55734a4dd000 <col:74> '_Bool' lvalue Var 0x55734a4d6358 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55734a4dd138 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55734a4dd0f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55734a4dd0c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55734a4dd168 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55734a4dd150 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55734a4dd118 <col:102> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55734a4dd3d0 <line:769:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55734a4dd1e8 <col:3> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55734a4dd3b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55734a4dd388 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55734a4dd2a8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55734a4dd260 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55734a4dd248 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55734a4dd208 <col:20> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55734a4dd290 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55734a4dd278 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55734a4dd228 <col:38> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55734a4dd340 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55734a4dd2f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55734a4dd2c8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55734a4dd370 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55734a4dd358 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55734a4dd320 <col:66> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55734a4dd6b8 <line:770:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55734a4dd3f0 <col:3> '_Bool' lvalue Var 0x55734a4d6358 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55734a4dd6a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55734a4dd670 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55734a4dd590 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55734a4dd4b0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55734a4dd468 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55734a4dd450 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55734a4dd410 <col:20> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55734a4dd498 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55734a4dd480 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55734a4dd430 <col:38> '_Bool' lvalue Var 0x55734a4d61f0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55734a4dd570 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55734a4dd528 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55734a4dd510 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55734a4dd4d0 <col:56> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55734a4dd558 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55734a4dd540 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55734a4dd4f0 <col:74> '_Bool' lvalue Var 0x55734a4d6358 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55734a4dd628 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55734a4dd5e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55734a4dd5b0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55734a4dd658 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55734a4dd640 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55734a4dd608 <col:102> '_Bool' lvalue Var 0x55734a4d6358 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55734a4dd710 <line:771:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55734a4dd6f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55734a4dd6d8 <col:3> 'void ()' Function 0x55734a47c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55734a4dd768 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55734a4dd750 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55734a4dd730 <col:3> 'void ()' Function 0x55734a47c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55734a4dd820 <line:773:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55734a4dd788 <col:3> 'int' lvalue Var 0x55734a4d5438 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55734a4dd800 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55734a4dd7e8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55734a4dd7a8 <col:22> 'int' lvalue Var 0x55734a4d5438 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55734a4dd7c8 <col:41> 'int' 1
|   |-CallExpr 0x55734a4dd878 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55734a4dd860 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55734a4dd840 <col:3> 'void ()' Function 0x55734a47c410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55734a4dd8f0 <line:775:3, col:36>
|     `-CallExpr 0x55734a4dd8d0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55734a4dd8b8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55734a4dd898 <col:10> 'void *(void)' Function 0x55734a47be68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55734a4dda38 prev 0x55734a4d5180 <line:777:1, line:779:1> line:777:6 fence 'void ()'
| `-CompoundStmt 0x55734a4ddad8 <line:778:1, line:779:1>
|-FunctionDecl 0x55734a4ddb08 prev 0x55734a4d5240 <line:780:1, line:782:1> line:780:6 isync 'void ()'
| `-CompoundStmt 0x55734a4ddba8 <line:781:1, line:782:1>
|-FunctionDecl 0x55734a4ddbd8 prev 0x55734a4d5300 <line:783:1, line:785:1> line:783:6 lwfence 'void ()'
| `-CompoundStmt 0x55734a4ddc78 <line:784:1, line:785:1>
`-FunctionDecl 0x55734a4ddce8 <line:786:1, line:810:1> line:786:5 main 'int ()'
  `-CompoundStmt 0x55734a4df918 <line:787:1, line:810:1>
    |-DeclStmt 0x55734a4dde00 <line:788:3, col:18>
    | `-VarDecl 0x55734a4ddd98 <col:3, col:13> col:13 used t2669 'pthread_t':'unsigned long'
    |-CallExpr 0x55734a4de038 <line:789:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55734a4de020 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55734a4dde18 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55734a4bc8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55734a4dde58 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55734a4dde38 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55734a4ddd98 't2669' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55734a4de078 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55734a4dded0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55734a4ddea8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55734a4dde70 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55734a4de090 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55734a4ddef0 <col:39> 'void *(void *)' Function 0x55734a4d69e0 'P0' 'void *(void *)'
    | `-ParenExpr 0x55734a4ddf70 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55734a4ddf48 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55734a4ddf10 <col:52> 'int' 0
    |-DeclStmt 0x55734a4de120 <line:790:3, col:18>
    | `-VarDecl 0x55734a4de0b8 <col:3, col:13> col:13 used t2670 'pthread_t':'unsigned long'
    |-CallExpr 0x55734a4de2c8 <line:791:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55734a4de2b0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55734a4de138 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55734a4bc8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55734a4de178 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55734a4de158 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55734a4de0b8 't2670' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55734a4de308 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55734a4de1f0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55734a4de1c8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55734a4de190 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55734a4de320 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55734a4de210 <col:39> 'void *(void *)' Function 0x55734a4d8340 'P1' 'void *(void *)'
    | `-ParenExpr 0x55734a4de290 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55734a4de268 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55734a4de230 <col:52> 'int' 0
    |-CallExpr 0x55734a4de370 <line:792:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55734a4de358 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55734a4de338 <col:3> 'void ()' Function 0x55734a47c350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55734a4de440 <line:793:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55734a4de390 <col:3> '_Bool' lvalue Var 0x55734a4d5dc0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55734a4de428 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55734a4de408 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55734a4de3f0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55734a4de3b0 <col:21> 'int' lvalue Var 0x55734a4d5438 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55734a4de3d0 <col:41> 'int' 2
    |-CallExpr 0x55734a4de498 <line:794:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55734a4de480 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55734a4de460 <col:3> 'void ()' Function 0x55734a47c410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55734a4de510 <line:795:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55734a4de4f8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55734a4de4b8 <col:3> 'void (int)' Function 0x55734a47bca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55734a4de550 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55734a4de538 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55734a4de4d8 <col:21> '_Bool' lvalue Var 0x55734a4d5dc0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55734a4de5a0 <line:796:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55734a4de588 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55734a4de568 <col:3> 'void ()' Function 0x55734a47c350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55734a4de888 <line:797:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55734a4de5c0 <col:3> 'int' lvalue Var 0x55734a4d5f70 'x' 'int'
    | `-ConditionalOperator 0x55734a4de858 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55734a4de680 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55734a4de638 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55734a4de620 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55734a4de5e0 <col:7> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55734a4de668 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55734a4de650 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55734a4de600 <col:25> '_Bool' lvalue Var 0x55734a4d6100 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55734a4de840 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55734a4de6a0 <col:42> 'int' lvalue Var 0x55734a4d64d0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55734a4de820 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55734a4de7f0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55734a4de760 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55734a4de718 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55734a4de700 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55734a4de6c0 <col:55> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55734a4de748 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55734a4de730 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55734a4de6e0 <col:73> '_Bool' lvalue Var 0x55734a4d6268 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55734a4de7c0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55734a4de780 <col:90> 'int' lvalue Var 0x55734a4d65c8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55734a4de7d8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55734a4de7a0 <col:102> 'int' lvalue Var 0x55734a4d5f70 'x' 'int'
    |-BinaryOperator 0x55734a4dea90 <line:798:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55734a4de8a8 <col:3> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55734a4dea78 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55734a4dea48 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55734a4de968 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55734a4de920 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55734a4de908 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55734a4de8c8 <col:20> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55734a4de950 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55734a4de938 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55734a4de8e8 <col:38> '_Bool' lvalue Var 0x55734a4d6100 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55734a4dea00 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55734a4de9b8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55734a4de988 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55734a4dea30 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55734a4dea18 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55734a4de9e0 <col:66> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55734a4ded78 <line:799:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55734a4deab0 <col:3> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55734a4ded60 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55734a4ded30 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55734a4dec50 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55734a4deb70 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55734a4deb28 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55734a4deb10 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55734a4dead0 <col:20> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55734a4deb58 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55734a4deb40 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55734a4deaf0 <col:38> '_Bool' lvalue Var 0x55734a4d6100 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55734a4dec30 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55734a4debe8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55734a4debd0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55734a4deb90 <col:56> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55734a4dec18 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55734a4dec00 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55734a4debb0 <col:74> '_Bool' lvalue Var 0x55734a4d6268 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55734a4dece8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55734a4deca0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55734a4dec70 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55734a4ded18 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55734a4ded00 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55734a4decc8 <col:102> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55734a4def80 <line:800:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55734a4ded98 <col:3> '_Bool' lvalue Var 0x55734a4d6100 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55734a4def68 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55734a4def38 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55734a4dee58 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55734a4dee10 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55734a4dedf8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55734a4dedb8 <col:20> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55734a4dee40 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55734a4dee28 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55734a4dedd8 <col:38> '_Bool' lvalue Var 0x55734a4d6100 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55734a4deef0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55734a4deea8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55734a4dee78 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55734a4def20 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55734a4def08 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55734a4deed0 <col:66> '_Bool' lvalue Var 0x55734a4d6100 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55734a4df288 <line:801:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55734a4defa0 <col:3> '_Bool' lvalue Var 0x55734a4d6268 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55734a4df270 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55734a4df240 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55734a4df160 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55734a4df080 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55734a4df038 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55734a4df020 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55734a4defc0 <col:20> '_Bool' lvalue Var 0x55734a4d6548 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55734a4df068 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55734a4df050 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55734a4df000 <col:38> '_Bool' lvalue Var 0x55734a4d6100 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55734a4df140 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55734a4df0f8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55734a4df0e0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55734a4df0a0 <col:56> '_Bool' lvalue Var 0x55734a4d6640 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55734a4df128 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55734a4df110 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55734a4df0c0 <col:74> '_Bool' lvalue Var 0x55734a4d6268 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55734a4df1f8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55734a4df1b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55734a4df180 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55734a4df228 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55734a4df210 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55734a4df1d8 <col:102> '_Bool' lvalue Var 0x55734a4d6268 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55734a4df2e0 <line:802:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55734a4df2c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55734a4df2a8 <col:3> 'void ()' Function 0x55734a47c410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55734a4df338 <line:803:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55734a4df320 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55734a4df300 <col:3> 'void ()' Function 0x55734a47c350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55734a4df3e8 <line:804:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x55734a4df358 <col:3> '_Bool' lvalue Var 0x55734a4d6850 'weak$$choice1' '_Bool'
    | `-ImplicitCastExpr 0x55734a4df3d0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x55734a4df3b0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x55734a4df398 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55734a4df378 <col:19> 'void *(void)' Function 0x55734a47be68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x55734a4df620 <line:805:3, col:140> 'int' '='
    | |-DeclRefExpr 0x55734a4df408 <col:3> 'int' lvalue Var 0x55734a4d5678 '__unbuffered_p1_EAX' 'int'
    | `-ConditionalOperator 0x55734a4df5f0 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x55734a4df5c0 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55734a4df5a8 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55734a4df428 <col:25> '_Bool' lvalue Var 0x55734a4d5ad8 '__unbuffered_p1_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x55734a4df568 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x55734a4df538 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x55734a4df4f0 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x55734a4df4d8 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55734a4df448 <col:61> '_Bool' lvalue Var 0x55734a4d6850 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x55734a4df508 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x55734a4df4a0 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x55734a4df488 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x55734a4df468 <col:78> 'int *' lvalue Var 0x55734a4d5b58 '__unbuffered_p1_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x55734a4df520 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55734a4df4b8 <col:117> 'int' lvalue Var 0x55734a4d5678 '__unbuffered_p1_EAX' 'int'
    |   `-ImplicitCastExpr 0x55734a4df5d8 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55734a4df588 <col:140> 'int' lvalue Var 0x55734a4d5678 '__unbuffered_p1_EAX' 'int'
    |-BinaryOperator 0x55734a4df7c0 <line:806:3, col:75> '_Bool' '='
    | |-DeclRefExpr 0x55734a4df640 <col:3> '_Bool' lvalue Var 0x55734a4d5e38 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55734a4df7a8 <col:21, col:75> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55734a4df790 <col:21, col:75> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55734a4df770 <col:22, col:75> 'int'
    |       `-BinaryOperator 0x55734a4df750 <col:23, col:74> 'int' '&&'
    |         |-BinaryOperator 0x55734a4df6b8 <col:23, col:46> 'int' '=='
    |         | |-ImplicitCastExpr 0x55734a4df6a0 <col:23> 'int' <LValueToRValue>
    |         | | `-DeclRefExpr 0x55734a4df660 <col:23> 'int' lvalue Var 0x55734a4d5558 '__unbuffered_p0_EAX' 'int'
    |         | `-IntegerLiteral 0x55734a4df680 <col:46> 'int' 1
    |         `-BinaryOperator 0x55734a4df730 <col:51, col:74> 'int' '=='
    |           |-ImplicitCastExpr 0x55734a4df718 <col:51> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55734a4df6d8 <col:51> 'int' lvalue Var 0x55734a4d5678 '__unbuffered_p1_EAX' 'int'
    |           `-IntegerLiteral 0x55734a4df6f8 <col:74> 'int' 1
    |-CallExpr 0x55734a4df818 <line:807:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55734a4df800 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55734a4df7e0 <col:3> 'void ()' Function 0x55734a47c410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55734a4df890 <line:808:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55734a4df878 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55734a4df838 <col:3> 'void (int)' Function 0x55734a47c0d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55734a4df8d0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55734a4df8b8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55734a4df858 <col:21> '_Bool' lvalue Var 0x55734a4d5e38 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55734a4df908 <line:809:3, col:10>
      `-IntegerLiteral 0x55734a4df8e8 <col:10> 'int' 0
