TranslationUnitDecl 0x55eabc3bbf88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55eabc3bc848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55eabc3bc520 '__int128'
|-TypedefDecl 0x55eabc3bc8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55eabc3bc540 'unsigned __int128'
|-TypedefDecl 0x55eabc3bcbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55eabc3bc990 'struct __NSConstantString_tag'
|   `-Record 0x55eabc3bc910 '__NSConstantString_tag'
|-TypedefDecl 0x55eabc3bcc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55eabc3bcc20 'char *'
|   `-BuiltinType 0x55eabc3bc020 'char'
|-TypedefDecl 0x55eabc3fbb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55eabc3bcf00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55eabc3bcd40 'struct __va_list_tag'
|     `-Record 0x55eabc3bccc0 '__va_list_tag'
|-FunctionDecl 0x55eabc3fbca0 <pthread-wmm/safe008_rmo.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55eabc3fbbd0 <col:31> col:34 'int'
|-FunctionDecl 0x55eabc3fbe68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55eabc3fbf90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55eabc3fc0d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55eabc3fc048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55eabc3fc308 <col:40, col:99>
|   |-IfStmt 0x55eabc3fc2d8 <col:42, col:88>
|   | |-UnaryOperator 0x55eabc3fc1b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55eabc3fc1a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55eabc3fc180 <col:47> 'int' lvalue ParmVar 0x55eabc3fc048 'expression' 'int'
|   | `-CompoundStmt 0x55eabc3fc2c0 <col:59, col:88>
|   |   `-LabelStmt 0x55eabc3fc2a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55eabc3fc238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55eabc3fc220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55eabc3fc1d0 <col:68> 'void () __attribute__((noreturn))' Function 0x55eabc3fbf90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55eabc3fc2f0 <col:89>
|   `-ReturnStmt 0x55eabc3fc2f8 <col:91>
|-FunctionDecl 0x55eabc3fc350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55eabc3fc410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55eabc3fc790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55eabc3fc4c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55eabc3fc548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55eabc3fc5c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55eabc3fc648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55eabc3fc850 <line:10:22>
|-FunctionDecl 0x55eabc4228a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55eabc3fc8c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55eabc3fc940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55eabc3fc9c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55eabc3fca40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55eabc422960 <line:13:22>
|-FunctionDecl 0x55eabc422c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55eabc4229d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55eabc422a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55eabc422ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55eabc422cc8 <line:15:22>
|-TypedefDecl 0x55eabc422d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55eabc3bc0e0 'unsigned char'
|-TypedefDecl 0x55eabc422da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55eabc3bc100 'unsigned short'
|-TypedefDecl 0x55eabc422e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55eabc3bc120 'unsigned int'
|-TypedefDecl 0x55eabc422e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55eabc3bc140 'unsigned long'
|-TypedefDecl 0x55eabc422ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55eabc3bc040 'signed char'
|-TypedefDecl 0x55eabc422f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55eabc3bc0e0 'unsigned char'
|-TypedefDecl 0x55eabc422fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55eabc3bc060 'short'
|-TypedefDecl 0x55eabc423048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55eabc3bc100 'unsigned short'
|-TypedefDecl 0x55eabc4230b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55eabc3bc080 'int'
|-TypedefDecl 0x55eabc423128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55eabc3bc120 'unsigned int'
|-TypedefDecl 0x55eabc423198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55eabc3bc0a0 'long'
|-TypedefDecl 0x55eabc423208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55eabc3bc140 'unsigned long'
|-TypedefDecl 0x55eabc423278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55eabc3bc0a0 'long'
|-TypedefDecl 0x55eabc4232e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55eabc3bc140 'unsigned long'
|-TypedefDecl 0x55eabc423358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55eabc3bc140 'unsigned long'
|-TypedefDecl 0x55eabc4233c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55eabc3bc120 'unsigned int'
|-TypedefDecl 0x55eabc423438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55eabc3bc120 'unsigned int'
|-TypedefDecl 0x55eabc4234a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55eabc3bc140 'unsigned long'
|-TypedefDecl 0x55eabc423518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55eabc3bc140 'unsigned long'
|-TypedefDecl 0x55eabc423588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55eabc3bc120 'unsigned int'
|-TypedefDecl 0x55eabc4235f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55eabc3bc140 'unsigned long'
|-TypedefDecl 0x55eabc423668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55eabc3bc0a0 'long'
|-TypedefDecl 0x55eabc4236d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55eabc3bc0a0 'long'
|-TypedefDecl 0x55eabc423748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55eabc3bc080 'int'
|-RecordDecl 0x55eabc4237a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55eabc423918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55eabc4239d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55eabc423970 'struct __fsid_t' sugar
|   `-RecordType 0x55eabc423820 '__fsid_t'
|     `-Record 0x55eabc4237a0 ''
|-TypedefDecl 0x55eabc423a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55eabc3bc0a0 'long'
|-TypedefDecl 0x55eabc423ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55eabc3bc140 'unsigned long'
|-TypedefDecl 0x55eabc423b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55eabc3bc140 'unsigned long'
|-TypedefDecl 0x55eabc423ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55eabc3bc120 'unsigned int'
|-TypedefDecl 0x55eabc423c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55eabc3bc0a0 'long'
|-TypedefDecl 0x55eabc423c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55eabc3bc120 'unsigned int'
|-TypedefDecl 0x55eabc423cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55eabc3bc0a0 'long'
|-TypedefDecl 0x55eabc423d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55eabc3bc080 'int'
|-TypedefDecl 0x55eabc423dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55eabc3bc080 'int'
|-TypedefDecl 0x55eabc423e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55eabc3bc080 'int'
|-TypedefDecl 0x55eabc423eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55eabc3bc7a0 'void *'
|   `-BuiltinType 0x55eabc3bbfe0 'void'
|-TypedefDecl 0x55eabc423f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55eabc3bc0a0 'long'
|-TypedefDecl 0x55eabc423f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55eabc3bc0a0 'long'
|-TypedefDecl 0x55eabc424008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55eabc3bc0a0 'long'
|-TypedefDecl 0x55eabc424078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55eabc3bc140 'unsigned long'
|-TypedefDecl 0x55eabc4240e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55eabc3bc140 'unsigned long'
|-TypedefDecl 0x55eabc424158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55eabc3bc140 'unsigned long'
|-TypedefDecl 0x55eabc4241c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55eabc3bc140 'unsigned long'
|-TypedefDecl 0x55eabc424238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55eabc3bc0a0 'long'
|-TypedefDecl 0x55eabc4242a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55eabc3bc0a0 'long'
|-TypedefDecl 0x55eabc424318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55eabc3bc0a0 'long'
|-TypedefDecl 0x55eabc424388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55eabc3bc140 'unsigned long'
|-TypedefDecl 0x55eabc424418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55eabc4243e0 '__off64_t' sugar
|   |-Typedef 0x55eabc4236d8 '__off64_t'
|   `-BuiltinType 0x55eabc3bc0a0 'long'
|-TypedefDecl 0x55eabc424510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55eabc4244d0 '__quad_t *'
|   `-TypedefType 0x55eabc424470 '__quad_t' sugar
|     |-Typedef 0x55eabc423278 '__quad_t'
|     `-BuiltinType 0x55eabc3bc0a0 'long'
|-TypedefDecl 0x55eabc424580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55eabc3bcc20 'char *'
|   `-BuiltinType 0x55eabc3bc020 'char'
|-TypedefDecl 0x55eabc4245f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55eabc3bc0a0 'long'
|-TypedefDecl 0x55eabc424660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55eabc3bc120 'unsigned int'
|-FunctionDecl 0x55eabc4247a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55eabc4246d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55eabc424ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55eabc424ad8 <line:72:3, col:34>
|     `-CallExpr 0x55eabc424a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55eabc424a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55eabc424a10 <col:10> '<builtin fn type>' Function 0x55eabc424880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55eabc424ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55eabc424a30 <col:29> 'unsigned int' lvalue ParmVar 0x55eabc4246d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55eabc424880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55eabc424920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55eabc424990 <col:10> Implicit
| `-ConstAttr 0x55eabc4249e8 <col:10> Implicit
|-FunctionDecl 0x55eabc424c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55eabc424b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55eabc424f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55eabc424f48 <line:77:3, col:34>
|     `-CallExpr 0x55eabc424f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55eabc424ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55eabc424e78 <col:10> '<builtin fn type>' Function 0x55eabc424ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55eabc424f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55eabc424e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55eabc424b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55eabc424ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55eabc424d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55eabc424df8 <col:10> Implicit
| `-ConstAttr 0x55eabc424e50 <col:10> Implicit
|-TypedefDecl 0x55eabc424f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55eabc3bc140 'unsigned long'
|-TypedefDecl 0x55eabc425018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55eabc424fe0 '__time_t' sugar
|   |-Typedef 0x55eabc423c18 '__time_t'
|   `-BuiltinType 0x55eabc3bc0a0 'long'
|-RecordDecl 0x55eabc425070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55eabc425128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55eabc4251b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55eabc425248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55eabc425210 '__pid_t' sugar
|   |-Typedef 0x55eabc423748 '__pid_t'
|   `-BuiltinType 0x55eabc3bc080 'int'
|-RecordDecl 0x55eabc4252a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55eabc425360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55eabc4253b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55eabc425470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55eabc4254d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55eabc3bc140 'unsigned long'
|-RecordDecl 0x55eabc425530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55eabc4257c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55eabc4278b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55eabc425810 'struct cpu_set_t' sugar
|   `-RecordType 0x55eabc4255b0 'cpu_set_t'
|     `-Record 0x55eabc425530 ''
|-FunctionDecl 0x55eabc427b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55eabc427958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55eabc427a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55eabc427c38 <line:107:19>
|-FunctionDecl 0x55eabc427e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55eabc427ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55eabc427eb8 <col:69>
|-FunctionDecl 0x55eabc428030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55eabc427f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55eabc4280d8 <col:64>
|-FunctionDecl 0x55eabc428398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55eabc428140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55eabc428278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55eabc428448 <line:113:22>
|-FunctionDecl 0x55eabc4286c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55eabc4284b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55eabc4285a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55eabc428778 <col:88>
|-FunctionDecl 0x55eabc428a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55eabc4287e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55eabc4288c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55eabc428950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55eabc428b50 <col:62>
|-FunctionDecl 0x55eabc428cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55eabc428bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55eabc428d70 <col:63>
|-FunctionDecl 0x55eabc428e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55eabc428f38 <col:47>
|-FunctionDecl 0x55eabc429040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55eabc428fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55eabc4290e8 <col:69>
|-FunctionDecl 0x55eabc4291f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55eabc429158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55eabc429298 <col:69>
|-FunctionDecl 0x55eabc429558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55eabc429300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55eabc429438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55eabc429608 <col:88>
|-TypedefDecl 0x55eabc429698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55eabc429660 '__clock_t' sugar
|   |-Typedef 0x55eabc423a58 '__clock_t'
|   `-BuiltinType 0x55eabc3bc0a0 'long'
|-TypedefDecl 0x55eabc429728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55eabc4296f0 '__clockid_t' sugar
|   |-Typedef 0x55eabc423e48 '__clockid_t'
|   `-BuiltinType 0x55eabc3bc080 'int'
|-TypedefDecl 0x55eabc4297b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55eabc429780 '__timer_t' sugar
|   |-Typedef 0x55eabc423eb8 '__timer_t'
|   `-PointerType 0x55eabc3bc7a0 'void *'
|     `-BuiltinType 0x55eabc3bbfe0 'void'
|-RecordDecl 0x55eabc429810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55eabc4298e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55eabc429950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55eabc4299b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55eabc429a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55eabc429a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55eabc429af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55eabc429b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55eabc429bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55eabc429c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55eabc429c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55eabc429cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55eabc429d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55eabc429e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55eabc429e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55eabc429f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55eabc42a100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55eabc42a1a0 <col:45>
|-FunctionDecl 0x55eabc42a380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55eabc42a270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55eabc42a428 <col:54>
|-FunctionDecl 0x55eabc42a628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55eabc42a490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55eabc42a508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55eabc42a6d8 <line:157:22>
| `-ConstAttr 0x55eabc42a730 <col:63>
|-FunctionDecl 0x55eabc42b560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55eabc42a828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55eabc42b608 <col:56>
|-FunctionDecl 0x55eabc42b9b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55eabc42b678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55eabc42b6f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55eabc42b770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55eabc42b868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55eabc42ba70 <col:54>
|-RecordDecl 0x55eabc42bac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55eabc42bb78 parent 0x55eabc3bbf88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55eabc42bdd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55eabc42be78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55eabc42bee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55eabc42bf48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55eabc42c038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55eabc42c158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55eabc42c100 'struct __locale_struct *'
|   `-ElaboratedType 0x55eabc42c090 'struct __locale_struct' sugar
|     `-RecordType 0x55eabc42bb50 'struct __locale_struct'
|       `-Record 0x55eabc42bac8 '__locale_struct'
|-TypedefDecl 0x55eabc42c208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55eabc42c1d0 '__locale_t' sugar
|   |-Typedef 0x55eabc42c158 '__locale_t'
|   `-PointerType 0x55eabc42c100 'struct __locale_struct *'
|     `-ElaboratedType 0x55eabc42c090 'struct __locale_struct' sugar
|       `-RecordType 0x55eabc42bb50 'struct __locale_struct'
|         `-Record 0x55eabc42bac8 '__locale_struct'
|-FunctionDecl 0x55eabc42c610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55eabc42c278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55eabc42c2f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55eabc42c370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55eabc42c400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55eabc42c478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55eabc42c6d8 <col:40>
|-FunctionDecl 0x55eabc42c8c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55eabc42c7a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55eabc42c970 <col:66>
|-FunctionDecl 0x55eabc42ca80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55eabc42c9d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55eabc42cb28 <col:69>
|-FunctionDecl 0x55eabc42cd58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55eabc42cb90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55eabc42cc20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55eabc42ce08 <col:52>
|-FunctionDecl 0x55eabc42cfb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55eabc42ce70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55eabc42cf00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55eabc42d060 <col:55>
|-FunctionDecl 0x55eabc42d1f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55eabc42d0e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55eabc42d2a0 <col:62>
|-FunctionDecl 0x55eabc42d418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55eabc42d308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55eabc42d4c0 <col:60>
|-FunctionDecl 0x55eabc42d718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55eabc42d578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55eabc42d5f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55eabc42d7c8 <col:44>
|-FunctionDecl 0x55eabc42d9d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55eabc42d830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55eabc42d8b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55eabc42da88 <col:49>
|-VarDecl 0x55eabc42db88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55eabc42dc08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55eabc42dc88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55eabc42dd50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55eabc42de80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55eabc42df20 <col:42>
|-VarDecl 0x55eabc42df90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55eabc42e010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55eabc42e198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55eabc42e088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55eabc42e240 <col:57>
|-FunctionDecl 0x55eabc42e350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55eabc42e2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55eabc42e3f8 <col:56>
|-FunctionDecl 0x55eabc42f540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55eabc42e478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55eabc42f5e8 <col:59>
|-FunctionDecl 0x55eabc42f6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55eabc42f658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55eabc42f798 <col:48>
| `-ConstAttr 0x55eabc42f7f0 <col:89>
|-FunctionDecl 0x55eabc42fa58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55eabc42f8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55eabc42f938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55eabc42fcb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55eabc42fb48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55eabc42fbd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55eabc42fd68 <col:88>
|-FunctionDecl 0x55eabc42ff00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55eabc42fdd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55eabc42fe60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55eabc42ffb0 <col:88>
|-FunctionDecl 0x55eabc4301c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55eabc430018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55eabc4300a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55eabc430278 <line:208:22>
|-FunctionDecl 0x55eabc4305e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55eabc4302e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55eabc430360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55eabc4303f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55eabc430480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55eabc4308e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55eabc4306e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55eabc4307c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55eabc430998 <col:85>
|-FunctionDecl 0x55eabc430d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55eabc430a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55eabc430b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55eabc430c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55eabc430e40 <col:52>
|-FunctionDecl 0x55eabc430fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55eabc430ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55eabc431060 <col:61>
|-FunctionDecl 0x55eabc431560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55eabc4310c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55eabc431148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55eabc431278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55eabc431368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55eabc431620 <col:62>
|-FunctionDecl 0x55eabc431838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55eabc431688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55eabc431718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55eabc4318e8 <line:221:22>
|-FunctionDecl 0x55eabc4319e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55eabc431950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55eabc431a90 <col:65>
|-TypedefDecl 0x55eabc431b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55eabc3bc140 'unsigned long'
|-RecordDecl 0x55eabc431b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55eabc431ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55eabc431d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55eabc431db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55eabc431d60 'union pthread_attr_t' sugar
|   `-RecordType 0x55eabc431be0 'union pthread_attr_t'
|     `-Record 0x55eabc431b58 'pthread_attr_t'
|-RecordDecl 0x55eabc431e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55eabc431f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55eabc432000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55eabc4320b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55eabc432050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55eabc431e90 'struct __pthread_internal_list'
|     `-Record 0x55eabc431e10 '__pthread_internal_list'
|-RecordDecl 0x55eabc432120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55eabc4321c8 parent 0x55eabc3bbf88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55eabc4322a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55eabc432308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55eabc432370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55eabc4323d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55eabc432440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55eabc4324a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55eabc436580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55eabc436630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55eabc436720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55eabc436788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55eabc436910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55eabc4368b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55eabc4321a0 'pthread_mutex_t'
|     `-Record 0x55eabc432120 ''
|-RecordDecl 0x55eabc436980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55eabc436ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55eabc436b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55eabc436be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55eabc436b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55eabc436a00 'pthread_mutexattr_t'
|     `-Record 0x55eabc436980 ''
|-RecordDecl 0x55eabc436c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55eabc436cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55eabc436dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55eabc436e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55eabc436e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55eabc436ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55eabc436f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55eabc436fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55eabc437030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55eabc437098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55eabc437150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe008_rmo.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe008_rmo.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55eabc437240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55eabc4372a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55eabc4373e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55eabc437380 'union pthread_cond_t' sugar
|   `-RecordType 0x55eabc436cd0 'pthread_cond_t'
|     `-Record 0x55eabc436c50 ''
|-RecordDecl 0x55eabc437450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55eabc437590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55eabc4375f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55eabc4376b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55eabc437650 'union pthread_condattr_t' sugar
|   `-RecordType 0x55eabc4374d0 'pthread_condattr_t'
|     `-Record 0x55eabc437450 ''
|-TypedefDecl 0x55eabc437738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55eabc3bc120 'unsigned int'
|-TypedefDecl 0x55eabc4377a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55eabc3bc080 'int'
|-RecordDecl 0x55eabc437800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55eabc4378a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55eabc437970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55eabc4379d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55eabc437a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55eabc437aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55eabc437b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55eabc437b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55eabc437be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55eabc437c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55eabc437cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55eabc437d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55eabc437d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55eabc437e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe008_rmo.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe008_rmo.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55eabc437ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55eabc437f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55eabc438090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55eabc438030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55eabc437880 'pthread_rwlock_t'
|     `-Record 0x55eabc437800 ''
|-RecordDecl 0x55eabc438100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55eabc438240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55eabc4382a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55eabc438360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55eabc438300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55eabc438180 'pthread_rwlockattr_t'
|     `-Record 0x55eabc438100 ''
|-TypedefDecl 0x55eabc4383e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55eabc3bc084 'volatile int' volatile
|   `-BuiltinType 0x55eabc3bc080 'int'
|-RecordDecl 0x55eabc438440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55eabc43a5b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55eabc43a618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55eabc43a6d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55eabc43a670 'union pthread_barrier_t' sugar
|   `-RecordType 0x55eabc4384c0 'pthread_barrier_t'
|     `-Record 0x55eabc438440 ''
|-RecordDecl 0x55eabc43a740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55eabc43a840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55eabc43a8a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55eabc43a960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55eabc43a900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55eabc43a7c0 'pthread_barrierattr_t'
|     `-Record 0x55eabc43a740 ''
|-TypedefDecl 0x55eabc43aa78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55eabc43aa10 'long [8]' 8 
|   `-BuiltinType 0x55eabc3bc0a0 'long'
|-EnumDecl 0x55eabc43aad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55eabc43ab98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55eabc43abe8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55eabc43ac38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55eabc43ad08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55eabc43ad58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55eabc43ada8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55eabc43adf8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55eabc43ae80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55eabc43ae68 <col:26> 'int'
| |   `-DeclRefExpr 0x55eabc43ae48 <col:26> 'int' EnumConstant 0x55eabc43ad08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55eabc43af08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55eabc43aef0 <col:29> 'int'
| |   `-DeclRefExpr 0x55eabc43aed0 <col:29> 'int' EnumConstant 0x55eabc43ad58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55eabc43af90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55eabc43af78 <col:30> 'int'
| |   `-DeclRefExpr 0x55eabc43af58 <col:30> 'int' EnumConstant 0x55eabc43ada8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55eabc43b018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55eabc43b000 <col:27> 'int'
|     `-DeclRefExpr 0x55eabc43afe0 <col:27> 'int' EnumConstant 0x55eabc43ae80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55eabc43b068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55eabc43b138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55eabc43b1c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55eabc43b1a8 <col:30> 'int'
| |   `-DeclRefExpr 0x55eabc43b188 <col:30> 'int' EnumConstant 0x55eabc43b138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55eabc43b210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55eabc43b298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55eabc43b280 <col:29> 'int'
|     `-DeclRefExpr 0x55eabc43b260 <col:29> 'int' EnumConstant 0x55eabc43b210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55eabc43b2e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55eabc43b3b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55eabc43b408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55eabc43b458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55eabc43b4a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55eabc43b5c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55eabc43b610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55eabc43b660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55eabc43b6e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55eabc43b6d0 <col:31> 'int'
|     `-DeclRefExpr 0x55eabc43b6b0 <col:31> 'int' EnumConstant 0x55eabc43b5c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55eabc43b738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55eabc43b808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55eabc43b858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55eabc43b8a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55eabc43b978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55eabc43b9c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55eabc43ba18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55eabc43bae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55eabc43bb38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55eabc43bb88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55eabc43bdc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55eabc43be30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55eabc43be98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55eabc43bfb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55eabc43c008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55eabc43c0d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55eabc43c128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55eabc43c178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55eabc43c248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55eabc43c298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55eabc43c8f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55eabc43c390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55eabc43c4a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55eabc43c6e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55eabc43c760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55eabc43c9b8 <col:47>
| |-NonNullAttr 0x55eabc43ca10 <col:77, col:94> 1 3
| `-CallbackAttr 0x55eabc43ca48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55eabc43cb70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55eabc43caa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55eabc43cdc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55eabc43cc28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55eabc43cca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55eabc43cf98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55eabc43ce88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55eabc43d040 <col:60>
|-FunctionDecl 0x55eabc43d190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55eabc43d230 <col:54>
| `-ConstAttr 0x55eabc43d288 <col:95>
|-FunctionDecl 0x55eabc43d458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55eabc43d2c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55eabc43d338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55eabc43d508 <line:394:19>
| `-ConstAttr 0x55eabc43d560 <col:60>
|-FunctionDecl 0x55eabc43df68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55eabc43de30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55eabc43e010 <col:71>
| `-NonNullAttr 0x55eabc43e068 <col:112, col:126> 1
|-FunctionDecl 0x55eabc43e170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55eabc43e0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55eabc43e218 <line:397:22>
| `-NonNullAttr 0x55eabc43e270 <col:63, col:77> 1
|-FunctionDecl 0x55eabc43e498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55eabc43e2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55eabc43e338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55eabc43e548 <line:400:22>
| `-NonNullAttr 0x55eabc43e5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55eabc43e7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55eabc43e5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55eabc43e668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55eabc43e858 <line:403:22>
| `-NonNullAttr 0x55eabc43e8b0 <col:63, col:77> 1
|-FunctionDecl 0x55eabc43eb08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55eabc43e8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55eabc43e9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55eabc43ebb8 <line:406:22>
| `-NonNullAttr 0x55eabc43ec10 <col:63, col:80> 1 2
|-FunctionDecl 0x55eabc43fe48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55eabc43ec58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55eabc43ecd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55eabc43fef8 <line:409:22>
| `-NonNullAttr 0x55eabc43ff50 <col:63, col:77> 1
|-FunctionDecl 0x55eabc440188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55eabc43ff98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55eabc440028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55eabc440238 <line:412:22>
| `-NonNullAttr 0x55eabc440290 <col:63, col:80> 1 2
|-FunctionDecl 0x55eabc4404c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55eabc4402d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55eabc440368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55eabc440578 <col:37>
| `-NonNullAttr 0x55eabc4405d0 <col:78, col:95> 1 2
|-FunctionDecl 0x55eabc4407b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55eabc440618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55eabc440698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55eabc440868 <line:418:22>
| `-NonNullAttr 0x55eabc4408c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55eabc440a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55eabc440908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55eabc440988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55eabc440af8 <line:420:22>
| `-NonNullAttr 0x55eabc440b50 <col:63, col:77> 1
|-FunctionDecl 0x55eabc440cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55eabc440b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55eabc440c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55eabc440da8 <line:423:22>
| `-NonNullAttr 0x55eabc441e30 <col:63, col:80> 1 2
|-FunctionDecl 0x55eabc441fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55eabc441e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55eabc441ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55eabc442068 <line:426:22>
| `-NonNullAttr 0x55eabc4420c0 <col:63, col:77> 1
|-FunctionDecl 0x55eabc442268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55eabc442108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55eabc442188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55eabc442318 <line:429:22>
| `-NonNullAttr 0x55eabc442370 <col:63, col:80> 1 2
|-FunctionDecl 0x55eabc4424f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55eabc4423b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55eabc442438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55eabc4425a8 <line:431:22>
| `-NonNullAttr 0x55eabc442600 <col:63, col:77> 1
|-FunctionDecl 0x55eabc442828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55eabc442648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55eabc4426c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55eabc4428d8 <line:434:22>
| |-NonNullAttr 0x55eabc442930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55eabc442968 <col:100> "" ""
|-FunctionDecl 0x55eabc442b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55eabc4429b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55eabc442a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55eabc442c28 <line:437:22>
| |-NonNullAttr 0x55eabc442c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x55eabc442cb8 <col:97> "" ""
|-FunctionDecl 0x55eabc442eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55eabc442d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55eabc442d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55eabc442f68 <line:440:22>
| `-NonNullAttr 0x55eabc442fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x55eabc443140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55eabc443008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55eabc443080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55eabc4431f0 <line:443:22>
| `-NonNullAttr 0x55eabc443248 <col:63, col:77> 1
|-FunctionDecl 0x55eabc443538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55eabc443298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55eabc443318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55eabc443390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55eabc4435f0 <line:447:22>
| `-NonNullAttr 0x55eabc443648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55eabc4438f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55eabc4436a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55eabc443720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55eabc443798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55eabc4439b0 <col:43>
| `-NonNullAttr 0x55eabc443a08 <col:84, col:98> 1
|-FunctionDecl 0x55eabc443cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55eabc443a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55eabc443ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55eabc443b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55eabc443d80 <line:452:22>
| `-NonNullAttr 0x55eabc443dd8 <col:63, col:77> 3
|-FunctionDecl 0x55eabc4440e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55eabc443e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55eabc443ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55eabc443f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55eabc4441a0 <line:456:22>
| `-NonNullAttr 0x55eabc4441f8 <col:63, col:80> 2 3
|-FunctionDecl 0x55eabc4443e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55eabc444248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55eabc4442c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55eabc444498 <line:458:22>
|-FunctionDecl 0x55eabc444868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55eabc444560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55eabc444700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55eabc444918 <col:52, col:69> 1 2
|-FunctionDecl 0x55eabc444ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55eabc4449a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55eabc444a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55eabc444ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55eabc444b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55eabc444c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55eabc444e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55eabc444d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55eabc444fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55eabc445040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55eabc4450e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55eabc4451d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55eabc445240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55eabc445410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe008_rmo.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55eabc445508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55eabc4455c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55eabc445560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55eabc4450c0 '__pthread_unwind_buf_t'
| |   `-Record 0x55eabc445040 ''
| `-AlignedAttr 0x55eabc445618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55eabc445690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55eabc4457f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55eabc445858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55eabc4458c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55eabc445928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55eabc445b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55eabc445a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55eabc445c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55eabc445be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55eabc445e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55eabc445d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55eabc445f18 <line:487:22>
|-RecordDecl 0x55eabc445f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55eabc446288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55eabc4460e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55eabc446168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55eabc446338 <col:86>
| `-ReturnsTwiceAttr 0x55eabc446390 <col:12> Implicit
|-FunctionDecl 0x55eabc4466b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55eabc446460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55eabc446570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55eabc446768 <line:493:22>
| `-NonNullAttr 0x55eabc4467c0 <col:63, col:77> 1
|-FunctionDecl 0x55eabc446938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55eabc446808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55eabc4469e0 <line:495:22>
| `-NonNullAttr 0x55eabc446a38 <col:63, col:77> 1
|-FunctionDecl 0x55eabc446b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55eabc446a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55eabc446be8 <line:497:22>
| `-NonNullAttr 0x55eabc446c40 <col:52, col:66> 1
|-FunctionDecl 0x55eabc446d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55eabc446c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55eabc446de8 <line:499:22>
| `-NonNullAttr 0x55eabc446e40 <col:52, col:66> 1
|-FunctionDecl 0x55eabc447088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55eabc446e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55eabc446f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55eabc447138 <col:36>
| `-NonNullAttr 0x55eabc447190 <col:66, col:83> 1 2
|-FunctionDecl 0x55eabc447290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55eabc4471d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55eabc447338 <line:504:22>
| `-NonNullAttr 0x55eabc447390 <col:52, col:66> 1
|-FunctionDecl 0x55eabc447628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55eabc447440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55eabc4474c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55eabc4476d8 <line:508:22>
| `-NonNullAttr 0x55eabc447730 <col:63, col:80> 1 2
|-FunctionDecl 0x55eabc4479f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55eabc447778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55eabc4477f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55eabc447878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55eabc447ab0 <line:512:22>
| `-NonNullAttr 0x55eabc447b08 <col:63, col:80> 1 3
|-FunctionDecl 0x55eabc447c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55eabc447b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55eabc447cb8 <line:514:22>
| `-NonNullAttr 0x55eabc447d10 <col:63, col:77> 1
|-FunctionDecl 0x55eabc447f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55eabc447dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55eabc447fe0 <line:516:22>
| `-NonNullAttr 0x55eabc448038 <col:63, col:77> 1
|-FunctionDecl 0x55eabc448140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55eabc448088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55eabc4481e8 <line:518:22>
| `-NonNullAttr 0x55eabc448240 <col:63, col:77> 1
|-FunctionDecl 0x55eabc448468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55eabc448288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55eabc448308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55eabc448518 <line:522:22>
| `-NonNullAttr 0x55eabc448570 <col:63, col:80> 1 2
|-FunctionDecl 0x55eabc448778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55eabc4485b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55eabc448638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55eabc448828 <line:525:22>
| `-NonNullAttr 0x55eabc448880 <col:63, col:77> 1
|-FunctionDecl 0x55eabc448a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55eabc4488c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55eabc448948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55eabc448ad8 <line:528:22>
| `-NonNullAttr 0x55eabc448b30 <col:63, col:80> 1 2
|-FunctionDecl 0x55eabc448cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55eabc448b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55eabc448bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55eabc448d68 <line:530:22>
| `-NonNullAttr 0x55eabc448dc0 <col:63, col:77> 1
|-FunctionDecl 0x55eabc449f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55eabc448e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55eabc449eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55eabc44a040 <line:534:22>
| `-NonNullAttr 0x55eabc44a098 <col:63, col:80> 1 2
|-FunctionDecl 0x55eabc44a228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55eabc44a0e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55eabc44a168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55eabc44a2d8 <line:537:22>
| `-NonNullAttr 0x55eabc44a330 <col:63, col:77> 1
|-FunctionDecl 0x55eabc44a4d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55eabc44a378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55eabc44a3f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55eabc44a588 <line:541:22>
| `-NonNullAttr 0x55eabc44a5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55eabc44a768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55eabc44a628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55eabc44a6a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55eabc44a818 <line:544:22>
| `-NonNullAttr 0x55eabc44a870 <col:63, col:77> 1
|-FunctionDecl 0x55eabc44aa58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55eabc44a8b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55eabc44a938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55eabc44ab08 <line:547:22>
| `-NonNullAttr 0x55eabc44ab60 <col:63, col:80> 1 2
|-FunctionDecl 0x55eabc44ace8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55eabc44aba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55eabc44ac28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55eabc44ad98 <line:550:22>
| `-NonNullAttr 0x55eabc44adf0 <col:63, col:77> 1
|-FunctionDecl 0x55eabc44c168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55eabc44bf10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55eabc44c020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55eabc44c218 <col:29>
| `-NonNullAttr 0x55eabc44c270 <col:70, col:84> 1
|-FunctionDecl 0x55eabc44c3e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55eabc44c2b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55eabc44c490 <line:555:22>
| `-NonNullAttr 0x55eabc44c4e8 <col:63, col:77> 1
|-FunctionDecl 0x55eabc44c5f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55eabc44c538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55eabc44c698 <line:557:22>
| `-NonNullAttr 0x55eabc44c6f0 <col:52, col:66> 1
|-FunctionDecl 0x55eabc44c7f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55eabc44c738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55eabc44c898 <line:559:19>
| `-NonNullAttr 0x55eabc44c8f0 <col:49, col:63> 1
|-FunctionDecl 0x55eabc44cb28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55eabc44c938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55eabc44c9c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55eabc44cbd8 <col:39>
| `-NonNullAttr 0x55eabc44cc30 <col:69, col:86> 1 2
|-FunctionDecl 0x55eabc44cd30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55eabc44cc78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55eabc44cdd8 <line:564:22>
| `-NonNullAttr 0x55eabc44ce30 <col:52, col:66> 1
|-FunctionDecl 0x55eabc44cf98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55eabc44cee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55eabc44d040 <line:566:22>
| `-NonNullAttr 0x55eabc44d098 <col:52, col:66> 1
|-FunctionDecl 0x55eabc44d258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55eabc44d0e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55eabc44d178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55eabc44d308 <col:39>
| `-NonNullAttr 0x55eabc44d360 <col:69, col:86> 1 2
|-FunctionDecl 0x55eabc44d460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55eabc44d3a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55eabc44d508 <line:571:22>
| `-NonNullAttr 0x55eabc44d560 <col:52, col:66> 1
|-FunctionDecl 0x55eabc44d748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55eabc44d610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55eabc44d7f0 <line:573:22>
| `-NonNullAttr 0x55eabc44d848 <col:63, col:77> 1
|-FunctionDecl 0x55eabc44d950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55eabc44d898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55eabc44d9f8 <line:575:22>
| `-NonNullAttr 0x55eabc44da50 <col:63, col:77> 1
|-FunctionDecl 0x55eabc44dc78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55eabc44da98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55eabc44db18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55eabc44dd28 <line:579:22>
| `-NonNullAttr 0x55eabc44dd80 <col:63, col:80> 1 2
|-FunctionDecl 0x55eabc44dfa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55eabc44ddc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55eabc44de48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55eabc44e058 <line:582:22>
| `-NonNullAttr 0x55eabc44e0b0 <col:63, col:77> 1
|-FunctionDecl 0x55eabc44e258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55eabc44e0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55eabc44e178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55eabc44e308 <line:586:22>
| `-NonNullAttr 0x55eabc44e360 <col:63, col:80> 1 2
|-FunctionDecl 0x55eabc44e4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55eabc44e3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55eabc44e428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55eabc44e598 <col:36>
| `-NonNullAttr 0x55eabc44e5f0 <col:77, col:91> 1
|-FunctionDecl 0x55eabc44e928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55eabc44e6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55eabc44e7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55eabc44e9d8 <line:591:22>
| `-NonNullAttr 0x55eabc44ea30 <col:63, col:77> 1
|-FunctionDecl 0x55eabc44eba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55eabc44ea78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55eabc44ec50 <line:593:22>
| `-NonNullAttr 0x55eabc44eca8 <col:63, col:77> 1
|-FunctionDecl 0x55eabc44edb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55eabc44ecf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55eabc44ee58 <line:595:22>
| `-NonNullAttr 0x55eabc44eeb0 <col:52, col:66> 1
|-FunctionDecl 0x55eabc44efc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55eabc44ef10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55eabc44f070 <line:597:22>
| `-NonNullAttr 0x55eabc44f0c8 <col:52, col:66> 1
|-FunctionDecl 0x55eabc44f2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55eabc44f118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55eabc44f190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55eabc44f3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55eabc44f6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55eabc44f428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55eabc44f4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55eabc44f530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55eabc44f790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55eabc44f9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55eabc44f870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55eabc44fa50 <line:606:22>
| `-NonNullAttr 0x55eabc44faa8 <col:63, col:77> 1
|-FunctionDecl 0x55eabc44fbb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55eabc44faf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55eabc44fc58 <line:608:22>
| `-NonNullAttr 0x55eabc44fcb0 <col:63, col:77> 1
|-FunctionDecl 0x55eabc44ff10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55eabc44fcf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55eabc44fd78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55eabc44ffc0 <line:612:22>
| `-NonNullAttr 0x55eabc450018 <col:63, col:80> 1 2
|-FunctionDecl 0x55eabc450228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55eabc450068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55eabc4500e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55eabc4502d8 <col:37>
| `-NonNullAttr 0x55eabc450330 <col:78, col:92> 1
|-FunctionDecl 0x55eabc450548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55eabc450378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55eabc450420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55eabc4505f8 <line:618:22>
| `-NonNullAttr 0x55eabc450650 <col:63, col:80> 1 2
|-FunctionDecl 0x55eabc450818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55eabc450698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55eabc450710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55eabc4508c8 <line:621:22>
| `-NonNullAttr 0x55eabc450920 <col:63, col:77> 1
|-FunctionDecl 0x55eabc450bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55eabc450a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55eabc450a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55eabc450c78 <line:623:22>
| `-NonNullAttr 0x55eabc450cd0 <col:63, col:77> 1
|-FunctionDecl 0x55eabc450e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55eabc450d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55eabc450f20 <line:625:22>
| `-NonNullAttr 0x55eabc450f78 <col:63, col:77> 1
|-FunctionDecl 0x55eabc451080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55eabc450fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55eabc451128 <line:627:22>
| `-NonNullAttr 0x55eabc451180 <col:52, col:66> 1
|-FunctionDecl 0x55eabc451280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55eabc4511c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55eabc451328 <line:629:22>
| `-NonNullAttr 0x55eabc451380 <col:52, col:66> 1
|-FunctionDecl 0x55eabc451480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55eabc4513c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55eabc451528 <line:631:22>
| `-NonNullAttr 0x55eabc451580 <col:52, col:66> 1
|-FunctionDecl 0x55eabc451958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55eabc451660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55eabc451770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55eabc4517f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55eabc451a10 <line:635:22>
| `-NonNullAttr 0x55eabc451a68 <col:63, col:77> 1
|-FunctionDecl 0x55eabc451be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55eabc451ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55eabc451c90 <line:637:22>
| `-NonNullAttr 0x55eabc451ce8 <col:63, col:77> 1
|-FunctionDecl 0x55eabc451df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55eabc451d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55eabc451e98 <line:639:22>
| `-NonNullAttr 0x55eabc451ef0 <col:52, col:66> 1
|-FunctionDecl 0x55eabc4520e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55eabc451fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55eabc452190 <line:641:22>
| `-NonNullAttr 0x55eabc4521e8 <col:63, col:77> 1
|-FunctionDecl 0x55eabc4522f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55eabc452238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55eabc452398 <line:643:22>
| `-NonNullAttr 0x55eabc4523f0 <col:63, col:77> 1
|-FunctionDecl 0x55eabc452618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55eabc452438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55eabc4524b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55eabc4526c8 <line:647:22>
| `-NonNullAttr 0x55eabc452720 <col:63, col:80> 1 2
|-FunctionDecl 0x55eabc452928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55eabc452768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55eabc4527e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55eabc4529d8 <line:650:22>
| `-NonNullAttr 0x55eabc452a30 <col:63, col:77> 1
|-FunctionDecl 0x55eabc452d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55eabc452b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55eabc452c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55eabc452e28 <line:653:22>
| `-NonNullAttr 0x55eabc452e80 <col:63, col:77> 1
|-FunctionDecl 0x55eabc452fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55eabc452ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55eabc453090 <col:69>
|-FunctionDecl 0x55eabc453208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55eabc4530f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55eabc4532b0 <col:72>
|-FunctionDecl 0x55eabc4534e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55eabc453318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55eabc4533c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55eabc453598 <col:44>
|-FunctionDecl 0x55eabc4537b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55eabc453600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55eabc453678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55eabc453868 <line:660:22>
| `-NonNullAttr 0x55eabc4538c0 <col:63, col:77> 2
|-FunctionDecl 0x55eabc453d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55eabc4539a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55eabc453ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55eabc453bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55eabc453dc0 <col:47>
|-FunctionDecl 0x55eabc454f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55eabc453e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55eabc4550b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55eabc455020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55eabc455210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55eabc455178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55eabc4552d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55eabc455398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55eabc455458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55eabc455510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55eabc455590 prev 0x55eabc455510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55eabc4555f8 <col:24> 'int' 0
|-VarDecl 0x55eabc455630 <line:673:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55eabc4556b0 prev 0x55eabc455630 <line:674:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55eabc455718 <col:27> 'int' 0
|-VarDecl 0x55eabc455750 <line:675:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55eabc4557d0 prev 0x55eabc455750 <line:676:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55eabc455838 <col:27> 'int' 0
|-VarDecl 0x55eabc455868 <line:677:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55eabc4558e0 <line:678:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55eabc455960 <line:679:1, col:5> col:5 used x 'int'
|-VarDecl 0x55eabc4559e0 prev 0x55eabc455960 <line:680:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55eabc455a48 <col:9> 'int' 0
|-VarDecl 0x55eabc455a80 <line:681:1, col:5> col:5 used y 'int'
|-VarDecl 0x55eabc455b00 prev 0x55eabc455a80 <line:682:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55eabc455b68 <col:9> 'int' 0
|-VarDecl 0x55eabc455ba0 <line:683:1, col:5> col:5 used z 'int'
|-VarDecl 0x55eabc455c20 prev 0x55eabc455ba0 <line:684:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55eabc455c88 <col:9> 'int' 0
|-VarDecl 0x55eabc455cb8 <line:685:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x55eabc455d38 <line:686:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x55eabc455db0 <line:687:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x55eabc455e28 <line:688:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x55eabc455ea0 <line:689:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x55eabc455f70 <line:690:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x55eabc455fe8 <line:691:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x55eabc456060 <line:692:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x55eabc4560d8 <line:693:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x55eabc456150 <line:694:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x55eabc4561c8 <line:695:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x55eabc456248 <line:696:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x55eabc4562c8 <line:697:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x55eabc456340 <line:698:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x55eabc4563c0 <line:699:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x55eabc456438 <line:700:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x55eabc4564b0 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55eabc456528 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55eabc456640 prev 0x55eabc454f60 <line:703:1, line:731:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55eabc4565a8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55eabc457e68 <line:704:1, line:731:1>
|   |-CallExpr 0x55eabc456758 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55eabc456740 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eabc4566e8 <col:3> 'void ()' Function 0x55eabc3fc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55eabc4567d0 <line:706:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55eabc456778 <col:3> 'int' lvalue Var 0x55eabc4563c0 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55eabc4567b8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55eabc456798 <col:15> 'int' lvalue Var 0x55eabc4562c8 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55eabc456830 <line:707:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55eabc4567f0 <col:3> 'int' lvalue Var 0x55eabc4562c8 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x55eabc456810 <col:15> 'int' 2
|   |-BinaryOperator 0x55eabc4568a8 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55eabc456850 <col:3> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55eabc456890 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55eabc456870 <col:20> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55eabc456940 <line:709:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55eabc4568c8 <col:3> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55eabc456918 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55eabc4568e8 <col:27> 'int' 1
|   |-CallExpr 0x55eabc456ac8 <line:710:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55eabc456ab0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55eabc456960 <col:3> 'void (int)' Function 0x55eabc3fc0d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55eabc456a60 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55eabc456a40 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55eabc456a20 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55eabc4569d8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55eabc4569c0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55eabc456980 <col:23> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55eabc456a08 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55eabc4569f0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55eabc4569a0 <col:41> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55eabc456b48 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55eabc456af0 <col:3> '_Bool' lvalue Var 0x55eabc455fe8 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55eabc456b30 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55eabc456b10 <col:20> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55eabc456bc0 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55eabc456b68 <col:3> '_Bool' lvalue Var 0x55eabc456060 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55eabc456ba8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55eabc456b88 <col:20> '_Bool' lvalue Var 0x55eabc455e28 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55eabc456c38 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55eabc456be0 <col:3> '_Bool' lvalue Var 0x55eabc4560d8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55eabc456c20 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55eabc456c00 <col:20> '_Bool' lvalue Var 0x55eabc455ea0 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55eabc456cb0 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55eabc456c58 <col:3> '_Bool' lvalue Var 0x55eabc456150 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55eabc456c98 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55eabc456c78 <col:20> '_Bool' lvalue Var 0x55eabc455f70 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55eabc456d48 <line:715:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55eabc456cd0 <col:3> '_Bool' lvalue Var 0x55eabc455e28 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x55eabc456d20 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55eabc456cf0 <col:27> 'int' 1
|   |-CallExpr 0x55eabc456da0 <line:716:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55eabc456d88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eabc456d68 <col:3> 'void ()' Function 0x55eabc3fc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55eabc456df8 <line:717:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55eabc456de0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eabc456dc0 <col:3> 'void ()' Function 0x55eabc3fc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55eabc456e58 <line:718:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55eabc456e18 <col:3> 'int' lvalue Var 0x55eabc4559e0 'x' 'int'
|   | `-IntegerLiteral 0x55eabc456e38 <col:7> 'int' 1
|   |-CallExpr 0x55eabc456eb0 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55eabc456e98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eabc456e78 <col:3> 'void ()' Function 0x55eabc3fc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55eabc456f08 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55eabc456ef0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eabc456ed0 <col:3> 'void ()' Function 0x55eabc3fc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55eabc457208 <line:721:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55eabc456f28 <col:3> 'int' lvalue Var 0x55eabc455c20 'z' 'int'
|   | `-ConditionalOperator 0x55eabc4571d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55eabc457000 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55eabc456fb8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55eabc456fa0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55eabc456f48 <col:7> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55eabc456fe8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55eabc456fd0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55eabc456f80 <col:25> '_Bool' lvalue Var 0x55eabc455e28 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55eabc4571c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55eabc457020 <col:42> 'int' lvalue Var 0x55eabc4562c8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55eabc4571a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55eabc457170 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55eabc4570e0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55eabc457098 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55eabc457080 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55eabc457040 <col:55> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55eabc4570c8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55eabc4570b0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55eabc457060 <col:73> '_Bool' lvalue Var 0x55eabc456060 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55eabc457140 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55eabc457100 <col:90> 'int' lvalue Var 0x55eabc4563c0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55eabc457158 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eabc457120 <col:102> 'int' lvalue Var 0x55eabc455c20 'z' 'int'
|   |-BinaryOperator 0x55eabc457410 <line:722:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55eabc457228 <col:3> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55eabc4573f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55eabc4573c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55eabc4572e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55eabc4572a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55eabc457288 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55eabc457248 <col:20> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55eabc4572d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55eabc4572b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55eabc457268 <col:38> '_Bool' lvalue Var 0x55eabc455e28 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55eabc457380 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55eabc457338 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55eabc457308 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55eabc4573b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55eabc457398 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eabc457360 <col:66> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55eabc4576f8 <line:723:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55eabc457430 <col:3> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55eabc4576e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55eabc4576b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55eabc4575d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55eabc4574f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55eabc4574a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55eabc457490 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55eabc457450 <col:20> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55eabc4574d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55eabc4574c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55eabc457470 <col:38> '_Bool' lvalue Var 0x55eabc455e28 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55eabc4575b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55eabc457568 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55eabc457550 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55eabc457510 <col:56> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55eabc457598 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55eabc457580 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55eabc457530 <col:74> '_Bool' lvalue Var 0x55eabc456060 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55eabc457668 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55eabc457620 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55eabc4575f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55eabc457698 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55eabc457680 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eabc457648 <col:102> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55eabc457900 <line:724:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55eabc457718 <col:3> '_Bool' lvalue Var 0x55eabc455e28 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55eabc4578e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55eabc4578b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55eabc4577d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55eabc457790 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55eabc457778 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55eabc457738 <col:20> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55eabc4577c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55eabc4577a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55eabc457758 <col:38> '_Bool' lvalue Var 0x55eabc455e28 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55eabc457870 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55eabc457828 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55eabc4577f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55eabc4578a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55eabc457888 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eabc457850 <col:66> '_Bool' lvalue Var 0x55eabc455e28 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55eabc457be8 <line:725:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55eabc457920 <col:3> '_Bool' lvalue Var 0x55eabc456060 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55eabc457bd0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55eabc457ba0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55eabc457ac0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55eabc4579e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55eabc457998 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55eabc457980 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55eabc457940 <col:20> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55eabc4579c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55eabc4579b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55eabc457960 <col:38> '_Bool' lvalue Var 0x55eabc455e28 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55eabc457aa0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55eabc457a58 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55eabc457a40 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55eabc457a00 <col:56> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55eabc457a88 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55eabc457a70 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55eabc457a20 <col:74> '_Bool' lvalue Var 0x55eabc456060 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55eabc457b58 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55eabc457b10 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55eabc457ae0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55eabc457b88 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55eabc457b70 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eabc457b38 <col:102> '_Bool' lvalue Var 0x55eabc456060 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55eabc457c40 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55eabc457c28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eabc457c08 <col:3> 'void ()' Function 0x55eabc3fc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55eabc457c98 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55eabc457c80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eabc457c60 <col:3> 'void ()' Function 0x55eabc3fc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55eabc457d50 <line:728:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55eabc457cb8 <col:3> 'int' lvalue Var 0x55eabc455590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55eabc457d30 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55eabc457d18 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55eabc457cd8 <col:22> 'int' lvalue Var 0x55eabc455590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55eabc457cf8 <col:41> 'int' 1
|   |-CallExpr 0x55eabc457da8 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55eabc457d90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eabc457d70 <col:3> 'void ()' Function 0x55eabc3fc410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55eabc457e58 <line:730:3, col:36>
|     `-CallExpr 0x55eabc457e38 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55eabc457e20 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55eabc457dc8 <col:10> 'void *(void)' Function 0x55eabc3fbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55eabc458028 prev 0x55eabc4550b8 <line:732:1, line:751:1> line:732:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55eabc457f90 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55eabc459260 <line:733:1, line:751:1>
|   |-CallExpr 0x55eabc458108 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55eabc4580f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eabc4580d0 <col:3> 'void ()' Function 0x55eabc3fc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55eabc458180 <line:735:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55eabc458128 <col:3> 'int' lvalue Var 0x55eabc4556b0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55eabc458168 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55eabc458148 <col:25> 'int' lvalue Var 0x55eabc4559e0 'x' 'int'
|   |-CallExpr 0x55eabc4581d8 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55eabc4581c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eabc4581a0 <col:3> 'void ()' Function 0x55eabc3fc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55eabc458230 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55eabc458218 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eabc4581f8 <col:3> 'void ()' Function 0x55eabc3fc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55eabc458290 <line:738:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55eabc458250 <col:3> 'int' lvalue Var 0x55eabc455b00 'y' 'int'
|   | `-IntegerLiteral 0x55eabc458270 <col:7> 'int' 1
|   |-CallExpr 0x55eabc4582e8 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55eabc4582d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eabc4582b0 <col:3> 'void ()' Function 0x55eabc3fc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55eabc458340 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55eabc458328 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eabc458308 <col:3> 'void ()' Function 0x55eabc3fc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55eabc458628 <line:741:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55eabc458360 <col:3> 'int' lvalue Var 0x55eabc455c20 'z' 'int'
|   | `-ConditionalOperator 0x55eabc4585f8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55eabc458420 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55eabc4583d8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55eabc4583c0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55eabc458380 <col:7> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55eabc458408 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55eabc4583f0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55eabc4583a0 <col:25> '_Bool' lvalue Var 0x55eabc455ea0 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55eabc4585e0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55eabc458440 <col:42> 'int' lvalue Var 0x55eabc4562c8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55eabc4585c0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55eabc458590 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55eabc458500 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55eabc4584b8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55eabc4584a0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55eabc458460 <col:55> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55eabc4584e8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55eabc4584d0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55eabc458480 <col:73> '_Bool' lvalue Var 0x55eabc4560d8 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55eabc458560 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55eabc458520 <col:90> 'int' lvalue Var 0x55eabc4563c0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55eabc458578 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eabc458540 <col:102> 'int' lvalue Var 0x55eabc455c20 'z' 'int'
|   |-BinaryOperator 0x55eabc458830 <line:742:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55eabc458648 <col:3> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55eabc458818 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55eabc4587e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55eabc458708 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55eabc4586c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55eabc4586a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55eabc458668 <col:20> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55eabc4586f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55eabc4586d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55eabc458688 <col:38> '_Bool' lvalue Var 0x55eabc455ea0 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55eabc4587a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55eabc458758 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55eabc458728 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55eabc4587d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55eabc4587b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eabc458780 <col:66> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55eabc458b18 <line:743:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55eabc458850 <col:3> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55eabc458b00 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55eabc458ad0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55eabc4589f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55eabc458910 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55eabc4588c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55eabc4588b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55eabc458870 <col:20> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55eabc4588f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55eabc4588e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55eabc458890 <col:38> '_Bool' lvalue Var 0x55eabc455ea0 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55eabc4589d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55eabc458988 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55eabc458970 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55eabc458930 <col:56> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55eabc4589b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55eabc4589a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55eabc458950 <col:74> '_Bool' lvalue Var 0x55eabc4560d8 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55eabc458a88 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55eabc458a40 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55eabc458a10 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55eabc458ab8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55eabc458aa0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eabc458a68 <col:102> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55eabc458d20 <line:744:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55eabc458b38 <col:3> '_Bool' lvalue Var 0x55eabc455ea0 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55eabc458d08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55eabc458cd8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55eabc458bf8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55eabc458bb0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55eabc458b98 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55eabc458b58 <col:20> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55eabc458be0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55eabc458bc8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55eabc458b78 <col:38> '_Bool' lvalue Var 0x55eabc455ea0 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55eabc458c90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55eabc458c48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55eabc458c18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55eabc458cc0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55eabc458ca8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eabc458c70 <col:66> '_Bool' lvalue Var 0x55eabc455ea0 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55eabc459018 <line:745:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55eabc458d40 <col:3> '_Bool' lvalue Var 0x55eabc4560d8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55eabc459000 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55eabc458fd0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55eabc458ee0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55eabc458e00 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55eabc458db8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55eabc458da0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55eabc458d60 <col:20> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55eabc458de8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55eabc458dd0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55eabc458d80 <col:38> '_Bool' lvalue Var 0x55eabc455ea0 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55eabc458ec0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55eabc458e78 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55eabc458e60 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55eabc458e20 <col:56> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55eabc458ea8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55eabc458e90 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55eabc458e40 <col:74> '_Bool' lvalue Var 0x55eabc4560d8 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55eabc458f78 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55eabc458f30 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55eabc458f00 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55eabc458fb8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55eabc458fa0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eabc458f58 <col:102> '_Bool' lvalue Var 0x55eabc4560d8 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55eabc459070 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55eabc459058 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eabc459038 <col:3> 'void ()' Function 0x55eabc3fc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55eabc4590c8 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55eabc4590b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eabc459090 <col:3> 'void ()' Function 0x55eabc3fc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55eabc459180 <line:748:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55eabc4590e8 <col:3> 'int' lvalue Var 0x55eabc455590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55eabc459160 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55eabc459148 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55eabc459108 <col:22> 'int' lvalue Var 0x55eabc455590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55eabc459128 <col:41> 'int' 1
|   |-CallExpr 0x55eabc4591d8 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55eabc4591c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eabc4591a0 <col:3> 'void ()' Function 0x55eabc3fc410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55eabc459250 <line:750:3, col:36>
|     `-CallExpr 0x55eabc459230 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55eabc459218 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55eabc4591f8 <col:10> 'void *(void)' Function 0x55eabc3fbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55eabc4593a8 prev 0x55eabc455210 <line:752:1, line:771:1> line:752:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55eabc459310 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55eabc45a5e8 <line:753:1, line:771:1>
|   |-CallExpr 0x55eabc459488 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55eabc459470 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eabc459450 <col:3> 'void ()' Function 0x55eabc3fc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55eabc459500 <line:755:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55eabc4594a8 <col:3> 'int' lvalue Var 0x55eabc4557d0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55eabc4594e8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55eabc4594c8 <col:25> 'int' lvalue Var 0x55eabc455b00 'y' 'int'
|   |-CallExpr 0x55eabc459558 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55eabc459540 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eabc459520 <col:3> 'void ()' Function 0x55eabc3fc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55eabc4595b0 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55eabc459598 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eabc459578 <col:3> 'void ()' Function 0x55eabc3fc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55eabc459610 <line:758:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55eabc4595d0 <col:3> 'int' lvalue Var 0x55eabc455c20 'z' 'int'
|   | `-IntegerLiteral 0x55eabc4595f0 <col:7> 'int' 1
|   |-CallExpr 0x55eabc459668 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55eabc459650 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eabc459630 <col:3> 'void ()' Function 0x55eabc3fc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55eabc4596c0 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55eabc4596a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eabc459688 <col:3> 'void ()' Function 0x55eabc3fc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55eabc4599a8 <line:761:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55eabc4596e0 <col:3> 'int' lvalue Var 0x55eabc455c20 'z' 'int'
|   | `-ConditionalOperator 0x55eabc459978 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55eabc4597a0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55eabc459758 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55eabc459740 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55eabc459700 <col:7> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55eabc459788 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55eabc459770 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55eabc459720 <col:25> '_Bool' lvalue Var 0x55eabc455f70 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55eabc459960 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55eabc4597c0 <col:42> 'int' lvalue Var 0x55eabc4562c8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55eabc459940 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55eabc459910 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55eabc459880 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55eabc459838 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55eabc459820 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55eabc4597e0 <col:55> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55eabc459868 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55eabc459850 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55eabc459800 <col:73> '_Bool' lvalue Var 0x55eabc456150 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55eabc4598e0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55eabc4598a0 <col:90> 'int' lvalue Var 0x55eabc4563c0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55eabc4598f8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eabc4598c0 <col:102> 'int' lvalue Var 0x55eabc455c20 'z' 'int'
|   |-BinaryOperator 0x55eabc459bb0 <line:762:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55eabc4599c8 <col:3> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55eabc459b98 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55eabc459b68 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55eabc459a88 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55eabc459a40 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55eabc459a28 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55eabc4599e8 <col:20> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55eabc459a70 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55eabc459a58 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55eabc459a08 <col:38> '_Bool' lvalue Var 0x55eabc455f70 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55eabc459b20 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55eabc459ad8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55eabc459aa8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55eabc459b50 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55eabc459b38 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eabc459b00 <col:66> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55eabc459e98 <line:763:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55eabc459bd0 <col:3> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55eabc459e80 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55eabc459e50 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55eabc459d70 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55eabc459c90 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55eabc459c48 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55eabc459c30 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55eabc459bf0 <col:20> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55eabc459c78 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55eabc459c60 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55eabc459c10 <col:38> '_Bool' lvalue Var 0x55eabc455f70 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55eabc459d50 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55eabc459d08 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55eabc459cf0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55eabc459cb0 <col:56> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55eabc459d38 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55eabc459d20 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55eabc459cd0 <col:74> '_Bool' lvalue Var 0x55eabc456150 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55eabc459e08 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55eabc459dc0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55eabc459d90 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55eabc459e38 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55eabc459e20 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eabc459de8 <col:102> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55eabc45a0b8 <line:764:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55eabc459eb8 <col:3> '_Bool' lvalue Var 0x55eabc455f70 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55eabc45a0a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55eabc45a070 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55eabc459f78 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55eabc459f30 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55eabc459f18 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55eabc459ed8 <col:20> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55eabc459f60 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55eabc459f48 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55eabc459ef8 <col:38> '_Bool' lvalue Var 0x55eabc455f70 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55eabc45a028 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55eabc459fe0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55eabc459fb0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55eabc45a058 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55eabc45a040 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eabc45a008 <col:66> '_Bool' lvalue Var 0x55eabc455f70 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55eabc45a3a0 <line:765:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55eabc45a0d8 <col:3> '_Bool' lvalue Var 0x55eabc456150 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55eabc45a388 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55eabc45a358 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55eabc45a278 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55eabc45a198 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55eabc45a150 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55eabc45a138 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55eabc45a0f8 <col:20> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55eabc45a180 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55eabc45a168 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55eabc45a118 <col:38> '_Bool' lvalue Var 0x55eabc455f70 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55eabc45a258 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55eabc45a210 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55eabc45a1f8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55eabc45a1b8 <col:56> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55eabc45a240 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55eabc45a228 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55eabc45a1d8 <col:74> '_Bool' lvalue Var 0x55eabc456150 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55eabc45a310 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55eabc45a2c8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55eabc45a298 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55eabc45a340 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55eabc45a328 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eabc45a2f0 <col:102> '_Bool' lvalue Var 0x55eabc456150 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55eabc45a3f8 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55eabc45a3e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eabc45a3c0 <col:3> 'void ()' Function 0x55eabc3fc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55eabc45a450 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55eabc45a438 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eabc45a418 <col:3> 'void ()' Function 0x55eabc3fc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55eabc45a508 <line:768:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55eabc45a470 <col:3> 'int' lvalue Var 0x55eabc455590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55eabc45a4e8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55eabc45a4d0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55eabc45a490 <col:22> 'int' lvalue Var 0x55eabc455590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55eabc45a4b0 <col:41> 'int' 1
|   |-CallExpr 0x55eabc45a560 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55eabc45a548 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eabc45a528 <col:3> 'void ()' Function 0x55eabc3fc410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55eabc45a5d8 <line:770:3, col:36>
|     `-CallExpr 0x55eabc45a5b8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55eabc45a5a0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55eabc45a580 <col:10> 'void *(void)' Function 0x55eabc3fbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55eabc45a6a0 prev 0x55eabc4552d8 <line:772:1, line:774:1> line:772:6 fence 'void ()'
| `-CompoundStmt 0x55eabc45a740 <line:773:1, line:774:1>
|-FunctionDecl 0x55eabc45a770 prev 0x55eabc455398 <line:775:1, line:777:1> line:775:6 isync 'void ()'
| `-CompoundStmt 0x55eabc45a810 <line:776:1, line:777:1>
|-FunctionDecl 0x55eabc45a840 prev 0x55eabc455458 <line:778:1, line:780:1> line:778:6 lwfence 'void ()'
| `-CompoundStmt 0x55eabc45a8e0 <line:779:1, line:780:1>
`-FunctionDecl 0x55eabc45a948 <line:781:1, line:818:1> line:781:5 main 'int ()'
  `-CompoundStmt 0x55eabc45f000 <line:782:1, line:818:1>
    |-DeclStmt 0x55eabc45aa60 <line:783:3, col:18>
    | `-VarDecl 0x55eabc45a9f8 <col:3, col:13> col:13 used t1978 'pthread_t':'unsigned long'
    |-CallExpr 0x55eabc45ac68 <line:784:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55eabc45ac50 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55eabc45aa78 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55eabc43c8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55eabc45aab8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55eabc45aa98 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55eabc45a9f8 't1978' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55eabc45aca8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55eabc45ab30 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55eabc45ab08 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55eabc45aad0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55eabc45acc0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55eabc45ab50 <col:39> 'void *(void *)' Function 0x55eabc456640 'P0' 'void *(void *)'
    | `-ParenExpr 0x55eabc45abd0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55eabc45aba8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55eabc45ab70 <col:52> 'int' 0
    |-DeclStmt 0x55eabc45ad50 <line:785:3, col:18>
    | `-VarDecl 0x55eabc45ace8 <col:3, col:13> col:13 used t1979 'pthread_t':'unsigned long'
    |-CallExpr 0x55eabc45aef8 <line:786:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55eabc45aee0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55eabc45ad68 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55eabc43c8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55eabc45ada8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55eabc45ad88 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55eabc45ace8 't1979' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55eabc45af38 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55eabc45ae20 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55eabc45adf8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55eabc45adc0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55eabc45af50 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55eabc45ae40 <col:39> 'void *(void *)' Function 0x55eabc458028 'P1' 'void *(void *)'
    | `-ParenExpr 0x55eabc45aec0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55eabc45ae98 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55eabc45ae60 <col:52> 'int' 0
    |-DeclStmt 0x55eabc45b028 <line:787:3, col:18>
    | `-VarDecl 0x55eabc45afc0 <col:3, col:13> col:13 used t1980 'pthread_t':'unsigned long'
    |-CallExpr 0x55eabc45b1d0 <line:788:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55eabc45b1b8 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55eabc45b040 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55eabc43c8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55eabc45b080 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55eabc45b060 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55eabc45afc0 't1980' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55eabc45b210 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55eabc45b0f8 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55eabc45b0d0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55eabc45b098 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55eabc45b228 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55eabc45b118 <col:39> 'void *(void *)' Function 0x55eabc4593a8 'P2' 'void *(void *)'
    | `-ParenExpr 0x55eabc45b198 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55eabc45b170 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55eabc45b138 <col:52> 'int' 0
    |-CallExpr 0x55eabc45b278 <line:789:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55eabc45b260 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55eabc45b240 <col:3> 'void ()' Function 0x55eabc3fc350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55eabc45b348 <line:790:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55eabc45b298 <col:3> '_Bool' lvalue Var 0x55eabc455868 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55eabc45b330 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55eabc45b310 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55eabc45b2f8 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55eabc45b2b8 <col:21> 'int' lvalue Var 0x55eabc455590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55eabc45b2d8 <col:41> 'int' 3
    |-CallExpr 0x55eabc45b3a0 <line:791:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55eabc45b388 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55eabc45b368 <col:3> 'void ()' Function 0x55eabc3fc410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55eabc45b418 <line:792:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55eabc45b400 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55eabc45b3c0 <col:3> 'void (int)' Function 0x55eabc3fbca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55eabc45b458 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55eabc45b440 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55eabc45b3e0 <col:21> '_Bool' lvalue Var 0x55eabc455868 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55eabc45b4a8 <line:793:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55eabc45b490 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55eabc45b470 <col:3> 'void ()' Function 0x55eabc3fc350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55eabc45b790 <line:794:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55eabc45b4c8 <col:3> 'int' lvalue Var 0x55eabc455c20 'z' 'int'
    | `-ConditionalOperator 0x55eabc45b760 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55eabc45b588 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55eabc45b540 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55eabc45b528 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55eabc45b4e8 <col:7> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55eabc45b570 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55eabc45b558 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55eabc45b508 <col:25> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55eabc45b748 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55eabc45b5a8 <col:42> 'int' lvalue Var 0x55eabc4562c8 'z$w_buff0' 'int'
    |   `-ParenExpr 0x55eabc45b728 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55eabc45b6f8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55eabc45b668 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55eabc45b620 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55eabc45b608 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55eabc45b5c8 <col:55> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55eabc45b650 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55eabc45b638 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55eabc45b5e8 <col:73> '_Bool' lvalue Var 0x55eabc455fe8 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55eabc45b6c8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55eabc45b688 <col:90> 'int' lvalue Var 0x55eabc4563c0 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55eabc45b6e0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55eabc45b6a8 <col:102> 'int' lvalue Var 0x55eabc455c20 'z' 'int'
    |-BinaryOperator 0x55eabc45b998 <line:795:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55eabc45b7b0 <col:3> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55eabc45b980 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55eabc45b950 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55eabc45b870 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55eabc45b828 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55eabc45b810 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55eabc45b7d0 <col:20> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55eabc45b858 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55eabc45b840 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55eabc45b7f0 <col:38> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55eabc45b908 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55eabc45b8c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55eabc45b890 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55eabc45b938 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55eabc45b920 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55eabc45b8e8 <col:66> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55eabc45bc80 <line:796:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55eabc45b9b8 <col:3> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55eabc45bc68 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55eabc45bc38 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55eabc45bb58 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55eabc45ba78 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55eabc45ba30 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55eabc45ba18 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55eabc45b9d8 <col:20> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55eabc45ba60 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55eabc45ba48 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55eabc45b9f8 <col:38> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55eabc45bb38 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55eabc45baf0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55eabc45bad8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55eabc45ba98 <col:56> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55eabc45bb20 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55eabc45bb08 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55eabc45bab8 <col:74> '_Bool' lvalue Var 0x55eabc455fe8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55eabc45bbf0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55eabc45bba8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55eabc45bb78 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55eabc45bc20 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55eabc45bc08 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55eabc45bbd0 <col:102> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55eabc45be88 <line:797:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55eabc45bca0 <col:3> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55eabc45be70 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55eabc45be40 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55eabc45bd60 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55eabc45bd18 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55eabc45bd00 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55eabc45bcc0 <col:20> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55eabc45bd48 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55eabc45bd30 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55eabc45bce0 <col:38> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55eabc45bdf8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55eabc45bdb0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55eabc45bd80 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55eabc45be28 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55eabc45be10 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55eabc45bdd8 <col:66> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55eabc45c198 <line:798:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55eabc45bea8 <col:3> '_Bool' lvalue Var 0x55eabc455fe8 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55eabc45c180 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55eabc45c150 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55eabc45c070 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55eabc45bf68 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55eabc45bf20 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55eabc45bf08 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55eabc45bec8 <col:20> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55eabc45bf50 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55eabc45bf38 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55eabc45bee8 <col:38> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55eabc45c050 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55eabc45c008 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55eabc45bff0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55eabc45bf88 <col:56> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55eabc45c038 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55eabc45c020 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55eabc45bfd0 <col:74> '_Bool' lvalue Var 0x55eabc455fe8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55eabc45c108 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55eabc45c0c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55eabc45c090 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55eabc45c138 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55eabc45c120 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55eabc45c0e8 <col:102> '_Bool' lvalue Var 0x55eabc455fe8 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55eabc45c1f0 <line:799:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55eabc45c1d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55eabc45c1b8 <col:3> 'void ()' Function 0x55eabc3fc410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55eabc45c248 <line:800:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55eabc45c230 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55eabc45c210 <col:3> 'void ()' Function 0x55eabc3fc350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55eabc45c2f8 <line:801:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x55eabc45c268 <col:3> '_Bool' lvalue Var 0x55eabc4564b0 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x55eabc45c2e0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x55eabc45c2c0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x55eabc45c2a8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55eabc45c288 <col:19> 'void *(void)' Function 0x55eabc3fbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x55eabc45c3a8 <line:802:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x55eabc45c318 <col:3> '_Bool' lvalue Var 0x55eabc456528 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x55eabc45c390 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x55eabc45c370 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x55eabc45c358 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55eabc45c338 <col:19> 'void *(void)' Function 0x55eabc3fbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x55eabc45c420 <line:803:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x55eabc45c3c8 <col:3> '_Bool' lvalue Var 0x55eabc455cb8 'z$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x55eabc45c408 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x55eabc45c3e8 <col:21> '_Bool' lvalue Var 0x55eabc456528 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x55eabc45c498 <line:804:3, col:15> 'int' '='
    | |-DeclRefExpr 0x55eabc45c440 <col:3> 'int' lvalue Var 0x55eabc455d38 'z$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x55eabc45c480 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55eabc45c460 <col:15> 'int' lvalue Var 0x55eabc455c20 'z' 'int'
    |-BinaryOperator 0x55eabc45c8d0 <line:805:3, col:162> 'int' '='
    | |-DeclRefExpr 0x55eabc45c4b8 <col:3> 'int' lvalue Var 0x55eabc455c20 'z' 'int'
    | `-ConditionalOperator 0x55eabc45c8a0 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x55eabc45c6c8 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x55eabc45c5e8 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x55eabc45c510 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x55eabc45c4f8 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x55eabc45c4d8 <col:8> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x55eabc45c5c8 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x55eabc45c560 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x55eabc45c548 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x55eabc45c528 <col:27> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x55eabc45c5b0 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x55eabc45c598 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x55eabc45c578 <col:46> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x55eabc45c6a8 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x55eabc45c640 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x55eabc45c628 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55eabc45c608 <col:65> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x55eabc45c690 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x55eabc45c678 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x55eabc45c658 <col:84> '_Bool' lvalue Var 0x55eabc455fe8 'z$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55eabc45c888 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55eabc45c6e8 <col:101> 'int' lvalue Var 0x55eabc455c20 'z' 'int'
    |   `-ParenExpr 0x55eabc45c868 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x55eabc45c838 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x55eabc45c7a8 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55eabc45c760 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55eabc45c748 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55eabc45c708 <col:106> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55eabc45c790 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55eabc45c778 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55eabc45c728 <col:124> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55eabc45c808 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55eabc45c7c8 <col:141> 'int' lvalue Var 0x55eabc4562c8 'z$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x55eabc45c820 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55eabc45c7e8 <col:153> 'int' lvalue Var 0x55eabc4563c0 'z$w_buff1' 'int'
    |-BinaryOperator 0x55eabc45cde0 <line:806:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55eabc45c8f0 <col:3> 'int' lvalue Var 0x55eabc4562c8 'z$w_buff0' 'int'
    | `-ConditionalOperator 0x55eabc45cdb0 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55eabc45cd80 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55eabc45cd68 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55eabc45c910 <col:15> '_Bool' lvalue Var 0x55eabc456528 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55eabc45cd98 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55eabc45c930 <col:31> 'int' lvalue Var 0x55eabc4562c8 'z$w_buff0' 'int'
    |   `-ParenExpr 0x55eabc45cd48 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55eabc45cd18 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55eabc45cb40 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55eabc45ca60 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55eabc45c988 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55eabc45c970 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55eabc45c950 <col:45> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55eabc45ca40 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55eabc45c9d8 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55eabc45c9c0 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55eabc45c9a0 <col:64> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55eabc45ca28 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55eabc45ca10 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55eabc45c9f0 <col:83> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55eabc45cb20 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55eabc45cab8 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55eabc45caa0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55eabc45ca80 <col:102> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55eabc45cb08 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55eabc45caf0 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55eabc45cad0 <col:121> '_Bool' lvalue Var 0x55eabc455fe8 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55eabc45cd00 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55eabc45cb60 <col:138> 'int' lvalue Var 0x55eabc4562c8 'z$w_buff0' 'int'
    |       `-ParenExpr 0x55eabc45cce0 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55eabc45ccb0 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55eabc45cc20 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55eabc45cbd8 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55eabc45cbc0 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55eabc45cb80 <col:151> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55eabc45cc08 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55eabc45cbf0 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55eabc45cba0 <col:169> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55eabc45cc80 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55eabc45cc40 <col:186> 'int' lvalue Var 0x55eabc4562c8 'z$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x55eabc45cc98 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55eabc45cc60 <col:198> 'int' lvalue Var 0x55eabc4562c8 'z$w_buff0' 'int'
    |-BinaryOperator 0x55eabc45d308 <line:807:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55eabc45ce00 <col:3> 'int' lvalue Var 0x55eabc4563c0 'z$w_buff1' 'int'
    | `-ConditionalOperator 0x55eabc45d2d8 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55eabc45d2a8 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55eabc45d290 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55eabc45ce20 <col:15> '_Bool' lvalue Var 0x55eabc456528 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55eabc45d2c0 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55eabc45ce40 <col:31> 'int' lvalue Var 0x55eabc4563c0 'z$w_buff1' 'int'
    |   `-ParenExpr 0x55eabc45d270 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55eabc45d240 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55eabc45d068 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55eabc45cf70 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55eabc45ce98 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55eabc45ce80 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55eabc45ce60 <col:45> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55eabc45cf50 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55eabc45cee8 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55eabc45ced0 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55eabc45ceb0 <col:64> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55eabc45cf38 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55eabc45cf20 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55eabc45cf00 <col:83> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55eabc45d048 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55eabc45cfe0 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55eabc45cfb0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55eabc45cf90 <col:102> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55eabc45d030 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55eabc45d018 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55eabc45cff8 <col:121> '_Bool' lvalue Var 0x55eabc455fe8 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55eabc45d228 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55eabc45d088 <col:138> 'int' lvalue Var 0x55eabc4563c0 'z$w_buff1' 'int'
    |       `-ParenExpr 0x55eabc45d208 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55eabc45d1d8 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55eabc45d148 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55eabc45d100 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55eabc45d0e8 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55eabc45d0a8 <col:151> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55eabc45d130 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55eabc45d118 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55eabc45d0c8 <col:169> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55eabc45d1a8 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55eabc45d168 <col:186> 'int' lvalue Var 0x55eabc4563c0 'z$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x55eabc45d1c0 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55eabc45d188 <col:198> 'int' lvalue Var 0x55eabc4563c0 'z$w_buff1' 'int'
    |-BinaryOperator 0x55eabc45d8b0 <line:808:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55eabc45d328 <col:3> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55eabc45d898 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55eabc45d868 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55eabc45d820 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55eabc45d808 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55eabc45d348 <col:20> '_Bool' lvalue Var 0x55eabc456528 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55eabc45d850 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55eabc45d838 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55eabc45d368 <col:36> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x55eabc45d7e8 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55eabc45d7b8 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55eabc45d578 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55eabc45d498 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55eabc45d3c0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55eabc45d3a8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55eabc45d388 <col:55> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55eabc45d478 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55eabc45d410 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55eabc45d3f8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55eabc45d3d8 <col:74> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55eabc45d460 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55eabc45d448 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55eabc45d428 <col:93> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55eabc45d558 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55eabc45d4f0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55eabc45d4d8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55eabc45d4b8 <col:112> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55eabc45d540 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55eabc45d528 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55eabc45d508 <col:131> '_Bool' lvalue Var 0x55eabc455fe8 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55eabc45d7a0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55eabc45d788 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55eabc45d598 <col:148> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x55eabc45d768 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55eabc45d738 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55eabc45d658 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55eabc45d610 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55eabc45d5f8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55eabc45d5b8 <col:166> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55eabc45d640 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55eabc45d628 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55eabc45d5d8 <col:184> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55eabc45d6f0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55eabc45d6a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55eabc45d678 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55eabc45d720 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55eabc45d708 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55eabc45d6d0 <col:212> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55eabc45de78 <line:809:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55eabc45d8d0 <col:3> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55eabc45de60 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55eabc45de30 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55eabc45dde8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55eabc45ddd0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55eabc45d8f0 <col:20> '_Bool' lvalue Var 0x55eabc456528 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55eabc45de18 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55eabc45de00 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55eabc45d910 <col:36> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x55eabc45ddb0 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55eabc45dd80 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55eabc45db20 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55eabc45da40 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55eabc45d968 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55eabc45d950 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55eabc45d930 <col:55> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55eabc45da20 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55eabc45d9b8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55eabc45d9a0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55eabc45d980 <col:74> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55eabc45da08 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55eabc45d9f0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55eabc45d9d0 <col:93> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55eabc45db00 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55eabc45da98 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55eabc45da80 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55eabc45da60 <col:112> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55eabc45dae8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55eabc45dad0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55eabc45dab0 <col:131> '_Bool' lvalue Var 0x55eabc455fe8 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55eabc45dd68 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55eabc45dd50 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55eabc45db40 <col:148> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x55eabc45dd30 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55eabc45dd00 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55eabc45dc00 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55eabc45dbb8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55eabc45dba0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55eabc45db60 <col:166> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55eabc45dbe8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55eabc45dbd0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55eabc45db80 <col:184> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55eabc45dcd0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55eabc45dc50 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55eabc45dc20 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55eabc45dce8 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55eabc45dca8 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55eabc45dc78 <col:219> 'int' 0
    |-BinaryOperator 0x55eabc45e440 <line:810:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55eabc45de98 <col:3> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55eabc45e428 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55eabc45e3f8 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55eabc45e3b0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55eabc45e398 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55eabc45deb8 <col:20> '_Bool' lvalue Var 0x55eabc456528 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55eabc45e3e0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55eabc45e3c8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55eabc45ded8 <col:36> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x55eabc45e378 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55eabc45e348 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55eabc45e108 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55eabc45e028 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55eabc45df30 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55eabc45df18 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55eabc45def8 <col:55> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55eabc45e008 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55eabc45df80 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55eabc45df68 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55eabc45df48 <col:74> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55eabc45dff0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55eabc45dfb8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55eabc45df98 <col:93> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55eabc45e0e8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55eabc45e080 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55eabc45e068 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55eabc45e048 <col:112> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55eabc45e0d0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55eabc45e0b8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55eabc45e098 <col:131> '_Bool' lvalue Var 0x55eabc455fe8 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55eabc45e330 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55eabc45e318 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55eabc45e128 <col:148> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x55eabc45e2f8 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55eabc45e2c8 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55eabc45e1e8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55eabc45e1a0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55eabc45e188 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55eabc45e148 <col:166> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55eabc45e1d0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55eabc45e1b8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55eabc45e168 <col:184> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55eabc45e280 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55eabc45e238 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55eabc45e208 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55eabc45e2b0 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55eabc45e298 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55eabc45e260 <col:212> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55eabc45ea08 <line:811:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55eabc45e460 <col:3> '_Bool' lvalue Var 0x55eabc455fe8 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55eabc45e9f0 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55eabc45e9c0 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55eabc45e978 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55eabc45e960 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55eabc45e480 <col:20> '_Bool' lvalue Var 0x55eabc456528 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55eabc45e9a8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55eabc45e990 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55eabc45e4a0 <col:36> '_Bool' lvalue Var 0x55eabc455fe8 'z$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x55eabc45e940 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55eabc45e910 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55eabc45e6b0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55eabc45e5d0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55eabc45e4f8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55eabc45e4e0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55eabc45e4c0 <col:55> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55eabc45e5b0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55eabc45e548 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55eabc45e530 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55eabc45e510 <col:74> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55eabc45e598 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55eabc45e580 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55eabc45e560 <col:93> '_Bool' lvalue Var 0x55eabc456438 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55eabc45e690 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55eabc45e628 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55eabc45e610 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55eabc45e5f0 <col:112> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55eabc45e678 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55eabc45e660 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55eabc45e640 <col:131> '_Bool' lvalue Var 0x55eabc455fe8 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55eabc45e8f8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55eabc45e8e0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55eabc45e6d0 <col:148> '_Bool' lvalue Var 0x55eabc455fe8 'z$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x55eabc45e8c0 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55eabc45e890 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55eabc45e790 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55eabc45e748 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55eabc45e730 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55eabc45e6f0 <col:166> '_Bool' lvalue Var 0x55eabc456340 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55eabc45e778 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55eabc45e760 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55eabc45e710 <col:184> '_Bool' lvalue Var 0x55eabc455db0 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55eabc45e860 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55eabc45e7e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55eabc45e7b0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55eabc45e878 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55eabc45e838 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55eabc45e808 <col:219> 'int' 0
    |-BinaryOperator 0x55eabc45ec40 <line:812:3, col:85> '_Bool' '='
    | |-DeclRefExpr 0x55eabc45ea28 <col:3> '_Bool' lvalue Var 0x55eabc4558e0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55eabc45ec28 <col:21, col:85> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55eabc45ec10 <col:21, col:85> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55eabc45ebf0 <col:22, col:85> 'int'
    |       `-BinaryOperator 0x55eabc45ebd0 <col:23, col:84> 'int' '&&'
    |         |-BinaryOperator 0x55eabc45eb38 <col:23, col:56> 'int' '&&'
    |         | |-BinaryOperator 0x55eabc45eaa0 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x55eabc45ea88 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x55eabc45ea48 <col:23> 'int' lvalue Var 0x55eabc455c20 'z' 'int'
    |         | | `-IntegerLiteral 0x55eabc45ea68 <col:28> 'int' 2
    |         | `-BinaryOperator 0x55eabc45eb18 <col:33, col:56> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55eabc45eb00 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55eabc45eac0 <col:33> 'int' lvalue Var 0x55eabc4556b0 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x55eabc45eae0 <col:56> 'int' 1
    |         `-BinaryOperator 0x55eabc45ebb0 <col:61, col:84> 'int' '=='
    |           |-ImplicitCastExpr 0x55eabc45eb98 <col:61> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55eabc45eb58 <col:61> 'int' lvalue Var 0x55eabc4557d0 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x55eabc45eb78 <col:84> 'int' 1
    |-BinaryOperator 0x55eabc45ed70 <line:813:3, col:37> 'int' '='
    | |-DeclRefExpr 0x55eabc45ec60 <col:3> 'int' lvalue Var 0x55eabc455c20 'z' 'int'
    | `-ConditionalOperator 0x55eabc45ed40 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x55eabc45ecf8 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55eabc45ece0 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55eabc45ec80 <col:7> '_Bool' lvalue Var 0x55eabc455cb8 'z$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x55eabc45ed10 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55eabc45eca0 <col:25> 'int' lvalue Var 0x55eabc455d38 'z$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x55eabc45ed28 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55eabc45ecc0 <col:37> 'int' lvalue Var 0x55eabc455c20 'z' 'int'
    |-BinaryOperator 0x55eabc45ee08 <line:814:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x55eabc45ed90 <col:3> '_Bool' lvalue Var 0x55eabc455cb8 'z$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x55eabc45ede0 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x55eabc45edb0 <col:28> 'int' 0
    |-CallExpr 0x55eabc45ee60 <line:815:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55eabc45ee48 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55eabc45ee28 <col:3> 'void ()' Function 0x55eabc3fc410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55eabc45eed8 <line:816:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55eabc45eec0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55eabc45ee80 <col:3> 'void (int)' Function 0x55eabc3fc0d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55eabc45ef18 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55eabc45ef00 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55eabc45eea0 <col:21> '_Bool' lvalue Var 0x55eabc4558e0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55eabc45ef50 <line:817:3, col:10>
      `-IntegerLiteral 0x55eabc45ef30 <col:10> 'int' 0
