TranslationUnitDecl 0x56531aee1f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x56531aee2848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x56531aee2520 '__int128'
|-TypedefDecl 0x56531aee28b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x56531aee2540 'unsigned __int128'
|-TypedefDecl 0x56531aee2bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x56531aee2990 'struct __NSConstantString_tag'
|   `-Record 0x56531aee2910 '__NSConstantString_tag'
|-TypedefDecl 0x56531aee2c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x56531aee2c20 'char *'
|   `-BuiltinType 0x56531aee2020 'char'
|-TypedefDecl 0x56531af21b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x56531aee2f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x56531aee2d40 'struct __va_list_tag'
|     `-Record 0x56531aee2cc0 '__va_list_tag'
|-FunctionDecl 0x56531af21ca0 <pthread-wmm/podwr001_tso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x56531af21bd0 <col:31> col:34 'int'
|-FunctionDecl 0x56531af21e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x56531af21f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x56531af220d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x56531af22048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x56531af22308 <col:40, col:99>
|   |-IfStmt 0x56531af222d8 <col:42, col:88>
|   | |-UnaryOperator 0x56531af221b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x56531af221a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x56531af22180 <col:47> 'int' lvalue ParmVar 0x56531af22048 'expression' 'int'
|   | `-CompoundStmt 0x56531af222c0 <col:59, col:88>
|   |   `-LabelStmt 0x56531af222a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x56531af22238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x56531af22220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x56531af221d0 <col:68> 'void () __attribute__((noreturn))' Function 0x56531af21f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x56531af222f0 <col:89>
|   `-ReturnStmt 0x56531af222f8 <col:91>
|-FunctionDecl 0x56531af22350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x56531af22410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x56531af22790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56531af224c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x56531af22548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x56531af225c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56531af22648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56531af22850 <line:10:22>
|-FunctionDecl 0x56531af488a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56531af228c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x56531af22940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x56531af229c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56531af22a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56531af48960 <line:13:22>
|-FunctionDecl 0x56531af48c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56531af489d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x56531af48a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x56531af48ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x56531af48cc8 <line:15:22>
|-TypedefDecl 0x56531af48d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x56531aee20e0 'unsigned char'
|-TypedefDecl 0x56531af48da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x56531aee2100 'unsigned short'
|-TypedefDecl 0x56531af48e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x56531aee2120 'unsigned int'
|-TypedefDecl 0x56531af48e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x56531aee2140 'unsigned long'
|-TypedefDecl 0x56531af48ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x56531aee2040 'signed char'
|-TypedefDecl 0x56531af48f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x56531aee20e0 'unsigned char'
|-TypedefDecl 0x56531af48fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x56531aee2060 'short'
|-TypedefDecl 0x56531af49048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x56531aee2100 'unsigned short'
|-TypedefDecl 0x56531af490b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x56531aee2080 'int'
|-TypedefDecl 0x56531af49128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x56531aee2120 'unsigned int'
|-TypedefDecl 0x56531af49198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x56531aee20a0 'long'
|-TypedefDecl 0x56531af49208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x56531aee2140 'unsigned long'
|-TypedefDecl 0x56531af49278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x56531aee20a0 'long'
|-TypedefDecl 0x56531af492e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x56531aee2140 'unsigned long'
|-TypedefDecl 0x56531af49358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x56531aee2140 'unsigned long'
|-TypedefDecl 0x56531af493c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x56531aee2120 'unsigned int'
|-TypedefDecl 0x56531af49438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x56531aee2120 'unsigned int'
|-TypedefDecl 0x56531af494a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x56531aee2140 'unsigned long'
|-TypedefDecl 0x56531af49518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x56531aee2140 'unsigned long'
|-TypedefDecl 0x56531af49588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x56531aee2120 'unsigned int'
|-TypedefDecl 0x56531af495f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x56531aee2140 'unsigned long'
|-TypedefDecl 0x56531af49668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x56531aee20a0 'long'
|-TypedefDecl 0x56531af496d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x56531aee20a0 'long'
|-TypedefDecl 0x56531af49748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x56531aee2080 'int'
|-RecordDecl 0x56531af497a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x56531af49918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x56531af499d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x56531af49970 'struct __fsid_t' sugar
|   `-RecordType 0x56531af49820 '__fsid_t'
|     `-Record 0x56531af497a0 ''
|-TypedefDecl 0x56531af49a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x56531aee20a0 'long'
|-TypedefDecl 0x56531af49ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x56531aee2140 'unsigned long'
|-TypedefDecl 0x56531af49b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x56531aee2140 'unsigned long'
|-TypedefDecl 0x56531af49ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x56531aee2120 'unsigned int'
|-TypedefDecl 0x56531af49c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x56531aee20a0 'long'
|-TypedefDecl 0x56531af49c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x56531aee2120 'unsigned int'
|-TypedefDecl 0x56531af49cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x56531aee20a0 'long'
|-TypedefDecl 0x56531af49d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x56531aee2080 'int'
|-TypedefDecl 0x56531af49dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x56531aee2080 'int'
|-TypedefDecl 0x56531af49e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x56531aee2080 'int'
|-TypedefDecl 0x56531af49eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x56531aee27a0 'void *'
|   `-BuiltinType 0x56531aee1fe0 'void'
|-TypedefDecl 0x56531af49f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x56531aee20a0 'long'
|-TypedefDecl 0x56531af49f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x56531aee20a0 'long'
|-TypedefDecl 0x56531af4a008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x56531aee20a0 'long'
|-TypedefDecl 0x56531af4a078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x56531aee2140 'unsigned long'
|-TypedefDecl 0x56531af4a0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x56531aee2140 'unsigned long'
|-TypedefDecl 0x56531af4a158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x56531aee2140 'unsigned long'
|-TypedefDecl 0x56531af4a1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x56531aee2140 'unsigned long'
|-TypedefDecl 0x56531af4a238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x56531aee20a0 'long'
|-TypedefDecl 0x56531af4a2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x56531aee20a0 'long'
|-TypedefDecl 0x56531af4a318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x56531aee20a0 'long'
|-TypedefDecl 0x56531af4a388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x56531aee2140 'unsigned long'
|-TypedefDecl 0x56531af4a418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x56531af4a3e0 '__off64_t' sugar
|   |-Typedef 0x56531af496d8 '__off64_t'
|   `-BuiltinType 0x56531aee20a0 'long'
|-TypedefDecl 0x56531af4a510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x56531af4a4d0 '__quad_t *'
|   `-TypedefType 0x56531af4a470 '__quad_t' sugar
|     |-Typedef 0x56531af49278 '__quad_t'
|     `-BuiltinType 0x56531aee20a0 'long'
|-TypedefDecl 0x56531af4a580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x56531aee2c20 'char *'
|   `-BuiltinType 0x56531aee2020 'char'
|-TypedefDecl 0x56531af4a5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x56531aee20a0 'long'
|-TypedefDecl 0x56531af4a660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x56531aee2120 'unsigned int'
|-FunctionDecl 0x56531af4a7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x56531af4a6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x56531af4aae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x56531af4aad8 <line:72:3, col:34>
|     `-CallExpr 0x56531af4aa98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x56531af4aa80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56531af4aa10 <col:10> '<builtin fn type>' Function 0x56531af4a880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x56531af4aac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56531af4aa30 <col:29> 'unsigned int' lvalue ParmVar 0x56531af4a6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x56531af4a880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x56531af4a920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x56531af4a990 <col:10> Implicit
| `-ConstAttr 0x56531af4a9e8 <col:10> Implicit
|-FunctionDecl 0x56531af4ac40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x56531af4ab38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x56531af4af58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x56531af4af48 <line:77:3, col:34>
|     `-CallExpr 0x56531af4af08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x56531af4aef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56531af4ae78 <col:10> '<builtin fn type>' Function 0x56531af4ace8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x56531af4af30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x56531af4ae98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x56531af4ab38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x56531af4ace8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x56531af4ad88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x56531af4adf8 <col:10> Implicit
| `-ConstAttr 0x56531af4ae50 <col:10> Implicit
|-TypedefDecl 0x56531af4af88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x56531aee2140 'unsigned long'
|-TypedefDecl 0x56531af4b018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x56531af4afe0 '__time_t' sugar
|   |-Typedef 0x56531af49c18 '__time_t'
|   `-BuiltinType 0x56531aee20a0 'long'
|-RecordDecl 0x56531af4b070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x56531af4b128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x56531af4b1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x56531af4b248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x56531af4b210 '__pid_t' sugar
|   |-Typedef 0x56531af49748 '__pid_t'
|   `-BuiltinType 0x56531aee2080 'int'
|-RecordDecl 0x56531af4b2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x56531af4b360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x56531af4b3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x56531af4b470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x56531af4b4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x56531aee2140 'unsigned long'
|-RecordDecl 0x56531af4b530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x56531af4b7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x56531af4d8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x56531af4b810 'struct cpu_set_t' sugar
|   `-RecordType 0x56531af4b5b0 'cpu_set_t'
|     `-Record 0x56531af4b530 ''
|-FunctionDecl 0x56531af4db88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x56531af4d958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56531af4da60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x56531af4dc38 <line:107:19>
|-FunctionDecl 0x56531af4de10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x56531af4dca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x56531af4deb8 <col:69>
|-FunctionDecl 0x56531af4e030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x56531af4df20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x56531af4e0d8 <col:64>
|-FunctionDecl 0x56531af4e398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x56531af4e140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56531af4e278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56531af4e448 <line:113:22>
|-FunctionDecl 0x56531af4e6c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x56531af4e4b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56531af4e5a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x56531af4e778 <col:88>
|-FunctionDecl 0x56531af4ea98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56531af4e7e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56531af4e8c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x56531af4e950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56531af4eb50 <col:62>
|-FunctionDecl 0x56531af4ecc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x56531af4ebb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x56531af4ed70 <col:63>
|-FunctionDecl 0x56531af4ee98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x56531af4ef38 <col:47>
|-FunctionDecl 0x56531af4f040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x56531af4efa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56531af4f0e8 <col:69>
|-FunctionDecl 0x56531af4f1f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x56531af4f158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56531af4f298 <col:69>
|-FunctionDecl 0x56531af4f558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56531af4f300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56531af4f438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x56531af4f608 <col:88>
|-TypedefDecl 0x56531af4f698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x56531af4f660 '__clock_t' sugar
|   |-Typedef 0x56531af49a58 '__clock_t'
|   `-BuiltinType 0x56531aee20a0 'long'
|-TypedefDecl 0x56531af4f728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x56531af4f6f0 '__clockid_t' sugar
|   |-Typedef 0x56531af49e48 '__clockid_t'
|   `-BuiltinType 0x56531aee2080 'int'
|-TypedefDecl 0x56531af4f7b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x56531af4f780 '__timer_t' sugar
|   |-Typedef 0x56531af49eb8 '__timer_t'
|   `-PointerType 0x56531aee27a0 'void *'
|     `-BuiltinType 0x56531aee1fe0 'void'
|-RecordDecl 0x56531af4f810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x56531af4f8e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x56531af4f950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x56531af4f9b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x56531af4fa20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x56531af4fa88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x56531af4faf0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x56531af4fb58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x56531af4fbc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x56531af4fc28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x56531af4fc90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x56531af4fcf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x56531af4fd48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x56531af4fe18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x56531af4fe88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x56531af4ff30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x56531af50100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x56531af501a0 <col:45>
|-FunctionDecl 0x56531af50380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x56531af50270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x56531af50428 <col:54>
|-FunctionDecl 0x56531af50628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x56531af50490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x56531af50508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x56531af506d8 <line:157:22>
| `-ConstAttr 0x56531af50730 <col:63>
|-FunctionDecl 0x56531af51560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56531af50828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56531af51608 <col:56>
|-FunctionDecl 0x56531af519b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x56531af51678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x56531af516f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56531af51770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x56531af51868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x56531af51a70 <col:54>
|-RecordDecl 0x56531af51ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x56531af51b78 parent 0x56531aee1f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x56531af51dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x56531af51e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x56531af51ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x56531af51f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x56531af52038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x56531af52158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x56531af52100 'struct __locale_struct *'
|   `-ElaboratedType 0x56531af52090 'struct __locale_struct' sugar
|     `-RecordType 0x56531af51b50 'struct __locale_struct'
|       `-Record 0x56531af51ac8 '__locale_struct'
|-TypedefDecl 0x56531af52208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x56531af521d0 '__locale_t' sugar
|   |-Typedef 0x56531af52158 '__locale_t'
|   `-PointerType 0x56531af52100 'struct __locale_struct *'
|     `-ElaboratedType 0x56531af52090 'struct __locale_struct' sugar
|       `-RecordType 0x56531af51b50 'struct __locale_struct'
|         `-Record 0x56531af51ac8 '__locale_struct'
|-FunctionDecl 0x56531af52610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x56531af52278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x56531af522f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56531af52370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x56531af52400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56531af52478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x56531af526d8 <col:40>
|-FunctionDecl 0x56531af528c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56531af527a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x56531af52970 <col:66>
|-FunctionDecl 0x56531af52a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56531af529d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x56531af52b28 <col:69>
|-FunctionDecl 0x56531af52d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56531af52b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56531af52c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56531af52e08 <col:52>
|-FunctionDecl 0x56531af52fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56531af52e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56531af52f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56531af53060 <col:55>
|-FunctionDecl 0x56531af531f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x56531af530e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x56531af532a0 <col:62>
|-FunctionDecl 0x56531af53418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x56531af53308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x56531af534c0 <col:60>
|-FunctionDecl 0x56531af53718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56531af53578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56531af535f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x56531af537c8 <col:44>
|-FunctionDecl 0x56531af539d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56531af53830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56531af538b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x56531af53a88 <col:49>
|-VarDecl 0x56531af53b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x56531af53c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x56531af53c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x56531af53d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x56531af53e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x56531af53f20 <col:42>
|-VarDecl 0x56531af53f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x56531af54010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x56531af54198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x56531af54088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x56531af54240 <col:57>
|-FunctionDecl 0x56531af54350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56531af542c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56531af543f8 <col:56>
|-FunctionDecl 0x56531af55540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56531af54478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x56531af555e8 <col:59>
|-FunctionDecl 0x56531af556f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x56531af55658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x56531af55798 <col:48>
| `-ConstAttr 0x56531af557f0 <col:89>
|-FunctionDecl 0x56531af55a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56531af558a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x56531af55938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x56531af55cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56531af55b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56531af55bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x56531af55d68 <col:88>
|-FunctionDecl 0x56531af55f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56531af55dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56531af55e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x56531af55fb0 <col:88>
|-FunctionDecl 0x56531af561c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x56531af56018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56531af560a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x56531af56278 <line:208:22>
|-FunctionDecl 0x56531af565e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56531af562e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56531af56360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x56531af563f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x56531af56480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x56531af568e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x56531af566e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x56531af567c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x56531af56998 <col:85>
|-FunctionDecl 0x56531af56d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x56531af56a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56531af56b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x56531af56c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x56531af56e40 <col:52>
|-FunctionDecl 0x56531af56fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x56531af56ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56531af57060 <col:61>
|-FunctionDecl 0x56531af57560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x56531af570c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56531af57148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x56531af57278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x56531af57368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x56531af57620 <col:62>
|-FunctionDecl 0x56531af57838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x56531af57688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56531af57718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x56531af578e8 <line:221:22>
|-FunctionDecl 0x56531af579e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x56531af57950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56531af57a90 <col:65>
|-TypedefDecl 0x56531af57b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x56531aee2140 'unsigned long'
|-RecordDecl 0x56531af57b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x56531af57ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56531af57d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56531af57db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x56531af57d60 'union pthread_attr_t' sugar
|   `-RecordType 0x56531af57be0 'union pthread_attr_t'
|     `-Record 0x56531af57b58 'pthread_attr_t'
|-RecordDecl 0x56531af57e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x56531af57f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x56531af58000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x56531af580b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x56531af58050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x56531af57e90 'struct __pthread_internal_list'
|     `-Record 0x56531af57e10 '__pthread_internal_list'
|-RecordDecl 0x56531af58120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x56531af581c8 parent 0x56531aee1f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x56531af582a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56531af58308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x56531af58370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x56531af583d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x56531af58440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x56531af584a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x56531af5c580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x56531af5c630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x56531af5c720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x56531af5c788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56531af5c910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x56531af5c8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x56531af581a0 'pthread_mutex_t'
|     `-Record 0x56531af58120 ''
|-RecordDecl 0x56531af5c980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x56531af5cac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56531af5cb28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56531af5cbe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x56531af5cb80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x56531af5ca00 'pthread_mutexattr_t'
|     `-Record 0x56531af5c980 ''
|-RecordDecl 0x56531af5cc50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x56531af5ccf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x56531af5cdc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56531af5ce28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x56531af5ce90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x56531af5cef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x56531af5cf60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x56531af5cfc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x56531af5d030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x56531af5d098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x56531af5d150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/podwr001_tso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/podwr001_tso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x56531af5d240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x56531af5d2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x56531af5d3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x56531af5d380 'union pthread_cond_t' sugar
|   `-RecordType 0x56531af5ccd0 'pthread_cond_t'
|     `-Record 0x56531af5cc50 ''
|-RecordDecl 0x56531af5d450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x56531af5d590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56531af5d5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56531af5d6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x56531af5d650 'union pthread_condattr_t' sugar
|   `-RecordType 0x56531af5d4d0 'pthread_condattr_t'
|     `-Record 0x56531af5d450 ''
|-TypedefDecl 0x56531af5d738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x56531aee2120 'unsigned int'
|-TypedefDecl 0x56531af5d7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x56531aee2080 'int'
|-RecordDecl 0x56531af5d800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x56531af5d8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x56531af5d970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56531af5d9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x56531af5da40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x56531af5daa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x56531af5db10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x56531af5db78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x56531af5dbe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x56531af5dc48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x56531af5dcb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x56531af5dd18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x56531af5dd80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x56531af5de30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/podwr001_tso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/podwr001_tso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x56531af5ded8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56531af5df40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56531af5e090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x56531af5e030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x56531af5d880 'pthread_rwlock_t'
|     `-Record 0x56531af5d800 ''
|-RecordDecl 0x56531af5e100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x56531af5e240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x56531af5e2a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56531af5e360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x56531af5e300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x56531af5e180 'pthread_rwlockattr_t'
|     `-Record 0x56531af5e100 ''
|-TypedefDecl 0x56531af5e3e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x56531aee2084 'volatile int' volatile
|   `-BuiltinType 0x56531aee2080 'int'
|-RecordDecl 0x56531af5e440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x56531af605b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x56531af60618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56531af606d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x56531af60670 'union pthread_barrier_t' sugar
|   `-RecordType 0x56531af5e4c0 'pthread_barrier_t'
|     `-Record 0x56531af5e440 ''
|-RecordDecl 0x56531af60740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x56531af60840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56531af608a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56531af60960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x56531af60900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x56531af607c0 'pthread_barrierattr_t'
|     `-Record 0x56531af60740 ''
|-TypedefDecl 0x56531af60a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x56531af60a10 'long [8]' 8 
|   `-BuiltinType 0x56531aee20a0 'long'
|-EnumDecl 0x56531af60ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x56531af60b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x56531af60be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x56531af60c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x56531af60d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x56531af60d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x56531af60da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x56531af60df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x56531af60e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x56531af60e68 <col:26> 'int'
| |   `-DeclRefExpr 0x56531af60e48 <col:26> 'int' EnumConstant 0x56531af60d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x56531af60f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x56531af60ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x56531af60ed0 <col:29> 'int' EnumConstant 0x56531af60d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x56531af60f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x56531af60f78 <col:30> 'int'
| |   `-DeclRefExpr 0x56531af60f58 <col:30> 'int' EnumConstant 0x56531af60da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x56531af61018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x56531af61000 <col:27> 'int'
|     `-DeclRefExpr 0x56531af60fe0 <col:27> 'int' EnumConstant 0x56531af60e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x56531af61068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x56531af61138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x56531af611c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x56531af611a8 <col:30> 'int'
| |   `-DeclRefExpr 0x56531af61188 <col:30> 'int' EnumConstant 0x56531af61138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x56531af61210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x56531af61298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x56531af61280 <col:29> 'int'
|     `-DeclRefExpr 0x56531af61260 <col:29> 'int' EnumConstant 0x56531af61210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x56531af612e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x56531af613b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x56531af61408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x56531af61458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x56531af614a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x56531af615c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x56531af61610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x56531af61660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x56531af616e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x56531af616d0 <col:31> 'int'
|     `-DeclRefExpr 0x56531af616b0 <col:31> 'int' EnumConstant 0x56531af615c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x56531af61738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x56531af61808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x56531af61858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x56531af618a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x56531af61978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x56531af619c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x56531af61a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x56531af61ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x56531af61b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x56531af61b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x56531af61dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x56531af61e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x56531af61e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x56531af61fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x56531af62008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x56531af620d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x56531af62128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x56531af62178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x56531af62248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x56531af62298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x56531af628f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x56531af62390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x56531af624a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56531af626e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x56531af62760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x56531af629b8 <col:47>
| |-NonNullAttr 0x56531af62a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x56531af62a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x56531af62b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x56531af62aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x56531af62dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x56531af62c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x56531af62ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x56531af62f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x56531af62e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x56531af63040 <col:60>
|-FunctionDecl 0x56531af63190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x56531af63230 <col:54>
| `-ConstAttr 0x56531af63288 <col:95>
|-FunctionDecl 0x56531af63458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x56531af632c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56531af63338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x56531af63508 <line:394:19>
| `-ConstAttr 0x56531af63560 <col:60>
|-FunctionDecl 0x56531af63f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56531af63e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56531af64010 <col:71>
| `-NonNullAttr 0x56531af64068 <col:112, col:126> 1
|-FunctionDecl 0x56531af64170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56531af640b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56531af64218 <line:397:22>
| `-NonNullAttr 0x56531af64270 <col:63, col:77> 1
|-FunctionDecl 0x56531af64498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x56531af642b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56531af64338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x56531af64548 <line:400:22>
| `-NonNullAttr 0x56531af645a0 <col:63, col:80> 1 2
|-FunctionDecl 0x56531af647a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56531af645e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56531af64668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x56531af64858 <line:403:22>
| `-NonNullAttr 0x56531af648b0 <col:63, col:77> 1
|-FunctionDecl 0x56531af64b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x56531af648f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56531af649a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x56531af64bb8 <line:406:22>
| `-NonNullAttr 0x56531af64c10 <col:63, col:80> 1 2
|-FunctionDecl 0x56531af65e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56531af64c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56531af64cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56531af65ef8 <line:409:22>
| `-NonNullAttr 0x56531af65f50 <col:63, col:77> 1
|-FunctionDecl 0x56531af66188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56531af65f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56531af66028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56531af66238 <line:412:22>
| `-NonNullAttr 0x56531af66290 <col:63, col:80> 1 2
|-FunctionDecl 0x56531af664c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56531af662d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x56531af66368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x56531af66578 <col:37>
| `-NonNullAttr 0x56531af665d0 <col:78, col:95> 1 2
|-FunctionDecl 0x56531af667b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56531af66618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56531af66698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x56531af66868 <line:418:22>
| `-NonNullAttr 0x56531af668c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56531af66a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56531af66908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56531af66988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x56531af66af8 <line:420:22>
| `-NonNullAttr 0x56531af66b50 <col:63, col:77> 1
|-FunctionDecl 0x56531af66cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56531af66b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56531af66c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x56531af66da8 <line:423:22>
| `-NonNullAttr 0x56531af67e30 <col:63, col:80> 1 2
|-FunctionDecl 0x56531af67fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56531af67e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56531af67ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x56531af68068 <line:426:22>
| `-NonNullAttr 0x56531af680c0 <col:63, col:77> 1
|-FunctionDecl 0x56531af68268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56531af68108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56531af68188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x56531af68318 <line:429:22>
| `-NonNullAttr 0x56531af68370 <col:63, col:80> 1 2
|-FunctionDecl 0x56531af684f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56531af683b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56531af68438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x56531af685a8 <line:431:22>
| `-NonNullAttr 0x56531af68600 <col:63, col:77> 1
|-FunctionDecl 0x56531af68828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x56531af68648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56531af686c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x56531af688d8 <line:434:22>
| |-NonNullAttr 0x56531af68930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x56531af68968 <col:100> "" ""
|-FunctionDecl 0x56531af68b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x56531af689b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56531af68a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x56531af68c28 <line:437:22>
| |-NonNullAttr 0x56531af68c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x56531af68cb8 <col:97> "" ""
|-FunctionDecl 0x56531af68eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56531af68d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56531af68d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56531af68f68 <line:440:22>
| `-NonNullAttr 0x56531af68fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x56531af69140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56531af69008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56531af69080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56531af691f0 <line:443:22>
| `-NonNullAttr 0x56531af69248 <col:63, col:77> 1
|-FunctionDecl 0x56531af69538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56531af69298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56531af69318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x56531af69390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56531af695f0 <line:447:22>
| `-NonNullAttr 0x56531af69648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x56531af698f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x56531af696a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56531af69720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x56531af69798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56531af699b0 <col:43>
| `-NonNullAttr 0x56531af69a08 <col:84, col:98> 1
|-FunctionDecl 0x56531af69cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56531af69a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56531af69ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x56531af69b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x56531af69d80 <line:452:22>
| `-NonNullAttr 0x56531af69dd8 <col:63, col:77> 3
|-FunctionDecl 0x56531af6a0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56531af69e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56531af69ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x56531af69f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56531af6a1a0 <line:456:22>
| `-NonNullAttr 0x56531af6a1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x56531af6a3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x56531af6a248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56531af6a2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x56531af6a498 <line:458:22>
|-FunctionDecl 0x56531af6a868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x56531af6a560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x56531af6a700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x56531af6a918 <col:52, col:69> 1 2
|-FunctionDecl 0x56531af6aac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x56531af6a9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x56531af6aa20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x56531af6aca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x56531af6ab88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x56531af6ac08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x56531af6ae60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x56531af6ad68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x56531af6afa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x56531af6b040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x56531af6b0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x56531af6b1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x56531af6b240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x56531af6b410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/podwr001_tso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x56531af6b508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x56531af6b5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x56531af6b560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x56531af6b0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x56531af6b040 ''
| `-AlignedAttr 0x56531af6b618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x56531af6b690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x56531af6b7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x56531af6b858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x56531af6b8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x56531af6b928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x56531af6bb30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56531af6ba20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56531af6bc78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56531af6bbe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56531af6be70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56531af6bd30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x56531af6bf18 <line:487:22>
|-RecordDecl 0x56531af6bf70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x56531af6c288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x56531af6c0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x56531af6c168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x56531af6c338 <col:86>
| `-ReturnsTwiceAttr 0x56531af6c390 <col:12> Implicit
|-FunctionDecl 0x56531af6c6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56531af6c460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x56531af6c570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x56531af6c768 <line:493:22>
| `-NonNullAttr 0x56531af6c7c0 <col:63, col:77> 1
|-FunctionDecl 0x56531af6c938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56531af6c808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56531af6c9e0 <line:495:22>
| `-NonNullAttr 0x56531af6ca38 <col:63, col:77> 1
|-FunctionDecl 0x56531af6cb40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56531af6ca88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56531af6cbe8 <line:497:22>
| `-NonNullAttr 0x56531af6cc40 <col:52, col:66> 1
|-FunctionDecl 0x56531af6cd40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56531af6cc88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56531af6cde8 <line:499:22>
| `-NonNullAttr 0x56531af6ce40 <col:52, col:66> 1
|-FunctionDecl 0x56531af6d088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56531af6ce98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56531af6cf28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56531af6d138 <col:36>
| `-NonNullAttr 0x56531af6d190 <col:66, col:83> 1 2
|-FunctionDecl 0x56531af6d290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56531af6d1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56531af6d338 <line:504:22>
| `-NonNullAttr 0x56531af6d390 <col:52, col:66> 1
|-FunctionDecl 0x56531af6d628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56531af6d440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56531af6d4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56531af6d6d8 <line:508:22>
| `-NonNullAttr 0x56531af6d730 <col:63, col:80> 1 2
|-FunctionDecl 0x56531af6d9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x56531af6d778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56531af6d7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x56531af6d878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x56531af6dab0 <line:512:22>
| `-NonNullAttr 0x56531af6db08 <col:63, col:80> 1 3
|-FunctionDecl 0x56531af6dc10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56531af6db58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56531af6dcb8 <line:514:22>
| `-NonNullAttr 0x56531af6dd10 <col:63, col:77> 1
|-FunctionDecl 0x56531af6df38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56531af6ddc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56531af6dfe0 <line:516:22>
| `-NonNullAttr 0x56531af6e038 <col:63, col:77> 1
|-FunctionDecl 0x56531af6e140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56531af6e088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56531af6e1e8 <line:518:22>
| `-NonNullAttr 0x56531af6e240 <col:63, col:77> 1
|-FunctionDecl 0x56531af6e468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56531af6e288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56531af6e308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x56531af6e518 <line:522:22>
| `-NonNullAttr 0x56531af6e570 <col:63, col:80> 1 2
|-FunctionDecl 0x56531af6e778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56531af6e5b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56531af6e638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x56531af6e828 <line:525:22>
| `-NonNullAttr 0x56531af6e880 <col:63, col:77> 1
|-FunctionDecl 0x56531af6ea28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56531af6e8c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56531af6e948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x56531af6ead8 <line:528:22>
| `-NonNullAttr 0x56531af6eb30 <col:63, col:80> 1 2
|-FunctionDecl 0x56531af6ecb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56531af6eb78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56531af6ebf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x56531af6ed68 <line:530:22>
| `-NonNullAttr 0x56531af6edc0 <col:63, col:77> 1
|-FunctionDecl 0x56531af6ff90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56531af6ee08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56531af6feb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x56531af70040 <line:534:22>
| `-NonNullAttr 0x56531af70098 <col:63, col:80> 1 2
|-FunctionDecl 0x56531af70228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56531af700e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56531af70168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x56531af702d8 <line:537:22>
| `-NonNullAttr 0x56531af70330 <col:63, col:77> 1
|-FunctionDecl 0x56531af704d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56531af70378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56531af703f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56531af70588 <line:541:22>
| `-NonNullAttr 0x56531af705e0 <col:63, col:80> 1 2
|-FunctionDecl 0x56531af70768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56531af70628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56531af706a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x56531af70818 <line:544:22>
| `-NonNullAttr 0x56531af70870 <col:63, col:77> 1
|-FunctionDecl 0x56531af70a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x56531af708b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x56531af70938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x56531af70b08 <line:547:22>
| `-NonNullAttr 0x56531af70b60 <col:63, col:80> 1 2
|-FunctionDecl 0x56531af70ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56531af70ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56531af70c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x56531af70d98 <line:550:22>
| `-NonNullAttr 0x56531af70df0 <col:63, col:77> 1
|-FunctionDecl 0x56531af72168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x56531af71f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56531af72020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x56531af72218 <col:29>
| `-NonNullAttr 0x56531af72270 <col:70, col:84> 1
|-FunctionDecl 0x56531af723e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56531af722b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56531af72490 <line:555:22>
| `-NonNullAttr 0x56531af724e8 <col:63, col:77> 1
|-FunctionDecl 0x56531af725f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56531af72538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56531af72698 <line:557:22>
| `-NonNullAttr 0x56531af726f0 <col:52, col:66> 1
|-FunctionDecl 0x56531af727f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56531af72738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56531af72898 <line:559:19>
| `-NonNullAttr 0x56531af728f0 <col:49, col:63> 1
|-FunctionDecl 0x56531af72b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56531af72938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56531af729c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56531af72bd8 <col:39>
| `-NonNullAttr 0x56531af72c30 <col:69, col:86> 1 2
|-FunctionDecl 0x56531af72d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56531af72c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56531af72dd8 <line:564:22>
| `-NonNullAttr 0x56531af72e30 <col:52, col:66> 1
|-FunctionDecl 0x56531af72f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56531af72ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56531af73040 <line:566:22>
| `-NonNullAttr 0x56531af73098 <col:52, col:66> 1
|-FunctionDecl 0x56531af73258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56531af730e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56531af73178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56531af73308 <col:39>
| `-NonNullAttr 0x56531af73360 <col:69, col:86> 1 2
|-FunctionDecl 0x56531af73460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56531af733a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56531af73508 <line:571:22>
| `-NonNullAttr 0x56531af73560 <col:52, col:66> 1
|-FunctionDecl 0x56531af73748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56531af73610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56531af737f0 <line:573:22>
| `-NonNullAttr 0x56531af73848 <col:63, col:77> 1
|-FunctionDecl 0x56531af73950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56531af73898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56531af739f8 <line:575:22>
| `-NonNullAttr 0x56531af73a50 <col:63, col:77> 1
|-FunctionDecl 0x56531af73c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56531af73a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56531af73b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x56531af73d28 <line:579:22>
| `-NonNullAttr 0x56531af73d80 <col:63, col:80> 1 2
|-FunctionDecl 0x56531af73fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56531af73dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56531af73e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x56531af74058 <line:582:22>
| `-NonNullAttr 0x56531af740b0 <col:63, col:77> 1
|-FunctionDecl 0x56531af74258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56531af740f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56531af74178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x56531af74308 <line:586:22>
| `-NonNullAttr 0x56531af74360 <col:63, col:80> 1 2
|-FunctionDecl 0x56531af744e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56531af743a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56531af74428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x56531af74598 <col:36>
| `-NonNullAttr 0x56531af745f0 <col:77, col:91> 1
|-FunctionDecl 0x56531af74928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x56531af746d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56531af747e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x56531af749d8 <line:591:22>
| `-NonNullAttr 0x56531af74a30 <col:63, col:77> 1
|-FunctionDecl 0x56531af74ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56531af74a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56531af74c50 <line:593:22>
| `-NonNullAttr 0x56531af74ca8 <col:63, col:77> 1
|-FunctionDecl 0x56531af74db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56531af74cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56531af74e58 <line:595:22>
| `-NonNullAttr 0x56531af74eb0 <col:52, col:66> 1
|-FunctionDecl 0x56531af74fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56531af74f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56531af75070 <line:597:22>
| `-NonNullAttr 0x56531af750c8 <col:52, col:66> 1
|-FunctionDecl 0x56531af752f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x56531af75118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56531af75190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x56531af753a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x56531af756d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56531af75428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56531af754a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56531af75530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x56531af75790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x56531af759a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56531af75870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56531af75a50 <line:606:22>
| `-NonNullAttr 0x56531af75aa8 <col:63, col:77> 1
|-FunctionDecl 0x56531af75bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56531af75af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56531af75c58 <line:608:22>
| `-NonNullAttr 0x56531af75cb0 <col:63, col:77> 1
|-FunctionDecl 0x56531af75f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56531af75cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56531af75d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x56531af75fc0 <line:612:22>
| `-NonNullAttr 0x56531af76018 <col:63, col:80> 1 2
|-FunctionDecl 0x56531af76228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x56531af76068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56531af760e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x56531af762d8 <col:37>
| `-NonNullAttr 0x56531af76330 <col:78, col:92> 1
|-FunctionDecl 0x56531af76548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x56531af76378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56531af76420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x56531af765f8 <line:618:22>
| `-NonNullAttr 0x56531af76650 <col:63, col:80> 1 2
|-FunctionDecl 0x56531af76818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x56531af76698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56531af76710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x56531af768c8 <line:621:22>
| `-NonNullAttr 0x56531af76920 <col:63, col:77> 1
|-FunctionDecl 0x56531af76bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x56531af76a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x56531af76a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x56531af76c78 <line:623:22>
| `-NonNullAttr 0x56531af76cd0 <col:63, col:77> 1
|-FunctionDecl 0x56531af76e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56531af76d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56531af76f20 <line:625:22>
| `-NonNullAttr 0x56531af76f78 <col:63, col:77> 1
|-FunctionDecl 0x56531af77080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56531af76fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56531af77128 <line:627:22>
| `-NonNullAttr 0x56531af77180 <col:52, col:66> 1
|-FunctionDecl 0x56531af77280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56531af771c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56531af77328 <line:629:22>
| `-NonNullAttr 0x56531af77380 <col:52, col:66> 1
|-FunctionDecl 0x56531af77480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56531af773c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56531af77528 <line:631:22>
| `-NonNullAttr 0x56531af77580 <col:52, col:66> 1
|-FunctionDecl 0x56531af77958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x56531af77660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x56531af77770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56531af777f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x56531af77a10 <line:635:22>
| `-NonNullAttr 0x56531af77a68 <col:63, col:77> 1
|-FunctionDecl 0x56531af77be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56531af77ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56531af77c90 <line:637:22>
| `-NonNullAttr 0x56531af77ce8 <col:63, col:77> 1
|-FunctionDecl 0x56531af77df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56531af77d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56531af77e98 <line:639:22>
| `-NonNullAttr 0x56531af77ef0 <col:52, col:66> 1
|-FunctionDecl 0x56531af780e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56531af77fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56531af78190 <line:641:22>
| `-NonNullAttr 0x56531af781e8 <col:63, col:77> 1
|-FunctionDecl 0x56531af782f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56531af78238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56531af78398 <line:643:22>
| `-NonNullAttr 0x56531af783f0 <col:63, col:77> 1
|-FunctionDecl 0x56531af78618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56531af78438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56531af784b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x56531af786c8 <line:647:22>
| `-NonNullAttr 0x56531af78720 <col:63, col:80> 1 2
|-FunctionDecl 0x56531af78928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x56531af78768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x56531af787e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x56531af789d8 <line:650:22>
| `-NonNullAttr 0x56531af78a30 <col:63, col:77> 1
|-FunctionDecl 0x56531af78d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x56531af78b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x56531af78c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x56531af78e28 <line:653:22>
| `-NonNullAttr 0x56531af78e80 <col:63, col:77> 1
|-FunctionDecl 0x56531af78fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x56531af78ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56531af79090 <col:69>
|-FunctionDecl 0x56531af79208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x56531af790f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56531af792b0 <col:72>
|-FunctionDecl 0x56531af794e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x56531af79318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x56531af793c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x56531af79598 <col:44>
|-FunctionDecl 0x56531af797b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x56531af79600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56531af79678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x56531af79868 <line:660:22>
| `-NonNullAttr 0x56531af798c0 <col:63, col:77> 2
|-FunctionDecl 0x56531af79d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x56531af799a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x56531af79ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x56531af79bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x56531af79dc0 <col:47>
|-FunctionDecl 0x56531af7af60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x56531af79e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56531af7b0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x56531af7b020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56531af7b210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x56531af7b178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56531af7b2d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x56531af7b398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x56531af7b458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x56531af7b510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x56531af7b590 prev 0x56531af7b510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x56531af7b5f8 <col:24> 'int' 0
|-VarDecl 0x56531af7b630 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x56531af7b6b0 prev 0x56531af7b630 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x56531af7b718 <col:27> 'int' 0
|-VarDecl 0x56531af7b750 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x56531af7b7d0 prev 0x56531af7b750 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x56531af7b838 <col:27> 'int' 0
|-VarDecl 0x56531af7b870 <line:677:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x56531af7b8f0 prev 0x56531af7b870 <line:678:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x56531af7b958 <col:27> 'int' 0
|-VarDecl 0x56531af7b988 <line:679:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x56531af7ba00 <line:680:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x56531af7ba80 <line:681:1, col:5> col:5 used x 'int'
|-VarDecl 0x56531af7bb00 prev 0x56531af7ba80 <line:682:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x56531af7bb68 <col:9> 'int' 0
|-VarDecl 0x56531af7bba0 <line:683:1, col:5> col:5 used y 'int'
|-VarDecl 0x56531af7bc20 prev 0x56531af7bba0 <line:684:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x56531af7bc88 <col:9> 'int' 0
|-VarDecl 0x56531af7bcc0 <line:685:1, col:5> col:5 used z 'int'
|-VarDecl 0x56531af7bd40 prev 0x56531af7bcc0 <line:686:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x56531af7bda8 <col:9> 'int' 0
|-VarDecl 0x56531af7bdd8 <line:687:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x56531af7be58 <line:688:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x56531af7bed0 <line:689:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x56531af7bf70 <line:690:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x56531af7bfe8 <line:691:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x56531af7c060 <line:692:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x56531af7c0d8 <line:693:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x56531af7c150 <line:694:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x56531af7c1c8 <line:695:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x56531af7c240 <line:696:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x56531af7c2b8 <line:697:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x56531af7c338 <line:698:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x56531af7c3b8 <line:699:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x56531af7c430 <line:700:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x56531af7c4b0 <line:701:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x56531af7c528 <line:702:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x56531af7c5a0 <line:703:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x56531af7c618 <line:704:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x56531af7c730 prev 0x56531af7af60 <line:705:1, line:733:1> line:705:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x56531af7c698 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56531af7df90 <line:706:1, line:733:1>
|   |-CallExpr 0x56531af7c848 <line:707:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56531af7c830 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56531af7c7d8 <col:3> 'void ()' Function 0x56531af22350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56531af7c8c0 <line:708:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56531af7c868 <col:3> 'int' lvalue Var 0x56531af7c4b0 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x56531af7c8a8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56531af7c888 <col:15> 'int' lvalue Var 0x56531af7c3b8 'z$w_buff0' 'int'
|   |-BinaryOperator 0x56531af7c920 <line:709:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56531af7c8e0 <col:3> 'int' lvalue Var 0x56531af7c3b8 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x56531af7c900 <col:15> 'int' 1
|   |-BinaryOperator 0x56531af7c998 <line:710:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56531af7c940 <col:3> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56531af7c980 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56531af7c960 <col:20> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56531af7ca30 <line:711:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56531af7c9b8 <col:3> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x56531af7ca08 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56531af7c9d8 <col:27> 'int' 1
|   |-CallExpr 0x56531af7cbb8 <line:712:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x56531af7cba0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x56531af7ca50 <col:3> 'void (int)' Function 0x56531af220d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x56531af7cb50 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x56531af7cb30 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x56531af7cb10 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x56531af7cac8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x56531af7cab0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x56531af7ca70 <col:23> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x56531af7caf8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x56531af7cae0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x56531af7ca90 <col:41> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56531af7cc38 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56531af7cbe0 <col:3> '_Bool' lvalue Var 0x56531af7c0d8 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x56531af7cc20 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56531af7cc00 <col:20> '_Bool' lvalue Var 0x56531af7bed0 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x56531af7ccb0 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56531af7cc58 <col:3> '_Bool' lvalue Var 0x56531af7c150 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56531af7cc98 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56531af7cc78 <col:20> '_Bool' lvalue Var 0x56531af7bf70 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56531af7cd28 <line:715:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56531af7ccd0 <col:3> '_Bool' lvalue Var 0x56531af7c1c8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56531af7cd10 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56531af7ccf0 <col:20> '_Bool' lvalue Var 0x56531af7bfe8 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56531af7cda0 <line:716:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56531af7cd48 <col:3> '_Bool' lvalue Var 0x56531af7c240 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56531af7cd88 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56531af7cd68 <col:20> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56531af7ce38 <line:717:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56531af7cdc0 <col:3> '_Bool' lvalue Var 0x56531af7bf70 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x56531af7ce10 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56531af7cde0 <col:27> 'int' 1
|   |-CallExpr 0x56531af7ce90 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56531af7ce78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56531af7ce58 <col:3> 'void ()' Function 0x56531af22410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56531af7cee8 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56531af7ced0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56531af7ceb0 <col:3> 'void ()' Function 0x56531af22350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56531af7cf80 <line:720:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56531af7cf08 <col:3> 'int' lvalue Var 0x56531af7b6b0 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x56531af7cf48 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56531af7cf28 <col:25> 'int' lvalue Var 0x56531af7bb00 'x' 'int'
|   |-CallExpr 0x56531af7cfd8 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56531af7cfc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56531af7cfa0 <col:3> 'void ()' Function 0x56531af22410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56531af7d030 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56531af7d018 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56531af7cff8 <col:3> 'void ()' Function 0x56531af22350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56531af7d318 <line:723:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56531af7d050 <col:3> 'int' lvalue Var 0x56531af7bd40 'z' 'int'
|   | `-ConditionalOperator 0x56531af7d2e8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56531af7d110 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56531af7d0c8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56531af7d0b0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56531af7d070 <col:7> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56531af7d0f8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56531af7d0e0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56531af7d090 <col:25> '_Bool' lvalue Var 0x56531af7bf70 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x56531af7d2d0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56531af7d130 <col:42> 'int' lvalue Var 0x56531af7c3b8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x56531af7d2b0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56531af7d280 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56531af7d1f0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56531af7d1a8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56531af7d190 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56531af7d150 <col:55> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56531af7d1d8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56531af7d1c0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56531af7d170 <col:73> '_Bool' lvalue Var 0x56531af7c150 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x56531af7d250 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56531af7d210 <col:90> 'int' lvalue Var 0x56531af7c4b0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56531af7d268 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56531af7d230 <col:102> 'int' lvalue Var 0x56531af7bd40 'z' 'int'
|   |-BinaryOperator 0x56531af7d520 <line:724:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56531af7d338 <col:3> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56531af7d508 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56531af7d4d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56531af7d3f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56531af7d3b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56531af7d398 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56531af7d358 <col:20> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56531af7d3e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56531af7d3c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56531af7d378 <col:38> '_Bool' lvalue Var 0x56531af7bf70 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56531af7d490 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56531af7d448 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56531af7d418 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56531af7d4c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56531af7d4a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56531af7d470 <col:66> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56531af7d808 <line:725:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56531af7d540 <col:3> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56531af7d7f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56531af7d7c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56531af7d6e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56531af7d600 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56531af7d5b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56531af7d5a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56531af7d560 <col:20> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56531af7d5e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56531af7d5d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56531af7d580 <col:38> '_Bool' lvalue Var 0x56531af7bf70 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x56531af7d6c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56531af7d678 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56531af7d660 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56531af7d620 <col:56> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56531af7d6a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56531af7d690 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56531af7d640 <col:74> '_Bool' lvalue Var 0x56531af7c150 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56531af7d778 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56531af7d730 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56531af7d700 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56531af7d7a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56531af7d790 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56531af7d758 <col:102> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56531af7da10 <line:726:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56531af7d828 <col:3> '_Bool' lvalue Var 0x56531af7bf70 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56531af7d9f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56531af7d9c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56531af7d8e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56531af7d8a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56531af7d888 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56531af7d848 <col:20> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56531af7d8d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56531af7d8b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56531af7d868 <col:38> '_Bool' lvalue Var 0x56531af7bf70 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56531af7d980 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56531af7d938 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56531af7d908 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56531af7d9b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56531af7d998 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56531af7d960 <col:66> '_Bool' lvalue Var 0x56531af7bf70 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56531af7dcf8 <line:727:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56531af7da30 <col:3> '_Bool' lvalue Var 0x56531af7c150 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56531af7dce0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56531af7dcb0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56531af7dbd0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56531af7daf0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56531af7daa8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56531af7da90 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56531af7da50 <col:20> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56531af7dad8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56531af7dac0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56531af7da70 <col:38> '_Bool' lvalue Var 0x56531af7bf70 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x56531af7dbb0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56531af7db68 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56531af7db50 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56531af7db10 <col:56> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56531af7db98 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56531af7db80 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56531af7db30 <col:74> '_Bool' lvalue Var 0x56531af7c150 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56531af7dc68 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56531af7dc20 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56531af7dbf0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56531af7dc98 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56531af7dc80 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56531af7dc48 <col:102> '_Bool' lvalue Var 0x56531af7c150 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x56531af7dd50 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56531af7dd38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56531af7dd18 <col:3> 'void ()' Function 0x56531af22410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56531af7dda8 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56531af7dd90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56531af7dd70 <col:3> 'void ()' Function 0x56531af22350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56531af7de60 <line:730:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56531af7ddc8 <col:3> 'int' lvalue Var 0x56531af7b590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56531af7de40 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56531af7de28 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56531af7dde8 <col:22> 'int' lvalue Var 0x56531af7b590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56531af7de08 <col:41> 'int' 1
|   |-CallExpr 0x56531af7deb8 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56531af7dea0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56531af7de80 <col:3> 'void ()' Function 0x56531af22410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56531af7df68 <line:732:3, col:36>
|     `-CallExpr 0x56531af7df48 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56531af7df30 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56531af7ded8 <col:10> 'void *(void)' Function 0x56531af21e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56531af7e120 prev 0x56531af7b0b8 <line:734:1, line:753:1> line:734:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x56531af7e088 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56531af7f360 <line:735:1, line:753:1>
|   |-CallExpr 0x56531af7e200 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56531af7e1e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56531af7e1c8 <col:3> 'void ()' Function 0x56531af22350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56531af7e260 <line:737:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56531af7e220 <col:3> 'int' lvalue Var 0x56531af7bb00 'x' 'int'
|   | `-IntegerLiteral 0x56531af7e240 <col:7> 'int' 1
|   |-CallExpr 0x56531af7e2b8 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56531af7e2a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56531af7e280 <col:3> 'void ()' Function 0x56531af22410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56531af7e310 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56531af7e2f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56531af7e2d8 <col:3> 'void ()' Function 0x56531af22350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56531af7e388 <line:740:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56531af7e330 <col:3> 'int' lvalue Var 0x56531af7b7d0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x56531af7e370 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56531af7e350 <col:25> 'int' lvalue Var 0x56531af7bc20 'y' 'int'
|   |-CallExpr 0x56531af7e3e0 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56531af7e3c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56531af7e3a8 <col:3> 'void ()' Function 0x56531af22410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56531af7e438 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56531af7e420 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56531af7e400 <col:3> 'void ()' Function 0x56531af22350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56531af7e720 <line:743:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56531af7e458 <col:3> 'int' lvalue Var 0x56531af7bd40 'z' 'int'
|   | `-ConditionalOperator 0x56531af7e6f0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56531af7e518 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56531af7e4d0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56531af7e4b8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56531af7e478 <col:7> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56531af7e500 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56531af7e4e8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56531af7e498 <col:25> '_Bool' lvalue Var 0x56531af7bfe8 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x56531af7e6d8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56531af7e538 <col:42> 'int' lvalue Var 0x56531af7c3b8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x56531af7e6b8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56531af7e688 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56531af7e5f8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56531af7e5b0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56531af7e598 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56531af7e558 <col:55> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56531af7e5e0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56531af7e5c8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56531af7e578 <col:73> '_Bool' lvalue Var 0x56531af7c1c8 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x56531af7e658 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56531af7e618 <col:90> 'int' lvalue Var 0x56531af7c4b0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56531af7e670 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56531af7e638 <col:102> 'int' lvalue Var 0x56531af7bd40 'z' 'int'
|   |-BinaryOperator 0x56531af7e928 <line:744:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56531af7e740 <col:3> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56531af7e910 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56531af7e8e0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56531af7e800 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56531af7e7b8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56531af7e7a0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56531af7e760 <col:20> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56531af7e7e8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56531af7e7d0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56531af7e780 <col:38> '_Bool' lvalue Var 0x56531af7bfe8 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56531af7e898 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56531af7e850 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56531af7e820 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56531af7e8c8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56531af7e8b0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56531af7e878 <col:66> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56531af7ec10 <line:745:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56531af7e948 <col:3> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56531af7ebf8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56531af7ebc8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56531af7eae8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56531af7ea08 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56531af7e9c0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56531af7e9a8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56531af7e968 <col:20> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56531af7e9f0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56531af7e9d8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56531af7e988 <col:38> '_Bool' lvalue Var 0x56531af7bfe8 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56531af7eac8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56531af7ea80 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56531af7ea68 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56531af7ea28 <col:56> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56531af7eab0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56531af7ea98 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56531af7ea48 <col:74> '_Bool' lvalue Var 0x56531af7c1c8 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56531af7eb80 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56531af7eb38 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56531af7eb08 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56531af7ebb0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56531af7eb98 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56531af7eb60 <col:102> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56531af7ee18 <line:746:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56531af7ec30 <col:3> '_Bool' lvalue Var 0x56531af7bfe8 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56531af7ee00 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56531af7edd0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56531af7ecf0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56531af7eca8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56531af7ec90 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56531af7ec50 <col:20> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56531af7ecd8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56531af7ecc0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56531af7ec70 <col:38> '_Bool' lvalue Var 0x56531af7bfe8 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56531af7ed88 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56531af7ed40 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56531af7ed10 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56531af7edb8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56531af7eda0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56531af7ed68 <col:66> '_Bool' lvalue Var 0x56531af7bfe8 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56531af7f118 <line:747:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56531af7ee38 <col:3> '_Bool' lvalue Var 0x56531af7c1c8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56531af7f100 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56531af7f0d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56531af7eff0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56531af7eef8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56531af7eeb0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56531af7ee98 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56531af7ee58 <col:20> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56531af7eee0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56531af7eec8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56531af7ee78 <col:38> '_Bool' lvalue Var 0x56531af7bfe8 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56531af7efd0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56531af7ef70 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56531af7ef58 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56531af7ef18 <col:56> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56531af7efb8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56531af7efa0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56531af7ef38 <col:74> '_Bool' lvalue Var 0x56531af7c1c8 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56531af7f088 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56531af7f040 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56531af7f010 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56531af7f0b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56531af7f0a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56531af7f068 <col:102> '_Bool' lvalue Var 0x56531af7c1c8 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x56531af7f170 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56531af7f158 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56531af7f138 <col:3> 'void ()' Function 0x56531af22410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56531af7f1c8 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56531af7f1b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56531af7f190 <col:3> 'void ()' Function 0x56531af22350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56531af7f280 <line:750:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56531af7f1e8 <col:3> 'int' lvalue Var 0x56531af7b590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56531af7f260 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56531af7f248 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56531af7f208 <col:22> 'int' lvalue Var 0x56531af7b590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56531af7f228 <col:41> 'int' 1
|   |-CallExpr 0x56531af7f2d8 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56531af7f2c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56531af7f2a0 <col:3> 'void ()' Function 0x56531af22410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56531af7f350 <line:752:3, col:36>
|     `-CallExpr 0x56531af7f330 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56531af7f318 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56531af7f2f8 <col:10> 'void *(void)' Function 0x56531af21e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56531af7f4a8 prev 0x56531af7b210 <line:754:1, line:786:1> line:754:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x56531af7f410 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56531af830a0 <line:755:1, line:786:1>
|   |-CallExpr 0x56531af7f588 <line:756:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56531af7f570 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56531af7f550 <col:3> 'void ()' Function 0x56531af22350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56531af7f5e8 <line:757:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56531af7f5a8 <col:3> 'int' lvalue Var 0x56531af7bc20 'y' 'int'
|   | `-IntegerLiteral 0x56531af7f5c8 <col:7> 'int' 1
|   |-CallExpr 0x56531af7f640 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56531af7f628 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56531af7f608 <col:3> 'void ()' Function 0x56531af22410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56531af7f698 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56531af7f680 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56531af7f660 <col:3> 'void ()' Function 0x56531af22350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56531af7f748 <line:760:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56531af7f6b8 <col:3> '_Bool' lvalue Var 0x56531af7c5a0 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x56531af7f730 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56531af7f710 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56531af7f6f8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56531af7f6d8 <col:19> 'void *(void)' Function 0x56531af21e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56531af7f7f8 <line:761:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56531af7f768 <col:3> '_Bool' lvalue Var 0x56531af7c618 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x56531af7f7e0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56531af7f7c0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56531af7f7a8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56531af7f788 <col:19> 'void *(void)' Function 0x56531af21e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56531af7f870 <line:762:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x56531af7f818 <col:3> '_Bool' lvalue Var 0x56531af7bdd8 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x56531af7f858 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56531af7f838 <col:21> '_Bool' lvalue Var 0x56531af7c618 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x56531af7f8e8 <line:763:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56531af7f890 <col:3> 'int' lvalue Var 0x56531af7be58 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x56531af7f8d0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56531af7f8b0 <col:15> 'int' lvalue Var 0x56531af7bd40 'z' 'int'
|   |-BinaryOperator 0x56531af7fd20 <line:764:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x56531af7f908 <col:3> 'int' lvalue Var 0x56531af7bd40 'z' 'int'
|   | `-ConditionalOperator 0x56531af7fcf0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x56531af7fb18 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x56531af7fa38 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x56531af7f960 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x56531af7f948 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x56531af7f928 <col:8> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x56531af7fa18 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x56531af7f9b0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x56531af7f998 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x56531af7f978 <col:27> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x56531af7fa00 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x56531af7f9e8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x56531af7f9c8 <col:46> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x56531af7faf8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x56531af7fa90 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x56531af7fa78 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x56531af7fa58 <col:65> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x56531af7fae0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x56531af7fac8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x56531af7faa8 <col:84> '_Bool' lvalue Var 0x56531af7c240 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x56531af7fcd8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56531af7fb38 <col:101> 'int' lvalue Var 0x56531af7bd40 'z' 'int'
|   |   `-ParenExpr 0x56531af7fcb8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x56531af7fc88 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x56531af7fbf8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56531af7fbb0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56531af7fb98 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56531af7fb58 <col:106> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56531af7fbe0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56531af7fbc8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56531af7fb78 <col:124> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56531af7fc58 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56531af7fc18 <col:141> 'int' lvalue Var 0x56531af7c3b8 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x56531af7fc70 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56531af7fc38 <col:153> 'int' lvalue Var 0x56531af7c4b0 'z$w_buff1' 'int'
|   |-BinaryOperator 0x56531af80250 <line:765:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56531af7fd40 <col:3> 'int' lvalue Var 0x56531af7c3b8 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x56531af80220 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56531af801f0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56531af801d8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56531af7fd60 <col:15> '_Bool' lvalue Var 0x56531af7c618 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56531af80208 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56531af7fd80 <col:31> 'int' lvalue Var 0x56531af7c3b8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x56531af801b8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56531af80188 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56531af7ffb0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56531af7feb0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56531af7fdd8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56531af7fdc0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56531af7fda0 <col:45> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56531af7fe90 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56531af7fe28 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56531af7fe10 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56531af7fdf0 <col:64> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x56531af7fe78 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56531af7fe60 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56531af7fe40 <col:83> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56531af7ff70 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56531af7ff08 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56531af7fef0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56531af7fed0 <col:102> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x56531af7ff58 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56531af7ff40 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56531af7ff20 <col:121> '_Bool' lvalue Var 0x56531af7c240 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56531af80170 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56531af7ffd0 <col:138> 'int' lvalue Var 0x56531af7c3b8 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x56531af80150 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56531af80120 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56531af80090 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56531af80048 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56531af80030 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56531af7fff0 <col:151> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56531af80078 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56531af80060 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56531af80010 <col:169> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x56531af800f0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56531af800b0 <col:186> 'int' lvalue Var 0x56531af7c3b8 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x56531af80108 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56531af800d0 <col:198> 'int' lvalue Var 0x56531af7c3b8 'z$w_buff0' 'int'
|   |-BinaryOperator 0x56531af80760 <line:766:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56531af80270 <col:3> 'int' lvalue Var 0x56531af7c4b0 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x56531af80730 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56531af80700 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56531af806e8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56531af80290 <col:15> '_Bool' lvalue Var 0x56531af7c618 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56531af80718 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56531af802b0 <col:31> 'int' lvalue Var 0x56531af7c4b0 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x56531af806c8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56531af80698 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56531af804c0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56531af803e0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56531af80308 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56531af802f0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56531af802d0 <col:45> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56531af803c0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56531af80358 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56531af80340 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56531af80320 <col:64> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x56531af803a8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56531af80390 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56531af80370 <col:83> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56531af804a0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56531af80438 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56531af80420 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56531af80400 <col:102> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x56531af80488 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56531af80470 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56531af80450 <col:121> '_Bool' lvalue Var 0x56531af7c240 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56531af80680 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56531af804e0 <col:138> 'int' lvalue Var 0x56531af7c4b0 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x56531af80660 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56531af80630 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56531af805a0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56531af80558 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56531af80540 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56531af80500 <col:151> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56531af80588 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56531af80570 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56531af80520 <col:169> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x56531af80600 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56531af805c0 <col:186> 'int' lvalue Var 0x56531af7c4b0 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x56531af80618 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56531af805e0 <col:198> 'int' lvalue Var 0x56531af7c4b0 'z$w_buff1' 'int'
|   |-BinaryOperator 0x56531af80d08 <line:767:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56531af80780 <col:3> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56531af80cf0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56531af80cc0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56531af80c78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56531af80c60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56531af807a0 <col:20> '_Bool' lvalue Var 0x56531af7c618 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56531af80ca8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56531af80c90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56531af807c0 <col:36> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x56531af80c40 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56531af80c10 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56531af809d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56531af808f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56531af80818 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56531af80800 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56531af807e0 <col:55> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56531af808d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56531af80868 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56531af80850 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56531af80830 <col:74> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56531af808b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56531af808a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56531af80880 <col:93> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56531af809b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56531af80948 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56531af80930 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56531af80910 <col:112> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56531af80998 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56531af80980 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56531af80960 <col:131> '_Bool' lvalue Var 0x56531af7c240 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56531af80bf8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56531af80be0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56531af809f0 <col:148> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x56531af80bc0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56531af80b90 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56531af80ab0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56531af80a68 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56531af80a50 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56531af80a10 <col:166> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56531af80a98 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56531af80a80 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56531af80a30 <col:184> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56531af80b48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56531af80b00 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56531af80ad0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56531af80b78 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56531af80b60 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56531af80b28 <col:212> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56531af812f8 <line:768:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56531af80d28 <col:3> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56531af812e0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56531af812b0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56531af81268 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56531af81250 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56531af80d48 <col:20> '_Bool' lvalue Var 0x56531af7c618 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56531af81298 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56531af81280 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56531af80d68 <col:36> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x56531af81230 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56531af81200 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56531af80f78 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56531af80e98 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56531af80dc0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56531af80da8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56531af80d88 <col:55> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56531af80e78 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56531af80e10 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56531af80df8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56531af80dd8 <col:74> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56531af80e60 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56531af80e48 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56531af80e28 <col:93> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56531af80f58 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56531af80ef0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56531af80ed8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56531af80eb8 <col:112> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56531af80f40 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56531af80f28 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56531af80f08 <col:131> '_Bool' lvalue Var 0x56531af7c240 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56531af811e8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56531af811d0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56531af80fc0 <col:148> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x56531af811b0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56531af81180 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56531af81080 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56531af81038 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56531af81020 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56531af80fe0 <col:166> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56531af81068 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56531af81050 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56531af81000 <col:184> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56531af81150 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56531af810d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56531af810a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56531af81168 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56531af81128 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56531af810f8 <col:219> 'int' 0
|   |-BinaryOperator 0x56531af818a0 <line:769:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56531af81318 <col:3> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56531af81888 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56531af81858 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56531af81810 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56531af817f8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56531af81338 <col:20> '_Bool' lvalue Var 0x56531af7c618 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56531af81840 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56531af81828 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56531af81358 <col:36> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x56531af817d8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56531af817a8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56531af81568 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56531af81488 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56531af813b0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56531af81398 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56531af81378 <col:55> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56531af81468 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56531af81400 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56531af813e8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56531af813c8 <col:74> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56531af81450 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56531af81438 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56531af81418 <col:93> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56531af81548 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56531af814e0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56531af814c8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56531af814a8 <col:112> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56531af81530 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56531af81518 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56531af814f8 <col:131> '_Bool' lvalue Var 0x56531af7c240 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56531af81790 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56531af81778 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56531af81588 <col:148> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x56531af81758 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56531af81728 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56531af81648 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56531af81600 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56531af815e8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56531af815a8 <col:166> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56531af81630 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56531af81618 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56531af815c8 <col:184> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56531af816e0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56531af81698 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56531af81668 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56531af81710 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56531af816f8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56531af816c0 <col:212> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56531af81e68 <line:770:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56531af818c0 <col:3> '_Bool' lvalue Var 0x56531af7c240 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56531af81e50 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56531af81e20 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56531af81dd8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56531af81dc0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56531af818e0 <col:20> '_Bool' lvalue Var 0x56531af7c618 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56531af81e08 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56531af81df0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56531af81900 <col:36> '_Bool' lvalue Var 0x56531af7c240 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x56531af81da0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56531af81d70 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56531af81b10 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56531af81a30 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56531af81958 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56531af81940 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56531af81920 <col:55> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56531af81a10 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56531af819a8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56531af81990 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56531af81970 <col:74> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56531af819f8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56531af819e0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56531af819c0 <col:93> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56531af81af0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56531af81a88 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56531af81a70 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56531af81a50 <col:112> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56531af81ad8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56531af81ac0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56531af81aa0 <col:131> '_Bool' lvalue Var 0x56531af7c240 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56531af81d58 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56531af81d40 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56531af81b30 <col:148> '_Bool' lvalue Var 0x56531af7c240 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x56531af81d20 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56531af81cf0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56531af81bf0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56531af81ba8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56531af81b90 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56531af81b50 <col:166> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56531af81bd8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56531af81bc0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56531af81b70 <col:184> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56531af81cc0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56531af81c40 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56531af81c10 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56531af81cd8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56531af81c98 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56531af81c68 <col:219> 'int' 0
|   |-BinaryOperator 0x56531af81ee0 <line:771:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56531af81e88 <col:3> 'int' lvalue Var 0x56531af7b8f0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x56531af81ec8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56531af81ea8 <col:25> 'int' lvalue Var 0x56531af7bd40 'z' 'int'
|   |-BinaryOperator 0x56531af82030 <line:772:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x56531af81f00 <col:3> 'int' lvalue Var 0x56531af7bd40 'z' 'int'
|   | `-ConditionalOperator 0x56531af82000 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x56531af81f98 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56531af81f80 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56531af81f20 <col:7> '_Bool' lvalue Var 0x56531af7bdd8 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x56531af81fd0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56531af81f40 <col:25> 'int' lvalue Var 0x56531af7be58 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x56531af81fe8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x56531af81f60 <col:37> 'int' lvalue Var 0x56531af7bd40 'z' 'int'
|   |-BinaryOperator 0x56531af820c8 <line:773:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x56531af82050 <col:3> '_Bool' lvalue Var 0x56531af7bdd8 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x56531af820a0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56531af82070 <col:28> 'int' 0
|   |-CallExpr 0x56531af82120 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56531af82108 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56531af820e8 <col:3> 'void ()' Function 0x56531af22410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56531af82178 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56531af82160 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56531af82140 <col:3> 'void ()' Function 0x56531af22350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56531af82460 <line:776:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56531af82198 <col:3> 'int' lvalue Var 0x56531af7bd40 'z' 'int'
|   | `-ConditionalOperator 0x56531af82430 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56531af82258 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56531af82210 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56531af821f8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56531af821b8 <col:7> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56531af82240 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56531af82228 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56531af821d8 <col:25> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x56531af82418 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56531af82278 <col:42> 'int' lvalue Var 0x56531af7c3b8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x56531af823f8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56531af823c8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56531af82338 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56531af822f0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56531af822d8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56531af82298 <col:55> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56531af82320 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56531af82308 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56531af822b8 <col:73> '_Bool' lvalue Var 0x56531af7c240 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56531af82398 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56531af82358 <col:90> 'int' lvalue Var 0x56531af7c4b0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56531af823b0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56531af82378 <col:102> 'int' lvalue Var 0x56531af7bd40 'z' 'int'
|   |-BinaryOperator 0x56531af82668 <line:777:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56531af82480 <col:3> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56531af82650 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56531af82620 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56531af82540 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56531af824f8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56531af824e0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56531af824a0 <col:20> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56531af82528 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56531af82510 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56531af824c0 <col:38> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56531af825d8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56531af82590 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56531af82560 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56531af82608 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56531af825f0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56531af825b8 <col:66> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56531af82950 <line:778:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56531af82688 <col:3> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56531af82938 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56531af82908 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56531af82828 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56531af82748 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56531af82700 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56531af826e8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56531af826a8 <col:20> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56531af82730 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56531af82718 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56531af826c8 <col:38> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x56531af82808 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56531af827c0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56531af827a8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56531af82768 <col:56> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56531af827f0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56531af827d8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56531af82788 <col:74> '_Bool' lvalue Var 0x56531af7c240 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56531af828c0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56531af82878 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56531af82848 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56531af828f0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56531af828d8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56531af828a0 <col:102> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56531af82b58 <line:779:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56531af82970 <col:3> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56531af82b40 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56531af82b10 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56531af82a30 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56531af829e8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56531af829d0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56531af82990 <col:20> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56531af82a18 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56531af82a00 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56531af829b0 <col:38> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56531af82ac8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56531af82a80 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56531af82a50 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56531af82af8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56531af82ae0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56531af82aa8 <col:66> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56531af82e40 <line:780:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56531af82b78 <col:3> '_Bool' lvalue Var 0x56531af7c240 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56531af82e28 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56531af82df8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56531af82d18 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56531af82c38 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56531af82bf0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56531af82bd8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56531af82b98 <col:20> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56531af82c20 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56531af82c08 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56531af82bb8 <col:38> '_Bool' lvalue Var 0x56531af7c060 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x56531af82cf8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56531af82cb0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56531af82c98 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56531af82c58 <col:56> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56531af82ce0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56531af82cc8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56531af82c78 <col:74> '_Bool' lvalue Var 0x56531af7c240 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56531af82db0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56531af82d68 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56531af82d38 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56531af82de0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56531af82dc8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56531af82d90 <col:102> '_Bool' lvalue Var 0x56531af7c240 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x56531af82e98 <line:781:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56531af82e80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56531af82e60 <col:3> 'void ()' Function 0x56531af22410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56531af82ef0 <line:782:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56531af82ed8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56531af82eb8 <col:3> 'void ()' Function 0x56531af22350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56531af82fa8 <line:783:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56531af82f10 <col:3> 'int' lvalue Var 0x56531af7b590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56531af82f88 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56531af82f70 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56531af82f30 <col:22> 'int' lvalue Var 0x56531af7b590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56531af82f50 <col:41> 'int' 1
|   |-CallExpr 0x56531af83018 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56531af83000 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56531af82fe0 <col:3> 'void ()' Function 0x56531af22410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56531af83090 <line:785:3, col:36>
|     `-CallExpr 0x56531af83070 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56531af83058 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56531af83038 <col:10> 'void *(void)' Function 0x56531af21e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56531af831c0 prev 0x56531af7b2d8 <line:787:1, line:789:1> line:787:6 fence 'void ()'
| `-CompoundStmt 0x56531af83260 <line:788:1, line:789:1>
|-FunctionDecl 0x56531af83290 prev 0x56531af7b398 <line:790:1, line:792:1> line:790:6 isync 'void ()'
| `-CompoundStmt 0x56531af83330 <line:791:1, line:792:1>
|-FunctionDecl 0x56531af83360 prev 0x56531af7b458 <line:793:1, line:795:1> line:793:6 lwfence 'void ()'
| `-CompoundStmt 0x56531af83400 <line:794:1, line:795:1>
`-FunctionDecl 0x56531af83468 <line:796:1, line:820:1> line:796:5 main 'int ()'
  `-CompoundStmt 0x56531af850c0 <line:797:1, line:820:1>
    |-DeclStmt 0x56531af83580 <line:798:3, col:18>
    | `-VarDecl 0x56531af83518 <col:3, col:13> col:13 used t1581 'pthread_t':'unsigned long'
    |-CallExpr 0x56531af83788 <line:799:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56531af83770 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56531af83598 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56531af628f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56531af835d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56531af835b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56531af83518 't1581' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56531af837c8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56531af83650 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56531af83628 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56531af835f0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56531af837e0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56531af83670 <col:39> 'void *(void *)' Function 0x56531af7c730 'P0' 'void *(void *)'
    | `-ParenExpr 0x56531af836f0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56531af836c8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56531af83690 <col:52> 'int' 0
    |-DeclStmt 0x56531af83870 <line:800:3, col:18>
    | `-VarDecl 0x56531af83808 <col:3, col:13> col:13 used t1582 'pthread_t':'unsigned long'
    |-CallExpr 0x56531af83a18 <line:801:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56531af83a00 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56531af83888 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56531af628f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56531af838c8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56531af838a8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56531af83808 't1582' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56531af83a58 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56531af83940 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56531af83918 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56531af838e0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56531af83a70 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56531af83960 <col:39> 'void *(void *)' Function 0x56531af7e120 'P1' 'void *(void *)'
    | `-ParenExpr 0x56531af839e0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56531af839b8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56531af83980 <col:52> 'int' 0
    |-DeclStmt 0x56531af83b00 <line:802:3, col:18>
    | `-VarDecl 0x56531af83a98 <col:3, col:13> col:13 used t1583 'pthread_t':'unsigned long'
    |-CallExpr 0x56531af83ca8 <line:803:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56531af83c90 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56531af83b18 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56531af628f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56531af83b58 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56531af83b38 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56531af83a98 't1583' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56531af83ce8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56531af83bd0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56531af83ba8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56531af83b70 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56531af83d00 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56531af83bf0 <col:39> 'void *(void *)' Function 0x56531af7f4a8 'P2' 'void *(void *)'
    | `-ParenExpr 0x56531af83c70 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56531af83c48 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56531af83c10 <col:52> 'int' 0
    |-CallExpr 0x56531af83d50 <line:804:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56531af83d38 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56531af83d18 <col:3> 'void ()' Function 0x56531af22350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56531af83e20 <line:805:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x56531af83d70 <col:3> '_Bool' lvalue Var 0x56531af7b988 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x56531af83e08 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x56531af83de8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x56531af83dd0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x56531af83d90 <col:21> 'int' lvalue Var 0x56531af7b590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x56531af83db0 <col:41> 'int' 3
    |-CallExpr 0x56531af83e78 <line:806:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56531af83e60 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56531af83e40 <col:3> 'void ()' Function 0x56531af22410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56531af83ef0 <line:807:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56531af83ed8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56531af83e98 <col:3> 'void (int)' Function 0x56531af21ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x56531af83f30 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56531af83f18 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56531af83eb8 <col:21> '_Bool' lvalue Var 0x56531af7b988 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x56531af83f80 <line:808:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56531af83f68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56531af83f48 <col:3> 'void ()' Function 0x56531af22350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56531af84278 <line:809:3, col:103> 'int' '='
    | |-DeclRefExpr 0x56531af83fa0 <col:3> 'int' lvalue Var 0x56531af7bd40 'z' 'int'
    | `-ConditionalOperator 0x56531af84248 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x56531af84070 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x56531af84028 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x56531af84010 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x56531af83fc0 <col:7> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x56531af84058 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x56531af84040 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x56531af83ff0 <col:25> '_Bool' lvalue Var 0x56531af7bed0 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x56531af84230 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56531af84090 <col:42> 'int' lvalue Var 0x56531af7c3b8 'z$w_buff0' 'int'
    |   `-ParenExpr 0x56531af84210 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x56531af841e0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x56531af84150 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x56531af84108 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x56531af840f0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x56531af840b0 <col:55> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x56531af84138 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x56531af84120 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x56531af840d0 <col:73> '_Bool' lvalue Var 0x56531af7c0d8 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56531af841b0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56531af84170 <col:90> 'int' lvalue Var 0x56531af7c4b0 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x56531af841c8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x56531af84190 <col:102> 'int' lvalue Var 0x56531af7bd40 'z' 'int'
    |-BinaryOperator 0x56531af84480 <line:810:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56531af84298 <col:3> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x56531af84468 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56531af84438 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56531af84358 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56531af84310 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56531af842f8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56531af842b8 <col:20> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56531af84340 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56531af84328 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56531af842d8 <col:38> '_Bool' lvalue Var 0x56531af7bed0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56531af843f0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56531af843a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56531af84378 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56531af84420 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56531af84408 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56531af843d0 <col:66> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x56531af84768 <line:811:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56531af844a0 <col:3> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x56531af84750 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56531af84720 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56531af84640 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56531af84560 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56531af84518 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56531af84500 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56531af844c0 <col:20> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56531af84548 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56531af84530 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56531af844e0 <col:38> '_Bool' lvalue Var 0x56531af7bed0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56531af84620 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56531af845d8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56531af845c0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56531af84580 <col:56> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56531af84608 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56531af845f0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56531af845a0 <col:74> '_Bool' lvalue Var 0x56531af7c0d8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56531af846d8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56531af84690 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56531af84660 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56531af84708 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56531af846f0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56531af846b8 <col:102> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x56531af84970 <line:812:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56531af84788 <col:3> '_Bool' lvalue Var 0x56531af7bed0 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56531af84958 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56531af84928 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56531af84848 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56531af84800 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56531af847e8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56531af847a8 <col:20> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56531af84830 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56531af84818 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56531af847c8 <col:38> '_Bool' lvalue Var 0x56531af7bed0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56531af848e0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56531af84898 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56531af84868 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56531af84910 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56531af848f8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56531af848c0 <col:66> '_Bool' lvalue Var 0x56531af7bed0 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x56531af84c58 <line:813:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56531af84990 <col:3> '_Bool' lvalue Var 0x56531af7c0d8 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56531af84c40 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56531af84c10 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56531af84b30 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56531af84a50 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56531af84a08 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56531af849f0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56531af849b0 <col:20> '_Bool' lvalue Var 0x56531af7c430 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56531af84a38 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56531af84a20 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56531af849d0 <col:38> '_Bool' lvalue Var 0x56531af7bed0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56531af84b10 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56531af84ac8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56531af84ab0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56531af84a70 <col:56> '_Bool' lvalue Var 0x56531af7c528 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56531af84af8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56531af84ae0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56531af84a90 <col:74> '_Bool' lvalue Var 0x56531af7c0d8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56531af84bc8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56531af84b80 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56531af84b50 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56531af84bf8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56531af84be0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56531af84ba8 <col:102> '_Bool' lvalue Var 0x56531af7c0d8 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x56531af84cb0 <line:814:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56531af84c98 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56531af84c78 <col:3> 'void ()' Function 0x56531af22410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56531af84d08 <line:815:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56531af84cf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56531af84cd0 <col:3> 'void ()' Function 0x56531af22350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56531af84f40 <line:816:3, col:103> '_Bool' '='
    | |-DeclRefExpr 0x56531af84d28 <col:3> '_Bool' lvalue Var 0x56531af7ba00 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x56531af84f28 <col:21, col:103> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x56531af84f10 <col:21, col:103> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x56531af84ef0 <col:22, col:103> 'int'
    |       `-BinaryOperator 0x56531af84ed0 <col:23, col:102> 'int' '&&'
    |         |-BinaryOperator 0x56531af84e38 <col:23, col:74> 'int' '&&'
    |         | |-BinaryOperator 0x56531af84da0 <col:23, col:46> 'int' '=='
    |         | | |-ImplicitCastExpr 0x56531af84d88 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x56531af84d48 <col:23> 'int' lvalue Var 0x56531af7b6b0 '__unbuffered_p0_EAX' 'int'
    |         | | `-IntegerLiteral 0x56531af84d68 <col:46> 'int' 0
    |         | `-BinaryOperator 0x56531af84e18 <col:51, col:74> 'int' '=='
    |         |   |-ImplicitCastExpr 0x56531af84e00 <col:51> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x56531af84dc0 <col:51> 'int' lvalue Var 0x56531af7b7d0 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x56531af84de0 <col:74> 'int' 0
    |         `-BinaryOperator 0x56531af84eb0 <col:79, col:102> 'int' '=='
    |           |-ImplicitCastExpr 0x56531af84e98 <col:79> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56531af84e58 <col:79> 'int' lvalue Var 0x56531af7b8f0 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x56531af84e78 <col:102> 'int' 0
    |-CallExpr 0x56531af84f98 <line:817:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56531af84f80 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56531af84f60 <col:3> 'void ()' Function 0x56531af22410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56531af85038 <line:818:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56531af85020 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56531af84fb8 <col:3> 'void (int)' Function 0x56531af220d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x56531af85078 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56531af85060 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56531af85000 <col:21> '_Bool' lvalue Var 0x56531af7ba00 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x56531af850b0 <line:819:3, col:10>
      `-IntegerLiteral 0x56531af85090 <col:10> 'int' 0
