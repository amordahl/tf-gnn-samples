TranslationUnitDecl 0x558ccbe26f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x558ccbe27848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x558ccbe27520 '__int128'
|-TypedefDecl 0x558ccbe278b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x558ccbe27540 'unsigned __int128'
|-TypedefDecl 0x558ccbe27bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x558ccbe27990 'struct __NSConstantString_tag'
|   `-Record 0x558ccbe27910 '__NSConstantString_tag'
|-TypedefDecl 0x558ccbe27c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x558ccbe27c20 'char *'
|   `-BuiltinType 0x558ccbe27020 'char'
|-TypedefDecl 0x558ccbe66b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x558ccbe27f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x558ccbe27d40 'struct __va_list_tag'
|     `-Record 0x558ccbe27cc0 '__va_list_tag'
|-FunctionDecl 0x558ccbe66ca0 <pthread-wmm/mix002_pso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x558ccbe66bd0 <col:31> col:34 'int'
|-FunctionDecl 0x558ccbe66e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x558ccbe66f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x558ccbe670d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x558ccbe67048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x558ccbe67308 <col:40, col:99>
|   |-IfStmt 0x558ccbe672d8 <col:42, col:88>
|   | |-UnaryOperator 0x558ccbe671b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x558ccbe671a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x558ccbe67180 <col:47> 'int' lvalue ParmVar 0x558ccbe67048 'expression' 'int'
|   | `-CompoundStmt 0x558ccbe672c0 <col:59, col:88>
|   |   `-LabelStmt 0x558ccbe672a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x558ccbe67238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x558ccbe67220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x558ccbe671d0 <col:68> 'void () __attribute__((noreturn))' Function 0x558ccbe66f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x558ccbe672f0 <col:89>
|   `-ReturnStmt 0x558ccbe672f8 <col:91>
|-FunctionDecl 0x558ccbe67350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x558ccbe67410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x558ccbe67790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558ccbe674c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x558ccbe67548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x558ccbe675c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x558ccbe67648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x558ccbe67850 <line:10:22>
|-FunctionDecl 0x558ccbe8d8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558ccbe678c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x558ccbe67940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x558ccbe679c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x558ccbe67a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x558ccbe8d960 <line:13:22>
|-FunctionDecl 0x558ccbe8dc10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558ccbe8d9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x558ccbe8da50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x558ccbe8dad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x558ccbe8dcc8 <line:15:22>
|-TypedefDecl 0x558ccbe8dd38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x558ccbe270e0 'unsigned char'
|-TypedefDecl 0x558ccbe8dda8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x558ccbe27100 'unsigned short'
|-TypedefDecl 0x558ccbe8de18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x558ccbe27120 'unsigned int'
|-TypedefDecl 0x558ccbe8de88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x558ccbe27140 'unsigned long'
|-TypedefDecl 0x558ccbe8def8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x558ccbe27040 'signed char'
|-TypedefDecl 0x558ccbe8df68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x558ccbe270e0 'unsigned char'
|-TypedefDecl 0x558ccbe8dfd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x558ccbe27060 'short'
|-TypedefDecl 0x558ccbe8e048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x558ccbe27100 'unsigned short'
|-TypedefDecl 0x558ccbe8e0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x558ccbe27080 'int'
|-TypedefDecl 0x558ccbe8e128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x558ccbe27120 'unsigned int'
|-TypedefDecl 0x558ccbe8e198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x558ccbe270a0 'long'
|-TypedefDecl 0x558ccbe8e208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x558ccbe27140 'unsigned long'
|-TypedefDecl 0x558ccbe8e278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x558ccbe270a0 'long'
|-TypedefDecl 0x558ccbe8e2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x558ccbe27140 'unsigned long'
|-TypedefDecl 0x558ccbe8e358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x558ccbe27140 'unsigned long'
|-TypedefDecl 0x558ccbe8e3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x558ccbe27120 'unsigned int'
|-TypedefDecl 0x558ccbe8e438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x558ccbe27120 'unsigned int'
|-TypedefDecl 0x558ccbe8e4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x558ccbe27140 'unsigned long'
|-TypedefDecl 0x558ccbe8e518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x558ccbe27140 'unsigned long'
|-TypedefDecl 0x558ccbe8e588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x558ccbe27120 'unsigned int'
|-TypedefDecl 0x558ccbe8e5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x558ccbe27140 'unsigned long'
|-TypedefDecl 0x558ccbe8e668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x558ccbe270a0 'long'
|-TypedefDecl 0x558ccbe8e6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x558ccbe270a0 'long'
|-TypedefDecl 0x558ccbe8e748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x558ccbe27080 'int'
|-RecordDecl 0x558ccbe8e7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x558ccbe8e918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x558ccbe8e9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x558ccbe8e970 'struct __fsid_t' sugar
|   `-RecordType 0x558ccbe8e820 '__fsid_t'
|     `-Record 0x558ccbe8e7a0 ''
|-TypedefDecl 0x558ccbe8ea58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x558ccbe270a0 'long'
|-TypedefDecl 0x558ccbe8eac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x558ccbe27140 'unsigned long'
|-TypedefDecl 0x558ccbe8eb38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x558ccbe27140 'unsigned long'
|-TypedefDecl 0x558ccbe8eba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x558ccbe27120 'unsigned int'
|-TypedefDecl 0x558ccbe8ec18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x558ccbe270a0 'long'
|-TypedefDecl 0x558ccbe8ec88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x558ccbe27120 'unsigned int'
|-TypedefDecl 0x558ccbe8ecf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x558ccbe270a0 'long'
|-TypedefDecl 0x558ccbe8ed68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x558ccbe27080 'int'
|-TypedefDecl 0x558ccbe8edd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x558ccbe27080 'int'
|-TypedefDecl 0x558ccbe8ee48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x558ccbe27080 'int'
|-TypedefDecl 0x558ccbe8eeb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x558ccbe277a0 'void *'
|   `-BuiltinType 0x558ccbe26fe0 'void'
|-TypedefDecl 0x558ccbe8ef28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x558ccbe270a0 'long'
|-TypedefDecl 0x558ccbe8ef98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x558ccbe270a0 'long'
|-TypedefDecl 0x558ccbe8f008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x558ccbe270a0 'long'
|-TypedefDecl 0x558ccbe8f078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x558ccbe27140 'unsigned long'
|-TypedefDecl 0x558ccbe8f0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x558ccbe27140 'unsigned long'
|-TypedefDecl 0x558ccbe8f158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x558ccbe27140 'unsigned long'
|-TypedefDecl 0x558ccbe8f1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x558ccbe27140 'unsigned long'
|-TypedefDecl 0x558ccbe8f238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x558ccbe270a0 'long'
|-TypedefDecl 0x558ccbe8f2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x558ccbe270a0 'long'
|-TypedefDecl 0x558ccbe8f318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x558ccbe270a0 'long'
|-TypedefDecl 0x558ccbe8f388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x558ccbe27140 'unsigned long'
|-TypedefDecl 0x558ccbe8f418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x558ccbe8f3e0 '__off64_t' sugar
|   |-Typedef 0x558ccbe8e6d8 '__off64_t'
|   `-BuiltinType 0x558ccbe270a0 'long'
|-TypedefDecl 0x558ccbe8f510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x558ccbe8f4d0 '__quad_t *'
|   `-TypedefType 0x558ccbe8f470 '__quad_t' sugar
|     |-Typedef 0x558ccbe8e278 '__quad_t'
|     `-BuiltinType 0x558ccbe270a0 'long'
|-TypedefDecl 0x558ccbe8f580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x558ccbe27c20 'char *'
|   `-BuiltinType 0x558ccbe27020 'char'
|-TypedefDecl 0x558ccbe8f5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x558ccbe270a0 'long'
|-TypedefDecl 0x558ccbe8f660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x558ccbe27120 'unsigned int'
|-FunctionDecl 0x558ccbe8f7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x558ccbe8f6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x558ccbe8fae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x558ccbe8fad8 <line:72:3, col:34>
|     `-CallExpr 0x558ccbe8fa98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x558ccbe8fa80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x558ccbe8fa10 <col:10> '<builtin fn type>' Function 0x558ccbe8f880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x558ccbe8fac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x558ccbe8fa30 <col:29> 'unsigned int' lvalue ParmVar 0x558ccbe8f6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x558ccbe8f880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x558ccbe8f920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x558ccbe8f990 <col:10> Implicit
| `-ConstAttr 0x558ccbe8f9e8 <col:10> Implicit
|-FunctionDecl 0x558ccbe8fc40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x558ccbe8fb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x558ccbe8ff58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x558ccbe8ff48 <line:77:3, col:34>
|     `-CallExpr 0x558ccbe8ff08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x558ccbe8fef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x558ccbe8fe78 <col:10> '<builtin fn type>' Function 0x558ccbe8fce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x558ccbe8ff30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x558ccbe8fe98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x558ccbe8fb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x558ccbe8fce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x558ccbe8fd88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x558ccbe8fdf8 <col:10> Implicit
| `-ConstAttr 0x558ccbe8fe50 <col:10> Implicit
|-TypedefDecl 0x558ccbe8ff88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x558ccbe27140 'unsigned long'
|-TypedefDecl 0x558ccbe90018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x558ccbe8ffe0 '__time_t' sugar
|   |-Typedef 0x558ccbe8ec18 '__time_t'
|   `-BuiltinType 0x558ccbe270a0 'long'
|-RecordDecl 0x558ccbe90070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x558ccbe90128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x558ccbe901b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x558ccbe90248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x558ccbe90210 '__pid_t' sugar
|   |-Typedef 0x558ccbe8e748 '__pid_t'
|   `-BuiltinType 0x558ccbe27080 'int'
|-RecordDecl 0x558ccbe902a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x558ccbe90360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x558ccbe903b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x558ccbe90470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x558ccbe904d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x558ccbe27140 'unsigned long'
|-RecordDecl 0x558ccbe90530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x558ccbe907c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x558ccbe928b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x558ccbe90810 'struct cpu_set_t' sugar
|   `-RecordType 0x558ccbe905b0 'cpu_set_t'
|     `-Record 0x558ccbe90530 ''
|-FunctionDecl 0x558ccbe92b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x558ccbe92958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x558ccbe92a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x558ccbe92c38 <line:107:19>
|-FunctionDecl 0x558ccbe92e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x558ccbe92ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x558ccbe92eb8 <col:69>
|-FunctionDecl 0x558ccbe93030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x558ccbe92f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x558ccbe930d8 <col:64>
|-FunctionDecl 0x558ccbe93398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x558ccbe93140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558ccbe93278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x558ccbe93448 <line:113:22>
|-FunctionDecl 0x558ccbe936c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x558ccbe934b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558ccbe935a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x558ccbe93778 <col:88>
|-FunctionDecl 0x558ccbe93a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x558ccbe937e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558ccbe938c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x558ccbe93950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x558ccbe93b50 <col:62>
|-FunctionDecl 0x558ccbe93cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x558ccbe93bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x558ccbe93d70 <col:63>
|-FunctionDecl 0x558ccbe93e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x558ccbe93f38 <col:47>
|-FunctionDecl 0x558ccbe94040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x558ccbe93fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x558ccbe940e8 <col:69>
|-FunctionDecl 0x558ccbe941f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x558ccbe94158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x558ccbe94298 <col:69>
|-FunctionDecl 0x558ccbe94558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x558ccbe94300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558ccbe94438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x558ccbe94608 <col:88>
|-TypedefDecl 0x558ccbe94698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x558ccbe94660 '__clock_t' sugar
|   |-Typedef 0x558ccbe8ea58 '__clock_t'
|   `-BuiltinType 0x558ccbe270a0 'long'
|-TypedefDecl 0x558ccbe94728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x558ccbe946f0 '__clockid_t' sugar
|   |-Typedef 0x558ccbe8ee48 '__clockid_t'
|   `-BuiltinType 0x558ccbe27080 'int'
|-TypedefDecl 0x558ccbe947b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x558ccbe94780 '__timer_t' sugar
|   |-Typedef 0x558ccbe8eeb8 '__timer_t'
|   `-PointerType 0x558ccbe277a0 'void *'
|     `-BuiltinType 0x558ccbe26fe0 'void'
|-RecordDecl 0x558ccbe94810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x558ccbe948e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x558ccbe94950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x558ccbe949b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x558ccbe94a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x558ccbe94a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x558ccbe94af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x558ccbe94b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x558ccbe94bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x558ccbe94c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x558ccbe94c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x558ccbe94cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x558ccbe94d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x558ccbe94e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x558ccbe94e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x558ccbe94f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x558ccbe95100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x558ccbe951a0 <col:45>
|-FunctionDecl 0x558ccbe95380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x558ccbe95270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x558ccbe95428 <col:54>
|-FunctionDecl 0x558ccbe95628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x558ccbe95490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x558ccbe95508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x558ccbe956d8 <line:157:22>
| `-ConstAttr 0x558ccbe95730 <col:63>
|-FunctionDecl 0x558ccbe96560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x558ccbe95828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x558ccbe96608 <col:56>
|-FunctionDecl 0x558ccbe969b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x558ccbe96678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x558ccbe966f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x558ccbe96770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x558ccbe96868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x558ccbe96a70 <col:54>
|-RecordDecl 0x558ccbe96ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x558ccbe96b78 parent 0x558ccbe26f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x558ccbe96dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x558ccbe96e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x558ccbe96ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x558ccbe96f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x558ccbe97038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x558ccbe97158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x558ccbe97100 'struct __locale_struct *'
|   `-ElaboratedType 0x558ccbe97090 'struct __locale_struct' sugar
|     `-RecordType 0x558ccbe96b50 'struct __locale_struct'
|       `-Record 0x558ccbe96ac8 '__locale_struct'
|-TypedefDecl 0x558ccbe97208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x558ccbe971d0 '__locale_t' sugar
|   |-Typedef 0x558ccbe97158 '__locale_t'
|   `-PointerType 0x558ccbe97100 'struct __locale_struct *'
|     `-ElaboratedType 0x558ccbe97090 'struct __locale_struct' sugar
|       `-RecordType 0x558ccbe96b50 'struct __locale_struct'
|         `-Record 0x558ccbe96ac8 '__locale_struct'
|-FunctionDecl 0x558ccbe97610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x558ccbe97278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x558ccbe972f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x558ccbe97370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x558ccbe97400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x558ccbe97478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x558ccbe976d8 <col:40>
|-FunctionDecl 0x558ccbe978c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x558ccbe977a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x558ccbe97970 <col:66>
|-FunctionDecl 0x558ccbe97a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x558ccbe979d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x558ccbe97b28 <col:69>
|-FunctionDecl 0x558ccbe97d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x558ccbe97b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x558ccbe97c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x558ccbe97e08 <col:52>
|-FunctionDecl 0x558ccbe97fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x558ccbe97e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x558ccbe97f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x558ccbe98060 <col:55>
|-FunctionDecl 0x558ccbe981f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x558ccbe980e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x558ccbe982a0 <col:62>
|-FunctionDecl 0x558ccbe98418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x558ccbe98308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x558ccbe984c0 <col:60>
|-FunctionDecl 0x558ccbe98718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x558ccbe98578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x558ccbe985f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x558ccbe987c8 <col:44>
|-FunctionDecl 0x558ccbe989d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x558ccbe98830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x558ccbe988b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x558ccbe98a88 <col:49>
|-VarDecl 0x558ccbe98b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x558ccbe98c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x558ccbe98c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x558ccbe98d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x558ccbe98e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x558ccbe98f20 <col:42>
|-VarDecl 0x558ccbe98f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x558ccbe99010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x558ccbe99198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x558ccbe99088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x558ccbe99240 <col:57>
|-FunctionDecl 0x558ccbe99350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x558ccbe992c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x558ccbe993f8 <col:56>
|-FunctionDecl 0x558ccbe9a540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x558ccbe99478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x558ccbe9a5e8 <col:59>
|-FunctionDecl 0x558ccbe9a6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x558ccbe9a658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x558ccbe9a798 <col:48>
| `-ConstAttr 0x558ccbe9a7f0 <col:89>
|-FunctionDecl 0x558ccbe9aa58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x558ccbe9a8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x558ccbe9a938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x558ccbe9acb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x558ccbe9ab48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558ccbe9abd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x558ccbe9ad68 <col:88>
|-FunctionDecl 0x558ccbe9af00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x558ccbe9add0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558ccbe9ae60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x558ccbe9afb0 <col:88>
|-FunctionDecl 0x558ccbe9b1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x558ccbe9b018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558ccbe9b0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x558ccbe9b278 <line:208:22>
|-FunctionDecl 0x558ccbe9b5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x558ccbe9b2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558ccbe9b360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x558ccbe9b3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x558ccbe9b480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x558ccbe9b8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x558ccbe9b6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x558ccbe9b7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x558ccbe9b998 <col:85>
|-FunctionDecl 0x558ccbe9bd88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x558ccbe9ba00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558ccbe9bb38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x558ccbe9bc40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x558ccbe9be40 <col:52>
|-FunctionDecl 0x558ccbe9bfb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x558ccbe9bea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x558ccbe9c060 <col:61>
|-FunctionDecl 0x558ccbe9c560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x558ccbe9c0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x558ccbe9c148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x558ccbe9c278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x558ccbe9c368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x558ccbe9c620 <col:62>
|-FunctionDecl 0x558ccbe9c838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x558ccbe9c688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x558ccbe9c718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x558ccbe9c8e8 <line:221:22>
|-FunctionDecl 0x558ccbe9c9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x558ccbe9c950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x558ccbe9ca90 <col:65>
|-TypedefDecl 0x558ccbe9cb00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x558ccbe27140 'unsigned long'
|-RecordDecl 0x558ccbe9cb58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x558ccbe9cca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x558ccbe9cd08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558ccbe9cdb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x558ccbe9cd60 'union pthread_attr_t' sugar
|   `-RecordType 0x558ccbe9cbe0 'union pthread_attr_t'
|     `-Record 0x558ccbe9cb58 'pthread_attr_t'
|-RecordDecl 0x558ccbe9ce10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x558ccbe9cf88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x558ccbe9d000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x558ccbe9d0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x558ccbe9d050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x558ccbe9ce90 'struct __pthread_internal_list'
|     `-Record 0x558ccbe9ce10 '__pthread_internal_list'
|-RecordDecl 0x558ccbe9d120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x558ccbe9d1c8 parent 0x558ccbe26f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x558ccbe9d2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x558ccbe9d308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x558ccbe9d370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x558ccbe9d3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x558ccbe9d440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x558ccbe9d4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x558ccbea1580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x558ccbea1630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x558ccbea1720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x558ccbea1788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558ccbea1910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x558ccbea18b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x558ccbe9d1a0 'pthread_mutex_t'
|     `-Record 0x558ccbe9d120 ''
|-RecordDecl 0x558ccbea1980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x558ccbea1ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x558ccbea1b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x558ccbea1be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x558ccbea1b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x558ccbea1a00 'pthread_mutexattr_t'
|     `-Record 0x558ccbea1980 ''
|-RecordDecl 0x558ccbea1c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x558ccbea1cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x558ccbea1dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x558ccbea1e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x558ccbea1e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x558ccbea1ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x558ccbea1f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x558ccbea1fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x558ccbea2030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x558ccbea2098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x558ccbea2150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix002_pso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix002_pso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x558ccbea2240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x558ccbea22a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x558ccbea23e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x558ccbea2380 'union pthread_cond_t' sugar
|   `-RecordType 0x558ccbea1cd0 'pthread_cond_t'
|     `-Record 0x558ccbea1c50 ''
|-RecordDecl 0x558ccbea2450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x558ccbea2590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x558ccbea25f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x558ccbea26b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x558ccbea2650 'union pthread_condattr_t' sugar
|   `-RecordType 0x558ccbea24d0 'pthread_condattr_t'
|     `-Record 0x558ccbea2450 ''
|-TypedefDecl 0x558ccbea2738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x558ccbe27120 'unsigned int'
|-TypedefDecl 0x558ccbea27a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x558ccbe27080 'int'
|-RecordDecl 0x558ccbea2800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x558ccbea28a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x558ccbea2970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x558ccbea29d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x558ccbea2a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x558ccbea2aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x558ccbea2b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x558ccbea2b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x558ccbea2be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x558ccbea2c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x558ccbea2cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x558ccbea2d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x558ccbea2d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x558ccbea2e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix002_pso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix002_pso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x558ccbea2ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x558ccbea2f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558ccbea3090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x558ccbea3030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x558ccbea2880 'pthread_rwlock_t'
|     `-Record 0x558ccbea2800 ''
|-RecordDecl 0x558ccbea3100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x558ccbea3240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x558ccbea32a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558ccbea3360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x558ccbea3300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x558ccbea3180 'pthread_rwlockattr_t'
|     `-Record 0x558ccbea3100 ''
|-TypedefDecl 0x558ccbea33e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x558ccbe27084 'volatile int' volatile
|   `-BuiltinType 0x558ccbe27080 'int'
|-RecordDecl 0x558ccbea3440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x558ccbea55b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x558ccbea5618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558ccbea56d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x558ccbea5670 'union pthread_barrier_t' sugar
|   `-RecordType 0x558ccbea34c0 'pthread_barrier_t'
|     `-Record 0x558ccbea3440 ''
|-RecordDecl 0x558ccbea5740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x558ccbea5840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x558ccbea58a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x558ccbea5960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x558ccbea5900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x558ccbea57c0 'pthread_barrierattr_t'
|     `-Record 0x558ccbea5740 ''
|-TypedefDecl 0x558ccbea5a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x558ccbea5a10 'long [8]' 8 
|   `-BuiltinType 0x558ccbe270a0 'long'
|-EnumDecl 0x558ccbea5ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x558ccbea5b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x558ccbea5be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x558ccbea5c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x558ccbea5d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x558ccbea5d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x558ccbea5da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x558ccbea5df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x558ccbea5e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x558ccbea5e68 <col:26> 'int'
| |   `-DeclRefExpr 0x558ccbea5e48 <col:26> 'int' EnumConstant 0x558ccbea5d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x558ccbea5f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x558ccbea5ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x558ccbea5ed0 <col:29> 'int' EnumConstant 0x558ccbea5d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x558ccbea5f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x558ccbea5f78 <col:30> 'int'
| |   `-DeclRefExpr 0x558ccbea5f58 <col:30> 'int' EnumConstant 0x558ccbea5da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x558ccbea6018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x558ccbea6000 <col:27> 'int'
|     `-DeclRefExpr 0x558ccbea5fe0 <col:27> 'int' EnumConstant 0x558ccbea5e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x558ccbea6068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x558ccbea6138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x558ccbea61c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x558ccbea61a8 <col:30> 'int'
| |   `-DeclRefExpr 0x558ccbea6188 <col:30> 'int' EnumConstant 0x558ccbea6138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x558ccbea6210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x558ccbea6298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x558ccbea6280 <col:29> 'int'
|     `-DeclRefExpr 0x558ccbea6260 <col:29> 'int' EnumConstant 0x558ccbea6210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x558ccbea62e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x558ccbea63b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x558ccbea6408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x558ccbea6458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x558ccbea64a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x558ccbea65c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x558ccbea6610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x558ccbea6660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x558ccbea66e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x558ccbea66d0 <col:31> 'int'
|     `-DeclRefExpr 0x558ccbea66b0 <col:31> 'int' EnumConstant 0x558ccbea65c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x558ccbea6738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x558ccbea6808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x558ccbea6858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x558ccbea68a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x558ccbea6978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x558ccbea69c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x558ccbea6a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x558ccbea6ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x558ccbea6b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x558ccbea6b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x558ccbea6dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x558ccbea6e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x558ccbea6e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x558ccbea6fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x558ccbea7008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x558ccbea70d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x558ccbea7128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x558ccbea7178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x558ccbea7248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x558ccbea7298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x558ccbea78f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x558ccbea7390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x558ccbea74a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558ccbea76e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x558ccbea7760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x558ccbea79b8 <col:47>
| |-NonNullAttr 0x558ccbea7a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x558ccbea7a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x558ccbea7b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x558ccbea7aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x558ccbea7dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x558ccbea7c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x558ccbea7ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x558ccbea7f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x558ccbea7e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x558ccbea8040 <col:60>
|-FunctionDecl 0x558ccbea8190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x558ccbea8230 <col:54>
| `-ConstAttr 0x558ccbea8288 <col:95>
|-FunctionDecl 0x558ccbea8458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x558ccbea82c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558ccbea8338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x558ccbea8508 <line:394:19>
| `-ConstAttr 0x558ccbea8560 <col:60>
|-FunctionDecl 0x558ccbea8f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x558ccbea8e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x558ccbea9010 <col:71>
| `-NonNullAttr 0x558ccbea9068 <col:112, col:126> 1
|-FunctionDecl 0x558ccbea9170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x558ccbea90b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x558ccbea9218 <line:397:22>
| `-NonNullAttr 0x558ccbea9270 <col:63, col:77> 1
|-FunctionDecl 0x558ccbea9498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x558ccbea92b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x558ccbea9338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x558ccbea9548 <line:400:22>
| `-NonNullAttr 0x558ccbea95a0 <col:63, col:80> 1 2
|-FunctionDecl 0x558ccbea97a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558ccbea95e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558ccbea9668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x558ccbea9858 <line:403:22>
| `-NonNullAttr 0x558ccbea98b0 <col:63, col:77> 1
|-FunctionDecl 0x558ccbea9b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x558ccbea98f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x558ccbea99a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x558ccbea9bb8 <line:406:22>
| `-NonNullAttr 0x558ccbea9c10 <col:63, col:80> 1 2
|-FunctionDecl 0x558ccbeaae48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x558ccbea9c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558ccbea9cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x558ccbeaaef8 <line:409:22>
| `-NonNullAttr 0x558ccbeaaf50 <col:63, col:77> 1
|-FunctionDecl 0x558ccbeab188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x558ccbeaaf98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558ccbeab028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x558ccbeab238 <line:412:22>
| `-NonNullAttr 0x558ccbeab290 <col:63, col:80> 1 2
|-FunctionDecl 0x558ccbeab4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x558ccbeab2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x558ccbeab368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x558ccbeab578 <col:37>
| `-NonNullAttr 0x558ccbeab5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x558ccbeab7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558ccbeab618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558ccbeab698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x558ccbeab868 <line:418:22>
| `-NonNullAttr 0x558ccbeab8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x558ccbeaba48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558ccbeab908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558ccbeab988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x558ccbeabaf8 <line:420:22>
| `-NonNullAttr 0x558ccbeabb50 <col:63, col:77> 1
|-FunctionDecl 0x558ccbeabcf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558ccbeabb98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558ccbeabc18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x558ccbeabda8 <line:423:22>
| `-NonNullAttr 0x558ccbeace30 <col:63, col:80> 1 2
|-FunctionDecl 0x558ccbeacfb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558ccbeace78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558ccbeacef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x558ccbead068 <line:426:22>
| `-NonNullAttr 0x558ccbead0c0 <col:63, col:77> 1
|-FunctionDecl 0x558ccbead268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558ccbead108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558ccbead188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x558ccbead318 <line:429:22>
| `-NonNullAttr 0x558ccbead370 <col:63, col:80> 1 2
|-FunctionDecl 0x558ccbead4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558ccbead3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558ccbead438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x558ccbead5a8 <line:431:22>
| `-NonNullAttr 0x558ccbead600 <col:63, col:77> 1
|-FunctionDecl 0x558ccbead828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x558ccbead648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558ccbead6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x558ccbead8d8 <line:434:22>
| |-NonNullAttr 0x558ccbead930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x558ccbead968 <col:100> "" ""
|-FunctionDecl 0x558ccbeadb78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x558ccbead9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558ccbeada38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x558ccbeadc28 <line:437:22>
| |-NonNullAttr 0x558ccbeadc80 <col:63, col:77> 1
| `-DeprecatedAttr 0x558ccbeadcb8 <col:97> "" ""
|-FunctionDecl 0x558ccbeadeb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x558ccbeadd08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558ccbeadd80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x558ccbeadf68 <line:440:22>
| `-NonNullAttr 0x558ccbeadfc0 <col:63, col:80> 1 2
|-FunctionDecl 0x558ccbeae140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x558ccbeae008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558ccbeae080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x558ccbeae1f0 <line:443:22>
| `-NonNullAttr 0x558ccbeae248 <col:63, col:77> 1
|-FunctionDecl 0x558ccbeae538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x558ccbeae298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558ccbeae318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x558ccbeae390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x558ccbeae5f0 <line:447:22>
| `-NonNullAttr 0x558ccbeae648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x558ccbeae8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x558ccbeae6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558ccbeae720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x558ccbeae798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x558ccbeae9b0 <col:43>
| `-NonNullAttr 0x558ccbeaea08 <col:84, col:98> 1
|-FunctionDecl 0x558ccbeaecc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x558ccbeaea58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558ccbeaead8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x558ccbeaeb68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x558ccbeaed80 <line:452:22>
| `-NonNullAttr 0x558ccbeaedd8 <col:63, col:77> 3
|-FunctionDecl 0x558ccbeaf0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x558ccbeaee50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558ccbeaeed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x558ccbeaef60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x558ccbeaf1a0 <line:456:22>
| `-NonNullAttr 0x558ccbeaf1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x558ccbeaf3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x558ccbeaf248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558ccbeaf2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x558ccbeaf498 <line:458:22>
|-FunctionDecl 0x558ccbeaf868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x558ccbeaf560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x558ccbeaf700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x558ccbeaf918 <col:52, col:69> 1 2
|-FunctionDecl 0x558ccbeafac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x558ccbeaf9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x558ccbeafa20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x558ccbeafca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x558ccbeafb88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x558ccbeafc08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x558ccbeafe60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x558ccbeafd68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x558ccbeaffa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x558ccbeb0040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x558ccbeb00e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x558ccbeb01d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x558ccbeb0240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x558ccbeb0410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix002_pso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x558ccbeb0508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x558ccbeb05c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x558ccbeb0560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x558ccbeb00c0 '__pthread_unwind_buf_t'
| |   `-Record 0x558ccbeb0040 ''
| `-AlignedAttr 0x558ccbeb0618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x558ccbeb0690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x558ccbeb07f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x558ccbeb0858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x558ccbeb08c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x558ccbeb0928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x558ccbeb0b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x558ccbeb0a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x558ccbeb0c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x558ccbeb0be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x558ccbeb0e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558ccbeb0d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x558ccbeb0f18 <line:487:22>
|-RecordDecl 0x558ccbeb0f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x558ccbeb1288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x558ccbeb10e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x558ccbeb1168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x558ccbeb1338 <col:86>
| `-ReturnsTwiceAttr 0x558ccbeb1390 <col:12> Implicit
|-FunctionDecl 0x558ccbeb16b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x558ccbeb1460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x558ccbeb1570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x558ccbeb1768 <line:493:22>
| `-NonNullAttr 0x558ccbeb17c0 <col:63, col:77> 1
|-FunctionDecl 0x558ccbeb1938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558ccbeb1808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558ccbeb19e0 <line:495:22>
| `-NonNullAttr 0x558ccbeb1a38 <col:63, col:77> 1
|-FunctionDecl 0x558ccbeb1b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558ccbeb1a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558ccbeb1be8 <line:497:22>
| `-NonNullAttr 0x558ccbeb1c40 <col:52, col:66> 1
|-FunctionDecl 0x558ccbeb1d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558ccbeb1c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558ccbeb1de8 <line:499:22>
| `-NonNullAttr 0x558ccbeb1e40 <col:52, col:66> 1
|-FunctionDecl 0x558ccbeb2088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558ccbeb1e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558ccbeb1f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x558ccbeb2138 <col:36>
| `-NonNullAttr 0x558ccbeb2190 <col:66, col:83> 1 2
|-FunctionDecl 0x558ccbeb2290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558ccbeb21d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558ccbeb2338 <line:504:22>
| `-NonNullAttr 0x558ccbeb2390 <col:52, col:66> 1
|-FunctionDecl 0x558ccbeb2628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558ccbeb2440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558ccbeb24c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x558ccbeb26d8 <line:508:22>
| `-NonNullAttr 0x558ccbeb2730 <col:63, col:80> 1 2
|-FunctionDecl 0x558ccbeb29f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x558ccbeb2778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558ccbeb27f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x558ccbeb2878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x558ccbeb2ab0 <line:512:22>
| `-NonNullAttr 0x558ccbeb2b08 <col:63, col:80> 1 3
|-FunctionDecl 0x558ccbeb2c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558ccbeb2b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558ccbeb2cb8 <line:514:22>
| `-NonNullAttr 0x558ccbeb2d10 <col:63, col:77> 1
|-FunctionDecl 0x558ccbeb2f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x558ccbeb2dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x558ccbeb2fe0 <line:516:22>
| `-NonNullAttr 0x558ccbeb3038 <col:63, col:77> 1
|-FunctionDecl 0x558ccbeb3140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x558ccbeb3088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x558ccbeb31e8 <line:518:22>
| `-NonNullAttr 0x558ccbeb3240 <col:63, col:77> 1
|-FunctionDecl 0x558ccbeb3468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558ccbeb3288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558ccbeb3308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x558ccbeb3518 <line:522:22>
| `-NonNullAttr 0x558ccbeb3570 <col:63, col:80> 1 2
|-FunctionDecl 0x558ccbeb3778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558ccbeb35b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558ccbeb3638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x558ccbeb3828 <line:525:22>
| `-NonNullAttr 0x558ccbeb3880 <col:63, col:77> 1
|-FunctionDecl 0x558ccbeb3a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558ccbeb38c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558ccbeb3948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x558ccbeb3ad8 <line:528:22>
| `-NonNullAttr 0x558ccbeb3b30 <col:63, col:80> 1 2
|-FunctionDecl 0x558ccbeb3cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558ccbeb3b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558ccbeb3bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x558ccbeb3d68 <line:530:22>
| `-NonNullAttr 0x558ccbeb3dc0 <col:63, col:77> 1
|-FunctionDecl 0x558ccbeb4f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558ccbeb3e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558ccbeb4eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x558ccbeb5040 <line:534:22>
| `-NonNullAttr 0x558ccbeb5098 <col:63, col:80> 1 2
|-FunctionDecl 0x558ccbeb5228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558ccbeb50e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558ccbeb5168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x558ccbeb52d8 <line:537:22>
| `-NonNullAttr 0x558ccbeb5330 <col:63, col:77> 1
|-FunctionDecl 0x558ccbeb54d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558ccbeb5378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558ccbeb53f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x558ccbeb5588 <line:541:22>
| `-NonNullAttr 0x558ccbeb55e0 <col:63, col:80> 1 2
|-FunctionDecl 0x558ccbeb5768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558ccbeb5628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558ccbeb56a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x558ccbeb5818 <line:544:22>
| `-NonNullAttr 0x558ccbeb5870 <col:63, col:77> 1
|-FunctionDecl 0x558ccbeb5a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x558ccbeb58b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x558ccbeb5938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x558ccbeb5b08 <line:547:22>
| `-NonNullAttr 0x558ccbeb5b60 <col:63, col:80> 1 2
|-FunctionDecl 0x558ccbeb5ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558ccbeb5ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558ccbeb5c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x558ccbeb5d98 <line:550:22>
| `-NonNullAttr 0x558ccbeb5df0 <col:63, col:77> 1
|-FunctionDecl 0x558ccbeb7168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x558ccbeb6f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x558ccbeb7020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x558ccbeb7218 <col:29>
| `-NonNullAttr 0x558ccbeb7270 <col:70, col:84> 1
|-FunctionDecl 0x558ccbeb73e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558ccbeb72b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558ccbeb7490 <line:555:22>
| `-NonNullAttr 0x558ccbeb74e8 <col:63, col:77> 1
|-FunctionDecl 0x558ccbeb75f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558ccbeb7538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558ccbeb7698 <line:557:22>
| `-NonNullAttr 0x558ccbeb76f0 <col:52, col:66> 1
|-FunctionDecl 0x558ccbeb77f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558ccbeb7738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558ccbeb7898 <line:559:19>
| `-NonNullAttr 0x558ccbeb78f0 <col:49, col:63> 1
|-FunctionDecl 0x558ccbeb7b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558ccbeb7938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x558ccbeb79c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x558ccbeb7bd8 <col:39>
| `-NonNullAttr 0x558ccbeb7c30 <col:69, col:86> 1 2
|-FunctionDecl 0x558ccbeb7d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558ccbeb7c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558ccbeb7dd8 <line:564:22>
| `-NonNullAttr 0x558ccbeb7e30 <col:52, col:66> 1
|-FunctionDecl 0x558ccbeb7f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558ccbeb7ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558ccbeb8040 <line:566:22>
| `-NonNullAttr 0x558ccbeb8098 <col:52, col:66> 1
|-FunctionDecl 0x558ccbeb8258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558ccbeb80e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x558ccbeb8178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x558ccbeb8308 <col:39>
| `-NonNullAttr 0x558ccbeb8360 <col:69, col:86> 1 2
|-FunctionDecl 0x558ccbeb8460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558ccbeb83a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558ccbeb8508 <line:571:22>
| `-NonNullAttr 0x558ccbeb8560 <col:52, col:66> 1
|-FunctionDecl 0x558ccbeb8748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x558ccbeb8610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x558ccbeb87f0 <line:573:22>
| `-NonNullAttr 0x558ccbeb8848 <col:63, col:77> 1
|-FunctionDecl 0x558ccbeb8950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x558ccbeb8898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x558ccbeb89f8 <line:575:22>
| `-NonNullAttr 0x558ccbeb8a50 <col:63, col:77> 1
|-FunctionDecl 0x558ccbeb8c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558ccbeb8a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x558ccbeb8b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x558ccbeb8d28 <line:579:22>
| `-NonNullAttr 0x558ccbeb8d80 <col:63, col:80> 1 2
|-FunctionDecl 0x558ccbeb8fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x558ccbeb8dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x558ccbeb8e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x558ccbeb9058 <line:582:22>
| `-NonNullAttr 0x558ccbeb90b0 <col:63, col:77> 1
|-FunctionDecl 0x558ccbeb9258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558ccbeb90f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x558ccbeb9178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x558ccbeb9308 <line:586:22>
| `-NonNullAttr 0x558ccbeb9360 <col:63, col:80> 1 2
|-FunctionDecl 0x558ccbeb94e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x558ccbeb93a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x558ccbeb9428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x558ccbeb9598 <col:36>
| `-NonNullAttr 0x558ccbeb95f0 <col:77, col:91> 1
|-FunctionDecl 0x558ccbeb9928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x558ccbeb96d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x558ccbeb97e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x558ccbeb99d8 <line:591:22>
| `-NonNullAttr 0x558ccbeb9a30 <col:63, col:77> 1
|-FunctionDecl 0x558ccbeb9ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x558ccbeb9a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x558ccbeb9c50 <line:593:22>
| `-NonNullAttr 0x558ccbeb9ca8 <col:63, col:77> 1
|-FunctionDecl 0x558ccbeb9db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x558ccbeb9cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x558ccbeb9e58 <line:595:22>
| `-NonNullAttr 0x558ccbeb9eb0 <col:52, col:66> 1
|-FunctionDecl 0x558ccbeb9fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x558ccbeb9f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x558ccbeba070 <line:597:22>
| `-NonNullAttr 0x558ccbeba0c8 <col:52, col:66> 1
|-FunctionDecl 0x558ccbeba2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x558ccbeba118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x558ccbeba190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x558ccbeba3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x558ccbeba6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558ccbeba428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x558ccbeba4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558ccbeba530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x558ccbeba790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x558ccbeba9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x558ccbeba870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x558ccbebaa50 <line:606:22>
| `-NonNullAttr 0x558ccbebaaa8 <col:63, col:77> 1
|-FunctionDecl 0x558ccbebabb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x558ccbebaaf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x558ccbebac58 <line:608:22>
| `-NonNullAttr 0x558ccbebacb0 <col:63, col:77> 1
|-FunctionDecl 0x558ccbebaf10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558ccbebacf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x558ccbebad78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x558ccbebafc0 <line:612:22>
| `-NonNullAttr 0x558ccbebb018 <col:63, col:80> 1 2
|-FunctionDecl 0x558ccbebb228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x558ccbebb068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x558ccbebb0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x558ccbebb2d8 <col:37>
| `-NonNullAttr 0x558ccbebb330 <col:78, col:92> 1
|-FunctionDecl 0x558ccbebb548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x558ccbebb378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x558ccbebb420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x558ccbebb5f8 <line:618:22>
| `-NonNullAttr 0x558ccbebb650 <col:63, col:80> 1 2
|-FunctionDecl 0x558ccbebb818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x558ccbebb698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x558ccbebb710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x558ccbebb8c8 <line:621:22>
| `-NonNullAttr 0x558ccbebb920 <col:63, col:77> 1
|-FunctionDecl 0x558ccbebbbc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x558ccbebba00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x558ccbebba80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x558ccbebbc78 <line:623:22>
| `-NonNullAttr 0x558ccbebbcd0 <col:63, col:77> 1
|-FunctionDecl 0x558ccbebbe48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558ccbebbd18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558ccbebbf20 <line:625:22>
| `-NonNullAttr 0x558ccbebbf78 <col:63, col:77> 1
|-FunctionDecl 0x558ccbebc080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558ccbebbfc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558ccbebc128 <line:627:22>
| `-NonNullAttr 0x558ccbebc180 <col:52, col:66> 1
|-FunctionDecl 0x558ccbebc280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558ccbebc1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558ccbebc328 <line:629:22>
| `-NonNullAttr 0x558ccbebc380 <col:52, col:66> 1
|-FunctionDecl 0x558ccbebc480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558ccbebc3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558ccbebc528 <line:631:22>
| `-NonNullAttr 0x558ccbebc580 <col:52, col:66> 1
|-FunctionDecl 0x558ccbebc958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x558ccbebc660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x558ccbebc770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x558ccbebc7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x558ccbebca10 <line:635:22>
| `-NonNullAttr 0x558ccbebca68 <col:63, col:77> 1
|-FunctionDecl 0x558ccbebcbe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x558ccbebcab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x558ccbebcc90 <line:637:22>
| `-NonNullAttr 0x558ccbebcce8 <col:63, col:77> 1
|-FunctionDecl 0x558ccbebcdf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x558ccbebcd38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x558ccbebce98 <line:639:22>
| `-NonNullAttr 0x558ccbebcef0 <col:52, col:66> 1
|-FunctionDecl 0x558ccbebd0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x558ccbebcfb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x558ccbebd190 <line:641:22>
| `-NonNullAttr 0x558ccbebd1e8 <col:63, col:77> 1
|-FunctionDecl 0x558ccbebd2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x558ccbebd238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x558ccbebd398 <line:643:22>
| `-NonNullAttr 0x558ccbebd3f0 <col:63, col:77> 1
|-FunctionDecl 0x558ccbebd618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558ccbebd438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x558ccbebd4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x558ccbebd6c8 <line:647:22>
| `-NonNullAttr 0x558ccbebd720 <col:63, col:80> 1 2
|-FunctionDecl 0x558ccbebd928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x558ccbebd768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x558ccbebd7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x558ccbebd9d8 <line:650:22>
| `-NonNullAttr 0x558ccbebda30 <col:63, col:77> 1
|-FunctionDecl 0x558ccbebdd78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x558ccbebdb10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x558ccbebdc30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x558ccbebde28 <line:653:22>
| `-NonNullAttr 0x558ccbebde80 <col:63, col:77> 1
|-FunctionDecl 0x558ccbebdfe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x558ccbebdec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x558ccbebe090 <col:69>
|-FunctionDecl 0x558ccbebe208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x558ccbebe0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x558ccbebe2b0 <col:72>
|-FunctionDecl 0x558ccbebe4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x558ccbebe318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x558ccbebe3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x558ccbebe598 <col:44>
|-FunctionDecl 0x558ccbebe7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x558ccbebe600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558ccbebe678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x558ccbebe868 <line:660:22>
| `-NonNullAttr 0x558ccbebe8c0 <col:63, col:77> 2
|-FunctionDecl 0x558ccbebed08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x558ccbebe9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x558ccbebeab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x558ccbebebc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x558ccbebedc0 <col:47>
|-FunctionDecl 0x558ccbebff60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x558ccbebee30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x558ccbec00b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x558ccbec0020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x558ccbec0210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x558ccbec0178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x558ccbec02d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x558ccbec0398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x558ccbec0458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x558ccbec0510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x558ccbec0590 prev 0x558ccbec0510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x558ccbec05f8 <col:24> 'int' 0
|-VarDecl 0x558ccbec0630 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x558ccbec06b0 prev 0x558ccbec0630 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x558ccbec0718 <col:27> 'int' 0
|-VarDecl 0x558ccbec0750 <line:675:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x558ccbec07d0 prev 0x558ccbec0750 <line:676:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x558ccbec0838 <col:27> 'int' 0
|-VarDecl 0x558ccbec0870 <line:677:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x558ccbec08f0 prev 0x558ccbec0870 <line:678:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x558ccbec0958 <col:27> 'int' 0
|-VarDecl 0x558ccbec0990 <line:679:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x558ccbec0a10 prev 0x558ccbec0990 <line:680:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x558ccbec0a78 <col:27> 'int' 0
|-VarDecl 0x558ccbec0ab0 <line:681:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x558ccbec0b30 prev 0x558ccbec0ab0 <line:682:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x558ccbec0b98 <col:27> 'int' 0
|-VarDecl 0x558ccbec0bd0 <line:683:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x558ccbec0c50 prev 0x558ccbec0bd0 <line:684:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x558ccbec0cb8 <col:27> 'int' 0
|-VarDecl 0x558ccbec0cf0 <line:685:1, col:5> col:5 used a 'int'
|-VarDecl 0x558ccbec0d70 prev 0x558ccbec0cf0 <line:686:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x558ccbec0dd8 <col:9> 'int' 0
|-VarDecl 0x558ccbec0e08 <line:687:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x558ccbec0e88 <line:688:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x558ccbec0f70 <line:689:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x558ccbec0fe8 <line:690:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x558ccbec1060 <line:691:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x558ccbec10d8 <line:692:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x558ccbec1150 <line:693:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x558ccbec11c8 <line:694:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x558ccbec1240 <line:695:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x558ccbec12b8 <line:696:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x558ccbec1330 <line:697:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x558ccbec13b0 <line:698:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x558ccbec1430 <line:699:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x558ccbec14a8 <line:700:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x558ccbec1528 <line:701:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x558ccbec15a0 <line:702:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x558ccbec1618 <line:703:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x558ccbec1690 <line:704:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x558ccbec1710 <line:705:1, col:5> col:5 used x 'int'
|-VarDecl 0x558ccbec1790 prev 0x558ccbec1710 <line:706:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x558ccbec17f8 <col:9> 'int' 0
|-VarDecl 0x558ccbec1830 <line:707:1, col:5> col:5 used y 'int'
|-VarDecl 0x558ccbec18b0 prev 0x558ccbec1830 <line:708:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x558ccbec1918 <col:9> 'int' 0
|-VarDecl 0x558ccbec1950 <line:709:1, col:5> col:5 used z 'int'
|-VarDecl 0x558ccbec19d0 prev 0x558ccbec1950 <line:710:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x558ccbec1a38 <col:9> 'int' 0
|-VarDecl 0x558ccbec1a68 <line:711:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x558ccbec1ae0 <line:712:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x558ccbec1bf8 prev 0x558ccbebff60 <line:713:1, line:747:1> line:713:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x558ccbec1b60 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x558ccbec3678 <line:714:1, line:747:1>
|   |-CallExpr 0x558ccbec1d08 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558ccbec1cf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec1ca0 <col:3> 'void ()' Function 0x558ccbe67350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558ccbec1d80 <line:716:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x558ccbec1d28 <col:3> 'int' lvalue Var 0x558ccbec1528 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x558ccbec1d68 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558ccbec1d48 <col:15> 'int' lvalue Var 0x558ccbec1430 'a$w_buff0' 'int'
|   |-BinaryOperator 0x558ccbec1de0 <line:717:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x558ccbec1da0 <col:3> 'int' lvalue Var 0x558ccbec1430 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x558ccbec1dc0 <col:15> 'int' 1
|   |-BinaryOperator 0x558ccbec1e58 <line:718:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558ccbec1e00 <col:3> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558ccbec1e40 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558ccbec1e20 <col:20> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558ccbec1ef0 <line:719:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x558ccbec1e78 <col:3> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x558ccbec1ec8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x558ccbec1e98 <col:27> 'int' 1
|   |-CallExpr 0x558ccbec2088 <line:720:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x558ccbec2070 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x558ccbec1f10 <col:3> 'void (int)' Function 0x558ccbe670d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x558ccbec2020 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x558ccbec2000 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x558ccbec1fe0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x558ccbec1f98 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x558ccbec1f80 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x558ccbec1f30 <col:23> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x558ccbec1fc8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x558ccbec1fb0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x558ccbec1f50 <col:41> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558ccbec2108 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558ccbec20b0 <col:3> '_Bool' lvalue Var 0x558ccbec1150 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x558ccbec20f0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558ccbec20d0 <col:20> '_Bool' lvalue Var 0x558ccbec0f70 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x558ccbec2180 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558ccbec2128 <col:3> '_Bool' lvalue Var 0x558ccbec11c8 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x558ccbec2168 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558ccbec2148 <col:20> '_Bool' lvalue Var 0x558ccbec0fe8 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x558ccbec21f8 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558ccbec21a0 <col:3> '_Bool' lvalue Var 0x558ccbec1240 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x558ccbec21e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558ccbec21c0 <col:20> '_Bool' lvalue Var 0x558ccbec1060 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x558ccbec2270 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558ccbec2218 <col:3> '_Bool' lvalue Var 0x558ccbec12b8 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x558ccbec2258 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558ccbec2238 <col:20> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x558ccbec2308 <line:725:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x558ccbec2290 <col:3> '_Bool' lvalue Var 0x558ccbec0fe8 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x558ccbec22e0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x558ccbec22b0 <col:27> 'int' 1
|   |-CallExpr 0x558ccbec2360 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558ccbec2348 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec2328 <col:3> 'void ()' Function 0x558ccbe67410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558ccbec23b8 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558ccbec23a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec2380 <col:3> 'void ()' Function 0x558ccbe67350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558ccbec2418 <line:728:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x558ccbec23d8 <col:3> 'int' lvalue Var 0x558ccbec1790 'x' 'int'
|   | `-IntegerLiteral 0x558ccbec23f8 <col:7> 'int' 1
|   |-CallExpr 0x558ccbec2470 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558ccbec2458 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec2438 <col:3> 'void ()' Function 0x558ccbe67410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558ccbec24c8 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558ccbec24b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec2490 <col:3> 'void ()' Function 0x558ccbe67350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558ccbec2540 <line:731:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x558ccbec24e8 <col:3> 'int' lvalue Var 0x558ccbec06b0 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x558ccbec2528 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558ccbec2508 <col:25> 'int' lvalue Var 0x558ccbec1790 'x' 'int'
|   |-CallExpr 0x558ccbec2598 <line:732:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558ccbec2580 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec2560 <col:3> 'void ()' Function 0x558ccbe67410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558ccbec25f0 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558ccbec25d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec25b8 <col:3> 'void ()' Function 0x558ccbe67350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558ccbec2668 <line:734:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x558ccbec2610 <col:3> 'int' lvalue Var 0x558ccbec07d0 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x558ccbec2650 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558ccbec2630 <col:25> 'int' lvalue Var 0x558ccbec18b0 'y' 'int'
|   |-CallExpr 0x558ccbec26c0 <line:735:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558ccbec26a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec2688 <col:3> 'void ()' Function 0x558ccbe67410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558ccbec2718 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558ccbec2700 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec26e0 <col:3> 'void ()' Function 0x558ccbe67350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558ccbec2a00 <line:737:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x558ccbec2738 <col:3> 'int' lvalue Var 0x558ccbec0d70 'a' 'int'
|   | `-ConditionalOperator 0x558ccbec29d0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x558ccbec27f8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x558ccbec27b0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x558ccbec2798 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x558ccbec2758 <col:7> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x558ccbec27e0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x558ccbec27c8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x558ccbec2778 <col:25> '_Bool' lvalue Var 0x558ccbec0fe8 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x558ccbec29b8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558ccbec2818 <col:42> 'int' lvalue Var 0x558ccbec1430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x558ccbec2998 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x558ccbec2968 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x558ccbec28d8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558ccbec2890 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558ccbec2878 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558ccbec2838 <col:55> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558ccbec28c0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558ccbec28a8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558ccbec2858 <col:73> '_Bool' lvalue Var 0x558ccbec11c8 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x558ccbec2938 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558ccbec28f8 <col:90> 'int' lvalue Var 0x558ccbec1528 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x558ccbec2950 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558ccbec2918 <col:102> 'int' lvalue Var 0x558ccbec0d70 'a' 'int'
|   |-BinaryOperator 0x558ccbec2c08 <line:738:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558ccbec2a20 <col:3> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558ccbec2bf0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558ccbec2bc0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558ccbec2ae0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558ccbec2a98 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558ccbec2a80 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558ccbec2a40 <col:20> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558ccbec2ac8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558ccbec2ab0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558ccbec2a60 <col:38> '_Bool' lvalue Var 0x558ccbec0fe8 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x558ccbec2b78 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558ccbec2b30 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558ccbec2b00 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558ccbec2ba8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558ccbec2b90 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558ccbec2b58 <col:66> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558ccbec2ef0 <line:739:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558ccbec2c28 <col:3> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558ccbec2ed8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558ccbec2ea8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558ccbec2dc8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558ccbec2ce8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558ccbec2ca0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558ccbec2c88 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558ccbec2c48 <col:20> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558ccbec2cd0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558ccbec2cb8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558ccbec2c68 <col:38> '_Bool' lvalue Var 0x558ccbec0fe8 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x558ccbec2da8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558ccbec2d60 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558ccbec2d48 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558ccbec2d08 <col:56> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558ccbec2d90 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558ccbec2d78 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558ccbec2d28 <col:74> '_Bool' lvalue Var 0x558ccbec11c8 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x558ccbec2e60 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558ccbec2e18 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558ccbec2de8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558ccbec2e90 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558ccbec2e78 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558ccbec2e40 <col:102> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x558ccbec3118 <line:740:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558ccbec2f10 <col:3> '_Bool' lvalue Var 0x558ccbec0fe8 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x558ccbec3100 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558ccbec30d0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558ccbec2ff0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558ccbec2fa8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558ccbec2f90 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558ccbec2f30 <col:20> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558ccbec2fd8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558ccbec2fc0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558ccbec2f50 <col:38> '_Bool' lvalue Var 0x558ccbec0fe8 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x558ccbec3088 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558ccbec3040 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558ccbec3010 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558ccbec30b8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558ccbec30a0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558ccbec3068 <col:66> '_Bool' lvalue Var 0x558ccbec0fe8 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x558ccbec3400 <line:741:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558ccbec3138 <col:3> '_Bool' lvalue Var 0x558ccbec11c8 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x558ccbec33e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558ccbec33b8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558ccbec32d8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558ccbec31f8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558ccbec31b0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558ccbec3198 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558ccbec3158 <col:20> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558ccbec31e0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558ccbec31c8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558ccbec3178 <col:38> '_Bool' lvalue Var 0x558ccbec0fe8 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x558ccbec32b8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558ccbec3270 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558ccbec3258 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558ccbec3218 <col:56> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558ccbec32a0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558ccbec3288 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558ccbec3238 <col:74> '_Bool' lvalue Var 0x558ccbec11c8 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x558ccbec3370 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558ccbec3328 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558ccbec32f8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558ccbec33a0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558ccbec3388 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558ccbec3350 <col:102> '_Bool' lvalue Var 0x558ccbec11c8 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x558ccbec3458 <line:742:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558ccbec3440 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec3420 <col:3> 'void ()' Function 0x558ccbe67410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558ccbec34b0 <line:743:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558ccbec3498 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec3478 <col:3> 'void ()' Function 0x558ccbe67350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558ccbec3568 <line:744:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x558ccbec34d0 <col:3> 'int' lvalue Var 0x558ccbec0590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x558ccbec3548 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x558ccbec3530 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558ccbec34f0 <col:22> 'int' lvalue Var 0x558ccbec0590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x558ccbec3510 <col:41> 'int' 1
|   |-CallExpr 0x558ccbec35c0 <line:745:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558ccbec35a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec3588 <col:3> 'void ()' Function 0x558ccbe67410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x558ccbec3668 <line:746:3, col:36>
|     `-CallExpr 0x558ccbec3648 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x558ccbec3630 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x558ccbec35e0 <col:10> 'void *(void)' Function 0x558ccbe66e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x558ccbec3838 prev 0x558ccbec00b8 <line:748:1, line:770:1> line:748:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x558ccbec37a0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x558ccbec4ba8 <line:749:1, line:770:1>
|   |-CallExpr 0x558ccbec3918 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558ccbec3900 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec38e0 <col:3> 'void ()' Function 0x558ccbe67350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558ccbec3978 <line:751:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x558ccbec3938 <col:3> 'int' lvalue Var 0x558ccbec18b0 'y' 'int'
|   | `-IntegerLiteral 0x558ccbec3958 <col:7> 'int' 1
|   |-CallExpr 0x558ccbec39d0 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558ccbec39b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec3998 <col:3> 'void ()' Function 0x558ccbe67410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558ccbec3a28 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558ccbec3a10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec39f0 <col:3> 'void ()' Function 0x558ccbe67350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558ccbec3aa0 <line:754:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x558ccbec3a48 <col:3> 'int' lvalue Var 0x558ccbec08f0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x558ccbec3a88 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558ccbec3a68 <col:25> 'int' lvalue Var 0x558ccbec18b0 'y' 'int'
|   |-CallExpr 0x558ccbec3af8 <line:755:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558ccbec3ae0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec3ac0 <col:3> 'void ()' Function 0x558ccbe67410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558ccbec3b50 <line:756:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558ccbec3b38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec3b18 <col:3> 'void ()' Function 0x558ccbe67350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558ccbec3bc8 <line:757:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x558ccbec3b70 <col:3> 'int' lvalue Var 0x558ccbec0a10 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x558ccbec3bb0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558ccbec3b90 <col:25> 'int' lvalue Var 0x558ccbec19d0 'z' 'int'
|   |-CallExpr 0x558ccbec3c20 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558ccbec3c08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec3be8 <col:3> 'void ()' Function 0x558ccbe67410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558ccbec3c78 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558ccbec3c60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec3c40 <col:3> 'void ()' Function 0x558ccbe67350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558ccbec3f60 <line:760:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x558ccbec3c98 <col:3> 'int' lvalue Var 0x558ccbec0d70 'a' 'int'
|   | `-ConditionalOperator 0x558ccbec3f30 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x558ccbec3d58 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x558ccbec3d10 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x558ccbec3cf8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x558ccbec3cb8 <col:7> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x558ccbec3d40 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x558ccbec3d28 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x558ccbec3cd8 <col:25> '_Bool' lvalue Var 0x558ccbec1060 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x558ccbec3f18 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558ccbec3d78 <col:42> 'int' lvalue Var 0x558ccbec1430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x558ccbec3ef8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x558ccbec3ec8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x558ccbec3e38 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558ccbec3df0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558ccbec3dd8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558ccbec3d98 <col:55> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558ccbec3e20 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558ccbec3e08 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558ccbec3db8 <col:73> '_Bool' lvalue Var 0x558ccbec1240 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x558ccbec3e98 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558ccbec3e58 <col:90> 'int' lvalue Var 0x558ccbec1528 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x558ccbec3eb0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558ccbec3e78 <col:102> 'int' lvalue Var 0x558ccbec0d70 'a' 'int'
|   |-BinaryOperator 0x558ccbec4188 <line:761:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558ccbec3fa0 <col:3> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558ccbec4170 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558ccbec4140 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558ccbec4060 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558ccbec4018 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558ccbec4000 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558ccbec3fc0 <col:20> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558ccbec4048 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558ccbec4030 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558ccbec3fe0 <col:38> '_Bool' lvalue Var 0x558ccbec1060 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558ccbec40f8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558ccbec40b0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558ccbec4080 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558ccbec4128 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558ccbec4110 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558ccbec40d8 <col:66> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558ccbec4470 <line:762:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558ccbec41a8 <col:3> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558ccbec4458 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558ccbec4428 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558ccbec4348 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558ccbec4268 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558ccbec4220 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558ccbec4208 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558ccbec41c8 <col:20> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558ccbec4250 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558ccbec4238 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558ccbec41e8 <col:38> '_Bool' lvalue Var 0x558ccbec1060 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x558ccbec4328 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558ccbec42e0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558ccbec42c8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558ccbec4288 <col:56> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558ccbec4310 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558ccbec42f8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558ccbec42a8 <col:74> '_Bool' lvalue Var 0x558ccbec1240 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558ccbec43e0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558ccbec4398 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558ccbec4368 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558ccbec4410 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558ccbec43f8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558ccbec43c0 <col:102> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x558ccbec4678 <line:763:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558ccbec4490 <col:3> '_Bool' lvalue Var 0x558ccbec1060 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x558ccbec4660 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558ccbec4630 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558ccbec4550 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558ccbec4508 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558ccbec44f0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558ccbec44b0 <col:20> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558ccbec4538 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558ccbec4520 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558ccbec44d0 <col:38> '_Bool' lvalue Var 0x558ccbec1060 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558ccbec45e8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558ccbec45a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558ccbec4570 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558ccbec4618 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558ccbec4600 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558ccbec45c8 <col:66> '_Bool' lvalue Var 0x558ccbec1060 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x558ccbec4960 <line:764:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558ccbec4698 <col:3> '_Bool' lvalue Var 0x558ccbec1240 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x558ccbec4948 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558ccbec4918 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558ccbec4838 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558ccbec4758 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558ccbec4710 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558ccbec46f8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558ccbec46b8 <col:20> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558ccbec4740 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558ccbec4728 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558ccbec46d8 <col:38> '_Bool' lvalue Var 0x558ccbec1060 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x558ccbec4818 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558ccbec47d0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558ccbec47b8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558ccbec4778 <col:56> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558ccbec4800 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558ccbec47e8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558ccbec4798 <col:74> '_Bool' lvalue Var 0x558ccbec1240 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558ccbec48d0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558ccbec4888 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558ccbec4858 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558ccbec4900 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558ccbec48e8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558ccbec48b0 <col:102> '_Bool' lvalue Var 0x558ccbec1240 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x558ccbec49b8 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558ccbec49a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec4980 <col:3> 'void ()' Function 0x558ccbe67410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558ccbec4a10 <line:766:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558ccbec49f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec49d8 <col:3> 'void ()' Function 0x558ccbe67350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558ccbec4ac8 <line:767:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x558ccbec4a30 <col:3> 'int' lvalue Var 0x558ccbec0590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x558ccbec4aa8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x558ccbec4a90 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558ccbec4a50 <col:22> 'int' lvalue Var 0x558ccbec0590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x558ccbec4a70 <col:41> 'int' 1
|   |-CallExpr 0x558ccbec4b20 <line:768:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558ccbec4b08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec4ae8 <col:3> 'void ()' Function 0x558ccbe67410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x558ccbec4b98 <line:769:3, col:36>
|     `-CallExpr 0x558ccbec4b78 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x558ccbec4b60 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x558ccbec4b40 <col:10> 'void *(void)' Function 0x558ccbe66e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x558ccbec4d08 prev 0x558ccbec0210 <line:771:1, line:806:1> line:771:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x558ccbec4c70 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x558ccbec8a18 <line:772:1, line:806:1>
|   |-CallExpr 0x558ccbec4de8 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558ccbec4dd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec4db0 <col:3> 'void ()' Function 0x558ccbe67350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558ccbec4e48 <line:774:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x558ccbec4e08 <col:3> 'int' lvalue Var 0x558ccbec19d0 'z' 'int'
|   | `-IntegerLiteral 0x558ccbec4e28 <col:7> 'int' 1
|   |-CallExpr 0x558ccbec4ea0 <line:775:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558ccbec4e88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec4e68 <col:3> 'void ()' Function 0x558ccbe67410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558ccbec4ef8 <line:776:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558ccbec4ee0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec4ec0 <col:3> 'void ()' Function 0x558ccbe67350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558ccbec4f70 <line:777:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x558ccbec4f18 <col:3> 'int' lvalue Var 0x558ccbec0b30 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x558ccbec4f58 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558ccbec4f38 <col:25> 'int' lvalue Var 0x558ccbec19d0 'z' 'int'
|   |-CallExpr 0x558ccbec4fe8 <line:778:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558ccbec4fd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec4fb0 <col:3> 'void ()' Function 0x558ccbe67410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558ccbec5040 <line:779:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558ccbec5028 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec5008 <col:3> 'void ()' Function 0x558ccbe67350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558ccbec50f0 <line:780:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x558ccbec5060 <col:3> '_Bool' lvalue Var 0x558ccbec1a68 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x558ccbec50d8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x558ccbec50b8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x558ccbec50a0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x558ccbec5080 <col:19> 'void *(void)' Function 0x558ccbe66e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x558ccbec51a0 <line:781:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x558ccbec5110 <col:3> '_Bool' lvalue Var 0x558ccbec1ae0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x558ccbec5188 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x558ccbec5168 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x558ccbec5150 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x558ccbec5130 <col:19> 'void *(void)' Function 0x558ccbe66e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x558ccbec5218 <line:782:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x558ccbec51c0 <col:3> '_Bool' lvalue Var 0x558ccbec0e08 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x558ccbec5200 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558ccbec51e0 <col:21> '_Bool' lvalue Var 0x558ccbec1ae0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x558ccbec5290 <line:783:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x558ccbec5238 <col:3> 'int' lvalue Var 0x558ccbec0e88 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x558ccbec5278 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558ccbec5258 <col:15> 'int' lvalue Var 0x558ccbec0d70 'a' 'int'
|   |-BinaryOperator 0x558ccbec56c8 <line:784:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x558ccbec52b0 <col:3> 'int' lvalue Var 0x558ccbec0d70 'a' 'int'
|   | `-ConditionalOperator 0x558ccbec5698 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x558ccbec54c0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x558ccbec53e0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x558ccbec5308 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x558ccbec52f0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x558ccbec52d0 <col:8> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x558ccbec53c0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x558ccbec5358 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x558ccbec5340 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x558ccbec5320 <col:27> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x558ccbec53a8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x558ccbec5390 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x558ccbec5370 <col:46> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x558ccbec54a0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x558ccbec5438 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x558ccbec5420 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x558ccbec5400 <col:65> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x558ccbec5488 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x558ccbec5470 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x558ccbec5450 <col:84> '_Bool' lvalue Var 0x558ccbec12b8 'a$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x558ccbec5680 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558ccbec54e0 <col:101> 'int' lvalue Var 0x558ccbec0d70 'a' 'int'
|   |   `-ParenExpr 0x558ccbec5660 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x558ccbec5630 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x558ccbec55a0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558ccbec5558 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558ccbec5540 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558ccbec5500 <col:106> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558ccbec5588 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558ccbec5570 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558ccbec5520 <col:124> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x558ccbec5600 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558ccbec55c0 <col:141> 'int' lvalue Var 0x558ccbec1430 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x558ccbec5618 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558ccbec55e0 <col:153> 'int' lvalue Var 0x558ccbec1528 'a$w_buff1' 'int'
|   |-BinaryOperator 0x558ccbec5bd8 <line:785:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x558ccbec56e8 <col:3> 'int' lvalue Var 0x558ccbec1430 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x558ccbec5ba8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x558ccbec5b78 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x558ccbec5b60 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x558ccbec5708 <col:15> '_Bool' lvalue Var 0x558ccbec1ae0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x558ccbec5b90 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558ccbec5728 <col:31> 'int' lvalue Var 0x558ccbec1430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x558ccbec5b40 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x558ccbec5b10 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x558ccbec5938 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x558ccbec5858 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x558ccbec5780 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x558ccbec5768 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x558ccbec5748 <col:45> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x558ccbec5838 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x558ccbec57d0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x558ccbec57b8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x558ccbec5798 <col:64> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x558ccbec5820 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x558ccbec5808 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x558ccbec57e8 <col:83> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x558ccbec5918 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x558ccbec58b0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x558ccbec5898 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x558ccbec5878 <col:102> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x558ccbec5900 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x558ccbec58e8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x558ccbec58c8 <col:121> '_Bool' lvalue Var 0x558ccbec12b8 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x558ccbec5af8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558ccbec5958 <col:138> 'int' lvalue Var 0x558ccbec1430 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x558ccbec5ad8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x558ccbec5aa8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x558ccbec5a18 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x558ccbec59d0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x558ccbec59b8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x558ccbec5978 <col:151> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x558ccbec5a00 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x558ccbec59e8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x558ccbec5998 <col:169> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x558ccbec5a78 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x558ccbec5a38 <col:186> 'int' lvalue Var 0x558ccbec1430 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x558ccbec5a90 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x558ccbec5a58 <col:198> 'int' lvalue Var 0x558ccbec1430 'a$w_buff0' 'int'
|   |-BinaryOperator 0x558ccbec6108 <line:786:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x558ccbec5bf8 <col:3> 'int' lvalue Var 0x558ccbec1528 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x558ccbec60d8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x558ccbec60a8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x558ccbec6090 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x558ccbec5c18 <col:15> '_Bool' lvalue Var 0x558ccbec1ae0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x558ccbec60c0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558ccbec5c38 <col:31> 'int' lvalue Var 0x558ccbec1528 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x558ccbec6070 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x558ccbec6040 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x558ccbec5e48 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x558ccbec5d68 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x558ccbec5c90 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x558ccbec5c78 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x558ccbec5c58 <col:45> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x558ccbec5d48 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x558ccbec5ce0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x558ccbec5cc8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x558ccbec5ca8 <col:64> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x558ccbec5d30 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x558ccbec5d18 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x558ccbec5cf8 <col:83> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x558ccbec5e28 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x558ccbec5dc0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x558ccbec5da8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x558ccbec5d88 <col:102> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x558ccbec5e10 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x558ccbec5df8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x558ccbec5dd8 <col:121> '_Bool' lvalue Var 0x558ccbec12b8 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x558ccbec6028 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558ccbec5e68 <col:138> 'int' lvalue Var 0x558ccbec1528 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x558ccbec6008 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x558ccbec5fd8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x558ccbec5f28 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x558ccbec5ee0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x558ccbec5ec8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x558ccbec5e88 <col:151> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x558ccbec5f10 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x558ccbec5ef8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x558ccbec5ea8 <col:169> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x558ccbec5f88 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x558ccbec5f48 <col:186> 'int' lvalue Var 0x558ccbec1528 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x558ccbec5fc0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x558ccbec5f68 <col:198> 'int' lvalue Var 0x558ccbec1528 'a$w_buff1' 'int'
|   |-BinaryOperator 0x558ccbec66b0 <line:787:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x558ccbec6128 <col:3> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558ccbec6698 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558ccbec6668 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x558ccbec6620 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558ccbec6608 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558ccbec6148 <col:20> '_Bool' lvalue Var 0x558ccbec1ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x558ccbec6650 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558ccbec6638 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558ccbec6168 <col:36> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x558ccbec65e8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x558ccbec65b8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x558ccbec6378 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x558ccbec6298 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x558ccbec61c0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x558ccbec61a8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x558ccbec6188 <col:55> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x558ccbec6278 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x558ccbec6210 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x558ccbec61f8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x558ccbec61d8 <col:74> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x558ccbec6260 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x558ccbec6248 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x558ccbec6228 <col:93> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x558ccbec6358 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x558ccbec62f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x558ccbec62d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x558ccbec62b8 <col:112> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x558ccbec6340 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x558ccbec6328 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x558ccbec6308 <col:131> '_Bool' lvalue Var 0x558ccbec12b8 'a$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x558ccbec65a0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x558ccbec6588 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558ccbec6398 <col:148> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x558ccbec6568 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x558ccbec6538 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x558ccbec6458 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x558ccbec6410 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x558ccbec63f8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558ccbec63b8 <col:166> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x558ccbec6440 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x558ccbec6428 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x558ccbec63d8 <col:184> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x558ccbec64f0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x558ccbec64a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x558ccbec6478 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x558ccbec6520 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x558ccbec6508 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x558ccbec64d0 <col:212> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558ccbec6c78 <line:788:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x558ccbec66d0 <col:3> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558ccbec6c60 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558ccbec6c30 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x558ccbec6be8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558ccbec6bd0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558ccbec66f0 <col:20> '_Bool' lvalue Var 0x558ccbec1ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x558ccbec6c18 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558ccbec6c00 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558ccbec6710 <col:36> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x558ccbec6bb0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x558ccbec6b80 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x558ccbec6920 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x558ccbec6840 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x558ccbec6768 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x558ccbec6750 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x558ccbec6730 <col:55> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x558ccbec6820 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x558ccbec67b8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x558ccbec67a0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x558ccbec6780 <col:74> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x558ccbec6808 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x558ccbec67f0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x558ccbec67d0 <col:93> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x558ccbec6900 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x558ccbec6898 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x558ccbec6880 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x558ccbec6860 <col:112> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x558ccbec68e8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x558ccbec68d0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x558ccbec68b0 <col:131> '_Bool' lvalue Var 0x558ccbec12b8 'a$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x558ccbec6b68 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x558ccbec6b50 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558ccbec6940 <col:148> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x558ccbec6b30 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x558ccbec6b00 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x558ccbec6a00 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x558ccbec69b8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x558ccbec69a0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558ccbec6960 <col:166> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x558ccbec69e8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x558ccbec69d0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x558ccbec6980 <col:184> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x558ccbec6ad0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x558ccbec6a50 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x558ccbec6a20 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x558ccbec6ae8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x558ccbec6aa8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x558ccbec6a78 <col:219> 'int' 0
|   |-BinaryOperator 0x558ccbec7240 <line:789:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x558ccbec6c98 <col:3> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x558ccbec7228 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558ccbec71f8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x558ccbec71b0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558ccbec7198 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558ccbec6cb8 <col:20> '_Bool' lvalue Var 0x558ccbec1ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x558ccbec71e0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558ccbec71c8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558ccbec6cd8 <col:36> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x558ccbec7178 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x558ccbec7148 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x558ccbec6ee8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x558ccbec6e08 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x558ccbec6d30 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x558ccbec6d18 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x558ccbec6cf8 <col:55> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x558ccbec6de8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x558ccbec6d80 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x558ccbec6d68 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x558ccbec6d48 <col:74> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x558ccbec6dd0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x558ccbec6db8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x558ccbec6d98 <col:93> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x558ccbec6ec8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x558ccbec6e60 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x558ccbec6e48 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x558ccbec6e28 <col:112> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x558ccbec6eb0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x558ccbec6e98 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x558ccbec6e78 <col:131> '_Bool' lvalue Var 0x558ccbec12b8 'a$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x558ccbec7130 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x558ccbec7118 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558ccbec6f08 <col:148> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x558ccbec70f8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x558ccbec70c8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x558ccbec6fe8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x558ccbec6f80 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x558ccbec6f68 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558ccbec6f28 <col:166> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x558ccbec6fd0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x558ccbec6f98 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x558ccbec6f48 <col:184> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x558ccbec7080 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x558ccbec7038 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x558ccbec7008 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x558ccbec70b0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x558ccbec7098 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x558ccbec7060 <col:212> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x558ccbec7808 <line:790:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x558ccbec7260 <col:3> '_Bool' lvalue Var 0x558ccbec12b8 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x558ccbec77f0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558ccbec77c0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x558ccbec7778 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558ccbec7760 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558ccbec7280 <col:20> '_Bool' lvalue Var 0x558ccbec1ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x558ccbec77a8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558ccbec7790 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558ccbec72a0 <col:36> '_Bool' lvalue Var 0x558ccbec12b8 'a$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x558ccbec7740 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x558ccbec7710 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x558ccbec74b0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x558ccbec73d0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x558ccbec72f8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x558ccbec72e0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x558ccbec72c0 <col:55> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x558ccbec73b0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x558ccbec7348 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x558ccbec7330 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x558ccbec7310 <col:74> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x558ccbec7398 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x558ccbec7380 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x558ccbec7360 <col:93> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x558ccbec7490 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x558ccbec7428 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x558ccbec7410 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x558ccbec73f0 <col:112> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x558ccbec7478 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x558ccbec7460 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x558ccbec7440 <col:131> '_Bool' lvalue Var 0x558ccbec12b8 'a$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x558ccbec76f8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x558ccbec76e0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558ccbec74d0 <col:148> '_Bool' lvalue Var 0x558ccbec12b8 'a$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x558ccbec76c0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x558ccbec7690 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x558ccbec7590 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x558ccbec7548 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x558ccbec7530 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558ccbec74f0 <col:166> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x558ccbec7578 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x558ccbec7560 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x558ccbec7510 <col:184> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x558ccbec7660 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x558ccbec75e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x558ccbec75b0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x558ccbec7678 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x558ccbec7638 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x558ccbec7608 <col:219> 'int' 0
|   |-BinaryOperator 0x558ccbec7880 <line:791:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x558ccbec7828 <col:3> 'int' lvalue Var 0x558ccbec0c50 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x558ccbec7868 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558ccbec7848 <col:25> 'int' lvalue Var 0x558ccbec0d70 'a' 'int'
|   |-BinaryOperator 0x558ccbec79b0 <line:792:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x558ccbec78a0 <col:3> 'int' lvalue Var 0x558ccbec0d70 'a' 'int'
|   | `-ConditionalOperator 0x558ccbec7980 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x558ccbec7938 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x558ccbec7920 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x558ccbec78c0 <col:7> '_Bool' lvalue Var 0x558ccbec0e08 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x558ccbec7950 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558ccbec78e0 <col:25> 'int' lvalue Var 0x558ccbec0e88 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x558ccbec7968 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x558ccbec7900 <col:37> 'int' lvalue Var 0x558ccbec0d70 'a' 'int'
|   |-BinaryOperator 0x558ccbec7a48 <line:793:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x558ccbec79d0 <col:3> '_Bool' lvalue Var 0x558ccbec0e08 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x558ccbec7a20 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x558ccbec79f0 <col:28> 'int' 0
|   |-CallExpr 0x558ccbec7aa0 <line:794:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558ccbec7a88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec7a68 <col:3> 'void ()' Function 0x558ccbe67410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558ccbec7af8 <line:795:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558ccbec7ae0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec7ac0 <col:3> 'void ()' Function 0x558ccbe67350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558ccbec7de0 <line:796:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x558ccbec7b18 <col:3> 'int' lvalue Var 0x558ccbec0d70 'a' 'int'
|   | `-ConditionalOperator 0x558ccbec7db0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x558ccbec7bd8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x558ccbec7b90 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x558ccbec7b78 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x558ccbec7b38 <col:7> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x558ccbec7bc0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x558ccbec7ba8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x558ccbec7b58 <col:25> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x558ccbec7d98 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558ccbec7bf8 <col:42> 'int' lvalue Var 0x558ccbec1430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x558ccbec7d78 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x558ccbec7d48 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x558ccbec7cb8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558ccbec7c70 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558ccbec7c58 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558ccbec7c18 <col:55> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558ccbec7ca0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558ccbec7c88 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558ccbec7c38 <col:73> '_Bool' lvalue Var 0x558ccbec12b8 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x558ccbec7d18 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558ccbec7cd8 <col:90> 'int' lvalue Var 0x558ccbec1528 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x558ccbec7d30 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558ccbec7cf8 <col:102> 'int' lvalue Var 0x558ccbec0d70 'a' 'int'
|   |-BinaryOperator 0x558ccbec7ff8 <line:797:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558ccbec7e00 <col:3> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558ccbec7fe0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558ccbec7fa0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558ccbec7ec0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558ccbec7e78 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558ccbec7e60 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558ccbec7e20 <col:20> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558ccbec7ea8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558ccbec7e90 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558ccbec7e40 <col:38> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558ccbec7f58 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558ccbec7f10 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558ccbec7ee0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558ccbec7f88 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558ccbec7f70 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558ccbec7f38 <col:66> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558ccbec82e0 <line:798:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558ccbec8018 <col:3> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558ccbec82c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558ccbec8298 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558ccbec81b8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558ccbec80d8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558ccbec8090 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558ccbec8078 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558ccbec8038 <col:20> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558ccbec80c0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558ccbec80a8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558ccbec8058 <col:38> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x558ccbec8198 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558ccbec8150 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558ccbec8138 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558ccbec80f8 <col:56> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558ccbec8180 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558ccbec8168 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558ccbec8118 <col:74> '_Bool' lvalue Var 0x558ccbec12b8 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558ccbec8250 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558ccbec8208 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558ccbec81d8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558ccbec8280 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558ccbec8268 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558ccbec8230 <col:102> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x558ccbec84e8 <line:799:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558ccbec8300 <col:3> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x558ccbec84d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558ccbec84a0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558ccbec83c0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558ccbec8378 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558ccbec8360 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558ccbec8320 <col:20> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558ccbec83a8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558ccbec8390 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558ccbec8340 <col:38> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558ccbec8458 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558ccbec8410 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558ccbec83e0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558ccbec8488 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558ccbec8470 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558ccbec8438 <col:66> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x558ccbec87d0 <line:800:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558ccbec8508 <col:3> '_Bool' lvalue Var 0x558ccbec12b8 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x558ccbec87b8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558ccbec8788 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558ccbec86a8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558ccbec85c8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558ccbec8580 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558ccbec8568 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558ccbec8528 <col:20> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558ccbec85b0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558ccbec8598 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558ccbec8548 <col:38> '_Bool' lvalue Var 0x558ccbec10d8 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x558ccbec8688 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558ccbec8640 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558ccbec8628 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558ccbec85e8 <col:56> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558ccbec8670 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558ccbec8658 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558ccbec8608 <col:74> '_Bool' lvalue Var 0x558ccbec12b8 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558ccbec8740 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558ccbec86f8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558ccbec86c8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558ccbec8770 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558ccbec8758 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558ccbec8720 <col:102> '_Bool' lvalue Var 0x558ccbec12b8 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x558ccbec8828 <line:801:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558ccbec8810 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec87f0 <col:3> 'void ()' Function 0x558ccbe67410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558ccbec8880 <line:802:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558ccbec8868 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec8848 <col:3> 'void ()' Function 0x558ccbe67350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558ccbec8938 <line:803:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x558ccbec88a0 <col:3> 'int' lvalue Var 0x558ccbec0590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x558ccbec8918 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x558ccbec8900 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558ccbec88c0 <col:22> 'int' lvalue Var 0x558ccbec0590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x558ccbec88e0 <col:41> 'int' 1
|   |-CallExpr 0x558ccbec8990 <line:804:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558ccbec8978 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558ccbec8958 <col:3> 'void ()' Function 0x558ccbe67410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x558ccbec8a08 <line:805:3, col:36>
|     `-CallExpr 0x558ccbec89e8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x558ccbec89d0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x558ccbec89b0 <col:10> 'void *(void)' Function 0x558ccbe66e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x558ccbec8b50 prev 0x558ccbec02d8 <line:807:1, line:809:1> line:807:6 fence 'void ()'
| `-CompoundStmt 0x558ccbec8bf0 <line:808:1, line:809:1>
|-FunctionDecl 0x558ccbec8c20 prev 0x558ccbec0398 <line:810:1, line:812:1> line:810:6 isync 'void ()'
| `-CompoundStmt 0x558ccbec8cc0 <line:811:1, line:812:1>
|-FunctionDecl 0x558ccbec8cf0 prev 0x558ccbec0458 <line:813:1, line:815:1> line:813:6 lwfence 'void ()'
| `-CompoundStmt 0x558ccbec8d90 <line:814:1, line:815:1>
`-FunctionDecl 0x558ccbec8df8 <line:816:1, line:840:1> line:816:5 main 'int ()'
  `-CompoundStmt 0x558ccbecac00 <line:817:1, line:840:1>
    |-DeclStmt 0x558ccbec8f10 <line:818:3, col:16>
    | `-VarDecl 0x558ccbec8ea8 <col:3, col:13> col:13 used t46 'pthread_t':'unsigned long'
    |-CallExpr 0x558ccbec9128 <line:819:3, col:52> 'int'
    | |-ImplicitCastExpr 0x558ccbec9110 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558ccbec8f28 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x558ccbea78f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x558ccbec8f68 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x558ccbec8f48 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x558ccbec8ea8 't46' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x558ccbec9168 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x558ccbec8ff0 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x558ccbec8fb8 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x558ccbec8f80 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x558ccbec9180 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558ccbec9010 <col:37> 'void *(void *)' Function 0x558ccbec1bf8 'P0' 'void *(void *)'
    | `-ParenExpr 0x558ccbec9090 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x558ccbec9068 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x558ccbec9030 <col:50> 'int' 0
    |-DeclStmt 0x558ccbec9210 <line:820:3, col:16>
    | `-VarDecl 0x558ccbec91a8 <col:3, col:13> col:13 used t47 'pthread_t':'unsigned long'
    |-CallExpr 0x558ccbec93b8 <line:821:3, col:52> 'int'
    | |-ImplicitCastExpr 0x558ccbec93a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558ccbec9228 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x558ccbea78f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x558ccbec9268 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x558ccbec9248 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x558ccbec91a8 't47' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x558ccbec93f8 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x558ccbec92e0 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x558ccbec92b8 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x558ccbec9280 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x558ccbec9410 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558ccbec9300 <col:37> 'void *(void *)' Function 0x558ccbec3838 'P1' 'void *(void *)'
    | `-ParenExpr 0x558ccbec9380 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x558ccbec9358 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x558ccbec9320 <col:50> 'int' 0
    |-DeclStmt 0x558ccbec94a0 <line:822:3, col:16>
    | `-VarDecl 0x558ccbec9438 <col:3, col:13> col:13 used t48 'pthread_t':'unsigned long'
    |-CallExpr 0x558ccbec9648 <line:823:3, col:52> 'int'
    | |-ImplicitCastExpr 0x558ccbec9630 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558ccbec94b8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x558ccbea78f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x558ccbec94f8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x558ccbec94d8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x558ccbec9438 't48' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x558ccbec9688 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x558ccbec9570 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x558ccbec9548 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x558ccbec9510 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x558ccbec96a0 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558ccbec9590 <col:37> 'void *(void *)' Function 0x558ccbec4d08 'P2' 'void *(void *)'
    | `-ParenExpr 0x558ccbec9610 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x558ccbec95e8 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x558ccbec95b0 <col:50> 'int' 0
    |-CallExpr 0x558ccbec96f0 <line:824:3, col:27> 'void'
    | `-ImplicitCastExpr 0x558ccbec96d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558ccbec96b8 <col:3> 'void ()' Function 0x558ccbe67350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x558ccbec97c0 <line:825:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x558ccbec9710 <col:3> '_Bool' lvalue Var 0x558ccbec1618 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x558ccbec97a8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x558ccbec9788 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x558ccbec9770 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x558ccbec9730 <col:21> 'int' lvalue Var 0x558ccbec0590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x558ccbec9750 <col:41> 'int' 3
    |-CallExpr 0x558ccbec9818 <line:826:3, col:25> 'void'
    | `-ImplicitCastExpr 0x558ccbec9800 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558ccbec97e0 <col:3> 'void ()' Function 0x558ccbe67410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x558ccbec9890 <line:827:3, col:36> 'void'
    | |-ImplicitCastExpr 0x558ccbec9878 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558ccbec9838 <col:3> 'void (int)' Function 0x558ccbe66ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x558ccbec98d0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x558ccbec98b8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x558ccbec9858 <col:21> '_Bool' lvalue Var 0x558ccbec1618 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x558ccbec9920 <line:828:3, col:27> 'void'
    | `-ImplicitCastExpr 0x558ccbec9908 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558ccbec98e8 <col:3> 'void ()' Function 0x558ccbe67350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x558ccbec9c08 <line:829:3, col:103> 'int' '='
    | |-DeclRefExpr 0x558ccbec9940 <col:3> 'int' lvalue Var 0x558ccbec0d70 'a' 'int'
    | `-ConditionalOperator 0x558ccbec9bd8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x558ccbec9a00 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x558ccbec99b8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x558ccbec99a0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x558ccbec9960 <col:7> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x558ccbec99e8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x558ccbec99d0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x558ccbec9980 <col:25> '_Bool' lvalue Var 0x558ccbec0f70 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x558ccbec9bc0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x558ccbec9a20 <col:42> 'int' lvalue Var 0x558ccbec1430 'a$w_buff0' 'int'
    |   `-ParenExpr 0x558ccbec9ba0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x558ccbec9b70 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x558ccbec9ae0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x558ccbec9a98 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x558ccbec9a80 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x558ccbec9a40 <col:55> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x558ccbec9ac8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x558ccbec9ab0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x558ccbec9a60 <col:73> '_Bool' lvalue Var 0x558ccbec1150 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x558ccbec9b40 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x558ccbec9b00 <col:90> 'int' lvalue Var 0x558ccbec1528 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x558ccbec9b58 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x558ccbec9b20 <col:102> 'int' lvalue Var 0x558ccbec0d70 'a' 'int'
    |-BinaryOperator 0x558ccbec9e10 <line:830:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x558ccbec9c28 <col:3> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x558ccbec9df8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558ccbec9dc8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x558ccbec9ce8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x558ccbec9ca0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x558ccbec9c88 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x558ccbec9c48 <col:20> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x558ccbec9cd0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x558ccbec9cb8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x558ccbec9c68 <col:38> '_Bool' lvalue Var 0x558ccbec0f70 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558ccbec9d80 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558ccbec9d38 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558ccbec9d08 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x558ccbec9db0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558ccbec9d98 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558ccbec9d60 <col:66> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x558ccbeca108 <line:831:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x558ccbec9e30 <col:3> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x558ccbeca0f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558ccbeca0c0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x558ccbec9fd0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x558ccbec9ef0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x558ccbec9ea8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x558ccbec9e90 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x558ccbec9e50 <col:20> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x558ccbec9ed8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x558ccbec9ec0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x558ccbec9e70 <col:38> '_Bool' lvalue Var 0x558ccbec0f70 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x558ccbec9fb0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x558ccbec9f68 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x558ccbec9f50 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x558ccbec9f10 <col:56> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x558ccbec9f98 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x558ccbec9f80 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x558ccbec9f30 <col:74> '_Bool' lvalue Var 0x558ccbec1150 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558ccbeca078 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558ccbeca030 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558ccbeca000 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x558ccbeca0a8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558ccbeca090 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558ccbeca058 <col:102> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x558ccbeca310 <line:832:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x558ccbeca128 <col:3> '_Bool' lvalue Var 0x558ccbec0f70 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x558ccbeca2f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558ccbeca2c8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x558ccbeca1e8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x558ccbeca1a0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x558ccbeca188 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x558ccbeca148 <col:20> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x558ccbeca1d0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x558ccbeca1b8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x558ccbeca168 <col:38> '_Bool' lvalue Var 0x558ccbec0f70 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558ccbeca280 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558ccbeca238 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558ccbeca208 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x558ccbeca2b0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558ccbeca298 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558ccbeca260 <col:66> '_Bool' lvalue Var 0x558ccbec0f70 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x558ccbeca5f8 <line:833:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x558ccbeca330 <col:3> '_Bool' lvalue Var 0x558ccbec1150 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x558ccbeca5e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558ccbeca5b0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x558ccbeca4d0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x558ccbeca3f0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x558ccbeca3a8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x558ccbeca390 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x558ccbeca350 <col:20> '_Bool' lvalue Var 0x558ccbec14a8 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x558ccbeca3d8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x558ccbeca3c0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x558ccbeca370 <col:38> '_Bool' lvalue Var 0x558ccbec0f70 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x558ccbeca4b0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x558ccbeca468 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x558ccbeca450 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x558ccbeca410 <col:56> '_Bool' lvalue Var 0x558ccbec15a0 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x558ccbeca498 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x558ccbeca480 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x558ccbeca430 <col:74> '_Bool' lvalue Var 0x558ccbec1150 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558ccbeca568 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558ccbeca520 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558ccbeca4f0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x558ccbeca598 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558ccbeca580 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558ccbeca548 <col:102> '_Bool' lvalue Var 0x558ccbec1150 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x558ccbeca650 <line:834:3, col:25> 'void'
    | `-ImplicitCastExpr 0x558ccbeca638 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558ccbeca618 <col:3> 'void ()' Function 0x558ccbe67410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x558ccbeca6a8 <line:835:3, col:27> 'void'
    | `-ImplicitCastExpr 0x558ccbeca690 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558ccbeca670 <col:3> 'void ()' Function 0x558ccbe67350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x558ccbecaaa8 <line:836:3, col:187> '_Bool' '='
    | |-DeclRefExpr 0x558ccbeca6c8 <col:3> '_Bool' lvalue Var 0x558ccbec1690 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x558ccbecaa90 <col:21, col:187> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x558ccbecaa78 <col:21, col:187> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x558ccbecaa58 <col:22, col:187> 'int'
    |       `-BinaryOperator 0x558ccbecaa38 <col:23, col:186> 'int' '&&'
    |         |-BinaryOperator 0x558ccbeca9a0 <col:23, col:158> 'int' '&&'
    |         | |-BinaryOperator 0x558ccbeca908 <col:23, col:130> 'int' '&&'
    |         | | |-BinaryOperator 0x558ccbeca870 <col:23, col:102> 'int' '&&'
    |         | | | |-BinaryOperator 0x558ccbeca7d8 <col:23, col:74> 'int' '&&'
    |         | | | | |-BinaryOperator 0x558ccbeca740 <col:23, col:46> 'int' '=='
    |         | | | | | |-ImplicitCastExpr 0x558ccbeca728 <col:23> 'int' <LValueToRValue>
    |         | | | | | | `-DeclRefExpr 0x558ccbeca6e8 <col:23> 'int' lvalue Var 0x558ccbec06b0 '__unbuffered_p0_EAX' 'int'
    |         | | | | | `-IntegerLiteral 0x558ccbeca708 <col:46> 'int' 1
    |         | | | | `-BinaryOperator 0x558ccbeca7b8 <col:51, col:74> 'int' '=='
    |         | | | |   |-ImplicitCastExpr 0x558ccbeca7a0 <col:51> 'int' <LValueToRValue>
    |         | | | |   | `-DeclRefExpr 0x558ccbeca760 <col:51> 'int' lvalue Var 0x558ccbec07d0 '__unbuffered_p0_EBX' 'int'
    |         | | | |   `-IntegerLiteral 0x558ccbeca780 <col:74> 'int' 0
    |         | | | `-BinaryOperator 0x558ccbeca850 <col:79, col:102> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x558ccbeca838 <col:79> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x558ccbeca7f8 <col:79> 'int' lvalue Var 0x558ccbec08f0 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x558ccbeca818 <col:102> 'int' 1
    |         | | `-BinaryOperator 0x558ccbeca8e8 <col:107, col:130> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x558ccbeca8d0 <col:107> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x558ccbeca890 <col:107> 'int' lvalue Var 0x558ccbec0a10 '__unbuffered_p1_EBX' 'int'
    |         | |   `-IntegerLiteral 0x558ccbeca8b0 <col:130> 'int' 0
    |         | `-BinaryOperator 0x558ccbeca980 <col:135, col:158> 'int' '=='
    |         |   |-ImplicitCastExpr 0x558ccbeca968 <col:135> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x558ccbeca928 <col:135> 'int' lvalue Var 0x558ccbec0b30 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x558ccbeca948 <col:158> 'int' 1
    |         `-BinaryOperator 0x558ccbecaa18 <col:163, col:186> 'int' '=='
    |           |-ImplicitCastExpr 0x558ccbecaa00 <col:163> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x558ccbeca9c0 <col:163> 'int' lvalue Var 0x558ccbec0c50 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x558ccbeca9e0 <col:186> 'int' 0
    |-CallExpr 0x558ccbecab00 <line:837:3, col:25> 'void'
    | `-ImplicitCastExpr 0x558ccbecaae8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558ccbecaac8 <col:3> 'void ()' Function 0x558ccbe67410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x558ccbecab78 <line:838:3, col:36> 'void'
    | |-ImplicitCastExpr 0x558ccbecab60 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558ccbecab20 <col:3> 'void (int)' Function 0x558ccbe670d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x558ccbecabb8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x558ccbecaba0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x558ccbecab40 <col:21> '_Bool' lvalue Var 0x558ccbec1690 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x558ccbecabf0 <line:839:3, col:10>
      `-IntegerLiteral 0x558ccbecabd0 <col:10> 'int' 0
