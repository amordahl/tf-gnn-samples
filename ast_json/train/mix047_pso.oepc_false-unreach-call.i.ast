TranslationUnitDecl 0x5557f8200f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5557f8201848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5557f8201520 '__int128'
|-TypedefDecl 0x5557f82018b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5557f8201540 'unsigned __int128'
|-TypedefDecl 0x5557f8201bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5557f8201990 'struct __NSConstantString_tag'
|   `-Record 0x5557f8201910 '__NSConstantString_tag'
|-TypedefDecl 0x5557f8201c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5557f8201c20 'char *'
|   `-BuiltinType 0x5557f8201020 'char'
|-TypedefDecl 0x5557f8240b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5557f8201f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5557f8201d40 'struct __va_list_tag'
|     `-Record 0x5557f8201cc0 '__va_list_tag'
|-FunctionDecl 0x5557f8240ca0 <pthread-wmm/mix047_pso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5557f8240bd0 <col:31> col:34 'int'
|-FunctionDecl 0x5557f8240e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5557f8240f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5557f82410d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5557f8241048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5557f8241308 <col:40, col:99>
|   |-IfStmt 0x5557f82412d8 <col:42, col:88>
|   | |-UnaryOperator 0x5557f82411b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5557f82411a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5557f8241180 <col:47> 'int' lvalue ParmVar 0x5557f8241048 'expression' 'int'
|   | `-CompoundStmt 0x5557f82412c0 <col:59, col:88>
|   |   `-LabelStmt 0x5557f82412a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5557f8241238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5557f8241220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5557f82411d0 <col:68> 'void () __attribute__((noreturn))' Function 0x5557f8240f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5557f82412f0 <col:89>
|   `-ReturnStmt 0x5557f82412f8 <col:91>
|-FunctionDecl 0x5557f8241350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5557f8241410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5557f8241790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5557f82414c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5557f8241548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5557f82415c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5557f8241648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5557f8241850 <line:10:22>
|-FunctionDecl 0x5557f82678a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5557f82418c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5557f8241940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5557f82419c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5557f8241a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5557f8267960 <line:13:22>
|-FunctionDecl 0x5557f8267c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5557f82679d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5557f8267a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5557f8267ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5557f8267cc8 <line:15:22>
|-TypedefDecl 0x5557f8267d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5557f82010e0 'unsigned char'
|-TypedefDecl 0x5557f8267da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5557f8201100 'unsigned short'
|-TypedefDecl 0x5557f8267e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5557f8201120 'unsigned int'
|-TypedefDecl 0x5557f8267e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5557f8201140 'unsigned long'
|-TypedefDecl 0x5557f8267ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5557f8201040 'signed char'
|-TypedefDecl 0x5557f8267f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5557f82010e0 'unsigned char'
|-TypedefDecl 0x5557f8267fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5557f8201060 'short'
|-TypedefDecl 0x5557f8268048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5557f8201100 'unsigned short'
|-TypedefDecl 0x5557f82680b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5557f8201080 'int'
|-TypedefDecl 0x5557f8268128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5557f8201120 'unsigned int'
|-TypedefDecl 0x5557f8268198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5557f82010a0 'long'
|-TypedefDecl 0x5557f8268208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5557f8201140 'unsigned long'
|-TypedefDecl 0x5557f8268278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5557f82010a0 'long'
|-TypedefDecl 0x5557f82682e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5557f8201140 'unsigned long'
|-TypedefDecl 0x5557f8268358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5557f8201140 'unsigned long'
|-TypedefDecl 0x5557f82683c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5557f8201120 'unsigned int'
|-TypedefDecl 0x5557f8268438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5557f8201120 'unsigned int'
|-TypedefDecl 0x5557f82684a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5557f8201140 'unsigned long'
|-TypedefDecl 0x5557f8268518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5557f8201140 'unsigned long'
|-TypedefDecl 0x5557f8268588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5557f8201120 'unsigned int'
|-TypedefDecl 0x5557f82685f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5557f8201140 'unsigned long'
|-TypedefDecl 0x5557f8268668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5557f82010a0 'long'
|-TypedefDecl 0x5557f82686d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5557f82010a0 'long'
|-TypedefDecl 0x5557f8268748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5557f8201080 'int'
|-RecordDecl 0x5557f82687a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5557f8268918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5557f82689d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5557f8268970 'struct __fsid_t' sugar
|   `-RecordType 0x5557f8268820 '__fsid_t'
|     `-Record 0x5557f82687a0 ''
|-TypedefDecl 0x5557f8268a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5557f82010a0 'long'
|-TypedefDecl 0x5557f8268ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5557f8201140 'unsigned long'
|-TypedefDecl 0x5557f8268b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5557f8201140 'unsigned long'
|-TypedefDecl 0x5557f8268ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5557f8201120 'unsigned int'
|-TypedefDecl 0x5557f8268c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5557f82010a0 'long'
|-TypedefDecl 0x5557f8268c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5557f8201120 'unsigned int'
|-TypedefDecl 0x5557f8268cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5557f82010a0 'long'
|-TypedefDecl 0x5557f8268d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5557f8201080 'int'
|-TypedefDecl 0x5557f8268dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5557f8201080 'int'
|-TypedefDecl 0x5557f8268e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5557f8201080 'int'
|-TypedefDecl 0x5557f8268eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5557f82017a0 'void *'
|   `-BuiltinType 0x5557f8200fe0 'void'
|-TypedefDecl 0x5557f8268f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5557f82010a0 'long'
|-TypedefDecl 0x5557f8268f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5557f82010a0 'long'
|-TypedefDecl 0x5557f8269008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5557f82010a0 'long'
|-TypedefDecl 0x5557f8269078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5557f8201140 'unsigned long'
|-TypedefDecl 0x5557f82690e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5557f8201140 'unsigned long'
|-TypedefDecl 0x5557f8269158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5557f8201140 'unsigned long'
|-TypedefDecl 0x5557f82691c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5557f8201140 'unsigned long'
|-TypedefDecl 0x5557f8269238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5557f82010a0 'long'
|-TypedefDecl 0x5557f82692a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5557f82010a0 'long'
|-TypedefDecl 0x5557f8269318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5557f82010a0 'long'
|-TypedefDecl 0x5557f8269388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5557f8201140 'unsigned long'
|-TypedefDecl 0x5557f8269418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5557f82693e0 '__off64_t' sugar
|   |-Typedef 0x5557f82686d8 '__off64_t'
|   `-BuiltinType 0x5557f82010a0 'long'
|-TypedefDecl 0x5557f8269510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5557f82694d0 '__quad_t *'
|   `-TypedefType 0x5557f8269470 '__quad_t' sugar
|     |-Typedef 0x5557f8268278 '__quad_t'
|     `-BuiltinType 0x5557f82010a0 'long'
|-TypedefDecl 0x5557f8269580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5557f8201c20 'char *'
|   `-BuiltinType 0x5557f8201020 'char'
|-TypedefDecl 0x5557f82695f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5557f82010a0 'long'
|-TypedefDecl 0x5557f8269660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5557f8201120 'unsigned int'
|-FunctionDecl 0x5557f82697a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5557f82696d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5557f8269ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5557f8269ad8 <line:72:3, col:34>
|     `-CallExpr 0x5557f8269a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5557f8269a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5557f8269a10 <col:10> '<builtin fn type>' Function 0x5557f8269880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5557f8269ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5557f8269a30 <col:29> 'unsigned int' lvalue ParmVar 0x5557f82696d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5557f8269880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5557f8269920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5557f8269990 <col:10> Implicit
| `-ConstAttr 0x5557f82699e8 <col:10> Implicit
|-FunctionDecl 0x5557f8269c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5557f8269b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5557f8269f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5557f8269f48 <line:77:3, col:34>
|     `-CallExpr 0x5557f8269f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5557f8269ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5557f8269e78 <col:10> '<builtin fn type>' Function 0x5557f8269ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5557f8269f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5557f8269e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5557f8269b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5557f8269ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5557f8269d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5557f8269df8 <col:10> Implicit
| `-ConstAttr 0x5557f8269e50 <col:10> Implicit
|-TypedefDecl 0x5557f8269f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5557f8201140 'unsigned long'
|-TypedefDecl 0x5557f826a018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5557f8269fe0 '__time_t' sugar
|   |-Typedef 0x5557f8268c18 '__time_t'
|   `-BuiltinType 0x5557f82010a0 'long'
|-RecordDecl 0x5557f826a070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5557f826a128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5557f826a1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5557f826a248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5557f826a210 '__pid_t' sugar
|   |-Typedef 0x5557f8268748 '__pid_t'
|   `-BuiltinType 0x5557f8201080 'int'
|-RecordDecl 0x5557f826a2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5557f826a360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5557f826a3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5557f826a470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5557f826a4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5557f8201140 'unsigned long'
|-RecordDecl 0x5557f826a530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5557f826a7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5557f826c8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5557f826a810 'struct cpu_set_t' sugar
|   `-RecordType 0x5557f826a5b0 'cpu_set_t'
|     `-Record 0x5557f826a530 ''
|-FunctionDecl 0x5557f826cb88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5557f826c958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5557f826ca60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5557f826cc38 <line:107:19>
|-FunctionDecl 0x5557f826ce10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5557f826cca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5557f826ceb8 <col:69>
|-FunctionDecl 0x5557f826d030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5557f826cf20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5557f826d0d8 <col:64>
|-FunctionDecl 0x5557f826d398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5557f826d140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5557f826d278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5557f826d448 <line:113:22>
|-FunctionDecl 0x5557f826d6c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5557f826d4b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5557f826d5a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5557f826d778 <col:88>
|-FunctionDecl 0x5557f826da98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5557f826d7e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5557f826d8c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5557f826d950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5557f826db50 <col:62>
|-FunctionDecl 0x5557f826dcc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5557f826dbb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5557f826dd70 <col:63>
|-FunctionDecl 0x5557f826de98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5557f826df38 <col:47>
|-FunctionDecl 0x5557f826e040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5557f826dfa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5557f826e0e8 <col:69>
|-FunctionDecl 0x5557f826e1f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5557f826e158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5557f826e298 <col:69>
|-FunctionDecl 0x5557f826e558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5557f826e300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5557f826e438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5557f826e608 <col:88>
|-TypedefDecl 0x5557f826e698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5557f826e660 '__clock_t' sugar
|   |-Typedef 0x5557f8268a58 '__clock_t'
|   `-BuiltinType 0x5557f82010a0 'long'
|-TypedefDecl 0x5557f826e728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5557f826e6f0 '__clockid_t' sugar
|   |-Typedef 0x5557f8268e48 '__clockid_t'
|   `-BuiltinType 0x5557f8201080 'int'
|-TypedefDecl 0x5557f826e7b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5557f826e780 '__timer_t' sugar
|   |-Typedef 0x5557f8268eb8 '__timer_t'
|   `-PointerType 0x5557f82017a0 'void *'
|     `-BuiltinType 0x5557f8200fe0 'void'
|-RecordDecl 0x5557f826e810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5557f826e8e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5557f826e950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5557f826e9b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5557f826ea20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5557f826ea88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5557f826eaf0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5557f826eb58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5557f826ebc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5557f826ec28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5557f826ec90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5557f826ecf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5557f826ed48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5557f826ee18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5557f826ee88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5557f826ef30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5557f826f100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5557f826f1a0 <col:45>
|-FunctionDecl 0x5557f826f380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5557f826f270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5557f826f428 <col:54>
|-FunctionDecl 0x5557f826f628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5557f826f490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5557f826f508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5557f826f6d8 <line:157:22>
| `-ConstAttr 0x5557f826f730 <col:63>
|-FunctionDecl 0x5557f8270560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5557f826f828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5557f8270608 <col:56>
|-FunctionDecl 0x5557f82709b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5557f8270678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5557f82706f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5557f8270770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5557f8270868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5557f8270a70 <col:54>
|-RecordDecl 0x5557f8270ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5557f8270b78 parent 0x5557f8200f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5557f8270dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5557f8270e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5557f8270ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5557f8270f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5557f8271038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5557f8271158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5557f8271100 'struct __locale_struct *'
|   `-ElaboratedType 0x5557f8271090 'struct __locale_struct' sugar
|     `-RecordType 0x5557f8270b50 'struct __locale_struct'
|       `-Record 0x5557f8270ac8 '__locale_struct'
|-TypedefDecl 0x5557f8271208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5557f82711d0 '__locale_t' sugar
|   |-Typedef 0x5557f8271158 '__locale_t'
|   `-PointerType 0x5557f8271100 'struct __locale_struct *'
|     `-ElaboratedType 0x5557f8271090 'struct __locale_struct' sugar
|       `-RecordType 0x5557f8270b50 'struct __locale_struct'
|         `-Record 0x5557f8270ac8 '__locale_struct'
|-FunctionDecl 0x5557f8271610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5557f8271278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5557f82712f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5557f8271370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5557f8271400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5557f8271478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5557f82716d8 <col:40>
|-FunctionDecl 0x5557f82718c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5557f82717a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5557f8271970 <col:66>
|-FunctionDecl 0x5557f8271a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5557f82719d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5557f8271b28 <col:69>
|-FunctionDecl 0x5557f8271d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5557f8271b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5557f8271c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5557f8271e08 <col:52>
|-FunctionDecl 0x5557f8271fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5557f8271e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5557f8271f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5557f8272060 <col:55>
|-FunctionDecl 0x5557f82721f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5557f82720e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5557f82722a0 <col:62>
|-FunctionDecl 0x5557f8272418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5557f8272308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5557f82724c0 <col:60>
|-FunctionDecl 0x5557f8272718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5557f8272578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5557f82725f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5557f82727c8 <col:44>
|-FunctionDecl 0x5557f82729d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5557f8272830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5557f82728b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5557f8272a88 <col:49>
|-VarDecl 0x5557f8272b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5557f8272c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5557f8272c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5557f8272d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5557f8272e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5557f8272f20 <col:42>
|-VarDecl 0x5557f8272f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5557f8273010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5557f8273198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5557f8273088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5557f8273240 <col:57>
|-FunctionDecl 0x5557f8273350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5557f82732c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5557f82733f8 <col:56>
|-FunctionDecl 0x5557f8274540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5557f8273478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5557f82745e8 <col:59>
|-FunctionDecl 0x5557f82746f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5557f8274658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5557f8274798 <col:48>
| `-ConstAttr 0x5557f82747f0 <col:89>
|-FunctionDecl 0x5557f8274a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5557f82748a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5557f8274938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5557f8274cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5557f8274b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5557f8274bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5557f8274d68 <col:88>
|-FunctionDecl 0x5557f8274f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5557f8274dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5557f8274e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5557f8274fb0 <col:88>
|-FunctionDecl 0x5557f82751c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5557f8275018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5557f82750a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5557f8275278 <line:208:22>
|-FunctionDecl 0x5557f82755e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5557f82752e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5557f8275360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5557f82753f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5557f8275480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5557f82758e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5557f82756e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5557f82757c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5557f8275998 <col:85>
|-FunctionDecl 0x5557f8275d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5557f8275a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5557f8275b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5557f8275c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5557f8275e40 <col:52>
|-FunctionDecl 0x5557f8275fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5557f8275ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5557f8276060 <col:61>
|-FunctionDecl 0x5557f8276560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5557f82760c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5557f8276148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5557f8276278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5557f8276368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5557f8276620 <col:62>
|-FunctionDecl 0x5557f8276838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5557f8276688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5557f8276718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5557f82768e8 <line:221:22>
|-FunctionDecl 0x5557f82769e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5557f8276950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5557f8276a90 <col:65>
|-TypedefDecl 0x5557f8276b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5557f8201140 'unsigned long'
|-RecordDecl 0x5557f8276b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5557f8276ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5557f8276d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5557f8276db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5557f8276d60 'union pthread_attr_t' sugar
|   `-RecordType 0x5557f8276be0 'union pthread_attr_t'
|     `-Record 0x5557f8276b58 'pthread_attr_t'
|-RecordDecl 0x5557f8276e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5557f8276f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5557f8277000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5557f82770b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5557f8277050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5557f8276e90 'struct __pthread_internal_list'
|     `-Record 0x5557f8276e10 '__pthread_internal_list'
|-RecordDecl 0x5557f8277120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5557f82771c8 parent 0x5557f8200f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5557f82772a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5557f8277308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5557f8277370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5557f82773d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5557f8277440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5557f82774a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5557f827b580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5557f827b630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5557f827b720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5557f827b788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5557f827b910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5557f827b8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5557f82771a0 'pthread_mutex_t'
|     `-Record 0x5557f8277120 ''
|-RecordDecl 0x5557f827b980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5557f827bac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5557f827bb28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5557f827bbe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5557f827bb80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5557f827ba00 'pthread_mutexattr_t'
|     `-Record 0x5557f827b980 ''
|-RecordDecl 0x5557f827bc50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5557f827bcf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5557f827bdc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5557f827be28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5557f827be90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5557f827bef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5557f827bf60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5557f827bfc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5557f827c030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5557f827c098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5557f827c150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix047_pso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix047_pso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5557f827c240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5557f827c2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5557f827c3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5557f827c380 'union pthread_cond_t' sugar
|   `-RecordType 0x5557f827bcd0 'pthread_cond_t'
|     `-Record 0x5557f827bc50 ''
|-RecordDecl 0x5557f827c450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5557f827c590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5557f827c5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5557f827c6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5557f827c650 'union pthread_condattr_t' sugar
|   `-RecordType 0x5557f827c4d0 'pthread_condattr_t'
|     `-Record 0x5557f827c450 ''
|-TypedefDecl 0x5557f827c738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5557f8201120 'unsigned int'
|-TypedefDecl 0x5557f827c7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5557f8201080 'int'
|-RecordDecl 0x5557f827c800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5557f827c8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5557f827c970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5557f827c9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5557f827ca40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5557f827caa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5557f827cb10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5557f827cb78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5557f827cbe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5557f827cc48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5557f827ccb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5557f827cd18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5557f827cd80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5557f827ce30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix047_pso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix047_pso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5557f827ced8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5557f827cf40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5557f827d090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5557f827d030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5557f827c880 'pthread_rwlock_t'
|     `-Record 0x5557f827c800 ''
|-RecordDecl 0x5557f827d100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5557f827d240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5557f827d2a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5557f827d360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5557f827d300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5557f827d180 'pthread_rwlockattr_t'
|     `-Record 0x5557f827d100 ''
|-TypedefDecl 0x5557f827d3e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5557f8201084 'volatile int' volatile
|   `-BuiltinType 0x5557f8201080 'int'
|-RecordDecl 0x5557f827d440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5557f827f5b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5557f827f618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5557f827f6d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5557f827f670 'union pthread_barrier_t' sugar
|   `-RecordType 0x5557f827d4c0 'pthread_barrier_t'
|     `-Record 0x5557f827d440 ''
|-RecordDecl 0x5557f827f740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5557f827f840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5557f827f8a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5557f827f960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5557f827f900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5557f827f7c0 'pthread_barrierattr_t'
|     `-Record 0x5557f827f740 ''
|-TypedefDecl 0x5557f827fa78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5557f827fa10 'long [8]' 8 
|   `-BuiltinType 0x5557f82010a0 'long'
|-EnumDecl 0x5557f827fad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5557f827fb98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5557f827fbe8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5557f827fc38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5557f827fd08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5557f827fd58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5557f827fda8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5557f827fdf8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5557f827fe80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5557f827fe68 <col:26> 'int'
| |   `-DeclRefExpr 0x5557f827fe48 <col:26> 'int' EnumConstant 0x5557f827fd08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5557f827ff08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5557f827fef0 <col:29> 'int'
| |   `-DeclRefExpr 0x5557f827fed0 <col:29> 'int' EnumConstant 0x5557f827fd58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5557f827ff90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5557f827ff78 <col:30> 'int'
| |   `-DeclRefExpr 0x5557f827ff58 <col:30> 'int' EnumConstant 0x5557f827fda8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5557f8280018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5557f8280000 <col:27> 'int'
|     `-DeclRefExpr 0x5557f827ffe0 <col:27> 'int' EnumConstant 0x5557f827fe80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5557f8280068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5557f8280138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5557f82801c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5557f82801a8 <col:30> 'int'
| |   `-DeclRefExpr 0x5557f8280188 <col:30> 'int' EnumConstant 0x5557f8280138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5557f8280210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5557f8280298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5557f8280280 <col:29> 'int'
|     `-DeclRefExpr 0x5557f8280260 <col:29> 'int' EnumConstant 0x5557f8280210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5557f82802e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5557f82803b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5557f8280408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5557f8280458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5557f82804a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5557f82805c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5557f8280610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5557f8280660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5557f82806e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5557f82806d0 <col:31> 'int'
|     `-DeclRefExpr 0x5557f82806b0 <col:31> 'int' EnumConstant 0x5557f82805c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5557f8280738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5557f8280808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5557f8280858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5557f82808a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5557f8280978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5557f82809c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5557f8280a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5557f8280ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5557f8280b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5557f8280b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5557f8280dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5557f8280e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5557f8280e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5557f8280fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5557f8281008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5557f82810d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5557f8281128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5557f8281178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5557f8281248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5557f8281298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5557f82818f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5557f8281390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5557f82814a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5557f82816e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5557f8281760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5557f82819b8 <col:47>
| |-NonNullAttr 0x5557f8281a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x5557f8281a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5557f8281b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5557f8281aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5557f8281dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5557f8281c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5557f8281ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5557f8281f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5557f8281e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5557f8282040 <col:60>
|-FunctionDecl 0x5557f8282190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5557f8282230 <col:54>
| `-ConstAttr 0x5557f8282288 <col:95>
|-FunctionDecl 0x5557f8282458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5557f82822c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5557f8282338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5557f8282508 <line:394:19>
| `-ConstAttr 0x5557f8282560 <col:60>
|-FunctionDecl 0x5557f8282f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5557f8282e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5557f8283010 <col:71>
| `-NonNullAttr 0x5557f8283068 <col:112, col:126> 1
|-FunctionDecl 0x5557f8283170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5557f82830b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5557f8283218 <line:397:22>
| `-NonNullAttr 0x5557f8283270 <col:63, col:77> 1
|-FunctionDecl 0x5557f8283498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5557f82832b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5557f8283338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5557f8283548 <line:400:22>
| `-NonNullAttr 0x5557f82835a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5557f82837a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5557f82835e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5557f8283668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5557f8283858 <line:403:22>
| `-NonNullAttr 0x5557f82838b0 <col:63, col:77> 1
|-FunctionDecl 0x5557f8283b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5557f82838f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5557f82839a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5557f8283bb8 <line:406:22>
| `-NonNullAttr 0x5557f8283c10 <col:63, col:80> 1 2
|-FunctionDecl 0x5557f8284e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5557f8283c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5557f8283cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5557f8284ef8 <line:409:22>
| `-NonNullAttr 0x5557f8284f50 <col:63, col:77> 1
|-FunctionDecl 0x5557f8285188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5557f8284f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5557f8285028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5557f8285238 <line:412:22>
| `-NonNullAttr 0x5557f8285290 <col:63, col:80> 1 2
|-FunctionDecl 0x5557f82854c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5557f82852d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5557f8285368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5557f8285578 <col:37>
| `-NonNullAttr 0x5557f82855d0 <col:78, col:95> 1 2
|-FunctionDecl 0x5557f82857b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5557f8285618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5557f8285698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5557f8285868 <line:418:22>
| `-NonNullAttr 0x5557f82858c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5557f8285a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5557f8285908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5557f8285988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5557f8285af8 <line:420:22>
| `-NonNullAttr 0x5557f8285b50 <col:63, col:77> 1
|-FunctionDecl 0x5557f8285cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5557f8285b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5557f8285c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5557f8285da8 <line:423:22>
| `-NonNullAttr 0x5557f8286e30 <col:63, col:80> 1 2
|-FunctionDecl 0x5557f8286fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5557f8286e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5557f8286ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5557f8287068 <line:426:22>
| `-NonNullAttr 0x5557f82870c0 <col:63, col:77> 1
|-FunctionDecl 0x5557f8287268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5557f8287108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5557f8287188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5557f8287318 <line:429:22>
| `-NonNullAttr 0x5557f8287370 <col:63, col:80> 1 2
|-FunctionDecl 0x5557f82874f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5557f82873b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5557f8287438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5557f82875a8 <line:431:22>
| `-NonNullAttr 0x5557f8287600 <col:63, col:77> 1
|-FunctionDecl 0x5557f8287828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5557f8287648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5557f82876c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5557f82878d8 <line:434:22>
| |-NonNullAttr 0x5557f8287930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5557f8287968 <col:100> "" ""
|-FunctionDecl 0x5557f8287b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5557f82879b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5557f8287a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5557f8287c28 <line:437:22>
| |-NonNullAttr 0x5557f8287c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x5557f8287cb8 <col:97> "" ""
|-FunctionDecl 0x5557f8287eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5557f8287d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5557f8287d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5557f8287f68 <line:440:22>
| `-NonNullAttr 0x5557f8287fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x5557f8288140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5557f8288008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5557f8288080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5557f82881f0 <line:443:22>
| `-NonNullAttr 0x5557f8288248 <col:63, col:77> 1
|-FunctionDecl 0x5557f8288538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5557f8288298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5557f8288318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5557f8288390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5557f82885f0 <line:447:22>
| `-NonNullAttr 0x5557f8288648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5557f82888f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5557f82886a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5557f8288720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5557f8288798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5557f82889b0 <col:43>
| `-NonNullAttr 0x5557f8288a08 <col:84, col:98> 1
|-FunctionDecl 0x5557f8288cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5557f8288a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5557f8288ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5557f8288b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5557f8288d80 <line:452:22>
| `-NonNullAttr 0x5557f8288dd8 <col:63, col:77> 3
|-FunctionDecl 0x5557f82890e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5557f8288e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5557f8288ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5557f8288f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5557f82891a0 <line:456:22>
| `-NonNullAttr 0x5557f82891f8 <col:63, col:80> 2 3
|-FunctionDecl 0x5557f82893e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5557f8289248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5557f82892c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5557f8289498 <line:458:22>
|-FunctionDecl 0x5557f8289868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5557f8289560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5557f8289700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5557f8289918 <col:52, col:69> 1 2
|-FunctionDecl 0x5557f8289ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5557f82899a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5557f8289a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5557f8289ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5557f8289b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5557f8289c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5557f8289e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5557f8289d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5557f8289fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5557f828a040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5557f828a0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5557f828a1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5557f828a240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5557f828a410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix047_pso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5557f828a508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5557f828a5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5557f828a560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5557f828a0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x5557f828a040 ''
| `-AlignedAttr 0x5557f828a618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5557f828a690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5557f828a7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5557f828a858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5557f828a8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5557f828a928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5557f828ab30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5557f828aa20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5557f828ac78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5557f828abe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5557f828ae70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5557f828ad30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5557f828af18 <line:487:22>
|-RecordDecl 0x5557f828af70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5557f828b288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5557f828b0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5557f828b168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5557f828b338 <col:86>
| `-ReturnsTwiceAttr 0x5557f828b390 <col:12> Implicit
|-FunctionDecl 0x5557f828b6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5557f828b460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5557f828b570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5557f828b768 <line:493:22>
| `-NonNullAttr 0x5557f828b7c0 <col:63, col:77> 1
|-FunctionDecl 0x5557f828b938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5557f828b808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5557f828b9e0 <line:495:22>
| `-NonNullAttr 0x5557f828ba38 <col:63, col:77> 1
|-FunctionDecl 0x5557f828bb40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5557f828ba88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5557f828bbe8 <line:497:22>
| `-NonNullAttr 0x5557f828bc40 <col:52, col:66> 1
|-FunctionDecl 0x5557f828bd40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5557f828bc88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5557f828bde8 <line:499:22>
| `-NonNullAttr 0x5557f828be40 <col:52, col:66> 1
|-FunctionDecl 0x5557f828c088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5557f828be98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5557f828bf28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5557f828c138 <col:36>
| `-NonNullAttr 0x5557f828c190 <col:66, col:83> 1 2
|-FunctionDecl 0x5557f828c290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5557f828c1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5557f828c338 <line:504:22>
| `-NonNullAttr 0x5557f828c390 <col:52, col:66> 1
|-FunctionDecl 0x5557f828c628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5557f828c440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5557f828c4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5557f828c6d8 <line:508:22>
| `-NonNullAttr 0x5557f828c730 <col:63, col:80> 1 2
|-FunctionDecl 0x5557f828c9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5557f828c778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5557f828c7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5557f828c878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5557f828cab0 <line:512:22>
| `-NonNullAttr 0x5557f828cb08 <col:63, col:80> 1 3
|-FunctionDecl 0x5557f828cc10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5557f828cb58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5557f828ccb8 <line:514:22>
| `-NonNullAttr 0x5557f828cd10 <col:63, col:77> 1
|-FunctionDecl 0x5557f828cf38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5557f828cdc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5557f828cfe0 <line:516:22>
| `-NonNullAttr 0x5557f828d038 <col:63, col:77> 1
|-FunctionDecl 0x5557f828d140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5557f828d088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5557f828d1e8 <line:518:22>
| `-NonNullAttr 0x5557f828d240 <col:63, col:77> 1
|-FunctionDecl 0x5557f828d468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5557f828d288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5557f828d308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5557f828d518 <line:522:22>
| `-NonNullAttr 0x5557f828d570 <col:63, col:80> 1 2
|-FunctionDecl 0x5557f828d778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5557f828d5b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5557f828d638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5557f828d828 <line:525:22>
| `-NonNullAttr 0x5557f828d880 <col:63, col:77> 1
|-FunctionDecl 0x5557f828da28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5557f828d8c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5557f828d948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5557f828dad8 <line:528:22>
| `-NonNullAttr 0x5557f828db30 <col:63, col:80> 1 2
|-FunctionDecl 0x5557f828dcb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5557f828db78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5557f828dbf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5557f828dd68 <line:530:22>
| `-NonNullAttr 0x5557f828ddc0 <col:63, col:77> 1
|-FunctionDecl 0x5557f828ef90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5557f828de08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5557f828eeb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5557f828f040 <line:534:22>
| `-NonNullAttr 0x5557f828f098 <col:63, col:80> 1 2
|-FunctionDecl 0x5557f828f228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5557f828f0e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5557f828f168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5557f828f2d8 <line:537:22>
| `-NonNullAttr 0x5557f828f330 <col:63, col:77> 1
|-FunctionDecl 0x5557f828f4d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5557f828f378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5557f828f3f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5557f828f588 <line:541:22>
| `-NonNullAttr 0x5557f828f5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5557f828f768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5557f828f628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5557f828f6a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5557f828f818 <line:544:22>
| `-NonNullAttr 0x5557f828f870 <col:63, col:77> 1
|-FunctionDecl 0x5557f828fa58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5557f828f8b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5557f828f938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5557f828fb08 <line:547:22>
| `-NonNullAttr 0x5557f828fb60 <col:63, col:80> 1 2
|-FunctionDecl 0x5557f828fce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5557f828fba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5557f828fc28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5557f828fd98 <line:550:22>
| `-NonNullAttr 0x5557f828fdf0 <col:63, col:77> 1
|-FunctionDecl 0x5557f8291168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5557f8290f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5557f8291020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5557f8291218 <col:29>
| `-NonNullAttr 0x5557f8291270 <col:70, col:84> 1
|-FunctionDecl 0x5557f82913e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5557f82912b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5557f8291490 <line:555:22>
| `-NonNullAttr 0x5557f82914e8 <col:63, col:77> 1
|-FunctionDecl 0x5557f82915f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5557f8291538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5557f8291698 <line:557:22>
| `-NonNullAttr 0x5557f82916f0 <col:52, col:66> 1
|-FunctionDecl 0x5557f82917f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5557f8291738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5557f8291898 <line:559:19>
| `-NonNullAttr 0x5557f82918f0 <col:49, col:63> 1
|-FunctionDecl 0x5557f8291b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5557f8291938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5557f82919c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5557f8291bd8 <col:39>
| `-NonNullAttr 0x5557f8291c30 <col:69, col:86> 1 2
|-FunctionDecl 0x5557f8291d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5557f8291c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5557f8291dd8 <line:564:22>
| `-NonNullAttr 0x5557f8291e30 <col:52, col:66> 1
|-FunctionDecl 0x5557f8291f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5557f8291ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5557f8292040 <line:566:22>
| `-NonNullAttr 0x5557f8292098 <col:52, col:66> 1
|-FunctionDecl 0x5557f8292258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5557f82920e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5557f8292178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5557f8292308 <col:39>
| `-NonNullAttr 0x5557f8292360 <col:69, col:86> 1 2
|-FunctionDecl 0x5557f8292460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5557f82923a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5557f8292508 <line:571:22>
| `-NonNullAttr 0x5557f8292560 <col:52, col:66> 1
|-FunctionDecl 0x5557f8292748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5557f8292610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5557f82927f0 <line:573:22>
| `-NonNullAttr 0x5557f8292848 <col:63, col:77> 1
|-FunctionDecl 0x5557f8292950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5557f8292898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5557f82929f8 <line:575:22>
| `-NonNullAttr 0x5557f8292a50 <col:63, col:77> 1
|-FunctionDecl 0x5557f8292c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5557f8292a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5557f8292b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5557f8292d28 <line:579:22>
| `-NonNullAttr 0x5557f8292d80 <col:63, col:80> 1 2
|-FunctionDecl 0x5557f8292fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5557f8292dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5557f8292e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5557f8293058 <line:582:22>
| `-NonNullAttr 0x5557f82930b0 <col:63, col:77> 1
|-FunctionDecl 0x5557f8293258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5557f82930f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5557f8293178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5557f8293308 <line:586:22>
| `-NonNullAttr 0x5557f8293360 <col:63, col:80> 1 2
|-FunctionDecl 0x5557f82934e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5557f82933a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5557f8293428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5557f8293598 <col:36>
| `-NonNullAttr 0x5557f82935f0 <col:77, col:91> 1
|-FunctionDecl 0x5557f8293928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5557f82936d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5557f82937e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5557f82939d8 <line:591:22>
| `-NonNullAttr 0x5557f8293a30 <col:63, col:77> 1
|-FunctionDecl 0x5557f8293ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5557f8293a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5557f8293c50 <line:593:22>
| `-NonNullAttr 0x5557f8293ca8 <col:63, col:77> 1
|-FunctionDecl 0x5557f8293db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5557f8293cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5557f8293e58 <line:595:22>
| `-NonNullAttr 0x5557f8293eb0 <col:52, col:66> 1
|-FunctionDecl 0x5557f8293fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5557f8293f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5557f8294070 <line:597:22>
| `-NonNullAttr 0x5557f82940c8 <col:52, col:66> 1
|-FunctionDecl 0x5557f82942f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5557f8294118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5557f8294190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5557f82943a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5557f82946d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5557f8294428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5557f82944a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5557f8294530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5557f8294790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5557f82949a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5557f8294870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5557f8294a50 <line:606:22>
| `-NonNullAttr 0x5557f8294aa8 <col:63, col:77> 1
|-FunctionDecl 0x5557f8294bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5557f8294af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5557f8294c58 <line:608:22>
| `-NonNullAttr 0x5557f8294cb0 <col:63, col:77> 1
|-FunctionDecl 0x5557f8294f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5557f8294cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5557f8294d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5557f8294fc0 <line:612:22>
| `-NonNullAttr 0x5557f8295018 <col:63, col:80> 1 2
|-FunctionDecl 0x5557f8295228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5557f8295068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5557f82950e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5557f82952d8 <col:37>
| `-NonNullAttr 0x5557f8295330 <col:78, col:92> 1
|-FunctionDecl 0x5557f8295548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5557f8295378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5557f8295420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5557f82955f8 <line:618:22>
| `-NonNullAttr 0x5557f8295650 <col:63, col:80> 1 2
|-FunctionDecl 0x5557f8295818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5557f8295698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5557f8295710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5557f82958c8 <line:621:22>
| `-NonNullAttr 0x5557f8295920 <col:63, col:77> 1
|-FunctionDecl 0x5557f8295bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5557f8295a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5557f8295a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5557f8295c78 <line:623:22>
| `-NonNullAttr 0x5557f8295cd0 <col:63, col:77> 1
|-FunctionDecl 0x5557f8295e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5557f8295d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5557f8295f20 <line:625:22>
| `-NonNullAttr 0x5557f8295f78 <col:63, col:77> 1
|-FunctionDecl 0x5557f8296080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5557f8295fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5557f8296128 <line:627:22>
| `-NonNullAttr 0x5557f8296180 <col:52, col:66> 1
|-FunctionDecl 0x5557f8296280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5557f82961c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5557f8296328 <line:629:22>
| `-NonNullAttr 0x5557f8296380 <col:52, col:66> 1
|-FunctionDecl 0x5557f8296480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5557f82963c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5557f8296528 <line:631:22>
| `-NonNullAttr 0x5557f8296580 <col:52, col:66> 1
|-FunctionDecl 0x5557f8296958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5557f8296660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5557f8296770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5557f82967f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5557f8296a10 <line:635:22>
| `-NonNullAttr 0x5557f8296a68 <col:63, col:77> 1
|-FunctionDecl 0x5557f8296be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5557f8296ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5557f8296c90 <line:637:22>
| `-NonNullAttr 0x5557f8296ce8 <col:63, col:77> 1
|-FunctionDecl 0x5557f8296df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5557f8296d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5557f8296e98 <line:639:22>
| `-NonNullAttr 0x5557f8296ef0 <col:52, col:66> 1
|-FunctionDecl 0x5557f82970e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5557f8296fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5557f8297190 <line:641:22>
| `-NonNullAttr 0x5557f82971e8 <col:63, col:77> 1
|-FunctionDecl 0x5557f82972f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5557f8297238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5557f8297398 <line:643:22>
| `-NonNullAttr 0x5557f82973f0 <col:63, col:77> 1
|-FunctionDecl 0x5557f8297618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5557f8297438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5557f82974b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5557f82976c8 <line:647:22>
| `-NonNullAttr 0x5557f8297720 <col:63, col:80> 1 2
|-FunctionDecl 0x5557f8297928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5557f8297768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5557f82977e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5557f82979d8 <line:650:22>
| `-NonNullAttr 0x5557f8297a30 <col:63, col:77> 1
|-FunctionDecl 0x5557f8297d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5557f8297b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5557f8297c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5557f8297e28 <line:653:22>
| `-NonNullAttr 0x5557f8297e80 <col:63, col:77> 1
|-FunctionDecl 0x5557f8297fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5557f8297ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5557f8298090 <col:69>
|-FunctionDecl 0x5557f8298208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5557f82980f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5557f82982b0 <col:72>
|-FunctionDecl 0x5557f82984e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5557f8298318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5557f82983c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5557f8298598 <col:44>
|-FunctionDecl 0x5557f82987b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5557f8298600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5557f8298678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5557f8298868 <line:660:22>
| `-NonNullAttr 0x5557f82988c0 <col:63, col:77> 2
|-FunctionDecl 0x5557f8298d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5557f82989a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5557f8298ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5557f8298bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5557f8298dc0 <col:47>
|-FunctionDecl 0x5557f8299f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5557f8298e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5557f829a0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5557f829a020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5557f829a210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5557f829a178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5557f829a368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x5557f829a2d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5557f829a430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5557f829a4f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5557f829a5b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5557f829a668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5557f829a6e8 prev 0x5557f829a668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5557f829a750 <col:24> 'int' 0
|-VarDecl 0x5557f829a788 <line:674:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x5557f829a808 prev 0x5557f829a788 <line:675:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x5557f829a870 <col:27> 'int' 0
|-VarDecl 0x5557f829a8a8 <line:676:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x5557f829a928 prev 0x5557f829a8a8 <line:677:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x5557f829a990 <col:27> 'int' 0
|-VarDecl 0x5557f829a9c8 <line:678:1, col:5> col:5 used a 'int'
|-VarDecl 0x5557f829aa48 prev 0x5557f829a9c8 <line:679:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x5557f829aab0 <col:9> 'int' 0
|-VarDecl 0x5557f829aae8 <line:680:1, col:5> col:5 used b 'int'
|-VarDecl 0x5557f829ab68 prev 0x5557f829aae8 <line:681:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x5557f829abd0 <col:9> 'int' 0
|-VarDecl 0x5557f829ac00 <line:682:1, col:7> col:7 used b$flush_delayed '_Bool'
|-VarDecl 0x5557f829ac80 <line:683:1, col:5> col:5 used b$mem_tmp 'int'
|-VarDecl 0x5557f829acf8 <line:684:1, col:7> col:7 used b$r_buff0_thd0 '_Bool'
|-VarDecl 0x5557f829ad70 <line:685:1, col:7> col:7 used b$r_buff0_thd1 '_Bool'
|-VarDecl 0x5557f829ade8 <line:686:1, col:7> col:7 used b$r_buff0_thd2 '_Bool'
|-VarDecl 0x5557f829ae60 <line:687:1, col:7> col:7 used b$r_buff0_thd3 '_Bool'
|-VarDecl 0x5557f829aed8 <line:688:1, col:7> col:7 used b$r_buff0_thd4 '_Bool'
|-VarDecl 0x5557f829af70 <line:689:1, col:7> col:7 used b$r_buff1_thd0 '_Bool'
|-VarDecl 0x5557f829afe8 <line:690:1, col:7> col:7 used b$r_buff1_thd1 '_Bool'
|-VarDecl 0x5557f829b060 <line:691:1, col:7> col:7 used b$r_buff1_thd2 '_Bool'
|-VarDecl 0x5557f829b0d8 <line:692:1, col:7> col:7 used b$r_buff1_thd3 '_Bool'
|-VarDecl 0x5557f829b150 <line:693:1, col:7> col:7 used b$r_buff1_thd4 '_Bool'
|-VarDecl 0x5557f829b1c8 <line:694:1, col:7> col:7 b$read_delayed '_Bool'
|-VarDecl 0x5557f829b248 <line:695:1, col:6> col:6 b$read_delayed_var 'int *'
|-VarDecl 0x5557f829b2c8 <line:696:1, col:5> col:5 used b$w_buff0 'int'
|-VarDecl 0x5557f829b340 <line:697:1, col:7> col:7 used b$w_buff0_used '_Bool'
|-VarDecl 0x5557f829b3c0 <line:698:1, col:5> col:5 used b$w_buff1 'int'
|-VarDecl 0x5557f829b438 <line:699:1, col:7> col:7 used b$w_buff1_used '_Bool'
|-VarDecl 0x5557f829b4b0 <line:700:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5557f829b528 <line:701:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5557f829b5a8 <line:702:1, col:5> col:5 used x 'int'
|-VarDecl 0x5557f829b628 prev 0x5557f829b5a8 <line:703:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5557f829b690 <col:9> 'int' 0
|-VarDecl 0x5557f829b6c8 <line:704:1, col:5> col:5 used y 'int'
|-VarDecl 0x5557f829b748 prev 0x5557f829b6c8 <line:705:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5557f829b7b0 <col:9> 'int' 0
|-VarDecl 0x5557f829b7e8 <line:706:1, col:5> col:5 used z 'int'
|-VarDecl 0x5557f829b868 prev 0x5557f829b7e8 <line:707:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5557f829b8d0 <col:9> 'int' 0
|-VarDecl 0x5557f829b900 <line:708:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5557f829b978 <line:709:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5557f829ba90 prev 0x5557f8299f60 <line:710:1, line:739:1> line:710:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5557f829b9f8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5557f829d358 <line:711:1, line:739:1>
|   |-CallExpr 0x5557f829bba8 <line:712:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5557f829bb90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829bb38 <col:3> 'void ()' Function 0x5557f8241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5557f829bc20 <line:713:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5557f829bbc8 <col:3> 'int' lvalue Var 0x5557f829b3c0 'b$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5557f829bc08 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5557f829bbe8 <col:15> 'int' lvalue Var 0x5557f829b2c8 'b$w_buff0' 'int'
|   |-BinaryOperator 0x5557f829bc80 <line:714:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5557f829bc40 <col:3> 'int' lvalue Var 0x5557f829b2c8 'b$w_buff0' 'int'
|   | `-IntegerLiteral 0x5557f829bc60 <col:15> 'int' 1
|   |-BinaryOperator 0x5557f829bcf8 <line:715:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5557f829bca0 <col:3> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5557f829bce0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5557f829bcc0 <col:20> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5557f829bd90 <line:716:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5557f829bd18 <col:3> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5557f829bd68 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5557f829bd38 <col:27> 'int' 1
|   |-CallExpr 0x5557f829bf18 <line:717:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5557f829bf00 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5557f829bdb0 <col:3> 'void (int)' Function 0x5557f82410d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5557f829beb0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5557f829be90 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5557f829be70 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5557f829be28 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5557f829be10 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5557f829bdd0 <col:23> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5557f829be58 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5557f829be40 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5557f829bdf0 <col:41> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5557f829bfb8 <line:718:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5557f829bf40 <col:3> '_Bool' lvalue Var 0x5557f829af70 'b$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5557f829bfa0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5557f829bf80 <col:20> '_Bool' lvalue Var 0x5557f829acf8 'b$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5557f829c030 <line:719:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5557f829bfd8 <col:3> '_Bool' lvalue Var 0x5557f829afe8 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5557f829c018 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5557f829bff8 <col:20> '_Bool' lvalue Var 0x5557f829ad70 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5557f829c0a8 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5557f829c050 <col:3> '_Bool' lvalue Var 0x5557f829b060 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5557f829c090 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5557f829c070 <col:20> '_Bool' lvalue Var 0x5557f829ade8 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5557f829c120 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5557f829c0c8 <col:3> '_Bool' lvalue Var 0x5557f829b0d8 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5557f829c108 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5557f829c0e8 <col:20> '_Bool' lvalue Var 0x5557f829ae60 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5557f829c198 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5557f829c140 <col:3> '_Bool' lvalue Var 0x5557f829b150 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5557f829c180 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5557f829c160 <col:20> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5557f829c230 <line:723:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5557f829c1b8 <col:3> '_Bool' lvalue Var 0x5557f829ad70 'b$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x5557f829c208 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5557f829c1d8 <col:27> 'int' 1
|   |-CallExpr 0x5557f829c288 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5557f829c270 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829c250 <col:3> 'void ()' Function 0x5557f8241410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5557f829c2e0 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5557f829c2c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829c2a8 <col:3> 'void ()' Function 0x5557f8241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5557f829c340 <line:726:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5557f829c300 <col:3> 'int' lvalue Var 0x5557f829b628 'x' 'int'
|   | `-IntegerLiteral 0x5557f829c320 <col:7> 'int' 1
|   |-CallExpr 0x5557f829c398 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5557f829c380 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829c360 <col:3> 'void ()' Function 0x5557f8241410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5557f829c3f0 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5557f829c3d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829c3b8 <col:3> 'void ()' Function 0x5557f8241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5557f829c6d8 <line:729:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5557f829c410 <col:3> 'int' lvalue Var 0x5557f829ab68 'b' 'int'
|   | `-ConditionalOperator 0x5557f829c6a8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5557f829c4d0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5557f829c488 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5557f829c470 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5557f829c430 <col:7> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5557f829c4b8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5557f829c4a0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5557f829c450 <col:25> '_Bool' lvalue Var 0x5557f829ad70 'b$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5557f829c690 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5557f829c4f0 <col:42> 'int' lvalue Var 0x5557f829b2c8 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x5557f829c670 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5557f829c640 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5557f829c5b0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5557f829c568 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5557f829c550 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5557f829c510 <col:55> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5557f829c598 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5557f829c580 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5557f829c530 <col:73> '_Bool' lvalue Var 0x5557f829afe8 'b$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5557f829c610 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5557f829c5d0 <col:90> 'int' lvalue Var 0x5557f829b3c0 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5557f829c628 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557f829c5f0 <col:102> 'int' lvalue Var 0x5557f829ab68 'b' 'int'
|   |-BinaryOperator 0x5557f829c8e0 <line:730:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5557f829c6f8 <col:3> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5557f829c8c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557f829c898 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5557f829c7b8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5557f829c770 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5557f829c758 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5557f829c718 <col:20> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5557f829c7a0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5557f829c788 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5557f829c738 <col:38> '_Bool' lvalue Var 0x5557f829ad70 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5557f829c850 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5557f829c808 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5557f829c7d8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5557f829c880 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5557f829c868 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557f829c830 <col:66> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5557f829cbc8 <line:731:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5557f829c900 <col:3> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5557f829cbb0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557f829cb80 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5557f829caa0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5557f829c9c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5557f829c978 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5557f829c960 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5557f829c920 <col:20> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5557f829c9a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5557f829c990 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5557f829c940 <col:38> '_Bool' lvalue Var 0x5557f829ad70 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5557f829ca80 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5557f829ca38 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5557f829ca20 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5557f829c9e0 <col:56> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5557f829ca68 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5557f829ca50 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5557f829ca00 <col:74> '_Bool' lvalue Var 0x5557f829afe8 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5557f829cb38 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5557f829caf0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5557f829cac0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5557f829cb68 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5557f829cb50 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557f829cb18 <col:102> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5557f829cdd0 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5557f829cbe8 <col:3> '_Bool' lvalue Var 0x5557f829ad70 'b$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5557f829cdb8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557f829cd88 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5557f829cca8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5557f829cc60 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5557f829cc48 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5557f829cc08 <col:20> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5557f829cc90 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5557f829cc78 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5557f829cc28 <col:38> '_Bool' lvalue Var 0x5557f829ad70 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5557f829cd40 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5557f829ccf8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5557f829ccc8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5557f829cd70 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5557f829cd58 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557f829cd20 <col:66> '_Bool' lvalue Var 0x5557f829ad70 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5557f829d0d8 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5557f829cdf0 <col:3> '_Bool' lvalue Var 0x5557f829afe8 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5557f829d0c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557f829d090 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5557f829cfb0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5557f829ceb0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5557f829ce68 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5557f829ce50 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5557f829ce10 <col:20> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5557f829ce98 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5557f829ce80 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5557f829ce30 <col:38> '_Bool' lvalue Var 0x5557f829ad70 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5557f829cf90 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5557f829cf28 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5557f829cf10 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5557f829ced0 <col:56> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5557f829cf58 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5557f829cf40 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5557f829cef0 <col:74> '_Bool' lvalue Var 0x5557f829afe8 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5557f829d048 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5557f829d000 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5557f829cfd0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5557f829d078 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5557f829d060 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557f829d028 <col:102> '_Bool' lvalue Var 0x5557f829afe8 'b$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x5557f829d130 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5557f829d118 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829d0f8 <col:3> 'void ()' Function 0x5557f8241410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5557f829d188 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5557f829d170 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829d150 <col:3> 'void ()' Function 0x5557f8241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5557f829d240 <line:736:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5557f829d1a8 <col:3> 'int' lvalue Var 0x5557f829a6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5557f829d220 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5557f829d208 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5557f829d1c8 <col:22> 'int' lvalue Var 0x5557f829a6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5557f829d1e8 <col:41> 'int' 1
|   |-CallExpr 0x5557f829d298 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5557f829d280 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829d260 <col:3> 'void ()' Function 0x5557f8241410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5557f829d348 <line:738:3, col:36>
|     `-CallExpr 0x5557f829d328 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5557f829d310 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5557f829d2b8 <col:10> 'void *(void)' Function 0x5557f8240e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5557f829d4f0 prev 0x5557f829a0b8 <line:740:1, line:759:1> line:740:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5557f829d458 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5557f829e720 <line:741:1, line:759:1>
|   |-CallExpr 0x5557f829d5d0 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5557f829d5b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829d598 <col:3> 'void ()' Function 0x5557f8241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5557f829d630 <line:743:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5557f829d5f0 <col:3> 'int' lvalue Var 0x5557f829b628 'x' 'int'
|   | `-IntegerLiteral 0x5557f829d610 <col:7> 'int' 2
|   |-CallExpr 0x5557f829d688 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5557f829d670 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829d650 <col:3> 'void ()' Function 0x5557f8241410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5557f829d6e0 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5557f829d6c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829d6a8 <col:3> 'void ()' Function 0x5557f8241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5557f829d740 <line:746:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5557f829d700 <col:3> 'int' lvalue Var 0x5557f829b748 'y' 'int'
|   | `-IntegerLiteral 0x5557f829d720 <col:7> 'int' 1
|   |-CallExpr 0x5557f829d798 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5557f829d780 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829d760 <col:3> 'void ()' Function 0x5557f8241410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5557f829d7f0 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5557f829d7d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829d7b8 <col:3> 'void ()' Function 0x5557f8241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5557f829dad8 <line:749:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5557f829d810 <col:3> 'int' lvalue Var 0x5557f829ab68 'b' 'int'
|   | `-ConditionalOperator 0x5557f829daa8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5557f829d8d0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5557f829d888 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5557f829d870 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5557f829d830 <col:7> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5557f829d8b8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5557f829d8a0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5557f829d850 <col:25> '_Bool' lvalue Var 0x5557f829ade8 'b$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5557f829da90 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5557f829d8f0 <col:42> 'int' lvalue Var 0x5557f829b2c8 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x5557f829da70 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5557f829da40 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5557f829d9b0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5557f829d968 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5557f829d950 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5557f829d910 <col:55> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5557f829d998 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5557f829d980 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5557f829d930 <col:73> '_Bool' lvalue Var 0x5557f829b060 'b$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5557f829da10 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5557f829d9d0 <col:90> 'int' lvalue Var 0x5557f829b3c0 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5557f829da28 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557f829d9f0 <col:102> 'int' lvalue Var 0x5557f829ab68 'b' 'int'
|   |-BinaryOperator 0x5557f829dce0 <line:750:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5557f829daf8 <col:3> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5557f829dcc8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557f829dc98 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5557f829dbb8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5557f829db70 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5557f829db58 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5557f829db18 <col:20> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5557f829dba0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5557f829db88 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5557f829db38 <col:38> '_Bool' lvalue Var 0x5557f829ade8 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5557f829dc50 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5557f829dc08 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5557f829dbd8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5557f829dc80 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5557f829dc68 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557f829dc30 <col:66> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5557f829dfe8 <line:751:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5557f829dd00 <col:3> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5557f829dfd0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557f829dfa0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5557f829dea0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5557f829ddc0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5557f829dd78 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5557f829dd60 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5557f829dd20 <col:20> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5557f829dda8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5557f829dd90 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5557f829dd40 <col:38> '_Bool' lvalue Var 0x5557f829ade8 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5557f829de80 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5557f829de38 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5557f829de20 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5557f829dde0 <col:56> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5557f829de68 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5557f829de50 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5557f829de00 <col:74> '_Bool' lvalue Var 0x5557f829b060 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5557f829df38 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5557f829def0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5557f829dec0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5557f829df68 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5557f829df50 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557f829df18 <col:102> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5557f829e1f0 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5557f829e008 <col:3> '_Bool' lvalue Var 0x5557f829ade8 'b$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5557f829e1d8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557f829e1a8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5557f829e0c8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5557f829e080 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5557f829e068 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5557f829e028 <col:20> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5557f829e0b0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5557f829e098 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5557f829e048 <col:38> '_Bool' lvalue Var 0x5557f829ade8 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5557f829e160 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5557f829e118 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5557f829e0e8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5557f829e190 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5557f829e178 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557f829e140 <col:66> '_Bool' lvalue Var 0x5557f829ade8 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5557f829e4d8 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5557f829e210 <col:3> '_Bool' lvalue Var 0x5557f829b060 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5557f829e4c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557f829e490 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5557f829e3b0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5557f829e2d0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5557f829e288 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5557f829e270 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5557f829e230 <col:20> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5557f829e2b8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5557f829e2a0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5557f829e250 <col:38> '_Bool' lvalue Var 0x5557f829ade8 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5557f829e390 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5557f829e348 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5557f829e330 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5557f829e2f0 <col:56> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5557f829e378 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5557f829e360 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5557f829e310 <col:74> '_Bool' lvalue Var 0x5557f829b060 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5557f829e448 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5557f829e400 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5557f829e3d0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5557f829e478 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5557f829e460 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557f829e428 <col:102> '_Bool' lvalue Var 0x5557f829b060 'b$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5557f829e530 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5557f829e518 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829e4f8 <col:3> 'void ()' Function 0x5557f8241410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5557f829e588 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5557f829e570 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829e550 <col:3> 'void ()' Function 0x5557f8241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5557f829e640 <line:756:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5557f829e5a8 <col:3> 'int' lvalue Var 0x5557f829a6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5557f829e620 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5557f829e608 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5557f829e5c8 <col:22> 'int' lvalue Var 0x5557f829a6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5557f829e5e8 <col:41> 'int' 1
|   |-CallExpr 0x5557f829e698 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5557f829e680 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829e660 <col:3> 'void ()' Function 0x5557f8241410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5557f829e710 <line:758:3, col:36>
|     `-CallExpr 0x5557f829e6f0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5557f829e6d8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5557f829e6b8 <col:10> 'void *(void)' Function 0x5557f8240e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5557f829e868 prev 0x5557f829a210 <line:760:1, line:779:1> line:760:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5557f829e7d0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5557f829faa8 <line:761:1, line:779:1>
|   |-CallExpr 0x5557f829e948 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5557f829e930 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829e910 <col:3> 'void ()' Function 0x5557f8241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5557f829e9a8 <line:763:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5557f829e968 <col:3> 'int' lvalue Var 0x5557f829b748 'y' 'int'
|   | `-IntegerLiteral 0x5557f829e988 <col:7> 'int' 2
|   |-CallExpr 0x5557f829ea00 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5557f829e9e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829e9c8 <col:3> 'void ()' Function 0x5557f8241410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5557f829ea58 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5557f829ea40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829ea20 <col:3> 'void ()' Function 0x5557f8241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5557f829eab8 <line:766:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5557f829ea78 <col:3> 'int' lvalue Var 0x5557f829b868 'z' 'int'
|   | `-IntegerLiteral 0x5557f829ea98 <col:7> 'int' 1
|   |-CallExpr 0x5557f829eb10 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5557f829eaf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829ead8 <col:3> 'void ()' Function 0x5557f8241410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5557f829eb68 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5557f829eb50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829eb30 <col:3> 'void ()' Function 0x5557f8241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5557f829ee50 <line:769:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5557f829eb88 <col:3> 'int' lvalue Var 0x5557f829ab68 'b' 'int'
|   | `-ConditionalOperator 0x5557f829ee20 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5557f829ec48 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5557f829ec00 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5557f829ebe8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5557f829eba8 <col:7> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5557f829ec30 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5557f829ec18 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5557f829ebc8 <col:25> '_Bool' lvalue Var 0x5557f829ae60 'b$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5557f829ee08 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5557f829ec68 <col:42> 'int' lvalue Var 0x5557f829b2c8 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x5557f829ede8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5557f829edb8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5557f829ed28 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5557f829ece0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5557f829ecc8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5557f829ec88 <col:55> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5557f829ed10 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5557f829ecf8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5557f829eca8 <col:73> '_Bool' lvalue Var 0x5557f829b0d8 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5557f829ed88 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5557f829ed48 <col:90> 'int' lvalue Var 0x5557f829b3c0 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5557f829eda0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557f829ed68 <col:102> 'int' lvalue Var 0x5557f829ab68 'b' 'int'
|   |-BinaryOperator 0x5557f829f088 <line:770:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5557f829ee70 <col:3> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5557f829f070 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557f829f040 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5557f829ef30 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5557f829eee8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5557f829eed0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5557f829ee90 <col:20> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5557f829ef18 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5557f829ef00 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5557f829eeb0 <col:38> '_Bool' lvalue Var 0x5557f829ae60 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5557f829eff8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5557f829efb0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5557f829ef50 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5557f829f028 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5557f829f010 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557f829efd8 <col:66> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5557f829f370 <line:771:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5557f829f0a8 <col:3> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5557f829f358 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557f829f328 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5557f829f248 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5557f829f168 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5557f829f120 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5557f829f108 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5557f829f0c8 <col:20> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5557f829f150 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5557f829f138 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5557f829f0e8 <col:38> '_Bool' lvalue Var 0x5557f829ae60 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5557f829f228 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5557f829f1e0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5557f829f1c8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5557f829f188 <col:56> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5557f829f210 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5557f829f1f8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5557f829f1a8 <col:74> '_Bool' lvalue Var 0x5557f829b0d8 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5557f829f2e0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5557f829f298 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5557f829f268 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5557f829f310 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5557f829f2f8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557f829f2c0 <col:102> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5557f829f578 <line:772:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5557f829f390 <col:3> '_Bool' lvalue Var 0x5557f829ae60 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5557f829f560 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557f829f530 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5557f829f450 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5557f829f408 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5557f829f3f0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5557f829f3b0 <col:20> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5557f829f438 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5557f829f420 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5557f829f3d0 <col:38> '_Bool' lvalue Var 0x5557f829ae60 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5557f829f4e8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5557f829f4a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5557f829f470 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5557f829f518 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5557f829f500 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557f829f4c8 <col:66> '_Bool' lvalue Var 0x5557f829ae60 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5557f829f860 <line:773:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5557f829f598 <col:3> '_Bool' lvalue Var 0x5557f829b0d8 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5557f829f848 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557f829f818 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5557f829f738 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5557f829f658 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5557f829f610 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5557f829f5f8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5557f829f5b8 <col:20> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5557f829f640 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5557f829f628 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5557f829f5d8 <col:38> '_Bool' lvalue Var 0x5557f829ae60 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5557f829f718 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5557f829f6d0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5557f829f6b8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5557f829f678 <col:56> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5557f829f700 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5557f829f6e8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5557f829f698 <col:74> '_Bool' lvalue Var 0x5557f829b0d8 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5557f829f7d0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5557f829f788 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5557f829f758 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5557f829f800 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5557f829f7e8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557f829f7b0 <col:102> '_Bool' lvalue Var 0x5557f829b0d8 'b$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5557f829f8b8 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5557f829f8a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829f880 <col:3> 'void ()' Function 0x5557f8241410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5557f829f910 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5557f829f8f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829f8d8 <col:3> 'void ()' Function 0x5557f8241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5557f829f9c8 <line:776:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5557f829f930 <col:3> 'int' lvalue Var 0x5557f829a6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5557f829f9a8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5557f829f990 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5557f829f950 <col:22> 'int' lvalue Var 0x5557f829a6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5557f829f970 <col:41> 'int' 1
|   |-CallExpr 0x5557f829fa20 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5557f829fa08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829f9e8 <col:3> 'void ()' Function 0x5557f8241410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5557f829fa98 <line:778:3, col:36>
|     `-CallExpr 0x5557f829fa78 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5557f829fa60 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5557f829fa40 <col:10> 'void *(void)' Function 0x5557f8240e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5557f829fbf0 prev 0x5557f829a368 <line:780:1, line:818:1> line:780:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x5557f829fb58 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5557f82a3a10 <line:781:1, line:818:1>
|   |-CallExpr 0x5557f829fcd0 <line:782:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5557f829fcb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829fc98 <col:3> 'void ()' Function 0x5557f8241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5557f829fd30 <line:783:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5557f829fcf0 <col:3> 'int' lvalue Var 0x5557f829b868 'z' 'int'
|   | `-IntegerLiteral 0x5557f829fd10 <col:7> 'int' 2
|   |-CallExpr 0x5557f829fd88 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5557f829fd70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829fd50 <col:3> 'void ()' Function 0x5557f8241410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5557f829fde0 <line:785:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5557f829fdc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829fda8 <col:3> 'void ()' Function 0x5557f8241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5557f829fe40 <line:786:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5557f829fe00 <col:3> 'int' lvalue Var 0x5557f829aa48 'a' 'int'
|   | `-IntegerLiteral 0x5557f829fe20 <col:7> 'int' 1
|   |-CallExpr 0x5557f829fe98 <line:787:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5557f829fe80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829fe60 <col:3> 'void ()' Function 0x5557f8241410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5557f829fef0 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5557f829fed8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829feb8 <col:3> 'void ()' Function 0x5557f8241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5557f829ff68 <line:789:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5557f829ff10 <col:3> 'int' lvalue Var 0x5557f829a808 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x5557f829ff50 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5557f829ff30 <col:25> 'int' lvalue Var 0x5557f829aa48 'a' 'int'
|   |-CallExpr 0x5557f829ffd8 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5557f829ffc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829ff88 <col:3> 'void ()' Function 0x5557f8241410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5557f82a0030 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5557f82a0018 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f829fff8 <col:3> 'void ()' Function 0x5557f8241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5557f82a00e0 <line:792:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5557f82a0050 <col:3> '_Bool' lvalue Var 0x5557f829b900 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5557f82a00c8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5557f82a00a8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5557f82a0090 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5557f82a0070 <col:19> 'void *(void)' Function 0x5557f8240e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5557f82a0190 <line:793:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5557f82a0100 <col:3> '_Bool' lvalue Var 0x5557f829b978 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5557f82a0178 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5557f82a0158 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5557f82a0140 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5557f82a0120 <col:19> 'void *(void)' Function 0x5557f8240e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5557f82a0208 <line:794:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5557f82a01b0 <col:3> '_Bool' lvalue Var 0x5557f829ac00 'b$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5557f82a01f0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5557f82a01d0 <col:21> '_Bool' lvalue Var 0x5557f829b978 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5557f82a0280 <line:795:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5557f82a0228 <col:3> 'int' lvalue Var 0x5557f829ac80 'b$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5557f82a0268 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5557f82a0248 <col:15> 'int' lvalue Var 0x5557f829ab68 'b' 'int'
|   |-BinaryOperator 0x5557f82a06b8 <line:796:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5557f82a02a0 <col:3> 'int' lvalue Var 0x5557f829ab68 'b' 'int'
|   | `-ConditionalOperator 0x5557f82a0688 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5557f82a04b0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5557f82a03d0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5557f82a02f8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5557f82a02e0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5557f82a02c0 <col:8> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5557f82a03b0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5557f82a0348 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5557f82a0330 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5557f82a0310 <col:27> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x5557f82a0398 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5557f82a0380 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5557f82a0360 <col:46> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5557f82a0490 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5557f82a0428 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5557f82a0410 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5557f82a03f0 <col:65> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x5557f82a0478 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5557f82a0460 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5557f82a0440 <col:84> '_Bool' lvalue Var 0x5557f829b150 'b$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x5557f82a0670 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5557f82a04d0 <col:101> 'int' lvalue Var 0x5557f829ab68 'b' 'int'
|   |   `-ParenExpr 0x5557f82a0650 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5557f82a0620 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5557f82a0590 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5557f82a0548 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5557f82a0530 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5557f82a04f0 <col:106> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5557f82a0578 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5557f82a0560 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5557f82a0510 <col:124> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5557f82a05f0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5557f82a05b0 <col:141> 'int' lvalue Var 0x5557f829b2c8 'b$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5557f82a0608 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557f82a05d0 <col:153> 'int' lvalue Var 0x5557f829b3c0 'b$w_buff1' 'int'
|   |-BinaryOperator 0x5557f82a0bc8 <line:797:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5557f82a06d8 <col:3> 'int' lvalue Var 0x5557f829b2c8 'b$w_buff0' 'int'
|   | `-ConditionalOperator 0x5557f82a0b98 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5557f82a0b68 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5557f82a0b50 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5557f82a06f8 <col:15> '_Bool' lvalue Var 0x5557f829b978 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5557f82a0b80 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5557f82a0718 <col:31> 'int' lvalue Var 0x5557f829b2c8 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x5557f82a0b30 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5557f82a0b00 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5557f82a0928 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5557f82a0848 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5557f82a0770 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5557f82a0758 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5557f82a0738 <col:45> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5557f82a0828 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5557f82a07c0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5557f82a07a8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5557f82a0788 <col:64> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x5557f82a0810 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5557f82a07f8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5557f82a07d8 <col:83> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5557f82a0908 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5557f82a08a0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5557f82a0888 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5557f82a0868 <col:102> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x5557f82a08f0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5557f82a08d8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5557f82a08b8 <col:121> '_Bool' lvalue Var 0x5557f829b150 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5557f82a0ae8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5557f82a0948 <col:138> 'int' lvalue Var 0x5557f829b2c8 'b$w_buff0' 'int'
|   |       `-ParenExpr 0x5557f82a0ac8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5557f82a0a98 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5557f82a0a08 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5557f82a09c0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5557f82a09a8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5557f82a0968 <col:151> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5557f82a09f0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5557f82a09d8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5557f82a0988 <col:169> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x5557f82a0a68 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5557f82a0a28 <col:186> 'int' lvalue Var 0x5557f829b2c8 'b$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5557f82a0a80 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5557f82a0a48 <col:198> 'int' lvalue Var 0x5557f829b2c8 'b$w_buff0' 'int'
|   |-BinaryOperator 0x5557f82a1100 <line:798:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5557f82a0be8 <col:3> 'int' lvalue Var 0x5557f829b3c0 'b$w_buff1' 'int'
|   | `-ConditionalOperator 0x5557f82a10d0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5557f82a10a0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5557f82a1088 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5557f82a0c08 <col:15> '_Bool' lvalue Var 0x5557f829b978 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5557f82a10b8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5557f82a0c28 <col:31> 'int' lvalue Var 0x5557f829b3c0 'b$w_buff1' 'int'
|   |   `-ParenExpr 0x5557f82a1068 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5557f82a1038 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5557f82a0e38 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5557f82a0d58 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5557f82a0c80 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5557f82a0c68 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5557f82a0c48 <col:45> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5557f82a0d38 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5557f82a0cd0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5557f82a0cb8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5557f82a0c98 <col:64> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x5557f82a0d20 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5557f82a0d08 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5557f82a0ce8 <col:83> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5557f82a0e18 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5557f82a0db0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5557f82a0d98 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5557f82a0d78 <col:102> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x5557f82a0e00 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5557f82a0de8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5557f82a0dc8 <col:121> '_Bool' lvalue Var 0x5557f829b150 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5557f82a1020 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5557f82a0e58 <col:138> 'int' lvalue Var 0x5557f829b3c0 'b$w_buff1' 'int'
|   |       `-ParenExpr 0x5557f82a1000 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5557f82a0fd0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5557f82a0f18 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5557f82a0ed0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5557f82a0eb8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5557f82a0e78 <col:151> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5557f82a0f00 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5557f82a0ee8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5557f82a0e98 <col:169> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x5557f82a0f78 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5557f82a0f38 <col:186> 'int' lvalue Var 0x5557f829b3c0 'b$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5557f82a0f90 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5557f82a0f58 <col:198> 'int' lvalue Var 0x5557f829b3c0 'b$w_buff1' 'int'
|   |-BinaryOperator 0x5557f82a16a8 <line:799:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5557f82a1120 <col:3> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5557f82a1690 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557f82a1660 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5557f82a1618 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5557f82a1600 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5557f82a1140 <col:20> '_Bool' lvalue Var 0x5557f829b978 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5557f82a1648 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5557f82a1630 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5557f82a1160 <col:36> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5557f82a15e0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5557f82a15b0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5557f82a1370 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5557f82a1290 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5557f82a11b8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5557f82a11a0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5557f82a1180 <col:55> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5557f82a1270 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5557f82a1208 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5557f82a11f0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5557f82a11d0 <col:74> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5557f82a1258 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5557f82a1240 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5557f82a1220 <col:93> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5557f82a1350 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5557f82a12e8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5557f82a12d0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5557f82a12b0 <col:112> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5557f82a1338 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5557f82a1320 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5557f82a1300 <col:131> '_Bool' lvalue Var 0x5557f829b150 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5557f82a1598 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5557f82a1580 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5557f82a1390 <col:148> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5557f82a1560 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5557f82a1530 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5557f82a1450 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5557f82a1408 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5557f82a13f0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5557f82a13b0 <col:166> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5557f82a1438 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5557f82a1420 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5557f82a13d0 <col:184> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5557f82a14e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5557f82a14a0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5557f82a1470 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5557f82a1518 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5557f82a1500 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5557f82a14c8 <col:212> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5557f82a1c70 <line:800:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5557f82a16c8 <col:3> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5557f82a1c58 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557f82a1c28 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5557f82a1be0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5557f82a1bc8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5557f82a16e8 <col:20> '_Bool' lvalue Var 0x5557f829b978 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5557f82a1c10 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5557f82a1bf8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5557f82a1708 <col:36> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5557f82a1ba8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5557f82a1b78 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5557f82a1918 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5557f82a1838 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5557f82a1760 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5557f82a1748 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5557f82a1728 <col:55> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5557f82a1818 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5557f82a17b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5557f82a1798 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5557f82a1778 <col:74> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5557f82a1800 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5557f82a17e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5557f82a17c8 <col:93> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5557f82a18f8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5557f82a1890 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5557f82a1878 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5557f82a1858 <col:112> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5557f82a18e0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5557f82a18c8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5557f82a18a8 <col:131> '_Bool' lvalue Var 0x5557f829b150 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5557f82a1b60 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5557f82a1b48 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5557f82a1938 <col:148> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5557f82a1b28 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5557f82a1af8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5557f82a19f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5557f82a19b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5557f82a1998 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5557f82a1958 <col:166> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5557f82a19e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5557f82a19c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5557f82a1978 <col:184> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5557f82a1ac8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5557f82a1a48 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5557f82a1a18 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5557f82a1ae0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5557f82a1aa0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5557f82a1a70 <col:219> 'int' 0
|   |-BinaryOperator 0x5557f82a2238 <line:801:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5557f82a1c90 <col:3> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5557f82a2220 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557f82a21f0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5557f82a21a8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5557f82a2190 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5557f82a1cb0 <col:20> '_Bool' lvalue Var 0x5557f829b978 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5557f82a21d8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5557f82a21c0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5557f82a1cd0 <col:36> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x5557f82a2170 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5557f82a2140 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5557f82a1ee0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5557f82a1e00 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5557f82a1d28 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5557f82a1d10 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5557f82a1cf0 <col:55> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5557f82a1de0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5557f82a1d78 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5557f82a1d60 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5557f82a1d40 <col:74> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5557f82a1dc8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5557f82a1db0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5557f82a1d90 <col:93> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5557f82a1ec0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5557f82a1e58 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5557f82a1e40 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5557f82a1e20 <col:112> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5557f82a1ea8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5557f82a1e90 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5557f82a1e70 <col:131> '_Bool' lvalue Var 0x5557f829b150 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5557f82a2128 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5557f82a2110 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5557f82a1f00 <col:148> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x5557f82a20f0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5557f82a20c0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5557f82a1fe0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5557f82a1f78 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5557f82a1f60 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5557f82a1f20 <col:166> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5557f82a1fa8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5557f82a1f90 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5557f82a1f40 <col:184> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5557f82a2078 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5557f82a2030 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5557f82a2000 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5557f82a20a8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5557f82a2090 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5557f82a2058 <col:212> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5557f82a2800 <line:802:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5557f82a2258 <col:3> '_Bool' lvalue Var 0x5557f829b150 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5557f82a27e8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557f82a27b8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5557f82a2770 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5557f82a2758 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5557f82a2278 <col:20> '_Bool' lvalue Var 0x5557f829b978 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5557f82a27a0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5557f82a2788 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5557f82a2298 <col:36> '_Bool' lvalue Var 0x5557f829b150 'b$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x5557f82a2738 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5557f82a2708 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5557f82a24a8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5557f82a23c8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5557f82a22f0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5557f82a22d8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5557f82a22b8 <col:55> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5557f82a23a8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5557f82a2340 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5557f82a2328 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5557f82a2308 <col:74> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5557f82a2390 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5557f82a2378 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5557f82a2358 <col:93> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5557f82a2488 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5557f82a2420 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5557f82a2408 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5557f82a23e8 <col:112> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5557f82a2470 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5557f82a2458 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5557f82a2438 <col:131> '_Bool' lvalue Var 0x5557f829b150 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5557f82a26f0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5557f82a26d8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5557f82a24c8 <col:148> '_Bool' lvalue Var 0x5557f829b150 'b$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x5557f82a26b8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5557f82a2688 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5557f82a2588 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5557f82a2540 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5557f82a2528 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5557f82a24e8 <col:166> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5557f82a2570 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5557f82a2558 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5557f82a2508 <col:184> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5557f82a2658 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5557f82a25d8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5557f82a25a8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5557f82a2670 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5557f82a2630 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5557f82a2600 <col:219> 'int' 0
|   |-BinaryOperator 0x5557f82a2878 <line:803:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5557f82a2820 <col:3> 'int' lvalue Var 0x5557f829a928 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x5557f82a2860 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5557f82a2840 <col:25> 'int' lvalue Var 0x5557f829ab68 'b' 'int'
|   |-BinaryOperator 0x5557f82a29a8 <line:804:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5557f82a2898 <col:3> 'int' lvalue Var 0x5557f829ab68 'b' 'int'
|   | `-ConditionalOperator 0x5557f82a2978 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5557f82a2930 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5557f82a2918 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5557f82a28b8 <col:7> '_Bool' lvalue Var 0x5557f829ac00 'b$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5557f82a2948 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5557f82a28d8 <col:25> 'int' lvalue Var 0x5557f829ac80 'b$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5557f82a2960 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5557f82a28f8 <col:37> 'int' lvalue Var 0x5557f829ab68 'b' 'int'
|   |-BinaryOperator 0x5557f82a2a40 <line:805:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5557f82a29c8 <col:3> '_Bool' lvalue Var 0x5557f829ac00 'b$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5557f82a2a18 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5557f82a29e8 <col:28> 'int' 0
|   |-CallExpr 0x5557f82a2a98 <line:806:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5557f82a2a80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f82a2a60 <col:3> 'void ()' Function 0x5557f8241410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5557f82a2af0 <line:807:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5557f82a2ad8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f82a2ab8 <col:3> 'void ()' Function 0x5557f8241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5557f82a2dd8 <line:808:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5557f82a2b10 <col:3> 'int' lvalue Var 0x5557f829ab68 'b' 'int'
|   | `-ConditionalOperator 0x5557f82a2da8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5557f82a2bd0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5557f82a2b88 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5557f82a2b70 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5557f82a2b30 <col:7> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5557f82a2bb8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5557f82a2ba0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5557f82a2b50 <col:25> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x5557f82a2d90 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5557f82a2bf0 <col:42> 'int' lvalue Var 0x5557f829b2c8 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x5557f82a2d70 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5557f82a2d40 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5557f82a2cb0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5557f82a2c68 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5557f82a2c50 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5557f82a2c10 <col:55> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5557f82a2c98 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5557f82a2c80 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5557f82a2c30 <col:73> '_Bool' lvalue Var 0x5557f829b150 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5557f82a2d10 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5557f82a2cd0 <col:90> 'int' lvalue Var 0x5557f829b3c0 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5557f82a2d28 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557f82a2cf0 <col:102> 'int' lvalue Var 0x5557f829ab68 'b' 'int'
|   |-BinaryOperator 0x5557f82a2ff0 <line:809:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5557f82a2df8 <col:3> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5557f82a2fc8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557f82a2f98 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5557f82a2eb8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5557f82a2e70 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5557f82a2e58 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5557f82a2e18 <col:20> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5557f82a2ea0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5557f82a2e88 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5557f82a2e38 <col:38> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5557f82a2f50 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5557f82a2f08 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5557f82a2ed8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5557f82a2f80 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5557f82a2f68 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557f82a2f30 <col:66> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5557f82a32d8 <line:810:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5557f82a3010 <col:3> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5557f82a32c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557f82a3290 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5557f82a31b0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5557f82a30d0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5557f82a3088 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5557f82a3070 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5557f82a3030 <col:20> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5557f82a30b8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5557f82a30a0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5557f82a3050 <col:38> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5557f82a3190 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5557f82a3148 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5557f82a3130 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5557f82a30f0 <col:56> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5557f82a3178 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5557f82a3160 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5557f82a3110 <col:74> '_Bool' lvalue Var 0x5557f829b150 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5557f82a3248 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5557f82a3200 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5557f82a31d0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5557f82a3278 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5557f82a3260 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557f82a3228 <col:102> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5557f82a34e0 <line:811:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5557f82a32f8 <col:3> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5557f82a34c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557f82a3498 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5557f82a33b8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5557f82a3370 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5557f82a3358 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5557f82a3318 <col:20> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5557f82a33a0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5557f82a3388 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5557f82a3338 <col:38> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5557f82a3450 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5557f82a3408 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5557f82a33d8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5557f82a3480 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5557f82a3468 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557f82a3430 <col:66> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5557f82a37c8 <line:812:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5557f82a3500 <col:3> '_Bool' lvalue Var 0x5557f829b150 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5557f82a37b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557f82a3780 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5557f82a36a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5557f82a35c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5557f82a3578 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5557f82a3560 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5557f82a3520 <col:20> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5557f82a35a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5557f82a3590 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5557f82a3540 <col:38> '_Bool' lvalue Var 0x5557f829aed8 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5557f82a3680 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5557f82a3638 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5557f82a3620 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5557f82a35e0 <col:56> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5557f82a3668 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5557f82a3650 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5557f82a3600 <col:74> '_Bool' lvalue Var 0x5557f829b150 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5557f82a3738 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5557f82a36f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5557f82a36c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5557f82a3768 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5557f82a3750 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557f82a3718 <col:102> '_Bool' lvalue Var 0x5557f829b150 'b$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x5557f82a3820 <line:813:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5557f82a3808 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f82a37e8 <col:3> 'void ()' Function 0x5557f8241410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5557f82a3878 <line:814:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5557f82a3860 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f82a3840 <col:3> 'void ()' Function 0x5557f8241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5557f82a3930 <line:815:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5557f82a3898 <col:3> 'int' lvalue Var 0x5557f829a6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5557f82a3910 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5557f82a38f8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5557f82a38b8 <col:22> 'int' lvalue Var 0x5557f829a6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5557f82a38d8 <col:41> 'int' 1
|   |-CallExpr 0x5557f82a3988 <line:816:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5557f82a3970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557f82a3950 <col:3> 'void ()' Function 0x5557f8241410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5557f82a3a00 <line:817:3, col:36>
|     `-CallExpr 0x5557f82a39e0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5557f82a39c8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5557f82a39a8 <col:10> 'void *(void)' Function 0x5557f8240e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5557f82a3b60 prev 0x5557f829a430 <line:819:1, line:821:1> line:819:6 fence 'void ()'
| `-CompoundStmt 0x5557f82a3c00 <line:820:1, line:821:1>
|-FunctionDecl 0x5557f82a3c30 prev 0x5557f829a4f0 <line:822:1, line:824:1> line:822:6 isync 'void ()'
| `-CompoundStmt 0x5557f82a3cd0 <line:823:1, line:824:1>
|-FunctionDecl 0x5557f82a3d00 prev 0x5557f829a5b0 <line:825:1, line:827:1> line:825:6 lwfence 'void ()'
| `-CompoundStmt 0x5557f82a3da0 <line:826:1, line:827:1>
`-FunctionDecl 0x5557f82a3e08 <line:828:1, line:854:1> line:828:5 main 'int ()'
  `-CompoundStmt 0x5557f82a5e08 <line:829:1, line:854:1>
    |-DeclStmt 0x5557f82a3f20 <line:830:3, col:18>
    | `-VarDecl 0x5557f82a3eb8 <col:3, col:13> col:13 used t1259 'pthread_t':'unsigned long'
    |-CallExpr 0x5557f82a4138 <line:831:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5557f82a4120 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5557f82a3f38 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5557f82818f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5557f82a3f78 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5557f82a3f58 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5557f82a3eb8 't1259' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5557f82a4178 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5557f82a4000 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5557f82a3fc8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5557f82a3f90 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5557f82a4190 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5557f82a4020 <col:39> 'void *(void *)' Function 0x5557f829ba90 'P0' 'void *(void *)'
    | `-ParenExpr 0x5557f82a40a0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5557f82a4078 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5557f82a4040 <col:52> 'int' 0
    |-DeclStmt 0x5557f82a4220 <line:832:3, col:18>
    | `-VarDecl 0x5557f82a41b8 <col:3, col:13> col:13 used t1260 'pthread_t':'unsigned long'
    |-CallExpr 0x5557f82a43c8 <line:833:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5557f82a43b0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5557f82a4238 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5557f82818f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5557f82a4278 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5557f82a4258 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5557f82a41b8 't1260' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5557f82a4408 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5557f82a42f0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5557f82a42c8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5557f82a4290 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5557f82a4420 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5557f82a4310 <col:39> 'void *(void *)' Function 0x5557f829d4f0 'P1' 'void *(void *)'
    | `-ParenExpr 0x5557f82a4390 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5557f82a4368 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5557f82a4330 <col:52> 'int' 0
    |-DeclStmt 0x5557f82a44b0 <line:834:3, col:18>
    | `-VarDecl 0x5557f82a4448 <col:3, col:13> col:13 used t1261 'pthread_t':'unsigned long'
    |-CallExpr 0x5557f82a4658 <line:835:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5557f82a4640 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5557f82a44c8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5557f82818f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5557f82a4508 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5557f82a44e8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5557f82a4448 't1261' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5557f82a4698 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5557f82a4580 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5557f82a4558 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5557f82a4520 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5557f82a46b0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5557f82a45a0 <col:39> 'void *(void *)' Function 0x5557f829e868 'P2' 'void *(void *)'
    | `-ParenExpr 0x5557f82a4620 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5557f82a45f8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5557f82a45c0 <col:52> 'int' 0
    |-DeclStmt 0x5557f82a4740 <line:836:3, col:18>
    | `-VarDecl 0x5557f82a46d8 <col:3, col:13> col:13 used t1262 'pthread_t':'unsigned long'
    |-CallExpr 0x5557f82a48e8 <line:837:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5557f82a48d0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5557f82a4758 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5557f82818f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5557f82a4798 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5557f82a4778 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5557f82a46d8 't1262' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5557f82a4928 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5557f82a4810 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5557f82a47e8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5557f82a47b0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5557f82a4940 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5557f82a4830 <col:39> 'void *(void *)' Function 0x5557f829fbf0 'P3' 'void *(void *)'
    | `-ParenExpr 0x5557f82a48b0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5557f82a4888 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5557f82a4850 <col:52> 'int' 0
    |-CallExpr 0x5557f82a4990 <line:838:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5557f82a4978 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5557f82a4958 <col:3> 'void ()' Function 0x5557f8241350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5557f82a4a60 <line:839:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5557f82a49b0 <col:3> '_Bool' lvalue Var 0x5557f829b4b0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5557f82a4a48 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5557f82a4a28 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5557f82a4a10 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5557f82a49d0 <col:21> 'int' lvalue Var 0x5557f829a6e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5557f82a49f0 <col:41> 'int' 4
    |-CallExpr 0x5557f82a4ab8 <line:840:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5557f82a4aa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5557f82a4a80 <col:3> 'void ()' Function 0x5557f8241410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5557f82a4b30 <line:841:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5557f82a4b18 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5557f82a4ad8 <col:3> 'void (int)' Function 0x5557f8240ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5557f82a4b70 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5557f82a4b58 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5557f82a4af8 <col:21> '_Bool' lvalue Var 0x5557f829b4b0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5557f82a4bc0 <line:842:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5557f82a4ba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5557f82a4b88 <col:3> 'void ()' Function 0x5557f8241350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5557f82a4ea8 <line:843:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5557f82a4be0 <col:3> 'int' lvalue Var 0x5557f829ab68 'b' 'int'
    | `-ConditionalOperator 0x5557f82a4e78 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5557f82a4ca0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5557f82a4c58 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5557f82a4c40 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5557f82a4c00 <col:7> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5557f82a4c88 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5557f82a4c70 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5557f82a4c20 <col:25> '_Bool' lvalue Var 0x5557f829acf8 'b$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5557f82a4e60 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5557f82a4cc0 <col:42> 'int' lvalue Var 0x5557f829b2c8 'b$w_buff0' 'int'
    |   `-ParenExpr 0x5557f82a4e40 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5557f82a4e10 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5557f82a4d80 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5557f82a4d38 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5557f82a4d20 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5557f82a4ce0 <col:55> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5557f82a4d68 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5557f82a4d50 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5557f82a4d00 <col:73> '_Bool' lvalue Var 0x5557f829af70 'b$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5557f82a4de0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5557f82a4da0 <col:90> 'int' lvalue Var 0x5557f829b3c0 'b$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5557f82a4df8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5557f82a4dc0 <col:102> 'int' lvalue Var 0x5557f829ab68 'b' 'int'
    |-BinaryOperator 0x5557f82a50c0 <line:844:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5557f82a4ec8 <col:3> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5557f82a50a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5557f82a5078 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5557f82a4f88 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5557f82a4f40 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5557f82a4f28 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5557f82a4ee8 <col:20> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5557f82a4f70 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5557f82a4f58 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5557f82a4f08 <col:38> '_Bool' lvalue Var 0x5557f829acf8 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5557f82a5030 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5557f82a4fd8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5557f82a4fa8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5557f82a5060 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5557f82a5048 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5557f82a5010 <col:66> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5557f82a53a8 <line:845:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5557f82a50e0 <col:3> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5557f82a5390 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5557f82a5360 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5557f82a5280 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5557f82a51a0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5557f82a5158 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5557f82a5140 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5557f82a5100 <col:20> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5557f82a5188 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5557f82a5170 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5557f82a5120 <col:38> '_Bool' lvalue Var 0x5557f829acf8 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5557f82a5260 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5557f82a5218 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5557f82a5200 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5557f82a51c0 <col:56> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5557f82a5248 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5557f82a5230 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5557f82a51e0 <col:74> '_Bool' lvalue Var 0x5557f829af70 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5557f82a5318 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5557f82a52d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5557f82a52a0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5557f82a5348 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5557f82a5330 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5557f82a52f8 <col:102> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5557f82a55b0 <line:846:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5557f82a53c8 <col:3> '_Bool' lvalue Var 0x5557f829acf8 'b$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5557f82a5598 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5557f82a5568 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5557f82a5488 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5557f82a5440 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5557f82a5428 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5557f82a53e8 <col:20> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5557f82a5470 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5557f82a5458 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5557f82a5408 <col:38> '_Bool' lvalue Var 0x5557f829acf8 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5557f82a5520 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5557f82a54d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5557f82a54a8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5557f82a5550 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5557f82a5538 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5557f82a5500 <col:66> '_Bool' lvalue Var 0x5557f829acf8 'b$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5557f82a5898 <line:847:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5557f82a55d0 <col:3> '_Bool' lvalue Var 0x5557f829af70 'b$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5557f82a5880 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5557f82a5850 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5557f82a5770 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5557f82a5690 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5557f82a5648 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5557f82a5630 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5557f82a55f0 <col:20> '_Bool' lvalue Var 0x5557f829b340 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5557f82a5678 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5557f82a5660 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5557f82a5610 <col:38> '_Bool' lvalue Var 0x5557f829acf8 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5557f82a5750 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5557f82a5708 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5557f82a56f0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5557f82a56b0 <col:56> '_Bool' lvalue Var 0x5557f829b438 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5557f82a5738 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5557f82a5720 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5557f82a56d0 <col:74> '_Bool' lvalue Var 0x5557f829af70 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5557f82a5808 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5557f82a57c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5557f82a5790 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5557f82a5838 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5557f82a5820 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5557f82a57e8 <col:102> '_Bool' lvalue Var 0x5557f829af70 'b$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5557f82a58f0 <line:848:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5557f82a58d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5557f82a58b8 <col:3> 'void ()' Function 0x5557f8241410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5557f82a5948 <line:849:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5557f82a5930 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5557f82a5910 <col:3> 'void ()' Function 0x5557f8241350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5557f82a5cb0 <line:850:3, col:105> '_Bool' '='
    | |-DeclRefExpr 0x5557f82a5968 <col:3> '_Bool' lvalue Var 0x5557f829b528 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5557f82a5c98 <col:21, col:105> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5557f82a5c80 <col:21, col:105> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5557f82a5c60 <col:22, col:105> 'int'
    |       `-BinaryOperator 0x5557f82a5c40 <col:23, col:104> 'int' '&&'
    |         |-BinaryOperator 0x5557f82a5ba8 <col:23, col:76> 'int' '&&'
    |         | |-BinaryOperator 0x5557f82a5b10 <col:23, col:48> 'int' '&&'
    |         | | |-BinaryOperator 0x5557f82a5a78 <col:23, col:38> 'int' '&&'
    |         | | | |-BinaryOperator 0x5557f82a59e0 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x5557f82a59c8 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x5557f82a5988 <col:23> 'int' lvalue Var 0x5557f829b628 'x' 'int'
    |         | | | | `-IntegerLiteral 0x5557f82a59a8 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x5557f82a5a58 <col:33, col:38> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x5557f82a5a40 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x5557f82a5a00 <col:33> 'int' lvalue Var 0x5557f829b748 'y' 'int'
    |         | | |   `-IntegerLiteral 0x5557f82a5a20 <col:38> 'int' 2
    |         | | `-BinaryOperator 0x5557f82a5af0 <col:43, col:48> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5557f82a5ad8 <col:43> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5557f82a5a98 <col:43> 'int' lvalue Var 0x5557f829b868 'z' 'int'
    |         | |   `-IntegerLiteral 0x5557f82a5ab8 <col:48> 'int' 2
    |         | `-BinaryOperator 0x5557f82a5b88 <col:53, col:76> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5557f82a5b70 <col:53> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5557f82a5b30 <col:53> 'int' lvalue Var 0x5557f829a808 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x5557f82a5b50 <col:76> 'int' 1
    |         `-BinaryOperator 0x5557f82a5c20 <col:81, col:104> 'int' '=='
    |           |-ImplicitCastExpr 0x5557f82a5c08 <col:81> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5557f82a5bc8 <col:81> 'int' lvalue Var 0x5557f829a928 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x5557f82a5be8 <col:104> 'int' 0
    |-CallExpr 0x5557f82a5d08 <line:851:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5557f82a5cf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5557f82a5cd0 <col:3> 'void ()' Function 0x5557f8241410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5557f82a5d80 <line:852:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5557f82a5d68 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5557f82a5d28 <col:3> 'void (int)' Function 0x5557f82410d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5557f82a5dc0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5557f82a5da8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5557f82a5d48 <col:21> '_Bool' lvalue Var 0x5557f829b528 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5557f82a5df8 <line:853:3, col:10>
      `-IntegerLiteral 0x5557f82a5dd8 <col:10> 'int' 0
