TranslationUnitDecl 0x559af76c1f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x559af76c2848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x559af76c2520 '__int128'
|-TypedefDecl 0x559af76c28b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x559af76c2540 'unsigned __int128'
|-TypedefDecl 0x559af76c2bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x559af76c2990 'struct __NSConstantString_tag'
|   `-Record 0x559af76c2910 '__NSConstantString_tag'
|-TypedefDecl 0x559af76c2c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x559af76c2c20 'char *'
|   `-BuiltinType 0x559af76c2020 'char'
|-TypedefDecl 0x559af7701b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x559af76c2f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x559af76c2d40 'struct __va_list_tag'
|     `-Record 0x559af76c2cc0 '__va_list_tag'
|-FunctionDecl 0x559af7701c80 <pthread-wmm/safe028_rmo.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x559af7701e50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x559af7701d80 <col:31> col:34 'int'
|-FunctionDecl 0x559af7701fc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x559af77020f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x559af7702238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x559af77021a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x559af7702468 <col:40, col:99>
|   |-IfStmt 0x559af7702438 <col:42, col:88>
|   | |-UnaryOperator 0x559af7702318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x559af7702300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x559af77022e0 <col:47> 'int' lvalue ParmVar 0x559af77021a8 'expression' 'int'
|   | `-CompoundStmt 0x559af7702420 <col:59, col:88>
|   |   `-LabelStmt 0x559af7702408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x559af7702398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x559af7702380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x559af7702330 <col:68> 'void () __attribute__((noreturn))' Function 0x559af77020f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x559af7702450 <col:89>
|   `-ReturnStmt 0x559af7702458 <col:91>
|-FunctionDecl 0x559af77024b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x559af7702570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x559af77028f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559af7702628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x559af77026a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x559af7702728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x559af77027a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x559af77029b0 <line:11:22>
|-FunctionDecl 0x559af7727f10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559af7702a20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x559af7702aa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x559af7727d40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x559af7727dc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x559af7727fd0 <line:14:22>
|-FunctionDecl 0x559af7728280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559af7728040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x559af77280c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x559af7728140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x559af7728338 <line:16:22>
|-TypedefDecl 0x559af77283a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x559af76c20e0 'unsigned char'
|-TypedefDecl 0x559af7728418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x559af76c2100 'unsigned short'
|-TypedefDecl 0x559af7728488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x559af76c2120 'unsigned int'
|-TypedefDecl 0x559af77284f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x559af76c2140 'unsigned long'
|-TypedefDecl 0x559af7728568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x559af76c2040 'signed char'
|-TypedefDecl 0x559af77285d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x559af76c20e0 'unsigned char'
|-TypedefDecl 0x559af7728648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x559af76c2060 'short'
|-TypedefDecl 0x559af77286b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x559af76c2100 'unsigned short'
|-TypedefDecl 0x559af7728728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x559af76c2080 'int'
|-TypedefDecl 0x559af7728798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x559af76c2120 'unsigned int'
|-TypedefDecl 0x559af7728808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x559af76c20a0 'long'
|-TypedefDecl 0x559af7728878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x559af76c2140 'unsigned long'
|-TypedefDecl 0x559af77288e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x559af76c20a0 'long'
|-TypedefDecl 0x559af7728958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x559af76c2140 'unsigned long'
|-TypedefDecl 0x559af77289c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x559af76c2140 'unsigned long'
|-TypedefDecl 0x559af7728a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x559af76c2120 'unsigned int'
|-TypedefDecl 0x559af7728aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x559af76c2120 'unsigned int'
|-TypedefDecl 0x559af7728b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x559af76c2140 'unsigned long'
|-TypedefDecl 0x559af7728b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x559af76c2140 'unsigned long'
|-TypedefDecl 0x559af7728bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x559af76c2120 'unsigned int'
|-TypedefDecl 0x559af7728c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x559af76c2140 'unsigned long'
|-TypedefDecl 0x559af7728cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x559af76c20a0 'long'
|-TypedefDecl 0x559af7728d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x559af76c20a0 'long'
|-TypedefDecl 0x559af7728dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x559af76c2080 'int'
|-RecordDecl 0x559af7728e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x559af7728f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x559af7729030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x559af7728fd0 'struct __fsid_t' sugar
|   `-RecordType 0x559af7728eb0 '__fsid_t'
|     `-Record 0x559af7728e30 ''
|-TypedefDecl 0x559af77290b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x559af76c20a0 'long'
|-TypedefDecl 0x559af7729128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x559af76c2140 'unsigned long'
|-TypedefDecl 0x559af7729198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x559af76c2140 'unsigned long'
|-TypedefDecl 0x559af7729208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x559af76c2120 'unsigned int'
|-TypedefDecl 0x559af7729278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x559af76c20a0 'long'
|-TypedefDecl 0x559af77292e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x559af76c2120 'unsigned int'
|-TypedefDecl 0x559af7729358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x559af76c20a0 'long'
|-TypedefDecl 0x559af77293c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x559af76c2080 'int'
|-TypedefDecl 0x559af7729438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x559af76c2080 'int'
|-TypedefDecl 0x559af77294a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x559af76c2080 'int'
|-TypedefDecl 0x559af7729518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x559af76c27a0 'void *'
|   `-BuiltinType 0x559af76c1fe0 'void'
|-TypedefDecl 0x559af7729588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x559af76c20a0 'long'
|-TypedefDecl 0x559af77295f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x559af76c20a0 'long'
|-TypedefDecl 0x559af7729668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x559af76c20a0 'long'
|-TypedefDecl 0x559af77296d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x559af76c2140 'unsigned long'
|-TypedefDecl 0x559af7729748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x559af76c2140 'unsigned long'
|-TypedefDecl 0x559af77297b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x559af76c2140 'unsigned long'
|-TypedefDecl 0x559af7729828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x559af76c2140 'unsigned long'
|-TypedefDecl 0x559af7729898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x559af76c20a0 'long'
|-TypedefDecl 0x559af7729908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x559af76c20a0 'long'
|-TypedefDecl 0x559af7729978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x559af76c20a0 'long'
|-TypedefDecl 0x559af77299e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x559af76c2140 'unsigned long'
|-TypedefDecl 0x559af7729a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x559af7729a40 '__off64_t' sugar
|   |-Typedef 0x559af7728d68 '__off64_t'
|   `-BuiltinType 0x559af76c20a0 'long'
|-TypedefDecl 0x559af7729b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x559af7729b30 '__quad_t *'
|   `-TypedefType 0x559af7729ad0 '__quad_t' sugar
|     |-Typedef 0x559af77288e8 '__quad_t'
|     `-BuiltinType 0x559af76c20a0 'long'
|-TypedefDecl 0x559af7729be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x559af76c2c20 'char *'
|   `-BuiltinType 0x559af76c2020 'char'
|-TypedefDecl 0x559af7729c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x559af76c20a0 'long'
|-TypedefDecl 0x559af7729cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x559af76c2120 'unsigned int'
|-FunctionDecl 0x559af7729e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x559af7729d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x559af772a148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x559af772a138 <line:73:3, col:34>
|     `-CallExpr 0x559af772a0f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x559af772a0e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x559af772a070 <col:10> '<builtin fn type>' Function 0x559af7729ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x559af772a120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x559af772a090 <col:29> 'unsigned int' lvalue ParmVar 0x559af7729d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x559af7729ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x559af7729f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x559af7729ff0 <col:10> Implicit
| `-ConstAttr 0x559af772a048 <col:10> Implicit
|-FunctionDecl 0x559af772a2a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x559af772a198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x559af772a5b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x559af772a5a8 <line:78:3, col:34>
|     `-CallExpr 0x559af772a568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x559af772a550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x559af772a4d8 <col:10> '<builtin fn type>' Function 0x559af772a348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x559af772a590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x559af772a4f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x559af772a198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x559af772a348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x559af772a3e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x559af772a458 <col:10> Implicit
| `-ConstAttr 0x559af772a4b0 <col:10> Implicit
|-TypedefDecl 0x559af772a5e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x559af76c2140 'unsigned long'
|-TypedefDecl 0x559af772a678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x559af772a640 '__time_t' sugar
|   |-Typedef 0x559af7729278 '__time_t'
|   `-BuiltinType 0x559af76c20a0 'long'
|-RecordDecl 0x559af772a6d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x559af772a788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x559af772a818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x559af772a8a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x559af772a870 '__pid_t' sugar
|   |-Typedef 0x559af7728dd8 '__pid_t'
|   `-BuiltinType 0x559af76c2080 'int'
|-RecordDecl 0x559af772a900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x559af772a9c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x559af772aa10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x559af772aad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x559af772ab38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x559af76c2140 'unsigned long'
|-RecordDecl 0x559af772ab90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x559af772ce70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x559af772cf20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x559af772cec0 'struct cpu_set_t' sugar
|   `-RecordType 0x559af772ac10 'cpu_set_t'
|     `-Record 0x559af772ab90 ''
|-FunctionDecl 0x559af772d1f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x559af772cfc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559af772d0d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x559af772d2a8 <line:108:19>
|-FunctionDecl 0x559af772d480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x559af772d310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x559af772d528 <col:69>
|-FunctionDecl 0x559af772d6a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x559af772d590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x559af772d748 <col:64>
|-FunctionDecl 0x559af772da08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x559af772d7b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559af772d8e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x559af772dab8 <line:114:22>
|-FunctionDecl 0x559af772de60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x559af772db20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559af772dc18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x559af772df10 <col:88>
|-FunctionDecl 0x559af772e1c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x559af772df78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559af772dff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x559af772e088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x559af772e280 <col:62>
|-FunctionDecl 0x559af772e3f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x559af772e2e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x559af772e4a0 <col:63>
|-FunctionDecl 0x559af772e5c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x559af772e668 <col:47>
|-FunctionDecl 0x559af772e770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x559af772e6d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x559af772e818 <col:69>
|-FunctionDecl 0x559af772e920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x559af772e888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x559af772e9c8 <col:69>
|-FunctionDecl 0x559af772ec88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559af772ea30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559af772eb68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x559af772ed38 <col:88>
|-TypedefDecl 0x559af772edc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x559af772ed90 '__clock_t' sugar
|   |-Typedef 0x559af77290b8 '__clock_t'
|   `-BuiltinType 0x559af76c20a0 'long'
|-TypedefDecl 0x559af772f7e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x559af772ee20 '__clockid_t' sugar
|   |-Typedef 0x559af77294a8 '__clockid_t'
|   `-BuiltinType 0x559af76c2080 'int'
|-TypedefDecl 0x559af772f878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x559af772f840 '__timer_t' sugar
|   |-Typedef 0x559af7729518 '__timer_t'
|   `-PointerType 0x559af76c27a0 'void *'
|     `-BuiltinType 0x559af76c1fe0 'void'
|-RecordDecl 0x559af772f8d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x559af772f990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x559af772f9f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x559af772fa60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x559af772fac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x559af772fb30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x559af772fb98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x559af772fc00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x559af772fc68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x559af772fcd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x559af772fd38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x559af772fda0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x559af772fdf0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x559af772feb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x559af772ff28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x559af772ffd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x559af77301a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x559af7730240 <col:45>
|-FunctionDecl 0x559af7730420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x559af7730310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x559af77304c8 <col:54>
|-FunctionDecl 0x559af77306c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x559af7730530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x559af77305a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x559af7730778 <line:158:22>
| `-ConstAttr 0x559af7731410 <col:63>
|-FunctionDecl 0x559af7731610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559af7731508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x559af77316b8 <col:56>
|-FunctionDecl 0x559af7731a60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x559af7731728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x559af77317a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559af7731820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x559af7731918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x559af7731b20 <col:54>
|-RecordDecl 0x559af7731b78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x559af7731c28 parent 0x559af76c1f88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x559af7731e88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x559af7731f28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x559af7731f90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x559af7731ff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x559af77320e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x559af7732208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x559af77321b0 'struct __locale_struct *'
|   `-ElaboratedType 0x559af7732140 'struct __locale_struct' sugar
|     `-RecordType 0x559af7731c00 'struct __locale_struct'
|       `-Record 0x559af7731b78 '__locale_struct'
|-TypedefDecl 0x559af77322b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x559af7732280 '__locale_t' sugar
|   |-Typedef 0x559af7732208 '__locale_t'
|   `-PointerType 0x559af77321b0 'struct __locale_struct *'
|     `-ElaboratedType 0x559af7732140 'struct __locale_struct' sugar
|       `-RecordType 0x559af7731c00 'struct __locale_struct'
|         `-Record 0x559af7731b78 '__locale_struct'
|-FunctionDecl 0x559af77326b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x559af7732328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x559af77323a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559af7732438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x559af77324c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x559af7732540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x559af7732778 <col:40>
|-FunctionDecl 0x559af7732968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x559af7732840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x559af7732a10 <col:66>
|-FunctionDecl 0x559af7732b20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x559af7732a78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x559af7732bc8 <col:69>
|-FunctionDecl 0x559af7732df8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x559af7732c30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559af7732cc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x559af7732ea8 <col:52>
|-FunctionDecl 0x559af7733050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x559af7732f10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559af7732fa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x559af7733100 <col:55>
|-FunctionDecl 0x559af7733298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x559af7733180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x559af7733340 <col:62>
|-FunctionDecl 0x559af7733578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x559af77333a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x559af7733620 <col:60>
|-FunctionDecl 0x559af7733848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x559af77336a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x559af7733720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x559af77338f8 <col:44>
|-FunctionDecl 0x559af7733b08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x559af7733960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559af77339e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x559af7733bb8 <col:49>
|-VarDecl 0x559af7733cb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x559af7733d38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x559af7733db8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x559af7733e80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x559af7733fb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x559af7734050 <col:42>
|-VarDecl 0x559af77340c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x559af7734140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x559af77342c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x559af77341b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x559af7734370 <col:57>
|-FunctionDecl 0x559af77354f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559af77343f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x559af7735598 <col:56>
|-FunctionDecl 0x559af77356a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559af7735618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x559af7735750 <col:59>
|-FunctionDecl 0x559af7735858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x559af77357c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x559af7735900 <col:48>
| `-ConstAttr 0x559af7735958 <col:89>
|-FunctionDecl 0x559af7735bb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x559af7735a08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x559af7735a98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x559af7735e18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559af7735ca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559af7735d38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x559af7735ec8 <col:88>
|-FunctionDecl 0x559af7736060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559af7735f30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559af7735fc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x559af7736110 <col:88>
|-FunctionDecl 0x559af7736328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x559af7736178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559af7736208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x559af77363d8 <line:209:22>
|-FunctionDecl 0x559af7736778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x559af7736440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559af7736500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x559af7736590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x559af7736620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x559af7736a78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x559af7736878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x559af7736950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x559af7736b28 <col:85>
|-FunctionDecl 0x559af7736f18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x559af7736b90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559af7736cc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x559af7736dd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x559af7736fd0 <col:52>
|-FunctionDecl 0x559af7737148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x559af7737038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x559af77371f0 <col:61>
|-FunctionDecl 0x559af7737668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x559af7737258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x559af77372d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x559af7737408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x559af7737510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x559af7737728 <col:62>
|-FunctionDecl 0x559af7737948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x559af7737790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x559af7737820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x559af77379f8 <line:222:22>
|-FunctionDecl 0x559af7737af8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x559af7737a60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x559af7737ba0 <col:65>
|-TypedefDecl 0x559af7737c10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x559af76c2140 'unsigned long'
|-RecordDecl 0x559af7737c68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x559af7737db0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x559af7737e18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559af7737ec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x559af7737e70 'union pthread_attr_t' sugar
|   `-RecordType 0x559af7737cf0 'union pthread_attr_t'
|     `-Record 0x559af7737c68 'pthread_attr_t'
|-RecordDecl 0x559af7737f20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x559af7738098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x559af7738110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x559af77381c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x559af7738160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x559af7737fa0 'struct __pthread_internal_list'
|     `-Record 0x559af7737f20 '__pthread_internal_list'
|-RecordDecl 0x559af7738230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x559af77382d8 parent 0x559af76c1f88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x559af77383b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559af7738418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x559af7738480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x559af773c530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x559af773c598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x559af773c600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x559af773c688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x559af773c740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x559af773c830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x559af773c898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559af773ca20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x559af773c9c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x559af77382b0 'pthread_mutex_t'
|     `-Record 0x559af7738230 ''
|-RecordDecl 0x559af773ca90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x559af773cbd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559af773cc38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559af773ccf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x559af773cc90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x559af773cb10 'pthread_mutexattr_t'
|     `-Record 0x559af773ca90 ''
|-RecordDecl 0x559af773cd60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x559af773ce08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x559af773ced0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559af773cf38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x559af773cfa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x559af773d008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x559af773d070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x559af773d0d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x559af773d140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x559af773d1a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x559af773d260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe028_rmo.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe028_rmo.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x559af773d350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x559af773d3b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x559af773d540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x559af773d490 'union pthread_cond_t' sugar
|   `-RecordType 0x559af773cde0 'pthread_cond_t'
|     `-Record 0x559af773cd60 ''
|-RecordDecl 0x559af773d5b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x559af773d6b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559af773d718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559af773d7d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x559af773d770 'union pthread_condattr_t' sugar
|   `-RecordType 0x559af773d630 'pthread_condattr_t'
|     `-Record 0x559af773d5b0 ''
|-TypedefDecl 0x559af773d858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x559af76c2120 'unsigned int'
|-TypedefDecl 0x559af773d8c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x559af76c2080 'int'
|-RecordDecl 0x559af773d920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x559af773d9c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x559af773da90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559af773daf8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x559af773db60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x559af773dbc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x559af773dc30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x559af773dc98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x559af773dd00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x559af773dd68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x559af773ddd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x559af773de38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x559af773dea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x559af773df50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe028_rmo.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe028_rmo.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x559af773dff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x559af773e060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559af773e1b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x559af773e150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x559af773d9a0 'pthread_rwlock_t'
|     `-Record 0x559af773d920 ''
|-RecordDecl 0x559af773e220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x559af773e360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x559af773e3c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559af773e480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x559af773e420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x559af773e2a0 'pthread_rwlockattr_t'
|     `-Record 0x559af773e220 ''
|-TypedefDecl 0x559af7740560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x559af76c2084 'volatile int' volatile
|   `-BuiltinType 0x559af76c2080 'int'
|-RecordDecl 0x559af77405b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x559af7740700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x559af7740768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559af7740820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x559af77407c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x559af7740640 'pthread_barrier_t'
|     `-Record 0x559af77405b8 ''
|-RecordDecl 0x559af7740890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x559af7740990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559af77409f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559af7740ab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x559af7740a50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x559af7740910 'pthread_barrierattr_t'
|     `-Record 0x559af7740890 ''
|-TypedefDecl 0x559af7740bc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x559af7740b60 'long [8]' 8 
|   `-BuiltinType 0x559af76c20a0 'long'
|-EnumDecl 0x559af7740c20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x559af7740ce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x559af7740d38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x559af7740d88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x559af7740e58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x559af7740ea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x559af7740ef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x559af7740f48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x559af7740fd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x559af7740fb8 <col:26> 'int'
| |   `-DeclRefExpr 0x559af7740f98 <col:26> 'int' EnumConstant 0x559af7740e58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x559af7741058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x559af7741040 <col:29> 'int'
| |   `-DeclRefExpr 0x559af7741020 <col:29> 'int' EnumConstant 0x559af7740ea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x559af77410e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x559af77410c8 <col:30> 'int'
| |   `-DeclRefExpr 0x559af77410a8 <col:30> 'int' EnumConstant 0x559af7740ef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x559af7741168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x559af7741150 <col:27> 'int'
|     `-DeclRefExpr 0x559af7741130 <col:27> 'int' EnumConstant 0x559af7740fd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x559af77411b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x559af7741288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x559af7741310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x559af77412f8 <col:30> 'int'
| |   `-DeclRefExpr 0x559af77412d8 <col:30> 'int' EnumConstant 0x559af7741288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x559af7741360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x559af77413e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x559af77413d0 <col:29> 'int'
|     `-DeclRefExpr 0x559af77413b0 <col:29> 'int' EnumConstant 0x559af7741360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x559af7741438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x559af7741508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x559af7741570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x559af77415c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x559af7741610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x559af77416d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x559af7741728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x559af7741778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x559af7741800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x559af77417e8 <col:31> 'int'
|     `-DeclRefExpr 0x559af77417c8 <col:31> 'int' EnumConstant 0x559af77416d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x559af7741850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x559af7741918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x559af7741968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x559af77419b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x559af7741a88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x559af7741ad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x559af7741b28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x559af7741bf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x559af7741c48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x559af7741c98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x559af7741ed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x559af7741f40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x559af7741fa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x559af77420c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x559af7742118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x559af77421e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x559af7742238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x559af7742288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x559af7742358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x559af77423a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x559af77429d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x559af77424a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x559af77425c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559af77427c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x559af7742840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x559af7742a98 <col:47>
| |-NonNullAttr 0x559af7742af0 <col:77, col:94> 1 3
| `-CallbackAttr 0x559af7742b28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x559af7742c50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x559af7742b80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x559af7742ea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x559af7742d08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x559af7742d88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x559af7743078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x559af7742f68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x559af7743120 <col:60>
|-FunctionDecl 0x559af7743270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x559af7743310 <col:54>
| `-ConstAttr 0x559af7743368 <col:95>
|-FunctionDecl 0x559af7743da0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x559af77433a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559af7743418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x559af7743e50 <line:395:19>
| `-ConstAttr 0x559af7743ea8 <col:60>
|-FunctionDecl 0x559af7744078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x559af7743f40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x559af7744120 <col:71>
| `-NonNullAttr 0x559af7744178 <col:112, col:126> 1
|-FunctionDecl 0x559af7744280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x559af77441c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x559af7744328 <line:398:22>
| `-NonNullAttr 0x559af7744380 <col:63, col:77> 1
|-FunctionDecl 0x559af77445a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x559af77443c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x559af7744448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x559af7744658 <line:401:22>
| `-NonNullAttr 0x559af77446b0 <col:63, col:80> 1 2
|-FunctionDecl 0x559af77448b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559af77446f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559af7744778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x559af7744968 <line:404:22>
| `-NonNullAttr 0x559af77449c0 <col:63, col:77> 1
|-FunctionDecl 0x559af7744c18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x559af7744a08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x559af7744ab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x559af7744cc8 <line:407:22>
| `-NonNullAttr 0x559af7744d20 <col:63, col:80> 1 2
|-FunctionDecl 0x559af7745f78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x559af7745dc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559af7745e38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559af7746028 <line:410:22>
| `-NonNullAttr 0x559af7746080 <col:63, col:77> 1
|-FunctionDecl 0x559af77462b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559af77460c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559af7746158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x559af7746368 <line:413:22>
| `-NonNullAttr 0x559af77463c0 <col:63, col:80> 1 2
|-FunctionDecl 0x559af77465f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559af7746408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x559af7746498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x559af77466a8 <col:37>
| `-NonNullAttr 0x559af7746700 <col:78, col:95> 1 2
|-FunctionDecl 0x559af77468e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559af7746748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559af77467c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x559af7746998 <line:419:22>
| `-NonNullAttr 0x559af77469f0 <col:63, col:80> 1 2
|-FunctionDecl 0x559af7746b78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559af7746a38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559af7746ab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x559af7746c28 <line:421:22>
| `-NonNullAttr 0x559af7746c80 <col:63, col:77> 1
|-FunctionDecl 0x559af7747e58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559af7746cc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559af7746d48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x559af7747f08 <line:424:22>
| `-NonNullAttr 0x559af7747f60 <col:63, col:80> 1 2
|-FunctionDecl 0x559af77480e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559af7747fa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559af7748028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x559af7748198 <line:427:22>
| `-NonNullAttr 0x559af77481f0 <col:63, col:77> 1
|-FunctionDecl 0x559af7748398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559af7748238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559af77482b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x559af7748448 <line:430:22>
| `-NonNullAttr 0x559af77484a0 <col:63, col:80> 1 2
|-FunctionDecl 0x559af7748628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559af77484e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559af7748568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x559af77486d8 <line:432:22>
| `-NonNullAttr 0x559af7748730 <col:63, col:77> 1
|-FunctionDecl 0x559af7748958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x559af7748778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559af77487f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x559af7748a08 <line:435:22>
| |-NonNullAttr 0x559af7748a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x559af7748a98 <col:100> "" ""
|-FunctionDecl 0x559af7748ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x559af7748ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559af7748b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x559af7748d58 <line:438:22>
| |-NonNullAttr 0x559af7748db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x559af7748df8 <col:97> "" ""
|-FunctionDecl 0x559af7748fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x559af7748e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559af7748ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x559af7749098 <line:441:22>
| `-NonNullAttr 0x559af77490f0 <col:63, col:80> 1 2
|-FunctionDecl 0x559af7749270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x559af7749138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559af77491b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559af7749320 <line:444:22>
| `-NonNullAttr 0x559af7749378 <col:63, col:77> 1
|-FunctionDecl 0x559af7749668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x559af77493c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559af7749448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x559af77494c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x559af7749720 <line:448:22>
| `-NonNullAttr 0x559af7749778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x559af7749a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x559af77497d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559af7749850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x559af77498c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559af7749ae0 <col:43>
| `-NonNullAttr 0x559af7749b38 <col:84, col:98> 1
|-FunctionDecl 0x559af7749e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x559af7749b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559af7749c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x559af7749c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x559af7749ef8 <line:453:22>
| `-NonNullAttr 0x559af7749f50 <col:63, col:77> 3
|-FunctionDecl 0x559af774a228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559af7749f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559af774a018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x559af774a0a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x559af774a2e0 <line:457:22>
| `-NonNullAttr 0x559af774a338 <col:63, col:80> 2 3
|-FunctionDecl 0x559af774a528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x559af774a388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559af774a408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x559af774a5d8 <line:459:22>
|-FunctionDecl 0x559af774a9a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x559af774a6a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x559af774a840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x559af774aa58 <col:52, col:69> 1 2
|-FunctionDecl 0x559af774ac00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x559af774aae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x559af774ab60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x559af774ae10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x559af774acc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x559af774ad48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x559af774af68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x559af774aed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x559af774b0a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x559af774b148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x559af774b1f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x559af774b2e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x559af774b350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x559af774b520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe028_rmo.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x559af774b618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x559af774b6d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x559af774b670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x559af774b1d0 '__pthread_unwind_buf_t'
| |   `-Record 0x559af774b148 ''
| `-AlignedAttr 0x559af774b728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x559af774b7a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x559af774b900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x559af774b968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x559af774b9d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x559af774ba38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x559af774bc40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x559af774bb30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x559af774be20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x559af774bcf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x559af774bfe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559af774bed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x559af774c088 <line:488:22>
|-RecordDecl 0x559af774c0e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x559af774c3f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x559af774c258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x559af774c2d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x559af774c4a8 <col:86>
| `-ReturnsTwiceAttr 0x559af774c500 <col:12> Implicit
|-FunctionDecl 0x559af774c828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559af774c5d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x559af774c6e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x559af774c8d8 <line:494:22>
| `-NonNullAttr 0x559af774c930 <col:63, col:77> 1
|-FunctionDecl 0x559af774caa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559af774c978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559af774cb50 <line:496:22>
| `-NonNullAttr 0x559af774cba8 <col:63, col:77> 1
|-FunctionDecl 0x559af774ccb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559af774cbf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559af774cd58 <line:498:22>
| `-NonNullAttr 0x559af774cdb0 <col:52, col:66> 1
|-FunctionDecl 0x559af774cee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559af774ce30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559af774cf90 <line:500:22>
| `-NonNullAttr 0x559af774cfe8 <col:52, col:66> 1
|-FunctionDecl 0x559af774d228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559af774d038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559af774d0c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559af774d2d8 <col:36>
| `-NonNullAttr 0x559af774d330 <col:66, col:83> 1 2
|-FunctionDecl 0x559af774d430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559af774d378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559af774d4d8 <line:505:22>
| `-NonNullAttr 0x559af774d530 <col:52, col:66> 1
|-FunctionDecl 0x559af774d7c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559af774d5e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559af774d660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x559af774d878 <line:509:22>
| `-NonNullAttr 0x559af774d8d0 <col:63, col:80> 1 2
|-FunctionDecl 0x559af774db98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x559af774d918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559af774d998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x559af774da18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x559af774dc50 <line:513:22>
| `-NonNullAttr 0x559af774dca8 <col:63, col:80> 1 3
|-FunctionDecl 0x559af774de40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559af774dcf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559af774dee8 <line:515:22>
| `-NonNullAttr 0x559af774df40 <col:63, col:77> 1
|-FunctionDecl 0x559af774e128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559af774dff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x559af774e1d0 <line:517:22>
| `-NonNullAttr 0x559af774e228 <col:63, col:77> 1
|-FunctionDecl 0x559af774e330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559af774e278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x559af774e3d8 <line:519:22>
| `-NonNullAttr 0x559af774e430 <col:63, col:77> 1
|-FunctionDecl 0x559af774e658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559af774e478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559af774e4f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x559af774e708 <line:523:22>
| `-NonNullAttr 0x559af774e760 <col:63, col:80> 1 2
|-FunctionDecl 0x559af774e968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559af774e7a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559af774e828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x559af774ea18 <line:526:22>
| `-NonNullAttr 0x559af774ea70 <col:63, col:77> 1
|-FunctionDecl 0x559af774ec18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559af774eab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559af774eb38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x559af774ecc8 <line:529:22>
| `-NonNullAttr 0x559af774ed20 <col:63, col:80> 1 2
|-FunctionDecl 0x559af774ff20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559af774ed68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559af774fe60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x559af774ffd0 <line:531:22>
| `-NonNullAttr 0x559af7750028 <col:63, col:77> 1
|-FunctionDecl 0x559af77501d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559af7750078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559af77500f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x559af7750288 <line:535:22>
| `-NonNullAttr 0x559af77502e0 <col:63, col:80> 1 2
|-FunctionDecl 0x559af7750468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559af7750328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559af77503a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x559af7750518 <line:538:22>
| `-NonNullAttr 0x559af7750570 <col:63, col:77> 1
|-FunctionDecl 0x559af7750718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559af77505b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559af7750638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x559af77507c8 <line:542:22>
| `-NonNullAttr 0x559af7750820 <col:63, col:80> 1 2
|-FunctionDecl 0x559af77509a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559af7750868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559af77508e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x559af7750a58 <line:545:22>
| `-NonNullAttr 0x559af7750ab0 <col:63, col:77> 1
|-FunctionDecl 0x559af7750c98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x559af7750af8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x559af7750b78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x559af7750d48 <line:548:22>
| `-NonNullAttr 0x559af7750da0 <col:63, col:80> 1 2
|-FunctionDecl 0x559af7751f58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559af7750de8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559af7751e98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x559af7752008 <line:551:22>
| `-NonNullAttr 0x559af7752060 <col:63, col:77> 1
|-FunctionDecl 0x559af7752398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x559af7752140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559af7752250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x559af7752448 <col:29>
| `-NonNullAttr 0x559af77524a0 <col:70, col:84> 1
|-FunctionDecl 0x559af7752618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559af77524e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559af77526c0 <line:556:22>
| `-NonNullAttr 0x559af7752718 <col:63, col:77> 1
|-FunctionDecl 0x559af7752820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559af7752768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559af77528c8 <line:558:22>
| `-NonNullAttr 0x559af7752920 <col:52, col:66> 1
|-FunctionDecl 0x559af7752a20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559af7752968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559af7752ac8 <line:560:19>
| `-NonNullAttr 0x559af7752b20 <col:49, col:63> 1
|-FunctionDecl 0x559af7752d58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559af7752b68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559af7752bf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559af7752e08 <col:39>
| `-NonNullAttr 0x559af7752e90 <col:69, col:86> 1 2
|-FunctionDecl 0x559af7752f90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559af7752ed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559af7753038 <line:565:22>
| `-NonNullAttr 0x559af7753090 <col:52, col:66> 1
|-FunctionDecl 0x559af7753190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559af77530d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559af7753238 <line:567:22>
| `-NonNullAttr 0x559af7753290 <col:52, col:66> 1
|-FunctionDecl 0x559af7753448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559af77532d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559af7753368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559af77534f8 <col:39>
| `-NonNullAttr 0x559af7753550 <col:69, col:86> 1 2
|-FunctionDecl 0x559af7753650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559af7753598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559af77536f8 <line:572:22>
| `-NonNullAttr 0x559af7753750 <col:52, col:66> 1
|-FunctionDecl 0x559af7753938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x559af7753800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x559af77539e0 <line:574:22>
| `-NonNullAttr 0x559af7753a38 <col:63, col:77> 1
|-FunctionDecl 0x559af7753b40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x559af7753a88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x559af7753be8 <line:576:22>
| `-NonNullAttr 0x559af7753c40 <col:63, col:77> 1
|-FunctionDecl 0x559af7753ea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559af7753c88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x559af7753d08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x559af7753f50 <line:580:22>
| `-NonNullAttr 0x559af7753fa8 <col:63, col:80> 1 2
|-FunctionDecl 0x559af77541b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x559af7753ff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x559af7754078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x559af7754268 <line:583:22>
| `-NonNullAttr 0x559af77542c0 <col:63, col:77> 1
|-FunctionDecl 0x559af7754468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559af7754308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x559af7754388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x559af7754518 <line:587:22>
| `-NonNullAttr 0x559af7754570 <col:63, col:80> 1 2
|-FunctionDecl 0x559af77546f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x559af77545b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x559af7754638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x559af77547a8 <col:36>
| `-NonNullAttr 0x559af7754800 <col:77, col:91> 1
|-FunctionDecl 0x559af7754b38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x559af77548e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559af77549f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x559af7754be8 <line:592:22>
| `-NonNullAttr 0x559af7754c40 <col:63, col:77> 1
|-FunctionDecl 0x559af7754db8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559af7754c88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559af7754e60 <line:594:22>
| `-NonNullAttr 0x559af7754ee0 <col:63, col:77> 1
|-FunctionDecl 0x559af7754fe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559af7754f28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559af7755088 <line:596:22>
| `-NonNullAttr 0x559af77550e0 <col:52, col:66> 1
|-FunctionDecl 0x559af77551e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559af7755128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559af7755288 <line:598:22>
| `-NonNullAttr 0x559af77552e0 <col:52, col:66> 1
|-FunctionDecl 0x559af7755508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x559af7755328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559af77553a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x559af77555b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x559af77558e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559af7755638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559af77556b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559af7755740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x559af77559a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x559af7755bb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x559af7755a80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x559af7755c60 <line:607:22>
| `-NonNullAttr 0x559af7755cb8 <col:63, col:77> 1
|-FunctionDecl 0x559af7755dc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x559af7755d08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x559af7755e68 <line:609:22>
| `-NonNullAttr 0x559af7755ef0 <col:63, col:77> 1
|-FunctionDecl 0x559af7756118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559af7755f38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x559af7755fb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x559af77561c8 <line:613:22>
| `-NonNullAttr 0x559af7756220 <col:63, col:80> 1 2
|-FunctionDecl 0x559af7756428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x559af7756268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x559af77562e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x559af77564d8 <col:37>
| `-NonNullAttr 0x559af7756530 <col:78, col:92> 1
|-FunctionDecl 0x559af7756748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x559af7756578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x559af7756620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x559af77567f8 <line:619:22>
| `-NonNullAttr 0x559af7756850 <col:63, col:80> 1 2
|-FunctionDecl 0x559af7756a18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x559af7756898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x559af7756910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x559af7756ac8 <line:622:22>
| `-NonNullAttr 0x559af7756b20 <col:63, col:77> 1
|-FunctionDecl 0x559af7756dc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x559af7756c00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x559af7756c80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x559af7756e78 <line:624:22>
| `-NonNullAttr 0x559af7756f00 <col:63, col:77> 1
|-FunctionDecl 0x559af7757078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559af7756f48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559af7757120 <line:626:22>
| `-NonNullAttr 0x559af7757178 <col:63, col:77> 1
|-FunctionDecl 0x559af7757280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559af77571c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559af7757328 <line:628:22>
| `-NonNullAttr 0x559af7757380 <col:52, col:66> 1
|-FunctionDecl 0x559af7757480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559af77573c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559af7757528 <line:630:22>
| `-NonNullAttr 0x559af7757580 <col:52, col:66> 1
|-FunctionDecl 0x559af7757680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559af77575c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559af7757728 <line:632:22>
| `-NonNullAttr 0x559af7757780 <col:52, col:66> 1
|-FunctionDecl 0x559af7757b58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x559af7757860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x559af7757970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x559af77579f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x559af7757c10 <line:636:22>
| `-NonNullAttr 0x559af7757c68 <col:63, col:77> 1
|-FunctionDecl 0x559af7757de8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x559af7757cb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x559af7757e90 <line:638:22>
| `-NonNullAttr 0x559af7757f10 <col:63, col:77> 1
|-FunctionDecl 0x559af7758010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x559af7757f58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x559af77580b8 <line:640:22>
| `-NonNullAttr 0x559af7758110 <col:52, col:66> 1
|-FunctionDecl 0x559af77582f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x559af77581c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x559af77583a0 <line:642:22>
| `-NonNullAttr 0x559af77583f8 <col:63, col:77> 1
|-FunctionDecl 0x559af7758500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x559af7758448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x559af77585a8 <line:644:22>
| `-NonNullAttr 0x559af7758600 <col:63, col:77> 1
|-FunctionDecl 0x559af7758828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559af7758648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x559af77586c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x559af77588d8 <line:648:22>
| `-NonNullAttr 0x559af7758930 <col:63, col:80> 1 2
|-FunctionDecl 0x559af7758b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x559af7758978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x559af77589f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x559af7758be8 <line:651:22>
| `-NonNullAttr 0x559af7758c40 <col:63, col:77> 1
|-FunctionDecl 0x559af7758fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x559af7758d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x559af7758e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x559af7759058 <line:654:22>
| `-NonNullAttr 0x559af77590b0 <col:63, col:77> 1
|-FunctionDecl 0x559af7759208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x559af77590f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x559af77592b0 <col:69>
|-FunctionDecl 0x559af7759428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x559af7759318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x559af77594d0 <col:72>
|-FunctionDecl 0x559af7759708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x559af7759538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x559af77595e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x559af77597b8 <col:44>
|-FunctionDecl 0x559af77599d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x559af7759820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559af7759898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x559af7759a88 <line:661:22>
| `-NonNullAttr 0x559af7759ae0 <col:63, col:77> 2
|-FunctionDecl 0x559af775af50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x559af7759bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x559af7759cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x559af7759de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x559af775b008 <col:47>
|-FunctionDecl 0x559af775b110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x559af775b078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559af775b268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x559af775b1d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559af775b3c0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x559af775b328 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559af775b488 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x559af775b548 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x559af775b608 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x559af775b6c0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x559af775b740 prev 0x559af775b6c0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x559af775b7a8 <col:24> 'int' 0
|-VarDecl 0x559af775b7e0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x559af775b860 prev 0x559af775b7e0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x559af775b8c8 <col:27> 'int' 0
|-VarDecl 0x559af775b900 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x559af775b980 prev 0x559af775b900 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x559af775b9e8 <col:27> 'int' 0
|-VarDecl 0x559af775ba18 <line:678:1, col:7> col:7 __unbuffered_p2_EAX$flush_delayed '_Bool'
|-VarDecl 0x559af775ba98 <line:679:1, col:5> col:5 __unbuffered_p2_EAX$mem_tmp 'int'
|-VarDecl 0x559af775bb10 <line:680:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x559af775bb88 <line:681:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x559af775bc00 <line:682:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x559af775bc78 <line:683:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x559af775bcf0 <line:684:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x559af775bd68 <line:685:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x559af775bde0 <line:686:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x559af775be58 <line:687:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x559af775bf20 <line:688:1, col:7> col:7 used __unbuffered_p2_EAX$read_delayed '_Bool'
|-VarDecl 0x559af775bfa0 <line:689:1, col:6> col:6 used __unbuffered_p2_EAX$read_delayed_var 'int *'
|-VarDecl 0x559af775c020 <line:690:1, col:5> col:5 __unbuffered_p2_EAX$w_buff0 'int'
|-VarDecl 0x559af775c098 <line:691:1, col:7> col:7 __unbuffered_p2_EAX$w_buff0_used '_Bool'
|-VarDecl 0x559af775c118 <line:692:1, col:5> col:5 __unbuffered_p2_EAX$w_buff1 'int'
|-VarDecl 0x559af775c190 <line:693:1, col:7> col:7 __unbuffered_p2_EAX$w_buff1_used '_Bool'
|-VarDecl 0x559af775c210 <line:694:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x559af775c290 prev 0x559af775c210 <line:695:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x559af775c2f8 <col:27> 'int' 0
|-VarDecl 0x559af775c328 <line:696:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x559af775c3a0 <line:697:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x559af775c420 <line:698:1, col:5> col:5 used x 'int'
|-VarDecl 0x559af775c4a0 prev 0x559af775c420 <line:699:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x559af775c508 <col:9> 'int' 0
|-VarDecl 0x559af775c538 <line:700:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x559af775c5b8 <line:701:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x559af775c630 <line:702:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x559af775c6a8 <line:703:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x559af775c720 <line:704:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x559af775c798 <line:705:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x559af775c810 <line:706:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x559af775c888 <line:707:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x559af775c900 <line:708:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x559af775c978 <line:709:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x559af775c9f0 <line:710:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x559af775ca70 <line:711:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x559af775caf0 <line:712:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x559af775cb68 <line:713:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x559af775cbe8 <line:714:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x559af775cc60 <line:715:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x559af775cce0 <line:716:1, col:5> col:5 used y 'int'
|-VarDecl 0x559af775cd60 prev 0x559af775cce0 <line:717:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x559af775cdc8 <col:9> 'int' 0
|-VarDecl 0x559af775cdf8 <line:718:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x559af775ce70 <line:719:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x559af775cf30 <line:720:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x559af775d048 prev 0x559af775b110 <line:721:1, line:750:1> line:721:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x559af775cfb0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559af7760098 <line:722:1, line:750:1>
|   |-CallExpr 0x559af775d158 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559af775d140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559af775d0f0 <col:3> 'void ()' Function 0x559af77024b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559af775d1b8 <line:724:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559af775d178 <col:3> 'int' lvalue Var 0x559af775cd60 'y' 'int'
|   | `-IntegerLiteral 0x559af775d198 <col:7> 'int' 1
|   |-CallExpr 0x559af775d210 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559af775d1f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559af775d1d8 <col:3> 'void ()' Function 0x559af7702570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559af775d268 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559af775d250 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559af775d230 <col:3> 'void ()' Function 0x559af77024b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x559af775d2c0 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559af775d2a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559af775d288 <col:3> 'void ()' Function 0x559af7702570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559af775d318 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559af775d300 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559af775d2e0 <col:3> 'void ()' Function 0x559af77024b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559af775d3e8 <line:729:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x559af775d338 <col:3> '_Bool' lvalue Var 0x559af775cdf8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x559af775d3c8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x559af775d3b0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x559af775d358 <col:19> '_Bool (void)' Function 0x559af7701c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x559af775d480 <line:730:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x559af775d408 <col:3> '_Bool' lvalue Var 0x559af775cf30 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x559af775d460 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x559af775d448 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x559af775d428 <col:19> '_Bool (void)' Function 0x559af7701c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x559af775d4f8 <line:731:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x559af775d4a0 <col:3> '_Bool' lvalue Var 0x559af775c538 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x559af775d4e0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559af775d4c0 <col:21> '_Bool' lvalue Var 0x559af775cf30 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x559af775d570 <line:732:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559af775d518 <col:3> 'int' lvalue Var 0x559af775c5b8 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x559af775d558 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559af775d538 <col:15> 'int' lvalue Var 0x559af775c4a0 'x' 'int'
|   |-BinaryOperator 0x559af775d9a8 <line:733:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x559af775d590 <col:3> 'int' lvalue Var 0x559af775c4a0 'x' 'int'
|   | `-ConditionalOperator 0x559af775d978 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x559af775d7a0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x559af775d6c0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x559af775d5e8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x559af775d5d0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x559af775d5b0 <col:8> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x559af775d6a0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x559af775d638 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x559af775d620 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x559af775d600 <col:27> '_Bool' lvalue Var 0x559af775c6a8 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x559af775d688 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x559af775d670 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x559af775d650 <col:46> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x559af775d780 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x559af775d718 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x559af775d700 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x559af775d6e0 <col:65> '_Bool' lvalue Var 0x559af775c6a8 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x559af775d768 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x559af775d750 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x559af775d730 <col:84> '_Bool' lvalue Var 0x559af775c888 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x559af775d960 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559af775d7c0 <col:101> 'int' lvalue Var 0x559af775c4a0 'x' 'int'
|   |   `-ParenExpr 0x559af775d940 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x559af775d910 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x559af775d880 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559af775d838 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559af775d820 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559af775d7e0 <col:106> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559af775d868 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559af775d850 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559af775d800 <col:124> '_Bool' lvalue Var 0x559af775c6a8 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x559af775d8e0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559af775d8a0 <col:141> 'int' lvalue Var 0x559af775caf0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x559af775d8f8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559af775d8c0 <col:153> 'int' lvalue Var 0x559af775cbe8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x559af775deb8 <line:734:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559af775d9c8 <col:3> 'int' lvalue Var 0x559af775caf0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x559af775de88 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559af775de58 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559af775de40 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559af775d9e8 <col:15> '_Bool' lvalue Var 0x559af775cf30 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559af775de70 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559af775da08 <col:31> 'int' lvalue Var 0x559af775caf0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x559af775de20 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559af775ddf0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559af775dc18 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559af775db38 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559af775da60 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559af775da48 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559af775da28 <col:45> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559af775db18 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559af775dab0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559af775da98 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559af775da78 <col:64> '_Bool' lvalue Var 0x559af775c6a8 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x559af775db00 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559af775dae8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559af775dac8 <col:83> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559af775dbf8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559af775db90 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559af775db78 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559af775db58 <col:102> '_Bool' lvalue Var 0x559af775c6a8 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x559af775dbe0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559af775dbc8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559af775dba8 <col:121> '_Bool' lvalue Var 0x559af775c888 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x559af775ddd8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559af775dc38 <col:138> 'int' lvalue Var 0x559af775caf0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x559af775ddb8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559af775dd88 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559af775dcf8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559af775dcb0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559af775dc98 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559af775dc58 <col:151> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559af775dce0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559af775dcc8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559af775dc78 <col:169> '_Bool' lvalue Var 0x559af775c6a8 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x559af775dd58 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559af775dd18 <col:186> 'int' lvalue Var 0x559af775caf0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x559af775dd70 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559af775dd38 <col:198> 'int' lvalue Var 0x559af775caf0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x559af775e3f0 <line:735:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559af775ded8 <col:3> 'int' lvalue Var 0x559af775cbe8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x559af775e3c0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559af775e390 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559af775e378 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559af775def8 <col:15> '_Bool' lvalue Var 0x559af775cf30 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559af775e3a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559af775df40 <col:31> 'int' lvalue Var 0x559af775cbe8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x559af775e358 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559af775e328 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559af775e150 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559af775e070 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559af775df98 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559af775df80 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559af775df60 <col:45> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559af775e050 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559af775dfe8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559af775dfd0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559af775dfb0 <col:64> '_Bool' lvalue Var 0x559af775c6a8 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x559af775e038 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559af775e020 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559af775e000 <col:83> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559af775e130 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559af775e0c8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559af775e0b0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559af775e090 <col:102> '_Bool' lvalue Var 0x559af775c6a8 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x559af775e118 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559af775e100 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559af775e0e0 <col:121> '_Bool' lvalue Var 0x559af775c888 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x559af775e310 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559af775e170 <col:138> 'int' lvalue Var 0x559af775cbe8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x559af775e2f0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559af775e2c0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559af775e230 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559af775e1e8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559af775e1d0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559af775e190 <col:151> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559af775e218 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559af775e200 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559af775e1b0 <col:169> '_Bool' lvalue Var 0x559af775c6a8 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x559af775e290 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559af775e250 <col:186> 'int' lvalue Var 0x559af775cbe8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x559af775e2a8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559af775e270 <col:198> 'int' lvalue Var 0x559af775cbe8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x559af775e998 <line:736:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559af775e410 <col:3> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559af775e980 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559af775e950 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559af775e908 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559af775e8f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559af775e430 <col:20> '_Bool' lvalue Var 0x559af775cf30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559af775e938 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559af775e920 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559af775e450 <col:36> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x559af775e8d0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559af775e8a0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559af775e660 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559af775e580 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559af775e4a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559af775e490 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559af775e470 <col:55> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559af775e560 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559af775e4f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559af775e4e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559af775e4c0 <col:74> '_Bool' lvalue Var 0x559af775c6a8 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x559af775e548 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559af775e530 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559af775e510 <col:93> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559af775e640 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559af775e5d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559af775e5c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559af775e5a0 <col:112> '_Bool' lvalue Var 0x559af775c6a8 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x559af775e628 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559af775e610 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559af775e5f0 <col:131> '_Bool' lvalue Var 0x559af775c888 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x559af775e888 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559af775e870 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559af775e680 <col:148> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x559af775e850 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559af775e820 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559af775e740 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559af775e6f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559af775e6e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559af775e6a0 <col:166> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559af775e728 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559af775e710 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559af775e6c0 <col:184> '_Bool' lvalue Var 0x559af775c6a8 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x559af775e7d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559af775e790 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559af775e760 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559af775e808 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559af775e7f0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559af775e7b8 <col:212> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559af775ef98 <line:737:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559af775e9b8 <col:3> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559af775ef80 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559af775ef50 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559af775eed0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559af775eeb8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559af775e9d8 <col:20> '_Bool' lvalue Var 0x559af775cf30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559af775ef00 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559af775eee8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559af775e9f8 <col:36> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x559af775ee98 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559af775ee68 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559af775ec08 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559af775eb28 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559af775ea50 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559af775ea38 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559af775ea18 <col:55> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559af775eb08 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559af775eaa0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559af775ea88 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559af775ea68 <col:74> '_Bool' lvalue Var 0x559af775c6a8 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x559af775eaf0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559af775ead8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559af775eab8 <col:93> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559af775ebe8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559af775eb80 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559af775eb68 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559af775eb48 <col:112> '_Bool' lvalue Var 0x559af775c6a8 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x559af775ebd0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559af775ebb8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559af775eb98 <col:131> '_Bool' lvalue Var 0x559af775c888 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x559af775ee50 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559af775ee38 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559af775ec28 <col:148> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x559af775ee18 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559af775ede8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559af775ece8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559af775eca0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559af775ec88 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559af775ec48 <col:166> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559af775ecd0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559af775ecb8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559af775ec68 <col:184> '_Bool' lvalue Var 0x559af775c6a8 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x559af775edb8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559af775ed38 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559af775ed08 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559af775edd0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559af775ed90 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559af775ed60 <col:219> 'int' 0
|   |-BinaryOperator 0x559af775f540 <line:738:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559af775efb8 <col:3> '_Bool' lvalue Var 0x559af775c6a8 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559af775f528 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559af775f4f8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559af775f4b0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559af775f498 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559af775efd8 <col:20> '_Bool' lvalue Var 0x559af775cf30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559af775f4e0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559af775f4c8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559af775eff8 <col:36> '_Bool' lvalue Var 0x559af775c6a8 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x559af775f478 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559af775f448 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559af775f208 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559af775f128 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559af775f050 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559af775f038 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559af775f018 <col:55> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559af775f108 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559af775f0a0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559af775f088 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559af775f068 <col:74> '_Bool' lvalue Var 0x559af775c6a8 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x559af775f0f0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559af775f0d8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559af775f0b8 <col:93> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559af775f1e8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559af775f180 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559af775f168 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559af775f148 <col:112> '_Bool' lvalue Var 0x559af775c6a8 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x559af775f1d0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559af775f1b8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559af775f198 <col:131> '_Bool' lvalue Var 0x559af775c888 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x559af775f430 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559af775f418 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559af775f228 <col:148> '_Bool' lvalue Var 0x559af775c6a8 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x559af775f3f8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559af775f3c8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559af775f2e8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559af775f2a0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559af775f288 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559af775f248 <col:166> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559af775f2d0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559af775f2b8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559af775f268 <col:184> '_Bool' lvalue Var 0x559af775c6a8 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x559af775f380 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559af775f338 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559af775f308 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559af775f3b0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559af775f398 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559af775f360 <col:212> '_Bool' lvalue Var 0x559af775c6a8 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x559af775fb08 <line:739:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559af775f560 <col:3> '_Bool' lvalue Var 0x559af775c888 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559af775faf0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559af775fac0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559af775fa78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559af775fa60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559af775f580 <col:20> '_Bool' lvalue Var 0x559af775cf30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559af775faa8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559af775fa90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559af775f5a0 <col:36> '_Bool' lvalue Var 0x559af775c888 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x559af775fa40 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559af775fa10 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559af775f7b0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559af775f6d0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559af775f5f8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559af775f5e0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559af775f5c0 <col:55> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559af775f6b0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559af775f648 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559af775f630 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559af775f610 <col:74> '_Bool' lvalue Var 0x559af775c6a8 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x559af775f698 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559af775f680 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559af775f660 <col:93> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559af775f790 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559af775f728 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559af775f710 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559af775f6f0 <col:112> '_Bool' lvalue Var 0x559af775c6a8 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x559af775f778 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559af775f760 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559af775f740 <col:131> '_Bool' lvalue Var 0x559af775c888 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x559af775f9f8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559af775f9e0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559af775f7d0 <col:148> '_Bool' lvalue Var 0x559af775c888 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x559af775f9c0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559af775f990 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559af775f890 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559af775f848 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559af775f830 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559af775f7f0 <col:166> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559af775f878 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559af775f860 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559af775f810 <col:184> '_Bool' lvalue Var 0x559af775c6a8 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x559af775f960 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559af775f8e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559af775f8b0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559af775f978 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559af775f938 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559af775f908 <col:219> 'int' 0
|   |-BinaryOperator 0x559af775fb80 <line:740:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559af775fb28 <col:3> 'int' lvalue Var 0x559af775b860 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x559af775fb68 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559af775fb48 <col:25> 'int' lvalue Var 0x559af775c4a0 'x' 'int'
|   |-BinaryOperator 0x559af775fcb0 <line:741:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x559af775fba0 <col:3> 'int' lvalue Var 0x559af775c4a0 'x' 'int'
|   | `-ConditionalOperator 0x559af775fc80 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x559af775fc38 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559af775fc20 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559af775fbc0 <col:7> '_Bool' lvalue Var 0x559af775c538 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x559af775fc50 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559af775fbe0 <col:25> 'int' lvalue Var 0x559af775c5b8 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x559af775fc68 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x559af775fc00 <col:37> 'int' lvalue Var 0x559af775c4a0 'x' 'int'
|   |-BinaryOperator 0x559af775fd48 <line:742:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x559af775fcd0 <col:3> '_Bool' lvalue Var 0x559af775c538 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x559af775fd20 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559af775fcf0 <col:28> 'int' 0
|   |-CallExpr 0x559af775fda0 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559af775fd88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559af775fd68 <col:3> 'void ()' Function 0x559af7702570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559af775fdf8 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559af775fde0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559af775fdc0 <col:3> 'void ()' Function 0x559af77024b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x559af775fe50 <line:745:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559af775fe38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559af775fe18 <col:3> 'void ()' Function 0x559af7702570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559af775fea8 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559af775fe90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559af775fe70 <col:3> 'void ()' Function 0x559af77024b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559af775ff80 <line:747:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559af775fec8 <col:3> 'int' lvalue Var 0x559af775b740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559af775ff60 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559af775ff28 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559af775fee8 <col:22> 'int' lvalue Var 0x559af775b740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559af775ff08 <col:41> 'int' 1
|   |-CallExpr 0x559af775ffd8 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559af775ffc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559af775ffa0 <col:3> 'void ()' Function 0x559af7702570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559af7760088 <line:749:3, col:36>
|     `-CallExpr 0x559af7760068 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559af7760050 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559af775fff8 <col:10> 'void *(void)' Function 0x559af7701fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559af7760230 prev 0x559af775b268 <line:751:1, line:767:1> line:751:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x559af7760198 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559af7761348 <line:752:1, line:767:1>
|   |-CallExpr 0x559af7760310 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559af77602f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559af77602d8 <col:3> 'void ()' Function 0x559af77024b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559af7760370 <line:754:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559af7760330 <col:3> 'int' lvalue Var 0x559af775c4a0 'x' 'int'
|   | `-IntegerLiteral 0x559af7760350 <col:7> 'int' 1
|   |-CallExpr 0x559af77603c8 <line:755:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559af77603b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559af7760390 <col:3> 'void ()' Function 0x559af7702570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559af7760420 <line:756:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559af7760408 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559af77603e8 <col:3> 'void ()' Function 0x559af77024b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559af7760708 <line:757:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559af7760440 <col:3> 'int' lvalue Var 0x559af775c4a0 'x' 'int'
|   | `-ConditionalOperator 0x559af77606d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559af7760500 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559af77604b8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559af77604a0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559af7760460 <col:7> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559af77604e8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559af77604d0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559af7760480 <col:25> '_Bool' lvalue Var 0x559af775c720 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x559af77606c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559af7760520 <col:42> 'int' lvalue Var 0x559af775caf0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x559af77606a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559af7760670 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559af77605e0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559af7760598 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559af7760580 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559af7760540 <col:55> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559af77605c8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559af77605b0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559af7760560 <col:73> '_Bool' lvalue Var 0x559af775c900 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x559af7760640 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559af7760600 <col:90> 'int' lvalue Var 0x559af775cbe8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559af7760658 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559af7760620 <col:102> 'int' lvalue Var 0x559af775c4a0 'x' 'int'
|   |-BinaryOperator 0x559af7760910 <line:758:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559af7760728 <col:3> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559af77608f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559af77608c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559af77607e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559af77607a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559af7760788 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559af7760748 <col:20> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559af77607d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559af77607b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559af7760768 <col:38> '_Bool' lvalue Var 0x559af775c720 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559af7760880 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559af7760838 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559af7760808 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559af77608b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559af7760898 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559af7760860 <col:66> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559af7760bf8 <line:759:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559af7760930 <col:3> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559af7760be0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559af7760bb0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559af7760ad0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559af77609f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559af77609a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559af7760990 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559af7760950 <col:20> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559af77609d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559af77609c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559af7760970 <col:38> '_Bool' lvalue Var 0x559af775c720 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x559af7760ab0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559af7760a68 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559af7760a50 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559af7760a10 <col:56> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559af7760a98 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559af7760a80 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559af7760a30 <col:74> '_Bool' lvalue Var 0x559af775c900 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559af7760b68 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559af7760b20 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559af7760af0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559af7760b98 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559af7760b80 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559af7760b48 <col:102> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559af7760e00 <line:760:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559af7760c18 <col:3> '_Bool' lvalue Var 0x559af775c720 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559af7760de8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559af7760db8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559af7760cd8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559af7760c90 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559af7760c78 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559af7760c38 <col:20> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559af7760cc0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559af7760ca8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559af7760c58 <col:38> '_Bool' lvalue Var 0x559af775c720 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559af7760d70 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559af7760d28 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559af7760cf8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559af7760da0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559af7760d88 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559af7760d50 <col:66> '_Bool' lvalue Var 0x559af775c720 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x559af7761100 <line:761:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559af7760e20 <col:3> '_Bool' lvalue Var 0x559af775c900 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559af77610e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559af77610b8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559af7760fd8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559af7760ee0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559af7760e98 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559af7760e80 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559af7760e40 <col:20> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559af7760ec8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559af7760eb0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559af7760e60 <col:38> '_Bool' lvalue Var 0x559af775c720 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x559af7760fb8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559af7760f70 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559af7760f40 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559af7760f00 <col:56> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559af7760fa0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559af7760f88 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559af7760f20 <col:74> '_Bool' lvalue Var 0x559af775c900 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559af7761070 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559af7761028 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559af7760ff8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559af77610a0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559af7761088 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559af7761050 <col:102> '_Bool' lvalue Var 0x559af775c900 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x559af7761158 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559af7761140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559af7761120 <col:3> 'void ()' Function 0x559af7702570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559af77611b0 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559af7761198 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559af7761178 <col:3> 'void ()' Function 0x559af77024b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559af7761268 <line:764:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559af77611d0 <col:3> 'int' lvalue Var 0x559af775b740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559af7761248 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559af7761230 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559af77611f0 <col:22> 'int' lvalue Var 0x559af775b740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559af7761210 <col:41> 'int' 1
|   |-CallExpr 0x559af77612c0 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559af77612a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559af7761288 <col:3> 'void ()' Function 0x559af7702570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559af7761338 <line:766:3, col:36>
|     `-CallExpr 0x559af7761318 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559af7761300 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559af77612e0 <col:10> 'void *(void)' Function 0x559af7701fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559af7761478 prev 0x559af775b3c0 <line:768:1, line:802:1> line:768:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x559af77613e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559af7765160 <line:769:1, line:802:1>
|   |-CallExpr 0x559af7761558 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559af7761540 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559af7761520 <col:3> 'void ()' Function 0x559af77024b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559af77615f0 <line:771:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x559af7761578 <col:3> '_Bool' lvalue Var 0x559af775cdf8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x559af77615d0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x559af77615b8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x559af7761598 <col:19> '_Bool (void)' Function 0x559af7701c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x559af7761688 <line:772:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x559af7761610 <col:3> '_Bool' lvalue Var 0x559af775cf30 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x559af7761668 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x559af7761650 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x559af7761630 <col:19> '_Bool (void)' Function 0x559af7701c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x559af7761700 <line:773:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x559af77616a8 <col:3> '_Bool' lvalue Var 0x559af775c538 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x559af77616e8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559af77616c8 <col:21> '_Bool' lvalue Var 0x559af775cf30 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x559af7761778 <line:774:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559af7761720 <col:3> 'int' lvalue Var 0x559af775c5b8 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x559af7761760 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559af7761740 <col:15> 'int' lvalue Var 0x559af775c4a0 'x' 'int'
|   |-BinaryOperator 0x559af7761bb0 <line:775:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x559af7761798 <col:3> 'int' lvalue Var 0x559af775c4a0 'x' 'int'
|   | `-ConditionalOperator 0x559af7761b80 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x559af77619a8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x559af77618c8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x559af77617f0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x559af77617d8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x559af77617b8 <col:8> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x559af77618a8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x559af7761840 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x559af7761828 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x559af7761808 <col:27> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x559af7761890 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x559af7761878 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x559af7761858 <col:46> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x559af7761988 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x559af7761920 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x559af7761908 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x559af77618e8 <col:65> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x559af7761970 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x559af7761958 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x559af7761938 <col:84> '_Bool' lvalue Var 0x559af775c978 'x$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x559af7761b68 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559af77619c8 <col:101> 'int' lvalue Var 0x559af775c4a0 'x' 'int'
|   |   `-ParenExpr 0x559af7761b48 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x559af7761b18 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x559af7761a88 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559af7761a40 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559af7761a28 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559af77619e8 <col:106> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559af7761a70 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559af7761a58 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559af7761a08 <col:124> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x559af7761ae8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559af7761aa8 <col:141> 'int' lvalue Var 0x559af775caf0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x559af7761b00 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559af7761ac8 <col:153> 'int' lvalue Var 0x559af775cbe8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x559af77620e0 <line:776:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559af7761bd0 <col:3> 'int' lvalue Var 0x559af775caf0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x559af77620b0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559af7762080 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559af7762068 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559af7761bf0 <col:15> '_Bool' lvalue Var 0x559af775cf30 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559af7762098 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559af7761c10 <col:31> 'int' lvalue Var 0x559af775caf0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x559af7762048 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559af7762018 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559af7761e20 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559af7761d40 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559af7761c68 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559af7761c50 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559af7761c30 <col:45> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559af7761d20 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559af7761cb8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559af7761ca0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559af7761c80 <col:64> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x559af7761d08 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559af7761cf0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559af7761cd0 <col:83> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559af7761e00 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559af7761d98 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559af7761d80 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559af7761d60 <col:102> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x559af7761de8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559af7761dd0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559af7761db0 <col:121> '_Bool' lvalue Var 0x559af775c978 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x559af7762000 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559af7761e40 <col:138> 'int' lvalue Var 0x559af775caf0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x559af7761fe0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559af7761fb0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559af7761f00 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559af7761eb8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559af7761ea0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559af7761e60 <col:151> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559af7761ee8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559af7761ed0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559af7761e80 <col:169> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x559af7761f80 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559af7761f20 <col:186> 'int' lvalue Var 0x559af775caf0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x559af7761f98 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559af7761f40 <col:198> 'int' lvalue Var 0x559af775caf0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x559af77625f0 <line:777:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559af7762100 <col:3> 'int' lvalue Var 0x559af775cbe8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x559af77625c0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559af7762590 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559af7762578 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559af7762120 <col:15> '_Bool' lvalue Var 0x559af775cf30 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559af77625a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559af7762140 <col:31> 'int' lvalue Var 0x559af775cbe8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x559af7762558 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559af7762528 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559af7762350 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559af7762270 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559af7762198 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559af7762180 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559af7762160 <col:45> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559af7762250 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559af77621e8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559af77621d0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559af77621b0 <col:64> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x559af7762238 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559af7762220 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559af7762200 <col:83> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559af7762330 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559af77622c8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559af77622b0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559af7762290 <col:102> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x559af7762318 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559af7762300 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559af77622e0 <col:121> '_Bool' lvalue Var 0x559af775c978 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x559af7762510 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559af7762370 <col:138> 'int' lvalue Var 0x559af775cbe8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x559af77624f0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559af77624c0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559af7762430 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559af77623e8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559af77623d0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559af7762390 <col:151> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559af7762418 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559af7762400 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559af77623b0 <col:169> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x559af7762490 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559af7762450 <col:186> 'int' lvalue Var 0x559af775cbe8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x559af77624a8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559af7762470 <col:198> 'int' lvalue Var 0x559af775cbe8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x559af7762b98 <line:778:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559af7762610 <col:3> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559af7762b80 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559af7762b50 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559af7762b08 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559af7762af0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559af7762630 <col:20> '_Bool' lvalue Var 0x559af775cf30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559af7762b38 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559af7762b20 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559af7762650 <col:36> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x559af7762ad0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559af7762aa0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559af7762860 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559af7762780 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559af77626a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559af7762690 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559af7762670 <col:55> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559af7762760 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559af77626f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559af77626e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559af77626c0 <col:74> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x559af7762748 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559af7762730 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559af7762710 <col:93> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559af7762840 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559af77627d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559af77627c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559af77627a0 <col:112> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x559af7762828 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559af7762810 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559af77627f0 <col:131> '_Bool' lvalue Var 0x559af775c978 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x559af7762a88 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559af7762a70 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559af7762880 <col:148> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x559af7762a50 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559af7762a20 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559af7762940 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559af77628f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559af77628e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559af77628a0 <col:166> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559af7762928 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559af7762910 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559af77628c0 <col:184> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x559af77629d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559af7762990 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559af7762960 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559af7762a08 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559af77629f0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559af77629b8 <col:212> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559af7763170 <line:779:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559af7762bb8 <col:3> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559af7763158 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559af7763128 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559af77630e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559af77630c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559af7762bd8 <col:20> '_Bool' lvalue Var 0x559af775cf30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559af7763110 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559af77630f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559af7762bf8 <col:36> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x559af77630a8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559af7763078 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559af7762e08 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559af7762d28 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559af7762c50 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559af7762c38 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559af7762c18 <col:55> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559af7762d08 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559af7762ca0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559af7762c88 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559af7762c68 <col:74> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x559af7762cf0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559af7762cd8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559af7762cb8 <col:93> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559af7762de8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559af7762d80 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559af7762d68 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559af7762d48 <col:112> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x559af7762dd0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559af7762db8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559af7762d98 <col:131> '_Bool' lvalue Var 0x559af775c978 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x559af7763060 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559af7763048 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559af7762e28 <col:148> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x559af7763028 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559af7762ff8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559af7762ee8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559af7762ea0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559af7762e88 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559af7762e48 <col:166> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559af7762ed0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559af7762eb8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559af7762e68 <col:184> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x559af7762fc8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559af7762f38 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559af7762f08 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559af7762fe0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559af7762fa0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559af7762f60 <col:219> 'int' 0
|   |-BinaryOperator 0x559af7763718 <line:780:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559af7763190 <col:3> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559af7763700 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559af77636d0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559af7763688 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559af7763670 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559af77631b0 <col:20> '_Bool' lvalue Var 0x559af775cf30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559af77636b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559af77636a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559af77631d0 <col:36> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x559af7763650 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559af7763620 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559af77633e0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559af7763300 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559af7763228 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559af7763210 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559af77631f0 <col:55> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559af77632e0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559af7763278 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559af7763260 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559af7763240 <col:74> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x559af77632c8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559af77632b0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559af7763290 <col:93> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559af77633c0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559af7763358 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559af7763340 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559af7763320 <col:112> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x559af77633a8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559af7763390 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559af7763370 <col:131> '_Bool' lvalue Var 0x559af775c978 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x559af7763608 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559af77635f0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559af7763400 <col:148> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x559af77635d0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559af77635a0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559af77634c0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559af7763478 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559af7763460 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559af7763420 <col:166> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559af77634a8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559af7763490 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559af7763440 <col:184> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x559af7763558 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559af7763510 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559af77634e0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559af7763588 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559af7763570 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559af7763538 <col:212> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x559af7763ce0 <line:781:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559af7763738 <col:3> '_Bool' lvalue Var 0x559af775c978 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559af7763cc8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559af7763c98 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559af7763c50 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559af7763c38 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559af7763758 <col:20> '_Bool' lvalue Var 0x559af775cf30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559af7763c80 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559af7763c68 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559af7763778 <col:36> '_Bool' lvalue Var 0x559af775c978 'x$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x559af7763c18 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559af7763be8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559af7763988 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559af77638a8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559af77637d0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559af77637b8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559af7763798 <col:55> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559af7763888 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559af7763820 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559af7763808 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559af77637e8 <col:74> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x559af7763870 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559af7763858 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559af7763838 <col:93> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559af7763968 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559af7763900 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559af77638e8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559af77638c8 <col:112> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x559af7763950 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559af7763938 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559af7763918 <col:131> '_Bool' lvalue Var 0x559af775c978 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x559af7763bd0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559af7763bb8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559af77639a8 <col:148> '_Bool' lvalue Var 0x559af775c978 'x$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x559af7763b98 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559af7763b68 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559af7763a68 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559af7763a20 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559af7763a08 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559af77639c8 <col:166> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559af7763a50 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559af7763a38 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559af77639e8 <col:184> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x559af7763b38 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559af7763ab8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559af7763a88 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559af7763b50 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559af7763b10 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559af7763ae0 <col:219> 'int' 0
|   |-BinaryOperator 0x559af7763d78 <line:782:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x559af7763d00 <col:3> '_Bool' lvalue Var 0x559af775bf20 '__unbuffered_p2_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x559af7763d50 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559af7763d20 <col:45> 'int' 1
|   |-BinaryOperator 0x559af7763df0 <line:783:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x559af7763d98 <col:3> 'int *' lvalue Var 0x559af775bfa0 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x559af7763dd8 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x559af7763db8 <col:43> 'int' lvalue Var 0x559af775c4a0 'x' 'int'
|   |-BinaryOperator 0x559af7763e68 <line:784:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559af7763e10 <col:3> 'int' lvalue Var 0x559af775b980 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x559af7763e50 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559af7763e30 <col:25> 'int' lvalue Var 0x559af775c4a0 'x' 'int'
|   |-BinaryOperator 0x559af7763fd0 <line:785:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x559af7763e88 <col:3> 'int' lvalue Var 0x559af775c4a0 'x' 'int'
|   | `-ConditionalOperator 0x559af7763fa0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x559af7763f20 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559af7763f08 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559af7763ea8 <col:7> '_Bool' lvalue Var 0x559af775c538 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x559af7763f38 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559af7763ec8 <col:25> 'int' lvalue Var 0x559af775c5b8 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x559af7763f50 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x559af7763ee8 <col:37> 'int' lvalue Var 0x559af775c4a0 'x' 'int'
|   |-BinaryOperator 0x559af7764068 <line:786:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x559af7763ff0 <col:3> '_Bool' lvalue Var 0x559af775c538 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x559af7764040 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559af7764010 <col:28> 'int' 0
|   |-CallExpr 0x559af77640c0 <line:787:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559af77640a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559af7764088 <col:3> 'void ()' Function 0x559af7702570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559af7764118 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559af7764100 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559af77640e0 <col:3> 'void ()' Function 0x559af77024b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559af7764190 <line:789:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559af7764138 <col:3> 'int' lvalue Var 0x559af775c290 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x559af7764178 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559af7764158 <col:25> 'int' lvalue Var 0x559af775cd60 'y' 'int'
|   |-CallExpr 0x559af77641e8 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559af77641d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559af77641b0 <col:3> 'void ()' Function 0x559af7702570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559af7764240 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559af7764228 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559af7764208 <col:3> 'void ()' Function 0x559af77024b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559af7764528 <line:792:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559af7764260 <col:3> 'int' lvalue Var 0x559af775c4a0 'x' 'int'
|   | `-ConditionalOperator 0x559af77644f8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559af7764320 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559af77642d8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559af77642c0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559af7764280 <col:7> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559af7764308 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559af77642f0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559af77642a0 <col:25> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x559af77644e0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559af7764340 <col:42> 'int' lvalue Var 0x559af775caf0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x559af77644c0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559af7764490 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559af7764400 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559af77643b8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559af77643a0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559af7764360 <col:55> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559af77643e8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559af77643d0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559af7764380 <col:73> '_Bool' lvalue Var 0x559af775c978 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x559af7764460 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559af7764420 <col:90> 'int' lvalue Var 0x559af775cbe8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559af7764478 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559af7764440 <col:102> 'int' lvalue Var 0x559af775c4a0 'x' 'int'
|   |-BinaryOperator 0x559af7764730 <line:793:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559af7764548 <col:3> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559af7764718 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559af77646e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559af7764608 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559af77645c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559af77645a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559af7764568 <col:20> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559af77645f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559af77645d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559af7764588 <col:38> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559af77646a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559af7764658 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559af7764628 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559af77646d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559af77646b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559af7764680 <col:66> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559af7764a18 <line:794:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559af7764750 <col:3> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559af7764a00 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559af77649d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559af77648f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559af7764810 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559af77647c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559af77647b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559af7764770 <col:20> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559af77647f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559af77647e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559af7764790 <col:38> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x559af77648d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559af7764888 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559af7764870 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559af7764830 <col:56> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559af77648b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559af77648a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559af7764850 <col:74> '_Bool' lvalue Var 0x559af775c978 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559af7764988 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559af7764940 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559af7764910 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559af77649b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559af77649a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559af7764968 <col:102> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559af7764c20 <line:795:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559af7764a38 <col:3> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559af7764c08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559af7764bd8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559af7764af8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559af7764ab0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559af7764a98 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559af7764a58 <col:20> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559af7764ae0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559af7764ac8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559af7764a78 <col:38> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559af7764b90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559af7764b48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559af7764b18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559af7764bc0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559af7764ba8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559af7764b70 <col:66> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x559af7764f08 <line:796:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559af7764c40 <col:3> '_Bool' lvalue Var 0x559af775c978 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559af7764ef0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559af7764ec0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559af7764de0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559af7764d00 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559af7764cb8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559af7764ca0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559af7764c60 <col:20> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559af7764ce8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559af7764cd0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559af7764c80 <col:38> '_Bool' lvalue Var 0x559af775c798 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x559af7764dc0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559af7764d78 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559af7764d60 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559af7764d20 <col:56> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559af7764da8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559af7764d90 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559af7764d40 <col:74> '_Bool' lvalue Var 0x559af775c978 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559af7764e78 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559af7764e30 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559af7764e00 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559af7764ea8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559af7764e90 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559af7764e58 <col:102> '_Bool' lvalue Var 0x559af775c978 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x559af7764f60 <line:797:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559af7764f48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559af7764f28 <col:3> 'void ()' Function 0x559af7702570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559af7764fc8 <line:798:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559af7764fb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559af7764f80 <col:3> 'void ()' Function 0x559af77024b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559af7765080 <line:799:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559af7764fe8 <col:3> 'int' lvalue Var 0x559af775b740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559af7765060 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559af7765048 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559af7765008 <col:22> 'int' lvalue Var 0x559af775b740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559af7765028 <col:41> 'int' 1
|   |-CallExpr 0x559af77650d8 <line:800:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559af77650c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559af77650a0 <col:3> 'void ()' Function 0x559af7702570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559af7765150 <line:801:3, col:36>
|     `-CallExpr 0x559af7765130 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559af7765118 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559af77650f8 <col:10> 'void *(void)' Function 0x559af7701fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559af7765290 prev 0x559af775b488 <line:803:1, line:805:1> line:803:6 fence 'void ()'
| `-CompoundStmt 0x559af7765330 <line:804:1, line:805:1>
|-FunctionDecl 0x559af7765360 prev 0x559af775b548 <line:806:1, line:808:1> line:806:6 isync 'void ()'
| `-CompoundStmt 0x559af7765400 <line:807:1, line:808:1>
|-FunctionDecl 0x559af7765430 prev 0x559af775b608 <line:809:1, line:811:1> line:809:6 lwfence 'void ()'
| `-CompoundStmt 0x559af77654d0 <line:810:1, line:811:1>
`-FunctionDecl 0x559af7765538 <line:812:1, line:838:1> line:812:5 main 'int ()'
  `-CompoundStmt 0x559af7767490 <line:813:1, line:838:1>
    |-DeclStmt 0x559af7765650 <line:814:3, col:18>
    | `-VarDecl 0x559af77655e8 <col:3, col:13> col:13 used t2466 'pthread_t':'unsigned long'
    |-CallExpr 0x559af7765858 <line:815:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559af7765840 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559af7765668 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559af77429d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559af77656a8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559af7765688 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559af77655e8 't2466' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559af7765898 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559af7765720 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559af77656f8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559af77656c0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559af77658b0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559af7765740 <col:39> 'void *(void *)' Function 0x559af775d048 'P0' 'void *(void *)'
    | `-ParenExpr 0x559af77657c0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559af7765798 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559af7765760 <col:52> 'int' 0
    |-DeclStmt 0x559af7765940 <line:816:3, col:18>
    | `-VarDecl 0x559af77658d8 <col:3, col:13> col:13 used t2467 'pthread_t':'unsigned long'
    |-CallExpr 0x559af7765ae8 <line:817:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559af7765ad0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559af7765958 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559af77429d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559af7765998 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559af7765978 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559af77658d8 't2467' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559af7765b28 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559af7765a10 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559af77659e8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559af77659b0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559af7765b40 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559af7765a30 <col:39> 'void *(void *)' Function 0x559af7760230 'P1' 'void *(void *)'
    | `-ParenExpr 0x559af7765ab0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559af7765a88 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559af7765a50 <col:52> 'int' 0
    |-DeclStmt 0x559af7765bd0 <line:818:3, col:18>
    | `-VarDecl 0x559af7765b68 <col:3, col:13> col:13 used t2468 'pthread_t':'unsigned long'
    |-CallExpr 0x559af7765d78 <line:819:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559af7765d60 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559af7765be8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559af77429d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559af7765c28 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559af7765c08 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559af7765b68 't2468' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559af7765db8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559af7765ca0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559af7765c78 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559af7765c40 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559af7765dd0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559af7765cc0 <col:39> 'void *(void *)' Function 0x559af7761478 'P2' 'void *(void *)'
    | `-ParenExpr 0x559af7765d40 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559af7765d18 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559af7765ce0 <col:52> 'int' 0
    |-CallExpr 0x559af7765e20 <line:820:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559af7765e08 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559af7765de8 <col:3> 'void ()' Function 0x559af77024b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559af7765ef0 <line:821:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x559af7765e40 <col:3> '_Bool' lvalue Var 0x559af775c328 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x559af7765ed8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x559af7765eb8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x559af7765ea0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x559af7765e60 <col:21> 'int' lvalue Var 0x559af775b740 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x559af7765e80 <col:41> 'int' 3
    |-CallExpr 0x559af7765f48 <line:822:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559af7765f30 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559af7765f10 <col:3> 'void ()' Function 0x559af7702570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559af7766008 <line:823:3, col:36> 'void'
    | |-ImplicitCastExpr 0x559af7765ff0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559af7765f68 <col:3> 'void (int)' Function 0x559af7701e50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x559af7766048 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x559af7766030 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x559af7765f88 <col:21> '_Bool' lvalue Var 0x559af775c328 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x559af7766098 <line:824:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559af7766080 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559af7766060 <col:3> 'void ()' Function 0x559af77024b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559af7766380 <line:825:3, col:103> 'int' '='
    | |-DeclRefExpr 0x559af77660b8 <col:3> 'int' lvalue Var 0x559af775c4a0 'x' 'int'
    | `-ConditionalOperator 0x559af7766350 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x559af7766178 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x559af7766130 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x559af7766118 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x559af77660d8 <col:7> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x559af7766160 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x559af7766148 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x559af77660f8 <col:25> '_Bool' lvalue Var 0x559af775c630 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x559af7766338 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x559af7766198 <col:42> 'int' lvalue Var 0x559af775caf0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x559af7766318 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x559af77662e8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x559af7766258 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x559af7766210 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x559af77661f8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x559af77661b8 <col:55> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x559af7766240 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x559af7766228 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x559af77661d8 <col:73> '_Bool' lvalue Var 0x559af775c810 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x559af77662b8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x559af7766278 <col:90> 'int' lvalue Var 0x559af775cbe8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x559af77662d0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x559af7766298 <col:102> 'int' lvalue Var 0x559af775c4a0 'x' 'int'
    |-BinaryOperator 0x559af7766588 <line:826:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x559af77663a0 <col:3> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x559af7766570 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559af7766540 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x559af7766460 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x559af7766418 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x559af7766400 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x559af77663c0 <col:20> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x559af7766448 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x559af7766430 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x559af77663e0 <col:38> '_Bool' lvalue Var 0x559af775c630 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559af77664f8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559af77664b0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559af7766480 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x559af7766528 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559af7766510 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559af77664d8 <col:66> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x559af7766870 <line:827:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x559af77665a8 <col:3> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x559af7766858 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559af7766828 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x559af7766748 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x559af7766668 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x559af7766620 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x559af7766608 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x559af77665c8 <col:20> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x559af7766650 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x559af7766638 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x559af77665e8 <col:38> '_Bool' lvalue Var 0x559af775c630 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x559af7766728 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x559af77666e0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x559af77666c8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x559af7766688 <col:56> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x559af7766710 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x559af77666f8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x559af77666a8 <col:74> '_Bool' lvalue Var 0x559af775c810 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559af77667e0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559af7766798 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559af7766768 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x559af7766810 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559af77667f8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559af77667c0 <col:102> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x559af7766a78 <line:828:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x559af7766890 <col:3> '_Bool' lvalue Var 0x559af775c630 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559af7766a60 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559af7766a30 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x559af7766950 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x559af7766908 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x559af77668f0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x559af77668b0 <col:20> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x559af7766938 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x559af7766920 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x559af77668d0 <col:38> '_Bool' lvalue Var 0x559af775c630 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559af77669e8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559af77669a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559af7766970 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x559af7766a18 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559af7766a00 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559af77669c8 <col:66> '_Bool' lvalue Var 0x559af775c630 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x559af7766d60 <line:829:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x559af7766a98 <col:3> '_Bool' lvalue Var 0x559af775c810 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559af7766d48 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559af7766d18 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x559af7766c38 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x559af7766b58 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x559af7766b10 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x559af7766af8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x559af7766ab8 <col:20> '_Bool' lvalue Var 0x559af775cb68 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x559af7766b40 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x559af7766b28 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x559af7766ad8 <col:38> '_Bool' lvalue Var 0x559af775c630 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x559af7766c18 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x559af7766bd0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x559af7766bb8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x559af7766b78 <col:56> '_Bool' lvalue Var 0x559af775cc60 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x559af7766c00 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x559af7766be8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x559af7766b98 <col:74> '_Bool' lvalue Var 0x559af775c810 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559af7766cd0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559af7766c88 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559af7766c58 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x559af7766d00 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559af7766ce8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559af7766cb0 <col:102> '_Bool' lvalue Var 0x559af775c810 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x559af7766db8 <line:830:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559af7766da0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559af7766d80 <col:3> 'void ()' Function 0x559af7702570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559af7766e10 <line:831:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559af7766df8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559af7766dd8 <col:3> 'void ()' Function 0x559af77024b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559af7766ea8 <line:832:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x559af7766e30 <col:3> '_Bool' lvalue Var 0x559af775ce70 'weak$$choice1' '_Bool'
    | `-CallExpr 0x559af7766e88 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x559af7766e70 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x559af7766e50 <col:19> '_Bool (void)' Function 0x559af7701c80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x559af7767100 <line:833:3, col:140> 'int' '='
    | |-DeclRefExpr 0x559af7766ec8 <col:3> 'int' lvalue Var 0x559af775b980 '__unbuffered_p2_EAX' 'int'
    | `-ConditionalOperator 0x559af77670d0 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x559af77670a0 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x559af7767088 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x559af7766ee8 <col:25> '_Bool' lvalue Var 0x559af775bf20 '__unbuffered_p2_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x559af7767048 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x559af7767018 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x559af7766fd0 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x559af7766f98 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x559af7766f08 <col:61> '_Bool' lvalue Var 0x559af775ce70 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x559af7766fe8 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x559af7766f60 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x559af7766f48 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x559af7766f28 <col:78> 'int *' lvalue Var 0x559af775bfa0 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x559af7767000 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x559af7766f78 <col:117> 'int' lvalue Var 0x559af775b980 '__unbuffered_p2_EAX' 'int'
    |   `-ImplicitCastExpr 0x559af77670b8 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x559af7767068 <col:140> 'int' lvalue Var 0x559af775b980 '__unbuffered_p2_EAX' 'int'
    |-BinaryOperator 0x559af7767338 <line:834:3, col:103> '_Bool' '='
    | |-DeclRefExpr 0x559af7767120 <col:3> '_Bool' lvalue Var 0x559af775c3a0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x559af7767320 <col:21, col:103> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x559af7767308 <col:21, col:103> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x559af77672e8 <col:22, col:103> 'int'
    |       `-BinaryOperator 0x559af77672c8 <col:23, col:102> 'int' '&&'
    |         |-BinaryOperator 0x559af7767230 <col:23, col:74> 'int' '&&'
    |         | |-BinaryOperator 0x559af7767198 <col:23, col:46> 'int' '=='
    |         | | |-ImplicitCastExpr 0x559af7767180 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x559af7767140 <col:23> 'int' lvalue Var 0x559af775b860 '__unbuffered_p0_EAX' 'int'
    |         | | `-IntegerLiteral 0x559af7767160 <col:46> 'int' 0
    |         | `-BinaryOperator 0x559af7767210 <col:51, col:74> 'int' '=='
    |         |   |-ImplicitCastExpr 0x559af77671f8 <col:51> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x559af77671b8 <col:51> 'int' lvalue Var 0x559af775b980 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x559af77671d8 <col:74> 'int' 1
    |         `-BinaryOperator 0x559af77672a8 <col:79, col:102> 'int' '=='
    |           |-ImplicitCastExpr 0x559af7767290 <col:79> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x559af7767250 <col:79> 'int' lvalue Var 0x559af775c290 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x559af7767270 <col:102> 'int' 0
    |-CallExpr 0x559af7767390 <line:835:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559af7767378 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559af7767358 <col:3> 'void ()' Function 0x559af7702570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559af7767408 <line:836:3, col:36> 'void'
    | |-ImplicitCastExpr 0x559af77673f0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559af77673b0 <col:3> 'void (int)' Function 0x559af7702238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x559af7767448 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x559af7767430 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x559af77673d0 <col:21> '_Bool' lvalue Var 0x559af775c3a0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x559af7767480 <line:837:3, col:10>
      `-IntegerLiteral 0x559af7767460 <col:10> 'int' 0
