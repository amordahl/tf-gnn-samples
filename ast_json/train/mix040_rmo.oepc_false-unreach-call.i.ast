TranslationUnitDecl 0x559b87718f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x559b87719848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x559b87719520 '__int128'
|-TypedefDecl 0x559b877198b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x559b87719540 'unsigned __int128'
|-TypedefDecl 0x559b87719bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x559b87719990 'struct __NSConstantString_tag'
|   `-Record 0x559b87719910 '__NSConstantString_tag'
|-TypedefDecl 0x559b87719c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x559b87719c20 'char *'
|   `-BuiltinType 0x559b87719020 'char'
|-TypedefDecl 0x559b87758b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x559b87719f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x559b87719d40 'struct __va_list_tag'
|     `-Record 0x559b87719cc0 '__va_list_tag'
|-FunctionDecl 0x559b87758ca0 <pthread-wmm/mix040_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x559b87758bd0 <col:31> col:34 'int'
|-FunctionDecl 0x559b87758e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x559b87758f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x559b877590d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x559b87759048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x559b87759308 <col:40, col:99>
|   |-IfStmt 0x559b877592d8 <col:42, col:88>
|   | |-UnaryOperator 0x559b877591b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x559b877591a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x559b87759180 <col:47> 'int' lvalue ParmVar 0x559b87759048 'expression' 'int'
|   | `-CompoundStmt 0x559b877592c0 <col:59, col:88>
|   |   `-LabelStmt 0x559b877592a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x559b87759238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x559b87759220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x559b877591d0 <col:68> 'void () __attribute__((noreturn))' Function 0x559b87758f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x559b877592f0 <col:89>
|   `-ReturnStmt 0x559b877592f8 <col:91>
|-FunctionDecl 0x559b87759350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x559b87759410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x559b87759790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559b877594c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x559b87759548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x559b877595c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x559b87759648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x559b87759850 <line:10:22>
|-FunctionDecl 0x559b8777f8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559b877598c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x559b87759940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x559b877599c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x559b87759a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x559b8777f960 <line:13:22>
|-FunctionDecl 0x559b8777fc10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559b8777f9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x559b8777fa50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x559b8777fad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x559b8777fcc8 <line:15:22>
|-TypedefDecl 0x559b8777fd38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x559b877190e0 'unsigned char'
|-TypedefDecl 0x559b8777fda8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x559b87719100 'unsigned short'
|-TypedefDecl 0x559b8777fe18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x559b87719120 'unsigned int'
|-TypedefDecl 0x559b8777fe88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x559b87719140 'unsigned long'
|-TypedefDecl 0x559b8777fef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x559b87719040 'signed char'
|-TypedefDecl 0x559b8777ff68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x559b877190e0 'unsigned char'
|-TypedefDecl 0x559b8777ffd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x559b87719060 'short'
|-TypedefDecl 0x559b87780048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x559b87719100 'unsigned short'
|-TypedefDecl 0x559b877800b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x559b87719080 'int'
|-TypedefDecl 0x559b87780128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x559b87719120 'unsigned int'
|-TypedefDecl 0x559b87780198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x559b877190a0 'long'
|-TypedefDecl 0x559b87780208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x559b87719140 'unsigned long'
|-TypedefDecl 0x559b87780278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x559b877190a0 'long'
|-TypedefDecl 0x559b877802e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x559b87719140 'unsigned long'
|-TypedefDecl 0x559b87780358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x559b87719140 'unsigned long'
|-TypedefDecl 0x559b877803c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x559b87719120 'unsigned int'
|-TypedefDecl 0x559b87780438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x559b87719120 'unsigned int'
|-TypedefDecl 0x559b877804a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x559b87719140 'unsigned long'
|-TypedefDecl 0x559b87780518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x559b87719140 'unsigned long'
|-TypedefDecl 0x559b87780588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x559b87719120 'unsigned int'
|-TypedefDecl 0x559b877805f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x559b87719140 'unsigned long'
|-TypedefDecl 0x559b87780668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x559b877190a0 'long'
|-TypedefDecl 0x559b877806d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x559b877190a0 'long'
|-TypedefDecl 0x559b87780748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x559b87719080 'int'
|-RecordDecl 0x559b877807a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x559b87780918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x559b877809d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x559b87780970 'struct __fsid_t' sugar
|   `-RecordType 0x559b87780820 '__fsid_t'
|     `-Record 0x559b877807a0 ''
|-TypedefDecl 0x559b87780a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x559b877190a0 'long'
|-TypedefDecl 0x559b87780ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x559b87719140 'unsigned long'
|-TypedefDecl 0x559b87780b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x559b87719140 'unsigned long'
|-TypedefDecl 0x559b87780ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x559b87719120 'unsigned int'
|-TypedefDecl 0x559b87780c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x559b877190a0 'long'
|-TypedefDecl 0x559b87780c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x559b87719120 'unsigned int'
|-TypedefDecl 0x559b87780cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x559b877190a0 'long'
|-TypedefDecl 0x559b87780d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x559b87719080 'int'
|-TypedefDecl 0x559b87780dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x559b87719080 'int'
|-TypedefDecl 0x559b87780e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x559b87719080 'int'
|-TypedefDecl 0x559b87780eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x559b877197a0 'void *'
|   `-BuiltinType 0x559b87718fe0 'void'
|-TypedefDecl 0x559b87780f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x559b877190a0 'long'
|-TypedefDecl 0x559b87780f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x559b877190a0 'long'
|-TypedefDecl 0x559b87781008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x559b877190a0 'long'
|-TypedefDecl 0x559b87781078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x559b87719140 'unsigned long'
|-TypedefDecl 0x559b877810e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x559b87719140 'unsigned long'
|-TypedefDecl 0x559b87781158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x559b87719140 'unsigned long'
|-TypedefDecl 0x559b877811c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x559b87719140 'unsigned long'
|-TypedefDecl 0x559b87781238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x559b877190a0 'long'
|-TypedefDecl 0x559b877812a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x559b877190a0 'long'
|-TypedefDecl 0x559b87781318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x559b877190a0 'long'
|-TypedefDecl 0x559b87781388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x559b87719140 'unsigned long'
|-TypedefDecl 0x559b87781418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x559b877813e0 '__off64_t' sugar
|   |-Typedef 0x559b877806d8 '__off64_t'
|   `-BuiltinType 0x559b877190a0 'long'
|-TypedefDecl 0x559b87781510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x559b877814d0 '__quad_t *'
|   `-TypedefType 0x559b87781470 '__quad_t' sugar
|     |-Typedef 0x559b87780278 '__quad_t'
|     `-BuiltinType 0x559b877190a0 'long'
|-TypedefDecl 0x559b87781580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x559b87719c20 'char *'
|   `-BuiltinType 0x559b87719020 'char'
|-TypedefDecl 0x559b877815f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x559b877190a0 'long'
|-TypedefDecl 0x559b87781660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x559b87719120 'unsigned int'
|-FunctionDecl 0x559b877817a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x559b877816d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x559b87781ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x559b87781ad8 <line:72:3, col:34>
|     `-CallExpr 0x559b87781a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x559b87781a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x559b87781a10 <col:10> '<builtin fn type>' Function 0x559b87781880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x559b87781ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x559b87781a30 <col:29> 'unsigned int' lvalue ParmVar 0x559b877816d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x559b87781880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x559b87781920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x559b87781990 <col:10> Implicit
| `-ConstAttr 0x559b877819e8 <col:10> Implicit
|-FunctionDecl 0x559b87781c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x559b87781b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x559b87781f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x559b87781f48 <line:77:3, col:34>
|     `-CallExpr 0x559b87781f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x559b87781ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x559b87781e78 <col:10> '<builtin fn type>' Function 0x559b87781ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x559b87781f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x559b87781e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x559b87781b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x559b87781ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x559b87781d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x559b87781df8 <col:10> Implicit
| `-ConstAttr 0x559b87781e50 <col:10> Implicit
|-TypedefDecl 0x559b87781f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x559b87719140 'unsigned long'
|-TypedefDecl 0x559b87782018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x559b87781fe0 '__time_t' sugar
|   |-Typedef 0x559b87780c18 '__time_t'
|   `-BuiltinType 0x559b877190a0 'long'
|-RecordDecl 0x559b87782070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x559b87782128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x559b877821b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x559b87782248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x559b87782210 '__pid_t' sugar
|   |-Typedef 0x559b87780748 '__pid_t'
|   `-BuiltinType 0x559b87719080 'int'
|-RecordDecl 0x559b877822a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x559b87782360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x559b877823b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x559b87782470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x559b877824d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x559b87719140 'unsigned long'
|-RecordDecl 0x559b87782530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x559b877827c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x559b877848b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x559b87782810 'struct cpu_set_t' sugar
|   `-RecordType 0x559b877825b0 'cpu_set_t'
|     `-Record 0x559b87782530 ''
|-FunctionDecl 0x559b87784b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x559b87784958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559b87784a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x559b87784c38 <line:107:19>
|-FunctionDecl 0x559b87784e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x559b87784ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x559b87784eb8 <col:69>
|-FunctionDecl 0x559b87785030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x559b87784f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x559b877850d8 <col:64>
|-FunctionDecl 0x559b87785398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x559b87785140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559b87785278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x559b87785448 <line:113:22>
|-FunctionDecl 0x559b877856c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x559b877854b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559b877855a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x559b87785778 <col:88>
|-FunctionDecl 0x559b87785a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x559b877857e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559b877858c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x559b87785950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x559b87785b50 <col:62>
|-FunctionDecl 0x559b87785cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x559b87785bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x559b87785d70 <col:63>
|-FunctionDecl 0x559b87785e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x559b87785f38 <col:47>
|-FunctionDecl 0x559b87786040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x559b87785fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x559b877860e8 <col:69>
|-FunctionDecl 0x559b877861f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x559b87786158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x559b87786298 <col:69>
|-FunctionDecl 0x559b87786558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559b87786300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559b87786438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x559b87786608 <col:88>
|-TypedefDecl 0x559b87786698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x559b87786660 '__clock_t' sugar
|   |-Typedef 0x559b87780a58 '__clock_t'
|   `-BuiltinType 0x559b877190a0 'long'
|-TypedefDecl 0x559b87786728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x559b877866f0 '__clockid_t' sugar
|   |-Typedef 0x559b87780e48 '__clockid_t'
|   `-BuiltinType 0x559b87719080 'int'
|-TypedefDecl 0x559b877867b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x559b87786780 '__timer_t' sugar
|   |-Typedef 0x559b87780eb8 '__timer_t'
|   `-PointerType 0x559b877197a0 'void *'
|     `-BuiltinType 0x559b87718fe0 'void'
|-RecordDecl 0x559b87786810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x559b877868e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x559b87786950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x559b877869b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x559b87786a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x559b87786a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x559b87786af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x559b87786b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x559b87786bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x559b87786c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x559b87786c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x559b87786cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x559b87786d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x559b87786e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x559b87786e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x559b87786f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x559b87787100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x559b877871a0 <col:45>
|-FunctionDecl 0x559b87787380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x559b87787270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x559b87787428 <col:54>
|-FunctionDecl 0x559b87787628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x559b87787490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x559b87787508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x559b877876d8 <line:157:22>
| `-ConstAttr 0x559b87787730 <col:63>
|-FunctionDecl 0x559b87788560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559b87787828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x559b87788608 <col:56>
|-FunctionDecl 0x559b877889b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x559b87788678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x559b877886f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559b87788770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x559b87788868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x559b87788a70 <col:54>
|-RecordDecl 0x559b87788ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x559b87788b78 parent 0x559b87718f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x559b87788dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x559b87788e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x559b87788ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x559b87788f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x559b87789038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x559b87789158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x559b87789100 'struct __locale_struct *'
|   `-ElaboratedType 0x559b87789090 'struct __locale_struct' sugar
|     `-RecordType 0x559b87788b50 'struct __locale_struct'
|       `-Record 0x559b87788ac8 '__locale_struct'
|-TypedefDecl 0x559b87789208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x559b877891d0 '__locale_t' sugar
|   |-Typedef 0x559b87789158 '__locale_t'
|   `-PointerType 0x559b87789100 'struct __locale_struct *'
|     `-ElaboratedType 0x559b87789090 'struct __locale_struct' sugar
|       `-RecordType 0x559b87788b50 'struct __locale_struct'
|         `-Record 0x559b87788ac8 '__locale_struct'
|-FunctionDecl 0x559b87789610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x559b87789278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x559b877892f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559b87789370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x559b87789400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x559b87789478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x559b877896d8 <col:40>
|-FunctionDecl 0x559b877898c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x559b877897a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x559b87789970 <col:66>
|-FunctionDecl 0x559b87789a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x559b877899d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x559b87789b28 <col:69>
|-FunctionDecl 0x559b87789d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x559b87789b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559b87789c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x559b87789e08 <col:52>
|-FunctionDecl 0x559b87789fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x559b87789e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559b87789f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x559b8778a060 <col:55>
|-FunctionDecl 0x559b8778a1f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x559b8778a0e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x559b8778a2a0 <col:62>
|-FunctionDecl 0x559b8778a418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x559b8778a308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x559b8778a4c0 <col:60>
|-FunctionDecl 0x559b8778a718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x559b8778a578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x559b8778a5f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x559b8778a7c8 <col:44>
|-FunctionDecl 0x559b8778a9d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x559b8778a830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559b8778a8b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x559b8778aa88 <col:49>
|-VarDecl 0x559b8778ab88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x559b8778ac08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x559b8778ac88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x559b8778ad50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x559b8778ae80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x559b8778af20 <col:42>
|-VarDecl 0x559b8778af90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x559b8778b010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x559b8778b198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x559b8778b088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x559b8778b240 <col:57>
|-FunctionDecl 0x559b8778b350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559b8778b2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x559b8778b3f8 <col:56>
|-FunctionDecl 0x559b8778c540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559b8778b478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x559b8778c5e8 <col:59>
|-FunctionDecl 0x559b8778c6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x559b8778c658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x559b8778c798 <col:48>
| `-ConstAttr 0x559b8778c7f0 <col:89>
|-FunctionDecl 0x559b8778ca58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x559b8778c8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x559b8778c938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x559b8778ccb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559b8778cb48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559b8778cbd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x559b8778cd68 <col:88>
|-FunctionDecl 0x559b8778cf00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559b8778cdd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559b8778ce60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x559b8778cfb0 <col:88>
|-FunctionDecl 0x559b8778d1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x559b8778d018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559b8778d0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x559b8778d278 <line:208:22>
|-FunctionDecl 0x559b8778d5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x559b8778d2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559b8778d360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x559b8778d3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x559b8778d480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x559b8778d8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x559b8778d6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x559b8778d7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x559b8778d998 <col:85>
|-FunctionDecl 0x559b8778dd88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x559b8778da00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559b8778db38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x559b8778dc40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x559b8778de40 <col:52>
|-FunctionDecl 0x559b8778dfb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x559b8778dea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x559b8778e060 <col:61>
|-FunctionDecl 0x559b8778e560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x559b8778e0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x559b8778e148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x559b8778e278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x559b8778e368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x559b8778e620 <col:62>
|-FunctionDecl 0x559b8778e838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x559b8778e688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x559b8778e718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x559b8778e8e8 <line:221:22>
|-FunctionDecl 0x559b8778e9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x559b8778e950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x559b8778ea90 <col:65>
|-TypedefDecl 0x559b8778eb00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x559b87719140 'unsigned long'
|-RecordDecl 0x559b8778eb58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x559b8778eca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x559b8778ed08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559b8778edb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x559b8778ed60 'union pthread_attr_t' sugar
|   `-RecordType 0x559b8778ebe0 'union pthread_attr_t'
|     `-Record 0x559b8778eb58 'pthread_attr_t'
|-RecordDecl 0x559b8778ee10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x559b8778ef88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x559b8778f000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x559b8778f0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x559b8778f050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x559b8778ee90 'struct __pthread_internal_list'
|     `-Record 0x559b8778ee10 '__pthread_internal_list'
|-RecordDecl 0x559b8778f120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x559b8778f1c8 parent 0x559b87718f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x559b8778f2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559b8778f308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x559b8778f370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x559b8778f3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x559b8778f440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x559b8778f4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x559b87793580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x559b87793630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x559b87793720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x559b87793788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559b87793910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x559b877938b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x559b8778f1a0 'pthread_mutex_t'
|     `-Record 0x559b8778f120 ''
|-RecordDecl 0x559b87793980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x559b87793ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559b87793b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559b87793be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x559b87793b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x559b87793a00 'pthread_mutexattr_t'
|     `-Record 0x559b87793980 ''
|-RecordDecl 0x559b87793c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x559b87793cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x559b87793dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559b87793e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x559b87793e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x559b87793ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x559b87793f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x559b87793fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x559b87794030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x559b87794098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x559b87794150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix040_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix040_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x559b87794240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x559b877942a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x559b877943e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x559b87794380 'union pthread_cond_t' sugar
|   `-RecordType 0x559b87793cd0 'pthread_cond_t'
|     `-Record 0x559b87793c50 ''
|-RecordDecl 0x559b87794450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x559b87794590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559b877945f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559b877946b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x559b87794650 'union pthread_condattr_t' sugar
|   `-RecordType 0x559b877944d0 'pthread_condattr_t'
|     `-Record 0x559b87794450 ''
|-TypedefDecl 0x559b87794738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x559b87719120 'unsigned int'
|-TypedefDecl 0x559b877947a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x559b87719080 'int'
|-RecordDecl 0x559b87794800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x559b877948a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x559b87794970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559b877949d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x559b87794a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x559b87794aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x559b87794b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x559b87794b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x559b87794be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x559b87794c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x559b87794cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x559b87794d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x559b87794d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x559b87794e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix040_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix040_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x559b87794ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x559b87794f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559b87795090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x559b87795030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x559b87794880 'pthread_rwlock_t'
|     `-Record 0x559b87794800 ''
|-RecordDecl 0x559b87795100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x559b87795240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x559b877952a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559b87795360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x559b87795300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x559b87795180 'pthread_rwlockattr_t'
|     `-Record 0x559b87795100 ''
|-TypedefDecl 0x559b877953e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x559b87719084 'volatile int' volatile
|   `-BuiltinType 0x559b87719080 'int'
|-RecordDecl 0x559b87795440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x559b877975b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x559b87797618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559b877976d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x559b87797670 'union pthread_barrier_t' sugar
|   `-RecordType 0x559b877954c0 'pthread_barrier_t'
|     `-Record 0x559b87795440 ''
|-RecordDecl 0x559b87797740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x559b87797840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559b877978a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559b87797960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x559b87797900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x559b877977c0 'pthread_barrierattr_t'
|     `-Record 0x559b87797740 ''
|-TypedefDecl 0x559b87797a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x559b87797a10 'long [8]' 8 
|   `-BuiltinType 0x559b877190a0 'long'
|-EnumDecl 0x559b87797ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x559b87797b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x559b87797be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x559b87797c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x559b87797d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x559b87797d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x559b87797da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x559b87797df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x559b87797e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x559b87797e68 <col:26> 'int'
| |   `-DeclRefExpr 0x559b87797e48 <col:26> 'int' EnumConstant 0x559b87797d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x559b87797f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x559b87797ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x559b87797ed0 <col:29> 'int' EnumConstant 0x559b87797d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x559b87797f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x559b87797f78 <col:30> 'int'
| |   `-DeclRefExpr 0x559b87797f58 <col:30> 'int' EnumConstant 0x559b87797da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x559b87798018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x559b87798000 <col:27> 'int'
|     `-DeclRefExpr 0x559b87797fe0 <col:27> 'int' EnumConstant 0x559b87797e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x559b87798068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x559b87798138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x559b877981c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x559b877981a8 <col:30> 'int'
| |   `-DeclRefExpr 0x559b87798188 <col:30> 'int' EnumConstant 0x559b87798138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x559b87798210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x559b87798298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x559b87798280 <col:29> 'int'
|     `-DeclRefExpr 0x559b87798260 <col:29> 'int' EnumConstant 0x559b87798210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x559b877982e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x559b877983b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x559b87798408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x559b87798458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x559b877984a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x559b877985c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x559b87798610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x559b87798660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x559b877986e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x559b877986d0 <col:31> 'int'
|     `-DeclRefExpr 0x559b877986b0 <col:31> 'int' EnumConstant 0x559b877985c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x559b87798738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x559b87798808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x559b87798858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x559b877988a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x559b87798978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x559b877989c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x559b87798a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x559b87798ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x559b87798b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x559b87798b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x559b87798dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x559b87798e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x559b87798e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x559b87798fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x559b87799008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x559b877990d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x559b87799128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x559b87799178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x559b87799248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x559b87799298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x559b877998f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x559b87799390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x559b877994a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559b877996e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x559b87799760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x559b877999b8 <col:47>
| |-NonNullAttr 0x559b87799a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x559b87799a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x559b87799b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x559b87799aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x559b87799dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x559b87799c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x559b87799ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x559b87799f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x559b87799e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x559b8779a040 <col:60>
|-FunctionDecl 0x559b8779a190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x559b8779a230 <col:54>
| `-ConstAttr 0x559b8779a288 <col:95>
|-FunctionDecl 0x559b8779a458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x559b8779a2c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559b8779a338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x559b8779a508 <line:394:19>
| `-ConstAttr 0x559b8779a560 <col:60>
|-FunctionDecl 0x559b8779af68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x559b8779ae30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x559b8779b010 <col:71>
| `-NonNullAttr 0x559b8779b068 <col:112, col:126> 1
|-FunctionDecl 0x559b8779b170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x559b8779b0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x559b8779b218 <line:397:22>
| `-NonNullAttr 0x559b8779b270 <col:63, col:77> 1
|-FunctionDecl 0x559b8779b498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x559b8779b2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x559b8779b338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x559b8779b548 <line:400:22>
| `-NonNullAttr 0x559b8779b5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x559b8779b7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559b8779b5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559b8779b668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x559b8779b858 <line:403:22>
| `-NonNullAttr 0x559b8779b8b0 <col:63, col:77> 1
|-FunctionDecl 0x559b8779bb08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x559b8779b8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x559b8779b9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x559b8779bbb8 <line:406:22>
| `-NonNullAttr 0x559b8779bc10 <col:63, col:80> 1 2
|-FunctionDecl 0x559b8779ce48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x559b8779bc58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559b8779bcd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559b8779cef8 <line:409:22>
| `-NonNullAttr 0x559b8779cf50 <col:63, col:77> 1
|-FunctionDecl 0x559b8779d188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559b8779cf98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559b8779d028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x559b8779d238 <line:412:22>
| `-NonNullAttr 0x559b8779d290 <col:63, col:80> 1 2
|-FunctionDecl 0x559b8779d4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559b8779d2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x559b8779d368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x559b8779d578 <col:37>
| `-NonNullAttr 0x559b8779d5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x559b8779d7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b8779d618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559b8779d698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x559b8779d868 <line:418:22>
| `-NonNullAttr 0x559b8779d8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x559b8779da48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559b8779d908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559b8779d988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x559b8779daf8 <line:420:22>
| `-NonNullAttr 0x559b8779db50 <col:63, col:77> 1
|-FunctionDecl 0x559b8779dcf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b8779db98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559b8779dc18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x559b8779dda8 <line:423:22>
| `-NonNullAttr 0x559b8779ee30 <col:63, col:80> 1 2
|-FunctionDecl 0x559b8779efb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559b8779ee78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559b8779eef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x559b8779f068 <line:426:22>
| `-NonNullAttr 0x559b8779f0c0 <col:63, col:77> 1
|-FunctionDecl 0x559b8779f268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b8779f108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559b8779f188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x559b8779f318 <line:429:22>
| `-NonNullAttr 0x559b8779f370 <col:63, col:80> 1 2
|-FunctionDecl 0x559b8779f4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559b8779f3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559b8779f438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x559b8779f5a8 <line:431:22>
| `-NonNullAttr 0x559b8779f600 <col:63, col:77> 1
|-FunctionDecl 0x559b8779f828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x559b8779f648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559b8779f6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x559b8779f8d8 <line:434:22>
| |-NonNullAttr 0x559b8779f930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x559b8779f968 <col:100> "" ""
|-FunctionDecl 0x559b8779fb78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x559b8779f9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559b8779fa38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x559b8779fc28 <line:437:22>
| |-NonNullAttr 0x559b8779fc80 <col:63, col:77> 1
| `-DeprecatedAttr 0x559b8779fcb8 <col:97> "" ""
|-FunctionDecl 0x559b8779feb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x559b8779fd08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559b8779fd80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x559b8779ff68 <line:440:22>
| `-NonNullAttr 0x559b8779ffc0 <col:63, col:80> 1 2
|-FunctionDecl 0x559b877a0140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x559b877a0008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559b877a0080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559b877a01f0 <line:443:22>
| `-NonNullAttr 0x559b877a0248 <col:63, col:77> 1
|-FunctionDecl 0x559b877a0538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x559b877a0298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559b877a0318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x559b877a0390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x559b877a05f0 <line:447:22>
| `-NonNullAttr 0x559b877a0648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x559b877a08f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x559b877a06a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559b877a0720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x559b877a0798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559b877a09b0 <col:43>
| `-NonNullAttr 0x559b877a0a08 <col:84, col:98> 1
|-FunctionDecl 0x559b877a0cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x559b877a0a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559b877a0ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x559b877a0b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x559b877a0d80 <line:452:22>
| `-NonNullAttr 0x559b877a0dd8 <col:63, col:77> 3
|-FunctionDecl 0x559b877a10e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559b877a0e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559b877a0ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x559b877a0f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x559b877a11a0 <line:456:22>
| `-NonNullAttr 0x559b877a11f8 <col:63, col:80> 2 3
|-FunctionDecl 0x559b877a13e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x559b877a1248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559b877a12c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x559b877a1498 <line:458:22>
|-FunctionDecl 0x559b877a1868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x559b877a1560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x559b877a1700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x559b877a1918 <col:52, col:69> 1 2
|-FunctionDecl 0x559b877a1ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x559b877a19a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x559b877a1a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x559b877a1ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x559b877a1b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x559b877a1c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x559b877a1e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x559b877a1d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x559b877a1fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x559b877a2040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x559b877a20e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x559b877a21d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x559b877a2240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x559b877a2410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix040_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x559b877a2508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x559b877a25c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x559b877a2560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x559b877a20c0 '__pthread_unwind_buf_t'
| |   `-Record 0x559b877a2040 ''
| `-AlignedAttr 0x559b877a2618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x559b877a2690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x559b877a27f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x559b877a2858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x559b877a28c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x559b877a2928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x559b877a2b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x559b877a2a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x559b877a2c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x559b877a2be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x559b877a2e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559b877a2d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x559b877a2f18 <line:487:22>
|-RecordDecl 0x559b877a2f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x559b877a3288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x559b877a30e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x559b877a3168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x559b877a3338 <col:86>
| `-ReturnsTwiceAttr 0x559b877a3390 <col:12> Implicit
|-FunctionDecl 0x559b877a36b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559b877a3460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x559b877a3570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x559b877a3768 <line:493:22>
| `-NonNullAttr 0x559b877a37c0 <col:63, col:77> 1
|-FunctionDecl 0x559b877a3938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559b877a3808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559b877a39e0 <line:495:22>
| `-NonNullAttr 0x559b877a3a38 <col:63, col:77> 1
|-FunctionDecl 0x559b877a3b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559b877a3a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559b877a3be8 <line:497:22>
| `-NonNullAttr 0x559b877a3c40 <col:52, col:66> 1
|-FunctionDecl 0x559b877a3d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559b877a3c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559b877a3de8 <line:499:22>
| `-NonNullAttr 0x559b877a3e40 <col:52, col:66> 1
|-FunctionDecl 0x559b877a4088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559b877a3e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559b877a3f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559b877a4138 <col:36>
| `-NonNullAttr 0x559b877a4190 <col:66, col:83> 1 2
|-FunctionDecl 0x559b877a4290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559b877a41d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559b877a4338 <line:504:22>
| `-NonNullAttr 0x559b877a4390 <col:52, col:66> 1
|-FunctionDecl 0x559b877a4628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b877a4440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559b877a44c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x559b877a46d8 <line:508:22>
| `-NonNullAttr 0x559b877a4730 <col:63, col:80> 1 2
|-FunctionDecl 0x559b877a49f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x559b877a4778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559b877a47f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x559b877a4878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x559b877a4ab0 <line:512:22>
| `-NonNullAttr 0x559b877a4b08 <col:63, col:80> 1 3
|-FunctionDecl 0x559b877a4c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559b877a4b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559b877a4cb8 <line:514:22>
| `-NonNullAttr 0x559b877a4d10 <col:63, col:77> 1
|-FunctionDecl 0x559b877a4f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559b877a4dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x559b877a4fe0 <line:516:22>
| `-NonNullAttr 0x559b877a5038 <col:63, col:77> 1
|-FunctionDecl 0x559b877a5140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559b877a5088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x559b877a51e8 <line:518:22>
| `-NonNullAttr 0x559b877a5240 <col:63, col:77> 1
|-FunctionDecl 0x559b877a5468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b877a5288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559b877a5308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x559b877a5518 <line:522:22>
| `-NonNullAttr 0x559b877a5570 <col:63, col:80> 1 2
|-FunctionDecl 0x559b877a5778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559b877a55b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559b877a5638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x559b877a5828 <line:525:22>
| `-NonNullAttr 0x559b877a5880 <col:63, col:77> 1
|-FunctionDecl 0x559b877a5a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b877a58c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559b877a5948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x559b877a5ad8 <line:528:22>
| `-NonNullAttr 0x559b877a5b30 <col:63, col:80> 1 2
|-FunctionDecl 0x559b877a5cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559b877a5b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559b877a5bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x559b877a5d68 <line:530:22>
| `-NonNullAttr 0x559b877a5dc0 <col:63, col:77> 1
|-FunctionDecl 0x559b877a6f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b877a5e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559b877a6eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x559b877a7040 <line:534:22>
| `-NonNullAttr 0x559b877a7098 <col:63, col:80> 1 2
|-FunctionDecl 0x559b877a7228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559b877a70e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559b877a7168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x559b877a72d8 <line:537:22>
| `-NonNullAttr 0x559b877a7330 <col:63, col:77> 1
|-FunctionDecl 0x559b877a74d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b877a7378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559b877a73f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x559b877a7588 <line:541:22>
| `-NonNullAttr 0x559b877a75e0 <col:63, col:80> 1 2
|-FunctionDecl 0x559b877a7768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559b877a7628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559b877a76a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x559b877a7818 <line:544:22>
| `-NonNullAttr 0x559b877a7870 <col:63, col:77> 1
|-FunctionDecl 0x559b877a7a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x559b877a78b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x559b877a7938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x559b877a7b08 <line:547:22>
| `-NonNullAttr 0x559b877a7b60 <col:63, col:80> 1 2
|-FunctionDecl 0x559b877a7ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559b877a7ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559b877a7c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x559b877a7d98 <line:550:22>
| `-NonNullAttr 0x559b877a7df0 <col:63, col:77> 1
|-FunctionDecl 0x559b877a9168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x559b877a8f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559b877a9020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x559b877a9218 <col:29>
| `-NonNullAttr 0x559b877a9270 <col:70, col:84> 1
|-FunctionDecl 0x559b877a93e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559b877a92b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559b877a9490 <line:555:22>
| `-NonNullAttr 0x559b877a94e8 <col:63, col:77> 1
|-FunctionDecl 0x559b877a95f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559b877a9538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559b877a9698 <line:557:22>
| `-NonNullAttr 0x559b877a96f0 <col:52, col:66> 1
|-FunctionDecl 0x559b877a97f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559b877a9738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559b877a9898 <line:559:19>
| `-NonNullAttr 0x559b877a98f0 <col:49, col:63> 1
|-FunctionDecl 0x559b877a9b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559b877a9938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559b877a99c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559b877a9bd8 <col:39>
| `-NonNullAttr 0x559b877a9c30 <col:69, col:86> 1 2
|-FunctionDecl 0x559b877a9d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559b877a9c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559b877a9dd8 <line:564:22>
| `-NonNullAttr 0x559b877a9e30 <col:52, col:66> 1
|-FunctionDecl 0x559b877a9f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559b877a9ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559b877aa040 <line:566:22>
| `-NonNullAttr 0x559b877aa098 <col:52, col:66> 1
|-FunctionDecl 0x559b877aa258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559b877aa0e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559b877aa178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559b877aa308 <col:39>
| `-NonNullAttr 0x559b877aa360 <col:69, col:86> 1 2
|-FunctionDecl 0x559b877aa460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559b877aa3a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559b877aa508 <line:571:22>
| `-NonNullAttr 0x559b877aa560 <col:52, col:66> 1
|-FunctionDecl 0x559b877aa748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x559b877aa610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x559b877aa7f0 <line:573:22>
| `-NonNullAttr 0x559b877aa848 <col:63, col:77> 1
|-FunctionDecl 0x559b877aa950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x559b877aa898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x559b877aa9f8 <line:575:22>
| `-NonNullAttr 0x559b877aaa50 <col:63, col:77> 1
|-FunctionDecl 0x559b877aac78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b877aaa98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x559b877aab18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x559b877aad28 <line:579:22>
| `-NonNullAttr 0x559b877aad80 <col:63, col:80> 1 2
|-FunctionDecl 0x559b877aafa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x559b877aadc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x559b877aae48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x559b877ab058 <line:582:22>
| `-NonNullAttr 0x559b877ab0b0 <col:63, col:77> 1
|-FunctionDecl 0x559b877ab258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b877ab0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x559b877ab178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x559b877ab308 <line:586:22>
| `-NonNullAttr 0x559b877ab360 <col:63, col:80> 1 2
|-FunctionDecl 0x559b877ab4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x559b877ab3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x559b877ab428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x559b877ab598 <col:36>
| `-NonNullAttr 0x559b877ab5f0 <col:77, col:91> 1
|-FunctionDecl 0x559b877ab928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x559b877ab6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559b877ab7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x559b877ab9d8 <line:591:22>
| `-NonNullAttr 0x559b877aba30 <col:63, col:77> 1
|-FunctionDecl 0x559b877abba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559b877aba78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559b877abc50 <line:593:22>
| `-NonNullAttr 0x559b877abca8 <col:63, col:77> 1
|-FunctionDecl 0x559b877abdb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559b877abcf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559b877abe58 <line:595:22>
| `-NonNullAttr 0x559b877abeb0 <col:52, col:66> 1
|-FunctionDecl 0x559b877abfc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559b877abf10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559b877ac070 <line:597:22>
| `-NonNullAttr 0x559b877ac0c8 <col:52, col:66> 1
|-FunctionDecl 0x559b877ac2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x559b877ac118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559b877ac190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x559b877ac3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x559b877ac6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559b877ac428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559b877ac4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559b877ac530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x559b877ac790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x559b877ac9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x559b877ac870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x559b877aca50 <line:606:22>
| `-NonNullAttr 0x559b877acaa8 <col:63, col:77> 1
|-FunctionDecl 0x559b877acbb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x559b877acaf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x559b877acc58 <line:608:22>
| `-NonNullAttr 0x559b877accb0 <col:63, col:77> 1
|-FunctionDecl 0x559b877acf10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b877accf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x559b877acd78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x559b877acfc0 <line:612:22>
| `-NonNullAttr 0x559b877ad018 <col:63, col:80> 1 2
|-FunctionDecl 0x559b877ad228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x559b877ad068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x559b877ad0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x559b877ad2d8 <col:37>
| `-NonNullAttr 0x559b877ad330 <col:78, col:92> 1
|-FunctionDecl 0x559b877ad548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x559b877ad378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x559b877ad420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x559b877ad5f8 <line:618:22>
| `-NonNullAttr 0x559b877ad650 <col:63, col:80> 1 2
|-FunctionDecl 0x559b877ad818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x559b877ad698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x559b877ad710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x559b877ad8c8 <line:621:22>
| `-NonNullAttr 0x559b877ad920 <col:63, col:77> 1
|-FunctionDecl 0x559b877adbc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x559b877ada00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x559b877ada80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x559b877adc78 <line:623:22>
| `-NonNullAttr 0x559b877adcd0 <col:63, col:77> 1
|-FunctionDecl 0x559b877ade48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559b877add18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559b877adf20 <line:625:22>
| `-NonNullAttr 0x559b877adf78 <col:63, col:77> 1
|-FunctionDecl 0x559b877ae080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559b877adfc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559b877ae128 <line:627:22>
| `-NonNullAttr 0x559b877ae180 <col:52, col:66> 1
|-FunctionDecl 0x559b877ae280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559b877ae1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559b877ae328 <line:629:22>
| `-NonNullAttr 0x559b877ae380 <col:52, col:66> 1
|-FunctionDecl 0x559b877ae480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559b877ae3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559b877ae528 <line:631:22>
| `-NonNullAttr 0x559b877ae580 <col:52, col:66> 1
|-FunctionDecl 0x559b877ae958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x559b877ae660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x559b877ae770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x559b877ae7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x559b877aea10 <line:635:22>
| `-NonNullAttr 0x559b877aea68 <col:63, col:77> 1
|-FunctionDecl 0x559b877aebe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x559b877aeab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x559b877aec90 <line:637:22>
| `-NonNullAttr 0x559b877aece8 <col:63, col:77> 1
|-FunctionDecl 0x559b877aedf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x559b877aed38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x559b877aee98 <line:639:22>
| `-NonNullAttr 0x559b877aeef0 <col:52, col:66> 1
|-FunctionDecl 0x559b877af0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x559b877aefb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x559b877af190 <line:641:22>
| `-NonNullAttr 0x559b877af1e8 <col:63, col:77> 1
|-FunctionDecl 0x559b877af2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x559b877af238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x559b877af398 <line:643:22>
| `-NonNullAttr 0x559b877af3f0 <col:63, col:77> 1
|-FunctionDecl 0x559b877af618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b877af438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x559b877af4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x559b877af6c8 <line:647:22>
| `-NonNullAttr 0x559b877af720 <col:63, col:80> 1 2
|-FunctionDecl 0x559b877af928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x559b877af768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x559b877af7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x559b877af9d8 <line:650:22>
| `-NonNullAttr 0x559b877afa30 <col:63, col:77> 1
|-FunctionDecl 0x559b877afd78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x559b877afb10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x559b877afc30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x559b877afe28 <line:653:22>
| `-NonNullAttr 0x559b877afe80 <col:63, col:77> 1
|-FunctionDecl 0x559b877affe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x559b877afec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x559b877b0090 <col:69>
|-FunctionDecl 0x559b877b0208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x559b877b00f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x559b877b02b0 <col:72>
|-FunctionDecl 0x559b877b04e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x559b877b0318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x559b877b03c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x559b877b0598 <col:44>
|-FunctionDecl 0x559b877b07b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x559b877b0600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559b877b0678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x559b877b0868 <line:660:22>
| `-NonNullAttr 0x559b877b08c0 <col:63, col:77> 2
|-FunctionDecl 0x559b877b0d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x559b877b09a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x559b877b0ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x559b877b0bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x559b877b0dc0 <col:47>
|-FunctionDecl 0x559b877b1f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x559b877b0e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559b877b20b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x559b877b2020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559b877b2210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x559b877b2178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559b877b2368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x559b877b22d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559b877b2430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x559b877b24f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x559b877b25b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x559b877b2668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x559b877b26e8 prev 0x559b877b2668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x559b877b2750 <col:24> 'int' 0
|-VarDecl 0x559b877b2788 <line:674:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x559b877b2808 prev 0x559b877b2788 <line:675:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x559b877b2870 <col:27> 'int' 0
|-VarDecl 0x559b877b28a8 <line:676:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x559b877b2928 prev 0x559b877b28a8 <line:677:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x559b877b2990 <col:27> 'int' 0
|-VarDecl 0x559b877b29c8 <line:678:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x559b877b2a48 prev 0x559b877b29c8 <line:679:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x559b877b2ab0 <col:27> 'int' 0
|-VarDecl 0x559b877b2ae8 <line:680:1, col:5> col:5 used a 'int'
|-VarDecl 0x559b877b2b68 prev 0x559b877b2ae8 <line:681:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x559b877b2bd0 <col:9> 'int' 0
|-VarDecl 0x559b877b2c08 <line:682:1, col:5> col:5 used b 'int'
|-VarDecl 0x559b877b2c88 prev 0x559b877b2c08 <line:683:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x559b877b2cf0 <col:9> 'int' 0
|-VarDecl 0x559b877b2d20 <line:684:1, col:7> col:7 used b$flush_delayed '_Bool'
|-VarDecl 0x559b877b2da0 <line:685:1, col:5> col:5 used b$mem_tmp 'int'
|-VarDecl 0x559b877b2e18 <line:686:1, col:7> col:7 used b$r_buff0_thd0 '_Bool'
|-VarDecl 0x559b877b2e90 <line:687:1, col:7> col:7 used b$r_buff0_thd1 '_Bool'
|-VarDecl 0x559b877b2f70 <line:688:1, col:7> col:7 used b$r_buff0_thd2 '_Bool'
|-VarDecl 0x559b877b2fe8 <line:689:1, col:7> col:7 used b$r_buff0_thd3 '_Bool'
|-VarDecl 0x559b877b3060 <line:690:1, col:7> col:7 used b$r_buff0_thd4 '_Bool'
|-VarDecl 0x559b877b30d8 <line:691:1, col:7> col:7 used b$r_buff1_thd0 '_Bool'
|-VarDecl 0x559b877b3150 <line:692:1, col:7> col:7 used b$r_buff1_thd1 '_Bool'
|-VarDecl 0x559b877b31c8 <line:693:1, col:7> col:7 used b$r_buff1_thd2 '_Bool'
|-VarDecl 0x559b877b3240 <line:694:1, col:7> col:7 used b$r_buff1_thd3 '_Bool'
|-VarDecl 0x559b877b32b8 <line:695:1, col:7> col:7 used b$r_buff1_thd4 '_Bool'
|-VarDecl 0x559b877b3330 <line:696:1, col:7> col:7 b$read_delayed '_Bool'
|-VarDecl 0x559b877b33b0 <line:697:1, col:6> col:6 b$read_delayed_var 'int *'
|-VarDecl 0x559b877b3430 <line:698:1, col:5> col:5 used b$w_buff0 'int'
|-VarDecl 0x559b877b34a8 <line:699:1, col:7> col:7 used b$w_buff0_used '_Bool'
|-VarDecl 0x559b877b3528 <line:700:1, col:5> col:5 used b$w_buff1 'int'
|-VarDecl 0x559b877b35a0 <line:701:1, col:7> col:7 used b$w_buff1_used '_Bool'
|-VarDecl 0x559b877b3618 <line:702:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x559b877b3690 <line:703:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x559b877b3710 <line:704:1, col:5> col:5 used x 'int'
|-VarDecl 0x559b877b3790 prev 0x559b877b3710 <line:705:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x559b877b37f8 <col:9> 'int' 0
|-VarDecl 0x559b877b3830 <line:706:1, col:5> col:5 used y 'int'
|-VarDecl 0x559b877b38b0 prev 0x559b877b3830 <line:707:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x559b877b3918 <col:9> 'int' 0
|-VarDecl 0x559b877b3950 <line:708:1, col:5> col:5 used z 'int'
|-VarDecl 0x559b877b39d0 prev 0x559b877b3950 <line:709:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x559b877b3a38 <col:9> 'int' 0
|-VarDecl 0x559b877b3a68 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x559b877b3ae0 <line:711:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x559b877b3bf8 prev 0x559b877b1f60 <line:712:1, line:741:1> line:712:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x559b877b3b60 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559b877b5498 <line:713:1, line:741:1>
|   |-CallExpr 0x559b877b3d08 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b877b3cf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b3ca0 <col:3> 'void ()' Function 0x559b87759350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b877b3d80 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559b877b3d28 <col:3> 'int' lvalue Var 0x559b877b3528 'b$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x559b877b3d68 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b877b3d48 <col:15> 'int' lvalue Var 0x559b877b3430 'b$w_buff0' 'int'
|   |-BinaryOperator 0x559b877b3de0 <line:716:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559b877b3da0 <col:3> 'int' lvalue Var 0x559b877b3430 'b$w_buff0' 'int'
|   | `-IntegerLiteral 0x559b877b3dc0 <col:15> 'int' 1
|   |-BinaryOperator 0x559b877b3e58 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559b877b3e00 <col:3> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559b877b3e40 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b877b3e20 <col:20> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559b877b3ef0 <line:718:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x559b877b3e78 <col:3> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x559b877b3ec8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559b877b3e98 <col:27> 'int' 1
|   |-CallExpr 0x559b877b4088 <line:719:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x559b877b4070 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x559b877b3f10 <col:3> 'void (int)' Function 0x559b877590d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x559b877b4020 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x559b877b4000 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x559b877b3fe0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x559b877b3f98 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x559b877b3f80 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x559b877b3f30 <col:23> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x559b877b3fc8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x559b877b3fb0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x559b877b3f50 <col:41> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559b877b4108 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559b877b40b0 <col:3> '_Bool' lvalue Var 0x559b877b30d8 'b$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x559b877b40f0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b877b40d0 <col:20> '_Bool' lvalue Var 0x559b877b2e18 'b$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x559b877b4180 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559b877b4128 <col:3> '_Bool' lvalue Var 0x559b877b3150 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559b877b4168 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b877b4148 <col:20> '_Bool' lvalue Var 0x559b877b2e90 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x559b877b41f8 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559b877b41a0 <col:3> '_Bool' lvalue Var 0x559b877b31c8 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559b877b41e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b877b41c0 <col:20> '_Bool' lvalue Var 0x559b877b2f70 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x559b877b4270 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559b877b4218 <col:3> '_Bool' lvalue Var 0x559b877b3240 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559b877b4258 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b877b4238 <col:20> '_Bool' lvalue Var 0x559b877b2fe8 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x559b877b42e8 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559b877b4290 <col:3> '_Bool' lvalue Var 0x559b877b32b8 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559b877b42d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b877b42b0 <col:20> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x559b877b4380 <line:725:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x559b877b4308 <col:3> '_Bool' lvalue Var 0x559b877b2e90 'b$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x559b877b4358 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559b877b4328 <col:27> 'int' 1
|   |-CallExpr 0x559b877b43d8 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b877b43c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b43a0 <col:3> 'void ()' Function 0x559b87759410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559b877b4430 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b877b4418 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b43f8 <col:3> 'void ()' Function 0x559b87759350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b877b4490 <line:728:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559b877b4450 <col:3> 'int' lvalue Var 0x559b877b3790 'x' 'int'
|   | `-IntegerLiteral 0x559b877b4470 <col:7> 'int' 1
|   |-CallExpr 0x559b877b44e8 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b877b44d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b44b0 <col:3> 'void ()' Function 0x559b87759410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559b877b4540 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b877b4528 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b4508 <col:3> 'void ()' Function 0x559b87759350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b877b4828 <line:731:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559b877b4560 <col:3> 'int' lvalue Var 0x559b877b2c88 'b' 'int'
|   | `-ConditionalOperator 0x559b877b47f8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559b877b4620 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559b877b45d8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559b877b45c0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559b877b4580 <col:7> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559b877b4608 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559b877b45f0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559b877b45a0 <col:25> '_Bool' lvalue Var 0x559b877b2e90 'b$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x559b877b47e0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b877b4640 <col:42> 'int' lvalue Var 0x559b877b3430 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x559b877b47c0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559b877b4790 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559b877b4700 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559b877b46b8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559b877b46a0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559b877b4660 <col:55> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559b877b46e8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559b877b46d0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559b877b4680 <col:73> '_Bool' lvalue Var 0x559b877b3150 'b$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x559b877b4760 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559b877b4720 <col:90> 'int' lvalue Var 0x559b877b3528 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559b877b4778 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b877b4740 <col:102> 'int' lvalue Var 0x559b877b2c88 'b' 'int'
|   |-BinaryOperator 0x559b877b4a30 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559b877b4848 <col:3> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559b877b4a18 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b877b49e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559b877b4908 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559b877b48c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559b877b48a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559b877b4868 <col:20> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559b877b48f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559b877b48d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559b877b4888 <col:38> '_Bool' lvalue Var 0x559b877b2e90 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559b877b49a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b877b4958 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b877b4928 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559b877b49d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b877b49b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b877b4980 <col:66> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559b877b4d18 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559b877b4a50 <col:3> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559b877b4d00 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b877b4cd0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559b877b4bf0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559b877b4b10 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559b877b4ac8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559b877b4ab0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559b877b4a70 <col:20> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559b877b4af8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559b877b4ae0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559b877b4a90 <col:38> '_Bool' lvalue Var 0x559b877b2e90 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x559b877b4bd0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559b877b4b88 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559b877b4b70 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559b877b4b30 <col:56> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559b877b4bb8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559b877b4ba0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559b877b4b50 <col:74> '_Bool' lvalue Var 0x559b877b3150 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559b877b4c88 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b877b4c40 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b877b4c10 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559b877b4cb8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b877b4ca0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b877b4c68 <col:102> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559b877b4f20 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559b877b4d38 <col:3> '_Bool' lvalue Var 0x559b877b2e90 'b$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559b877b4f08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b877b4ed8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559b877b4df8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559b877b4db0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559b877b4d98 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559b877b4d58 <col:20> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559b877b4de0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559b877b4dc8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559b877b4d78 <col:38> '_Bool' lvalue Var 0x559b877b2e90 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559b877b4e90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b877b4e48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b877b4e18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559b877b4ec0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b877b4ea8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b877b4e70 <col:66> '_Bool' lvalue Var 0x559b877b2e90 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x559b877b5218 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559b877b4f40 <col:3> '_Bool' lvalue Var 0x559b877b3150 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559b877b5200 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b877b51d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559b877b50f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559b877b5010 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559b877b4fc8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559b877b4fb0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559b877b4f60 <col:20> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559b877b4ff8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559b877b4fe0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559b877b4f90 <col:38> '_Bool' lvalue Var 0x559b877b2e90 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x559b877b50d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559b877b5088 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559b877b5070 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559b877b5030 <col:56> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559b877b50b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559b877b50a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559b877b5050 <col:74> '_Bool' lvalue Var 0x559b877b3150 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559b877b5188 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b877b5140 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b877b5110 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559b877b51b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b877b51a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b877b5168 <col:102> '_Bool' lvalue Var 0x559b877b3150 'b$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x559b877b5270 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b877b5258 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b5238 <col:3> 'void ()' Function 0x559b87759410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559b877b52c8 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b877b52b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b5290 <col:3> 'void ()' Function 0x559b87759350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b877b5380 <line:738:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559b877b52e8 <col:3> 'int' lvalue Var 0x559b877b26e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559b877b5360 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559b877b5348 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b877b5308 <col:22> 'int' lvalue Var 0x559b877b26e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559b877b5328 <col:41> 'int' 1
|   |-CallExpr 0x559b877b53d8 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b877b53c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b53a0 <col:3> 'void ()' Function 0x559b87759410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559b877b5488 <line:740:3, col:36>
|     `-CallExpr 0x559b877b5468 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559b877b5450 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559b877b53f8 <col:10> 'void *(void)' Function 0x559b87758e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559b877b5630 prev 0x559b877b20b8 <line:742:1, line:761:1> line:742:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x559b877b5598 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559b877b6850 <line:743:1, line:761:1>
|   |-CallExpr 0x559b877b5710 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b877b56f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b56d8 <col:3> 'void ()' Function 0x559b87759350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b877b5770 <line:745:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559b877b5730 <col:3> 'int' lvalue Var 0x559b877b3790 'x' 'int'
|   | `-IntegerLiteral 0x559b877b5750 <col:7> 'int' 2
|   |-CallExpr 0x559b877b57c8 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b877b57b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b5790 <col:3> 'void ()' Function 0x559b87759410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559b877b5820 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b877b5808 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b57e8 <col:3> 'void ()' Function 0x559b87759350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b877b5880 <line:748:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559b877b5840 <col:3> 'int' lvalue Var 0x559b877b38b0 'y' 'int'
|   | `-IntegerLiteral 0x559b877b5860 <col:7> 'int' 1
|   |-CallExpr 0x559b877b58d8 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b877b58c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b58a0 <col:3> 'void ()' Function 0x559b87759410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559b877b5930 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b877b5918 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b58f8 <col:3> 'void ()' Function 0x559b87759350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b877b5c18 <line:751:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559b877b5950 <col:3> 'int' lvalue Var 0x559b877b2c88 'b' 'int'
|   | `-ConditionalOperator 0x559b877b5be8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559b877b5a10 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559b877b59c8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559b877b59b0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559b877b5970 <col:7> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559b877b59f8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559b877b59e0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559b877b5990 <col:25> '_Bool' lvalue Var 0x559b877b2f70 'b$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x559b877b5bd0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b877b5a30 <col:42> 'int' lvalue Var 0x559b877b3430 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x559b877b5bb0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559b877b5b80 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559b877b5af0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559b877b5aa8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559b877b5a90 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559b877b5a50 <col:55> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559b877b5ad8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559b877b5ac0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559b877b5a70 <col:73> '_Bool' lvalue Var 0x559b877b31c8 'b$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x559b877b5b50 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559b877b5b10 <col:90> 'int' lvalue Var 0x559b877b3528 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559b877b5b68 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b877b5b30 <col:102> 'int' lvalue Var 0x559b877b2c88 'b' 'int'
|   |-BinaryOperator 0x559b877b5e20 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559b877b5c38 <col:3> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559b877b5e08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b877b5dd8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559b877b5cf8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559b877b5cb0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559b877b5c98 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559b877b5c58 <col:20> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559b877b5ce0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559b877b5cc8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559b877b5c78 <col:38> '_Bool' lvalue Var 0x559b877b2f70 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559b877b5d90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b877b5d48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b877b5d18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559b877b5dc0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b877b5da8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b877b5d70 <col:66> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559b877b6118 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559b877b5e40 <col:3> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559b877b6100 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b877b60d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559b877b5ff0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559b877b5f00 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559b877b5eb8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559b877b5ea0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559b877b5e60 <col:20> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559b877b5ee8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559b877b5ed0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559b877b5e80 <col:38> '_Bool' lvalue Var 0x559b877b2f70 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x559b877b5fd0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559b877b5f78 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559b877b5f60 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559b877b5f20 <col:56> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559b877b5fb8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559b877b5fa0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559b877b5f40 <col:74> '_Bool' lvalue Var 0x559b877b31c8 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559b877b6088 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b877b6040 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b877b6010 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559b877b60b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b877b60a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b877b6068 <col:102> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559b877b6320 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559b877b6138 <col:3> '_Bool' lvalue Var 0x559b877b2f70 'b$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559b877b6308 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b877b62d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559b877b61f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559b877b61b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559b877b6198 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559b877b6158 <col:20> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559b877b61e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559b877b61c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559b877b6178 <col:38> '_Bool' lvalue Var 0x559b877b2f70 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559b877b6290 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b877b6248 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b877b6218 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559b877b62c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b877b62a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b877b6270 <col:66> '_Bool' lvalue Var 0x559b877b2f70 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x559b877b6608 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559b877b6340 <col:3> '_Bool' lvalue Var 0x559b877b31c8 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559b877b65f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b877b65c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559b877b64e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559b877b6400 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559b877b63b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559b877b63a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559b877b6360 <col:20> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559b877b63e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559b877b63d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559b877b6380 <col:38> '_Bool' lvalue Var 0x559b877b2f70 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x559b877b64c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559b877b6478 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559b877b6460 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559b877b6420 <col:56> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559b877b64a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559b877b6490 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559b877b6440 <col:74> '_Bool' lvalue Var 0x559b877b31c8 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559b877b6578 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b877b6530 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b877b6500 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559b877b65a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b877b6590 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b877b6558 <col:102> '_Bool' lvalue Var 0x559b877b31c8 'b$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x559b877b6660 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b877b6648 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b6628 <col:3> 'void ()' Function 0x559b87759410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559b877b66b8 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b877b66a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b6680 <col:3> 'void ()' Function 0x559b87759350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b877b6770 <line:758:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559b877b66d8 <col:3> 'int' lvalue Var 0x559b877b26e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559b877b6750 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559b877b6738 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b877b66f8 <col:22> 'int' lvalue Var 0x559b877b26e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559b877b6718 <col:41> 'int' 1
|   |-CallExpr 0x559b877b67c8 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b877b67b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b6790 <col:3> 'void ()' Function 0x559b87759410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559b877b6840 <line:760:3, col:36>
|     `-CallExpr 0x559b877b6820 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559b877b6808 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559b877b67e8 <col:10> 'void *(void)' Function 0x559b87758e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559b877b6998 prev 0x559b877b2210 <line:762:1, line:781:1> line:762:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x559b877b6900 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559b877b7bd8 <line:763:1, line:781:1>
|   |-CallExpr 0x559b877b6a78 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b877b6a60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b6a40 <col:3> 'void ()' Function 0x559b87759350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b877b6ad8 <line:765:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559b877b6a98 <col:3> 'int' lvalue Var 0x559b877b38b0 'y' 'int'
|   | `-IntegerLiteral 0x559b877b6ab8 <col:7> 'int' 2
|   |-CallExpr 0x559b877b6b30 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b877b6b18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b6af8 <col:3> 'void ()' Function 0x559b87759410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559b877b6b88 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b877b6b70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b6b50 <col:3> 'void ()' Function 0x559b87759350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b877b6c00 <line:768:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559b877b6ba8 <col:3> 'int' lvalue Var 0x559b877b2808 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x559b877b6be8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b877b6bc8 <col:25> 'int' lvalue Var 0x559b877b39d0 'z' 'int'
|   |-CallExpr 0x559b877b6c58 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b877b6c40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b6c20 <col:3> 'void ()' Function 0x559b87759410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559b877b6cb0 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b877b6c98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b6c78 <col:3> 'void ()' Function 0x559b87759350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b877b6fb0 <line:771:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559b877b6cd0 <col:3> 'int' lvalue Var 0x559b877b2c88 'b' 'int'
|   | `-ConditionalOperator 0x559b877b6f68 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559b877b6d90 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559b877b6d48 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559b877b6d30 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559b877b6cf0 <col:7> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559b877b6d78 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559b877b6d60 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559b877b6d10 <col:25> '_Bool' lvalue Var 0x559b877b2fe8 'b$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x559b877b6f50 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b877b6db0 <col:42> 'int' lvalue Var 0x559b877b3430 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x559b877b6f30 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559b877b6f00 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559b877b6e70 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559b877b6e28 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559b877b6e10 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559b877b6dd0 <col:55> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559b877b6e58 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559b877b6e40 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559b877b6df0 <col:73> '_Bool' lvalue Var 0x559b877b3240 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x559b877b6ed0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559b877b6e90 <col:90> 'int' lvalue Var 0x559b877b3528 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559b877b6ee8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b877b6eb0 <col:102> 'int' lvalue Var 0x559b877b2c88 'b' 'int'
|   |-BinaryOperator 0x559b877b71b8 <line:772:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559b877b6fd0 <col:3> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559b877b71a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b877b7170 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559b877b7090 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559b877b7048 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559b877b7030 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559b877b6ff0 <col:20> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559b877b7078 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559b877b7060 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559b877b7010 <col:38> '_Bool' lvalue Var 0x559b877b2fe8 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559b877b7128 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b877b70e0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b877b70b0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559b877b7158 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b877b7140 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b877b7108 <col:66> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559b877b74a0 <line:773:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559b877b71d8 <col:3> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559b877b7488 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b877b7458 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559b877b7378 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559b877b7298 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559b877b7250 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559b877b7238 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559b877b71f8 <col:20> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559b877b7280 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559b877b7268 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559b877b7218 <col:38> '_Bool' lvalue Var 0x559b877b2fe8 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x559b877b7358 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559b877b7310 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559b877b72f8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559b877b72b8 <col:56> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559b877b7340 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559b877b7328 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559b877b72d8 <col:74> '_Bool' lvalue Var 0x559b877b3240 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559b877b7410 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b877b73c8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b877b7398 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559b877b7440 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b877b7428 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b877b73f0 <col:102> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559b877b76a8 <line:774:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559b877b74c0 <col:3> '_Bool' lvalue Var 0x559b877b2fe8 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559b877b7690 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b877b7660 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559b877b7580 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559b877b7538 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559b877b7520 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559b877b74e0 <col:20> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559b877b7568 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559b877b7550 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559b877b7500 <col:38> '_Bool' lvalue Var 0x559b877b2fe8 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559b877b7618 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b877b75d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b877b75a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559b877b7648 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b877b7630 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b877b75f8 <col:66> '_Bool' lvalue Var 0x559b877b2fe8 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x559b877b7990 <line:775:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559b877b76c8 <col:3> '_Bool' lvalue Var 0x559b877b3240 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559b877b7978 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b877b7948 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559b877b7868 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559b877b7788 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559b877b7740 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559b877b7728 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559b877b76e8 <col:20> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559b877b7770 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559b877b7758 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559b877b7708 <col:38> '_Bool' lvalue Var 0x559b877b2fe8 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x559b877b7848 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559b877b7800 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559b877b77e8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559b877b77a8 <col:56> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559b877b7830 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559b877b7818 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559b877b77c8 <col:74> '_Bool' lvalue Var 0x559b877b3240 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559b877b7900 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b877b78b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b877b7888 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559b877b7930 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b877b7918 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b877b78e0 <col:102> '_Bool' lvalue Var 0x559b877b3240 'b$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x559b877b79e8 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b877b79d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b79b0 <col:3> 'void ()' Function 0x559b87759410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559b877b7a40 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b877b7a28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b7a08 <col:3> 'void ()' Function 0x559b87759350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b877b7af8 <line:778:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559b877b7a60 <col:3> 'int' lvalue Var 0x559b877b26e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559b877b7ad8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559b877b7ac0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b877b7a80 <col:22> 'int' lvalue Var 0x559b877b26e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559b877b7aa0 <col:41> 'int' 1
|   |-CallExpr 0x559b877b7b50 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b877b7b38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b7b18 <col:3> 'void ()' Function 0x559b87759410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559b877b7bc8 <line:780:3, col:36>
|     `-CallExpr 0x559b877b7ba8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559b877b7b90 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559b877b7b70 <col:10> 'void *(void)' Function 0x559b87758e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559b877b7d20 prev 0x559b877b2368 <line:782:1, line:820:1> line:782:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x559b877b7c88 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559b877bbb18 <line:783:1, line:820:1>
|   |-CallExpr 0x559b877b7e00 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b877b7de8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b7dc8 <col:3> 'void ()' Function 0x559b87759350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b877b7e60 <line:785:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559b877b7e20 <col:3> 'int' lvalue Var 0x559b877b39d0 'z' 'int'
|   | `-IntegerLiteral 0x559b877b7e40 <col:7> 'int' 1
|   |-CallExpr 0x559b877b7eb8 <line:786:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b877b7ea0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b7e80 <col:3> 'void ()' Function 0x559b87759410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559b877b7f10 <line:787:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b877b7ef8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b7ed8 <col:3> 'void ()' Function 0x559b87759350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b877b7f70 <line:788:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559b877b7f30 <col:3> 'int' lvalue Var 0x559b877b2b68 'a' 'int'
|   | `-IntegerLiteral 0x559b877b7f50 <col:7> 'int' 1
|   |-CallExpr 0x559b877b7fd8 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b877b7fc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b7f90 <col:3> 'void ()' Function 0x559b87759410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559b877b8030 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b877b8018 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b7ff8 <col:3> 'void ()' Function 0x559b87759350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b877b80a8 <line:791:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559b877b8050 <col:3> 'int' lvalue Var 0x559b877b2928 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x559b877b8090 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b877b8070 <col:25> 'int' lvalue Var 0x559b877b2b68 'a' 'int'
|   |-CallExpr 0x559b877b8100 <line:792:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b877b80e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b80c8 <col:3> 'void ()' Function 0x559b87759410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559b877b8158 <line:793:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b877b8140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877b8120 <col:3> 'void ()' Function 0x559b87759350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b877b8208 <line:794:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x559b877b8178 <col:3> '_Bool' lvalue Var 0x559b877b3a68 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x559b877b81f0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x559b877b81d0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x559b877b81b8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x559b877b8198 <col:19> 'void *(void)' Function 0x559b87758e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x559b877b82b8 <line:795:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x559b877b8228 <col:3> '_Bool' lvalue Var 0x559b877b3ae0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x559b877b82a0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x559b877b8280 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x559b877b8268 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x559b877b8248 <col:19> 'void *(void)' Function 0x559b87758e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x559b877b8330 <line:796:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x559b877b82d8 <col:3> '_Bool' lvalue Var 0x559b877b2d20 'b$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x559b877b8318 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b877b82f8 <col:21> '_Bool' lvalue Var 0x559b877b3ae0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x559b877b83a8 <line:797:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559b877b8350 <col:3> 'int' lvalue Var 0x559b877b2da0 'b$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x559b877b8390 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b877b8370 <col:15> 'int' lvalue Var 0x559b877b2c88 'b' 'int'
|   |-BinaryOperator 0x559b877b87e0 <line:798:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x559b877b83c8 <col:3> 'int' lvalue Var 0x559b877b2c88 'b' 'int'
|   | `-ConditionalOperator 0x559b877b87b0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x559b877b85d8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x559b877b84f8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x559b877b8420 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x559b877b8408 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x559b877b83e8 <col:8> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x559b877b84d8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x559b877b8470 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x559b877b8458 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x559b877b8438 <col:27> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x559b877b84c0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x559b877b84a8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x559b877b8488 <col:46> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x559b877b85b8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x559b877b8550 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x559b877b8538 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x559b877b8518 <col:65> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x559b877b85a0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x559b877b8588 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x559b877b8568 <col:84> '_Bool' lvalue Var 0x559b877b32b8 'b$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x559b877b8798 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b877b85f8 <col:101> 'int' lvalue Var 0x559b877b2c88 'b' 'int'
|   |   `-ParenExpr 0x559b877b8778 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x559b877b8748 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x559b877b86b8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559b877b8670 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559b877b8658 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559b877b8618 <col:106> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559b877b86a0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559b877b8688 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559b877b8638 <col:124> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x559b877b8718 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559b877b86d8 <col:141> 'int' lvalue Var 0x559b877b3430 'b$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x559b877b8730 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b877b86f8 <col:153> 'int' lvalue Var 0x559b877b3528 'b$w_buff1' 'int'
|   |-BinaryOperator 0x559b877b8cf0 <line:799:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559b877b8800 <col:3> 'int' lvalue Var 0x559b877b3430 'b$w_buff0' 'int'
|   | `-ConditionalOperator 0x559b877b8cc0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559b877b8c90 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559b877b8c78 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559b877b8820 <col:15> '_Bool' lvalue Var 0x559b877b3ae0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559b877b8ca8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b877b8840 <col:31> 'int' lvalue Var 0x559b877b3430 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x559b877b8c58 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559b877b8c28 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559b877b8a50 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559b877b8970 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559b877b8898 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559b877b8880 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559b877b8860 <col:45> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559b877b8950 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559b877b88e8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559b877b88d0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559b877b88b0 <col:64> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x559b877b8938 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559b877b8920 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559b877b8900 <col:83> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559b877b8a30 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559b877b89c8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559b877b89b0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559b877b8990 <col:102> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x559b877b8a18 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559b877b8a00 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559b877b89e0 <col:121> '_Bool' lvalue Var 0x559b877b32b8 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x559b877b8c10 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559b877b8a70 <col:138> 'int' lvalue Var 0x559b877b3430 'b$w_buff0' 'int'
|   |       `-ParenExpr 0x559b877b8bf0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559b877b8bc0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559b877b8b30 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559b877b8ae8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559b877b8ad0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559b877b8a90 <col:151> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559b877b8b18 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559b877b8b00 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559b877b8ab0 <col:169> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x559b877b8b90 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559b877b8b50 <col:186> 'int' lvalue Var 0x559b877b3430 'b$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x559b877b8ba8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559b877b8b70 <col:198> 'int' lvalue Var 0x559b877b3430 'b$w_buff0' 'int'
|   |-BinaryOperator 0x559b877b9210 <line:800:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559b877b8d10 <col:3> 'int' lvalue Var 0x559b877b3528 'b$w_buff1' 'int'
|   | `-ConditionalOperator 0x559b877b91e0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559b877b91b0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559b877b9198 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559b877b8d30 <col:15> '_Bool' lvalue Var 0x559b877b3ae0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559b877b91c8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b877b8d50 <col:31> 'int' lvalue Var 0x559b877b3528 'b$w_buff1' 'int'
|   |   `-ParenExpr 0x559b877b9178 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559b877b9148 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559b877b8f60 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559b877b8e80 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559b877b8da8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559b877b8d90 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559b877b8d70 <col:45> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559b877b8e60 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559b877b8df8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559b877b8de0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559b877b8dc0 <col:64> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x559b877b8e48 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559b877b8e30 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559b877b8e10 <col:83> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559b877b8f40 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559b877b8ed8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559b877b8ec0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559b877b8ea0 <col:102> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x559b877b8f28 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559b877b8f10 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559b877b8ef0 <col:121> '_Bool' lvalue Var 0x559b877b32b8 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x559b877b9130 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559b877b8f80 <col:138> 'int' lvalue Var 0x559b877b3528 'b$w_buff1' 'int'
|   |       `-ParenExpr 0x559b877b9110 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559b877b90e0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559b877b9050 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559b877b9008 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559b877b8ff0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559b877b8fa0 <col:151> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559b877b9038 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559b877b9020 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559b877b8fd0 <col:169> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x559b877b90b0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559b877b9070 <col:186> 'int' lvalue Var 0x559b877b3528 'b$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x559b877b90c8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559b877b9090 <col:198> 'int' lvalue Var 0x559b877b3528 'b$w_buff1' 'int'
|   |-BinaryOperator 0x559b877b97b8 <line:801:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559b877b9230 <col:3> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559b877b97a0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b877b9770 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559b877b9728 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559b877b9710 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559b877b9250 <col:20> '_Bool' lvalue Var 0x559b877b3ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559b877b9758 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559b877b9740 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559b877b9270 <col:36> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x559b877b96f0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559b877b96c0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559b877b9480 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559b877b93a0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559b877b92c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559b877b92b0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559b877b9290 <col:55> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559b877b9380 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559b877b9318 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559b877b9300 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559b877b92e0 <col:74> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x559b877b9368 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559b877b9350 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559b877b9330 <col:93> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559b877b9460 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559b877b93f8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559b877b93e0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559b877b93c0 <col:112> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x559b877b9448 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559b877b9430 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559b877b9410 <col:131> '_Bool' lvalue Var 0x559b877b32b8 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x559b877b96a8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559b877b9690 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559b877b94a0 <col:148> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x559b877b9670 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559b877b9640 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559b877b9560 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559b877b9518 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559b877b9500 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559b877b94c0 <col:166> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559b877b9548 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559b877b9530 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559b877b94e0 <col:184> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x559b877b95f8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559b877b95b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559b877b9580 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559b877b9628 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559b877b9610 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559b877b95d8 <col:212> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559b877b9d80 <line:802:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559b877b97d8 <col:3> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559b877b9d68 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b877b9d38 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559b877b9cf0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559b877b9cd8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559b877b97f8 <col:20> '_Bool' lvalue Var 0x559b877b3ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559b877b9d20 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559b877b9d08 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559b877b9818 <col:36> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x559b877b9cb8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559b877b9c88 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559b877b9a28 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559b877b9948 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559b877b9870 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559b877b9858 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559b877b9838 <col:55> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559b877b9928 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559b877b98c0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559b877b98a8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559b877b9888 <col:74> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x559b877b9910 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559b877b98f8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559b877b98d8 <col:93> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559b877b9a08 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559b877b99a0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559b877b9988 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559b877b9968 <col:112> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x559b877b99f0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559b877b99d8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559b877b99b8 <col:131> '_Bool' lvalue Var 0x559b877b32b8 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x559b877b9c70 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559b877b9c58 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559b877b9a48 <col:148> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x559b877b9c38 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559b877b9c08 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559b877b9b08 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559b877b9ac0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559b877b9aa8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559b877b9a68 <col:166> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559b877b9af0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559b877b9ad8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559b877b9a88 <col:184> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x559b877b9bd8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559b877b9b58 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559b877b9b28 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559b877b9bf0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559b877b9bb0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559b877b9b80 <col:219> 'int' 0
|   |-BinaryOperator 0x559b877ba338 <line:803:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559b877b9da0 <col:3> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559b877ba320 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b877ba2f0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559b877ba2a8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559b877ba290 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559b877b9dc0 <col:20> '_Bool' lvalue Var 0x559b877b3ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559b877ba2d8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559b877ba2c0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559b877b9de0 <col:36> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x559b877ba270 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559b877ba240 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559b877ba000 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559b877b9f10 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559b877b9e38 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559b877b9e20 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559b877b9e00 <col:55> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559b877b9ef0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559b877b9e88 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559b877b9e70 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559b877b9e50 <col:74> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x559b877b9ed8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559b877b9ec0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559b877b9ea0 <col:93> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559b877b9fe0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559b877b9f68 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559b877b9f50 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559b877b9f30 <col:112> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x559b877b9fb8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559b877b9fa0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559b877b9f80 <col:131> '_Bool' lvalue Var 0x559b877b32b8 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x559b877ba228 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559b877ba210 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559b877ba020 <col:148> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x559b877ba1f0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559b877ba1c0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559b877ba0e0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559b877ba098 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559b877ba080 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559b877ba040 <col:166> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559b877ba0c8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559b877ba0b0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559b877ba060 <col:184> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x559b877ba178 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559b877ba130 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559b877ba100 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559b877ba1a8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559b877ba190 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559b877ba158 <col:212> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x559b877ba900 <line:804:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559b877ba358 <col:3> '_Bool' lvalue Var 0x559b877b32b8 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559b877ba8e8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b877ba8b8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559b877ba870 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559b877ba858 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559b877ba378 <col:20> '_Bool' lvalue Var 0x559b877b3ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559b877ba8a0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559b877ba888 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559b877ba398 <col:36> '_Bool' lvalue Var 0x559b877b32b8 'b$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x559b877ba838 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559b877ba808 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559b877ba5a8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559b877ba4c8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559b877ba3f0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559b877ba3d8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559b877ba3b8 <col:55> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559b877ba4a8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559b877ba440 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559b877ba428 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559b877ba408 <col:74> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x559b877ba490 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559b877ba478 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559b877ba458 <col:93> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559b877ba588 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559b877ba520 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559b877ba508 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559b877ba4e8 <col:112> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x559b877ba570 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559b877ba558 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559b877ba538 <col:131> '_Bool' lvalue Var 0x559b877b32b8 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x559b877ba7f0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559b877ba7d8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559b877ba5c8 <col:148> '_Bool' lvalue Var 0x559b877b32b8 'b$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x559b877ba7b8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559b877ba788 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559b877ba688 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559b877ba640 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559b877ba628 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559b877ba5e8 <col:166> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559b877ba670 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559b877ba658 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559b877ba608 <col:184> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x559b877ba758 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559b877ba6d8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559b877ba6a8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559b877ba770 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559b877ba730 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559b877ba700 <col:219> 'int' 0
|   |-BinaryOperator 0x559b877ba978 <line:805:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559b877ba920 <col:3> 'int' lvalue Var 0x559b877b2a48 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x559b877ba960 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b877ba940 <col:25> 'int' lvalue Var 0x559b877b2c88 'b' 'int'
|   |-BinaryOperator 0x559b877baaa8 <line:806:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x559b877ba998 <col:3> 'int' lvalue Var 0x559b877b2c88 'b' 'int'
|   | `-ConditionalOperator 0x559b877baa78 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x559b877baa30 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559b877baa18 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559b877ba9b8 <col:7> '_Bool' lvalue Var 0x559b877b2d20 'b$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x559b877baa48 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b877ba9d8 <col:25> 'int' lvalue Var 0x559b877b2da0 'b$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x559b877baa60 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x559b877ba9f8 <col:37> 'int' lvalue Var 0x559b877b2c88 'b' 'int'
|   |-BinaryOperator 0x559b877bab40 <line:807:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x559b877baac8 <col:3> '_Bool' lvalue Var 0x559b877b2d20 'b$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x559b877bab18 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559b877baae8 <col:28> 'int' 0
|   |-CallExpr 0x559b877bab98 <line:808:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b877bab80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877bab60 <col:3> 'void ()' Function 0x559b87759410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559b877babf0 <line:809:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b877babd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877babb8 <col:3> 'void ()' Function 0x559b87759350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b877baed8 <line:810:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559b877bac10 <col:3> 'int' lvalue Var 0x559b877b2c88 'b' 'int'
|   | `-ConditionalOperator 0x559b877baea8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559b877bacd0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559b877bac88 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559b877bac70 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559b877bac30 <col:7> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559b877bacb8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559b877baca0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559b877bac50 <col:25> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x559b877bae90 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b877bacf0 <col:42> 'int' lvalue Var 0x559b877b3430 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x559b877bae70 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559b877bae40 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559b877badb0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559b877bad68 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559b877bad50 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559b877bad10 <col:55> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559b877bad98 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559b877bad80 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559b877bad30 <col:73> '_Bool' lvalue Var 0x559b877b32b8 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x559b877bae10 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559b877badd0 <col:90> 'int' lvalue Var 0x559b877b3528 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559b877bae28 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b877badf0 <col:102> 'int' lvalue Var 0x559b877b2c88 'b' 'int'
|   |-BinaryOperator 0x559b877bb0f8 <line:811:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559b877baef8 <col:3> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559b877bb0e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b877bb0b0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559b877bafb8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559b877baf70 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559b877baf58 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559b877baf18 <col:20> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559b877bafa0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559b877baf88 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559b877baf38 <col:38> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x559b877bb068 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b877bb020 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b877baff0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559b877bb098 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b877bb080 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b877bb048 <col:66> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559b877bb3e0 <line:812:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559b877bb118 <col:3> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559b877bb3c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b877bb398 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559b877bb2b8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559b877bb1d8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559b877bb190 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559b877bb178 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559b877bb138 <col:20> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559b877bb1c0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559b877bb1a8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559b877bb158 <col:38> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x559b877bb298 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559b877bb250 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559b877bb238 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559b877bb1f8 <col:56> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559b877bb280 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559b877bb268 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559b877bb218 <col:74> '_Bool' lvalue Var 0x559b877b32b8 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x559b877bb350 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b877bb308 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b877bb2d8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559b877bb380 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b877bb368 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b877bb330 <col:102> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559b877bb5e8 <line:813:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559b877bb400 <col:3> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559b877bb5d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b877bb5a0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559b877bb4c0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559b877bb478 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559b877bb460 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559b877bb420 <col:20> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559b877bb4a8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559b877bb490 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559b877bb440 <col:38> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x559b877bb558 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b877bb510 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b877bb4e0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559b877bb588 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b877bb570 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b877bb538 <col:66> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x559b877bb8d0 <line:814:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559b877bb608 <col:3> '_Bool' lvalue Var 0x559b877b32b8 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559b877bb8b8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b877bb888 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559b877bb7a8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559b877bb6c8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559b877bb680 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559b877bb668 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559b877bb628 <col:20> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559b877bb6b0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559b877bb698 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559b877bb648 <col:38> '_Bool' lvalue Var 0x559b877b3060 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x559b877bb788 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559b877bb740 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559b877bb728 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559b877bb6e8 <col:56> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559b877bb770 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559b877bb758 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559b877bb708 <col:74> '_Bool' lvalue Var 0x559b877b32b8 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x559b877bb840 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b877bb7f8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b877bb7c8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559b877bb870 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b877bb858 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b877bb820 <col:102> '_Bool' lvalue Var 0x559b877b32b8 'b$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x559b877bb928 <line:815:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b877bb910 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877bb8f0 <col:3> 'void ()' Function 0x559b87759410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559b877bb980 <line:816:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b877bb968 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877bb948 <col:3> 'void ()' Function 0x559b87759350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b877bba38 <line:817:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559b877bb9a0 <col:3> 'int' lvalue Var 0x559b877b26e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559b877bba18 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559b877bba00 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b877bb9c0 <col:22> 'int' lvalue Var 0x559b877b26e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559b877bb9e0 <col:41> 'int' 1
|   |-CallExpr 0x559b877bba90 <line:818:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b877bba78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b877bba58 <col:3> 'void ()' Function 0x559b87759410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559b877bbb08 <line:819:3, col:36>
|     `-CallExpr 0x559b877bbae8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559b877bbad0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559b877bbab0 <col:10> 'void *(void)' Function 0x559b87758e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559b877bbc68 prev 0x559b877b2430 <line:821:1, line:823:1> line:821:6 fence 'void ()'
| `-CompoundStmt 0x559b877bbd08 <line:822:1, line:823:1>
|-FunctionDecl 0x559b877bbd38 prev 0x559b877b24f0 <line:824:1, line:826:1> line:824:6 isync 'void ()'
| `-CompoundStmt 0x559b877bbdd8 <line:825:1, line:826:1>
|-FunctionDecl 0x559b877bbe08 prev 0x559b877b25b0 <line:827:1, line:829:1> line:827:6 lwfence 'void ()'
| `-CompoundStmt 0x559b877bbea8 <line:828:1, line:829:1>
`-FunctionDecl 0x559b877bbf18 <line:830:1, line:856:1> line:830:5 main 'int ()'
  `-CompoundStmt 0x559b877be020 <line:831:1, line:856:1>
    |-DeclStmt 0x559b877bc068 <line:832:3, col:18>
    | `-VarDecl 0x559b877bc000 <col:3, col:13> col:13 used t1075 'pthread_t':'unsigned long'
    |-CallExpr 0x559b877bc278 <line:833:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559b877bc260 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559b877bc080 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559b877998f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559b877bc0c0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559b877bc0a0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559b877bc000 't1075' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559b877bc2b8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559b877bc138 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559b877bc110 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559b877bc0d8 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559b877bc2d0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559b877bc158 <col:39> 'void *(void *)' Function 0x559b877b3bf8 'P0' 'void *(void *)'
    | `-ParenExpr 0x559b877bc1d8 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559b877bc1b0 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559b877bc178 <col:52> 'int' 0
    |-DeclStmt 0x559b877bc360 <line:834:3, col:18>
    | `-VarDecl 0x559b877bc2f8 <col:3, col:13> col:13 used t1076 'pthread_t':'unsigned long'
    |-CallExpr 0x559b877bc508 <line:835:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559b877bc4f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559b877bc378 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559b877998f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559b877bc3b8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559b877bc398 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559b877bc2f8 't1076' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559b877bc548 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559b877bc430 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559b877bc408 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559b877bc3d0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559b877bc560 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559b877bc450 <col:39> 'void *(void *)' Function 0x559b877b5630 'P1' 'void *(void *)'
    | `-ParenExpr 0x559b877bc4d0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559b877bc4a8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559b877bc470 <col:52> 'int' 0
    |-DeclStmt 0x559b877bc5f0 <line:836:3, col:18>
    | `-VarDecl 0x559b877bc588 <col:3, col:13> col:13 used t1077 'pthread_t':'unsigned long'
    |-CallExpr 0x559b877bc798 <line:837:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559b877bc780 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559b877bc608 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559b877998f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559b877bc648 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559b877bc628 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559b877bc588 't1077' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559b877bc7d8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559b877bc6c0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559b877bc698 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559b877bc660 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559b877bc7f0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559b877bc6e0 <col:39> 'void *(void *)' Function 0x559b877b6998 'P2' 'void *(void *)'
    | `-ParenExpr 0x559b877bc760 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559b877bc738 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559b877bc700 <col:52> 'int' 0
    |-DeclStmt 0x559b877bc880 <line:838:3, col:18>
    | `-VarDecl 0x559b877bc818 <col:3, col:13> col:13 used t1078 'pthread_t':'unsigned long'
    |-CallExpr 0x559b877bca28 <line:839:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559b877bca10 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559b877bc898 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559b877998f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559b877bc8d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559b877bc8b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559b877bc818 't1078' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559b877bca68 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559b877bc950 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559b877bc928 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559b877bc8f0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559b877bca80 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559b877bc970 <col:39> 'void *(void *)' Function 0x559b877b7d20 'P3' 'void *(void *)'
    | `-ParenExpr 0x559b877bc9f0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559b877bc9c8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559b877bc990 <col:52> 'int' 0
    |-CallExpr 0x559b877bcad0 <line:840:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559b877bcab8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559b877bca98 <col:3> 'void ()' Function 0x559b87759350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559b877bcba0 <line:841:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x559b877bcaf0 <col:3> '_Bool' lvalue Var 0x559b877b3618 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x559b877bcb88 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x559b877bcb68 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x559b877bcb50 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x559b877bcb10 <col:21> 'int' lvalue Var 0x559b877b26e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x559b877bcb30 <col:41> 'int' 4
    |-CallExpr 0x559b877bcbf8 <line:842:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559b877bcbe0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559b877bcbc0 <col:3> 'void ()' Function 0x559b87759410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559b877bcc70 <line:843:3, col:36> 'void'
    | |-ImplicitCastExpr 0x559b877bcc58 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559b877bcc18 <col:3> 'void (int)' Function 0x559b87758ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x559b877bccb0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x559b877bcc98 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x559b877bcc38 <col:21> '_Bool' lvalue Var 0x559b877b3618 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x559b877bcd00 <line:844:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559b877bcce8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559b877bccc8 <col:3> 'void ()' Function 0x559b87759350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559b877bd010 <line:845:3, col:103> 'int' '='
    | |-DeclRefExpr 0x559b877bcd20 <col:3> 'int' lvalue Var 0x559b877b2c88 'b' 'int'
    | `-ConditionalOperator 0x559b877bcfb8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x559b877bcde0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x559b877bcd98 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x559b877bcd80 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x559b877bcd40 <col:7> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x559b877bcdc8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x559b877bcdb0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x559b877bcd60 <col:25> '_Bool' lvalue Var 0x559b877b2e18 'b$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x559b877bcfa0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x559b877bce00 <col:42> 'int' lvalue Var 0x559b877b3430 'b$w_buff0' 'int'
    |   `-ParenExpr 0x559b877bcf80 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x559b877bcf50 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x559b877bcec0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x559b877bce78 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x559b877bce60 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x559b877bce20 <col:55> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x559b877bcea8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x559b877bce90 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x559b877bce40 <col:73> '_Bool' lvalue Var 0x559b877b30d8 'b$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x559b877bcf20 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x559b877bcee0 <col:90> 'int' lvalue Var 0x559b877b3528 'b$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x559b877bcf38 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x559b877bcf00 <col:102> 'int' lvalue Var 0x559b877b2c88 'b' 'int'
    |-BinaryOperator 0x559b877bd218 <line:846:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x559b877bd030 <col:3> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x559b877bd200 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559b877bd1d0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x559b877bd0f0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x559b877bd0a8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x559b877bd090 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x559b877bd050 <col:20> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x559b877bd0d8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x559b877bd0c0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x559b877bd070 <col:38> '_Bool' lvalue Var 0x559b877b2e18 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559b877bd188 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559b877bd140 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559b877bd110 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x559b877bd1b8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559b877bd1a0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559b877bd168 <col:66> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
    |-BinaryOperator 0x559b877bd500 <line:847:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x559b877bd238 <col:3> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x559b877bd4e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559b877bd4b8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x559b877bd3d8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x559b877bd2f8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x559b877bd2b0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x559b877bd298 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x559b877bd258 <col:20> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x559b877bd2e0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x559b877bd2c8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x559b877bd278 <col:38> '_Bool' lvalue Var 0x559b877b2e18 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x559b877bd3b8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x559b877bd370 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x559b877bd358 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x559b877bd318 <col:56> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x559b877bd3a0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x559b877bd388 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x559b877bd338 <col:74> '_Bool' lvalue Var 0x559b877b30d8 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559b877bd470 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559b877bd428 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559b877bd3f8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x559b877bd4a0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559b877bd488 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559b877bd450 <col:102> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
    |-BinaryOperator 0x559b877bd708 <line:848:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x559b877bd520 <col:3> '_Bool' lvalue Var 0x559b877b2e18 'b$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559b877bd6f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559b877bd6c0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x559b877bd5e0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x559b877bd598 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x559b877bd580 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x559b877bd540 <col:20> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x559b877bd5c8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x559b877bd5b0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x559b877bd560 <col:38> '_Bool' lvalue Var 0x559b877b2e18 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559b877bd678 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559b877bd630 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559b877bd600 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x559b877bd6a8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559b877bd690 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559b877bd658 <col:66> '_Bool' lvalue Var 0x559b877b2e18 'b$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x559b877bd9f0 <line:849:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x559b877bd728 <col:3> '_Bool' lvalue Var 0x559b877b30d8 'b$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559b877bd9d8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559b877bd9a8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x559b877bd8c8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x559b877bd7e8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x559b877bd7a0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x559b877bd788 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x559b877bd748 <col:20> '_Bool' lvalue Var 0x559b877b34a8 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x559b877bd7d0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x559b877bd7b8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x559b877bd768 <col:38> '_Bool' lvalue Var 0x559b877b2e18 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x559b877bd8a8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x559b877bd860 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x559b877bd848 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x559b877bd808 <col:56> '_Bool' lvalue Var 0x559b877b35a0 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x559b877bd890 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x559b877bd878 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x559b877bd828 <col:74> '_Bool' lvalue Var 0x559b877b30d8 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559b877bd960 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559b877bd918 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559b877bd8e8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x559b877bd990 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559b877bd978 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559b877bd940 <col:102> '_Bool' lvalue Var 0x559b877b30d8 'b$r_buff1_thd0' '_Bool'
    |-CallExpr 0x559b877bda48 <line:850:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559b877bda30 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559b877bda10 <col:3> 'void ()' Function 0x559b87759410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559b877bdaa0 <line:851:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559b877bda88 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559b877bda68 <col:3> 'void ()' Function 0x559b87759350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559b877bde08 <line:852:3, col:123> '_Bool' '='
    | |-DeclRefExpr 0x559b877bdac0 <col:3> '_Bool' lvalue Var 0x559b877b3690 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x559b877bddf0 <col:21, col:123> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x559b877bddd8 <col:21, col:123> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x559b877bddb8 <col:22, col:123> 'int'
    |       `-BinaryOperator 0x559b877bdd98 <col:23, col:122> 'int' '&&'
    |         |-BinaryOperator 0x559b877bdd00 <col:23, col:94> 'int' '&&'
    |         | |-BinaryOperator 0x559b877bdc68 <col:23, col:66> 'int' '&&'
    |         | | |-BinaryOperator 0x559b877bdbd0 <col:23, col:38> 'int' '&&'
    |         | | | |-BinaryOperator 0x559b877bdb38 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x559b877bdb20 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x559b877bdae0 <col:23> 'int' lvalue Var 0x559b877b3790 'x' 'int'
    |         | | | | `-IntegerLiteral 0x559b877bdb00 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x559b877bdbb0 <col:33, col:38> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x559b877bdb98 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x559b877bdb58 <col:33> 'int' lvalue Var 0x559b877b38b0 'y' 'int'
    |         | | |   `-IntegerLiteral 0x559b877bdb78 <col:38> 'int' 2
    |         | | `-BinaryOperator 0x559b877bdc48 <col:43, col:66> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x559b877bdc30 <col:43> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x559b877bdbf0 <col:43> 'int' lvalue Var 0x559b877b2808 '__unbuffered_p2_EAX' 'int'
    |         | |   `-IntegerLiteral 0x559b877bdc10 <col:66> 'int' 0
    |         | `-BinaryOperator 0x559b877bdce0 <col:71, col:94> 'int' '=='
    |         |   |-ImplicitCastExpr 0x559b877bdcc8 <col:71> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x559b877bdc88 <col:71> 'int' lvalue Var 0x559b877b2928 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x559b877bdca8 <col:94> 'int' 1
    |         `-BinaryOperator 0x559b877bdd78 <col:99, col:122> 'int' '=='
    |           |-ImplicitCastExpr 0x559b877bdd60 <col:99> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x559b877bdd20 <col:99> 'int' lvalue Var 0x559b877b2a48 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x559b877bdd40 <col:122> 'int' 0
    |-CallExpr 0x559b877bde60 <line:853:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559b877bde48 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559b877bde28 <col:3> 'void ()' Function 0x559b87759410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559b877bded8 <line:854:3, col:36> 'void'
    | |-ImplicitCastExpr 0x559b877bdec0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559b877bde80 <col:3> 'void (int)' Function 0x559b877590d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x559b877bdf18 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x559b877bdf00 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x559b877bdea0 <col:21> '_Bool' lvalue Var 0x559b877b3690 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x559b877bdf50 <line:855:3, col:10>
      `-IntegerLiteral 0x559b877bdf30 <col:10> 'int' 0
