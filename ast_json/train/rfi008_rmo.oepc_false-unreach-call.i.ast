TranslationUnitDecl 0x562c09914f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x562c09915848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x562c09915520 '__int128'
|-TypedefDecl 0x562c099158b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x562c09915540 'unsigned __int128'
|-TypedefDecl 0x562c09915bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x562c09915990 'struct __NSConstantString_tag'
|   `-Record 0x562c09915910 '__NSConstantString_tag'
|-TypedefDecl 0x562c09915c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x562c09915c20 'char *'
|   `-BuiltinType 0x562c09915020 'char'
|-TypedefDecl 0x562c09954b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x562c09915f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x562c09915d40 'struct __va_list_tag'
|     `-Record 0x562c09915cc0 '__va_list_tag'
|-FunctionDecl 0x562c09954c80 <pthread-wmm/rfi008_rmo.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x562c09954e50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x562c09954d80 <col:31> col:34 'int'
|-FunctionDecl 0x562c09954fc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x562c099550f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x562c09955238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x562c099551a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x562c09955468 <col:40, col:99>
|   |-IfStmt 0x562c09955438 <col:42, col:88>
|   | |-UnaryOperator 0x562c09955318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x562c09955300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x562c099552e0 <col:47> 'int' lvalue ParmVar 0x562c099551a8 'expression' 'int'
|   | `-CompoundStmt 0x562c09955420 <col:59, col:88>
|   |   `-LabelStmt 0x562c09955408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x562c09955398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x562c09955380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x562c09955330 <col:68> 'void () __attribute__((noreturn))' Function 0x562c099550f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x562c09955450 <col:89>
|   `-ReturnStmt 0x562c09955458 <col:91>
|-FunctionDecl 0x562c099554b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x562c09955570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x562c099558f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562c09955628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x562c099556a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x562c09955728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x562c099557a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x562c099559b0 <line:11:22>
|-FunctionDecl 0x562c0997af10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562c09955a20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x562c09955aa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x562c0997ad40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x562c0997adc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x562c0997afd0 <line:14:22>
|-FunctionDecl 0x562c0997b280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562c0997b040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x562c0997b0c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x562c0997b140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x562c0997b338 <line:16:22>
|-TypedefDecl 0x562c0997b3a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x562c099150e0 'unsigned char'
|-TypedefDecl 0x562c0997b418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x562c09915100 'unsigned short'
|-TypedefDecl 0x562c0997b488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x562c09915120 'unsigned int'
|-TypedefDecl 0x562c0997b4f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x562c09915140 'unsigned long'
|-TypedefDecl 0x562c0997b568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x562c09915040 'signed char'
|-TypedefDecl 0x562c0997b5d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x562c099150e0 'unsigned char'
|-TypedefDecl 0x562c0997b648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x562c09915060 'short'
|-TypedefDecl 0x562c0997b6b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x562c09915100 'unsigned short'
|-TypedefDecl 0x562c0997b728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x562c09915080 'int'
|-TypedefDecl 0x562c0997b798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x562c09915120 'unsigned int'
|-TypedefDecl 0x562c0997b808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x562c099150a0 'long'
|-TypedefDecl 0x562c0997b878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x562c09915140 'unsigned long'
|-TypedefDecl 0x562c0997b8e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x562c099150a0 'long'
|-TypedefDecl 0x562c0997b958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x562c09915140 'unsigned long'
|-TypedefDecl 0x562c0997b9c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x562c09915140 'unsigned long'
|-TypedefDecl 0x562c0997ba38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x562c09915120 'unsigned int'
|-TypedefDecl 0x562c0997baa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x562c09915120 'unsigned int'
|-TypedefDecl 0x562c0997bb18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x562c09915140 'unsigned long'
|-TypedefDecl 0x562c0997bb88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x562c09915140 'unsigned long'
|-TypedefDecl 0x562c0997bbf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x562c09915120 'unsigned int'
|-TypedefDecl 0x562c0997bc68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x562c09915140 'unsigned long'
|-TypedefDecl 0x562c0997bcd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x562c099150a0 'long'
|-TypedefDecl 0x562c0997bd68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x562c099150a0 'long'
|-TypedefDecl 0x562c0997bdd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x562c09915080 'int'
|-RecordDecl 0x562c0997be30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x562c0997bf78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x562c0997c030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x562c0997bfd0 'struct __fsid_t' sugar
|   `-RecordType 0x562c0997beb0 '__fsid_t'
|     `-Record 0x562c0997be30 ''
|-TypedefDecl 0x562c0997c0b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x562c099150a0 'long'
|-TypedefDecl 0x562c0997c128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x562c09915140 'unsigned long'
|-TypedefDecl 0x562c0997c198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x562c09915140 'unsigned long'
|-TypedefDecl 0x562c0997c208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x562c09915120 'unsigned int'
|-TypedefDecl 0x562c0997c278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x562c099150a0 'long'
|-TypedefDecl 0x562c0997c2e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x562c09915120 'unsigned int'
|-TypedefDecl 0x562c0997c358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x562c099150a0 'long'
|-TypedefDecl 0x562c0997c3c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x562c09915080 'int'
|-TypedefDecl 0x562c0997c438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x562c09915080 'int'
|-TypedefDecl 0x562c0997c4a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x562c09915080 'int'
|-TypedefDecl 0x562c0997c518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x562c099157a0 'void *'
|   `-BuiltinType 0x562c09914fe0 'void'
|-TypedefDecl 0x562c0997c588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x562c099150a0 'long'
|-TypedefDecl 0x562c0997c5f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x562c099150a0 'long'
|-TypedefDecl 0x562c0997c668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x562c099150a0 'long'
|-TypedefDecl 0x562c0997c6d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x562c09915140 'unsigned long'
|-TypedefDecl 0x562c0997c748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x562c09915140 'unsigned long'
|-TypedefDecl 0x562c0997c7b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x562c09915140 'unsigned long'
|-TypedefDecl 0x562c0997c828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x562c09915140 'unsigned long'
|-TypedefDecl 0x562c0997c898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x562c099150a0 'long'
|-TypedefDecl 0x562c0997c908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x562c099150a0 'long'
|-TypedefDecl 0x562c0997c978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x562c099150a0 'long'
|-TypedefDecl 0x562c0997c9e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x562c09915140 'unsigned long'
|-TypedefDecl 0x562c0997ca78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x562c0997ca40 '__off64_t' sugar
|   |-Typedef 0x562c0997bd68 '__off64_t'
|   `-BuiltinType 0x562c099150a0 'long'
|-TypedefDecl 0x562c0997cb70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x562c0997cb30 '__quad_t *'
|   `-TypedefType 0x562c0997cad0 '__quad_t' sugar
|     |-Typedef 0x562c0997b8e8 '__quad_t'
|     `-BuiltinType 0x562c099150a0 'long'
|-TypedefDecl 0x562c0997cbe0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x562c09915c20 'char *'
|   `-BuiltinType 0x562c09915020 'char'
|-TypedefDecl 0x562c0997cc50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x562c099150a0 'long'
|-TypedefDecl 0x562c0997ccc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x562c09915120 'unsigned int'
|-FunctionDecl 0x562c0997ce38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x562c0997cd60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x562c0997d148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x562c0997d138 <line:73:3, col:34>
|     `-CallExpr 0x562c0997d0f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x562c0997d0e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x562c0997d070 <col:10> '<builtin fn type>' Function 0x562c0997cee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x562c0997d120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x562c0997d090 <col:29> 'unsigned int' lvalue ParmVar 0x562c0997cd60 '__bsx' 'unsigned int'
|-FunctionDecl 0x562c0997cee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x562c0997cf80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x562c0997cff0 <col:10> Implicit
| `-ConstAttr 0x562c0997d048 <col:10> Implicit
|-FunctionDecl 0x562c0997d2a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x562c0997d198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x562c0997d5b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x562c0997d5a8 <line:78:3, col:34>
|     `-CallExpr 0x562c0997d568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x562c0997d550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x562c0997d4d8 <col:10> '<builtin fn type>' Function 0x562c0997d348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x562c0997d590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x562c0997d4f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x562c0997d198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x562c0997d348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x562c0997d3e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x562c0997d458 <col:10> Implicit
| `-ConstAttr 0x562c0997d4b0 <col:10> Implicit
|-TypedefDecl 0x562c0997d5e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x562c09915140 'unsigned long'
|-TypedefDecl 0x562c0997d678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x562c0997d640 '__time_t' sugar
|   |-Typedef 0x562c0997c278 '__time_t'
|   `-BuiltinType 0x562c099150a0 'long'
|-RecordDecl 0x562c0997d6d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x562c0997d788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x562c0997d818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x562c0997d8a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x562c0997d870 '__pid_t' sugar
|   |-Typedef 0x562c0997bdd8 '__pid_t'
|   `-BuiltinType 0x562c09915080 'int'
|-RecordDecl 0x562c0997d900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x562c0997d9c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x562c0997da10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x562c0997dad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x562c0997db38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x562c09915140 'unsigned long'
|-RecordDecl 0x562c0997db90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x562c0997fe70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x562c0997ff20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x562c0997fec0 'struct cpu_set_t' sugar
|   `-RecordType 0x562c0997dc10 'cpu_set_t'
|     `-Record 0x562c0997db90 ''
|-FunctionDecl 0x562c099801f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x562c0997ffc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562c099800d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x562c099802a8 <line:108:19>
|-FunctionDecl 0x562c09980480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x562c09980310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x562c09980528 <col:69>
|-FunctionDecl 0x562c099806a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x562c09980590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x562c09980748 <col:64>
|-FunctionDecl 0x562c09980a08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x562c099807b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562c099808e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x562c09980ab8 <line:114:22>
|-FunctionDecl 0x562c09980e60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x562c09980b20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562c09980c18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x562c09980f10 <col:88>
|-FunctionDecl 0x562c099811c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x562c09980f78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562c09980ff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x562c09981088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x562c09981280 <col:62>
|-FunctionDecl 0x562c099813f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x562c099812e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x562c099814a0 <col:63>
|-FunctionDecl 0x562c099815c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x562c09981668 <col:47>
|-FunctionDecl 0x562c09981770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x562c099816d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x562c09981818 <col:69>
|-FunctionDecl 0x562c09981920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x562c09981888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x562c099819c8 <col:69>
|-FunctionDecl 0x562c09981c88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562c09981a30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562c09981b68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x562c09981d38 <col:88>
|-TypedefDecl 0x562c09981dc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x562c09981d90 '__clock_t' sugar
|   |-Typedef 0x562c0997c0b8 '__clock_t'
|   `-BuiltinType 0x562c099150a0 'long'
|-TypedefDecl 0x562c099827e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x562c09981e20 '__clockid_t' sugar
|   |-Typedef 0x562c0997c4a8 '__clockid_t'
|   `-BuiltinType 0x562c09915080 'int'
|-TypedefDecl 0x562c09982878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x562c09982840 '__timer_t' sugar
|   |-Typedef 0x562c0997c518 '__timer_t'
|   `-PointerType 0x562c099157a0 'void *'
|     `-BuiltinType 0x562c09914fe0 'void'
|-RecordDecl 0x562c099828d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x562c09982990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x562c099829f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x562c09982a60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x562c09982ac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x562c09982b30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x562c09982b98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x562c09982c00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x562c09982c68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x562c09982cd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x562c09982d38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x562c09982da0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x562c09982df0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x562c09982eb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x562c09982f28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x562c09982fd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x562c099831a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x562c09983240 <col:45>
|-FunctionDecl 0x562c09983420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x562c09983310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x562c099834c8 <col:54>
|-FunctionDecl 0x562c099836c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x562c09983530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x562c099835a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x562c09983778 <line:158:22>
| `-ConstAttr 0x562c09984410 <col:63>
|-FunctionDecl 0x562c09984610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562c09984508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x562c099846b8 <col:56>
|-FunctionDecl 0x562c09984a60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x562c09984728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x562c099847a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562c09984820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x562c09984918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x562c09984b20 <col:54>
|-RecordDecl 0x562c09984b78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x562c09984c28 parent 0x562c09914f88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x562c09984e88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x562c09984f28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x562c09984f90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x562c09984ff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x562c099850e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x562c09985208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x562c099851b0 'struct __locale_struct *'
|   `-ElaboratedType 0x562c09985140 'struct __locale_struct' sugar
|     `-RecordType 0x562c09984c00 'struct __locale_struct'
|       `-Record 0x562c09984b78 '__locale_struct'
|-TypedefDecl 0x562c099852b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x562c09985280 '__locale_t' sugar
|   |-Typedef 0x562c09985208 '__locale_t'
|   `-PointerType 0x562c099851b0 'struct __locale_struct *'
|     `-ElaboratedType 0x562c09985140 'struct __locale_struct' sugar
|       `-RecordType 0x562c09984c00 'struct __locale_struct'
|         `-Record 0x562c09984b78 '__locale_struct'
|-FunctionDecl 0x562c099856b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x562c09985328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x562c099853a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562c09985438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x562c099854c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x562c09985540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x562c09985778 <col:40>
|-FunctionDecl 0x562c09985968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x562c09985840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x562c09985a10 <col:66>
|-FunctionDecl 0x562c09985b20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x562c09985a78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x562c09985bc8 <col:69>
|-FunctionDecl 0x562c09985df8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x562c09985c30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562c09985cc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x562c09985ea8 <col:52>
|-FunctionDecl 0x562c09986050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x562c09985f10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562c09985fa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x562c09986100 <col:55>
|-FunctionDecl 0x562c09986298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x562c09986180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x562c09986340 <col:62>
|-FunctionDecl 0x562c09986578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x562c099863a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x562c09986620 <col:60>
|-FunctionDecl 0x562c09986848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x562c099866a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x562c09986720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x562c099868f8 <col:44>
|-FunctionDecl 0x562c09986b08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x562c09986960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562c099869e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x562c09986bb8 <col:49>
|-VarDecl 0x562c09986cb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x562c09986d38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x562c09986db8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x562c09986e80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x562c09986fb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x562c09987050 <col:42>
|-VarDecl 0x562c099870c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x562c09987140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x562c099872c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x562c099871b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x562c09987370 <col:57>
|-FunctionDecl 0x562c099884f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562c099873f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x562c09988598 <col:56>
|-FunctionDecl 0x562c099886a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562c09988618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x562c09988750 <col:59>
|-FunctionDecl 0x562c09988858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x562c099887c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x562c09988900 <col:48>
| `-ConstAttr 0x562c09988958 <col:89>
|-FunctionDecl 0x562c09988bb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x562c09988a08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x562c09988a98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x562c09988e18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562c09988ca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562c09988d38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x562c09988ec8 <col:88>
|-FunctionDecl 0x562c09989060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562c09988f30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562c09988fc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x562c09989110 <col:88>
|-FunctionDecl 0x562c09989328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x562c09989178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562c09989208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x562c099893d8 <line:209:22>
|-FunctionDecl 0x562c09989778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x562c09989440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562c09989500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x562c09989590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x562c09989620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x562c09989a78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x562c09989878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x562c09989950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x562c09989b28 <col:85>
|-FunctionDecl 0x562c09989f18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x562c09989b90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562c09989cc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x562c09989dd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x562c09989fd0 <col:52>
|-FunctionDecl 0x562c0998a148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x562c0998a038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x562c0998a1f0 <col:61>
|-FunctionDecl 0x562c0998a668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x562c0998a258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x562c0998a2d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x562c0998a408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x562c0998a510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x562c0998a728 <col:62>
|-FunctionDecl 0x562c0998a948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x562c0998a790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x562c0998a820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x562c0998a9f8 <line:222:22>
|-FunctionDecl 0x562c0998aaf8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x562c0998aa60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x562c0998aba0 <col:65>
|-TypedefDecl 0x562c0998ac10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x562c09915140 'unsigned long'
|-RecordDecl 0x562c0998ac68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x562c0998adb0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x562c0998ae18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562c0998aec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x562c0998ae70 'union pthread_attr_t' sugar
|   `-RecordType 0x562c0998acf0 'union pthread_attr_t'
|     `-Record 0x562c0998ac68 'pthread_attr_t'
|-RecordDecl 0x562c0998af20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x562c0998b098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x562c0998b110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x562c0998b1c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x562c0998b160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x562c0998afa0 'struct __pthread_internal_list'
|     `-Record 0x562c0998af20 '__pthread_internal_list'
|-RecordDecl 0x562c0998b230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x562c0998b2d8 parent 0x562c09914f88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x562c0998b3b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562c0998b418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x562c0998b480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x562c0998f530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x562c0998f598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x562c0998f600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x562c0998f688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x562c0998f740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x562c0998f830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x562c0998f898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562c0998fa20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x562c0998f9c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x562c0998b2b0 'pthread_mutex_t'
|     `-Record 0x562c0998b230 ''
|-RecordDecl 0x562c0998fa90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x562c0998fbd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562c0998fc38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562c0998fcf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x562c0998fc90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x562c0998fb10 'pthread_mutexattr_t'
|     `-Record 0x562c0998fa90 ''
|-RecordDecl 0x562c0998fd60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x562c0998fe08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x562c0998fed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562c0998ff38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x562c0998ffa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x562c09990008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x562c09990070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x562c099900d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x562c09990140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x562c099901a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x562c09990260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi008_rmo.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/rfi008_rmo.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x562c09990350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x562c099903b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x562c09990540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x562c09990490 'union pthread_cond_t' sugar
|   `-RecordType 0x562c0998fde0 'pthread_cond_t'
|     `-Record 0x562c0998fd60 ''
|-RecordDecl 0x562c099905b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x562c099906b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562c09990718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562c099907d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x562c09990770 'union pthread_condattr_t' sugar
|   `-RecordType 0x562c09990630 'pthread_condattr_t'
|     `-Record 0x562c099905b0 ''
|-TypedefDecl 0x562c09990858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x562c09915120 'unsigned int'
|-TypedefDecl 0x562c099908c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x562c09915080 'int'
|-RecordDecl 0x562c09990920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x562c099909c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x562c09990a90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562c09990af8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x562c09990b60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x562c09990bc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x562c09990c30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x562c09990c98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x562c09990d00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x562c09990d68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x562c09990dd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x562c09990e38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x562c09990ea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x562c09990f50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi008_rmo.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/rfi008_rmo.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x562c09990ff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x562c09991060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562c099911b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x562c09991150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x562c099909a0 'pthread_rwlock_t'
|     `-Record 0x562c09990920 ''
|-RecordDecl 0x562c09991220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x562c09991360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x562c099913c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562c09991480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x562c09991420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x562c099912a0 'pthread_rwlockattr_t'
|     `-Record 0x562c09991220 ''
|-TypedefDecl 0x562c09993560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x562c09915084 'volatile int' volatile
|   `-BuiltinType 0x562c09915080 'int'
|-RecordDecl 0x562c099935b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x562c09993700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x562c09993768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562c09993820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x562c099937c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x562c09993640 'pthread_barrier_t'
|     `-Record 0x562c099935b8 ''
|-RecordDecl 0x562c09993890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x562c09993990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562c099939f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562c09993ab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x562c09993a50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x562c09993910 'pthread_barrierattr_t'
|     `-Record 0x562c09993890 ''
|-TypedefDecl 0x562c09993bc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x562c09993b60 'long [8]' 8 
|   `-BuiltinType 0x562c099150a0 'long'
|-EnumDecl 0x562c09993c20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x562c09993ce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x562c09993d38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x562c09993d88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x562c09993e58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x562c09993ea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x562c09993ef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x562c09993f48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x562c09993fd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x562c09993fb8 <col:26> 'int'
| |   `-DeclRefExpr 0x562c09993f98 <col:26> 'int' EnumConstant 0x562c09993e58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x562c09994058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x562c09994040 <col:29> 'int'
| |   `-DeclRefExpr 0x562c09994020 <col:29> 'int' EnumConstant 0x562c09993ea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x562c099940e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x562c099940c8 <col:30> 'int'
| |   `-DeclRefExpr 0x562c099940a8 <col:30> 'int' EnumConstant 0x562c09993ef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x562c09994168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x562c09994150 <col:27> 'int'
|     `-DeclRefExpr 0x562c09994130 <col:27> 'int' EnumConstant 0x562c09993fd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x562c099941b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x562c09994288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x562c09994310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x562c099942f8 <col:30> 'int'
| |   `-DeclRefExpr 0x562c099942d8 <col:30> 'int' EnumConstant 0x562c09994288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x562c09994360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x562c099943e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x562c099943d0 <col:29> 'int'
|     `-DeclRefExpr 0x562c099943b0 <col:29> 'int' EnumConstant 0x562c09994360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x562c09994438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x562c09994508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x562c09994570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x562c099945c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x562c09994610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x562c099946d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x562c09994728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x562c09994778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x562c09994800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x562c099947e8 <col:31> 'int'
|     `-DeclRefExpr 0x562c099947c8 <col:31> 'int' EnumConstant 0x562c099946d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x562c09994850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x562c09994918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x562c09994968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x562c099949b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x562c09994a88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x562c09994ad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x562c09994b28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x562c09994bf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x562c09994c48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x562c09994c98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x562c09994ed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x562c09994f40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x562c09994fa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x562c099950c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x562c09995118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x562c099951e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x562c09995238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x562c09995288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x562c09995358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x562c099953a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x562c099959d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x562c099954a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x562c099955c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562c099957c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x562c09995840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x562c09995a98 <col:47>
| |-NonNullAttr 0x562c09995af0 <col:77, col:94> 1 3
| `-CallbackAttr 0x562c09995b28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x562c09995c50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x562c09995b80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x562c09995ea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x562c09995d08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x562c09995d88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x562c09996078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x562c09995f68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x562c09996120 <col:60>
|-FunctionDecl 0x562c09996270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x562c09996310 <col:54>
| `-ConstAttr 0x562c09996368 <col:95>
|-FunctionDecl 0x562c09996da0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x562c099963a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562c09996418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x562c09996e50 <line:395:19>
| `-ConstAttr 0x562c09996ea8 <col:60>
|-FunctionDecl 0x562c09997078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x562c09996f40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x562c09997120 <col:71>
| `-NonNullAttr 0x562c09997178 <col:112, col:126> 1
|-FunctionDecl 0x562c09997280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x562c099971c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x562c09997328 <line:398:22>
| `-NonNullAttr 0x562c09997380 <col:63, col:77> 1
|-FunctionDecl 0x562c099975a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x562c099973c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x562c09997448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x562c09997658 <line:401:22>
| `-NonNullAttr 0x562c099976b0 <col:63, col:80> 1 2
|-FunctionDecl 0x562c099978b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562c099976f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562c09997778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x562c09997968 <line:404:22>
| `-NonNullAttr 0x562c099979c0 <col:63, col:77> 1
|-FunctionDecl 0x562c09997c18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x562c09997a08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x562c09997ab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x562c09997cc8 <line:407:22>
| `-NonNullAttr 0x562c09997d20 <col:63, col:80> 1 2
|-FunctionDecl 0x562c09998f78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x562c09998dc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562c09998e38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562c09999028 <line:410:22>
| `-NonNullAttr 0x562c09999080 <col:63, col:77> 1
|-FunctionDecl 0x562c099992b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562c099990c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562c09999158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x562c09999368 <line:413:22>
| `-NonNullAttr 0x562c099993c0 <col:63, col:80> 1 2
|-FunctionDecl 0x562c099995f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562c09999408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x562c09999498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x562c099996a8 <col:37>
| `-NonNullAttr 0x562c09999700 <col:78, col:95> 1 2
|-FunctionDecl 0x562c099998e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562c09999748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562c099997c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x562c09999998 <line:419:22>
| `-NonNullAttr 0x562c099999f0 <col:63, col:80> 1 2
|-FunctionDecl 0x562c09999b78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562c09999a38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562c09999ab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x562c09999c28 <line:421:22>
| `-NonNullAttr 0x562c09999c80 <col:63, col:77> 1
|-FunctionDecl 0x562c0999ae58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562c09999cc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562c09999d48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x562c0999af08 <line:424:22>
| `-NonNullAttr 0x562c0999af60 <col:63, col:80> 1 2
|-FunctionDecl 0x562c0999b0e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562c0999afa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562c0999b028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x562c0999b198 <line:427:22>
| `-NonNullAttr 0x562c0999b1f0 <col:63, col:77> 1
|-FunctionDecl 0x562c0999b398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562c0999b238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562c0999b2b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x562c0999b448 <line:430:22>
| `-NonNullAttr 0x562c0999b4a0 <col:63, col:80> 1 2
|-FunctionDecl 0x562c0999b628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562c0999b4e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562c0999b568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x562c0999b6d8 <line:432:22>
| `-NonNullAttr 0x562c0999b730 <col:63, col:77> 1
|-FunctionDecl 0x562c0999b958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x562c0999b778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562c0999b7f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x562c0999ba08 <line:435:22>
| |-NonNullAttr 0x562c0999ba60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x562c0999ba98 <col:100> "" ""
|-FunctionDecl 0x562c0999bca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x562c0999bae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562c0999bb68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x562c0999bd58 <line:438:22>
| |-NonNullAttr 0x562c0999bdb0 <col:63, col:77> 1
| `-DeprecatedAttr 0x562c0999bdf8 <col:97> "" ""
|-FunctionDecl 0x562c0999bfe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x562c0999be48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562c0999bec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x562c0999c098 <line:441:22>
| `-NonNullAttr 0x562c0999c0f0 <col:63, col:80> 1 2
|-FunctionDecl 0x562c0999c270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x562c0999c138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562c0999c1b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562c0999c320 <line:444:22>
| `-NonNullAttr 0x562c0999c378 <col:63, col:77> 1
|-FunctionDecl 0x562c0999c668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x562c0999c3c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562c0999c448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x562c0999c4c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x562c0999c720 <line:448:22>
| `-NonNullAttr 0x562c0999c778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x562c0999ca28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x562c0999c7d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562c0999c850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x562c0999c8c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562c0999cae0 <col:43>
| `-NonNullAttr 0x562c0999cb38 <col:84, col:98> 1
|-FunctionDecl 0x562c0999ce40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x562c0999cb88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562c0999cc08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x562c0999cc98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x562c0999cef8 <line:453:22>
| `-NonNullAttr 0x562c0999cf50 <col:63, col:77> 3
|-FunctionDecl 0x562c0999d228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562c0999cf98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562c0999d018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x562c0999d0a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x562c0999d2e0 <line:457:22>
| `-NonNullAttr 0x562c0999d338 <col:63, col:80> 2 3
|-FunctionDecl 0x562c0999d528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x562c0999d388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562c0999d408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x562c0999d5d8 <line:459:22>
|-FunctionDecl 0x562c0999d9a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x562c0999d6a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x562c0999d840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x562c0999da58 <col:52, col:69> 1 2
|-FunctionDecl 0x562c0999dc00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x562c0999dae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x562c0999db60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x562c0999de10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x562c0999dcc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x562c0999dd48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x562c0999df68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x562c0999ded0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x562c0999e0a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x562c0999e148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x562c0999e1f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x562c0999e2e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x562c0999e350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x562c0999e520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/rfi008_rmo.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x562c0999e618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x562c0999e6d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x562c0999e670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x562c0999e1d0 '__pthread_unwind_buf_t'
| |   `-Record 0x562c0999e148 ''
| `-AlignedAttr 0x562c0999e728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x562c0999e7a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x562c0999e900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x562c0999e968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x562c0999e9d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x562c0999ea38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x562c0999ec40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x562c0999eb30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x562c0999ee20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x562c0999ecf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x562c0999efe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562c0999eed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x562c0999f088 <line:488:22>
|-RecordDecl 0x562c0999f0e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x562c0999f3f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x562c0999f258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x562c0999f2d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x562c0999f4a8 <col:86>
| `-ReturnsTwiceAttr 0x562c0999f500 <col:12> Implicit
|-FunctionDecl 0x562c0999f828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562c0999f5d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x562c0999f6e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x562c0999f8d8 <line:494:22>
| `-NonNullAttr 0x562c0999f930 <col:63, col:77> 1
|-FunctionDecl 0x562c0999faa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562c0999f978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562c0999fb50 <line:496:22>
| `-NonNullAttr 0x562c0999fba8 <col:63, col:77> 1
|-FunctionDecl 0x562c0999fcb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562c0999fbf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562c0999fd58 <line:498:22>
| `-NonNullAttr 0x562c0999fdb0 <col:52, col:66> 1
|-FunctionDecl 0x562c0999fee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562c0999fe30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562c0999ff90 <line:500:22>
| `-NonNullAttr 0x562c0999ffe8 <col:52, col:66> 1
|-FunctionDecl 0x562c099a0228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562c099a0038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562c099a00c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562c099a02d8 <col:36>
| `-NonNullAttr 0x562c099a0330 <col:66, col:83> 1 2
|-FunctionDecl 0x562c099a0430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562c099a0378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562c099a04d8 <line:505:22>
| `-NonNullAttr 0x562c099a0530 <col:52, col:66> 1
|-FunctionDecl 0x562c099a07c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562c099a05e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562c099a0660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x562c099a0878 <line:509:22>
| `-NonNullAttr 0x562c099a08d0 <col:63, col:80> 1 2
|-FunctionDecl 0x562c099a0b98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x562c099a0918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562c099a0998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x562c099a0a18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x562c099a0c50 <line:513:22>
| `-NonNullAttr 0x562c099a0ca8 <col:63, col:80> 1 3
|-FunctionDecl 0x562c099a0e40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562c099a0cf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562c099a0ee8 <line:515:22>
| `-NonNullAttr 0x562c099a0f40 <col:63, col:77> 1
|-FunctionDecl 0x562c099a1128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562c099a0ff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x562c099a11d0 <line:517:22>
| `-NonNullAttr 0x562c099a1228 <col:63, col:77> 1
|-FunctionDecl 0x562c099a1330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562c099a1278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x562c099a13d8 <line:519:22>
| `-NonNullAttr 0x562c099a1430 <col:63, col:77> 1
|-FunctionDecl 0x562c099a1658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562c099a1478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562c099a14f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x562c099a1708 <line:523:22>
| `-NonNullAttr 0x562c099a1760 <col:63, col:80> 1 2
|-FunctionDecl 0x562c099a1968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562c099a17a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562c099a1828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x562c099a1a18 <line:526:22>
| `-NonNullAttr 0x562c099a1a70 <col:63, col:77> 1
|-FunctionDecl 0x562c099a1c18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562c099a1ab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562c099a1b38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x562c099a1cc8 <line:529:22>
| `-NonNullAttr 0x562c099a1d20 <col:63, col:80> 1 2
|-FunctionDecl 0x562c099a2f20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562c099a1d68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562c099a2e60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x562c099a2fd0 <line:531:22>
| `-NonNullAttr 0x562c099a3028 <col:63, col:77> 1
|-FunctionDecl 0x562c099a31d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562c099a3078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562c099a30f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x562c099a3288 <line:535:22>
| `-NonNullAttr 0x562c099a32e0 <col:63, col:80> 1 2
|-FunctionDecl 0x562c099a3468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562c099a3328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562c099a33a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x562c099a3518 <line:538:22>
| `-NonNullAttr 0x562c099a3570 <col:63, col:77> 1
|-FunctionDecl 0x562c099a3718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562c099a35b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562c099a3638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x562c099a37c8 <line:542:22>
| `-NonNullAttr 0x562c099a3820 <col:63, col:80> 1 2
|-FunctionDecl 0x562c099a39a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562c099a3868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562c099a38e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x562c099a3a58 <line:545:22>
| `-NonNullAttr 0x562c099a3ab0 <col:63, col:77> 1
|-FunctionDecl 0x562c099a3c98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x562c099a3af8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x562c099a3b78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x562c099a3d48 <line:548:22>
| `-NonNullAttr 0x562c099a3da0 <col:63, col:80> 1 2
|-FunctionDecl 0x562c099a4f58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562c099a3de8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562c099a4e98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x562c099a5008 <line:551:22>
| `-NonNullAttr 0x562c099a5060 <col:63, col:77> 1
|-FunctionDecl 0x562c099a5398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x562c099a5140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562c099a5250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x562c099a5448 <col:29>
| `-NonNullAttr 0x562c099a54a0 <col:70, col:84> 1
|-FunctionDecl 0x562c099a5618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562c099a54e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562c099a56c0 <line:556:22>
| `-NonNullAttr 0x562c099a5718 <col:63, col:77> 1
|-FunctionDecl 0x562c099a5820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562c099a5768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562c099a58c8 <line:558:22>
| `-NonNullAttr 0x562c099a5920 <col:52, col:66> 1
|-FunctionDecl 0x562c099a5a20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562c099a5968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562c099a5ac8 <line:560:19>
| `-NonNullAttr 0x562c099a5b20 <col:49, col:63> 1
|-FunctionDecl 0x562c099a5d58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562c099a5b68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562c099a5bf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562c099a5e08 <col:39>
| `-NonNullAttr 0x562c099a5e90 <col:69, col:86> 1 2
|-FunctionDecl 0x562c099a5f90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562c099a5ed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562c099a6038 <line:565:22>
| `-NonNullAttr 0x562c099a6090 <col:52, col:66> 1
|-FunctionDecl 0x562c099a6190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562c099a60d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562c099a6238 <line:567:22>
| `-NonNullAttr 0x562c099a6290 <col:52, col:66> 1
|-FunctionDecl 0x562c099a6448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562c099a62d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562c099a6368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562c099a64f8 <col:39>
| `-NonNullAttr 0x562c099a6550 <col:69, col:86> 1 2
|-FunctionDecl 0x562c099a6650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562c099a6598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562c099a66f8 <line:572:22>
| `-NonNullAttr 0x562c099a6750 <col:52, col:66> 1
|-FunctionDecl 0x562c099a6938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x562c099a6800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x562c099a69e0 <line:574:22>
| `-NonNullAttr 0x562c099a6a38 <col:63, col:77> 1
|-FunctionDecl 0x562c099a6b40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x562c099a6a88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x562c099a6be8 <line:576:22>
| `-NonNullAttr 0x562c099a6c40 <col:63, col:77> 1
|-FunctionDecl 0x562c099a6ea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562c099a6c88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x562c099a6d08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x562c099a6f50 <line:580:22>
| `-NonNullAttr 0x562c099a6fa8 <col:63, col:80> 1 2
|-FunctionDecl 0x562c099a71b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x562c099a6ff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x562c099a7078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x562c099a7268 <line:583:22>
| `-NonNullAttr 0x562c099a72c0 <col:63, col:77> 1
|-FunctionDecl 0x562c099a7468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562c099a7308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x562c099a7388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x562c099a7518 <line:587:22>
| `-NonNullAttr 0x562c099a7570 <col:63, col:80> 1 2
|-FunctionDecl 0x562c099a76f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x562c099a75b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x562c099a7638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x562c099a77a8 <col:36>
| `-NonNullAttr 0x562c099a7800 <col:77, col:91> 1
|-FunctionDecl 0x562c099a7b38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x562c099a78e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562c099a79f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x562c099a7be8 <line:592:22>
| `-NonNullAttr 0x562c099a7c40 <col:63, col:77> 1
|-FunctionDecl 0x562c099a7db8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562c099a7c88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562c099a7e60 <line:594:22>
| `-NonNullAttr 0x562c099a7ee0 <col:63, col:77> 1
|-FunctionDecl 0x562c099a7fe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562c099a7f28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562c099a8088 <line:596:22>
| `-NonNullAttr 0x562c099a80e0 <col:52, col:66> 1
|-FunctionDecl 0x562c099a81e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562c099a8128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562c099a8288 <line:598:22>
| `-NonNullAttr 0x562c099a82e0 <col:52, col:66> 1
|-FunctionDecl 0x562c099a8508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x562c099a8328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562c099a83a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x562c099a85b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x562c099a88e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562c099a8638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562c099a86b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562c099a8740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x562c099a89a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x562c099a8bb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x562c099a8a80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x562c099a8c60 <line:607:22>
| `-NonNullAttr 0x562c099a8cb8 <col:63, col:77> 1
|-FunctionDecl 0x562c099a8dc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x562c099a8d08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x562c099a8e68 <line:609:22>
| `-NonNullAttr 0x562c099a8ef0 <col:63, col:77> 1
|-FunctionDecl 0x562c099a9118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562c099a8f38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x562c099a8fb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x562c099a91c8 <line:613:22>
| `-NonNullAttr 0x562c099a9220 <col:63, col:80> 1 2
|-FunctionDecl 0x562c099a9428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x562c099a9268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x562c099a92e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x562c099a94d8 <col:37>
| `-NonNullAttr 0x562c099a9530 <col:78, col:92> 1
|-FunctionDecl 0x562c099a9748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x562c099a9578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x562c099a9620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x562c099a97f8 <line:619:22>
| `-NonNullAttr 0x562c099a9850 <col:63, col:80> 1 2
|-FunctionDecl 0x562c099a9a18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x562c099a9898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x562c099a9910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x562c099a9ac8 <line:622:22>
| `-NonNullAttr 0x562c099a9b20 <col:63, col:77> 1
|-FunctionDecl 0x562c099a9dc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x562c099a9c00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x562c099a9c80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x562c099a9e78 <line:624:22>
| `-NonNullAttr 0x562c099a9f00 <col:63, col:77> 1
|-FunctionDecl 0x562c099aa078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562c099a9f48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562c099aa120 <line:626:22>
| `-NonNullAttr 0x562c099aa178 <col:63, col:77> 1
|-FunctionDecl 0x562c099aa280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562c099aa1c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562c099aa328 <line:628:22>
| `-NonNullAttr 0x562c099aa380 <col:52, col:66> 1
|-FunctionDecl 0x562c099aa480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562c099aa3c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562c099aa528 <line:630:22>
| `-NonNullAttr 0x562c099aa580 <col:52, col:66> 1
|-FunctionDecl 0x562c099aa680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562c099aa5c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562c099aa728 <line:632:22>
| `-NonNullAttr 0x562c099aa780 <col:52, col:66> 1
|-FunctionDecl 0x562c099aab58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x562c099aa860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x562c099aa970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x562c099aa9f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x562c099aac10 <line:636:22>
| `-NonNullAttr 0x562c099aac68 <col:63, col:77> 1
|-FunctionDecl 0x562c099aade8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x562c099aacb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x562c099aae90 <line:638:22>
| `-NonNullAttr 0x562c099aaf10 <col:63, col:77> 1
|-FunctionDecl 0x562c099ab010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x562c099aaf58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x562c099ab0b8 <line:640:22>
| `-NonNullAttr 0x562c099ab110 <col:52, col:66> 1
|-FunctionDecl 0x562c099ab2f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x562c099ab1c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x562c099ab3a0 <line:642:22>
| `-NonNullAttr 0x562c099ab3f8 <col:63, col:77> 1
|-FunctionDecl 0x562c099ab500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x562c099ab448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x562c099ab5a8 <line:644:22>
| `-NonNullAttr 0x562c099ab600 <col:63, col:77> 1
|-FunctionDecl 0x562c099ab828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562c099ab648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x562c099ab6c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x562c099ab8d8 <line:648:22>
| `-NonNullAttr 0x562c099ab930 <col:63, col:80> 1 2
|-FunctionDecl 0x562c099abb38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x562c099ab978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x562c099ab9f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x562c099abbe8 <line:651:22>
| `-NonNullAttr 0x562c099abc40 <col:63, col:77> 1
|-FunctionDecl 0x562c099abfa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x562c099abd20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x562c099abe40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x562c099ac058 <line:654:22>
| `-NonNullAttr 0x562c099ac0b0 <col:63, col:77> 1
|-FunctionDecl 0x562c099ac208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x562c099ac0f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x562c099ac2b0 <col:69>
|-FunctionDecl 0x562c099ac428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x562c099ac318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x562c099ac4d0 <col:72>
|-FunctionDecl 0x562c099ac708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x562c099ac538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x562c099ac5e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x562c099ac7b8 <col:44>
|-FunctionDecl 0x562c099ac9d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x562c099ac820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562c099ac898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x562c099aca88 <line:661:22>
| `-NonNullAttr 0x562c099acae0 <col:63, col:77> 2
|-FunctionDecl 0x562c099adf50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x562c099acbc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x562c099accd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x562c099acde0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x562c099ae008 <col:47>
|-FunctionDecl 0x562c099ae110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x562c099ae078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562c099ae268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x562c099ae1d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562c099ae330 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x562c099ae3f0 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x562c099ae4b0 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x562c099ae568 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x562c099ae5e8 prev 0x562c099ae568 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x562c099ae650 <col:24> 'int' 0
|-VarDecl 0x562c099ae688 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x562c099ae708 prev 0x562c099ae688 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x562c099ae770 <col:27> 'int' 0
|-VarDecl 0x562c099ae7a8 <line:675:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x562c099ae828 prev 0x562c099ae7a8 <line:676:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x562c099ae890 <col:27> 'int' 0
|-VarDecl 0x562c099ae8c8 <line:677:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x562c099ae948 prev 0x562c099ae8c8 <line:678:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x562c099ae9b0 <col:27> 'int' 0
|-VarDecl 0x562c099ae9e8 <line:679:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x562c099aea68 prev 0x562c099ae9e8 <line:680:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x562c099aead0 <col:27> 'int' 0
|-VarDecl 0x562c099aeb00 <line:681:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x562c099aeb78 <line:682:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x562c099aebf8 <line:683:1, col:5> col:5 used x 'int'
|-VarDecl 0x562c099aec78 prev 0x562c099aebf8 <line:684:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x562c099aece0 <col:9> 'int' 0
|-VarDecl 0x562c099aed10 <line:685:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x562c099aed90 <line:686:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x562c099aee08 <line:687:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x562c099aee80 <line:688:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x562c099aef20 <line:689:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x562c099aef98 <line:690:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x562c099af010 <line:691:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x562c099af088 <line:692:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x562c099af100 <line:693:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x562c099af180 <line:694:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x562c099af200 <line:695:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x562c099af278 <line:696:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x562c099af2f8 <line:697:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x562c099af370 <line:698:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x562c099af3f0 <line:699:1, col:5> col:5 used y 'int'
|-VarDecl 0x562c099af470 prev 0x562c099af3f0 <line:700:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x562c099af4d8 <col:9> 'int' 0
|-VarDecl 0x562c099af508 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x562c099af580 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x562c099af698 prev 0x562c099ae110 <line:703:1, line:746:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x562c099af600 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562c099b3938 <line:704:1, line:746:1>
|   |-CallExpr 0x562c099af7a8 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562c099af790 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562c099af740 <col:3> 'void ()' Function 0x562c099554b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562c099af820 <line:706:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562c099af7c8 <col:3> 'int' lvalue Var 0x562c099af2f8 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x562c099af808 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562c099af7e8 <col:15> 'int' lvalue Var 0x562c099af200 'x$w_buff0' 'int'
|   |-BinaryOperator 0x562c099af880 <line:707:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562c099af840 <col:3> 'int' lvalue Var 0x562c099af200 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x562c099af860 <col:15> 'int' 1
|   |-BinaryOperator 0x562c099af8f8 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562c099af8a0 <col:3> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562c099af8e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562c099af8c0 <col:20> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562c099af990 <line:709:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x562c099af918 <col:3> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x562c099af968 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562c099af938 <col:27> 'int' 1
|   |-CallExpr 0x562c099afb18 <line:710:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x562c099afb00 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x562c099af9b0 <col:3> 'void (int)' Function 0x562c09955238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x562c099afab0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x562c099afa90 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x562c099afa70 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x562c099afa28 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x562c099afa10 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x562c099af9d0 <col:23> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x562c099afa58 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x562c099afa40 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x562c099af9f0 <col:41> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562c099afb98 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562c099afb40 <col:3> '_Bool' lvalue Var 0x562c099aef98 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x562c099afb80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562c099afb60 <col:20> '_Bool' lvalue Var 0x562c099aee08 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x562c099afc10 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562c099afbb8 <col:3> '_Bool' lvalue Var 0x562c099af010 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562c099afbf8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562c099afbd8 <col:20> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x562c099afc88 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562c099afc30 <col:3> '_Bool' lvalue Var 0x562c099af088 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562c099afc70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562c099afc50 <col:20> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x562c099afd20 <line:714:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x562c099afca8 <col:3> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x562c099afcf8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562c099afcc8 <col:27> 'int' 1
|   |-CallExpr 0x562c099afd78 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562c099afd60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562c099afd40 <col:3> 'void ()' Function 0x562c09955570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562c099afdd0 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562c099afdb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562c099afd98 <col:3> 'void ()' Function 0x562c099554b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562c099afe98 <line:717:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x562c099afdf0 <col:3> '_Bool' lvalue Var 0x562c099af508 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x562c099afe78 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x562c099afe60 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x562c099afe10 <col:19> '_Bool (void)' Function 0x562c09954c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x562c099aff50 <line:718:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x562c099afeb8 <col:3> '_Bool' lvalue Var 0x562c099af580 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x562c099aff30 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x562c099afef8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x562c099afed8 <col:19> '_Bool (void)' Function 0x562c09954c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x562c099affc8 <line:719:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x562c099aff70 <col:3> '_Bool' lvalue Var 0x562c099aed10 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x562c099affb0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562c099aff90 <col:21> '_Bool' lvalue Var 0x562c099af580 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x562c099b0040 <line:720:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562c099affe8 <col:3> 'int' lvalue Var 0x562c099aed90 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x562c099b0028 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562c099b0008 <col:15> 'int' lvalue Var 0x562c099aec78 'x' 'int'
|   |-BinaryOperator 0x562c099b0478 <line:721:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x562c099b0060 <col:3> 'int' lvalue Var 0x562c099aec78 'x' 'int'
|   | `-ConditionalOperator 0x562c099b0448 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x562c099b0270 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x562c099b0190 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x562c099b00b8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x562c099b00a0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x562c099b0080 <col:8> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x562c099b0170 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x562c099b0108 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x562c099b00f0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x562c099b00d0 <col:27> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x562c099b0158 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x562c099b0140 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x562c099b0120 <col:46> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x562c099b0250 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x562c099b01e8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x562c099b01d0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x562c099b01b0 <col:65> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x562c099b0238 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x562c099b0220 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x562c099b0200 <col:84> '_Bool' lvalue Var 0x562c099af010 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x562c099b0430 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562c099b0290 <col:101> 'int' lvalue Var 0x562c099aec78 'x' 'int'
|   |   `-ParenExpr 0x562c099b0410 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x562c099b03e0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x562c099b0350 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562c099b0308 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562c099b02f0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562c099b02b0 <col:106> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562c099b0338 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562c099b0320 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562c099b02d0 <col:124> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x562c099b03b0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562c099b0370 <col:141> 'int' lvalue Var 0x562c099af200 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x562c099b03c8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562c099b0390 <col:153> 'int' lvalue Var 0x562c099af2f8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x562c099b0988 <line:722:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x562c099b0498 <col:3> 'int' lvalue Var 0x562c099af200 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x562c099b0958 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562c099b0928 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562c099b0910 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562c099b04b8 <col:15> '_Bool' lvalue Var 0x562c099af580 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562c099b0940 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562c099b04d8 <col:31> 'int' lvalue Var 0x562c099af200 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x562c099b08f0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x562c099b08c0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562c099b06e8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x562c099b0608 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562c099b0530 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562c099b0518 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x562c099b04f8 <col:45> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x562c099b05e8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x562c099b0580 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x562c099b0568 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562c099b0548 <col:64> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x562c099b05d0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x562c099b05b8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x562c099b0598 <col:83> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x562c099b06c8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x562c099b0660 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562c099b0648 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562c099b0628 <col:102> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x562c099b06b0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x562c099b0698 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x562c099b0678 <col:121> '_Bool' lvalue Var 0x562c099af010 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x562c099b08a8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562c099b0708 <col:138> 'int' lvalue Var 0x562c099af200 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x562c099b0888 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562c099b0858 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x562c099b07c8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x562c099b0780 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x562c099b0768 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562c099b0728 <col:151> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x562c099b07b0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x562c099b0798 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562c099b0748 <col:169> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x562c099b0828 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x562c099b07e8 <col:186> 'int' lvalue Var 0x562c099af200 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x562c099b0840 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562c099b0808 <col:198> 'int' lvalue Var 0x562c099af200 'x$w_buff0' 'int'
|   |-BinaryOperator 0x562c099b0e98 <line:723:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x562c099b09a8 <col:3> 'int' lvalue Var 0x562c099af2f8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x562c099b0e68 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562c099b0e38 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562c099b0e20 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562c099b09c8 <col:15> '_Bool' lvalue Var 0x562c099af580 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562c099b0e50 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562c099b09e8 <col:31> 'int' lvalue Var 0x562c099af2f8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x562c099b0e00 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x562c099b0dd0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562c099b0bf8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x562c099b0b18 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562c099b0a40 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562c099b0a28 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x562c099b0a08 <col:45> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x562c099b0af8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x562c099b0a90 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x562c099b0a78 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562c099b0a58 <col:64> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x562c099b0ae0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x562c099b0ac8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x562c099b0aa8 <col:83> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x562c099b0bd8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x562c099b0b70 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562c099b0b58 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562c099b0b38 <col:102> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x562c099b0bc0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x562c099b0ba8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x562c099b0b88 <col:121> '_Bool' lvalue Var 0x562c099af010 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x562c099b0db8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562c099b0c18 <col:138> 'int' lvalue Var 0x562c099af2f8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x562c099b0d98 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562c099b0d68 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x562c099b0cd8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x562c099b0c90 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x562c099b0c78 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562c099b0c38 <col:151> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x562c099b0cc0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x562c099b0ca8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562c099b0c58 <col:169> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x562c099b0d38 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x562c099b0cf8 <col:186> 'int' lvalue Var 0x562c099af2f8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x562c099b0d50 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562c099b0d18 <col:198> 'int' lvalue Var 0x562c099af2f8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x562c099b1468 <line:724:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x562c099b0eb8 <col:3> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562c099b1450 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562c099b1420 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x562c099b13d8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562c099b13c0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562c099b0ed8 <col:20> '_Bool' lvalue Var 0x562c099af580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562c099b1408 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562c099b13f0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562c099b0ef8 <col:36> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x562c099b13a0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x562c099b1370 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x562c099b1130 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562c099b1050 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562c099b0f78 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562c099b0f60 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562c099b0f40 <col:55> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562c099b1030 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562c099b0fc8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562c099b0fb0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562c099b0f90 <col:74> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x562c099b1018 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562c099b1000 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562c099b0fe0 <col:93> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562c099b1110 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562c099b10a8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562c099b1090 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562c099b1070 <col:112> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x562c099b10f8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562c099b10e0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562c099b10c0 <col:131> '_Bool' lvalue Var 0x562c099af010 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x562c099b1358 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562c099b1340 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562c099b1150 <col:148> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x562c099b1320 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x562c099b12f0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x562c099b1210 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562c099b11c8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562c099b11b0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562c099b1170 <col:166> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562c099b11f8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562c099b11e0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562c099b1190 <col:184> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x562c099b12a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562c099b1260 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562c099b1230 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562c099b12d8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562c099b12c0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562c099b1288 <col:212> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562c099b1a30 <line:725:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x562c099b1488 <col:3> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562c099b1a18 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562c099b19e8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x562c099b19a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562c099b1988 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562c099b14a8 <col:20> '_Bool' lvalue Var 0x562c099af580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562c099b19d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562c099b19b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562c099b14c8 <col:36> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x562c099b1968 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562c099b1938 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x562c099b16d8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562c099b15f8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562c099b1520 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562c099b1508 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562c099b14e8 <col:55> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562c099b15d8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562c099b1570 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562c099b1558 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562c099b1538 <col:74> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x562c099b15c0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562c099b15a8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562c099b1588 <col:93> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562c099b16b8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562c099b1650 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562c099b1638 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562c099b1618 <col:112> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x562c099b16a0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562c099b1688 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562c099b1668 <col:131> '_Bool' lvalue Var 0x562c099af010 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x562c099b1920 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562c099b1908 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562c099b16f8 <col:148> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x562c099b18e8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x562c099b18b8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x562c099b17b8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562c099b1770 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562c099b1758 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562c099b1718 <col:166> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562c099b17a0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562c099b1788 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562c099b1738 <col:184> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x562c099b1888 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562c099b1808 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562c099b17d8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562c099b18a0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x562c099b1860 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562c099b1830 <col:219> 'int' 0
|   |-BinaryOperator 0x562c099b1ff8 <line:726:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x562c099b1a50 <col:3> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562c099b1fe0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562c099b1fb0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x562c099b1f68 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562c099b1f50 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562c099b1a70 <col:20> '_Bool' lvalue Var 0x562c099af580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562c099b1f98 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562c099b1f80 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562c099b1a90 <col:36> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x562c099b1f10 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x562c099b1ee0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x562c099b1ca0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562c099b1bc0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562c099b1ae8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562c099b1ad0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562c099b1ab0 <col:55> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562c099b1ba0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562c099b1b38 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562c099b1b20 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562c099b1b00 <col:74> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x562c099b1b88 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562c099b1b70 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562c099b1b50 <col:93> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562c099b1c80 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562c099b1c18 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562c099b1c00 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562c099b1be0 <col:112> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x562c099b1c68 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562c099b1c50 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562c099b1c30 <col:131> '_Bool' lvalue Var 0x562c099af010 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x562c099b1ec8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562c099b1eb0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562c099b1cc0 <col:148> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x562c099b1e90 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x562c099b1e60 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x562c099b1d80 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562c099b1d38 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562c099b1d20 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562c099b1ce0 <col:166> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562c099b1d68 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562c099b1d50 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562c099b1d00 <col:184> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x562c099b1e18 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562c099b1dd0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562c099b1da0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562c099b1e48 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562c099b1e30 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562c099b1df8 <col:212> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x562c099b25c0 <line:727:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x562c099b2018 <col:3> '_Bool' lvalue Var 0x562c099af010 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562c099b25a8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562c099b2578 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x562c099b2530 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562c099b2518 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562c099b2038 <col:20> '_Bool' lvalue Var 0x562c099af580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562c099b2560 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562c099b2548 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562c099b2058 <col:36> '_Bool' lvalue Var 0x562c099af010 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x562c099b24f8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562c099b24c8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x562c099b2268 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562c099b2188 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562c099b20b0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562c099b2098 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562c099b2078 <col:55> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562c099b2168 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562c099b2100 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562c099b20e8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562c099b20c8 <col:74> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x562c099b2150 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562c099b2138 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562c099b2118 <col:93> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562c099b2248 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562c099b21e0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562c099b21c8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562c099b21a8 <col:112> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x562c099b2230 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562c099b2218 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562c099b21f8 <col:131> '_Bool' lvalue Var 0x562c099af010 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x562c099b24b0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562c099b2498 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562c099b2288 <col:148> '_Bool' lvalue Var 0x562c099af010 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x562c099b2478 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x562c099b2448 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x562c099b2348 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562c099b2300 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562c099b22e8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562c099b22a8 <col:166> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562c099b2330 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562c099b2318 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562c099b22c8 <col:184> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x562c099b2418 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562c099b2398 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562c099b2368 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562c099b2430 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x562c099b23f0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562c099b23c0 <col:219> 'int' 0
|   |-BinaryOperator 0x562c099b2638 <line:728:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562c099b25e0 <col:3> 'int' lvalue Var 0x562c099ae708 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x562c099b2620 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562c099b2600 <col:25> 'int' lvalue Var 0x562c099aec78 'x' 'int'
|   |-BinaryOperator 0x562c099b2768 <line:729:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x562c099b2658 <col:3> 'int' lvalue Var 0x562c099aec78 'x' 'int'
|   | `-ConditionalOperator 0x562c099b2738 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x562c099b26f0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562c099b26d8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562c099b2678 <col:7> '_Bool' lvalue Var 0x562c099aed10 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x562c099b2708 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562c099b2698 <col:25> 'int' lvalue Var 0x562c099aed90 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x562c099b2720 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x562c099b26b8 <col:37> 'int' lvalue Var 0x562c099aec78 'x' 'int'
|   |-BinaryOperator 0x562c099b2800 <line:730:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x562c099b2788 <col:3> '_Bool' lvalue Var 0x562c099aed10 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x562c099b27d8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562c099b27a8 <col:28> 'int' 0
|   |-CallExpr 0x562c099b2858 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562c099b2840 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562c099b2820 <col:3> 'void ()' Function 0x562c09955570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562c099b28b0 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562c099b2898 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562c099b2878 <col:3> 'void ()' Function 0x562c099554b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562c099b2928 <line:733:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562c099b28d0 <col:3> 'int' lvalue Var 0x562c099ae828 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x562c099b2910 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562c099b28f0 <col:25> 'int' lvalue Var 0x562c099af470 'y' 'int'
|   |-CallExpr 0x562c099b2980 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562c099b2968 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562c099b2948 <col:3> 'void ()' Function 0x562c09955570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562c099b29d8 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562c099b29c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562c099b29a0 <col:3> 'void ()' Function 0x562c099554b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562c099b2cc0 <line:736:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562c099b29f8 <col:3> 'int' lvalue Var 0x562c099aec78 'x' 'int'
|   | `-ConditionalOperator 0x562c099b2c90 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562c099b2ab8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562c099b2a70 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562c099b2a58 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562c099b2a18 <col:7> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562c099b2aa0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562c099b2a88 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562c099b2a38 <col:25> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x562c099b2c78 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562c099b2ad8 <col:42> 'int' lvalue Var 0x562c099af200 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x562c099b2c58 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562c099b2c28 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562c099b2b98 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562c099b2b50 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562c099b2b38 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562c099b2af8 <col:55> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562c099b2b80 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562c099b2b68 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562c099b2b18 <col:73> '_Bool' lvalue Var 0x562c099af010 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x562c099b2bf8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562c099b2bb8 <col:90> 'int' lvalue Var 0x562c099af2f8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562c099b2c10 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562c099b2bd8 <col:102> 'int' lvalue Var 0x562c099aec78 'x' 'int'
|   |-BinaryOperator 0x562c099b2ec8 <line:737:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562c099b2ce0 <col:3> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562c099b2eb0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562c099b2e80 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562c099b2da0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562c099b2d58 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562c099b2d40 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562c099b2d00 <col:20> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562c099b2d88 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562c099b2d70 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562c099b2d20 <col:38> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562c099b2e38 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562c099b2df0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562c099b2dc0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562c099b2e68 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562c099b2e50 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562c099b2e18 <col:66> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562c099b31c8 <line:738:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562c099b2ee8 <col:3> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562c099b31b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562c099b3180 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562c099b30a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562c099b2fc0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562c099b2f78 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562c099b2f60 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562c099b2f08 <col:20> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562c099b2fa8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562c099b2f90 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562c099b2f28 <col:38> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x562c099b3080 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562c099b3038 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562c099b3020 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562c099b2fe0 <col:56> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562c099b3068 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562c099b3050 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562c099b3000 <col:74> '_Bool' lvalue Var 0x562c099af010 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562c099b3138 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562c099b30f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562c099b30c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562c099b3168 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562c099b3150 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562c099b3118 <col:102> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562c099b33d0 <line:739:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562c099b31e8 <col:3> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562c099b33b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562c099b3388 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562c099b32a8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562c099b3260 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562c099b3248 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562c099b3208 <col:20> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562c099b3290 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562c099b3278 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562c099b3228 <col:38> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562c099b3340 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562c099b32f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562c099b32c8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562c099b3370 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562c099b3358 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562c099b3320 <col:66> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x562c099b36b8 <line:740:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562c099b33f0 <col:3> '_Bool' lvalue Var 0x562c099af010 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562c099b36a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562c099b3670 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562c099b3590 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562c099b34b0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562c099b3468 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562c099b3450 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562c099b3410 <col:20> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562c099b3498 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562c099b3480 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562c099b3430 <col:38> '_Bool' lvalue Var 0x562c099aee80 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x562c099b3570 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562c099b3528 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562c099b3510 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562c099b34d0 <col:56> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562c099b3558 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562c099b3540 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562c099b34f0 <col:74> '_Bool' lvalue Var 0x562c099af010 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562c099b3628 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562c099b35e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562c099b35b0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562c099b3658 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562c099b3640 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562c099b3608 <col:102> '_Bool' lvalue Var 0x562c099af010 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x562c099b3710 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562c099b36f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562c099b36d8 <col:3> 'void ()' Function 0x562c09955570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562c099b3768 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562c099b3750 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562c099b3730 <col:3> 'void ()' Function 0x562c099554b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562c099b3820 <line:743:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562c099b3788 <col:3> 'int' lvalue Var 0x562c099ae5e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562c099b3800 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562c099b37e8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562c099b37a8 <col:22> 'int' lvalue Var 0x562c099ae5e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562c099b37c8 <col:41> 'int' 1
|   |-CallExpr 0x562c099b3878 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562c099b3860 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562c099b3840 <col:3> 'void ()' Function 0x562c09955570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562c099b3928 <line:745:3, col:36>
|     `-CallExpr 0x562c099b3908 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562c099b38f0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562c099b3898 <col:10> 'void *(void)' Function 0x562c09954fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562c099b3b40 prev 0x562c099ae268 <line:747:1, line:782:1> line:747:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x562c099b3aa8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562c099b7820 <line:748:1, line:782:1>
|   |-CallExpr 0x562c099b3c20 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562c099b3c08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562c099b3be8 <col:3> 'void ()' Function 0x562c099554b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562c099b3c80 <line:750:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562c099b3c40 <col:3> 'int' lvalue Var 0x562c099af470 'y' 'int'
|   | `-IntegerLiteral 0x562c099b3c60 <col:7> 'int' 1
|   |-CallExpr 0x562c099b3cd8 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562c099b3cc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562c099b3ca0 <col:3> 'void ()' Function 0x562c09955570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562c099b3d30 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562c099b3d18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562c099b3cf8 <col:3> 'void ()' Function 0x562c099554b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562c099b3da8 <line:753:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562c099b3d50 <col:3> 'int' lvalue Var 0x562c099ae948 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x562c099b3d90 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562c099b3d70 <col:25> 'int' lvalue Var 0x562c099af470 'y' 'int'
|   |-CallExpr 0x562c099b3e00 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562c099b3de8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562c099b3dc8 <col:3> 'void ()' Function 0x562c09955570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562c099b3e58 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562c099b3e40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562c099b3e20 <col:3> 'void ()' Function 0x562c099554b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562c099b3ef0 <line:756:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x562c099b3e78 <col:3> '_Bool' lvalue Var 0x562c099af508 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x562c099b3ed0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x562c099b3eb8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x562c099b3e98 <col:19> '_Bool (void)' Function 0x562c09954c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x562c099b3fa8 <line:757:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x562c099b3f10 <col:3> '_Bool' lvalue Var 0x562c099af580 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x562c099b3f88 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x562c099b3f70 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x562c099b3f30 <col:19> '_Bool (void)' Function 0x562c09954c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x562c099b4020 <line:758:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x562c099b3fc8 <col:3> '_Bool' lvalue Var 0x562c099aed10 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x562c099b4008 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562c099b3fe8 <col:21> '_Bool' lvalue Var 0x562c099af580 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x562c099b4098 <line:759:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562c099b4040 <col:3> 'int' lvalue Var 0x562c099aed90 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x562c099b4080 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562c099b4060 <col:15> 'int' lvalue Var 0x562c099aec78 'x' 'int'
|   |-BinaryOperator 0x562c099b44d0 <line:760:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x562c099b40b8 <col:3> 'int' lvalue Var 0x562c099aec78 'x' 'int'
|   | `-ConditionalOperator 0x562c099b44a0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x562c099b42c8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x562c099b41e8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x562c099b4110 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x562c099b40f8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x562c099b40d8 <col:8> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x562c099b41c8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x562c099b4160 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x562c099b4148 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x562c099b4128 <col:27> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x562c099b41b0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x562c099b4198 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x562c099b4178 <col:46> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x562c099b42a8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x562c099b4240 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x562c099b4228 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x562c099b4208 <col:65> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x562c099b4290 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x562c099b4278 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x562c099b4258 <col:84> '_Bool' lvalue Var 0x562c099af088 'x$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x562c099b4488 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562c099b42e8 <col:101> 'int' lvalue Var 0x562c099aec78 'x' 'int'
|   |   `-ParenExpr 0x562c099b4468 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x562c099b4438 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x562c099b43a8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562c099b4360 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562c099b4348 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562c099b4308 <col:106> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562c099b4390 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562c099b4378 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562c099b4328 <col:124> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x562c099b4408 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562c099b43c8 <col:141> 'int' lvalue Var 0x562c099af200 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x562c099b4420 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562c099b43e8 <col:153> 'int' lvalue Var 0x562c099af2f8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x562c099b49e0 <line:761:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x562c099b44f0 <col:3> 'int' lvalue Var 0x562c099af200 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x562c099b49b0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562c099b4980 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562c099b4968 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562c099b4510 <col:15> '_Bool' lvalue Var 0x562c099af580 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562c099b4998 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562c099b4530 <col:31> 'int' lvalue Var 0x562c099af200 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x562c099b4948 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x562c099b4918 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562c099b4740 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x562c099b4660 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562c099b4588 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562c099b4570 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x562c099b4550 <col:45> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x562c099b4640 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x562c099b45d8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x562c099b45c0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562c099b45a0 <col:64> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x562c099b4628 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x562c099b4610 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x562c099b45f0 <col:83> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x562c099b4720 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x562c099b46b8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562c099b46a0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562c099b4680 <col:102> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x562c099b4708 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x562c099b46f0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x562c099b46d0 <col:121> '_Bool' lvalue Var 0x562c099af088 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x562c099b4900 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562c099b4760 <col:138> 'int' lvalue Var 0x562c099af200 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x562c099b48e0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562c099b48b0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x562c099b4820 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x562c099b47d8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x562c099b47c0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562c099b4780 <col:151> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x562c099b4808 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x562c099b47f0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562c099b47a0 <col:169> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x562c099b4880 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x562c099b4840 <col:186> 'int' lvalue Var 0x562c099af200 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x562c099b4898 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562c099b4860 <col:198> 'int' lvalue Var 0x562c099af200 'x$w_buff0' 'int'
|   |-BinaryOperator 0x562c099b4ef0 <line:762:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x562c099b4a00 <col:3> 'int' lvalue Var 0x562c099af2f8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x562c099b4ec0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562c099b4e90 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562c099b4e78 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562c099b4a20 <col:15> '_Bool' lvalue Var 0x562c099af580 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562c099b4ea8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562c099b4a40 <col:31> 'int' lvalue Var 0x562c099af2f8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x562c099b4e58 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x562c099b4e28 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562c099b4c50 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x562c099b4b70 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562c099b4a98 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562c099b4a80 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x562c099b4a60 <col:45> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x562c099b4b50 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x562c099b4ae8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x562c099b4ad0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562c099b4ab0 <col:64> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x562c099b4b38 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x562c099b4b20 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x562c099b4b00 <col:83> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x562c099b4c30 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x562c099b4bc8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562c099b4bb0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562c099b4b90 <col:102> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x562c099b4c18 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x562c099b4c00 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x562c099b4be0 <col:121> '_Bool' lvalue Var 0x562c099af088 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x562c099b4e10 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562c099b4c70 <col:138> 'int' lvalue Var 0x562c099af2f8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x562c099b4df0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562c099b4dc0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x562c099b4d30 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x562c099b4ce8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x562c099b4cd0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562c099b4c90 <col:151> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x562c099b4d18 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x562c099b4d00 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562c099b4cb0 <col:169> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x562c099b4d90 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x562c099b4d50 <col:186> 'int' lvalue Var 0x562c099af2f8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x562c099b4da8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562c099b4d70 <col:198> 'int' lvalue Var 0x562c099af2f8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x562c099b54a8 <line:763:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x562c099b4f10 <col:3> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562c099b5490 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562c099b5460 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x562c099b5418 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562c099b5400 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562c099b4f30 <col:20> '_Bool' lvalue Var 0x562c099af580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562c099b5448 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562c099b5430 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562c099b4f50 <col:36> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x562c099b53e0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x562c099b53b0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x562c099b5170 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562c099b5090 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562c099b4fb8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562c099b4fa0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562c099b4f80 <col:55> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562c099b5070 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562c099b5008 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562c099b4ff0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562c099b4fd0 <col:74> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x562c099b5058 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562c099b5040 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562c099b5020 <col:93> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562c099b5150 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562c099b50e8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562c099b50d0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562c099b50b0 <col:112> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x562c099b5138 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562c099b5120 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562c099b5100 <col:131> '_Bool' lvalue Var 0x562c099af088 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x562c099b5398 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562c099b5380 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562c099b5190 <col:148> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x562c099b5360 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x562c099b5330 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x562c099b5250 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562c099b5208 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562c099b51f0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562c099b51b0 <col:166> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562c099b5238 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562c099b5220 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562c099b51d0 <col:184> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x562c099b52e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562c099b52a0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562c099b5270 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562c099b5318 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562c099b5300 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562c099b52c8 <col:212> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562c099b5a70 <line:764:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x562c099b54c8 <col:3> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562c099b5a58 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562c099b5a28 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x562c099b59e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562c099b59c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562c099b54e8 <col:20> '_Bool' lvalue Var 0x562c099af580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562c099b5a10 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562c099b59f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562c099b5508 <col:36> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x562c099b59a8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562c099b5978 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x562c099b5718 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562c099b5638 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562c099b5560 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562c099b5548 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562c099b5528 <col:55> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562c099b5618 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562c099b55b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562c099b5598 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562c099b5578 <col:74> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x562c099b5600 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562c099b55e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562c099b55c8 <col:93> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562c099b56f8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562c099b5690 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562c099b5678 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562c099b5658 <col:112> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x562c099b56e0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562c099b56c8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562c099b56a8 <col:131> '_Bool' lvalue Var 0x562c099af088 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x562c099b5960 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562c099b5948 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562c099b5738 <col:148> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x562c099b5928 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x562c099b58f8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x562c099b57f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562c099b57b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562c099b5798 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562c099b5758 <col:166> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562c099b57e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562c099b57c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562c099b5778 <col:184> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x562c099b58c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562c099b5848 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562c099b5818 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562c099b58e0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x562c099b58a0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562c099b5870 <col:219> 'int' 0
|   |-BinaryOperator 0x562c099b6038 <line:765:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x562c099b5a90 <col:3> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562c099b6020 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562c099b5ff0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x562c099b5fa8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562c099b5f90 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562c099b5ab0 <col:20> '_Bool' lvalue Var 0x562c099af580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562c099b5fd8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562c099b5fc0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562c099b5ad0 <col:36> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x562c099b5f50 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x562c099b5f20 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x562c099b5ce0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562c099b5c00 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562c099b5b28 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562c099b5b10 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562c099b5af0 <col:55> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562c099b5be0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562c099b5b78 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562c099b5b60 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562c099b5b40 <col:74> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x562c099b5bc8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562c099b5bb0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562c099b5b90 <col:93> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562c099b5cc0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562c099b5c58 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562c099b5c40 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562c099b5c20 <col:112> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x562c099b5ca8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562c099b5c90 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562c099b5c70 <col:131> '_Bool' lvalue Var 0x562c099af088 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x562c099b5f08 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562c099b5ef0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562c099b5d00 <col:148> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x562c099b5ed0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x562c099b5ea0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x562c099b5dc0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562c099b5d78 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562c099b5d60 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562c099b5d20 <col:166> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562c099b5da8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562c099b5d90 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562c099b5d40 <col:184> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x562c099b5e58 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562c099b5e10 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562c099b5de0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562c099b5e88 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562c099b5e70 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562c099b5e38 <col:212> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x562c099b6600 <line:766:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x562c099b6058 <col:3> '_Bool' lvalue Var 0x562c099af088 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562c099b65e8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562c099b65b8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x562c099b6570 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562c099b6558 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562c099b6078 <col:20> '_Bool' lvalue Var 0x562c099af580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562c099b65a0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562c099b6588 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562c099b6098 <col:36> '_Bool' lvalue Var 0x562c099af088 'x$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x562c099b6538 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562c099b6508 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x562c099b62a8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562c099b61c8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562c099b60f0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562c099b60d8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562c099b60b8 <col:55> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562c099b61a8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562c099b6140 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562c099b6128 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562c099b6108 <col:74> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x562c099b6190 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562c099b6178 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562c099b6158 <col:93> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562c099b6288 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562c099b6220 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562c099b6208 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562c099b61e8 <col:112> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x562c099b6270 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562c099b6258 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562c099b6238 <col:131> '_Bool' lvalue Var 0x562c099af088 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x562c099b64f0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562c099b64d8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562c099b62c8 <col:148> '_Bool' lvalue Var 0x562c099af088 'x$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x562c099b64b8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x562c099b6488 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x562c099b6388 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562c099b6340 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562c099b6328 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562c099b62e8 <col:166> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562c099b6370 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562c099b6358 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562c099b6308 <col:184> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x562c099b6458 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562c099b63d8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562c099b63a8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562c099b6470 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x562c099b6430 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562c099b6400 <col:219> 'int' 0
|   |-BinaryOperator 0x562c099b6678 <line:767:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562c099b6620 <col:3> 'int' lvalue Var 0x562c099aea68 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x562c099b6660 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562c099b6640 <col:25> 'int' lvalue Var 0x562c099aec78 'x' 'int'
|   |-BinaryOperator 0x562c099b67a8 <line:768:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x562c099b6698 <col:3> 'int' lvalue Var 0x562c099aec78 'x' 'int'
|   | `-ConditionalOperator 0x562c099b6778 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x562c099b6730 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562c099b6718 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562c099b66b8 <col:7> '_Bool' lvalue Var 0x562c099aed10 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x562c099b6748 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562c099b66d8 <col:25> 'int' lvalue Var 0x562c099aed90 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x562c099b6760 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x562c099b66f8 <col:37> 'int' lvalue Var 0x562c099aec78 'x' 'int'
|   |-BinaryOperator 0x562c099b6840 <line:769:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x562c099b67c8 <col:3> '_Bool' lvalue Var 0x562c099aed10 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x562c099b6818 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562c099b67e8 <col:28> 'int' 0
|   |-CallExpr 0x562c099b6898 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562c099b6880 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562c099b6860 <col:3> 'void ()' Function 0x562c09955570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562c099b68f0 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562c099b68d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562c099b68b8 <col:3> 'void ()' Function 0x562c099554b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562c099b6bd8 <line:772:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562c099b6910 <col:3> 'int' lvalue Var 0x562c099aec78 'x' 'int'
|   | `-ConditionalOperator 0x562c099b6ba8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562c099b69d0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562c099b6988 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562c099b6970 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562c099b6930 <col:7> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562c099b69b8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562c099b69a0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562c099b6950 <col:25> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x562c099b6b90 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562c099b69f0 <col:42> 'int' lvalue Var 0x562c099af200 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x562c099b6b70 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562c099b6b40 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562c099b6ab0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562c099b6a68 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562c099b6a50 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562c099b6a10 <col:55> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562c099b6a98 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562c099b6a80 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562c099b6a30 <col:73> '_Bool' lvalue Var 0x562c099af088 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x562c099b6b10 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562c099b6ad0 <col:90> 'int' lvalue Var 0x562c099af2f8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562c099b6b28 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562c099b6af0 <col:102> 'int' lvalue Var 0x562c099aec78 'x' 'int'
|   |-BinaryOperator 0x562c099b6de0 <line:773:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562c099b6bf8 <col:3> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562c099b6dc8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562c099b6d98 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562c099b6cb8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562c099b6c70 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562c099b6c58 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562c099b6c18 <col:20> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562c099b6ca0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562c099b6c88 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562c099b6c38 <col:38> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562c099b6d50 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562c099b6d08 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562c099b6cd8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562c099b6d80 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562c099b6d68 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562c099b6d30 <col:66> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562c099b70e8 <line:774:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562c099b6e00 <col:3> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562c099b70d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562c099b70a0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562c099b6fc0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562c099b6ec0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562c099b6e78 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562c099b6e60 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562c099b6e20 <col:20> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562c099b6ea8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562c099b6e90 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562c099b6e40 <col:38> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x562c099b6fa0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562c099b6f38 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562c099b6f20 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562c099b6ee0 <col:56> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562c099b6f68 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562c099b6f50 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562c099b6f00 <col:74> '_Bool' lvalue Var 0x562c099af088 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562c099b7058 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562c099b7010 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562c099b6fe0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562c099b7088 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562c099b7070 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562c099b7038 <col:102> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562c099b72f0 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562c099b7108 <col:3> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562c099b72d8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562c099b72a8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562c099b71c8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562c099b7180 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562c099b7168 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562c099b7128 <col:20> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562c099b71b0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562c099b7198 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562c099b7148 <col:38> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562c099b7260 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562c099b7218 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562c099b71e8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562c099b7290 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562c099b7278 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562c099b7240 <col:66> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x562c099b75d8 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562c099b7310 <col:3> '_Bool' lvalue Var 0x562c099af088 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562c099b75c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562c099b7590 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562c099b74b0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562c099b73d0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562c099b7388 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562c099b7370 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562c099b7330 <col:20> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562c099b73b8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562c099b73a0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562c099b7350 <col:38> '_Bool' lvalue Var 0x562c099aef20 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x562c099b7490 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562c099b7448 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562c099b7430 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562c099b73f0 <col:56> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562c099b7478 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562c099b7460 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562c099b7410 <col:74> '_Bool' lvalue Var 0x562c099af088 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562c099b7548 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562c099b7500 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562c099b74d0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562c099b7578 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562c099b7560 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562c099b7528 <col:102> '_Bool' lvalue Var 0x562c099af088 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x562c099b7630 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562c099b7618 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562c099b75f8 <col:3> 'void ()' Function 0x562c09955570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562c099b7688 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562c099b7670 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562c099b7650 <col:3> 'void ()' Function 0x562c099554b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562c099b7740 <line:779:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562c099b76a8 <col:3> 'int' lvalue Var 0x562c099ae5e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562c099b7720 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562c099b7708 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562c099b76c8 <col:22> 'int' lvalue Var 0x562c099ae5e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562c099b76e8 <col:41> 'int' 1
|   |-CallExpr 0x562c099b7798 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562c099b7780 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562c099b7760 <col:3> 'void ()' Function 0x562c09955570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562c099b7810 <line:781:3, col:36>
|     `-CallExpr 0x562c099b77f0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562c099b77d8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562c099b77b8 <col:10> 'void *(void)' Function 0x562c09954fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562c099b7958 prev 0x562c099ae330 <line:783:1, line:785:1> line:783:6 fence 'void ()'
| `-CompoundStmt 0x562c099b79f8 <line:784:1, line:785:1>
|-FunctionDecl 0x562c099b7a28 prev 0x562c099ae3f0 <line:786:1, line:788:1> line:786:6 isync 'void ()'
| `-CompoundStmt 0x562c099b7ac8 <line:787:1, line:788:1>
|-FunctionDecl 0x562c099b7af8 prev 0x562c099ae4b0 <line:789:1, line:791:1> line:789:6 lwfence 'void ()'
| `-CompoundStmt 0x562c099b7b98 <line:790:1, line:791:1>
`-FunctionDecl 0x562c099b7c08 <line:792:1, line:814:1> line:792:5 main 'int ()'
  `-CompoundStmt 0x562c099b9660 <line:793:1, line:814:1>
    |-DeclStmt 0x562c099b7d20 <line:794:3, col:18>
    | `-VarDecl 0x562c099b7cb8 <col:3, col:13> col:13 used t1731 'pthread_t':'unsigned long'
    |-CallExpr 0x562c099b7f28 <line:795:3, col:54> 'int'
    | |-ImplicitCastExpr 0x562c099b7f10 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562c099b7d38 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562c099959d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562c099b7d78 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562c099b7d58 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562c099b7cb8 't1731' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562c099b7f68 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562c099b7df0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x562c099b7dc8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562c099b7d90 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x562c099b7f80 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562c099b7e10 <col:39> 'void *(void *)' Function 0x562c099af698 'P0' 'void *(void *)'
    | `-ParenExpr 0x562c099b7e90 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x562c099b7e68 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562c099b7e30 <col:52> 'int' 0
    |-DeclStmt 0x562c099b8028 <line:796:3, col:18>
    | `-VarDecl 0x562c099b7fc0 <col:3, col:13> col:13 used t1732 'pthread_t':'unsigned long'
    |-CallExpr 0x562c099b81d0 <line:797:3, col:54> 'int'
    | |-ImplicitCastExpr 0x562c099b81b8 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562c099b8040 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562c099959d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562c099b8080 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562c099b8060 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562c099b7fc0 't1732' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562c099b8210 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562c099b80f8 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x562c099b80d0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562c099b8098 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x562c099b8228 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562c099b8118 <col:39> 'void *(void *)' Function 0x562c099b3b40 'P1' 'void *(void *)'
    | `-ParenExpr 0x562c099b8198 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x562c099b8170 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562c099b8138 <col:52> 'int' 0
    |-CallExpr 0x562c099b8278 <line:798:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562c099b8260 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562c099b8240 <col:3> 'void ()' Function 0x562c099554b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562c099b8348 <line:799:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x562c099b8298 <col:3> '_Bool' lvalue Var 0x562c099aeb00 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x562c099b8330 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x562c099b8310 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x562c099b82f8 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x562c099b82b8 <col:21> 'int' lvalue Var 0x562c099ae5e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x562c099b82d8 <col:41> 'int' 2
    |-CallExpr 0x562c099b83a0 <line:800:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562c099b8388 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562c099b8368 <col:3> 'void ()' Function 0x562c09955570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562c099b8418 <line:801:3, col:36> 'void'
    | |-ImplicitCastExpr 0x562c099b8400 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562c099b83c0 <col:3> 'void (int)' Function 0x562c09954e50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x562c099b8458 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x562c099b8440 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x562c099b83e0 <col:21> '_Bool' lvalue Var 0x562c099aeb00 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x562c099b84a8 <line:802:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562c099b8490 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562c099b8470 <col:3> 'void ()' Function 0x562c099554b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562c099b8790 <line:803:3, col:103> 'int' '='
    | |-DeclRefExpr 0x562c099b84c8 <col:3> 'int' lvalue Var 0x562c099aec78 'x' 'int'
    | `-ConditionalOperator 0x562c099b8760 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x562c099b8588 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x562c099b8540 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x562c099b8528 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x562c099b84e8 <col:7> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x562c099b8570 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x562c099b8558 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x562c099b8508 <col:25> '_Bool' lvalue Var 0x562c099aee08 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x562c099b8748 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x562c099b85a8 <col:42> 'int' lvalue Var 0x562c099af200 'x$w_buff0' 'int'
    |   `-ParenExpr 0x562c099b8728 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x562c099b86f8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x562c099b8668 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x562c099b8620 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x562c099b8608 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x562c099b85c8 <col:55> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x562c099b8650 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x562c099b8638 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x562c099b85e8 <col:73> '_Bool' lvalue Var 0x562c099aef98 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x562c099b86c8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x562c099b8688 <col:90> 'int' lvalue Var 0x562c099af2f8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x562c099b86e0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x562c099b86a8 <col:102> 'int' lvalue Var 0x562c099aec78 'x' 'int'
    |-BinaryOperator 0x562c099b8998 <line:804:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x562c099b87b0 <col:3> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x562c099b8980 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562c099b8950 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x562c099b8870 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x562c099b8828 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x562c099b8810 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x562c099b87d0 <col:20> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x562c099b8858 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x562c099b8840 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x562c099b87f0 <col:38> '_Bool' lvalue Var 0x562c099aee08 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562c099b8908 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562c099b88c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562c099b8890 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x562c099b8938 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562c099b8920 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562c099b88e8 <col:66> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x562c099b8c80 <line:805:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x562c099b89b8 <col:3> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x562c099b8c68 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562c099b8c38 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x562c099b8b58 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x562c099b8a78 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x562c099b8a30 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x562c099b8a18 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x562c099b89d8 <col:20> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x562c099b8a60 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x562c099b8a48 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x562c099b89f8 <col:38> '_Bool' lvalue Var 0x562c099aee08 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x562c099b8b38 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x562c099b8af0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x562c099b8ad8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x562c099b8a98 <col:56> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x562c099b8b20 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x562c099b8b08 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x562c099b8ab8 <col:74> '_Bool' lvalue Var 0x562c099aef98 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562c099b8bf0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562c099b8ba8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562c099b8b78 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x562c099b8c20 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562c099b8c08 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562c099b8bd0 <col:102> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x562c099b8e88 <line:806:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x562c099b8ca0 <col:3> '_Bool' lvalue Var 0x562c099aee08 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562c099b8e70 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562c099b8e40 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x562c099b8d60 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x562c099b8d18 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x562c099b8d00 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x562c099b8cc0 <col:20> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x562c099b8d48 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x562c099b8d30 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x562c099b8ce0 <col:38> '_Bool' lvalue Var 0x562c099aee08 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562c099b8df8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562c099b8db0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562c099b8d80 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x562c099b8e28 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562c099b8e10 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562c099b8dd8 <col:66> '_Bool' lvalue Var 0x562c099aee08 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x562c099b9188 <line:807:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x562c099b8ea8 <col:3> '_Bool' lvalue Var 0x562c099aef98 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562c099b9170 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562c099b9140 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x562c099b9060 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x562c099b8f68 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x562c099b8f20 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x562c099b8f08 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x562c099b8ec8 <col:20> '_Bool' lvalue Var 0x562c099af278 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x562c099b8f50 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x562c099b8f38 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x562c099b8ee8 <col:38> '_Bool' lvalue Var 0x562c099aee08 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x562c099b9040 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x562c099b8ff8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x562c099b8fe0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x562c099b8f88 <col:56> '_Bool' lvalue Var 0x562c099af370 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x562c099b9028 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x562c099b9010 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x562c099b8fc0 <col:74> '_Bool' lvalue Var 0x562c099aef98 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562c099b90f8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562c099b90b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562c099b9080 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x562c099b9128 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562c099b9110 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562c099b90d8 <col:102> '_Bool' lvalue Var 0x562c099aef98 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x562c099b91e0 <line:808:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562c099b91c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562c099b91a8 <col:3> 'void ()' Function 0x562c09955570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562c099b9238 <line:809:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562c099b9220 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562c099b9200 <col:3> 'void ()' Function 0x562c099554b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562c099b9508 <line:810:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x562c099b9258 <col:3> '_Bool' lvalue Var 0x562c099aeb78 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x562c099b94f0 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x562c099b94d8 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x562c099b94b8 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x562c099b9498 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x562c099b9400 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x562c099b9368 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x562c099b92d0 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x562c099b92b8 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x562c099b9278 <col:23> 'int' lvalue Var 0x562c099ae708 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x562c099b9298 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x562c099b9348 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x562c099b9330 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x562c099b92f0 <col:51> 'int' lvalue Var 0x562c099ae828 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x562c099b9310 <col:74> 'int' 0
    |         | `-BinaryOperator 0x562c099b93e0 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x562c099b93c8 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x562c099b9388 <col:79> 'int' lvalue Var 0x562c099ae948 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x562c099b93a8 <col:102> 'int' 1
    |         `-BinaryOperator 0x562c099b9478 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x562c099b9460 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x562c099b9420 <col:107> 'int' lvalue Var 0x562c099aea68 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x562c099b9440 <col:130> 'int' 0
    |-CallExpr 0x562c099b9560 <line:811:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562c099b9548 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562c099b9528 <col:3> 'void ()' Function 0x562c09955570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562c099b95d8 <line:812:3, col:36> 'void'
    | |-ImplicitCastExpr 0x562c099b95c0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562c099b9580 <col:3> 'void (int)' Function 0x562c09955238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x562c099b9618 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x562c099b9600 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x562c099b95a0 <col:21> '_Bool' lvalue Var 0x562c099aeb78 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x562c099b9650 <line:813:3, col:10>
      `-IntegerLiteral 0x562c099b9630 <col:10> 'int' 0
