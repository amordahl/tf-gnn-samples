TranslationUnitDecl 0x55827dd01f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55827dd02848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55827dd02520 '__int128'
|-TypedefDecl 0x55827dd028b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55827dd02540 'unsigned __int128'
|-TypedefDecl 0x55827dd02bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55827dd02990 'struct __NSConstantString_tag'
|   `-Record 0x55827dd02910 '__NSConstantString_tag'
|-TypedefDecl 0x55827dd02c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55827dd02c20 'char *'
|   `-BuiltinType 0x55827dd02020 'char'
|-TypedefDecl 0x55827dd41b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55827dd02f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55827dd02d40 'struct __va_list_tag'
|     `-Record 0x55827dd02cc0 '__va_list_tag'
|-FunctionDecl 0x55827dd41ca0 <pthread-wmm/mix036_pso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55827dd41bd0 <col:31> col:34 'int'
|-FunctionDecl 0x55827dd41e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55827dd41f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55827dd420d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55827dd42048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55827dd42308 <col:40, col:99>
|   |-IfStmt 0x55827dd422d8 <col:42, col:88>
|   | |-UnaryOperator 0x55827dd421b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55827dd421a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55827dd42180 <col:47> 'int' lvalue ParmVar 0x55827dd42048 'expression' 'int'
|   | `-CompoundStmt 0x55827dd422c0 <col:59, col:88>
|   |   `-LabelStmt 0x55827dd422a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55827dd42238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55827dd42220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55827dd421d0 <col:68> 'void () __attribute__((noreturn))' Function 0x55827dd41f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55827dd422f0 <col:89>
|   `-ReturnStmt 0x55827dd422f8 <col:91>
|-FunctionDecl 0x55827dd42350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55827dd42410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55827dd42790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55827dd424c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55827dd42548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55827dd425c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55827dd42648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55827dd42850 <line:10:22>
|-FunctionDecl 0x55827dd688a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55827dd428c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55827dd42940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55827dd429c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55827dd42a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55827dd68960 <line:13:22>
|-FunctionDecl 0x55827dd68c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55827dd689d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55827dd68a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55827dd68ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55827dd68cc8 <line:15:22>
|-TypedefDecl 0x55827dd68d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55827dd020e0 'unsigned char'
|-TypedefDecl 0x55827dd68da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55827dd02100 'unsigned short'
|-TypedefDecl 0x55827dd68e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55827dd02120 'unsigned int'
|-TypedefDecl 0x55827dd68e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55827dd02140 'unsigned long'
|-TypedefDecl 0x55827dd68ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55827dd02040 'signed char'
|-TypedefDecl 0x55827dd68f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55827dd020e0 'unsigned char'
|-TypedefDecl 0x55827dd68fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55827dd02060 'short'
|-TypedefDecl 0x55827dd69048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55827dd02100 'unsigned short'
|-TypedefDecl 0x55827dd690b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55827dd02080 'int'
|-TypedefDecl 0x55827dd69128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55827dd02120 'unsigned int'
|-TypedefDecl 0x55827dd69198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55827dd020a0 'long'
|-TypedefDecl 0x55827dd69208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55827dd02140 'unsigned long'
|-TypedefDecl 0x55827dd69278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55827dd020a0 'long'
|-TypedefDecl 0x55827dd692e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55827dd02140 'unsigned long'
|-TypedefDecl 0x55827dd69358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55827dd02140 'unsigned long'
|-TypedefDecl 0x55827dd693c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55827dd02120 'unsigned int'
|-TypedefDecl 0x55827dd69438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55827dd02120 'unsigned int'
|-TypedefDecl 0x55827dd694a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55827dd02140 'unsigned long'
|-TypedefDecl 0x55827dd69518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55827dd02140 'unsigned long'
|-TypedefDecl 0x55827dd69588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55827dd02120 'unsigned int'
|-TypedefDecl 0x55827dd695f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55827dd02140 'unsigned long'
|-TypedefDecl 0x55827dd69668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55827dd020a0 'long'
|-TypedefDecl 0x55827dd696d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55827dd020a0 'long'
|-TypedefDecl 0x55827dd69748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55827dd02080 'int'
|-RecordDecl 0x55827dd697a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55827dd69918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55827dd699d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55827dd69970 'struct __fsid_t' sugar
|   `-RecordType 0x55827dd69820 '__fsid_t'
|     `-Record 0x55827dd697a0 ''
|-TypedefDecl 0x55827dd69a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55827dd020a0 'long'
|-TypedefDecl 0x55827dd69ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55827dd02140 'unsigned long'
|-TypedefDecl 0x55827dd69b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55827dd02140 'unsigned long'
|-TypedefDecl 0x55827dd69ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55827dd02120 'unsigned int'
|-TypedefDecl 0x55827dd69c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55827dd020a0 'long'
|-TypedefDecl 0x55827dd69c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55827dd02120 'unsigned int'
|-TypedefDecl 0x55827dd69cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55827dd020a0 'long'
|-TypedefDecl 0x55827dd69d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55827dd02080 'int'
|-TypedefDecl 0x55827dd69dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55827dd02080 'int'
|-TypedefDecl 0x55827dd69e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55827dd02080 'int'
|-TypedefDecl 0x55827dd69eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55827dd027a0 'void *'
|   `-BuiltinType 0x55827dd01fe0 'void'
|-TypedefDecl 0x55827dd69f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55827dd020a0 'long'
|-TypedefDecl 0x55827dd69f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55827dd020a0 'long'
|-TypedefDecl 0x55827dd6a008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55827dd020a0 'long'
|-TypedefDecl 0x55827dd6a078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55827dd02140 'unsigned long'
|-TypedefDecl 0x55827dd6a0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55827dd02140 'unsigned long'
|-TypedefDecl 0x55827dd6a158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55827dd02140 'unsigned long'
|-TypedefDecl 0x55827dd6a1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55827dd02140 'unsigned long'
|-TypedefDecl 0x55827dd6a238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55827dd020a0 'long'
|-TypedefDecl 0x55827dd6a2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55827dd020a0 'long'
|-TypedefDecl 0x55827dd6a318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55827dd020a0 'long'
|-TypedefDecl 0x55827dd6a388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55827dd02140 'unsigned long'
|-TypedefDecl 0x55827dd6a418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55827dd6a3e0 '__off64_t' sugar
|   |-Typedef 0x55827dd696d8 '__off64_t'
|   `-BuiltinType 0x55827dd020a0 'long'
|-TypedefDecl 0x55827dd6a510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55827dd6a4d0 '__quad_t *'
|   `-TypedefType 0x55827dd6a470 '__quad_t' sugar
|     |-Typedef 0x55827dd69278 '__quad_t'
|     `-BuiltinType 0x55827dd020a0 'long'
|-TypedefDecl 0x55827dd6a580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55827dd02c20 'char *'
|   `-BuiltinType 0x55827dd02020 'char'
|-TypedefDecl 0x55827dd6a5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55827dd020a0 'long'
|-TypedefDecl 0x55827dd6a660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55827dd02120 'unsigned int'
|-FunctionDecl 0x55827dd6a7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55827dd6a6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55827dd6aae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55827dd6aad8 <line:72:3, col:34>
|     `-CallExpr 0x55827dd6aa98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55827dd6aa80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55827dd6aa10 <col:10> '<builtin fn type>' Function 0x55827dd6a880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55827dd6aac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55827dd6aa30 <col:29> 'unsigned int' lvalue ParmVar 0x55827dd6a6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55827dd6a880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55827dd6a920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55827dd6a990 <col:10> Implicit
| `-ConstAttr 0x55827dd6a9e8 <col:10> Implicit
|-FunctionDecl 0x55827dd6ac40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55827dd6ab38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55827dd6af58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55827dd6af48 <line:77:3, col:34>
|     `-CallExpr 0x55827dd6af08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55827dd6aef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55827dd6ae78 <col:10> '<builtin fn type>' Function 0x55827dd6ace8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55827dd6af30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55827dd6ae98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55827dd6ab38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55827dd6ace8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55827dd6ad88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55827dd6adf8 <col:10> Implicit
| `-ConstAttr 0x55827dd6ae50 <col:10> Implicit
|-TypedefDecl 0x55827dd6af88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55827dd02140 'unsigned long'
|-TypedefDecl 0x55827dd6b018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55827dd6afe0 '__time_t' sugar
|   |-Typedef 0x55827dd69c18 '__time_t'
|   `-BuiltinType 0x55827dd020a0 'long'
|-RecordDecl 0x55827dd6b070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55827dd6b128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55827dd6b1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55827dd6b248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55827dd6b210 '__pid_t' sugar
|   |-Typedef 0x55827dd69748 '__pid_t'
|   `-BuiltinType 0x55827dd02080 'int'
|-RecordDecl 0x55827dd6b2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55827dd6b360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55827dd6b3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55827dd6b470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55827dd6b4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55827dd02140 'unsigned long'
|-RecordDecl 0x55827dd6b530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55827dd6b7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55827dd6d8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55827dd6b810 'struct cpu_set_t' sugar
|   `-RecordType 0x55827dd6b5b0 'cpu_set_t'
|     `-Record 0x55827dd6b530 ''
|-FunctionDecl 0x55827dd6db88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55827dd6d958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55827dd6da60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55827dd6dc38 <line:107:19>
|-FunctionDecl 0x55827dd6de10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55827dd6dca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55827dd6deb8 <col:69>
|-FunctionDecl 0x55827dd6e030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55827dd6df20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55827dd6e0d8 <col:64>
|-FunctionDecl 0x55827dd6e398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55827dd6e140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55827dd6e278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55827dd6e448 <line:113:22>
|-FunctionDecl 0x55827dd6e6c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55827dd6e4b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55827dd6e5a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55827dd6e778 <col:88>
|-FunctionDecl 0x55827dd6ea98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55827dd6e7e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55827dd6e8c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55827dd6e950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55827dd6eb50 <col:62>
|-FunctionDecl 0x55827dd6ecc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55827dd6ebb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55827dd6ed70 <col:63>
|-FunctionDecl 0x55827dd6ee98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55827dd6ef38 <col:47>
|-FunctionDecl 0x55827dd6f040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55827dd6efa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55827dd6f0e8 <col:69>
|-FunctionDecl 0x55827dd6f1f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55827dd6f158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55827dd6f298 <col:69>
|-FunctionDecl 0x55827dd6f558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55827dd6f300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55827dd6f438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55827dd6f608 <col:88>
|-TypedefDecl 0x55827dd6f698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55827dd6f660 '__clock_t' sugar
|   |-Typedef 0x55827dd69a58 '__clock_t'
|   `-BuiltinType 0x55827dd020a0 'long'
|-TypedefDecl 0x55827dd6f728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55827dd6f6f0 '__clockid_t' sugar
|   |-Typedef 0x55827dd69e48 '__clockid_t'
|   `-BuiltinType 0x55827dd02080 'int'
|-TypedefDecl 0x55827dd6f7b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55827dd6f780 '__timer_t' sugar
|   |-Typedef 0x55827dd69eb8 '__timer_t'
|   `-PointerType 0x55827dd027a0 'void *'
|     `-BuiltinType 0x55827dd01fe0 'void'
|-RecordDecl 0x55827dd6f810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55827dd6f8e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55827dd6f950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55827dd6f9b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55827dd6fa20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55827dd6fa88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55827dd6faf0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55827dd6fb58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55827dd6fbc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55827dd6fc28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55827dd6fc90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55827dd6fcf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55827dd6fd48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55827dd6fe18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55827dd6fe88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55827dd6ff30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55827dd70100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55827dd701a0 <col:45>
|-FunctionDecl 0x55827dd70380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55827dd70270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55827dd70428 <col:54>
|-FunctionDecl 0x55827dd70628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55827dd70490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55827dd70508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55827dd706d8 <line:157:22>
| `-ConstAttr 0x55827dd70730 <col:63>
|-FunctionDecl 0x55827dd71560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55827dd70828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55827dd71608 <col:56>
|-FunctionDecl 0x55827dd719b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55827dd71678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55827dd716f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55827dd71770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55827dd71868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55827dd71a70 <col:54>
|-RecordDecl 0x55827dd71ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55827dd71b78 parent 0x55827dd01f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55827dd71dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55827dd71e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55827dd71ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55827dd71f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55827dd72038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55827dd72158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55827dd72100 'struct __locale_struct *'
|   `-ElaboratedType 0x55827dd72090 'struct __locale_struct' sugar
|     `-RecordType 0x55827dd71b50 'struct __locale_struct'
|       `-Record 0x55827dd71ac8 '__locale_struct'
|-TypedefDecl 0x55827dd72208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55827dd721d0 '__locale_t' sugar
|   |-Typedef 0x55827dd72158 '__locale_t'
|   `-PointerType 0x55827dd72100 'struct __locale_struct *'
|     `-ElaboratedType 0x55827dd72090 'struct __locale_struct' sugar
|       `-RecordType 0x55827dd71b50 'struct __locale_struct'
|         `-Record 0x55827dd71ac8 '__locale_struct'
|-FunctionDecl 0x55827dd72610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55827dd72278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55827dd722f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55827dd72370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55827dd72400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55827dd72478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55827dd726d8 <col:40>
|-FunctionDecl 0x55827dd728c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55827dd727a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55827dd72970 <col:66>
|-FunctionDecl 0x55827dd72a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55827dd729d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55827dd72b28 <col:69>
|-FunctionDecl 0x55827dd72d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55827dd72b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55827dd72c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55827dd72e08 <col:52>
|-FunctionDecl 0x55827dd72fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55827dd72e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55827dd72f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55827dd73060 <col:55>
|-FunctionDecl 0x55827dd731f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55827dd730e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55827dd732a0 <col:62>
|-FunctionDecl 0x55827dd73418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55827dd73308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55827dd734c0 <col:60>
|-FunctionDecl 0x55827dd73718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55827dd73578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55827dd735f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55827dd737c8 <col:44>
|-FunctionDecl 0x55827dd739d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55827dd73830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55827dd738b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55827dd73a88 <col:49>
|-VarDecl 0x55827dd73b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55827dd73c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55827dd73c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55827dd73d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55827dd73e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55827dd73f20 <col:42>
|-VarDecl 0x55827dd73f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55827dd74010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55827dd74198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55827dd74088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55827dd74240 <col:57>
|-FunctionDecl 0x55827dd74350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55827dd742c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55827dd743f8 <col:56>
|-FunctionDecl 0x55827dd75540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55827dd74478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55827dd755e8 <col:59>
|-FunctionDecl 0x55827dd756f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55827dd75658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55827dd75798 <col:48>
| `-ConstAttr 0x55827dd757f0 <col:89>
|-FunctionDecl 0x55827dd75a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55827dd758a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55827dd75938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55827dd75cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55827dd75b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55827dd75bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55827dd75d68 <col:88>
|-FunctionDecl 0x55827dd75f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55827dd75dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55827dd75e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55827dd75fb0 <col:88>
|-FunctionDecl 0x55827dd761c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55827dd76018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55827dd760a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55827dd76278 <line:208:22>
|-FunctionDecl 0x55827dd765e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55827dd762e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55827dd76360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55827dd763f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55827dd76480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55827dd768e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55827dd766e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55827dd767c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55827dd76998 <col:85>
|-FunctionDecl 0x55827dd76d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55827dd76a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55827dd76b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55827dd76c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55827dd76e40 <col:52>
|-FunctionDecl 0x55827dd76fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55827dd76ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55827dd77060 <col:61>
|-FunctionDecl 0x55827dd77560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55827dd770c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55827dd77148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55827dd77278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55827dd77368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55827dd77620 <col:62>
|-FunctionDecl 0x55827dd77838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55827dd77688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55827dd77718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55827dd778e8 <line:221:22>
|-FunctionDecl 0x55827dd779e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55827dd77950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55827dd77a90 <col:65>
|-TypedefDecl 0x55827dd77b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55827dd02140 'unsigned long'
|-RecordDecl 0x55827dd77b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55827dd77ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55827dd77d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55827dd77db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55827dd77d60 'union pthread_attr_t' sugar
|   `-RecordType 0x55827dd77be0 'union pthread_attr_t'
|     `-Record 0x55827dd77b58 'pthread_attr_t'
|-RecordDecl 0x55827dd77e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55827dd77f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55827dd78000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55827dd780b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55827dd78050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55827dd77e90 'struct __pthread_internal_list'
|     `-Record 0x55827dd77e10 '__pthread_internal_list'
|-RecordDecl 0x55827dd78120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55827dd781c8 parent 0x55827dd01f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55827dd782a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55827dd78308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55827dd78370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55827dd783d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55827dd78440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55827dd784a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55827dd7c580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55827dd7c630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55827dd7c720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55827dd7c788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55827dd7c910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55827dd7c8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55827dd781a0 'pthread_mutex_t'
|     `-Record 0x55827dd78120 ''
|-RecordDecl 0x55827dd7c980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55827dd7cac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55827dd7cb28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55827dd7cbe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55827dd7cb80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55827dd7ca00 'pthread_mutexattr_t'
|     `-Record 0x55827dd7c980 ''
|-RecordDecl 0x55827dd7cc50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55827dd7ccf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55827dd7cdc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55827dd7ce28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55827dd7ce90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55827dd7cef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55827dd7cf60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55827dd7cfc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55827dd7d030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55827dd7d098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55827dd7d150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix036_pso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix036_pso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55827dd7d240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55827dd7d2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55827dd7d3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55827dd7d380 'union pthread_cond_t' sugar
|   `-RecordType 0x55827dd7ccd0 'pthread_cond_t'
|     `-Record 0x55827dd7cc50 ''
|-RecordDecl 0x55827dd7d450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55827dd7d590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55827dd7d5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55827dd7d6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55827dd7d650 'union pthread_condattr_t' sugar
|   `-RecordType 0x55827dd7d4d0 'pthread_condattr_t'
|     `-Record 0x55827dd7d450 ''
|-TypedefDecl 0x55827dd7d738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55827dd02120 'unsigned int'
|-TypedefDecl 0x55827dd7d7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55827dd02080 'int'
|-RecordDecl 0x55827dd7d800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55827dd7d8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55827dd7d970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55827dd7d9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55827dd7da40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55827dd7daa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55827dd7db10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55827dd7db78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55827dd7dbe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55827dd7dc48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55827dd7dcb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55827dd7dd18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55827dd7dd80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55827dd7de30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix036_pso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix036_pso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55827dd7ded8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55827dd7df40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55827dd7e090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55827dd7e030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55827dd7d880 'pthread_rwlock_t'
|     `-Record 0x55827dd7d800 ''
|-RecordDecl 0x55827dd7e100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55827dd7e240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55827dd7e2a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55827dd7e360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55827dd7e300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55827dd7e180 'pthread_rwlockattr_t'
|     `-Record 0x55827dd7e100 ''
|-TypedefDecl 0x55827dd7e3e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55827dd02084 'volatile int' volatile
|   `-BuiltinType 0x55827dd02080 'int'
|-RecordDecl 0x55827dd7e440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55827dd805b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55827dd80618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55827dd806d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55827dd80670 'union pthread_barrier_t' sugar
|   `-RecordType 0x55827dd7e4c0 'pthread_barrier_t'
|     `-Record 0x55827dd7e440 ''
|-RecordDecl 0x55827dd80740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55827dd80840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55827dd808a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55827dd80960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55827dd80900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55827dd807c0 'pthread_barrierattr_t'
|     `-Record 0x55827dd80740 ''
|-TypedefDecl 0x55827dd80a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55827dd80a10 'long [8]' 8 
|   `-BuiltinType 0x55827dd020a0 'long'
|-EnumDecl 0x55827dd80ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55827dd80b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55827dd80be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55827dd80c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55827dd80d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55827dd80d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55827dd80da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55827dd80df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55827dd80e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55827dd80e68 <col:26> 'int'
| |   `-DeclRefExpr 0x55827dd80e48 <col:26> 'int' EnumConstant 0x55827dd80d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55827dd80f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55827dd80ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x55827dd80ed0 <col:29> 'int' EnumConstant 0x55827dd80d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55827dd80f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55827dd80f78 <col:30> 'int'
| |   `-DeclRefExpr 0x55827dd80f58 <col:30> 'int' EnumConstant 0x55827dd80da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55827dd81018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55827dd81000 <col:27> 'int'
|     `-DeclRefExpr 0x55827dd80fe0 <col:27> 'int' EnumConstant 0x55827dd80e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55827dd81068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55827dd81138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55827dd811c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55827dd811a8 <col:30> 'int'
| |   `-DeclRefExpr 0x55827dd81188 <col:30> 'int' EnumConstant 0x55827dd81138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55827dd81210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55827dd81298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55827dd81280 <col:29> 'int'
|     `-DeclRefExpr 0x55827dd81260 <col:29> 'int' EnumConstant 0x55827dd81210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55827dd812e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55827dd813b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55827dd81408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55827dd81458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55827dd814a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55827dd815c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55827dd81610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55827dd81660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55827dd816e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55827dd816d0 <col:31> 'int'
|     `-DeclRefExpr 0x55827dd816b0 <col:31> 'int' EnumConstant 0x55827dd815c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55827dd81738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55827dd81808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55827dd81858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55827dd818a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55827dd81978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55827dd819c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55827dd81a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55827dd81ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55827dd81b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55827dd81b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55827dd81dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55827dd81e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55827dd81e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55827dd81fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55827dd82008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55827dd820d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55827dd82128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55827dd82178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55827dd82248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55827dd82298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55827dd828f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55827dd82390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55827dd824a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55827dd826e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55827dd82760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55827dd829b8 <col:47>
| |-NonNullAttr 0x55827dd82a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x55827dd82a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55827dd82b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55827dd82aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55827dd82dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55827dd82c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55827dd82ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55827dd82f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55827dd82e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55827dd83040 <col:60>
|-FunctionDecl 0x55827dd83190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55827dd83230 <col:54>
| `-ConstAttr 0x55827dd83288 <col:95>
|-FunctionDecl 0x55827dd83458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55827dd832c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55827dd83338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55827dd83508 <line:394:19>
| `-ConstAttr 0x55827dd83560 <col:60>
|-FunctionDecl 0x55827dd83f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55827dd83e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55827dd84010 <col:71>
| `-NonNullAttr 0x55827dd84068 <col:112, col:126> 1
|-FunctionDecl 0x55827dd84170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55827dd840b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55827dd84218 <line:397:22>
| `-NonNullAttr 0x55827dd84270 <col:63, col:77> 1
|-FunctionDecl 0x55827dd84498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55827dd842b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55827dd84338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55827dd84548 <line:400:22>
| `-NonNullAttr 0x55827dd845a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55827dd847a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55827dd845e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55827dd84668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55827dd84858 <line:403:22>
| `-NonNullAttr 0x55827dd848b0 <col:63, col:77> 1
|-FunctionDecl 0x55827dd84b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55827dd848f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55827dd849a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55827dd84bb8 <line:406:22>
| `-NonNullAttr 0x55827dd84c10 <col:63, col:80> 1 2
|-FunctionDecl 0x55827dd85e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55827dd84c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55827dd84cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55827dd85ef8 <line:409:22>
| `-NonNullAttr 0x55827dd85f50 <col:63, col:77> 1
|-FunctionDecl 0x55827dd86188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55827dd85f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55827dd86028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55827dd86238 <line:412:22>
| `-NonNullAttr 0x55827dd86290 <col:63, col:80> 1 2
|-FunctionDecl 0x55827dd864c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55827dd862d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55827dd86368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55827dd86578 <col:37>
| `-NonNullAttr 0x55827dd865d0 <col:78, col:95> 1 2
|-FunctionDecl 0x55827dd867b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55827dd86618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55827dd86698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55827dd86868 <line:418:22>
| `-NonNullAttr 0x55827dd868c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55827dd86a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55827dd86908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55827dd86988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55827dd86af8 <line:420:22>
| `-NonNullAttr 0x55827dd86b50 <col:63, col:77> 1
|-FunctionDecl 0x55827dd86cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55827dd86b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55827dd86c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55827dd86da8 <line:423:22>
| `-NonNullAttr 0x55827dd87e30 <col:63, col:80> 1 2
|-FunctionDecl 0x55827dd87fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55827dd87e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55827dd87ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55827dd88068 <line:426:22>
| `-NonNullAttr 0x55827dd880c0 <col:63, col:77> 1
|-FunctionDecl 0x55827dd88268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55827dd88108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55827dd88188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55827dd88318 <line:429:22>
| `-NonNullAttr 0x55827dd88370 <col:63, col:80> 1 2
|-FunctionDecl 0x55827dd884f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55827dd883b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55827dd88438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55827dd885a8 <line:431:22>
| `-NonNullAttr 0x55827dd88600 <col:63, col:77> 1
|-FunctionDecl 0x55827dd88828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55827dd88648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55827dd886c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55827dd888d8 <line:434:22>
| |-NonNullAttr 0x55827dd88930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55827dd88968 <col:100> "" ""
|-FunctionDecl 0x55827dd88b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55827dd889b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55827dd88a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55827dd88c28 <line:437:22>
| |-NonNullAttr 0x55827dd88c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x55827dd88cb8 <col:97> "" ""
|-FunctionDecl 0x55827dd88eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55827dd88d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55827dd88d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55827dd88f68 <line:440:22>
| `-NonNullAttr 0x55827dd88fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x55827dd89140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55827dd89008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55827dd89080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55827dd891f0 <line:443:22>
| `-NonNullAttr 0x55827dd89248 <col:63, col:77> 1
|-FunctionDecl 0x55827dd89538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55827dd89298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55827dd89318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55827dd89390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55827dd895f0 <line:447:22>
| `-NonNullAttr 0x55827dd89648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55827dd898f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55827dd896a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55827dd89720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55827dd89798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55827dd899b0 <col:43>
| `-NonNullAttr 0x55827dd89a08 <col:84, col:98> 1
|-FunctionDecl 0x55827dd89cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55827dd89a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55827dd89ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55827dd89b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55827dd89d80 <line:452:22>
| `-NonNullAttr 0x55827dd89dd8 <col:63, col:77> 3
|-FunctionDecl 0x55827dd8a0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55827dd89e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55827dd89ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55827dd89f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55827dd8a1a0 <line:456:22>
| `-NonNullAttr 0x55827dd8a1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x55827dd8a3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55827dd8a248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55827dd8a2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55827dd8a498 <line:458:22>
|-FunctionDecl 0x55827dd8a868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55827dd8a560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55827dd8a700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55827dd8a918 <col:52, col:69> 1 2
|-FunctionDecl 0x55827dd8aac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55827dd8a9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55827dd8aa20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55827dd8aca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55827dd8ab88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55827dd8ac08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55827dd8ae60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55827dd8ad68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55827dd8afa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55827dd8b040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55827dd8b0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55827dd8b1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55827dd8b240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55827dd8b410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix036_pso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55827dd8b508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55827dd8b5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55827dd8b560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55827dd8b0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x55827dd8b040 ''
| `-AlignedAttr 0x55827dd8b618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55827dd8b690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55827dd8b7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55827dd8b858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55827dd8b8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55827dd8b928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55827dd8bb30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55827dd8ba20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55827dd8bc78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55827dd8bbe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55827dd8be70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55827dd8bd30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55827dd8bf18 <line:487:22>
|-RecordDecl 0x55827dd8bf70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55827dd8c288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55827dd8c0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55827dd8c168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55827dd8c338 <col:86>
| `-ReturnsTwiceAttr 0x55827dd8c390 <col:12> Implicit
|-FunctionDecl 0x55827dd8c6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55827dd8c460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55827dd8c570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55827dd8c768 <line:493:22>
| `-NonNullAttr 0x55827dd8c7c0 <col:63, col:77> 1
|-FunctionDecl 0x55827dd8c938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55827dd8c808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55827dd8c9e0 <line:495:22>
| `-NonNullAttr 0x55827dd8ca38 <col:63, col:77> 1
|-FunctionDecl 0x55827dd8cb40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55827dd8ca88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55827dd8cbe8 <line:497:22>
| `-NonNullAttr 0x55827dd8cc40 <col:52, col:66> 1
|-FunctionDecl 0x55827dd8cd40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55827dd8cc88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55827dd8cde8 <line:499:22>
| `-NonNullAttr 0x55827dd8ce40 <col:52, col:66> 1
|-FunctionDecl 0x55827dd8d088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55827dd8ce98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55827dd8cf28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55827dd8d138 <col:36>
| `-NonNullAttr 0x55827dd8d190 <col:66, col:83> 1 2
|-FunctionDecl 0x55827dd8d290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55827dd8d1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55827dd8d338 <line:504:22>
| `-NonNullAttr 0x55827dd8d390 <col:52, col:66> 1
|-FunctionDecl 0x55827dd8d628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55827dd8d440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55827dd8d4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55827dd8d6d8 <line:508:22>
| `-NonNullAttr 0x55827dd8d730 <col:63, col:80> 1 2
|-FunctionDecl 0x55827dd8d9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55827dd8d778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55827dd8d7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55827dd8d878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55827dd8dab0 <line:512:22>
| `-NonNullAttr 0x55827dd8db08 <col:63, col:80> 1 3
|-FunctionDecl 0x55827dd8dc10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55827dd8db58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55827dd8dcb8 <line:514:22>
| `-NonNullAttr 0x55827dd8dd10 <col:63, col:77> 1
|-FunctionDecl 0x55827dd8df38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55827dd8ddc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55827dd8dfe0 <line:516:22>
| `-NonNullAttr 0x55827dd8e038 <col:63, col:77> 1
|-FunctionDecl 0x55827dd8e140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55827dd8e088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55827dd8e1e8 <line:518:22>
| `-NonNullAttr 0x55827dd8e240 <col:63, col:77> 1
|-FunctionDecl 0x55827dd8e468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55827dd8e288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55827dd8e308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55827dd8e518 <line:522:22>
| `-NonNullAttr 0x55827dd8e570 <col:63, col:80> 1 2
|-FunctionDecl 0x55827dd8e778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55827dd8e5b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55827dd8e638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55827dd8e828 <line:525:22>
| `-NonNullAttr 0x55827dd8e880 <col:63, col:77> 1
|-FunctionDecl 0x55827dd8ea28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55827dd8e8c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55827dd8e948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55827dd8ead8 <line:528:22>
| `-NonNullAttr 0x55827dd8eb30 <col:63, col:80> 1 2
|-FunctionDecl 0x55827dd8ecb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55827dd8eb78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55827dd8ebf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55827dd8ed68 <line:530:22>
| `-NonNullAttr 0x55827dd8edc0 <col:63, col:77> 1
|-FunctionDecl 0x55827dd8ff90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55827dd8ee08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55827dd8feb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55827dd90040 <line:534:22>
| `-NonNullAttr 0x55827dd90098 <col:63, col:80> 1 2
|-FunctionDecl 0x55827dd90228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55827dd900e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55827dd90168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55827dd902d8 <line:537:22>
| `-NonNullAttr 0x55827dd90330 <col:63, col:77> 1
|-FunctionDecl 0x55827dd904d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55827dd90378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55827dd903f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55827dd90588 <line:541:22>
| `-NonNullAttr 0x55827dd905e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55827dd90768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55827dd90628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55827dd906a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55827dd90818 <line:544:22>
| `-NonNullAttr 0x55827dd90870 <col:63, col:77> 1
|-FunctionDecl 0x55827dd90a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55827dd908b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55827dd90938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55827dd90b08 <line:547:22>
| `-NonNullAttr 0x55827dd90b60 <col:63, col:80> 1 2
|-FunctionDecl 0x55827dd90ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55827dd90ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55827dd90c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55827dd90d98 <line:550:22>
| `-NonNullAttr 0x55827dd90df0 <col:63, col:77> 1
|-FunctionDecl 0x55827dd92168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55827dd91f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55827dd92020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55827dd92218 <col:29>
| `-NonNullAttr 0x55827dd92270 <col:70, col:84> 1
|-FunctionDecl 0x55827dd923e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55827dd922b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55827dd92490 <line:555:22>
| `-NonNullAttr 0x55827dd924e8 <col:63, col:77> 1
|-FunctionDecl 0x55827dd925f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55827dd92538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55827dd92698 <line:557:22>
| `-NonNullAttr 0x55827dd926f0 <col:52, col:66> 1
|-FunctionDecl 0x55827dd927f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55827dd92738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55827dd92898 <line:559:19>
| `-NonNullAttr 0x55827dd928f0 <col:49, col:63> 1
|-FunctionDecl 0x55827dd92b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55827dd92938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55827dd929c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55827dd92bd8 <col:39>
| `-NonNullAttr 0x55827dd92c30 <col:69, col:86> 1 2
|-FunctionDecl 0x55827dd92d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55827dd92c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55827dd92dd8 <line:564:22>
| `-NonNullAttr 0x55827dd92e30 <col:52, col:66> 1
|-FunctionDecl 0x55827dd92f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55827dd92ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55827dd93040 <line:566:22>
| `-NonNullAttr 0x55827dd93098 <col:52, col:66> 1
|-FunctionDecl 0x55827dd93258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55827dd930e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55827dd93178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55827dd93308 <col:39>
| `-NonNullAttr 0x55827dd93360 <col:69, col:86> 1 2
|-FunctionDecl 0x55827dd93460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55827dd933a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55827dd93508 <line:571:22>
| `-NonNullAttr 0x55827dd93560 <col:52, col:66> 1
|-FunctionDecl 0x55827dd93748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55827dd93610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55827dd937f0 <line:573:22>
| `-NonNullAttr 0x55827dd93848 <col:63, col:77> 1
|-FunctionDecl 0x55827dd93950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55827dd93898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55827dd939f8 <line:575:22>
| `-NonNullAttr 0x55827dd93a50 <col:63, col:77> 1
|-FunctionDecl 0x55827dd93c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55827dd93a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55827dd93b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55827dd93d28 <line:579:22>
| `-NonNullAttr 0x55827dd93d80 <col:63, col:80> 1 2
|-FunctionDecl 0x55827dd93fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55827dd93dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55827dd93e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55827dd94058 <line:582:22>
| `-NonNullAttr 0x55827dd940b0 <col:63, col:77> 1
|-FunctionDecl 0x55827dd94258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55827dd940f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55827dd94178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55827dd94308 <line:586:22>
| `-NonNullAttr 0x55827dd94360 <col:63, col:80> 1 2
|-FunctionDecl 0x55827dd944e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55827dd943a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55827dd94428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55827dd94598 <col:36>
| `-NonNullAttr 0x55827dd945f0 <col:77, col:91> 1
|-FunctionDecl 0x55827dd94928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55827dd946d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55827dd947e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55827dd949d8 <line:591:22>
| `-NonNullAttr 0x55827dd94a30 <col:63, col:77> 1
|-FunctionDecl 0x55827dd94ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55827dd94a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55827dd94c50 <line:593:22>
| `-NonNullAttr 0x55827dd94ca8 <col:63, col:77> 1
|-FunctionDecl 0x55827dd94db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55827dd94cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55827dd94e58 <line:595:22>
| `-NonNullAttr 0x55827dd94eb0 <col:52, col:66> 1
|-FunctionDecl 0x55827dd94fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55827dd94f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55827dd95070 <line:597:22>
| `-NonNullAttr 0x55827dd950c8 <col:52, col:66> 1
|-FunctionDecl 0x55827dd952f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55827dd95118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55827dd95190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55827dd953a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55827dd956d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55827dd95428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55827dd954a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55827dd95530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55827dd95790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55827dd959a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55827dd95870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55827dd95a50 <line:606:22>
| `-NonNullAttr 0x55827dd95aa8 <col:63, col:77> 1
|-FunctionDecl 0x55827dd95bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55827dd95af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55827dd95c58 <line:608:22>
| `-NonNullAttr 0x55827dd95cb0 <col:63, col:77> 1
|-FunctionDecl 0x55827dd95f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55827dd95cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55827dd95d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55827dd95fc0 <line:612:22>
| `-NonNullAttr 0x55827dd96018 <col:63, col:80> 1 2
|-FunctionDecl 0x55827dd96228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55827dd96068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55827dd960e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55827dd962d8 <col:37>
| `-NonNullAttr 0x55827dd96330 <col:78, col:92> 1
|-FunctionDecl 0x55827dd96548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55827dd96378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55827dd96420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55827dd965f8 <line:618:22>
| `-NonNullAttr 0x55827dd96650 <col:63, col:80> 1 2
|-FunctionDecl 0x55827dd96818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55827dd96698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55827dd96710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55827dd968c8 <line:621:22>
| `-NonNullAttr 0x55827dd96920 <col:63, col:77> 1
|-FunctionDecl 0x55827dd96bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55827dd96a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55827dd96a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55827dd96c78 <line:623:22>
| `-NonNullAttr 0x55827dd96cd0 <col:63, col:77> 1
|-FunctionDecl 0x55827dd96e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55827dd96d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55827dd96f20 <line:625:22>
| `-NonNullAttr 0x55827dd96f78 <col:63, col:77> 1
|-FunctionDecl 0x55827dd97080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55827dd96fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55827dd97128 <line:627:22>
| `-NonNullAttr 0x55827dd97180 <col:52, col:66> 1
|-FunctionDecl 0x55827dd97280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55827dd971c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55827dd97328 <line:629:22>
| `-NonNullAttr 0x55827dd97380 <col:52, col:66> 1
|-FunctionDecl 0x55827dd97480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55827dd973c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55827dd97528 <line:631:22>
| `-NonNullAttr 0x55827dd97580 <col:52, col:66> 1
|-FunctionDecl 0x55827dd97958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55827dd97660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55827dd97770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55827dd977f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55827dd97a10 <line:635:22>
| `-NonNullAttr 0x55827dd97a68 <col:63, col:77> 1
|-FunctionDecl 0x55827dd97be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55827dd97ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55827dd97c90 <line:637:22>
| `-NonNullAttr 0x55827dd97ce8 <col:63, col:77> 1
|-FunctionDecl 0x55827dd97df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55827dd97d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55827dd97e98 <line:639:22>
| `-NonNullAttr 0x55827dd97ef0 <col:52, col:66> 1
|-FunctionDecl 0x55827dd980e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55827dd97fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55827dd98190 <line:641:22>
| `-NonNullAttr 0x55827dd981e8 <col:63, col:77> 1
|-FunctionDecl 0x55827dd982f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55827dd98238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55827dd98398 <line:643:22>
| `-NonNullAttr 0x55827dd983f0 <col:63, col:77> 1
|-FunctionDecl 0x55827dd98618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55827dd98438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55827dd984b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55827dd986c8 <line:647:22>
| `-NonNullAttr 0x55827dd98720 <col:63, col:80> 1 2
|-FunctionDecl 0x55827dd98928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55827dd98768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55827dd987e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55827dd989d8 <line:650:22>
| `-NonNullAttr 0x55827dd98a30 <col:63, col:77> 1
|-FunctionDecl 0x55827dd98d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55827dd98b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55827dd98c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55827dd98e28 <line:653:22>
| `-NonNullAttr 0x55827dd98e80 <col:63, col:77> 1
|-FunctionDecl 0x55827dd98fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55827dd98ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55827dd99090 <col:69>
|-FunctionDecl 0x55827dd99208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55827dd990f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55827dd992b0 <col:72>
|-FunctionDecl 0x55827dd994e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55827dd99318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55827dd993c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55827dd99598 <col:44>
|-FunctionDecl 0x55827dd997b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55827dd99600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55827dd99678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55827dd99868 <line:660:22>
| `-NonNullAttr 0x55827dd998c0 <col:63, col:77> 2
|-FunctionDecl 0x55827dd99d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55827dd999a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55827dd99ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55827dd99bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55827dd99dc0 <col:47>
|-FunctionDecl 0x55827dd9af60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55827dd99e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55827dd9b0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55827dd9b020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55827dd9b210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55827dd9b178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55827dd9b368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x55827dd9b2d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55827dd9b430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55827dd9b4f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55827dd9b5b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55827dd9b668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55827dd9b6e8 prev 0x55827dd9b668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55827dd9b750 <col:24> 'int' 0
|-VarDecl 0x55827dd9b788 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55827dd9b808 prev 0x55827dd9b788 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55827dd9b870 <col:27> 'int' 0
|-VarDecl 0x55827dd9b8a8 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55827dd9b928 prev 0x55827dd9b8a8 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55827dd9b990 <col:27> 'int' 0
|-VarDecl 0x55827dd9b9c8 <line:678:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55827dd9ba48 prev 0x55827dd9b9c8 <line:679:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55827dd9bab0 <col:27> 'int' 0
|-VarDecl 0x55827dd9bae8 <line:680:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x55827dd9bb68 prev 0x55827dd9bae8 <line:681:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x55827dd9bbd0 <col:27> 'int' 0
|-VarDecl 0x55827dd9bc08 <line:682:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x55827dd9bc88 prev 0x55827dd9bc08 <line:683:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x55827dd9bcf0 <col:27> 'int' 0
|-VarDecl 0x55827dd9bd28 <line:684:1, col:5> col:5 used a 'int'
|-VarDecl 0x55827dd9bda8 prev 0x55827dd9bd28 <line:685:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x55827dd9be10 <col:9> 'int' 0
|-VarDecl 0x55827dd9be48 <line:686:1, col:5> col:5 used b 'int'
|-VarDecl 0x55827dd9bec8 prev 0x55827dd9be48 <line:687:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x55827dd9bf30 <col:9> 'int' 0
|-VarDecl 0x55827dd9bf70 <line:688:1, col:7> col:7 used b$flush_delayed '_Bool'
|-VarDecl 0x55827dd9bff0 <line:689:1, col:5> col:5 used b$mem_tmp 'int'
|-VarDecl 0x55827dd9c068 <line:690:1, col:7> col:7 used b$r_buff0_thd0 '_Bool'
|-VarDecl 0x55827dd9c0e0 <line:691:1, col:7> col:7 used b$r_buff0_thd1 '_Bool'
|-VarDecl 0x55827dd9c158 <line:692:1, col:7> col:7 used b$r_buff0_thd2 '_Bool'
|-VarDecl 0x55827dd9c1d0 <line:693:1, col:7> col:7 used b$r_buff0_thd3 '_Bool'
|-VarDecl 0x55827dd9c248 <line:694:1, col:7> col:7 used b$r_buff0_thd4 '_Bool'
|-VarDecl 0x55827dd9c2c0 <line:695:1, col:7> col:7 used b$r_buff1_thd0 '_Bool'
|-VarDecl 0x55827dd9c338 <line:696:1, col:7> col:7 used b$r_buff1_thd1 '_Bool'
|-VarDecl 0x55827dd9c3b0 <line:697:1, col:7> col:7 used b$r_buff1_thd2 '_Bool'
|-VarDecl 0x55827dd9c428 <line:698:1, col:7> col:7 used b$r_buff1_thd3 '_Bool'
|-VarDecl 0x55827dd9c4a0 <line:699:1, col:7> col:7 used b$r_buff1_thd4 '_Bool'
|-VarDecl 0x55827dd9c518 <line:700:1, col:7> col:7 b$read_delayed '_Bool'
|-VarDecl 0x55827dd9c598 <line:701:1, col:6> col:6 b$read_delayed_var 'int *'
|-VarDecl 0x55827dd9c618 <line:702:1, col:5> col:5 used b$w_buff0 'int'
|-VarDecl 0x55827dd9c690 <line:703:1, col:7> col:7 used b$w_buff0_used '_Bool'
|-VarDecl 0x55827dd9c710 <line:704:1, col:5> col:5 used b$w_buff1 'int'
|-VarDecl 0x55827dd9c788 <line:705:1, col:7> col:7 used b$w_buff1_used '_Bool'
|-VarDecl 0x55827dd9c800 <line:706:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55827dd9c878 <line:707:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55827dd9c8f8 <line:708:1, col:5> col:5 used x 'int'
|-VarDecl 0x55827dd9c978 prev 0x55827dd9c8f8 <line:709:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55827dd9c9e0 <col:9> 'int' 0
|-VarDecl 0x55827dd9ca18 <line:710:1, col:5> col:5 used y 'int'
|-VarDecl 0x55827dd9ca98 prev 0x55827dd9ca18 <line:711:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55827dd9cb00 <col:9> 'int' 0
|-VarDecl 0x55827dd9cb38 <line:712:1, col:5> col:5 used z 'int'
|-VarDecl 0x55827dd9cbb8 prev 0x55827dd9cb38 <line:713:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55827dd9cc20 <col:9> 'int' 0
|-VarDecl 0x55827dd9cc50 <line:714:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55827dd9ccc8 <line:715:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55827dd9cde0 prev 0x55827dd9af60 <line:716:1, line:745:1> line:716:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55827dd9cd48 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55827dd9e698 <line:717:1, line:745:1>
|   |-CallExpr 0x55827dd9cef8 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827dd9cee0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dd9ce88 <col:3> 'void ()' Function 0x55827dd42350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827dd9cf80 <line:719:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55827dd9cf18 <col:3> 'int' lvalue Var 0x55827dd9c710 'b$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55827dd9cf58 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55827dd9cf38 <col:15> 'int' lvalue Var 0x55827dd9c618 'b$w_buff0' 'int'
|   |-BinaryOperator 0x55827dd9cfe0 <line:720:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55827dd9cfa0 <col:3> 'int' lvalue Var 0x55827dd9c618 'b$w_buff0' 'int'
|   | `-IntegerLiteral 0x55827dd9cfc0 <col:15> 'int' 1
|   |-BinaryOperator 0x55827dd9d058 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55827dd9d000 <col:3> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55827dd9d040 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55827dd9d020 <col:20> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55827dd9d0f0 <line:722:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55827dd9d078 <col:3> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55827dd9d0c8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55827dd9d098 <col:27> 'int' 1
|   |-CallExpr 0x55827dd9d278 <line:723:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55827dd9d260 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55827dd9d110 <col:3> 'void (int)' Function 0x55827dd420d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55827dd9d210 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55827dd9d1f0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55827dd9d1d0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55827dd9d188 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55827dd9d170 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55827dd9d130 <col:23> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55827dd9d1b8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55827dd9d1a0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55827dd9d150 <col:41> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55827dd9d2f8 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55827dd9d2a0 <col:3> '_Bool' lvalue Var 0x55827dd9c2c0 'b$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55827dd9d2e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55827dd9d2c0 <col:20> '_Bool' lvalue Var 0x55827dd9c068 'b$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55827dd9d370 <line:725:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55827dd9d318 <col:3> '_Bool' lvalue Var 0x55827dd9c338 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55827dd9d358 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55827dd9d338 <col:20> '_Bool' lvalue Var 0x55827dd9c0e0 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55827dd9d3e8 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55827dd9d390 <col:3> '_Bool' lvalue Var 0x55827dd9c3b0 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55827dd9d3d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55827dd9d3b0 <col:20> '_Bool' lvalue Var 0x55827dd9c158 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55827dd9d460 <line:727:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55827dd9d408 <col:3> '_Bool' lvalue Var 0x55827dd9c428 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55827dd9d448 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55827dd9d428 <col:20> '_Bool' lvalue Var 0x55827dd9c1d0 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55827dd9d4d8 <line:728:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55827dd9d480 <col:3> '_Bool' lvalue Var 0x55827dd9c4a0 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55827dd9d4c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55827dd9d4a0 <col:20> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55827dd9d570 <line:729:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55827dd9d4f8 <col:3> '_Bool' lvalue Var 0x55827dd9c0e0 'b$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x55827dd9d548 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55827dd9d518 <col:27> 'int' 1
|   |-CallExpr 0x55827dd9d5c8 <line:730:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827dd9d5b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dd9d590 <col:3> 'void ()' Function 0x55827dd42410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55827dd9d620 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827dd9d608 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dd9d5e8 <col:3> 'void ()' Function 0x55827dd42350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827dd9d698 <line:732:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55827dd9d640 <col:3> 'int' lvalue Var 0x55827dd9b808 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55827dd9d680 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55827dd9d660 <col:25> 'int' lvalue Var 0x55827dd9c978 'x' 'int'
|   |-CallExpr 0x55827dd9d6f0 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827dd9d6d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dd9d6b8 <col:3> 'void ()' Function 0x55827dd42410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55827dd9d748 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827dd9d730 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dd9d710 <col:3> 'void ()' Function 0x55827dd42350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827dd9da30 <line:735:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55827dd9d768 <col:3> 'int' lvalue Var 0x55827dd9bec8 'b' 'int'
|   | `-ConditionalOperator 0x55827dd9da00 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55827dd9d828 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55827dd9d7e0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55827dd9d7c8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55827dd9d788 <col:7> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55827dd9d810 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55827dd9d7f8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55827dd9d7a8 <col:25> '_Bool' lvalue Var 0x55827dd9c0e0 'b$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55827dd9d9e8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55827dd9d848 <col:42> 'int' lvalue Var 0x55827dd9c618 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55827dd9d9c8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55827dd9d998 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55827dd9d908 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55827dd9d8c0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55827dd9d8a8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55827dd9d868 <col:55> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55827dd9d8f0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55827dd9d8d8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55827dd9d888 <col:73> '_Bool' lvalue Var 0x55827dd9c338 'b$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55827dd9d968 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55827dd9d928 <col:90> 'int' lvalue Var 0x55827dd9c710 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55827dd9d980 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827dd9d948 <col:102> 'int' lvalue Var 0x55827dd9bec8 'b' 'int'
|   |-BinaryOperator 0x55827dd9dc38 <line:736:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55827dd9da50 <col:3> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55827dd9dc20 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827dd9dbf0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55827dd9db10 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55827dd9dac8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55827dd9dab0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55827dd9da70 <col:20> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55827dd9daf8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55827dd9dae0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55827dd9da90 <col:38> '_Bool' lvalue Var 0x55827dd9c0e0 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55827dd9dba8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827dd9db60 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827dd9db30 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55827dd9dbd8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827dd9dbc0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827dd9db88 <col:66> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55827dd9df20 <line:737:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55827dd9dc58 <col:3> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55827dd9df08 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827dd9ded8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55827dd9ddf8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55827dd9dd18 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55827dd9dcd0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55827dd9dcb8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55827dd9dc78 <col:20> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55827dd9dd00 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55827dd9dce8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55827dd9dc98 <col:38> '_Bool' lvalue Var 0x55827dd9c0e0 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55827dd9ddd8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55827dd9dd90 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55827dd9dd78 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55827dd9dd38 <col:56> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55827dd9ddc0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55827dd9dda8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55827dd9dd58 <col:74> '_Bool' lvalue Var 0x55827dd9c338 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55827dd9de90 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827dd9de48 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827dd9de18 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55827dd9dec0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827dd9dea8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827dd9de70 <col:102> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55827dd9e138 <line:738:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55827dd9df40 <col:3> '_Bool' lvalue Var 0x55827dd9c0e0 'b$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55827dd9e120 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827dd9e0f0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55827dd9e010 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55827dd9dfc8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55827dd9dfb0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55827dd9df60 <col:20> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55827dd9dff8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55827dd9dfe0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55827dd9df90 <col:38> '_Bool' lvalue Var 0x55827dd9c0e0 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55827dd9e0a8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827dd9e060 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827dd9e030 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55827dd9e0d8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827dd9e0c0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827dd9e088 <col:66> '_Bool' lvalue Var 0x55827dd9c0e0 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55827dd9e420 <line:739:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55827dd9e158 <col:3> '_Bool' lvalue Var 0x55827dd9c338 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55827dd9e408 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827dd9e3d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55827dd9e2f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55827dd9e218 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55827dd9e1d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55827dd9e1b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55827dd9e178 <col:20> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55827dd9e200 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55827dd9e1e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55827dd9e198 <col:38> '_Bool' lvalue Var 0x55827dd9c0e0 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55827dd9e2d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55827dd9e290 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55827dd9e278 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55827dd9e238 <col:56> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55827dd9e2c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55827dd9e2a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55827dd9e258 <col:74> '_Bool' lvalue Var 0x55827dd9c338 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55827dd9e390 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827dd9e348 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827dd9e318 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55827dd9e3c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827dd9e3a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827dd9e370 <col:102> '_Bool' lvalue Var 0x55827dd9c338 'b$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55827dd9e478 <line:740:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827dd9e460 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dd9e440 <col:3> 'void ()' Function 0x55827dd42410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55827dd9e4d0 <line:741:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827dd9e4b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dd9e498 <col:3> 'void ()' Function 0x55827dd42350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827dd9e588 <line:742:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55827dd9e4f0 <col:3> 'int' lvalue Var 0x55827dd9b6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55827dd9e568 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55827dd9e550 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55827dd9e510 <col:22> 'int' lvalue Var 0x55827dd9b6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55827dd9e530 <col:41> 'int' 1
|   |-CallExpr 0x55827dd9e5e0 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827dd9e5c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dd9e5a8 <col:3> 'void ()' Function 0x55827dd42410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55827dd9e688 <line:744:3, col:36>
|     `-CallExpr 0x55827dd9e668 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55827dd9e650 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55827dd9e600 <col:10> 'void *(void)' Function 0x55827dd41e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55827dd9e830 prev 0x55827dd9b0b8 <line:746:1, line:765:1> line:746:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55827dd9e798 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55827dd9fa70 <line:747:1, line:765:1>
|   |-CallExpr 0x55827dd9e910 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827dd9e8f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dd9e8d8 <col:3> 'void ()' Function 0x55827dd42350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827dd9e970 <line:749:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55827dd9e930 <col:3> 'int' lvalue Var 0x55827dd9c978 'x' 'int'
|   | `-IntegerLiteral 0x55827dd9e950 <col:7> 'int' 1
|   |-CallExpr 0x55827dd9e9c8 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827dd9e9b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dd9e990 <col:3> 'void ()' Function 0x55827dd42410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55827dd9ea20 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827dd9ea08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dd9e9e8 <col:3> 'void ()' Function 0x55827dd42350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827dd9ea98 <line:752:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55827dd9ea40 <col:3> 'int' lvalue Var 0x55827dd9b928 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55827dd9ea80 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55827dd9ea60 <col:25> 'int' lvalue Var 0x55827dd9ca98 'y' 'int'
|   |-CallExpr 0x55827dd9eaf0 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827dd9ead8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dd9eab8 <col:3> 'void ()' Function 0x55827dd42410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55827dd9eb48 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827dd9eb30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dd9eb10 <col:3> 'void ()' Function 0x55827dd42350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827dd9ee30 <line:755:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55827dd9eb68 <col:3> 'int' lvalue Var 0x55827dd9bec8 'b' 'int'
|   | `-ConditionalOperator 0x55827dd9ee00 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55827dd9ec28 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55827dd9ebe0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55827dd9ebc8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55827dd9eb88 <col:7> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55827dd9ec10 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55827dd9ebf8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55827dd9eba8 <col:25> '_Bool' lvalue Var 0x55827dd9c158 'b$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55827dd9ede8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55827dd9ec48 <col:42> 'int' lvalue Var 0x55827dd9c618 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55827dd9edc8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55827dd9ed98 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55827dd9ed08 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55827dd9ecc0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55827dd9eca8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55827dd9ec68 <col:55> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55827dd9ecf0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55827dd9ecd8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55827dd9ec88 <col:73> '_Bool' lvalue Var 0x55827dd9c3b0 'b$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55827dd9ed68 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55827dd9ed28 <col:90> 'int' lvalue Var 0x55827dd9c710 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55827dd9ed80 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827dd9ed48 <col:102> 'int' lvalue Var 0x55827dd9bec8 'b' 'int'
|   |-BinaryOperator 0x55827dd9f050 <line:756:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55827dd9ee50 <col:3> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55827dd9f038 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827dd9f008 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55827dd9ef10 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55827dd9eec8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55827dd9eeb0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55827dd9ee70 <col:20> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55827dd9eef8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55827dd9eee0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55827dd9ee90 <col:38> '_Bool' lvalue Var 0x55827dd9c158 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55827dd9efc0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827dd9ef60 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827dd9ef30 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55827dd9eff0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827dd9efd8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827dd9efa0 <col:66> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55827dd9f338 <line:757:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55827dd9f070 <col:3> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55827dd9f320 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827dd9f2f0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55827dd9f210 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55827dd9f130 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55827dd9f0e8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55827dd9f0d0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55827dd9f090 <col:20> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55827dd9f118 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55827dd9f100 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55827dd9f0b0 <col:38> '_Bool' lvalue Var 0x55827dd9c158 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55827dd9f1f0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55827dd9f1a8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55827dd9f190 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55827dd9f150 <col:56> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55827dd9f1d8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55827dd9f1c0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55827dd9f170 <col:74> '_Bool' lvalue Var 0x55827dd9c3b0 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55827dd9f2a8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827dd9f260 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827dd9f230 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55827dd9f2d8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827dd9f2c0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827dd9f288 <col:102> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55827dd9f540 <line:758:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55827dd9f358 <col:3> '_Bool' lvalue Var 0x55827dd9c158 'b$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55827dd9f528 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827dd9f4f8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55827dd9f418 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55827dd9f3d0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55827dd9f3b8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55827dd9f378 <col:20> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55827dd9f400 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55827dd9f3e8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55827dd9f398 <col:38> '_Bool' lvalue Var 0x55827dd9c158 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55827dd9f4b0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827dd9f468 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827dd9f438 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55827dd9f4e0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827dd9f4c8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827dd9f490 <col:66> '_Bool' lvalue Var 0x55827dd9c158 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55827dd9f828 <line:759:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55827dd9f560 <col:3> '_Bool' lvalue Var 0x55827dd9c3b0 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55827dd9f810 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827dd9f7e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55827dd9f700 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55827dd9f620 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55827dd9f5d8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55827dd9f5c0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55827dd9f580 <col:20> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55827dd9f608 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55827dd9f5f0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55827dd9f5a0 <col:38> '_Bool' lvalue Var 0x55827dd9c158 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55827dd9f6e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55827dd9f698 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55827dd9f680 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55827dd9f640 <col:56> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55827dd9f6c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55827dd9f6b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55827dd9f660 <col:74> '_Bool' lvalue Var 0x55827dd9c3b0 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55827dd9f798 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827dd9f750 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827dd9f720 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55827dd9f7c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827dd9f7b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827dd9f778 <col:102> '_Bool' lvalue Var 0x55827dd9c3b0 'b$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55827dd9f880 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827dd9f868 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dd9f848 <col:3> 'void ()' Function 0x55827dd42410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55827dd9f8d8 <line:761:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827dd9f8c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dd9f8a0 <col:3> 'void ()' Function 0x55827dd42350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827dd9f990 <line:762:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55827dd9f8f8 <col:3> 'int' lvalue Var 0x55827dd9b6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55827dd9f970 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55827dd9f958 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55827dd9f918 <col:22> 'int' lvalue Var 0x55827dd9b6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55827dd9f938 <col:41> 'int' 1
|   |-CallExpr 0x55827dd9f9e8 <line:763:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827dd9f9d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dd9f9b0 <col:3> 'void ()' Function 0x55827dd42410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55827dd9fa60 <line:764:3, col:36>
|     `-CallExpr 0x55827dd9fa40 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55827dd9fa28 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55827dd9fa08 <col:10> 'void *(void)' Function 0x55827dd41e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55827dd9fbb8 prev 0x55827dd9b210 <line:766:1, line:785:1> line:766:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55827dd9fb20 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55827dda0df8 <line:767:1, line:785:1>
|   |-CallExpr 0x55827dd9fc98 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827dd9fc80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dd9fc60 <col:3> 'void ()' Function 0x55827dd42350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827dd9fcf8 <line:769:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55827dd9fcb8 <col:3> 'int' lvalue Var 0x55827dd9ca98 'y' 'int'
|   | `-IntegerLiteral 0x55827dd9fcd8 <col:7> 'int' 1
|   |-CallExpr 0x55827dd9fd50 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827dd9fd38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dd9fd18 <col:3> 'void ()' Function 0x55827dd42410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55827dd9fda8 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827dd9fd90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dd9fd70 <col:3> 'void ()' Function 0x55827dd42350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827dd9fe20 <line:772:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55827dd9fdc8 <col:3> 'int' lvalue Var 0x55827dd9ba48 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55827dd9fe08 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55827dd9fde8 <col:25> 'int' lvalue Var 0x55827dd9cbb8 'z' 'int'
|   |-CallExpr 0x55827dd9fe78 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827dd9fe60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dd9fe40 <col:3> 'void ()' Function 0x55827dd42410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55827dd9fed0 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827dd9feb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dd9fe98 <col:3> 'void ()' Function 0x55827dd42350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827dda01d0 <line:775:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55827dd9fef0 <col:3> 'int' lvalue Var 0x55827dd9bec8 'b' 'int'
|   | `-ConditionalOperator 0x55827dda01a0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55827dd9ffc8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55827dd9ff68 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55827dd9ff50 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55827dd9ff10 <col:7> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55827dd9ffb0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55827dd9ff80 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55827dd9ff30 <col:25> '_Bool' lvalue Var 0x55827dd9c1d0 'b$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55827dda0188 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55827dd9ffe8 <col:42> 'int' lvalue Var 0x55827dd9c618 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55827dda0168 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55827dda0138 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55827dda00a8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55827dda0060 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55827dda0048 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55827dda0008 <col:55> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55827dda0090 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55827dda0078 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55827dda0028 <col:73> '_Bool' lvalue Var 0x55827dd9c428 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55827dda0108 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55827dda00c8 <col:90> 'int' lvalue Var 0x55827dd9c710 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55827dda0120 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827dda00e8 <col:102> 'int' lvalue Var 0x55827dd9bec8 'b' 'int'
|   |-BinaryOperator 0x55827dda03d8 <line:776:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55827dda01f0 <col:3> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55827dda03c0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827dda0390 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55827dda02b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55827dda0268 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55827dda0250 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55827dda0210 <col:20> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55827dda0298 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55827dda0280 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55827dda0230 <col:38> '_Bool' lvalue Var 0x55827dd9c1d0 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55827dda0348 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827dda0300 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827dda02d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55827dda0378 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827dda0360 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827dda0328 <col:66> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55827dda06c0 <line:777:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55827dda03f8 <col:3> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55827dda06a8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827dda0678 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55827dda0598 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55827dda04b8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55827dda0470 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55827dda0458 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55827dda0418 <col:20> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55827dda04a0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55827dda0488 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55827dda0438 <col:38> '_Bool' lvalue Var 0x55827dd9c1d0 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55827dda0578 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55827dda0530 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55827dda0518 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55827dda04d8 <col:56> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55827dda0560 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55827dda0548 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55827dda04f8 <col:74> '_Bool' lvalue Var 0x55827dd9c428 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55827dda0630 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827dda05e8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827dda05b8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55827dda0660 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827dda0648 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827dda0610 <col:102> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55827dda08c8 <line:778:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55827dda06e0 <col:3> '_Bool' lvalue Var 0x55827dd9c1d0 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55827dda08b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827dda0880 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55827dda07a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55827dda0758 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55827dda0740 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55827dda0700 <col:20> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55827dda0788 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55827dda0770 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55827dda0720 <col:38> '_Bool' lvalue Var 0x55827dd9c1d0 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55827dda0838 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827dda07f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827dda07c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55827dda0868 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827dda0850 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827dda0818 <col:66> '_Bool' lvalue Var 0x55827dd9c1d0 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55827dda0bb0 <line:779:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55827dda08e8 <col:3> '_Bool' lvalue Var 0x55827dd9c428 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55827dda0b98 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827dda0b68 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55827dda0a88 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55827dda09a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55827dda0960 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55827dda0948 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55827dda0908 <col:20> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55827dda0990 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55827dda0978 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55827dda0928 <col:38> '_Bool' lvalue Var 0x55827dd9c1d0 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55827dda0a68 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55827dda0a20 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55827dda0a08 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55827dda09c8 <col:56> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55827dda0a50 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55827dda0a38 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55827dda09e8 <col:74> '_Bool' lvalue Var 0x55827dd9c428 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55827dda0b20 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827dda0ad8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827dda0aa8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55827dda0b50 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827dda0b38 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827dda0b00 <col:102> '_Bool' lvalue Var 0x55827dd9c428 'b$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55827dda0c08 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827dda0bf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dda0bd0 <col:3> 'void ()' Function 0x55827dd42410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55827dda0c60 <line:781:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827dda0c48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dda0c28 <col:3> 'void ()' Function 0x55827dd42350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827dda0d18 <line:782:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55827dda0c80 <col:3> 'int' lvalue Var 0x55827dd9b6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55827dda0cf8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55827dda0ce0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55827dda0ca0 <col:22> 'int' lvalue Var 0x55827dd9b6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55827dda0cc0 <col:41> 'int' 1
|   |-CallExpr 0x55827dda0d70 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827dda0d58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dda0d38 <col:3> 'void ()' Function 0x55827dd42410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55827dda0de8 <line:784:3, col:36>
|     `-CallExpr 0x55827dda0dc8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55827dda0db0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55827dda0d90 <col:10> 'void *(void)' Function 0x55827dd41e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55827dda0fc0 prev 0x55827dd9b368 <line:786:1, line:824:1> line:786:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x55827dda0ea8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55827dda4dc0 <line:787:1, line:824:1>
|   |-CallExpr 0x55827dda10a0 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827dda1088 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dda1068 <col:3> 'void ()' Function 0x55827dd42350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827dda1100 <line:789:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55827dda10c0 <col:3> 'int' lvalue Var 0x55827dd9cbb8 'z' 'int'
|   | `-IntegerLiteral 0x55827dda10e0 <col:7> 'int' 1
|   |-CallExpr 0x55827dda1158 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827dda1140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dda1120 <col:3> 'void ()' Function 0x55827dd42410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55827dda11b0 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827dda1198 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dda1178 <col:3> 'void ()' Function 0x55827dd42350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827dda1210 <line:792:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55827dda11d0 <col:3> 'int' lvalue Var 0x55827dd9bda8 'a' 'int'
|   | `-IntegerLiteral 0x55827dda11f0 <col:7> 'int' 1
|   |-CallExpr 0x55827dda1268 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827dda1250 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dda1230 <col:3> 'void ()' Function 0x55827dd42410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55827dda12c0 <line:794:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827dda12a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dda1288 <col:3> 'void ()' Function 0x55827dd42350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827dda1338 <line:795:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55827dda12e0 <col:3> 'int' lvalue Var 0x55827dd9bb68 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x55827dda1320 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55827dda1300 <col:25> 'int' lvalue Var 0x55827dd9bda8 'a' 'int'
|   |-CallExpr 0x55827dda1390 <line:796:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827dda1378 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dda1358 <col:3> 'void ()' Function 0x55827dd42410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55827dda13e8 <line:797:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827dda13d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dda13b0 <col:3> 'void ()' Function 0x55827dd42350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827dda1498 <line:798:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55827dda1408 <col:3> '_Bool' lvalue Var 0x55827dd9cc50 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55827dda1480 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55827dda1460 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55827dda1448 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55827dda1428 <col:19> 'void *(void)' Function 0x55827dd41e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55827dda1548 <line:799:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55827dda14b8 <col:3> '_Bool' lvalue Var 0x55827dd9ccc8 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55827dda1530 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55827dda1510 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55827dda14f8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55827dda14d8 <col:19> 'void *(void)' Function 0x55827dd41e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55827dda15c0 <line:800:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55827dda1568 <col:3> '_Bool' lvalue Var 0x55827dd9bf70 'b$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55827dda15a8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55827dda1588 <col:21> '_Bool' lvalue Var 0x55827dd9ccc8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55827dda1638 <line:801:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55827dda15e0 <col:3> 'int' lvalue Var 0x55827dd9bff0 'b$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55827dda1620 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55827dda1600 <col:15> 'int' lvalue Var 0x55827dd9bec8 'b' 'int'
|   |-BinaryOperator 0x55827dda1a70 <line:802:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55827dda1658 <col:3> 'int' lvalue Var 0x55827dd9bec8 'b' 'int'
|   | `-ConditionalOperator 0x55827dda1a40 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55827dda1868 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55827dda1788 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55827dda16b0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55827dda1698 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55827dda1678 <col:8> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55827dda1768 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55827dda1700 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55827dda16e8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55827dda16c8 <col:27> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x55827dda1750 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55827dda1738 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55827dda1718 <col:46> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55827dda1848 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55827dda17e0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55827dda17c8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55827dda17a8 <col:65> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x55827dda1830 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55827dda1818 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55827dda17f8 <col:84> '_Bool' lvalue Var 0x55827dd9c4a0 'b$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55827dda1a28 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55827dda1888 <col:101> 'int' lvalue Var 0x55827dd9bec8 'b' 'int'
|   |   `-ParenExpr 0x55827dda1a08 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55827dda19d8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55827dda1948 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55827dda1900 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55827dda18e8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55827dda18a8 <col:106> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55827dda1930 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55827dda1918 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55827dda18c8 <col:124> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55827dda19a8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55827dda1968 <col:141> 'int' lvalue Var 0x55827dd9c618 'b$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55827dda19c0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827dda1988 <col:153> 'int' lvalue Var 0x55827dd9c710 'b$w_buff1' 'int'
|   |-BinaryOperator 0x55827dda1f80 <line:803:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55827dda1a90 <col:3> 'int' lvalue Var 0x55827dd9c618 'b$w_buff0' 'int'
|   | `-ConditionalOperator 0x55827dda1f50 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55827dda1f20 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55827dda1f08 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55827dda1ab0 <col:15> '_Bool' lvalue Var 0x55827dd9ccc8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55827dda1f38 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55827dda1ad0 <col:31> 'int' lvalue Var 0x55827dd9c618 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55827dda1ee8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55827dda1eb8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55827dda1ce0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55827dda1c00 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55827dda1b28 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55827dda1b10 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55827dda1af0 <col:45> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55827dda1be0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55827dda1b78 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55827dda1b60 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55827dda1b40 <col:64> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x55827dda1bc8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55827dda1bb0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55827dda1b90 <col:83> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55827dda1cc0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55827dda1c58 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55827dda1c40 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55827dda1c20 <col:102> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x55827dda1ca8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55827dda1c90 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55827dda1c70 <col:121> '_Bool' lvalue Var 0x55827dd9c4a0 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55827dda1ea0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55827dda1d00 <col:138> 'int' lvalue Var 0x55827dd9c618 'b$w_buff0' 'int'
|   |       `-ParenExpr 0x55827dda1e80 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55827dda1e50 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55827dda1dc0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55827dda1d78 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55827dda1d60 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55827dda1d20 <col:151> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55827dda1da8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55827dda1d90 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55827dda1d40 <col:169> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x55827dda1e20 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55827dda1de0 <col:186> 'int' lvalue Var 0x55827dd9c618 'b$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55827dda1e38 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55827dda1e00 <col:198> 'int' lvalue Var 0x55827dd9c618 'b$w_buff0' 'int'
|   |-BinaryOperator 0x55827dda24a0 <line:804:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55827dda1fa0 <col:3> 'int' lvalue Var 0x55827dd9c710 'b$w_buff1' 'int'
|   | `-ConditionalOperator 0x55827dda2470 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55827dda2440 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55827dda2428 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55827dda1fd0 <col:15> '_Bool' lvalue Var 0x55827dd9ccc8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55827dda2458 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55827dda1ff0 <col:31> 'int' lvalue Var 0x55827dd9c710 'b$w_buff1' 'int'
|   |   `-ParenExpr 0x55827dda2408 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55827dda23d8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55827dda2200 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55827dda2120 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55827dda2048 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55827dda2030 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55827dda2010 <col:45> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55827dda2100 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55827dda2098 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55827dda2080 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55827dda2060 <col:64> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x55827dda20e8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55827dda20d0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55827dda20b0 <col:83> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55827dda21e0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55827dda2178 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55827dda2160 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55827dda2140 <col:102> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x55827dda21c8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55827dda21b0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55827dda2190 <col:121> '_Bool' lvalue Var 0x55827dd9c4a0 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55827dda23c0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55827dda2220 <col:138> 'int' lvalue Var 0x55827dd9c710 'b$w_buff1' 'int'
|   |       `-ParenExpr 0x55827dda23a0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55827dda2370 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55827dda22e0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55827dda2298 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55827dda2280 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55827dda2240 <col:151> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55827dda22c8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55827dda22b0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55827dda2260 <col:169> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x55827dda2340 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55827dda2300 <col:186> 'int' lvalue Var 0x55827dd9c710 'b$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55827dda2358 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55827dda2320 <col:198> 'int' lvalue Var 0x55827dd9c710 'b$w_buff1' 'int'
|   |-BinaryOperator 0x55827dda2a48 <line:805:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55827dda24c0 <col:3> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55827dda2a30 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827dda2a00 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55827dda29b8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55827dda29a0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55827dda24e0 <col:20> '_Bool' lvalue Var 0x55827dd9ccc8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55827dda29e8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55827dda29d0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55827dda2500 <col:36> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55827dda2980 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55827dda2950 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55827dda2710 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55827dda2630 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55827dda2558 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55827dda2540 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55827dda2520 <col:55> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55827dda2610 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55827dda25a8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55827dda2590 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55827dda2570 <col:74> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55827dda25f8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55827dda25e0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55827dda25c0 <col:93> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55827dda26f0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55827dda2688 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55827dda2670 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55827dda2650 <col:112> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55827dda26d8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55827dda26c0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55827dda26a0 <col:131> '_Bool' lvalue Var 0x55827dd9c4a0 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55827dda2938 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55827dda2920 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55827dda2730 <col:148> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55827dda2900 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55827dda28d0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55827dda27f0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55827dda27a8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55827dda2790 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55827dda2750 <col:166> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55827dda27d8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55827dda27c0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55827dda2770 <col:184> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55827dda2888 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55827dda2840 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55827dda2810 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55827dda28b8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55827dda28a0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55827dda2868 <col:212> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55827dda3028 <line:806:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55827dda2a68 <col:3> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55827dda3010 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827dda2fe0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55827dda2f80 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55827dda2f68 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55827dda2a88 <col:20> '_Bool' lvalue Var 0x55827dd9ccc8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55827dda2fb0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55827dda2f98 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55827dda2aa8 <col:36> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55827dda2f48 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55827dda2f18 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55827dda2cb8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55827dda2bd8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55827dda2b00 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55827dda2ae8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55827dda2ac8 <col:55> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55827dda2bb8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55827dda2b50 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55827dda2b38 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55827dda2b18 <col:74> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55827dda2ba0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55827dda2b88 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55827dda2b68 <col:93> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55827dda2c98 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55827dda2c30 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55827dda2c18 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55827dda2bf8 <col:112> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55827dda2c80 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55827dda2c68 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55827dda2c48 <col:131> '_Bool' lvalue Var 0x55827dd9c4a0 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55827dda2f00 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55827dda2ee8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55827dda2cd8 <col:148> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55827dda2ec8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55827dda2e98 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55827dda2d98 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55827dda2d50 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55827dda2d38 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55827dda2cf8 <col:166> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55827dda2d80 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55827dda2d68 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55827dda2d18 <col:184> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55827dda2e68 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55827dda2de8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55827dda2db8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55827dda2e80 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55827dda2e40 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55827dda2e10 <col:219> 'int' 0
|   |-BinaryOperator 0x55827dda35d0 <line:807:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55827dda3048 <col:3> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55827dda35b8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827dda3588 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55827dda3540 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55827dda3528 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55827dda3068 <col:20> '_Bool' lvalue Var 0x55827dd9ccc8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55827dda3570 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55827dda3558 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55827dda3088 <col:36> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x55827dda3508 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55827dda34d8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55827dda3298 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55827dda31b8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55827dda30e0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55827dda30c8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55827dda30a8 <col:55> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55827dda3198 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55827dda3130 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55827dda3118 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55827dda30f8 <col:74> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55827dda3180 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55827dda3168 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55827dda3148 <col:93> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55827dda3278 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55827dda3210 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55827dda31f8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55827dda31d8 <col:112> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55827dda3260 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55827dda3248 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55827dda3228 <col:131> '_Bool' lvalue Var 0x55827dd9c4a0 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55827dda34c0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55827dda34a8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55827dda32b8 <col:148> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x55827dda3488 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55827dda3458 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55827dda3378 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55827dda3330 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55827dda3318 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55827dda32d8 <col:166> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55827dda3360 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55827dda3348 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55827dda32f8 <col:184> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55827dda3410 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55827dda33c8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55827dda3398 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55827dda3440 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55827dda3428 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55827dda33f0 <col:212> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55827dda3b98 <line:808:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55827dda35f0 <col:3> '_Bool' lvalue Var 0x55827dd9c4a0 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55827dda3b80 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827dda3b50 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55827dda3b08 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55827dda3af0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55827dda3610 <col:20> '_Bool' lvalue Var 0x55827dd9ccc8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55827dda3b38 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55827dda3b20 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55827dda3630 <col:36> '_Bool' lvalue Var 0x55827dd9c4a0 'b$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x55827dda3ad0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55827dda3aa0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55827dda3840 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55827dda3760 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55827dda3688 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55827dda3670 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55827dda3650 <col:55> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55827dda3740 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55827dda36d8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55827dda36c0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55827dda36a0 <col:74> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55827dda3728 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55827dda3710 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55827dda36f0 <col:93> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55827dda3820 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55827dda37b8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55827dda37a0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55827dda3780 <col:112> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55827dda3808 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55827dda37f0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55827dda37d0 <col:131> '_Bool' lvalue Var 0x55827dd9c4a0 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55827dda3a88 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55827dda3a70 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55827dda3860 <col:148> '_Bool' lvalue Var 0x55827dd9c4a0 'b$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x55827dda3a50 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55827dda3a20 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55827dda3920 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55827dda38d8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55827dda38c0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55827dda3880 <col:166> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55827dda3908 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55827dda38f0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55827dda38a0 <col:184> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55827dda39f0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55827dda3970 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55827dda3940 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55827dda3a08 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55827dda39c8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55827dda3998 <col:219> 'int' 0
|   |-BinaryOperator 0x55827dda3c10 <line:809:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55827dda3bb8 <col:3> 'int' lvalue Var 0x55827dd9bc88 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x55827dda3bf8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55827dda3bd8 <col:25> 'int' lvalue Var 0x55827dd9bec8 'b' 'int'
|   |-BinaryOperator 0x55827dda3d40 <line:810:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55827dda3c30 <col:3> 'int' lvalue Var 0x55827dd9bec8 'b' 'int'
|   | `-ConditionalOperator 0x55827dda3d10 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55827dda3cc8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55827dda3cb0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55827dda3c50 <col:7> '_Bool' lvalue Var 0x55827dd9bf70 'b$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55827dda3ce0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55827dda3c70 <col:25> 'int' lvalue Var 0x55827dd9bff0 'b$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55827dda3cf8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55827dda3c90 <col:37> 'int' lvalue Var 0x55827dd9bec8 'b' 'int'
|   |-BinaryOperator 0x55827dda3dd8 <line:811:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55827dda3d60 <col:3> '_Bool' lvalue Var 0x55827dd9bf70 'b$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55827dda3db0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55827dda3d80 <col:28> 'int' 0
|   |-CallExpr 0x55827dda3e30 <line:812:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827dda3e18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dda3df8 <col:3> 'void ()' Function 0x55827dd42410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55827dda3e88 <line:813:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827dda3e70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dda3e50 <col:3> 'void ()' Function 0x55827dd42350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827dda4198 <line:814:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55827dda3ea8 <col:3> 'int' lvalue Var 0x55827dd9bec8 'b' 'int'
|   | `-ConditionalOperator 0x55827dda4168 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55827dda3f68 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55827dda3f20 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55827dda3f08 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55827dda3ec8 <col:7> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55827dda3f50 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55827dda3f38 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55827dda3ee8 <col:25> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55827dda4150 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55827dda3f88 <col:42> 'int' lvalue Var 0x55827dd9c618 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55827dda4130 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55827dda4100 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55827dda4070 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55827dda4028 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55827dda4010 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55827dda3fa8 <col:55> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55827dda4058 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55827dda4040 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55827dda3ff0 <col:73> '_Bool' lvalue Var 0x55827dd9c4a0 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55827dda40d0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55827dda4090 <col:90> 'int' lvalue Var 0x55827dd9c710 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55827dda40e8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827dda40b0 <col:102> 'int' lvalue Var 0x55827dd9bec8 'b' 'int'
|   |-BinaryOperator 0x55827dda43a0 <line:815:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55827dda41b8 <col:3> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55827dda4388 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827dda4358 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55827dda4278 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55827dda4230 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55827dda4218 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55827dda41d8 <col:20> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55827dda4260 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55827dda4248 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55827dda41f8 <col:38> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55827dda4310 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827dda42c8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827dda4298 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55827dda4340 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827dda4328 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827dda42f0 <col:66> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55827dda4688 <line:816:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55827dda43c0 <col:3> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55827dda4670 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827dda4640 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55827dda4560 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55827dda4480 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55827dda4438 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55827dda4420 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55827dda43e0 <col:20> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55827dda4468 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55827dda4450 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55827dda4400 <col:38> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55827dda4540 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55827dda44f8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55827dda44e0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55827dda44a0 <col:56> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55827dda4528 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55827dda4510 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55827dda44c0 <col:74> '_Bool' lvalue Var 0x55827dd9c4a0 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55827dda45f8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827dda45b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827dda4580 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55827dda4628 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827dda4610 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827dda45d8 <col:102> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55827dda4890 <line:817:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55827dda46a8 <col:3> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55827dda4878 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827dda4848 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55827dda4768 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55827dda4720 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55827dda4708 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55827dda46c8 <col:20> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55827dda4750 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55827dda4738 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55827dda46e8 <col:38> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55827dda4800 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827dda47b8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827dda4788 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55827dda4830 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827dda4818 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827dda47e0 <col:66> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55827dda4b78 <line:818:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55827dda48b0 <col:3> '_Bool' lvalue Var 0x55827dd9c4a0 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55827dda4b60 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827dda4b30 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55827dda4a50 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55827dda4970 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55827dda4928 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55827dda4910 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55827dda48d0 <col:20> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55827dda4958 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55827dda4940 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55827dda48f0 <col:38> '_Bool' lvalue Var 0x55827dd9c248 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55827dda4a30 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55827dda49e8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55827dda49d0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55827dda4990 <col:56> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55827dda4a18 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55827dda4a00 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55827dda49b0 <col:74> '_Bool' lvalue Var 0x55827dd9c4a0 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55827dda4ae8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827dda4aa0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827dda4a70 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55827dda4b18 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827dda4b00 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827dda4ac8 <col:102> '_Bool' lvalue Var 0x55827dd9c4a0 'b$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x55827dda4bd0 <line:819:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827dda4bb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dda4b98 <col:3> 'void ()' Function 0x55827dd42410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55827dda4c28 <line:820:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827dda4c10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dda4bf0 <col:3> 'void ()' Function 0x55827dd42350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827dda4ce0 <line:821:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55827dda4c48 <col:3> 'int' lvalue Var 0x55827dd9b6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55827dda4cc0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55827dda4ca8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55827dda4c68 <col:22> 'int' lvalue Var 0x55827dd9b6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55827dda4c88 <col:41> 'int' 1
|   |-CallExpr 0x55827dda4d38 <line:822:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827dda4d20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827dda4d00 <col:3> 'void ()' Function 0x55827dd42410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55827dda4db0 <line:823:3, col:36>
|     `-CallExpr 0x55827dda4d90 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55827dda4d78 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55827dda4d58 <col:10> 'void *(void)' Function 0x55827dd41e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55827dda4f10 prev 0x55827dd9b430 <line:825:1, line:827:1> line:825:6 fence 'void ()'
| `-CompoundStmt 0x55827dda4fb0 <line:826:1, line:827:1>
|-FunctionDecl 0x55827dda5000 prev 0x55827dd9b4f0 <line:828:1, line:830:1> line:828:6 isync 'void ()'
| `-CompoundStmt 0x55827dda50a0 <line:829:1, line:830:1>
|-FunctionDecl 0x55827dda50d0 prev 0x55827dd9b5b0 <line:831:1, line:833:1> line:831:6 lwfence 'void ()'
| `-CompoundStmt 0x55827dda5170 <line:832:1, line:833:1>
`-FunctionDecl 0x55827dda51d8 <line:834:1, line:860:1> line:834:5 main 'int ()'
  `-CompoundStmt 0x55827dda71e8 <line:835:1, line:860:1>
    |-DeclStmt 0x55827dda52f0 <line:836:3, col:17>
    | `-VarDecl 0x55827dda5288 <col:3, col:13> col:13 used t947 'pthread_t':'unsigned long'
    |-CallExpr 0x55827dda54f8 <line:837:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55827dda54e0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55827dda5308 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55827dd828f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55827dda5348 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55827dda5328 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55827dda5288 't947' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55827dda5538 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55827dda53c0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55827dda5398 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55827dda5360 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55827dda5550 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55827dda53e0 <col:38> 'void *(void *)' Function 0x55827dd9cde0 'P0' 'void *(void *)'
    | `-ParenExpr 0x55827dda5460 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55827dda5438 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55827dda5400 <col:51> 'int' 0
    |-DeclStmt 0x55827dda55e0 <line:838:3, col:17>
    | `-VarDecl 0x55827dda5578 <col:3, col:13> col:13 used t948 'pthread_t':'unsigned long'
    |-CallExpr 0x55827dda5788 <line:839:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55827dda5770 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55827dda55f8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55827dd828f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55827dda5638 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55827dda5618 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55827dda5578 't948' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55827dda57c8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55827dda56b0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55827dda5688 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55827dda5650 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55827dda57e0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55827dda56d0 <col:38> 'void *(void *)' Function 0x55827dd9e830 'P1' 'void *(void *)'
    | `-ParenExpr 0x55827dda5750 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55827dda5728 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55827dda56f0 <col:51> 'int' 0
    |-DeclStmt 0x55827dda5870 <line:840:3, col:17>
    | `-VarDecl 0x55827dda5808 <col:3, col:13> col:13 used t949 'pthread_t':'unsigned long'
    |-CallExpr 0x55827dda5a18 <line:841:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55827dda5a00 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55827dda5888 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55827dd828f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55827dda58c8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55827dda58a8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55827dda5808 't949' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55827dda5a58 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55827dda5940 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55827dda5918 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55827dda58e0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55827dda5a70 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55827dda5960 <col:38> 'void *(void *)' Function 0x55827dd9fbb8 'P2' 'void *(void *)'
    | `-ParenExpr 0x55827dda59e0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55827dda59b8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55827dda5980 <col:51> 'int' 0
    |-DeclStmt 0x55827dda5b00 <line:842:3, col:17>
    | `-VarDecl 0x55827dda5a98 <col:3, col:13> col:13 used t950 'pthread_t':'unsigned long'
    |-CallExpr 0x55827dda5ca8 <line:843:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55827dda5c90 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55827dda5b18 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55827dd828f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55827dda5b58 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55827dda5b38 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55827dda5a98 't950' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55827dda5ce8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55827dda5bd0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55827dda5ba8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55827dda5b70 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55827dda5d00 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55827dda5bf0 <col:38> 'void *(void *)' Function 0x55827dda0fc0 'P3' 'void *(void *)'
    | `-ParenExpr 0x55827dda5c70 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55827dda5c48 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55827dda5c10 <col:51> 'int' 0
    |-CallExpr 0x55827dda5d50 <line:844:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55827dda5d38 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55827dda5d18 <col:3> 'void ()' Function 0x55827dd42350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55827dda5e20 <line:845:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55827dda5d70 <col:3> '_Bool' lvalue Var 0x55827dd9c800 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55827dda5e08 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55827dda5de8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55827dda5dd0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55827dda5d90 <col:21> 'int' lvalue Var 0x55827dd9b6e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55827dda5db0 <col:41> 'int' 4
    |-CallExpr 0x55827dda5e78 <line:846:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55827dda5e60 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55827dda5e40 <col:3> 'void ()' Function 0x55827dd42410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55827dda5ef0 <line:847:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55827dda5ed8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55827dda5e98 <col:3> 'void (int)' Function 0x55827dd41ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55827dda5f30 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55827dda5f18 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55827dda5eb8 <col:21> '_Bool' lvalue Var 0x55827dd9c800 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55827dda5f80 <line:848:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55827dda5f68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55827dda5f48 <col:3> 'void ()' Function 0x55827dd42350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55827dda6278 <line:849:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55827dda5fa0 <col:3> 'int' lvalue Var 0x55827dd9bec8 'b' 'int'
    | `-ConditionalOperator 0x55827dda6248 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55827dda6070 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55827dda6028 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55827dda6010 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55827dda5fc0 <col:7> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55827dda6058 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55827dda6040 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55827dda5fe0 <col:25> '_Bool' lvalue Var 0x55827dd9c068 'b$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55827dda6230 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55827dda6090 <col:42> 'int' lvalue Var 0x55827dd9c618 'b$w_buff0' 'int'
    |   `-ParenExpr 0x55827dda6210 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55827dda61e0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55827dda6150 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55827dda6108 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55827dda60f0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55827dda60b0 <col:55> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55827dda6138 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55827dda6120 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55827dda60d0 <col:73> '_Bool' lvalue Var 0x55827dd9c2c0 'b$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55827dda61b0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55827dda6170 <col:90> 'int' lvalue Var 0x55827dd9c710 'b$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55827dda61c8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55827dda6190 <col:102> 'int' lvalue Var 0x55827dd9bec8 'b' 'int'
    |-BinaryOperator 0x55827dda6480 <line:850:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55827dda6298 <col:3> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55827dda6468 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55827dda6438 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55827dda6358 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55827dda6310 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55827dda62f8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55827dda62b8 <col:20> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55827dda6340 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55827dda6328 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55827dda62d8 <col:38> '_Bool' lvalue Var 0x55827dd9c068 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55827dda63f0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55827dda63a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55827dda6378 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55827dda6420 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55827dda6408 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55827dda63d0 <col:66> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55827dda6768 <line:851:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55827dda64a0 <col:3> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55827dda6750 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55827dda6720 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55827dda6640 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55827dda6560 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55827dda6518 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55827dda6500 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55827dda64c0 <col:20> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55827dda6548 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55827dda6530 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55827dda64e0 <col:38> '_Bool' lvalue Var 0x55827dd9c068 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55827dda6620 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55827dda65d8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55827dda65c0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55827dda6580 <col:56> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55827dda6608 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55827dda65f0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55827dda65a0 <col:74> '_Bool' lvalue Var 0x55827dd9c2c0 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55827dda66d8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55827dda6690 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55827dda6660 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55827dda6708 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55827dda66f0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55827dda66b8 <col:102> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55827dda6970 <line:852:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55827dda6788 <col:3> '_Bool' lvalue Var 0x55827dd9c068 'b$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55827dda6958 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55827dda6928 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55827dda6848 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55827dda6800 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55827dda67e8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55827dda67a8 <col:20> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55827dda6830 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55827dda6818 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55827dda67c8 <col:38> '_Bool' lvalue Var 0x55827dd9c068 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55827dda68e0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55827dda6898 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55827dda6868 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55827dda6910 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55827dda68f8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55827dda68c0 <col:66> '_Bool' lvalue Var 0x55827dd9c068 'b$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55827dda6c58 <line:853:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55827dda6990 <col:3> '_Bool' lvalue Var 0x55827dd9c2c0 'b$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55827dda6c40 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55827dda6c10 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55827dda6b30 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55827dda6a50 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55827dda6a08 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55827dda69f0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55827dda69b0 <col:20> '_Bool' lvalue Var 0x55827dd9c690 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55827dda6a38 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55827dda6a20 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55827dda69d0 <col:38> '_Bool' lvalue Var 0x55827dd9c068 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55827dda6b10 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55827dda6ac8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55827dda6ab0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55827dda6a70 <col:56> '_Bool' lvalue Var 0x55827dd9c788 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55827dda6af8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55827dda6ae0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55827dda6a90 <col:74> '_Bool' lvalue Var 0x55827dd9c2c0 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55827dda6bc8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55827dda6b80 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55827dda6b50 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55827dda6bf8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55827dda6be0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55827dda6ba8 <col:102> '_Bool' lvalue Var 0x55827dd9c2c0 'b$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55827dda6cb0 <line:854:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55827dda6c98 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55827dda6c78 <col:3> 'void ()' Function 0x55827dd42410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55827dda6d08 <line:855:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55827dda6cf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55827dda6cd0 <col:3> 'void ()' Function 0x55827dd42350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55827dda7090 <line:856:3, col:159> '_Bool' '='
    | |-DeclRefExpr 0x55827dda6d28 <col:3> '_Bool' lvalue Var 0x55827dd9c878 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55827dda7078 <col:21, col:159> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55827dda7060 <col:21, col:159> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55827dda7040 <col:22, col:159> 'int'
    |       `-BinaryOperator 0x55827dda7020 <col:23, col:158> 'int' '&&'
    |         |-BinaryOperator 0x55827dda6f68 <col:23, col:130> 'int' '&&'
    |         | |-BinaryOperator 0x55827dda6ed0 <col:23, col:102> 'int' '&&'
    |         | | |-BinaryOperator 0x55827dda6e38 <col:23, col:74> 'int' '&&'
    |         | | | |-BinaryOperator 0x55827dda6da0 <col:23, col:46> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x55827dda6d88 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x55827dda6d48 <col:23> 'int' lvalue Var 0x55827dd9b808 '__unbuffered_p0_EAX' 'int'
    |         | | | | `-IntegerLiteral 0x55827dda6d68 <col:46> 'int' 0
    |         | | | `-BinaryOperator 0x55827dda6e18 <col:51, col:74> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x55827dda6e00 <col:51> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x55827dda6dc0 <col:51> 'int' lvalue Var 0x55827dd9b928 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x55827dda6de0 <col:74> 'int' 0
    |         | | `-BinaryOperator 0x55827dda6eb0 <col:79, col:102> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55827dda6e98 <col:79> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55827dda6e58 <col:79> 'int' lvalue Var 0x55827dd9ba48 '__unbuffered_p2_EAX' 'int'
    |         | |   `-IntegerLiteral 0x55827dda6e78 <col:102> 'int' 0
    |         | `-BinaryOperator 0x55827dda6f48 <col:107, col:130> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55827dda6f30 <col:107> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55827dda6ef0 <col:107> 'int' lvalue Var 0x55827dd9bb68 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x55827dda6f10 <col:130> 'int' 1
    |         `-BinaryOperator 0x55827dda6fe0 <col:135, col:158> 'int' '=='
    |           |-ImplicitCastExpr 0x55827dda6fc8 <col:135> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55827dda6f88 <col:135> 'int' lvalue Var 0x55827dd9bc88 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x55827dda6fa8 <col:158> 'int' 0
    |-CallExpr 0x55827dda70e8 <line:857:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55827dda70d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55827dda70b0 <col:3> 'void ()' Function 0x55827dd42410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55827dda7160 <line:858:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55827dda7148 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55827dda7108 <col:3> 'void (int)' Function 0x55827dd420d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55827dda71a0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55827dda7188 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55827dda7128 <col:21> '_Bool' lvalue Var 0x55827dd9c878 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55827dda71d8 <line:859:3, col:10>
      `-IntegerLiteral 0x55827dda71b8 <col:10> 'int' 0
