TranslationUnitDecl 0x561258c9af88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x561258c9b848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x561258c9b520 '__int128'
|-TypedefDecl 0x561258c9b8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x561258c9b540 'unsigned __int128'
|-TypedefDecl 0x561258c9bbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x561258c9b990 'struct __NSConstantString_tag'
|   `-Record 0x561258c9b910 '__NSConstantString_tag'
|-TypedefDecl 0x561258c9bc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x561258c9bc20 'char *'
|   `-BuiltinType 0x561258c9b020 'char'
|-TypedefDecl 0x561258cdab60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x561258c9bf00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x561258c9bd40 'struct __va_list_tag'
|     `-Record 0x561258c9bcc0 '__va_list_tag'
|-FunctionDecl 0x561258cdaca0 <pthread-wmm/mix050_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x561258cdabd0 <col:31> col:34 'int'
|-FunctionDecl 0x561258cdae68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x561258cdaf90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x561258cdb0d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x561258cdb048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x561258cdb308 <col:40, col:99>
|   |-IfStmt 0x561258cdb2d8 <col:42, col:88>
|   | |-UnaryOperator 0x561258cdb1b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x561258cdb1a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x561258cdb180 <col:47> 'int' lvalue ParmVar 0x561258cdb048 'expression' 'int'
|   | `-CompoundStmt 0x561258cdb2c0 <col:59, col:88>
|   |   `-LabelStmt 0x561258cdb2a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x561258cdb238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x561258cdb220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x561258cdb1d0 <col:68> 'void () __attribute__((noreturn))' Function 0x561258cdaf90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x561258cdb2f0 <col:89>
|   `-ReturnStmt 0x561258cdb2f8 <col:91>
|-FunctionDecl 0x561258cdb350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x561258cdb410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x561258cdb790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561258cdb4c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x561258cdb548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x561258cdb5c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x561258cdb648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x561258cdb850 <line:10:22>
|-FunctionDecl 0x561258d018a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561258cdb8c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x561258cdb940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x561258cdb9c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x561258cdba40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x561258d01960 <line:13:22>
|-FunctionDecl 0x561258d01c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561258d019d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x561258d01a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x561258d01ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x561258d01cc8 <line:15:22>
|-TypedefDecl 0x561258d01d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x561258c9b0e0 'unsigned char'
|-TypedefDecl 0x561258d01da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x561258c9b100 'unsigned short'
|-TypedefDecl 0x561258d01e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x561258c9b120 'unsigned int'
|-TypedefDecl 0x561258d01e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x561258c9b140 'unsigned long'
|-TypedefDecl 0x561258d01ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x561258c9b040 'signed char'
|-TypedefDecl 0x561258d01f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x561258c9b0e0 'unsigned char'
|-TypedefDecl 0x561258d01fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x561258c9b060 'short'
|-TypedefDecl 0x561258d02048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x561258c9b100 'unsigned short'
|-TypedefDecl 0x561258d020b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x561258c9b080 'int'
|-TypedefDecl 0x561258d02128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x561258c9b120 'unsigned int'
|-TypedefDecl 0x561258d02198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x561258c9b0a0 'long'
|-TypedefDecl 0x561258d02208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x561258c9b140 'unsigned long'
|-TypedefDecl 0x561258d02278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x561258c9b0a0 'long'
|-TypedefDecl 0x561258d022e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x561258c9b140 'unsigned long'
|-TypedefDecl 0x561258d02358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x561258c9b140 'unsigned long'
|-TypedefDecl 0x561258d023c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x561258c9b120 'unsigned int'
|-TypedefDecl 0x561258d02438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x561258c9b120 'unsigned int'
|-TypedefDecl 0x561258d024a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x561258c9b140 'unsigned long'
|-TypedefDecl 0x561258d02518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x561258c9b140 'unsigned long'
|-TypedefDecl 0x561258d02588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x561258c9b120 'unsigned int'
|-TypedefDecl 0x561258d025f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x561258c9b140 'unsigned long'
|-TypedefDecl 0x561258d02668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x561258c9b0a0 'long'
|-TypedefDecl 0x561258d026d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x561258c9b0a0 'long'
|-TypedefDecl 0x561258d02748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x561258c9b080 'int'
|-RecordDecl 0x561258d027a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x561258d02918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x561258d029d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x561258d02970 'struct __fsid_t' sugar
|   `-RecordType 0x561258d02820 '__fsid_t'
|     `-Record 0x561258d027a0 ''
|-TypedefDecl 0x561258d02a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x561258c9b0a0 'long'
|-TypedefDecl 0x561258d02ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x561258c9b140 'unsigned long'
|-TypedefDecl 0x561258d02b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x561258c9b140 'unsigned long'
|-TypedefDecl 0x561258d02ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x561258c9b120 'unsigned int'
|-TypedefDecl 0x561258d02c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x561258c9b0a0 'long'
|-TypedefDecl 0x561258d02c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x561258c9b120 'unsigned int'
|-TypedefDecl 0x561258d02cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x561258c9b0a0 'long'
|-TypedefDecl 0x561258d02d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x561258c9b080 'int'
|-TypedefDecl 0x561258d02dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x561258c9b080 'int'
|-TypedefDecl 0x561258d02e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x561258c9b080 'int'
|-TypedefDecl 0x561258d02eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x561258c9b7a0 'void *'
|   `-BuiltinType 0x561258c9afe0 'void'
|-TypedefDecl 0x561258d02f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x561258c9b0a0 'long'
|-TypedefDecl 0x561258d02f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x561258c9b0a0 'long'
|-TypedefDecl 0x561258d03008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x561258c9b0a0 'long'
|-TypedefDecl 0x561258d03078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x561258c9b140 'unsigned long'
|-TypedefDecl 0x561258d030e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x561258c9b140 'unsigned long'
|-TypedefDecl 0x561258d03158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x561258c9b140 'unsigned long'
|-TypedefDecl 0x561258d031c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x561258c9b140 'unsigned long'
|-TypedefDecl 0x561258d03238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x561258c9b0a0 'long'
|-TypedefDecl 0x561258d032a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x561258c9b0a0 'long'
|-TypedefDecl 0x561258d03318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x561258c9b0a0 'long'
|-TypedefDecl 0x561258d03388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x561258c9b140 'unsigned long'
|-TypedefDecl 0x561258d03418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x561258d033e0 '__off64_t' sugar
|   |-Typedef 0x561258d026d8 '__off64_t'
|   `-BuiltinType 0x561258c9b0a0 'long'
|-TypedefDecl 0x561258d03510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x561258d034d0 '__quad_t *'
|   `-TypedefType 0x561258d03470 '__quad_t' sugar
|     |-Typedef 0x561258d02278 '__quad_t'
|     `-BuiltinType 0x561258c9b0a0 'long'
|-TypedefDecl 0x561258d03580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x561258c9bc20 'char *'
|   `-BuiltinType 0x561258c9b020 'char'
|-TypedefDecl 0x561258d035f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x561258c9b0a0 'long'
|-TypedefDecl 0x561258d03660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x561258c9b120 'unsigned int'
|-FunctionDecl 0x561258d037a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x561258d036d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x561258d03ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x561258d03ad8 <line:72:3, col:34>
|     `-CallExpr 0x561258d03a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x561258d03a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x561258d03a10 <col:10> '<builtin fn type>' Function 0x561258d03880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x561258d03ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x561258d03a30 <col:29> 'unsigned int' lvalue ParmVar 0x561258d036d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x561258d03880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x561258d03920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x561258d03990 <col:10> Implicit
| `-ConstAttr 0x561258d039e8 <col:10> Implicit
|-FunctionDecl 0x561258d03c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x561258d03b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x561258d03f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x561258d03f48 <line:77:3, col:34>
|     `-CallExpr 0x561258d03f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x561258d03ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x561258d03e78 <col:10> '<builtin fn type>' Function 0x561258d03ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x561258d03f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x561258d03e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x561258d03b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x561258d03ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x561258d03d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x561258d03df8 <col:10> Implicit
| `-ConstAttr 0x561258d03e50 <col:10> Implicit
|-TypedefDecl 0x561258d03f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x561258c9b140 'unsigned long'
|-TypedefDecl 0x561258d04018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x561258d03fe0 '__time_t' sugar
|   |-Typedef 0x561258d02c18 '__time_t'
|   `-BuiltinType 0x561258c9b0a0 'long'
|-RecordDecl 0x561258d04070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x561258d04128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x561258d041b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x561258d04248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x561258d04210 '__pid_t' sugar
|   |-Typedef 0x561258d02748 '__pid_t'
|   `-BuiltinType 0x561258c9b080 'int'
|-RecordDecl 0x561258d042a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x561258d04360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x561258d043b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x561258d04470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x561258d044d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x561258c9b140 'unsigned long'
|-RecordDecl 0x561258d04530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x561258d047c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x561258d068b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x561258d04810 'struct cpu_set_t' sugar
|   `-RecordType 0x561258d045b0 'cpu_set_t'
|     `-Record 0x561258d04530 ''
|-FunctionDecl 0x561258d06b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x561258d06958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561258d06a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x561258d06c38 <line:107:19>
|-FunctionDecl 0x561258d06e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x561258d06ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x561258d06eb8 <col:69>
|-FunctionDecl 0x561258d07030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x561258d06f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x561258d070d8 <col:64>
|-FunctionDecl 0x561258d07398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x561258d07140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561258d07278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x561258d07448 <line:113:22>
|-FunctionDecl 0x561258d076c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x561258d074b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561258d075a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x561258d07778 <col:88>
|-FunctionDecl 0x561258d07a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x561258d077e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561258d078c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x561258d07950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x561258d07b50 <col:62>
|-FunctionDecl 0x561258d07cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x561258d07bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x561258d07d70 <col:63>
|-FunctionDecl 0x561258d07e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x561258d07f38 <col:47>
|-FunctionDecl 0x561258d08040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x561258d07fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x561258d080e8 <col:69>
|-FunctionDecl 0x561258d081f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x561258d08158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x561258d08298 <col:69>
|-FunctionDecl 0x561258d08558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561258d08300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561258d08438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x561258d08608 <col:88>
|-TypedefDecl 0x561258d08698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x561258d08660 '__clock_t' sugar
|   |-Typedef 0x561258d02a58 '__clock_t'
|   `-BuiltinType 0x561258c9b0a0 'long'
|-TypedefDecl 0x561258d08728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x561258d086f0 '__clockid_t' sugar
|   |-Typedef 0x561258d02e48 '__clockid_t'
|   `-BuiltinType 0x561258c9b080 'int'
|-TypedefDecl 0x561258d087b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x561258d08780 '__timer_t' sugar
|   |-Typedef 0x561258d02eb8 '__timer_t'
|   `-PointerType 0x561258c9b7a0 'void *'
|     `-BuiltinType 0x561258c9afe0 'void'
|-RecordDecl 0x561258d08810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x561258d088e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x561258d08950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x561258d089b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x561258d08a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x561258d08a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x561258d08af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x561258d08b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x561258d08bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x561258d08c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x561258d08c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x561258d08cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x561258d08d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x561258d08e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x561258d08e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x561258d08f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x561258d09100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x561258d091a0 <col:45>
|-FunctionDecl 0x561258d09380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x561258d09270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x561258d09428 <col:54>
|-FunctionDecl 0x561258d09628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x561258d09490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x561258d09508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x561258d096d8 <line:157:22>
| `-ConstAttr 0x561258d09730 <col:63>
|-FunctionDecl 0x561258d0a560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561258d09828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x561258d0a608 <col:56>
|-FunctionDecl 0x561258d0a9b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x561258d0a678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x561258d0a6f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561258d0a770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x561258d0a868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x561258d0aa70 <col:54>
|-RecordDecl 0x561258d0aac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x561258d0ab78 parent 0x561258c9af88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x561258d0add8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x561258d0ae78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x561258d0aee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x561258d0af48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x561258d0b038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x561258d0b158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x561258d0b100 'struct __locale_struct *'
|   `-ElaboratedType 0x561258d0b090 'struct __locale_struct' sugar
|     `-RecordType 0x561258d0ab50 'struct __locale_struct'
|       `-Record 0x561258d0aac8 '__locale_struct'
|-TypedefDecl 0x561258d0b208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x561258d0b1d0 '__locale_t' sugar
|   |-Typedef 0x561258d0b158 '__locale_t'
|   `-PointerType 0x561258d0b100 'struct __locale_struct *'
|     `-ElaboratedType 0x561258d0b090 'struct __locale_struct' sugar
|       `-RecordType 0x561258d0ab50 'struct __locale_struct'
|         `-Record 0x561258d0aac8 '__locale_struct'
|-FunctionDecl 0x561258d0b610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x561258d0b278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x561258d0b2f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561258d0b370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x561258d0b400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x561258d0b478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x561258d0b6d8 <col:40>
|-FunctionDecl 0x561258d0b8c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x561258d0b7a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x561258d0b970 <col:66>
|-FunctionDecl 0x561258d0ba80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x561258d0b9d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x561258d0bb28 <col:69>
|-FunctionDecl 0x561258d0bd58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x561258d0bb90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561258d0bc20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x561258d0be08 <col:52>
|-FunctionDecl 0x561258d0bfb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x561258d0be70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561258d0bf00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x561258d0c060 <col:55>
|-FunctionDecl 0x561258d0c1f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x561258d0c0e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x561258d0c2a0 <col:62>
|-FunctionDecl 0x561258d0c418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x561258d0c308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x561258d0c4c0 <col:60>
|-FunctionDecl 0x561258d0c718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x561258d0c578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x561258d0c5f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x561258d0c7c8 <col:44>
|-FunctionDecl 0x561258d0c9d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x561258d0c830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561258d0c8b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x561258d0ca88 <col:49>
|-VarDecl 0x561258d0cb88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x561258d0cc08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x561258d0cc88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x561258d0cd50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x561258d0ce80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x561258d0cf20 <col:42>
|-VarDecl 0x561258d0cf90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x561258d0d010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x561258d0d198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x561258d0d088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x561258d0d240 <col:57>
|-FunctionDecl 0x561258d0d350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561258d0d2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x561258d0d3f8 <col:56>
|-FunctionDecl 0x561258d0e540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561258d0d478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x561258d0e5e8 <col:59>
|-FunctionDecl 0x561258d0e6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x561258d0e658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x561258d0e798 <col:48>
| `-ConstAttr 0x561258d0e7f0 <col:89>
|-FunctionDecl 0x561258d0ea58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x561258d0e8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x561258d0e938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x561258d0ecb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561258d0eb48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561258d0ebd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x561258d0ed68 <col:88>
|-FunctionDecl 0x561258d0ef00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561258d0edd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561258d0ee60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x561258d0efb0 <col:88>
|-FunctionDecl 0x561258d0f1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x561258d0f018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561258d0f0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x561258d0f278 <line:208:22>
|-FunctionDecl 0x561258d0f5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x561258d0f2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561258d0f360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x561258d0f3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x561258d0f480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x561258d0f8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x561258d0f6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x561258d0f7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x561258d0f998 <col:85>
|-FunctionDecl 0x561258d0fd88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x561258d0fa00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561258d0fb38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x561258d0fc40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x561258d0fe40 <col:52>
|-FunctionDecl 0x561258d0ffb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x561258d0fea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x561258d10060 <col:61>
|-FunctionDecl 0x561258d10560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x561258d100c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x561258d10148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x561258d10278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x561258d10368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x561258d10620 <col:62>
|-FunctionDecl 0x561258d10838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x561258d10688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x561258d10718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x561258d108e8 <line:221:22>
|-FunctionDecl 0x561258d109e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x561258d10950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x561258d10a90 <col:65>
|-TypedefDecl 0x561258d10b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x561258c9b140 'unsigned long'
|-RecordDecl 0x561258d10b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x561258d10ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x561258d10d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561258d10db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x561258d10d60 'union pthread_attr_t' sugar
|   `-RecordType 0x561258d10be0 'union pthread_attr_t'
|     `-Record 0x561258d10b58 'pthread_attr_t'
|-RecordDecl 0x561258d10e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x561258d10f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x561258d11000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x561258d110b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x561258d11050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x561258d10e90 'struct __pthread_internal_list'
|     `-Record 0x561258d10e10 '__pthread_internal_list'
|-RecordDecl 0x561258d11120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x561258d111c8 parent 0x561258c9af88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x561258d112a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561258d11308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x561258d11370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x561258d113d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x561258d11440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x561258d114a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x561258d15580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x561258d15630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x561258d15720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x561258d15788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561258d15910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x561258d158b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x561258d111a0 'pthread_mutex_t'
|     `-Record 0x561258d11120 ''
|-RecordDecl 0x561258d15980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x561258d15ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561258d15b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561258d15be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x561258d15b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x561258d15a00 'pthread_mutexattr_t'
|     `-Record 0x561258d15980 ''
|-RecordDecl 0x561258d15c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x561258d15cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x561258d15dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561258d15e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x561258d15e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x561258d15ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x561258d15f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x561258d15fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x561258d16030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x561258d16098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x561258d16150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix050_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix050_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x561258d16240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x561258d162a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x561258d163e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x561258d16380 'union pthread_cond_t' sugar
|   `-RecordType 0x561258d15cd0 'pthread_cond_t'
|     `-Record 0x561258d15c50 ''
|-RecordDecl 0x561258d16450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x561258d16590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561258d165f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561258d166b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x561258d16650 'union pthread_condattr_t' sugar
|   `-RecordType 0x561258d164d0 'pthread_condattr_t'
|     `-Record 0x561258d16450 ''
|-TypedefDecl 0x561258d16738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x561258c9b120 'unsigned int'
|-TypedefDecl 0x561258d167a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x561258c9b080 'int'
|-RecordDecl 0x561258d16800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x561258d168a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x561258d16970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561258d169d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x561258d16a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x561258d16aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x561258d16b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x561258d16b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x561258d16be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x561258d16c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x561258d16cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x561258d16d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x561258d16d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x561258d16e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix050_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix050_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x561258d16ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x561258d16f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561258d17090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x561258d17030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x561258d16880 'pthread_rwlock_t'
|     `-Record 0x561258d16800 ''
|-RecordDecl 0x561258d17100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x561258d17240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x561258d172a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561258d17360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x561258d17300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x561258d17180 'pthread_rwlockattr_t'
|     `-Record 0x561258d17100 ''
|-TypedefDecl 0x561258d173e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x561258c9b084 'volatile int' volatile
|   `-BuiltinType 0x561258c9b080 'int'
|-RecordDecl 0x561258d17440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x561258d195b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x561258d19618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561258d196d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x561258d19670 'union pthread_barrier_t' sugar
|   `-RecordType 0x561258d174c0 'pthread_barrier_t'
|     `-Record 0x561258d17440 ''
|-RecordDecl 0x561258d19740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x561258d19840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561258d198a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561258d19960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x561258d19900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x561258d197c0 'pthread_barrierattr_t'
|     `-Record 0x561258d19740 ''
|-TypedefDecl 0x561258d19a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x561258d19a10 'long [8]' 8 
|   `-BuiltinType 0x561258c9b0a0 'long'
|-EnumDecl 0x561258d19ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x561258d19b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x561258d19be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x561258d19c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x561258d19d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x561258d19d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x561258d19da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x561258d19df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x561258d19e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x561258d19e68 <col:26> 'int'
| |   `-DeclRefExpr 0x561258d19e48 <col:26> 'int' EnumConstant 0x561258d19d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x561258d19f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x561258d19ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x561258d19ed0 <col:29> 'int' EnumConstant 0x561258d19d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x561258d19f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x561258d19f78 <col:30> 'int'
| |   `-DeclRefExpr 0x561258d19f58 <col:30> 'int' EnumConstant 0x561258d19da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x561258d1a018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x561258d1a000 <col:27> 'int'
|     `-DeclRefExpr 0x561258d19fe0 <col:27> 'int' EnumConstant 0x561258d19e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x561258d1a068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x561258d1a138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x561258d1a1c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x561258d1a1a8 <col:30> 'int'
| |   `-DeclRefExpr 0x561258d1a188 <col:30> 'int' EnumConstant 0x561258d1a138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x561258d1a210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x561258d1a298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x561258d1a280 <col:29> 'int'
|     `-DeclRefExpr 0x561258d1a260 <col:29> 'int' EnumConstant 0x561258d1a210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x561258d1a2e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x561258d1a3b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x561258d1a408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x561258d1a458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x561258d1a4a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x561258d1a5c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x561258d1a610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x561258d1a660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x561258d1a6e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x561258d1a6d0 <col:31> 'int'
|     `-DeclRefExpr 0x561258d1a6b0 <col:31> 'int' EnumConstant 0x561258d1a5c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x561258d1a738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x561258d1a808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x561258d1a858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x561258d1a8a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x561258d1a978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x561258d1a9c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x561258d1aa18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x561258d1aae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x561258d1ab38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x561258d1ab88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x561258d1adc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x561258d1ae30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x561258d1ae98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x561258d1afb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x561258d1b008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x561258d1b0d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x561258d1b128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x561258d1b178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x561258d1b248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x561258d1b298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x561258d1b8f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x561258d1b390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x561258d1b4a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561258d1b6e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x561258d1b760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x561258d1b9b8 <col:47>
| |-NonNullAttr 0x561258d1ba10 <col:77, col:94> 1 3
| `-CallbackAttr 0x561258d1ba48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x561258d1bb70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x561258d1baa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x561258d1bdc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x561258d1bc28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x561258d1bca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x561258d1bf98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x561258d1be88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x561258d1c040 <col:60>
|-FunctionDecl 0x561258d1c190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x561258d1c230 <col:54>
| `-ConstAttr 0x561258d1c288 <col:95>
|-FunctionDecl 0x561258d1c458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x561258d1c2c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561258d1c338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x561258d1c508 <line:394:19>
| `-ConstAttr 0x561258d1c560 <col:60>
|-FunctionDecl 0x561258d1cf68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x561258d1ce30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x561258d1d010 <col:71>
| `-NonNullAttr 0x561258d1d068 <col:112, col:126> 1
|-FunctionDecl 0x561258d1d170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x561258d1d0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x561258d1d218 <line:397:22>
| `-NonNullAttr 0x561258d1d270 <col:63, col:77> 1
|-FunctionDecl 0x561258d1d498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x561258d1d2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x561258d1d338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x561258d1d548 <line:400:22>
| `-NonNullAttr 0x561258d1d5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x561258d1d7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561258d1d5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561258d1d668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x561258d1d858 <line:403:22>
| `-NonNullAttr 0x561258d1d8b0 <col:63, col:77> 1
|-FunctionDecl 0x561258d1db08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x561258d1d8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x561258d1d9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x561258d1dbb8 <line:406:22>
| `-NonNullAttr 0x561258d1dc10 <col:63, col:80> 1 2
|-FunctionDecl 0x561258d1ee48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x561258d1dc58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561258d1dcd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561258d1eef8 <line:409:22>
| `-NonNullAttr 0x561258d1ef50 <col:63, col:77> 1
|-FunctionDecl 0x561258d1f188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561258d1ef98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561258d1f028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x561258d1f238 <line:412:22>
| `-NonNullAttr 0x561258d1f290 <col:63, col:80> 1 2
|-FunctionDecl 0x561258d1f4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561258d1f2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x561258d1f368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x561258d1f578 <col:37>
| `-NonNullAttr 0x561258d1f5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x561258d1f7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561258d1f618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561258d1f698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x561258d1f868 <line:418:22>
| `-NonNullAttr 0x561258d1f8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x561258d1fa48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561258d1f908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561258d1f988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x561258d1faf8 <line:420:22>
| `-NonNullAttr 0x561258d1fb50 <col:63, col:77> 1
|-FunctionDecl 0x561258d1fcf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561258d1fb98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561258d1fc18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x561258d1fda8 <line:423:22>
| `-NonNullAttr 0x561258d20e30 <col:63, col:80> 1 2
|-FunctionDecl 0x561258d20fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561258d20e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561258d20ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x561258d21068 <line:426:22>
| `-NonNullAttr 0x561258d210c0 <col:63, col:77> 1
|-FunctionDecl 0x561258d21268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561258d21108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561258d21188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x561258d21318 <line:429:22>
| `-NonNullAttr 0x561258d21370 <col:63, col:80> 1 2
|-FunctionDecl 0x561258d214f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561258d213b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561258d21438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x561258d215a8 <line:431:22>
| `-NonNullAttr 0x561258d21600 <col:63, col:77> 1
|-FunctionDecl 0x561258d21828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x561258d21648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561258d216c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x561258d218d8 <line:434:22>
| |-NonNullAttr 0x561258d21930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x561258d21968 <col:100> "" ""
|-FunctionDecl 0x561258d21b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x561258d219b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561258d21a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x561258d21c28 <line:437:22>
| |-NonNullAttr 0x561258d21c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x561258d21cb8 <col:97> "" ""
|-FunctionDecl 0x561258d21eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x561258d21d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561258d21d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x561258d21f68 <line:440:22>
| `-NonNullAttr 0x561258d21fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x561258d22140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x561258d22008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561258d22080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561258d221f0 <line:443:22>
| `-NonNullAttr 0x561258d22248 <col:63, col:77> 1
|-FunctionDecl 0x561258d22538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x561258d22298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561258d22318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x561258d22390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x561258d225f0 <line:447:22>
| `-NonNullAttr 0x561258d22648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x561258d228f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x561258d226a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561258d22720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x561258d22798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561258d229b0 <col:43>
| `-NonNullAttr 0x561258d22a08 <col:84, col:98> 1
|-FunctionDecl 0x561258d22cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x561258d22a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561258d22ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x561258d22b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x561258d22d80 <line:452:22>
| `-NonNullAttr 0x561258d22dd8 <col:63, col:77> 3
|-FunctionDecl 0x561258d230e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561258d22e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561258d22ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x561258d22f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x561258d231a0 <line:456:22>
| `-NonNullAttr 0x561258d231f8 <col:63, col:80> 2 3
|-FunctionDecl 0x561258d233e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x561258d23248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561258d232c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x561258d23498 <line:458:22>
|-FunctionDecl 0x561258d23868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x561258d23560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x561258d23700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x561258d23918 <col:52, col:69> 1 2
|-FunctionDecl 0x561258d23ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x561258d239a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x561258d23a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x561258d23ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x561258d23b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x561258d23c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x561258d23e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x561258d23d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x561258d23fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x561258d24040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x561258d240e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x561258d241d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x561258d24240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x561258d24410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix050_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x561258d24508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x561258d245c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x561258d24560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x561258d240c0 '__pthread_unwind_buf_t'
| |   `-Record 0x561258d24040 ''
| `-AlignedAttr 0x561258d24618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x561258d24690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x561258d247f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x561258d24858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x561258d248c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x561258d24928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x561258d24b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x561258d24a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x561258d24c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x561258d24be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x561258d24e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561258d24d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x561258d24f18 <line:487:22>
|-RecordDecl 0x561258d24f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x561258d25288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x561258d250e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x561258d25168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x561258d25338 <col:86>
| `-ReturnsTwiceAttr 0x561258d25390 <col:12> Implicit
|-FunctionDecl 0x561258d256b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561258d25460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x561258d25570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x561258d25768 <line:493:22>
| `-NonNullAttr 0x561258d257c0 <col:63, col:77> 1
|-FunctionDecl 0x561258d25938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561258d25808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561258d259e0 <line:495:22>
| `-NonNullAttr 0x561258d25a38 <col:63, col:77> 1
|-FunctionDecl 0x561258d25b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561258d25a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561258d25be8 <line:497:22>
| `-NonNullAttr 0x561258d25c40 <col:52, col:66> 1
|-FunctionDecl 0x561258d25d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561258d25c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561258d25de8 <line:499:22>
| `-NonNullAttr 0x561258d25e40 <col:52, col:66> 1
|-FunctionDecl 0x561258d26088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561258d25e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561258d25f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561258d26138 <col:36>
| `-NonNullAttr 0x561258d26190 <col:66, col:83> 1 2
|-FunctionDecl 0x561258d26290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561258d261d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561258d26338 <line:504:22>
| `-NonNullAttr 0x561258d26390 <col:52, col:66> 1
|-FunctionDecl 0x561258d26628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561258d26440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561258d264c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x561258d266d8 <line:508:22>
| `-NonNullAttr 0x561258d26730 <col:63, col:80> 1 2
|-FunctionDecl 0x561258d269f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x561258d26778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561258d267f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x561258d26878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x561258d26ab0 <line:512:22>
| `-NonNullAttr 0x561258d26b08 <col:63, col:80> 1 3
|-FunctionDecl 0x561258d26c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561258d26b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561258d26cb8 <line:514:22>
| `-NonNullAttr 0x561258d26d10 <col:63, col:77> 1
|-FunctionDecl 0x561258d26f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561258d26dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x561258d26fe0 <line:516:22>
| `-NonNullAttr 0x561258d27038 <col:63, col:77> 1
|-FunctionDecl 0x561258d27140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561258d27088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x561258d271e8 <line:518:22>
| `-NonNullAttr 0x561258d27240 <col:63, col:77> 1
|-FunctionDecl 0x561258d27468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561258d27288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561258d27308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x561258d27518 <line:522:22>
| `-NonNullAttr 0x561258d27570 <col:63, col:80> 1 2
|-FunctionDecl 0x561258d27778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561258d275b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561258d27638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x561258d27828 <line:525:22>
| `-NonNullAttr 0x561258d27880 <col:63, col:77> 1
|-FunctionDecl 0x561258d27a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561258d278c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561258d27948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x561258d27ad8 <line:528:22>
| `-NonNullAttr 0x561258d27b30 <col:63, col:80> 1 2
|-FunctionDecl 0x561258d27cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561258d27b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561258d27bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x561258d27d68 <line:530:22>
| `-NonNullAttr 0x561258d27dc0 <col:63, col:77> 1
|-FunctionDecl 0x561258d28f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561258d27e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561258d28eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x561258d29040 <line:534:22>
| `-NonNullAttr 0x561258d29098 <col:63, col:80> 1 2
|-FunctionDecl 0x561258d29228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561258d290e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561258d29168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x561258d292d8 <line:537:22>
| `-NonNullAttr 0x561258d29330 <col:63, col:77> 1
|-FunctionDecl 0x561258d294d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561258d29378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561258d293f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x561258d29588 <line:541:22>
| `-NonNullAttr 0x561258d295e0 <col:63, col:80> 1 2
|-FunctionDecl 0x561258d29768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561258d29628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561258d296a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x561258d29818 <line:544:22>
| `-NonNullAttr 0x561258d29870 <col:63, col:77> 1
|-FunctionDecl 0x561258d29a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x561258d298b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x561258d29938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x561258d29b08 <line:547:22>
| `-NonNullAttr 0x561258d29b60 <col:63, col:80> 1 2
|-FunctionDecl 0x561258d29ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561258d29ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561258d29c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x561258d29d98 <line:550:22>
| `-NonNullAttr 0x561258d29df0 <col:63, col:77> 1
|-FunctionDecl 0x561258d2b168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x561258d2af10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561258d2b020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x561258d2b218 <col:29>
| `-NonNullAttr 0x561258d2b270 <col:70, col:84> 1
|-FunctionDecl 0x561258d2b3e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561258d2b2b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561258d2b490 <line:555:22>
| `-NonNullAttr 0x561258d2b4e8 <col:63, col:77> 1
|-FunctionDecl 0x561258d2b5f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561258d2b538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561258d2b698 <line:557:22>
| `-NonNullAttr 0x561258d2b6f0 <col:52, col:66> 1
|-FunctionDecl 0x561258d2b7f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561258d2b738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561258d2b898 <line:559:19>
| `-NonNullAttr 0x561258d2b8f0 <col:49, col:63> 1
|-FunctionDecl 0x561258d2bb28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561258d2b938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561258d2b9c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561258d2bbd8 <col:39>
| `-NonNullAttr 0x561258d2bc30 <col:69, col:86> 1 2
|-FunctionDecl 0x561258d2bd30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561258d2bc78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561258d2bdd8 <line:564:22>
| `-NonNullAttr 0x561258d2be30 <col:52, col:66> 1
|-FunctionDecl 0x561258d2bf98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561258d2bee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561258d2c040 <line:566:22>
| `-NonNullAttr 0x561258d2c098 <col:52, col:66> 1
|-FunctionDecl 0x561258d2c258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561258d2c0e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561258d2c178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561258d2c308 <col:39>
| `-NonNullAttr 0x561258d2c360 <col:69, col:86> 1 2
|-FunctionDecl 0x561258d2c460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561258d2c3a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561258d2c508 <line:571:22>
| `-NonNullAttr 0x561258d2c560 <col:52, col:66> 1
|-FunctionDecl 0x561258d2c748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x561258d2c610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x561258d2c7f0 <line:573:22>
| `-NonNullAttr 0x561258d2c848 <col:63, col:77> 1
|-FunctionDecl 0x561258d2c950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x561258d2c898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x561258d2c9f8 <line:575:22>
| `-NonNullAttr 0x561258d2ca50 <col:63, col:77> 1
|-FunctionDecl 0x561258d2cc78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561258d2ca98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x561258d2cb18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x561258d2cd28 <line:579:22>
| `-NonNullAttr 0x561258d2cd80 <col:63, col:80> 1 2
|-FunctionDecl 0x561258d2cfa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x561258d2cdc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x561258d2ce48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x561258d2d058 <line:582:22>
| `-NonNullAttr 0x561258d2d0b0 <col:63, col:77> 1
|-FunctionDecl 0x561258d2d258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561258d2d0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x561258d2d178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x561258d2d308 <line:586:22>
| `-NonNullAttr 0x561258d2d360 <col:63, col:80> 1 2
|-FunctionDecl 0x561258d2d4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x561258d2d3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x561258d2d428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x561258d2d598 <col:36>
| `-NonNullAttr 0x561258d2d5f0 <col:77, col:91> 1
|-FunctionDecl 0x561258d2d928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x561258d2d6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561258d2d7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x561258d2d9d8 <line:591:22>
| `-NonNullAttr 0x561258d2da30 <col:63, col:77> 1
|-FunctionDecl 0x561258d2dba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561258d2da78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561258d2dc50 <line:593:22>
| `-NonNullAttr 0x561258d2dca8 <col:63, col:77> 1
|-FunctionDecl 0x561258d2ddb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561258d2dcf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561258d2de58 <line:595:22>
| `-NonNullAttr 0x561258d2deb0 <col:52, col:66> 1
|-FunctionDecl 0x561258d2dfc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561258d2df10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561258d2e070 <line:597:22>
| `-NonNullAttr 0x561258d2e0c8 <col:52, col:66> 1
|-FunctionDecl 0x561258d2e2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x561258d2e118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561258d2e190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x561258d2e3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x561258d2e6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561258d2e428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561258d2e4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561258d2e530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x561258d2e790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x561258d2e9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x561258d2e870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x561258d2ea50 <line:606:22>
| `-NonNullAttr 0x561258d2eaa8 <col:63, col:77> 1
|-FunctionDecl 0x561258d2ebb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x561258d2eaf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x561258d2ec58 <line:608:22>
| `-NonNullAttr 0x561258d2ecb0 <col:63, col:77> 1
|-FunctionDecl 0x561258d2ef10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561258d2ecf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x561258d2ed78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x561258d2efc0 <line:612:22>
| `-NonNullAttr 0x561258d2f018 <col:63, col:80> 1 2
|-FunctionDecl 0x561258d2f228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x561258d2f068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x561258d2f0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x561258d2f2d8 <col:37>
| `-NonNullAttr 0x561258d2f330 <col:78, col:92> 1
|-FunctionDecl 0x561258d2f548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x561258d2f378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x561258d2f420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x561258d2f5f8 <line:618:22>
| `-NonNullAttr 0x561258d2f650 <col:63, col:80> 1 2
|-FunctionDecl 0x561258d2f818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x561258d2f698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x561258d2f710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x561258d2f8c8 <line:621:22>
| `-NonNullAttr 0x561258d2f920 <col:63, col:77> 1
|-FunctionDecl 0x561258d2fbc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x561258d2fa00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x561258d2fa80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x561258d2fc78 <line:623:22>
| `-NonNullAttr 0x561258d2fcd0 <col:63, col:77> 1
|-FunctionDecl 0x561258d2fe48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561258d2fd18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561258d2ff20 <line:625:22>
| `-NonNullAttr 0x561258d2ff78 <col:63, col:77> 1
|-FunctionDecl 0x561258d30080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561258d2ffc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561258d30128 <line:627:22>
| `-NonNullAttr 0x561258d30180 <col:52, col:66> 1
|-FunctionDecl 0x561258d30280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561258d301c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561258d30328 <line:629:22>
| `-NonNullAttr 0x561258d30380 <col:52, col:66> 1
|-FunctionDecl 0x561258d30480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561258d303c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561258d30528 <line:631:22>
| `-NonNullAttr 0x561258d30580 <col:52, col:66> 1
|-FunctionDecl 0x561258d30958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x561258d30660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x561258d30770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x561258d307f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x561258d30a10 <line:635:22>
| `-NonNullAttr 0x561258d30a68 <col:63, col:77> 1
|-FunctionDecl 0x561258d30be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x561258d30ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x561258d30c90 <line:637:22>
| `-NonNullAttr 0x561258d30ce8 <col:63, col:77> 1
|-FunctionDecl 0x561258d30df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x561258d30d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x561258d30e98 <line:639:22>
| `-NonNullAttr 0x561258d30ef0 <col:52, col:66> 1
|-FunctionDecl 0x561258d310e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x561258d30fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x561258d31190 <line:641:22>
| `-NonNullAttr 0x561258d311e8 <col:63, col:77> 1
|-FunctionDecl 0x561258d312f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x561258d31238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x561258d31398 <line:643:22>
| `-NonNullAttr 0x561258d313f0 <col:63, col:77> 1
|-FunctionDecl 0x561258d31618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561258d31438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x561258d314b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x561258d316c8 <line:647:22>
| `-NonNullAttr 0x561258d31720 <col:63, col:80> 1 2
|-FunctionDecl 0x561258d31928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x561258d31768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x561258d317e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x561258d319d8 <line:650:22>
| `-NonNullAttr 0x561258d31a30 <col:63, col:77> 1
|-FunctionDecl 0x561258d31d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x561258d31b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x561258d31c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x561258d31e28 <line:653:22>
| `-NonNullAttr 0x561258d31e80 <col:63, col:77> 1
|-FunctionDecl 0x561258d31fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x561258d31ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x561258d32090 <col:69>
|-FunctionDecl 0x561258d32208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x561258d320f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x561258d322b0 <col:72>
|-FunctionDecl 0x561258d324e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x561258d32318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x561258d323c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x561258d32598 <col:44>
|-FunctionDecl 0x561258d327b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x561258d32600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561258d32678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x561258d32868 <line:660:22>
| `-NonNullAttr 0x561258d328c0 <col:63, col:77> 2
|-FunctionDecl 0x561258d32d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x561258d329a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x561258d32ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x561258d32bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x561258d32dc0 <col:47>
|-FunctionDecl 0x561258d33f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x561258d32e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561258d340b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x561258d34020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561258d34210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x561258d34178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561258d34368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x561258d342d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561258d34430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x561258d344f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x561258d345b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x561258d34668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x561258d346e8 prev 0x561258d34668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x561258d34750 <col:24> 'int' 0
|-VarDecl 0x561258d34788 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x561258d34808 prev 0x561258d34788 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x561258d34870 <col:27> 'int' 0
|-VarDecl 0x561258d348a8 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x561258d34928 prev 0x561258d348a8 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x561258d34990 <col:27> 'int' 0
|-VarDecl 0x561258d349c8 <line:678:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x561258d34a48 prev 0x561258d349c8 <line:679:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x561258d34ab0 <col:27> 'int' 0
|-VarDecl 0x561258d34ae8 <line:680:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x561258d34b68 prev 0x561258d34ae8 <line:681:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x561258d34bd0 <col:27> 'int' 0
|-VarDecl 0x561258d34c08 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x561258d34c88 prev 0x561258d34c08 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x561258d34cf0 <col:9> 'int' 0
|-VarDecl 0x561258d34d20 <line:684:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x561258d34da0 <line:685:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x561258d34e18 <line:686:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x561258d34e90 <line:687:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x561258d34f70 <line:688:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x561258d34fe8 <line:689:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x561258d35060 <line:690:1, col:7> col:7 used a$r_buff0_thd4 '_Bool'
|-VarDecl 0x561258d350d8 <line:691:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x561258d35150 <line:692:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x561258d351c8 <line:693:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x561258d35240 <line:694:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x561258d352b8 <line:695:1, col:7> col:7 used a$r_buff1_thd4 '_Bool'
|-VarDecl 0x561258d35330 <line:696:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x561258d353b0 <line:697:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x561258d35430 <line:698:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x561258d354a8 <line:699:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x561258d35528 <line:700:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x561258d355a0 <line:701:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x561258d35618 <line:702:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x561258d35690 <line:703:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x561258d35710 <line:704:1, col:5> col:5 used x 'int'
|-VarDecl 0x561258d35790 prev 0x561258d35710 <line:705:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x561258d357f8 <col:9> 'int' 0
|-VarDecl 0x561258d35830 <line:706:1, col:5> col:5 used y 'int'
|-VarDecl 0x561258d358b0 prev 0x561258d35830 <line:707:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x561258d35918 <col:9> 'int' 0
|-VarDecl 0x561258d35950 <line:708:1, col:5> col:5 used z 'int'
|-VarDecl 0x561258d359d0 prev 0x561258d35950 <line:709:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x561258d35a38 <col:9> 'int' 0
|-VarDecl 0x561258d35a68 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x561258d35ae0 <line:711:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x561258d35bf8 prev 0x561258d33f60 <line:712:1, line:741:1> line:712:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x561258d35b60 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561258d374b8 <line:713:1, line:741:1>
|   |-CallExpr 0x561258d35d08 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561258d35cf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d35ca0 <col:3> 'void ()' Function 0x561258cdb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561258d35d80 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561258d35d28 <col:3> 'int' lvalue Var 0x561258d35528 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x561258d35d68 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561258d35d48 <col:15> 'int' lvalue Var 0x561258d35430 'a$w_buff0' 'int'
|   |-BinaryOperator 0x561258d35de0 <line:716:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561258d35da0 <col:3> 'int' lvalue Var 0x561258d35430 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x561258d35dc0 <col:15> 'int' 1
|   |-BinaryOperator 0x561258d35e58 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561258d35e00 <col:3> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561258d35e40 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561258d35e20 <col:20> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561258d35ef0 <line:718:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x561258d35e78 <col:3> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x561258d35ec8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561258d35e98 <col:27> 'int' 1
|   |-CallExpr 0x561258d36088 <line:719:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x561258d36070 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x561258d35f10 <col:3> 'void (int)' Function 0x561258cdb0d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x561258d36020 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x561258d36000 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x561258d35fe0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x561258d35f98 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x561258d35f80 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x561258d35f30 <col:23> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x561258d35fc8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x561258d35fb0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x561258d35f50 <col:41> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561258d36108 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561258d360b0 <col:3> '_Bool' lvalue Var 0x561258d350d8 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x561258d360f0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561258d360d0 <col:20> '_Bool' lvalue Var 0x561258d34e18 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x561258d36180 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561258d36128 <col:3> '_Bool' lvalue Var 0x561258d35150 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561258d36168 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561258d36148 <col:20> '_Bool' lvalue Var 0x561258d34e90 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x561258d361f8 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561258d361a0 <col:3> '_Bool' lvalue Var 0x561258d351c8 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561258d361e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561258d361c0 <col:20> '_Bool' lvalue Var 0x561258d34f70 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x561258d36270 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561258d36218 <col:3> '_Bool' lvalue Var 0x561258d35240 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561258d36258 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561258d36238 <col:20> '_Bool' lvalue Var 0x561258d34fe8 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x561258d362e8 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561258d36290 <col:3> '_Bool' lvalue Var 0x561258d352b8 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x561258d362d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561258d362b0 <col:20> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x561258d36380 <line:725:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x561258d36308 <col:3> '_Bool' lvalue Var 0x561258d34e90 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x561258d36358 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561258d36328 <col:27> 'int' 1
|   |-CallExpr 0x561258d363d8 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561258d363c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d363a0 <col:3> 'void ()' Function 0x561258cdb410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561258d36430 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561258d36418 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d363f8 <col:3> 'void ()' Function 0x561258cdb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561258d364a8 <line:728:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561258d36450 <col:3> 'int' lvalue Var 0x561258d34808 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x561258d36490 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561258d36470 <col:25> 'int' lvalue Var 0x561258d35790 'x' 'int'
|   |-CallExpr 0x561258d36500 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561258d364e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d364c8 <col:3> 'void ()' Function 0x561258cdb410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561258d36558 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561258d36540 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d36520 <col:3> 'void ()' Function 0x561258cdb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561258d36840 <line:731:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561258d36578 <col:3> 'int' lvalue Var 0x561258d34c88 'a' 'int'
|   | `-ConditionalOperator 0x561258d36810 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561258d36638 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561258d365f0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561258d365d8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561258d36598 <col:7> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561258d36620 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561258d36608 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561258d365b8 <col:25> '_Bool' lvalue Var 0x561258d34e90 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x561258d367f8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561258d36658 <col:42> 'int' lvalue Var 0x561258d35430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x561258d367d8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561258d367a8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561258d36718 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561258d366d0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561258d366b8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561258d36678 <col:55> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561258d36700 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561258d366e8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561258d36698 <col:73> '_Bool' lvalue Var 0x561258d35150 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x561258d36778 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561258d36738 <col:90> 'int' lvalue Var 0x561258d35528 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561258d36790 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561258d36758 <col:102> 'int' lvalue Var 0x561258d34c88 'a' 'int'
|   |-BinaryOperator 0x561258d36a48 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561258d36860 <col:3> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561258d36a30 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561258d36a00 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561258d36920 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561258d368d8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561258d368c0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561258d36880 <col:20> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561258d36908 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561258d368f0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561258d368a0 <col:38> '_Bool' lvalue Var 0x561258d34e90 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561258d369b8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561258d36970 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561258d36940 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561258d369e8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561258d369d0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561258d36998 <col:66> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561258d36d30 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561258d36a68 <col:3> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561258d36d18 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561258d36ce8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561258d36c08 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561258d36b28 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561258d36ae0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561258d36ac8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561258d36a88 <col:20> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561258d36b10 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561258d36af8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561258d36aa8 <col:38> '_Bool' lvalue Var 0x561258d34e90 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x561258d36be8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561258d36ba0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561258d36b88 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561258d36b48 <col:56> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561258d36bd0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561258d36bb8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561258d36b68 <col:74> '_Bool' lvalue Var 0x561258d35150 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561258d36ca0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561258d36c58 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561258d36c28 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561258d36cd0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561258d36cb8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561258d36c80 <col:102> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561258d36f38 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561258d36d50 <col:3> '_Bool' lvalue Var 0x561258d34e90 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561258d36f20 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561258d36ef0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561258d36e10 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561258d36dc8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561258d36db0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561258d36d70 <col:20> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561258d36df8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561258d36de0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561258d36d90 <col:38> '_Bool' lvalue Var 0x561258d34e90 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561258d36ea8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561258d36e60 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561258d36e30 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561258d36ed8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561258d36ec0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561258d36e88 <col:66> '_Bool' lvalue Var 0x561258d34e90 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x561258d37238 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561258d36f58 <col:3> '_Bool' lvalue Var 0x561258d35150 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561258d37220 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561258d371f0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561258d37110 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561258d37030 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561258d36fe8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561258d36fd0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561258d36f90 <col:20> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561258d37018 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561258d37000 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561258d36fb0 <col:38> '_Bool' lvalue Var 0x561258d34e90 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x561258d370f0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561258d370a8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561258d37090 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561258d37050 <col:56> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561258d370d8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561258d370c0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561258d37070 <col:74> '_Bool' lvalue Var 0x561258d35150 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561258d371a8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561258d37160 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561258d37130 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561258d371d8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561258d371c0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561258d37188 <col:102> '_Bool' lvalue Var 0x561258d35150 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x561258d37290 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561258d37278 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d37258 <col:3> 'void ()' Function 0x561258cdb410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561258d372e8 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561258d372d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d372b0 <col:3> 'void ()' Function 0x561258cdb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561258d373a0 <line:738:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561258d37308 <col:3> 'int' lvalue Var 0x561258d346e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561258d37380 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561258d37368 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561258d37328 <col:22> 'int' lvalue Var 0x561258d346e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561258d37348 <col:41> 'int' 1
|   |-CallExpr 0x561258d373f8 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561258d373e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d373c0 <col:3> 'void ()' Function 0x561258cdb410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561258d374a8 <line:740:3, col:36>
|     `-CallExpr 0x561258d37488 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561258d37470 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561258d37418 <col:10> 'void *(void)' Function 0x561258cdae68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561258d37650 prev 0x561258d340b8 <line:742:1, line:761:1> line:742:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x561258d375b8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561258d388a0 <line:743:1, line:761:1>
|   |-CallExpr 0x561258d37730 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561258d37718 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d376f8 <col:3> 'void ()' Function 0x561258cdb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561258d37790 <line:745:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561258d37750 <col:3> 'int' lvalue Var 0x561258d35790 'x' 'int'
|   | `-IntegerLiteral 0x561258d37770 <col:7> 'int' 1
|   |-CallExpr 0x561258d377e8 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561258d377d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d377b0 <col:3> 'void ()' Function 0x561258cdb410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561258d37840 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561258d37828 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d37808 <col:3> 'void ()' Function 0x561258cdb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561258d378b8 <line:748:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561258d37860 <col:3> 'int' lvalue Var 0x561258d34928 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x561258d378a0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561258d37880 <col:25> 'int' lvalue Var 0x561258d358b0 'y' 'int'
|   |-CallExpr 0x561258d37910 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561258d378f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d378d8 <col:3> 'void ()' Function 0x561258cdb410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561258d37968 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561258d37950 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d37930 <col:3> 'void ()' Function 0x561258cdb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561258d37c50 <line:751:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561258d37988 <col:3> 'int' lvalue Var 0x561258d34c88 'a' 'int'
|   | `-ConditionalOperator 0x561258d37c20 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561258d37a48 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561258d37a00 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561258d379e8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561258d379a8 <col:7> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561258d37a30 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561258d37a18 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561258d379c8 <col:25> '_Bool' lvalue Var 0x561258d34f70 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x561258d37c08 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561258d37a68 <col:42> 'int' lvalue Var 0x561258d35430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x561258d37be8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561258d37bb8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561258d37b28 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561258d37ae0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561258d37ac8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561258d37a88 <col:55> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561258d37b10 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561258d37af8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561258d37aa8 <col:73> '_Bool' lvalue Var 0x561258d351c8 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x561258d37b88 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561258d37b48 <col:90> 'int' lvalue Var 0x561258d35528 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561258d37ba0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561258d37b68 <col:102> 'int' lvalue Var 0x561258d34c88 'a' 'int'
|   |-BinaryOperator 0x561258d37e58 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561258d37c70 <col:3> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561258d37e40 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561258d37e10 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561258d37d30 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561258d37ce8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561258d37cd0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561258d37c90 <col:20> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561258d37d18 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561258d37d00 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561258d37cb0 <col:38> '_Bool' lvalue Var 0x561258d34f70 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561258d37dc8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561258d37d80 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561258d37d50 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561258d37df8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561258d37de0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561258d37da8 <col:66> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561258d38168 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561258d37e78 <col:3> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561258d38150 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561258d38120 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561258d38040 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561258d37f38 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561258d37ef0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561258d37ed8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561258d37e98 <col:20> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561258d37f20 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561258d37f08 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561258d37eb8 <col:38> '_Bool' lvalue Var 0x561258d34f70 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x561258d38020 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561258d37fd8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561258d37fc0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561258d37f58 <col:56> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561258d38008 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561258d37ff0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561258d37fa0 <col:74> '_Bool' lvalue Var 0x561258d351c8 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561258d380d8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561258d38090 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561258d38060 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561258d38108 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561258d380f0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561258d380b8 <col:102> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561258d38370 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561258d38188 <col:3> '_Bool' lvalue Var 0x561258d34f70 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561258d38358 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561258d38328 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561258d38248 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561258d38200 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561258d381e8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561258d381a8 <col:20> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561258d38230 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561258d38218 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561258d381c8 <col:38> '_Bool' lvalue Var 0x561258d34f70 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561258d382e0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561258d38298 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561258d38268 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561258d38310 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561258d382f8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561258d382c0 <col:66> '_Bool' lvalue Var 0x561258d34f70 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x561258d38658 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561258d38390 <col:3> '_Bool' lvalue Var 0x561258d351c8 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561258d38640 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561258d38610 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561258d38530 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561258d38450 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561258d38408 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561258d383f0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561258d383b0 <col:20> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561258d38438 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561258d38420 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561258d383d0 <col:38> '_Bool' lvalue Var 0x561258d34f70 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x561258d38510 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561258d384c8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561258d384b0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561258d38470 <col:56> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561258d384f8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561258d384e0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561258d38490 <col:74> '_Bool' lvalue Var 0x561258d351c8 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561258d385c8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561258d38580 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561258d38550 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561258d385f8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561258d385e0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561258d385a8 <col:102> '_Bool' lvalue Var 0x561258d351c8 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x561258d386b0 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561258d38698 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d38678 <col:3> 'void ()' Function 0x561258cdb410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561258d38708 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561258d386f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d386d0 <col:3> 'void ()' Function 0x561258cdb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561258d387c0 <line:758:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561258d38728 <col:3> 'int' lvalue Var 0x561258d346e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561258d387a0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561258d38788 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561258d38748 <col:22> 'int' lvalue Var 0x561258d346e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561258d38768 <col:41> 'int' 1
|   |-CallExpr 0x561258d38818 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561258d38800 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d387e0 <col:3> 'void ()' Function 0x561258cdb410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561258d38890 <line:760:3, col:36>
|     `-CallExpr 0x561258d38870 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561258d38858 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561258d38838 <col:10> 'void *(void)' Function 0x561258cdae68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561258d389e8 prev 0x561258d34210 <line:762:1, line:781:1> line:762:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x561258d38950 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561258d39c20 <line:763:1, line:781:1>
|   |-CallExpr 0x561258d38ac8 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561258d38ab0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d38a90 <col:3> 'void ()' Function 0x561258cdb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561258d38b28 <line:765:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561258d38ae8 <col:3> 'int' lvalue Var 0x561258d358b0 'y' 'int'
|   | `-IntegerLiteral 0x561258d38b08 <col:7> 'int' 1
|   |-CallExpr 0x561258d38b80 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561258d38b68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d38b48 <col:3> 'void ()' Function 0x561258cdb410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561258d38bd8 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561258d38bc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d38ba0 <col:3> 'void ()' Function 0x561258cdb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561258d38c50 <line:768:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561258d38bf8 <col:3> 'int' lvalue Var 0x561258d34a48 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x561258d38c38 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561258d38c18 <col:25> 'int' lvalue Var 0x561258d359d0 'z' 'int'
|   |-CallExpr 0x561258d38ca8 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561258d38c90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d38c70 <col:3> 'void ()' Function 0x561258cdb410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561258d38d00 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561258d38ce8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d38cc8 <col:3> 'void ()' Function 0x561258cdb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561258d38ff8 <line:771:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561258d38d20 <col:3> 'int' lvalue Var 0x561258d34c88 'a' 'int'
|   | `-ConditionalOperator 0x561258d38fc8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561258d38de0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561258d38d98 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561258d38d80 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561258d38d40 <col:7> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561258d38dc8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561258d38db0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561258d38d60 <col:25> '_Bool' lvalue Var 0x561258d34fe8 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x561258d38fb0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561258d38e00 <col:42> 'int' lvalue Var 0x561258d35430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x561258d38f80 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561258d38f50 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561258d38ec0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561258d38e78 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561258d38e60 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561258d38e20 <col:55> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561258d38ea8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561258d38e90 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561258d38e40 <col:73> '_Bool' lvalue Var 0x561258d35240 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x561258d38f20 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561258d38ee0 <col:90> 'int' lvalue Var 0x561258d35528 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561258d38f38 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561258d38f00 <col:102> 'int' lvalue Var 0x561258d34c88 'a' 'int'
|   |-BinaryOperator 0x561258d39200 <line:772:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561258d39018 <col:3> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561258d391e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561258d391b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561258d390d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561258d39090 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561258d39078 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561258d39038 <col:20> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561258d390c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561258d390a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561258d39058 <col:38> '_Bool' lvalue Var 0x561258d34fe8 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561258d39170 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561258d39128 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561258d390f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561258d391a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561258d39188 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561258d39150 <col:66> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561258d394e8 <line:773:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561258d39220 <col:3> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561258d394d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561258d394a0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561258d393c0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561258d392e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561258d39298 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561258d39280 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561258d39240 <col:20> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561258d392c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561258d392b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561258d39260 <col:38> '_Bool' lvalue Var 0x561258d34fe8 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x561258d393a0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561258d39358 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561258d39340 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561258d39300 <col:56> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561258d39388 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561258d39370 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561258d39320 <col:74> '_Bool' lvalue Var 0x561258d35240 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561258d39458 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561258d39410 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561258d393e0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561258d39488 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561258d39470 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561258d39438 <col:102> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561258d396f0 <line:774:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561258d39508 <col:3> '_Bool' lvalue Var 0x561258d34fe8 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561258d396d8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561258d396a8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561258d395c8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561258d39580 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561258d39568 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561258d39528 <col:20> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561258d395b0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561258d39598 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561258d39548 <col:38> '_Bool' lvalue Var 0x561258d34fe8 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561258d39660 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561258d39618 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561258d395e8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561258d39690 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561258d39678 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561258d39640 <col:66> '_Bool' lvalue Var 0x561258d34fe8 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x561258d399d8 <line:775:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561258d39710 <col:3> '_Bool' lvalue Var 0x561258d35240 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561258d399c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561258d39990 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561258d398b0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561258d397d0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561258d39788 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561258d39770 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561258d39730 <col:20> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561258d397b8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561258d397a0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561258d39750 <col:38> '_Bool' lvalue Var 0x561258d34fe8 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x561258d39890 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561258d39848 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561258d39830 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561258d397f0 <col:56> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561258d39878 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561258d39860 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561258d39810 <col:74> '_Bool' lvalue Var 0x561258d35240 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561258d39948 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561258d39900 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561258d398d0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561258d39978 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561258d39960 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561258d39928 <col:102> '_Bool' lvalue Var 0x561258d35240 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x561258d39a30 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561258d39a18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d399f8 <col:3> 'void ()' Function 0x561258cdb410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561258d39a88 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561258d39a70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d39a50 <col:3> 'void ()' Function 0x561258cdb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561258d39b40 <line:778:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561258d39aa8 <col:3> 'int' lvalue Var 0x561258d346e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561258d39b20 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561258d39b08 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561258d39ac8 <col:22> 'int' lvalue Var 0x561258d346e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561258d39ae8 <col:41> 'int' 1
|   |-CallExpr 0x561258d39b98 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561258d39b80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d39b60 <col:3> 'void ()' Function 0x561258cdb410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561258d39c10 <line:780:3, col:36>
|     `-CallExpr 0x561258d39bf0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561258d39bd8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561258d39bb8 <col:10> 'void *(void)' Function 0x561258cdae68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561258d39d68 prev 0x561258d34368 <line:782:1, line:814:1> line:782:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x561258d39cd0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561258d3d948 <line:783:1, line:814:1>
|   |-CallExpr 0x561258d39e48 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561258d39e30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d39e10 <col:3> 'void ()' Function 0x561258cdb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561258d39ea8 <line:785:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561258d39e68 <col:3> 'int' lvalue Var 0x561258d359d0 'z' 'int'
|   | `-IntegerLiteral 0x561258d39e88 <col:7> 'int' 1
|   |-CallExpr 0x561258d39f00 <line:786:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561258d39ee8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d39ec8 <col:3> 'void ()' Function 0x561258cdb410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561258d39f58 <line:787:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561258d39f40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d39f20 <col:3> 'void ()' Function 0x561258cdb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561258d3a030 <line:788:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x561258d39f78 <col:3> '_Bool' lvalue Var 0x561258d35a68 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x561258d3a018 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x561258d39ff8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x561258d39fe0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x561258d39fc0 <col:19> 'void *(void)' Function 0x561258cdae68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x561258d3a0e0 <line:789:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x561258d3a050 <col:3> '_Bool' lvalue Var 0x561258d35ae0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x561258d3a0c8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x561258d3a0a8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x561258d3a090 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x561258d3a070 <col:19> 'void *(void)' Function 0x561258cdae68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x561258d3a158 <line:790:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x561258d3a100 <col:3> '_Bool' lvalue Var 0x561258d34d20 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x561258d3a140 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561258d3a120 <col:21> '_Bool' lvalue Var 0x561258d35ae0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x561258d3a1d0 <line:791:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561258d3a178 <col:3> 'int' lvalue Var 0x561258d34da0 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x561258d3a1b8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561258d3a198 <col:15> 'int' lvalue Var 0x561258d34c88 'a' 'int'
|   |-BinaryOperator 0x561258d3a608 <line:792:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x561258d3a1f0 <col:3> 'int' lvalue Var 0x561258d34c88 'a' 'int'
|   | `-ConditionalOperator 0x561258d3a5d8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x561258d3a400 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x561258d3a320 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x561258d3a248 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x561258d3a230 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x561258d3a210 <col:8> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x561258d3a300 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x561258d3a298 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x561258d3a280 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x561258d3a260 <col:27> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x561258d3a2e8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x561258d3a2d0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x561258d3a2b0 <col:46> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x561258d3a3e0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x561258d3a378 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x561258d3a360 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x561258d3a340 <col:65> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x561258d3a3c8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x561258d3a3b0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x561258d3a390 <col:84> '_Bool' lvalue Var 0x561258d352b8 'a$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x561258d3a5c0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561258d3a420 <col:101> 'int' lvalue Var 0x561258d34c88 'a' 'int'
|   |   `-ParenExpr 0x561258d3a5a0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x561258d3a570 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x561258d3a4e0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561258d3a498 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561258d3a480 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561258d3a440 <col:106> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561258d3a4c8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561258d3a4b0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561258d3a460 <col:124> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x561258d3a540 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561258d3a500 <col:141> 'int' lvalue Var 0x561258d35430 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x561258d3a558 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561258d3a520 <col:153> 'int' lvalue Var 0x561258d35528 'a$w_buff1' 'int'
|   |-BinaryOperator 0x561258d3ab18 <line:793:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x561258d3a628 <col:3> 'int' lvalue Var 0x561258d35430 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x561258d3aae8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x561258d3aab8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561258d3aaa0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561258d3a648 <col:15> '_Bool' lvalue Var 0x561258d35ae0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x561258d3aad0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561258d3a668 <col:31> 'int' lvalue Var 0x561258d35430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x561258d3aa80 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x561258d3aa50 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x561258d3a878 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x561258d3a798 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x561258d3a6c0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x561258d3a6a8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x561258d3a688 <col:45> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x561258d3a778 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x561258d3a710 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x561258d3a6f8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x561258d3a6d8 <col:64> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x561258d3a760 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x561258d3a748 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x561258d3a728 <col:83> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x561258d3a858 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x561258d3a7f0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x561258d3a7d8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x561258d3a7b8 <col:102> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x561258d3a840 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x561258d3a828 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x561258d3a808 <col:121> '_Bool' lvalue Var 0x561258d352b8 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x561258d3aa38 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561258d3a898 <col:138> 'int' lvalue Var 0x561258d35430 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x561258d3aa18 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x561258d3a9e8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x561258d3a958 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x561258d3a910 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x561258d3a8f8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x561258d3a8b8 <col:151> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x561258d3a940 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x561258d3a928 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x561258d3a8d8 <col:169> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x561258d3a9b8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x561258d3a978 <col:186> 'int' lvalue Var 0x561258d35430 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x561258d3a9d0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x561258d3a998 <col:198> 'int' lvalue Var 0x561258d35430 'a$w_buff0' 'int'
|   |-BinaryOperator 0x561258d3b048 <line:794:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x561258d3ab38 <col:3> 'int' lvalue Var 0x561258d35528 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x561258d3b018 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x561258d3afe8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561258d3afd0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561258d3ab58 <col:15> '_Bool' lvalue Var 0x561258d35ae0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x561258d3b000 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561258d3ab78 <col:31> 'int' lvalue Var 0x561258d35528 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x561258d3af90 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x561258d3af60 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x561258d3ad88 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x561258d3aca8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x561258d3abd0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x561258d3abb8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x561258d3ab98 <col:45> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x561258d3ac88 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x561258d3ac20 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x561258d3ac08 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x561258d3abe8 <col:64> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x561258d3ac70 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x561258d3ac58 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x561258d3ac38 <col:83> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x561258d3ad68 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x561258d3ad00 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x561258d3ace8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x561258d3acc8 <col:102> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x561258d3ad50 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x561258d3ad38 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x561258d3ad18 <col:121> '_Bool' lvalue Var 0x561258d352b8 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x561258d3af48 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561258d3ada8 <col:138> 'int' lvalue Var 0x561258d35528 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x561258d3af28 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x561258d3aef8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x561258d3ae68 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x561258d3ae20 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x561258d3ae08 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x561258d3adc8 <col:151> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x561258d3ae50 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x561258d3ae38 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x561258d3ade8 <col:169> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x561258d3aec8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x561258d3ae88 <col:186> 'int' lvalue Var 0x561258d35528 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x561258d3aee0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x561258d3aea8 <col:198> 'int' lvalue Var 0x561258d35528 'a$w_buff1' 'int'
|   |-BinaryOperator 0x561258d3b5f0 <line:795:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x561258d3b068 <col:3> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561258d3b5d8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561258d3b5a8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x561258d3b560 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561258d3b548 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561258d3b088 <col:20> '_Bool' lvalue Var 0x561258d35ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561258d3b590 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561258d3b578 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561258d3b0a8 <col:36> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x561258d3b528 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x561258d3b4f8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x561258d3b2b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561258d3b1d8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561258d3b100 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561258d3b0e8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561258d3b0c8 <col:55> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561258d3b1b8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561258d3b150 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561258d3b138 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561258d3b118 <col:74> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x561258d3b1a0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561258d3b188 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561258d3b168 <col:93> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561258d3b298 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561258d3b230 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561258d3b218 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561258d3b1f8 <col:112> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x561258d3b280 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561258d3b268 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561258d3b248 <col:131> '_Bool' lvalue Var 0x561258d352b8 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x561258d3b4e0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561258d3b4c8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561258d3b2d8 <col:148> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x561258d3b4a8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x561258d3b478 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x561258d3b398 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561258d3b350 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561258d3b338 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561258d3b2f8 <col:166> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561258d3b380 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561258d3b368 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561258d3b318 <col:184> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x561258d3b430 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561258d3b3e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561258d3b3b8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561258d3b460 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x561258d3b448 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x561258d3b410 <col:212> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561258d3bbb8 <line:796:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x561258d3b610 <col:3> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561258d3bba0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561258d3bb70 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x561258d3bb28 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561258d3bb10 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561258d3b630 <col:20> '_Bool' lvalue Var 0x561258d35ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561258d3bb58 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561258d3bb40 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561258d3b650 <col:36> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x561258d3baf0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x561258d3bac0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x561258d3b860 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561258d3b780 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561258d3b6a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561258d3b690 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561258d3b670 <col:55> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561258d3b760 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561258d3b6f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561258d3b6e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561258d3b6c0 <col:74> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x561258d3b748 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561258d3b730 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561258d3b710 <col:93> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561258d3b840 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561258d3b7d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561258d3b7c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561258d3b7a0 <col:112> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x561258d3b828 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561258d3b810 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561258d3b7f0 <col:131> '_Bool' lvalue Var 0x561258d352b8 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x561258d3baa8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561258d3ba90 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561258d3b880 <col:148> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x561258d3ba70 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x561258d3ba40 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x561258d3b940 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561258d3b8f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561258d3b8e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561258d3b8a0 <col:166> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561258d3b928 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561258d3b910 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561258d3b8c0 <col:184> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x561258d3ba10 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561258d3b990 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561258d3b960 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561258d3ba28 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x561258d3b9e8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x561258d3b9b8 <col:219> 'int' 0
|   |-BinaryOperator 0x561258d3c170 <line:797:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x561258d3bbd8 <col:3> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x561258d3c158 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561258d3c128 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x561258d3c0e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561258d3c0c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561258d3bbf8 <col:20> '_Bool' lvalue Var 0x561258d35ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561258d3c110 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561258d3c0f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561258d3bc18 <col:36> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x561258d3c0a8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x561258d3c078 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x561258d3be28 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561258d3bd48 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561258d3bc70 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561258d3bc58 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561258d3bc38 <col:55> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561258d3bd28 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561258d3bcc0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561258d3bca8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561258d3bc88 <col:74> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x561258d3bd10 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561258d3bcf8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561258d3bcd8 <col:93> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561258d3be08 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561258d3bda0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561258d3bd88 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561258d3bd68 <col:112> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x561258d3bdf0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561258d3bdd8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561258d3bdb8 <col:131> '_Bool' lvalue Var 0x561258d352b8 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x561258d3c060 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561258d3c048 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561258d3be48 <col:148> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x561258d3c028 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x561258d3bff8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x561258d3bf08 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561258d3bec0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561258d3bea8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561258d3be68 <col:166> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561258d3bef0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561258d3bed8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561258d3be88 <col:184> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x561258d3bfa0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561258d3bf58 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561258d3bf28 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561258d3bfe0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x561258d3bfb8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x561258d3bf80 <col:212> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x561258d3c738 <line:798:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x561258d3c190 <col:3> '_Bool' lvalue Var 0x561258d352b8 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x561258d3c720 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561258d3c6f0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x561258d3c6a8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561258d3c690 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561258d3c1b0 <col:20> '_Bool' lvalue Var 0x561258d35ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561258d3c6d8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561258d3c6c0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561258d3c1d0 <col:36> '_Bool' lvalue Var 0x561258d352b8 'a$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x561258d3c670 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x561258d3c640 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x561258d3c3e0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561258d3c300 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561258d3c228 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561258d3c210 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561258d3c1f0 <col:55> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561258d3c2e0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561258d3c278 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561258d3c260 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561258d3c240 <col:74> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x561258d3c2c8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561258d3c2b0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561258d3c290 <col:93> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561258d3c3c0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561258d3c358 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561258d3c340 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561258d3c320 <col:112> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x561258d3c3a8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561258d3c390 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561258d3c370 <col:131> '_Bool' lvalue Var 0x561258d352b8 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x561258d3c628 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561258d3c610 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561258d3c400 <col:148> '_Bool' lvalue Var 0x561258d352b8 'a$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x561258d3c5f0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x561258d3c5c0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x561258d3c4c0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561258d3c478 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561258d3c460 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561258d3c420 <col:166> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561258d3c4a8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561258d3c490 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561258d3c440 <col:184> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x561258d3c590 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561258d3c510 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561258d3c4e0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561258d3c5a8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x561258d3c568 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x561258d3c538 <col:219> 'int' 0
|   |-BinaryOperator 0x561258d3c7b0 <line:799:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561258d3c758 <col:3> 'int' lvalue Var 0x561258d34b68 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x561258d3c798 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561258d3c778 <col:25> 'int' lvalue Var 0x561258d34c88 'a' 'int'
|   |-BinaryOperator 0x561258d3c8e0 <line:800:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x561258d3c7d0 <col:3> 'int' lvalue Var 0x561258d34c88 'a' 'int'
|   | `-ConditionalOperator 0x561258d3c8b0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x561258d3c868 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561258d3c850 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561258d3c7f0 <col:7> '_Bool' lvalue Var 0x561258d34d20 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x561258d3c880 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561258d3c810 <col:25> 'int' lvalue Var 0x561258d34da0 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x561258d3c898 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x561258d3c830 <col:37> 'int' lvalue Var 0x561258d34c88 'a' 'int'
|   |-BinaryOperator 0x561258d3c978 <line:801:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x561258d3c900 <col:3> '_Bool' lvalue Var 0x561258d34d20 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x561258d3c950 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561258d3c920 <col:28> 'int' 0
|   |-CallExpr 0x561258d3c9d0 <line:802:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561258d3c9b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d3c998 <col:3> 'void ()' Function 0x561258cdb410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561258d3ca28 <line:803:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561258d3ca10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d3c9f0 <col:3> 'void ()' Function 0x561258cdb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561258d3cd10 <line:804:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561258d3ca48 <col:3> 'int' lvalue Var 0x561258d34c88 'a' 'int'
|   | `-ConditionalOperator 0x561258d3cce0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561258d3cb08 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561258d3cac0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561258d3caa8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561258d3ca68 <col:7> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561258d3caf0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561258d3cad8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561258d3ca88 <col:25> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x561258d3ccc8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561258d3cb28 <col:42> 'int' lvalue Var 0x561258d35430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x561258d3cca8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561258d3cc78 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561258d3cbe8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561258d3cba0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561258d3cb88 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561258d3cb48 <col:55> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561258d3cbd0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561258d3cbb8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561258d3cb68 <col:73> '_Bool' lvalue Var 0x561258d352b8 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x561258d3cc48 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561258d3cc08 <col:90> 'int' lvalue Var 0x561258d35528 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561258d3cc60 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561258d3cc28 <col:102> 'int' lvalue Var 0x561258d34c88 'a' 'int'
|   |-BinaryOperator 0x561258d3cf18 <line:805:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561258d3cd30 <col:3> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561258d3cf00 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561258d3ced0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561258d3cdf0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561258d3cda8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561258d3cd90 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561258d3cd50 <col:20> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561258d3cdd8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561258d3cdc0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561258d3cd70 <col:38> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x561258d3ce88 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561258d3ce40 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561258d3ce10 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561258d3ceb8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561258d3cea0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561258d3ce68 <col:66> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561258d3d210 <line:806:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561258d3cf38 <col:3> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561258d3d1f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561258d3d1c8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561258d3d0e8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561258d3d008 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561258d3cfb0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561258d3cf98 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561258d3cf58 <col:20> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561258d3cff0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561258d3cfc8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561258d3cf78 <col:38> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x561258d3d0c8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561258d3d080 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561258d3d068 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561258d3d028 <col:56> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561258d3d0b0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561258d3d098 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561258d3d048 <col:74> '_Bool' lvalue Var 0x561258d352b8 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x561258d3d180 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561258d3d138 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561258d3d108 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561258d3d1b0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561258d3d198 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561258d3d160 <col:102> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561258d3d418 <line:807:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561258d3d230 <col:3> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x561258d3d400 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561258d3d3d0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561258d3d2f0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561258d3d2a8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561258d3d290 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561258d3d250 <col:20> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561258d3d2d8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561258d3d2c0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561258d3d270 <col:38> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x561258d3d388 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561258d3d340 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561258d3d310 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561258d3d3b8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561258d3d3a0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561258d3d368 <col:66> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x561258d3d700 <line:808:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561258d3d438 <col:3> '_Bool' lvalue Var 0x561258d352b8 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x561258d3d6e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561258d3d6b8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561258d3d5d8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561258d3d4f8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561258d3d4b0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561258d3d498 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561258d3d458 <col:20> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561258d3d4e0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561258d3d4c8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561258d3d478 <col:38> '_Bool' lvalue Var 0x561258d35060 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x561258d3d5b8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561258d3d570 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561258d3d558 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561258d3d518 <col:56> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561258d3d5a0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561258d3d588 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561258d3d538 <col:74> '_Bool' lvalue Var 0x561258d352b8 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x561258d3d670 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561258d3d628 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561258d3d5f8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561258d3d6a0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561258d3d688 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561258d3d650 <col:102> '_Bool' lvalue Var 0x561258d352b8 'a$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x561258d3d758 <line:809:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561258d3d740 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d3d720 <col:3> 'void ()' Function 0x561258cdb410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561258d3d7b0 <line:810:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561258d3d798 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d3d778 <col:3> 'void ()' Function 0x561258cdb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561258d3d868 <line:811:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561258d3d7d0 <col:3> 'int' lvalue Var 0x561258d346e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561258d3d848 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561258d3d830 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561258d3d7f0 <col:22> 'int' lvalue Var 0x561258d346e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561258d3d810 <col:41> 'int' 1
|   |-CallExpr 0x561258d3d8c0 <line:812:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561258d3d8a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561258d3d888 <col:3> 'void ()' Function 0x561258cdb410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561258d3d938 <line:813:3, col:36>
|     `-CallExpr 0x561258d3d918 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561258d3d900 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561258d3d8e0 <col:10> 'void *(void)' Function 0x561258cdae68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561258d3da68 prev 0x561258d34430 <line:815:1, line:817:1> line:815:6 fence 'void ()'
| `-CompoundStmt 0x561258d3db08 <line:816:1, line:817:1>
|-FunctionDecl 0x561258d3db38 prev 0x561258d344f0 <line:818:1, line:820:1> line:818:6 isync 'void ()'
| `-CompoundStmt 0x561258d3dbd8 <line:819:1, line:820:1>
|-FunctionDecl 0x561258d3dc08 prev 0x561258d345b0 <line:821:1, line:823:1> line:821:6 lwfence 'void ()'
| `-CompoundStmt 0x561258d3dca8 <line:822:1, line:823:1>
`-FunctionDecl 0x561258d3dd18 <line:824:1, line:850:1> line:824:5 main 'int ()'
  `-CompoundStmt 0x561258d3fc80 <line:825:1, line:850:1>
    |-DeclStmt 0x561258d3de30 <line:826:3, col:18>
    | `-VarDecl 0x561258d3ddc8 <col:3, col:13> col:13 used t1339 'pthread_t':'unsigned long'
    |-CallExpr 0x561258d3e048 <line:827:3, col:54> 'int'
    | |-ImplicitCastExpr 0x561258d3e030 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561258d3de48 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561258d1b8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561258d3de88 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561258d3de68 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561258d3ddc8 't1339' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561258d3e088 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561258d3df00 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x561258d3ded8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561258d3dea0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x561258d3e0a0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561258d3df20 <col:39> 'void *(void *)' Function 0x561258d35bf8 'P0' 'void *(void *)'
    | `-ParenExpr 0x561258d3dfa0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x561258d3df78 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561258d3df40 <col:52> 'int' 0
    |-DeclStmt 0x561258d3e130 <line:828:3, col:18>
    | `-VarDecl 0x561258d3e0c8 <col:3, col:13> col:13 used t1340 'pthread_t':'unsigned long'
    |-CallExpr 0x561258d3e2d8 <line:829:3, col:54> 'int'
    | |-ImplicitCastExpr 0x561258d3e2c0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561258d3e148 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561258d1b8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561258d3e188 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561258d3e168 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561258d3e0c8 't1340' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561258d3e318 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561258d3e200 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x561258d3e1d8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561258d3e1a0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x561258d3e330 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561258d3e220 <col:39> 'void *(void *)' Function 0x561258d37650 'P1' 'void *(void *)'
    | `-ParenExpr 0x561258d3e2a0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x561258d3e278 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561258d3e240 <col:52> 'int' 0
    |-DeclStmt 0x561258d3e3c0 <line:830:3, col:18>
    | `-VarDecl 0x561258d3e358 <col:3, col:13> col:13 used t1341 'pthread_t':'unsigned long'
    |-CallExpr 0x561258d3e568 <line:831:3, col:54> 'int'
    | |-ImplicitCastExpr 0x561258d3e550 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561258d3e3d8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561258d1b8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561258d3e418 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561258d3e3f8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561258d3e358 't1341' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561258d3e5a8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561258d3e490 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x561258d3e468 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561258d3e430 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x561258d3e5c0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561258d3e4b0 <col:39> 'void *(void *)' Function 0x561258d389e8 'P2' 'void *(void *)'
    | `-ParenExpr 0x561258d3e530 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x561258d3e508 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561258d3e4d0 <col:52> 'int' 0
    |-DeclStmt 0x561258d3e650 <line:832:3, col:18>
    | `-VarDecl 0x561258d3e5e8 <col:3, col:13> col:13 used t1342 'pthread_t':'unsigned long'
    |-CallExpr 0x561258d3e7f8 <line:833:3, col:54> 'int'
    | |-ImplicitCastExpr 0x561258d3e7e0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561258d3e668 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561258d1b8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561258d3e6a8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561258d3e688 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561258d3e5e8 't1342' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561258d3e838 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561258d3e720 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x561258d3e6f8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561258d3e6c0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x561258d3e850 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561258d3e740 <col:39> 'void *(void *)' Function 0x561258d39d68 'P3' 'void *(void *)'
    | `-ParenExpr 0x561258d3e7c0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x561258d3e798 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561258d3e760 <col:52> 'int' 0
    |-CallExpr 0x561258d3e8a0 <line:834:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561258d3e888 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561258d3e868 <col:3> 'void ()' Function 0x561258cdb350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561258d3e970 <line:835:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x561258d3e8c0 <col:3> '_Bool' lvalue Var 0x561258d35618 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x561258d3e958 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x561258d3e938 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x561258d3e920 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x561258d3e8e0 <col:21> 'int' lvalue Var 0x561258d346e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x561258d3e900 <col:41> 'int' 4
    |-CallExpr 0x561258d3e9c8 <line:836:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561258d3e9b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561258d3e990 <col:3> 'void ()' Function 0x561258cdb410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561258d3ea40 <line:837:3, col:36> 'void'
    | |-ImplicitCastExpr 0x561258d3ea28 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561258d3e9e8 <col:3> 'void (int)' Function 0x561258cdaca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x561258d3ea80 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x561258d3ea68 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x561258d3ea08 <col:21> '_Bool' lvalue Var 0x561258d35618 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x561258d3ead0 <line:838:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561258d3eab8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561258d3ea98 <col:3> 'void ()' Function 0x561258cdb350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561258d3edb8 <line:839:3, col:103> 'int' '='
    | |-DeclRefExpr 0x561258d3eaf0 <col:3> 'int' lvalue Var 0x561258d34c88 'a' 'int'
    | `-ConditionalOperator 0x561258d3ed88 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x561258d3ebb0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x561258d3eb68 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x561258d3eb50 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x561258d3eb10 <col:7> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x561258d3eb98 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x561258d3eb80 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x561258d3eb30 <col:25> '_Bool' lvalue Var 0x561258d34e18 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x561258d3ed70 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x561258d3ebd0 <col:42> 'int' lvalue Var 0x561258d35430 'a$w_buff0' 'int'
    |   `-ParenExpr 0x561258d3ed50 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x561258d3ed20 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x561258d3ec90 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x561258d3ec48 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x561258d3ec30 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x561258d3ebf0 <col:55> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x561258d3ec78 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x561258d3ec60 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x561258d3ec10 <col:73> '_Bool' lvalue Var 0x561258d350d8 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x561258d3ecf0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x561258d3ecb0 <col:90> 'int' lvalue Var 0x561258d35528 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x561258d3ed08 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x561258d3ecd0 <col:102> 'int' lvalue Var 0x561258d34c88 'a' 'int'
    |-BinaryOperator 0x561258d3efc0 <line:840:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x561258d3edd8 <col:3> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x561258d3efa8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561258d3ef78 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x561258d3ee98 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x561258d3ee50 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x561258d3ee38 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x561258d3edf8 <col:20> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x561258d3ee80 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x561258d3ee68 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x561258d3ee18 <col:38> '_Bool' lvalue Var 0x561258d34e18 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561258d3ef30 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561258d3eee8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561258d3eeb8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x561258d3ef60 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561258d3ef48 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561258d3ef10 <col:66> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x561258d3f2b8 <line:841:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x561258d3efe0 <col:3> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x561258d3f2a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561258d3f270 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x561258d3f190 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x561258d3f0b0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x561258d3f068 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x561258d3f050 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x561258d3f010 <col:20> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x561258d3f098 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x561258d3f080 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x561258d3f030 <col:38> '_Bool' lvalue Var 0x561258d34e18 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x561258d3f170 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x561258d3f128 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x561258d3f110 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x561258d3f0d0 <col:56> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x561258d3f158 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x561258d3f140 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x561258d3f0f0 <col:74> '_Bool' lvalue Var 0x561258d350d8 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561258d3f228 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561258d3f1e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561258d3f1b0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x561258d3f258 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561258d3f240 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561258d3f208 <col:102> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x561258d3f4c0 <line:842:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x561258d3f2d8 <col:3> '_Bool' lvalue Var 0x561258d34e18 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561258d3f4a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561258d3f478 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x561258d3f398 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x561258d3f350 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x561258d3f338 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x561258d3f2f8 <col:20> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x561258d3f380 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x561258d3f368 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x561258d3f318 <col:38> '_Bool' lvalue Var 0x561258d34e18 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561258d3f430 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561258d3f3e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561258d3f3b8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x561258d3f460 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561258d3f448 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561258d3f410 <col:66> '_Bool' lvalue Var 0x561258d34e18 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x561258d3f7a8 <line:843:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x561258d3f4e0 <col:3> '_Bool' lvalue Var 0x561258d350d8 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561258d3f790 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561258d3f760 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x561258d3f680 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x561258d3f5a0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x561258d3f558 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x561258d3f540 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x561258d3f500 <col:20> '_Bool' lvalue Var 0x561258d354a8 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x561258d3f588 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x561258d3f570 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x561258d3f520 <col:38> '_Bool' lvalue Var 0x561258d34e18 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x561258d3f660 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x561258d3f618 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x561258d3f600 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x561258d3f5c0 <col:56> '_Bool' lvalue Var 0x561258d355a0 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x561258d3f648 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x561258d3f630 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x561258d3f5e0 <col:74> '_Bool' lvalue Var 0x561258d350d8 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561258d3f718 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561258d3f6d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561258d3f6a0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x561258d3f748 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561258d3f730 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561258d3f6f8 <col:102> '_Bool' lvalue Var 0x561258d350d8 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x561258d3f800 <line:844:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561258d3f7e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561258d3f7c8 <col:3> 'void ()' Function 0x561258cdb410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561258d3f858 <line:845:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561258d3f840 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561258d3f820 <col:3> 'void ()' Function 0x561258cdb350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561258d3fb28 <line:846:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x561258d3f878 <col:3> '_Bool' lvalue Var 0x561258d35690 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x561258d3fb10 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x561258d3faf8 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x561258d3fad8 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x561258d3fab8 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x561258d3fa20 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x561258d3f988 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x561258d3f8f0 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x561258d3f8d8 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x561258d3f898 <col:23> 'int' lvalue Var 0x561258d34808 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x561258d3f8b8 <col:46> 'int' 0
    |         | | `-BinaryOperator 0x561258d3f968 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x561258d3f950 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x561258d3f910 <col:51> 'int' lvalue Var 0x561258d34928 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x561258d3f930 <col:74> 'int' 0
    |         | `-BinaryOperator 0x561258d3fa00 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x561258d3f9e8 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x561258d3f9a8 <col:79> 'int' lvalue Var 0x561258d34a48 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x561258d3f9c8 <col:102> 'int' 0
    |         `-BinaryOperator 0x561258d3fa98 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x561258d3fa80 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x561258d3fa40 <col:107> 'int' lvalue Var 0x561258d34b68 '__unbuffered_p3_EAX' 'int'
    |           `-IntegerLiteral 0x561258d3fa60 <col:130> 'int' 0
    |-CallExpr 0x561258d3fb80 <line:847:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561258d3fb68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561258d3fb48 <col:3> 'void ()' Function 0x561258cdb410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561258d3fbf8 <line:848:3, col:36> 'void'
    | |-ImplicitCastExpr 0x561258d3fbe0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561258d3fba0 <col:3> 'void (int)' Function 0x561258cdb0d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x561258d3fc38 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x561258d3fc20 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x561258d3fbc0 <col:21> '_Bool' lvalue Var 0x561258d35690 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x561258d3fc70 <line:849:3, col:10>
      `-IntegerLiteral 0x561258d3fc50 <col:10> 'int' 0
