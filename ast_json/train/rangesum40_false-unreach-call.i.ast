TranslationUnitDecl 0x55594961ef88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55594961f848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55594961f520 '__int128'
|-TypedefDecl 0x55594961f8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55594961f540 'unsigned __int128'
|-TypedefDecl 0x55594961fbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55594961f990 'struct __NSConstantString_tag'
|   `-Record 0x55594961f910 '__NSConstantString_tag'
|-TypedefDecl 0x55594961fc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55594961fc20 'char *'
|   `-BuiltinType 0x55594961f020 'char'
|-TypedefDecl 0x55594965eb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55594961ff00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55594961fd40 'struct __va_list_tag'
|     `-Record 0x55594961fcc0 '__va_list_tag'
|-FunctionDecl 0x55594965ec40 <reducercommutativity/rangesum40_false-unreach-call.i:1:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55594965ed88 <line:2:1, col:34> col:12 used __VERIFIER_nondet_int 'int ()' extern
|-FunctionDecl 0x55594965f040 <line:4:1, line:9:1> line:4:6 used init_nondet 'void (int *)'
| |-ParmVarDecl 0x55594965ef38 <col:18, col:26> col:22 used x 'int *':'int *'
| `-CompoundStmt 0x55594965f418 <col:29, line:9:1>
|   |-DeclStmt 0x55594965f168 <line:5:3, col:8>
|   | `-VarDecl 0x55594965f100 <col:3, col:7> col:7 used i 'int'
|   `-ForStmt 0x55594965f3e0 <line:6:3, line:8:3>
|     |-BinaryOperator 0x55594965f1c0 <line:6:8, col:12> 'int' '='
|     | |-DeclRefExpr 0x55594965f180 <col:8> 'int' lvalue Var 0x55594965f100 'i' 'int'
|     | `-IntegerLiteral 0x55594965f1a0 <col:12> 'int' 0
|     |-<<<NULL>>>
|     |-BinaryOperator 0x55594965f238 <col:15, col:19> 'int' '<'
|     | |-ImplicitCastExpr 0x55594965f220 <col:15> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55594965f1e0 <col:15> 'int' lvalue Var 0x55594965f100 'i' 'int'
|     | `-IntegerLiteral 0x55594965f200 <col:19> 'int' 40
|     |-UnaryOperator 0x55594965f278 <col:23, col:24> 'int' postfix '++'
|     | `-DeclRefExpr 0x55594965f258 <col:23> 'int' lvalue Var 0x55594965f100 'i' 'int'
|     `-CompoundStmt 0x55594965f3c8 <col:28, line:8:3>
|       `-BinaryOperator 0x55594965f3a8 <line:7:5, col:34> 'int' '='
|         |-ArraySubscriptExpr 0x55594965f300 <col:5, col:8> 'int' lvalue
|         | |-ImplicitCastExpr 0x55594965f2d0 <col:5> 'int *':'int *' <LValueToRValue>
|         | | `-DeclRefExpr 0x55594965f290 <col:5> 'int *':'int *' lvalue ParmVar 0x55594965ef38 'x' 'int *':'int *'
|         | `-ImplicitCastExpr 0x55594965f2e8 <col:7> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55594965f2b0 <col:7> 'int' lvalue Var 0x55594965f100 'i' 'int'
|         `-CallExpr 0x55594965f388 <col:12, col:34> 'int'
|           `-ImplicitCastExpr 0x55594965f370 <col:12> 'int (*)()' <FunctionToPointerDecay>
|             `-DeclRefExpr 0x55594965f320 <col:12> 'int ()' Function 0x55594965ed88 '__VERIFIER_nondet_int' 'int ()'
|-FunctionDecl 0x55594965f5a8 <line:11:1, line:27:1> line:11:5 used rangesum 'int (int *)'
| |-ParmVarDecl 0x55594965f498 <col:15, col:23> col:19 used x 'int *':'int *'
| `-CompoundStmt 0x5559496843f0 <line:12:1, line:27:1>
|   |-DeclStmt 0x55594965f6d0 <line:13:3, col:8>
|   | `-VarDecl 0x55594965f668 <col:3, col:7> col:7 used i 'int'
|   |-DeclStmt 0x55594965f768 <line:14:3, col:16>
|   | `-VarDecl 0x55594965f700 <col:3, col:13> col:13 used ret 'long long'
|   |-BinaryOperator 0x55594965f7d8 <line:15:3, col:9> 'long long' '='
|   | |-DeclRefExpr 0x55594965f780 <col:3> 'long long' lvalue Var 0x55594965f700 'ret' 'long long'
|   | `-ImplicitCastExpr 0x55594965f7c0 <col:9> 'long long' <IntegralCast>
|   |   `-IntegerLiteral 0x55594965f7a0 <col:9> 'int' 0
|   |-DeclStmt 0x55594965f898 <line:16:3, col:14>
|   | `-VarDecl 0x55594965f810 <col:3, col:13> col:7 used cnt 'int' cinit
|   |   `-IntegerLiteral 0x55594965f878 <col:13> 'int' 0
|   |-ForStmt 0x555949684218 <line:17:3, line:22:3>
|   | |-BinaryOperator 0x55594965f8f0 <line:17:8, col:12> 'int' '='
|   | | |-DeclRefExpr 0x55594965f8b0 <col:8> 'int' lvalue Var 0x55594965f668 'i' 'int'
|   | | `-IntegerLiteral 0x55594965f8d0 <col:12> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x55594965f968 <col:15, col:19> 'int' '<'
|   | | |-ImplicitCastExpr 0x55594965f950 <col:15> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x55594965f910 <col:15> 'int' lvalue Var 0x55594965f668 'i' 'int'
|   | | `-IntegerLiteral 0x55594965f930 <col:19> 'int' 40
|   | |-UnaryOperator 0x55594965f9a8 <col:23, col:24> 'int' postfix '++'
|   | | `-DeclRefExpr 0x55594965f988 <col:23> 'int' lvalue Var 0x55594965f668 'i' 'int'
|   | `-CompoundStmt 0x555949684200 <col:28, line:22:3>
|   |   `-IfStmt 0x5559496841e8 <line:18:5, line:21:5>
|   |     |-BinaryOperator 0x55594965fa58 <line:18:9, col:16> 'int' '>'
|   |     | |-ImplicitCastExpr 0x55594965fa40 <col:9> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x55594965f9c0 <col:9> 'int' lvalue Var 0x55594965f668 'i' 'int'
|   |     | `-BinaryOperator 0x55594965fa20 <col:13, col:16> 'int' '/'
|   |     |   |-IntegerLiteral 0x55594965f9e0 <col:13> 'int' 40
|   |     |   `-IntegerLiteral 0x55594965fa00 <col:16> 'int' 2
|   |     `-CompoundStmt 0x5559496841c8 <col:18, line:21:5>
|   |       |-BinaryOperator 0x5559496840f0 <line:19:8, col:23> 'long long' '='
|   |       | |-DeclRefExpr 0x55594965fa78 <col:8> 'long long' lvalue Var 0x55594965f700 'ret' 'long long'
|   |       | `-BinaryOperator 0x5559496840d0 <col:14, col:23> 'long long' '+'
|   |       |   |-ImplicitCastExpr 0x55594965fb48 <col:14> 'long long' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x55594965fa98 <col:14> 'long long' lvalue Var 0x55594965f700 'ret' 'long long'
|   |       |   `-ImplicitCastExpr 0x5559496840b8 <col:20, col:23> 'long long' <IntegralCast>
|   |       |     `-ImplicitCastExpr 0x5559496840a0 <col:20, col:23> 'int' <LValueToRValue>
|   |       |       `-ArraySubscriptExpr 0x55594965fb28 <col:20, col:23> 'int' lvalue
|   |       |         |-ImplicitCastExpr 0x55594965faf8 <col:20> 'int *':'int *' <LValueToRValue>
|   |       |         | `-DeclRefExpr 0x55594965fab8 <col:20> 'int *':'int *' lvalue ParmVar 0x55594965f498 'x' 'int *':'int *'
|   |       |         `-ImplicitCastExpr 0x55594965fb10 <col:22> 'int' <LValueToRValue>
|   |       |           `-DeclRefExpr 0x55594965fad8 <col:22> 'int' lvalue Var 0x55594965f668 'i' 'int'
|   |       `-BinaryOperator 0x5559496841a8 <line:20:8, col:20> 'int' '='
|   |         |-DeclRefExpr 0x555949684110 <col:8> 'int' lvalue Var 0x55594965f810 'cnt' 'int'
|   |         `-BinaryOperator 0x555949684188 <col:14, col:20> 'int' '+'
|   |           |-ImplicitCastExpr 0x555949684170 <col:14> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x555949684130 <col:14> 'int' lvalue Var 0x55594965f810 'cnt' 'int'
|   |           `-IntegerLiteral 0x555949684150 <col:20> 'int' 1
|   `-IfStmt 0x5559496843c8 <line:23:3, line:26:12> has_else
|     |-BinaryOperator 0x5559496842a8 <line:23:8, col:14> 'int' '!='
|     | |-ImplicitCastExpr 0x555949684290 <col:8> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x555949684250 <col:8> 'int' lvalue Var 0x55594965f810 'cnt' 'int'
|     | `-IntegerLiteral 0x555949684270 <col:14> 'int' 0
|     |-ReturnStmt 0x555949684388 <line:24:5, col:18>
|     | `-ImplicitCastExpr 0x555949684370 <col:12, col:18> 'int' <IntegralCast>
|     |   `-BinaryOperator 0x555949684350 <col:12, col:18> 'long long' '/'
|     |     |-ImplicitCastExpr 0x555949684308 <col:12> 'long long' <LValueToRValue>
|     |     | `-DeclRefExpr 0x5559496842c8 <col:12> 'long long' lvalue Var 0x55594965f700 'ret' 'long long'
|     |     `-ImplicitCastExpr 0x555949684338 <col:18> 'long long' <IntegralCast>
|     |       `-ImplicitCastExpr 0x555949684320 <col:18> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x5559496842e8 <col:18> 'int' lvalue Var 0x55594965f810 'cnt' 'int'
|     `-ReturnStmt 0x5559496843b8 <line:26:5, col:12>
|       `-IntegerLiteral 0x555949684398 <col:12> 'int' 0
`-FunctionDecl 0x555949684458 <line:29:1, line:53:1> line:29:5 main 'int ()'
  `-CompoundStmt 0x5559496856a8 <line:30:1, line:53:1>
    |-DeclStmt 0x5559496845c0 <line:31:3, col:12>
    | `-VarDecl 0x555949684558 <col:3, col:11> col:7 used x 'int [40]'
    |-CallExpr 0x555949684698 <line:32:3, col:16> 'void'
    | |-ImplicitCastExpr 0x555949684680 <col:3> 'void (*)(int *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5559496845d8 <col:3> 'void (int *)' Function 0x55594965f040 'init_nondet' 'void (int *)'
    | `-ImplicitCastExpr 0x5559496846c0 <col:15> 'int *' <ArrayToPointerDecay>
    |   `-DeclRefExpr 0x5559496845f8 <col:15> 'int [40]' lvalue Var 0x555949684558 'x' 'int [40]'
    |-DeclStmt 0x555949684758 <line:33:3, col:11>
    | `-VarDecl 0x5559496846f0 <col:3, col:7> col:7 used temp 'int'
    |-DeclStmt 0x5559496847f0 <line:34:3, col:10>
    | `-VarDecl 0x555949684788 <col:3, col:7> col:7 used ret 'int'
    |-DeclStmt 0x555949684888 <line:35:3, col:11>
    | `-VarDecl 0x555949684820 <col:3, col:7> col:7 used ret2 'int'
    |-DeclStmt 0x555949684920 <line:36:3, col:11>
    | `-VarDecl 0x5559496848b8 <col:3, col:7> col:7 used ret5 'int'
    |-BinaryOperator 0x555949684a58 <line:38:3, col:19> 'int' '='
    | |-DeclRefExpr 0x555949684938 <col:3> 'int' lvalue Var 0x555949684788 'ret' 'int'
    | `-CallExpr 0x555949684a18 <col:9, col:19> 'int'
    |   |-ImplicitCastExpr 0x555949684a00 <col:9> 'int (*)(int *)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x555949684958 <col:9> 'int (int *)' Function 0x55594965f5a8 'rangesum' 'int (int *)'
    |   `-ImplicitCastExpr 0x555949684a40 <col:18> 'int *' <ArrayToPointerDecay>
    |     `-DeclRefExpr 0x555949684978 <col:18> 'int [40]' lvalue Var 0x555949684558 'x' 'int [40]'
    |-BinaryOperator 0x555949684b28 <line:40:3, col:11> 'int' '='
    | |-DeclRefExpr 0x555949684a78 <col:3> 'int' lvalue Var 0x5559496846f0 'temp' 'int'
    | `-ImplicitCastExpr 0x555949684b10 <col:8, col:11> 'int' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x555949684af0 <col:8, col:11> 'int' lvalue
    |     |-ImplicitCastExpr 0x555949684ad8 <col:8> 'int *' <ArrayToPointerDecay>
    |     | `-DeclRefExpr 0x555949684a98 <col:8> 'int [40]' lvalue Var 0x555949684558 'x' 'int [40]'
    |     `-IntegerLiteral 0x555949684ab8 <col:10> 'int' 0
    |-BinaryOperator 0x555949684c50 <col:13, col:23> 'int' '='
    | |-ArraySubscriptExpr 0x555949684ba0 <col:13, col:16> 'int' lvalue
    | | |-ImplicitCastExpr 0x555949684b88 <col:13> 'int *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x555949684b48 <col:13> 'int [40]' lvalue Var 0x555949684558 'x' 'int [40]'
    | | `-IntegerLiteral 0x555949684b68 <col:15> 'int' 0
    | `-ImplicitCastExpr 0x555949684c38 <col:20, col:23> 'int' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x555949684c18 <col:20, col:23> 'int' lvalue
    |     |-ImplicitCastExpr 0x555949684c00 <col:20> 'int *' <ArrayToPointerDecay>
    |     | `-DeclRefExpr 0x555949684bc0 <col:20> 'int [40]' lvalue Var 0x555949684558 'x' 'int [40]'
    |     `-IntegerLiteral 0x555949684be0 <col:22> 'int' 1
    |-BinaryOperator 0x555949684d20 <col:26, col:33> 'int' '='
    | |-ArraySubscriptExpr 0x555949684cc8 <col:26, col:29> 'int' lvalue
    | | |-ImplicitCastExpr 0x555949684cb0 <col:26> 'int *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x555949684c70 <col:26> 'int [40]' lvalue Var 0x555949684558 'x' 'int [40]'
    | | `-IntegerLiteral 0x555949684c90 <col:28> 'int' 1
    | `-ImplicitCastExpr 0x555949684d08 <col:33> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x555949684ce8 <col:33> 'int' lvalue Var 0x5559496846f0 'temp' 'int'
    |-BinaryOperator 0x555949684df8 <line:41:3, col:20> 'int' '='
    | |-DeclRefExpr 0x555949684d40 <col:3> 'int' lvalue Var 0x555949684820 'ret2' 'int'
    | `-CallExpr 0x555949684db8 <col:10, col:20> 'int'
    |   |-ImplicitCastExpr 0x555949684da0 <col:10> 'int (*)(int *)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x555949684d60 <col:10> 'int (int *)' Function 0x55594965f5a8 'rangesum' 'int (int *)'
    |   `-ImplicitCastExpr 0x555949684de0 <col:19> 'int *' <ArrayToPointerDecay>
    |     `-DeclRefExpr 0x555949684d80 <col:19> 'int [40]' lvalue Var 0x555949684558 'x' 'int [40]'
    |-BinaryOperator 0x555949684ec8 <line:42:3, col:11> 'int' '='
    | |-DeclRefExpr 0x555949684e18 <col:3> 'int' lvalue Var 0x5559496846f0 'temp' 'int'
    | `-ImplicitCastExpr 0x555949684eb0 <col:8, col:11> 'int' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x555949684e90 <col:8, col:11> 'int' lvalue
    |     |-ImplicitCastExpr 0x555949684e78 <col:8> 'int *' <ArrayToPointerDecay>
    |     | `-DeclRefExpr 0x555949684e38 <col:8> 'int [40]' lvalue Var 0x555949684558 'x' 'int [40]'
    |     `-IntegerLiteral 0x555949684e58 <col:10> 'int' 0
    |-ForStmt 0x555949685260 <line:43:3, line:45:3>
    | |-DeclStmt 0x555949684f88 <line:43:7, col:16>
    | | `-VarDecl 0x555949684f00 <col:7, col:14> col:11 used i 'int' cinit
    | |   `-IntegerLiteral 0x555949684f68 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x555949685038 <col:18, col:24> 'int' '<'
    | | |-ImplicitCastExpr 0x555949685020 <col:18> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x555949684fa0 <col:18> 'int' lvalue Var 0x555949684f00 'i' 'int'
    | | `-BinaryOperator 0x555949685000 <col:20, col:24> 'int' '-'
    | |   |-IntegerLiteral 0x555949684fc0 <col:20> 'int' 40
    | |   `-IntegerLiteral 0x555949684fe0 <col:24> 'int' 1
    | |-UnaryOperator 0x555949685078 <col:27, col:28> 'int' postfix '++'
    | | `-DeclRefExpr 0x555949685058 <col:27> 'int' lvalue Var 0x555949684f00 'i' 'int'
    | `-CompoundStmt 0x555949685248 <col:31, line:45:3>
    |   `-BinaryOperator 0x555949685228 <line:44:6, col:18> 'int' '='
    |     |-ArraySubscriptExpr 0x555949685120 <col:6, col:9> 'int' lvalue
    |     | |-ImplicitCastExpr 0x5559496850f0 <col:6> 'int *' <ArrayToPointerDecay>
    |     | | `-DeclRefExpr 0x5559496850b0 <col:6> 'int [40]' lvalue Var 0x555949684558 'x' 'int [40]'
    |     | `-ImplicitCastExpr 0x555949685108 <col:8> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5559496850d0 <col:8> 'int' lvalue Var 0x555949684f00 'i' 'int'
    |     `-ImplicitCastExpr 0x555949685210 <col:13, col:18> 'int' <LValueToRValue>
    |       `-ArraySubscriptExpr 0x5559496851f0 <col:13, col:18> 'int' lvalue
    |         |-ImplicitCastExpr 0x5559496851d8 <col:13> 'int *' <ArrayToPointerDecay>
    |         | `-DeclRefExpr 0x555949685140 <col:13> 'int [40]' lvalue Var 0x555949684558 'x' 'int [40]'
    |         `-BinaryOperator 0x5559496851b8 <col:15, col:17> 'int' '+'
    |           |-ImplicitCastExpr 0x5559496851a0 <col:15> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x555949685160 <col:15> 'int' lvalue Var 0x555949684f00 'i' 'int'
    |           `-IntegerLiteral 0x555949685180 <col:17> 'int' 1
    |-BinaryOperator 0x555949685388 <line:46:3, col:14> 'int' '='
    | |-ArraySubscriptExpr 0x555949685330 <col:3, col:10> 'int' lvalue
    | | |-ImplicitCastExpr 0x555949685318 <col:3> 'int *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x555949685298 <col:3> 'int [40]' lvalue Var 0x555949684558 'x' 'int [40]'
    | | `-BinaryOperator 0x5559496852f8 <col:5, col:9> 'int' '-'
    | |   |-IntegerLiteral 0x5559496852b8 <col:5> 'int' 40
    | |   `-IntegerLiteral 0x5559496852d8 <col:9> 'int' 1
    | `-ImplicitCastExpr 0x555949685370 <col:14> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x555949685350 <col:14> 'int' lvalue Var 0x5559496846f0 'temp' 'int'
    |-BinaryOperator 0x555949685460 <line:47:3, col:20> 'int' '='
    | |-DeclRefExpr 0x5559496853a8 <col:3> 'int' lvalue Var 0x5559496848b8 'ret5' 'int'
    | `-CallExpr 0x555949685420 <col:10, col:20> 'int'
    |   |-ImplicitCastExpr 0x555949685408 <col:10> 'int (*)(int *)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x5559496853c8 <col:10> 'int (int *)' Function 0x55594965f5a8 'rangesum' 'int (int *)'
    |   `-ImplicitCastExpr 0x555949685448 <col:19> 'int *' <ArrayToPointerDecay>
    |     `-DeclRefExpr 0x5559496853e8 <col:19> 'int [40]' lvalue Var 0x555949684558 'x' 'int [40]'
    |-IfStmt 0x555949685660 <line:49:3, line:51:3>
    | |-BinaryOperator 0x5559496855a0 <line:49:6, col:27> 'int' '||'
    | | |-BinaryOperator 0x5559496854f0 <col:6, col:13> 'int' '!='
    | | | |-ImplicitCastExpr 0x5559496854c0 <col:6> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x555949685480 <col:6> 'int' lvalue Var 0x555949684788 'ret' 'int'
    | | | `-ImplicitCastExpr 0x5559496854d8 <col:13> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x5559496854a0 <col:13> 'int' lvalue Var 0x555949684820 'ret2' 'int'
    | | `-BinaryOperator 0x555949685580 <col:21, col:27> 'int' '!='
    | |   |-ImplicitCastExpr 0x555949685550 <col:21> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x555949685510 <col:21> 'int' lvalue Var 0x555949684788 'ret' 'int'
    | |   `-ImplicitCastExpr 0x555949685568 <col:27> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x555949685530 <col:27> 'int' lvalue Var 0x5559496848b8 'ret5' 'int'
    | `-CompoundStmt 0x555949685648 <col:32, line:51:3>
    |   `-CallExpr 0x555949685628 <line:50:5, col:22> 'void'
    |     `-ImplicitCastExpr 0x555949685610 <col:5> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5559496855c0 <col:5> 'void () __attribute__((noreturn))' Function 0x55594965ec40 '__VERIFIER_error' 'void () __attribute__((noreturn))'
    `-ReturnStmt 0x555949685698 <line:52:3, col:10>
      `-IntegerLiteral 0x555949685678 <col:10> 'int' 1
