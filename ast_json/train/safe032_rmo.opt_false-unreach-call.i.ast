TranslationUnitDecl 0x55dff6cdff88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55dff6ce0848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55dff6ce0520 '__int128'
|-TypedefDecl 0x55dff6ce08b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55dff6ce0540 'unsigned __int128'
|-TypedefDecl 0x55dff6ce0bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55dff6ce0990 'struct __NSConstantString_tag'
|   `-Record 0x55dff6ce0910 '__NSConstantString_tag'
|-TypedefDecl 0x55dff6ce0c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55dff6ce0c20 'char *'
|   `-BuiltinType 0x55dff6ce0020 'char'
|-TypedefDecl 0x55dff6d1fb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55dff6ce0f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55dff6ce0d40 'struct __va_list_tag'
|     `-Record 0x55dff6ce0cc0 '__va_list_tag'
|-FunctionDecl 0x55dff6d1fc80 <pthread-wmm/safe032_rmo.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55dff6d1fe50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55dff6d1fd80 <col:31> col:34 'int'
|-FunctionDecl 0x55dff6d1ffc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55dff6d200f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55dff6d20238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55dff6d201a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55dff6d20468 <col:40, col:99>
|   |-IfStmt 0x55dff6d20438 <col:42, col:88>
|   | |-UnaryOperator 0x55dff6d20318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55dff6d20300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55dff6d202e0 <col:47> 'int' lvalue ParmVar 0x55dff6d201a8 'expression' 'int'
|   | `-CompoundStmt 0x55dff6d20420 <col:59, col:88>
|   |   `-LabelStmt 0x55dff6d20408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55dff6d20398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55dff6d20380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55dff6d20330 <col:68> 'void () __attribute__((noreturn))' Function 0x55dff6d200f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55dff6d20450 <col:89>
|   `-ReturnStmt 0x55dff6d20458 <col:91>
|-FunctionDecl 0x55dff6d204b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55dff6d20570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55dff6d208f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55dff6d20628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55dff6d206a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55dff6d20728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55dff6d207a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55dff6d209b0 <line:11:22>
|-FunctionDecl 0x55dff6d45f10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55dff6d20a20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55dff6d20aa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55dff6d45d40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55dff6d45dc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55dff6d45fd0 <line:14:22>
|-FunctionDecl 0x55dff6d46280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55dff6d46040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55dff6d460c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55dff6d46140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55dff6d46338 <line:16:22>
|-TypedefDecl 0x55dff6d463a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55dff6ce00e0 'unsigned char'
|-TypedefDecl 0x55dff6d46418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55dff6ce0100 'unsigned short'
|-TypedefDecl 0x55dff6d46488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55dff6ce0120 'unsigned int'
|-TypedefDecl 0x55dff6d464f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55dff6ce0140 'unsigned long'
|-TypedefDecl 0x55dff6d46568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55dff6ce0040 'signed char'
|-TypedefDecl 0x55dff6d465d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55dff6ce00e0 'unsigned char'
|-TypedefDecl 0x55dff6d46648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55dff6ce0060 'short'
|-TypedefDecl 0x55dff6d466b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55dff6ce0100 'unsigned short'
|-TypedefDecl 0x55dff6d46728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55dff6ce0080 'int'
|-TypedefDecl 0x55dff6d46798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55dff6ce0120 'unsigned int'
|-TypedefDecl 0x55dff6d46808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55dff6ce00a0 'long'
|-TypedefDecl 0x55dff6d46878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55dff6ce0140 'unsigned long'
|-TypedefDecl 0x55dff6d468e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55dff6ce00a0 'long'
|-TypedefDecl 0x55dff6d46958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55dff6ce0140 'unsigned long'
|-TypedefDecl 0x55dff6d469c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55dff6ce0140 'unsigned long'
|-TypedefDecl 0x55dff6d46a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55dff6ce0120 'unsigned int'
|-TypedefDecl 0x55dff6d46aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55dff6ce0120 'unsigned int'
|-TypedefDecl 0x55dff6d46b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55dff6ce0140 'unsigned long'
|-TypedefDecl 0x55dff6d46b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55dff6ce0140 'unsigned long'
|-TypedefDecl 0x55dff6d46bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55dff6ce0120 'unsigned int'
|-TypedefDecl 0x55dff6d46c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55dff6ce0140 'unsigned long'
|-TypedefDecl 0x55dff6d46cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55dff6ce00a0 'long'
|-TypedefDecl 0x55dff6d46d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55dff6ce00a0 'long'
|-TypedefDecl 0x55dff6d46dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55dff6ce0080 'int'
|-RecordDecl 0x55dff6d46e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55dff6d46f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55dff6d47030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55dff6d46fd0 'struct __fsid_t' sugar
|   `-RecordType 0x55dff6d46eb0 '__fsid_t'
|     `-Record 0x55dff6d46e30 ''
|-TypedefDecl 0x55dff6d470b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55dff6ce00a0 'long'
|-TypedefDecl 0x55dff6d47128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55dff6ce0140 'unsigned long'
|-TypedefDecl 0x55dff6d47198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55dff6ce0140 'unsigned long'
|-TypedefDecl 0x55dff6d47208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55dff6ce0120 'unsigned int'
|-TypedefDecl 0x55dff6d47278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55dff6ce00a0 'long'
|-TypedefDecl 0x55dff6d472e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55dff6ce0120 'unsigned int'
|-TypedefDecl 0x55dff6d47358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55dff6ce00a0 'long'
|-TypedefDecl 0x55dff6d473c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55dff6ce0080 'int'
|-TypedefDecl 0x55dff6d47438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55dff6ce0080 'int'
|-TypedefDecl 0x55dff6d474a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55dff6ce0080 'int'
|-TypedefDecl 0x55dff6d47518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55dff6ce07a0 'void *'
|   `-BuiltinType 0x55dff6cdffe0 'void'
|-TypedefDecl 0x55dff6d47588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55dff6ce00a0 'long'
|-TypedefDecl 0x55dff6d475f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55dff6ce00a0 'long'
|-TypedefDecl 0x55dff6d47668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55dff6ce00a0 'long'
|-TypedefDecl 0x55dff6d476d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55dff6ce0140 'unsigned long'
|-TypedefDecl 0x55dff6d47748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55dff6ce0140 'unsigned long'
|-TypedefDecl 0x55dff6d477b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55dff6ce0140 'unsigned long'
|-TypedefDecl 0x55dff6d47828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55dff6ce0140 'unsigned long'
|-TypedefDecl 0x55dff6d47898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55dff6ce00a0 'long'
|-TypedefDecl 0x55dff6d47908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55dff6ce00a0 'long'
|-TypedefDecl 0x55dff6d47978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55dff6ce00a0 'long'
|-TypedefDecl 0x55dff6d479e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55dff6ce0140 'unsigned long'
|-TypedefDecl 0x55dff6d47a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55dff6d47a40 '__off64_t' sugar
|   |-Typedef 0x55dff6d46d68 '__off64_t'
|   `-BuiltinType 0x55dff6ce00a0 'long'
|-TypedefDecl 0x55dff6d47b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55dff6d47b30 '__quad_t *'
|   `-TypedefType 0x55dff6d47ad0 '__quad_t' sugar
|     |-Typedef 0x55dff6d468e8 '__quad_t'
|     `-BuiltinType 0x55dff6ce00a0 'long'
|-TypedefDecl 0x55dff6d47be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55dff6ce0c20 'char *'
|   `-BuiltinType 0x55dff6ce0020 'char'
|-TypedefDecl 0x55dff6d47c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55dff6ce00a0 'long'
|-TypedefDecl 0x55dff6d47cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55dff6ce0120 'unsigned int'
|-FunctionDecl 0x55dff6d47e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55dff6d47d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55dff6d48148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55dff6d48138 <line:73:3, col:34>
|     `-CallExpr 0x55dff6d480f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55dff6d480e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55dff6d48070 <col:10> '<builtin fn type>' Function 0x55dff6d47ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55dff6d48120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55dff6d48090 <col:29> 'unsigned int' lvalue ParmVar 0x55dff6d47d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x55dff6d47ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55dff6d47f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55dff6d47ff0 <col:10> Implicit
| `-ConstAttr 0x55dff6d48048 <col:10> Implicit
|-FunctionDecl 0x55dff6d482a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55dff6d48198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55dff6d485b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55dff6d485a8 <line:78:3, col:34>
|     `-CallExpr 0x55dff6d48568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55dff6d48550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55dff6d484d8 <col:10> '<builtin fn type>' Function 0x55dff6d48348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55dff6d48590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55dff6d484f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55dff6d48198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55dff6d48348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55dff6d483e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55dff6d48458 <col:10> Implicit
| `-ConstAttr 0x55dff6d484b0 <col:10> Implicit
|-TypedefDecl 0x55dff6d485e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55dff6ce0140 'unsigned long'
|-TypedefDecl 0x55dff6d48678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55dff6d48640 '__time_t' sugar
|   |-Typedef 0x55dff6d47278 '__time_t'
|   `-BuiltinType 0x55dff6ce00a0 'long'
|-RecordDecl 0x55dff6d486d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55dff6d48788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55dff6d48818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55dff6d488a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55dff6d48870 '__pid_t' sugar
|   |-Typedef 0x55dff6d46dd8 '__pid_t'
|   `-BuiltinType 0x55dff6ce0080 'int'
|-RecordDecl 0x55dff6d48900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55dff6d489c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55dff6d48a10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55dff6d48ad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55dff6d48b38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55dff6ce0140 'unsigned long'
|-RecordDecl 0x55dff6d48b90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55dff6d4ae70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55dff6d4af20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55dff6d4aec0 'struct cpu_set_t' sugar
|   `-RecordType 0x55dff6d48c10 'cpu_set_t'
|     `-Record 0x55dff6d48b90 ''
|-FunctionDecl 0x55dff6d4b1f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55dff6d4afc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55dff6d4b0d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55dff6d4b2a8 <line:108:19>
|-FunctionDecl 0x55dff6d4b480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55dff6d4b310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55dff6d4b528 <col:69>
|-FunctionDecl 0x55dff6d4b6a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55dff6d4b590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55dff6d4b748 <col:64>
|-FunctionDecl 0x55dff6d4ba08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55dff6d4b7b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55dff6d4b8e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55dff6d4bab8 <line:114:22>
|-FunctionDecl 0x55dff6d4be60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55dff6d4bb20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55dff6d4bc18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55dff6d4bf10 <col:88>
|-FunctionDecl 0x55dff6d4c1c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55dff6d4bf78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55dff6d4bff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55dff6d4c088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55dff6d4c280 <col:62>
|-FunctionDecl 0x55dff6d4c3f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55dff6d4c2e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55dff6d4c4a0 <col:63>
|-FunctionDecl 0x55dff6d4c5c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55dff6d4c668 <col:47>
|-FunctionDecl 0x55dff6d4c770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55dff6d4c6d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55dff6d4c818 <col:69>
|-FunctionDecl 0x55dff6d4c920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55dff6d4c888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55dff6d4c9c8 <col:69>
|-FunctionDecl 0x55dff6d4cc88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55dff6d4ca30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55dff6d4cb68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55dff6d4cd38 <col:88>
|-TypedefDecl 0x55dff6d4cdc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55dff6d4cd90 '__clock_t' sugar
|   |-Typedef 0x55dff6d470b8 '__clock_t'
|   `-BuiltinType 0x55dff6ce00a0 'long'
|-TypedefDecl 0x55dff6d4d7e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55dff6d4ce20 '__clockid_t' sugar
|   |-Typedef 0x55dff6d474a8 '__clockid_t'
|   `-BuiltinType 0x55dff6ce0080 'int'
|-TypedefDecl 0x55dff6d4d878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55dff6d4d840 '__timer_t' sugar
|   |-Typedef 0x55dff6d47518 '__timer_t'
|   `-PointerType 0x55dff6ce07a0 'void *'
|     `-BuiltinType 0x55dff6cdffe0 'void'
|-RecordDecl 0x55dff6d4d8d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55dff6d4d990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55dff6d4d9f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55dff6d4da60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55dff6d4dac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55dff6d4db30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55dff6d4db98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55dff6d4dc00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55dff6d4dc68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55dff6d4dcd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55dff6d4dd38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55dff6d4dda0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55dff6d4ddf0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55dff6d4deb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55dff6d4df28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55dff6d4dfd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55dff6d4e1a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55dff6d4e240 <col:45>
|-FunctionDecl 0x55dff6d4e420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55dff6d4e310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55dff6d4e4c8 <col:54>
|-FunctionDecl 0x55dff6d4e6c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55dff6d4e530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55dff6d4e5a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55dff6d4e778 <line:158:22>
| `-ConstAttr 0x55dff6d4f410 <col:63>
|-FunctionDecl 0x55dff6d4f610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55dff6d4f508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55dff6d4f6b8 <col:56>
|-FunctionDecl 0x55dff6d4fa60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55dff6d4f728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55dff6d4f7a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55dff6d4f820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55dff6d4f918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55dff6d4fb20 <col:54>
|-RecordDecl 0x55dff6d4fb78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55dff6d4fc28 parent 0x55dff6cdff88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55dff6d4fe88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55dff6d4ff28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55dff6d4ff90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55dff6d4fff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55dff6d500e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55dff6d50208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55dff6d501b0 'struct __locale_struct *'
|   `-ElaboratedType 0x55dff6d50140 'struct __locale_struct' sugar
|     `-RecordType 0x55dff6d4fc00 'struct __locale_struct'
|       `-Record 0x55dff6d4fb78 '__locale_struct'
|-TypedefDecl 0x55dff6d502b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55dff6d50280 '__locale_t' sugar
|   |-Typedef 0x55dff6d50208 '__locale_t'
|   `-PointerType 0x55dff6d501b0 'struct __locale_struct *'
|     `-ElaboratedType 0x55dff6d50140 'struct __locale_struct' sugar
|       `-RecordType 0x55dff6d4fc00 'struct __locale_struct'
|         `-Record 0x55dff6d4fb78 '__locale_struct'
|-FunctionDecl 0x55dff6d506b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55dff6d50328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55dff6d503a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55dff6d50438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55dff6d504c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55dff6d50540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55dff6d50778 <col:40>
|-FunctionDecl 0x55dff6d50968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55dff6d50840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55dff6d50a10 <col:66>
|-FunctionDecl 0x55dff6d50b20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55dff6d50a78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55dff6d50bc8 <col:69>
|-FunctionDecl 0x55dff6d50df8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55dff6d50c30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55dff6d50cc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55dff6d50ea8 <col:52>
|-FunctionDecl 0x55dff6d51050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55dff6d50f10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55dff6d50fa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55dff6d51100 <col:55>
|-FunctionDecl 0x55dff6d51298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55dff6d51180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55dff6d51340 <col:62>
|-FunctionDecl 0x55dff6d51578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55dff6d513a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55dff6d51620 <col:60>
|-FunctionDecl 0x55dff6d51848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55dff6d516a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55dff6d51720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55dff6d518f8 <col:44>
|-FunctionDecl 0x55dff6d51b08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55dff6d51960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55dff6d519e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55dff6d51bb8 <col:49>
|-VarDecl 0x55dff6d51cb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55dff6d51d38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55dff6d51db8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55dff6d51e80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55dff6d51fb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55dff6d52050 <col:42>
|-VarDecl 0x55dff6d520c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55dff6d52140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55dff6d522c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55dff6d521b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55dff6d52370 <col:57>
|-FunctionDecl 0x55dff6d534f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55dff6d523f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55dff6d53598 <col:56>
|-FunctionDecl 0x55dff6d536a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55dff6d53618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55dff6d53750 <col:59>
|-FunctionDecl 0x55dff6d53858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55dff6d537c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55dff6d53900 <col:48>
| `-ConstAttr 0x55dff6d53958 <col:89>
|-FunctionDecl 0x55dff6d53bb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55dff6d53a08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55dff6d53a98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55dff6d53e18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55dff6d53ca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55dff6d53d38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55dff6d53ec8 <col:88>
|-FunctionDecl 0x55dff6d54060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55dff6d53f30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55dff6d53fc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55dff6d54110 <col:88>
|-FunctionDecl 0x55dff6d54328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55dff6d54178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55dff6d54208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55dff6d543d8 <line:209:22>
|-FunctionDecl 0x55dff6d54778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55dff6d54440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55dff6d54500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55dff6d54590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55dff6d54620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55dff6d54a78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55dff6d54878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55dff6d54950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55dff6d54b28 <col:85>
|-FunctionDecl 0x55dff6d54f18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55dff6d54b90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55dff6d54cc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55dff6d54dd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55dff6d54fd0 <col:52>
|-FunctionDecl 0x55dff6d55148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55dff6d55038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55dff6d551f0 <col:61>
|-FunctionDecl 0x55dff6d55668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55dff6d55258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55dff6d552d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55dff6d55408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55dff6d55510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55dff6d55728 <col:62>
|-FunctionDecl 0x55dff6d55948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55dff6d55790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55dff6d55820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55dff6d559f8 <line:222:22>
|-FunctionDecl 0x55dff6d55af8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55dff6d55a60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55dff6d55ba0 <col:65>
|-TypedefDecl 0x55dff6d55c10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55dff6ce0140 'unsigned long'
|-RecordDecl 0x55dff6d55c68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55dff6d55db0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55dff6d55e18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55dff6d55ec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55dff6d55e70 'union pthread_attr_t' sugar
|   `-RecordType 0x55dff6d55cf0 'union pthread_attr_t'
|     `-Record 0x55dff6d55c68 'pthread_attr_t'
|-RecordDecl 0x55dff6d55f20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55dff6d56098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55dff6d56110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55dff6d561c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55dff6d56160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55dff6d55fa0 'struct __pthread_internal_list'
|     `-Record 0x55dff6d55f20 '__pthread_internal_list'
|-RecordDecl 0x55dff6d56230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55dff6d562d8 parent 0x55dff6cdff88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55dff6d563b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55dff6d56418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55dff6d56480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55dff6d5a530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55dff6d5a598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55dff6d5a600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55dff6d5a688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55dff6d5a740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55dff6d5a830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55dff6d5a898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55dff6d5aa20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55dff6d5a9c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55dff6d562b0 'pthread_mutex_t'
|     `-Record 0x55dff6d56230 ''
|-RecordDecl 0x55dff6d5aa90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55dff6d5abd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55dff6d5ac38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55dff6d5acf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55dff6d5ac90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55dff6d5ab10 'pthread_mutexattr_t'
|     `-Record 0x55dff6d5aa90 ''
|-RecordDecl 0x55dff6d5ad60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55dff6d5ae08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55dff6d5aed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55dff6d5af38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55dff6d5afa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55dff6d5b008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55dff6d5b070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55dff6d5b0d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55dff6d5b140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55dff6d5b1a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55dff6d5b260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe032_rmo.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe032_rmo.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55dff6d5b350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55dff6d5b3b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55dff6d5b540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55dff6d5b490 'union pthread_cond_t' sugar
|   `-RecordType 0x55dff6d5ade0 'pthread_cond_t'
|     `-Record 0x55dff6d5ad60 ''
|-RecordDecl 0x55dff6d5b5b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55dff6d5b6b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55dff6d5b718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55dff6d5b7d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55dff6d5b770 'union pthread_condattr_t' sugar
|   `-RecordType 0x55dff6d5b630 'pthread_condattr_t'
|     `-Record 0x55dff6d5b5b0 ''
|-TypedefDecl 0x55dff6d5b858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55dff6ce0120 'unsigned int'
|-TypedefDecl 0x55dff6d5b8c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55dff6ce0080 'int'
|-RecordDecl 0x55dff6d5b920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55dff6d5b9c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55dff6d5ba90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55dff6d5baf8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55dff6d5bb60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55dff6d5bbc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55dff6d5bc30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55dff6d5bc98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55dff6d5bd00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55dff6d5bd68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55dff6d5bdd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55dff6d5be38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55dff6d5bea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55dff6d5bf50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe032_rmo.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe032_rmo.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x55dff6d5bff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55dff6d5c060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55dff6d5c1b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55dff6d5c150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55dff6d5b9a0 'pthread_rwlock_t'
|     `-Record 0x55dff6d5b920 ''
|-RecordDecl 0x55dff6d5c220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55dff6d5c360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55dff6d5c3c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55dff6d5c480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55dff6d5c420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55dff6d5c2a0 'pthread_rwlockattr_t'
|     `-Record 0x55dff6d5c220 ''
|-TypedefDecl 0x55dff6d5e560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55dff6ce0084 'volatile int' volatile
|   `-BuiltinType 0x55dff6ce0080 'int'
|-RecordDecl 0x55dff6d5e5b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55dff6d5e700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55dff6d5e768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55dff6d5e820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55dff6d5e7c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55dff6d5e640 'pthread_barrier_t'
|     `-Record 0x55dff6d5e5b8 ''
|-RecordDecl 0x55dff6d5e890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55dff6d5e990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55dff6d5e9f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55dff6d5eab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55dff6d5ea50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55dff6d5e910 'pthread_barrierattr_t'
|     `-Record 0x55dff6d5e890 ''
|-TypedefDecl 0x55dff6d5ebc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55dff6d5eb60 'long [8]' 8 
|   `-BuiltinType 0x55dff6ce00a0 'long'
|-EnumDecl 0x55dff6d5ec20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55dff6d5ece8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55dff6d5ed38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55dff6d5ed88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55dff6d5ee58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55dff6d5eea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55dff6d5eef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55dff6d5ef48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55dff6d5efd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55dff6d5efb8 <col:26> 'int'
| |   `-DeclRefExpr 0x55dff6d5ef98 <col:26> 'int' EnumConstant 0x55dff6d5ee58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55dff6d5f058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55dff6d5f040 <col:29> 'int'
| |   `-DeclRefExpr 0x55dff6d5f020 <col:29> 'int' EnumConstant 0x55dff6d5eea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55dff6d5f0e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55dff6d5f0c8 <col:30> 'int'
| |   `-DeclRefExpr 0x55dff6d5f0a8 <col:30> 'int' EnumConstant 0x55dff6d5eef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55dff6d5f168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55dff6d5f150 <col:27> 'int'
|     `-DeclRefExpr 0x55dff6d5f130 <col:27> 'int' EnumConstant 0x55dff6d5efd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55dff6d5f1b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55dff6d5f288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55dff6d5f310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55dff6d5f2f8 <col:30> 'int'
| |   `-DeclRefExpr 0x55dff6d5f2d8 <col:30> 'int' EnumConstant 0x55dff6d5f288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55dff6d5f360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55dff6d5f3e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55dff6d5f3d0 <col:29> 'int'
|     `-DeclRefExpr 0x55dff6d5f3b0 <col:29> 'int' EnumConstant 0x55dff6d5f360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55dff6d5f438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55dff6d5f508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55dff6d5f570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55dff6d5f5c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55dff6d5f610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55dff6d5f6d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55dff6d5f728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55dff6d5f778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55dff6d5f800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55dff6d5f7e8 <col:31> 'int'
|     `-DeclRefExpr 0x55dff6d5f7c8 <col:31> 'int' EnumConstant 0x55dff6d5f6d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55dff6d5f850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55dff6d5f918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55dff6d5f968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55dff6d5f9b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55dff6d5fa88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55dff6d5fad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55dff6d5fb28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55dff6d5fbf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55dff6d5fc48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55dff6d5fc98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55dff6d5fed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55dff6d5ff40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55dff6d5ffa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55dff6d600c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55dff6d60118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55dff6d601e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55dff6d60238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55dff6d60288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55dff6d60358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55dff6d603a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55dff6d609d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55dff6d604a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55dff6d605c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55dff6d607c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55dff6d60840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55dff6d60a98 <col:47>
| |-NonNullAttr 0x55dff6d60af0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55dff6d60b28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55dff6d60c50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55dff6d60b80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55dff6d60ea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55dff6d60d08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55dff6d60d88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55dff6d61078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55dff6d60f68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55dff6d61120 <col:60>
|-FunctionDecl 0x55dff6d61270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55dff6d61310 <col:54>
| `-ConstAttr 0x55dff6d61368 <col:95>
|-FunctionDecl 0x55dff6d61da0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55dff6d613a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55dff6d61418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55dff6d61e50 <line:395:19>
| `-ConstAttr 0x55dff6d61ea8 <col:60>
|-FunctionDecl 0x55dff6d62078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55dff6d61f40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55dff6d62120 <col:71>
| `-NonNullAttr 0x55dff6d62178 <col:112, col:126> 1
|-FunctionDecl 0x55dff6d62280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55dff6d621c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55dff6d62328 <line:398:22>
| `-NonNullAttr 0x55dff6d62380 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d625a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55dff6d623c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55dff6d62448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55dff6d62658 <line:401:22>
| `-NonNullAttr 0x55dff6d626b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55dff6d628b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55dff6d626f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55dff6d62778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55dff6d62968 <line:404:22>
| `-NonNullAttr 0x55dff6d629c0 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d62c18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55dff6d62a08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55dff6d62ab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55dff6d62cc8 <line:407:22>
| `-NonNullAttr 0x55dff6d62d20 <col:63, col:80> 1 2
|-FunctionDecl 0x55dff6d63f78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55dff6d63dc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55dff6d63e38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55dff6d64028 <line:410:22>
| `-NonNullAttr 0x55dff6d64080 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d642b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55dff6d640c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55dff6d64158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55dff6d64368 <line:413:22>
| `-NonNullAttr 0x55dff6d643c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55dff6d645f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55dff6d64408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55dff6d64498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55dff6d646a8 <col:37>
| `-NonNullAttr 0x55dff6d64700 <col:78, col:95> 1 2
|-FunctionDecl 0x55dff6d648e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55dff6d64748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55dff6d647c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55dff6d64998 <line:419:22>
| `-NonNullAttr 0x55dff6d649f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55dff6d64b78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55dff6d64a38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55dff6d64ab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55dff6d64c28 <line:421:22>
| `-NonNullAttr 0x55dff6d64c80 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d65e58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55dff6d64cc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55dff6d64d48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55dff6d65f08 <line:424:22>
| `-NonNullAttr 0x55dff6d65f60 <col:63, col:80> 1 2
|-FunctionDecl 0x55dff6d660e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55dff6d65fa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55dff6d66028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55dff6d66198 <line:427:22>
| `-NonNullAttr 0x55dff6d661f0 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d66398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55dff6d66238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55dff6d662b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55dff6d66448 <line:430:22>
| `-NonNullAttr 0x55dff6d664a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55dff6d66628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55dff6d664e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55dff6d66568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55dff6d666d8 <line:432:22>
| `-NonNullAttr 0x55dff6d66730 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d66958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55dff6d66778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55dff6d667f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55dff6d66a08 <line:435:22>
| |-NonNullAttr 0x55dff6d66a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55dff6d66a98 <col:100> "" ""
|-FunctionDecl 0x55dff6d66ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55dff6d66ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55dff6d66b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55dff6d66d58 <line:438:22>
| |-NonNullAttr 0x55dff6d66db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x55dff6d66df8 <col:97> "" ""
|-FunctionDecl 0x55dff6d66fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55dff6d66e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55dff6d66ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55dff6d67098 <line:441:22>
| `-NonNullAttr 0x55dff6d670f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55dff6d67270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55dff6d67138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55dff6d671b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55dff6d67320 <line:444:22>
| `-NonNullAttr 0x55dff6d67378 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d67668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55dff6d673c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55dff6d67448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55dff6d674c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55dff6d67720 <line:448:22>
| `-NonNullAttr 0x55dff6d67778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55dff6d67a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55dff6d677d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55dff6d67850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55dff6d678c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55dff6d67ae0 <col:43>
| `-NonNullAttr 0x55dff6d67b38 <col:84, col:98> 1
|-FunctionDecl 0x55dff6d67e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55dff6d67b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55dff6d67c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55dff6d67c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55dff6d67ef8 <line:453:22>
| `-NonNullAttr 0x55dff6d67f50 <col:63, col:77> 3
|-FunctionDecl 0x55dff6d68228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55dff6d67f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55dff6d68018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55dff6d680a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55dff6d682e0 <line:457:22>
| `-NonNullAttr 0x55dff6d68338 <col:63, col:80> 2 3
|-FunctionDecl 0x55dff6d68528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55dff6d68388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55dff6d68408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55dff6d685d8 <line:459:22>
|-FunctionDecl 0x55dff6d689a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55dff6d686a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55dff6d68840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55dff6d68a58 <col:52, col:69> 1 2
|-FunctionDecl 0x55dff6d68c00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55dff6d68ae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55dff6d68b60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55dff6d68e10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55dff6d68cc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55dff6d68d48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55dff6d68f68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55dff6d68ed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55dff6d690a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55dff6d69148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55dff6d691f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55dff6d692e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55dff6d69350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55dff6d69520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe032_rmo.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55dff6d69618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55dff6d696d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55dff6d69670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55dff6d691d0 '__pthread_unwind_buf_t'
| |   `-Record 0x55dff6d69148 ''
| `-AlignedAttr 0x55dff6d69728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55dff6d697a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55dff6d69900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55dff6d69968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55dff6d699d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55dff6d69a38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55dff6d69c40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55dff6d69b30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55dff6d69e20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55dff6d69cf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55dff6d69fe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55dff6d69ed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55dff6d6a088 <line:488:22>
|-RecordDecl 0x55dff6d6a0e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55dff6d6a3f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55dff6d6a258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55dff6d6a2d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55dff6d6a4a8 <col:86>
| `-ReturnsTwiceAttr 0x55dff6d6a500 <col:12> Implicit
|-FunctionDecl 0x55dff6d6a828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55dff6d6a5d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55dff6d6a6e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55dff6d6a8d8 <line:494:22>
| `-NonNullAttr 0x55dff6d6a930 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d6aaa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55dff6d6a978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55dff6d6ab50 <line:496:22>
| `-NonNullAttr 0x55dff6d6aba8 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d6acb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55dff6d6abf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55dff6d6ad58 <line:498:22>
| `-NonNullAttr 0x55dff6d6adb0 <col:52, col:66> 1
|-FunctionDecl 0x55dff6d6aee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55dff6d6ae30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55dff6d6af90 <line:500:22>
| `-NonNullAttr 0x55dff6d6afe8 <col:52, col:66> 1
|-FunctionDecl 0x55dff6d6b228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55dff6d6b038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55dff6d6b0c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55dff6d6b2d8 <col:36>
| `-NonNullAttr 0x55dff6d6b330 <col:66, col:83> 1 2
|-FunctionDecl 0x55dff6d6b430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55dff6d6b378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55dff6d6b4d8 <line:505:22>
| `-NonNullAttr 0x55dff6d6b530 <col:52, col:66> 1
|-FunctionDecl 0x55dff6d6b7c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55dff6d6b5e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55dff6d6b660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55dff6d6b878 <line:509:22>
| `-NonNullAttr 0x55dff6d6b8d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55dff6d6bb98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55dff6d6b918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55dff6d6b998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55dff6d6ba18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55dff6d6bc50 <line:513:22>
| `-NonNullAttr 0x55dff6d6bca8 <col:63, col:80> 1 3
|-FunctionDecl 0x55dff6d6be40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55dff6d6bcf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55dff6d6bee8 <line:515:22>
| `-NonNullAttr 0x55dff6d6bf40 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d6c128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55dff6d6bff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55dff6d6c1d0 <line:517:22>
| `-NonNullAttr 0x55dff6d6c228 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d6c330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55dff6d6c278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55dff6d6c3d8 <line:519:22>
| `-NonNullAttr 0x55dff6d6c430 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d6c658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55dff6d6c478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55dff6d6c4f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55dff6d6c708 <line:523:22>
| `-NonNullAttr 0x55dff6d6c760 <col:63, col:80> 1 2
|-FunctionDecl 0x55dff6d6c968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55dff6d6c7a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55dff6d6c828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55dff6d6ca18 <line:526:22>
| `-NonNullAttr 0x55dff6d6ca70 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d6cc18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55dff6d6cab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55dff6d6cb38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55dff6d6ccc8 <line:529:22>
| `-NonNullAttr 0x55dff6d6cd20 <col:63, col:80> 1 2
|-FunctionDecl 0x55dff6d6df20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55dff6d6cd68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55dff6d6de60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55dff6d6dfd0 <line:531:22>
| `-NonNullAttr 0x55dff6d6e028 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d6e1d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55dff6d6e078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55dff6d6e0f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55dff6d6e288 <line:535:22>
| `-NonNullAttr 0x55dff6d6e2e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55dff6d6e468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55dff6d6e328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55dff6d6e3a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55dff6d6e518 <line:538:22>
| `-NonNullAttr 0x55dff6d6e570 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d6e718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55dff6d6e5b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55dff6d6e638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55dff6d6e7c8 <line:542:22>
| `-NonNullAttr 0x55dff6d6e820 <col:63, col:80> 1 2
|-FunctionDecl 0x55dff6d6e9a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55dff6d6e868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55dff6d6e8e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55dff6d6ea58 <line:545:22>
| `-NonNullAttr 0x55dff6d6eab0 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d6ec98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55dff6d6eaf8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55dff6d6eb78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55dff6d6ed48 <line:548:22>
| `-NonNullAttr 0x55dff6d6eda0 <col:63, col:80> 1 2
|-FunctionDecl 0x55dff6d6ff58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55dff6d6ede8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55dff6d6fe98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55dff6d70008 <line:551:22>
| `-NonNullAttr 0x55dff6d70060 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d70398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55dff6d70140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55dff6d70250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55dff6d70448 <col:29>
| `-NonNullAttr 0x55dff6d704a0 <col:70, col:84> 1
|-FunctionDecl 0x55dff6d70618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55dff6d704e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55dff6d706c0 <line:556:22>
| `-NonNullAttr 0x55dff6d70718 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d70820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55dff6d70768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55dff6d708c8 <line:558:22>
| `-NonNullAttr 0x55dff6d70920 <col:52, col:66> 1
|-FunctionDecl 0x55dff6d70a20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55dff6d70968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55dff6d70ac8 <line:560:19>
| `-NonNullAttr 0x55dff6d70b20 <col:49, col:63> 1
|-FunctionDecl 0x55dff6d70d58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55dff6d70b68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55dff6d70bf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55dff6d70e08 <col:39>
| `-NonNullAttr 0x55dff6d70e90 <col:69, col:86> 1 2
|-FunctionDecl 0x55dff6d70f90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55dff6d70ed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55dff6d71038 <line:565:22>
| `-NonNullAttr 0x55dff6d71090 <col:52, col:66> 1
|-FunctionDecl 0x55dff6d71190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55dff6d710d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55dff6d71238 <line:567:22>
| `-NonNullAttr 0x55dff6d71290 <col:52, col:66> 1
|-FunctionDecl 0x55dff6d71448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55dff6d712d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55dff6d71368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55dff6d714f8 <col:39>
| `-NonNullAttr 0x55dff6d71550 <col:69, col:86> 1 2
|-FunctionDecl 0x55dff6d71650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55dff6d71598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55dff6d716f8 <line:572:22>
| `-NonNullAttr 0x55dff6d71750 <col:52, col:66> 1
|-FunctionDecl 0x55dff6d71938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55dff6d71800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55dff6d719e0 <line:574:22>
| `-NonNullAttr 0x55dff6d71a38 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d71b40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55dff6d71a88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55dff6d71be8 <line:576:22>
| `-NonNullAttr 0x55dff6d71c40 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d71ea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55dff6d71c88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55dff6d71d08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55dff6d71f50 <line:580:22>
| `-NonNullAttr 0x55dff6d71fa8 <col:63, col:80> 1 2
|-FunctionDecl 0x55dff6d721b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55dff6d71ff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55dff6d72078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55dff6d72268 <line:583:22>
| `-NonNullAttr 0x55dff6d722c0 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d72468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55dff6d72308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55dff6d72388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55dff6d72518 <line:587:22>
| `-NonNullAttr 0x55dff6d72570 <col:63, col:80> 1 2
|-FunctionDecl 0x55dff6d726f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55dff6d725b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55dff6d72638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55dff6d727a8 <col:36>
| `-NonNullAttr 0x55dff6d72800 <col:77, col:91> 1
|-FunctionDecl 0x55dff6d72b38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55dff6d728e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55dff6d729f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55dff6d72be8 <line:592:22>
| `-NonNullAttr 0x55dff6d72c40 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d72db8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55dff6d72c88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55dff6d72e60 <line:594:22>
| `-NonNullAttr 0x55dff6d72ee0 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d72fe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55dff6d72f28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55dff6d73088 <line:596:22>
| `-NonNullAttr 0x55dff6d730e0 <col:52, col:66> 1
|-FunctionDecl 0x55dff6d731e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55dff6d73128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55dff6d73288 <line:598:22>
| `-NonNullAttr 0x55dff6d732e0 <col:52, col:66> 1
|-FunctionDecl 0x55dff6d73508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55dff6d73328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55dff6d733a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55dff6d735b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55dff6d738e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55dff6d73638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55dff6d736b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55dff6d73740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55dff6d739a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55dff6d73bb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55dff6d73a80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55dff6d73c60 <line:607:22>
| `-NonNullAttr 0x55dff6d73cb8 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d73dc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55dff6d73d08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55dff6d73e68 <line:609:22>
| `-NonNullAttr 0x55dff6d73ef0 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d74118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55dff6d73f38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55dff6d73fb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55dff6d741c8 <line:613:22>
| `-NonNullAttr 0x55dff6d74220 <col:63, col:80> 1 2
|-FunctionDecl 0x55dff6d74428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55dff6d74268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55dff6d742e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55dff6d744d8 <col:37>
| `-NonNullAttr 0x55dff6d74530 <col:78, col:92> 1
|-FunctionDecl 0x55dff6d74748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55dff6d74578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55dff6d74620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55dff6d747f8 <line:619:22>
| `-NonNullAttr 0x55dff6d74850 <col:63, col:80> 1 2
|-FunctionDecl 0x55dff6d74a18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55dff6d74898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55dff6d74910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55dff6d74ac8 <line:622:22>
| `-NonNullAttr 0x55dff6d74b20 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d74dc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55dff6d74c00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55dff6d74c80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55dff6d74e78 <line:624:22>
| `-NonNullAttr 0x55dff6d74f00 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d75078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55dff6d74f48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55dff6d75120 <line:626:22>
| `-NonNullAttr 0x55dff6d75178 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d75280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55dff6d751c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55dff6d75328 <line:628:22>
| `-NonNullAttr 0x55dff6d75380 <col:52, col:66> 1
|-FunctionDecl 0x55dff6d75480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55dff6d753c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55dff6d75528 <line:630:22>
| `-NonNullAttr 0x55dff6d75580 <col:52, col:66> 1
|-FunctionDecl 0x55dff6d75680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55dff6d755c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55dff6d75728 <line:632:22>
| `-NonNullAttr 0x55dff6d75780 <col:52, col:66> 1
|-FunctionDecl 0x55dff6d75b58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55dff6d75860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55dff6d75970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55dff6d759f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55dff6d75c10 <line:636:22>
| `-NonNullAttr 0x55dff6d75c68 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d75de8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55dff6d75cb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55dff6d75e90 <line:638:22>
| `-NonNullAttr 0x55dff6d75f10 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d76010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55dff6d75f58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55dff6d760b8 <line:640:22>
| `-NonNullAttr 0x55dff6d76110 <col:52, col:66> 1
|-FunctionDecl 0x55dff6d762f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55dff6d761c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55dff6d763a0 <line:642:22>
| `-NonNullAttr 0x55dff6d763f8 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d76500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55dff6d76448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55dff6d765a8 <line:644:22>
| `-NonNullAttr 0x55dff6d76600 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d76828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55dff6d76648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55dff6d766c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55dff6d768d8 <line:648:22>
| `-NonNullAttr 0x55dff6d76930 <col:63, col:80> 1 2
|-FunctionDecl 0x55dff6d76b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55dff6d76978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55dff6d769f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55dff6d76be8 <line:651:22>
| `-NonNullAttr 0x55dff6d76c40 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d76fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55dff6d76d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55dff6d76e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55dff6d77058 <line:654:22>
| `-NonNullAttr 0x55dff6d770b0 <col:63, col:77> 1
|-FunctionDecl 0x55dff6d77208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55dff6d770f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55dff6d772b0 <col:69>
|-FunctionDecl 0x55dff6d77428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55dff6d77318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55dff6d774d0 <col:72>
|-FunctionDecl 0x55dff6d77708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55dff6d77538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55dff6d775e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55dff6d777b8 <col:44>
|-FunctionDecl 0x55dff6d779d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55dff6d77820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55dff6d77898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55dff6d77a88 <line:661:22>
| `-NonNullAttr 0x55dff6d77ae0 <col:63, col:77> 2
|-FunctionDecl 0x55dff6d78f50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55dff6d77bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55dff6d77cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55dff6d77de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55dff6d79008 <col:47>
|-FunctionDecl 0x55dff6d79110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55dff6d79078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55dff6d79268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55dff6d791d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55dff6d793c0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55dff6d79328 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55dff6d79488 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55dff6d79548 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55dff6d79608 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55dff6d796c0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55dff6d79740 prev 0x55dff6d796c0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55dff6d797a8 <col:24> 'int' 0
|-VarDecl 0x55dff6d797e0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55dff6d79860 prev 0x55dff6d797e0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55dff6d798c8 <col:27> 'int' 0
|-VarDecl 0x55dff6d79900 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55dff6d79980 prev 0x55dff6d79900 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55dff6d799e8 <col:27> 'int' 0
|-VarDecl 0x55dff6d79a18 <line:678:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55dff6d79a90 <line:679:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55dff6d79b10 <line:680:1, col:5> col:5 used x 'int'
|-VarDecl 0x55dff6d79b90 prev 0x55dff6d79b10 <line:681:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55dff6d79bf8 <col:9> 'int' 0
|-VarDecl 0x55dff6d79c28 <line:682:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x55dff6d79ca8 <line:683:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x55dff6d79d20 <line:684:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x55dff6d79d98 <line:685:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x55dff6d79e10 <line:686:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x55dff6d79e88 <line:687:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x55dff6d79f20 <line:688:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x55dff6d79f98 <line:689:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x55dff6d7a010 <line:690:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x55dff6d7a088 <line:691:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x55dff6d7a100 <line:692:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x55dff6d7a180 <line:693:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x55dff6d7a200 <line:694:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x55dff6d7a278 <line:695:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x55dff6d7a2f8 <line:696:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x55dff6d7a370 <line:697:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x55dff6d7a3f0 <line:698:1, col:5> col:5 used y 'int'
|-VarDecl 0x55dff6d7a470 prev 0x55dff6d7a3f0 <line:699:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55dff6d7a4d8 <col:9> 'int' 0
|-VarDecl 0x55dff6d7a508 <line:700:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55dff6d7a580 <line:701:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55dff6d7a698 prev 0x55dff6d79110 <line:702:1, line:731:1> line:702:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55dff6d7a600 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55dff6d7d6b8 <line:703:1, line:731:1>
|   |-CallExpr 0x55dff6d7a7a8 <line:704:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55dff6d7a790 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dff6d7a740 <col:3> 'void ()' Function 0x55dff6d204b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55dff6d7a808 <line:705:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55dff6d7a7c8 <col:3> 'int' lvalue Var 0x55dff6d7a470 'y' 'int'
|   | `-IntegerLiteral 0x55dff6d7a7e8 <col:7> 'int' 2
|   |-CallExpr 0x55dff6d7a860 <line:706:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55dff6d7a848 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dff6d7a828 <col:3> 'void ()' Function 0x55dff6d20570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55dff6d7a8b8 <line:707:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55dff6d7a8a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dff6d7a880 <col:3> 'void ()' Function 0x55dff6d204b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55dff6d7a910 <line:708:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55dff6d7a8f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dff6d7a8d8 <col:3> 'void ()' Function 0x55dff6d20570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55dff6d7a968 <line:709:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55dff6d7a950 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dff6d7a930 <col:3> 'void ()' Function 0x55dff6d204b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55dff6d7aa38 <line:710:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d7a988 <col:3> '_Bool' lvalue Var 0x55dff6d7a508 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55dff6d7aa18 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55dff6d7aa00 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55dff6d7a9a8 <col:19> '_Bool (void)' Function 0x55dff6d1fc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55dff6d7aad0 <line:711:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d7aa58 <col:3> '_Bool' lvalue Var 0x55dff6d7a580 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55dff6d7aab0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55dff6d7aa98 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55dff6d7aa78 <col:19> '_Bool (void)' Function 0x55dff6d1fc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55dff6d7ab48 <line:712:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d7aaf0 <col:3> '_Bool' lvalue Var 0x55dff6d79c28 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55dff6d7ab30 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dff6d7ab10 <col:21> '_Bool' lvalue Var 0x55dff6d7a580 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55dff6d7abc0 <line:713:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55dff6d7ab68 <col:3> 'int' lvalue Var 0x55dff6d79ca8 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55dff6d7aba8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dff6d7ab88 <col:15> 'int' lvalue Var 0x55dff6d79b90 'x' 'int'
|   |-BinaryOperator 0x55dff6d7b018 <line:714:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55dff6d7abe0 <col:3> 'int' lvalue Var 0x55dff6d79b90 'x' 'int'
|   | `-ConditionalOperator 0x55dff6d7afe8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55dff6d7adf0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55dff6d7ad10 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55dff6d7ac38 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55dff6d7ac20 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55dff6d7ac00 <col:8> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55dff6d7acf0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55dff6d7ac88 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55dff6d7ac70 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55dff6d7ac50 <col:27> '_Bool' lvalue Var 0x55dff6d79d98 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x55dff6d7acd8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55dff6d7acc0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55dff6d7aca0 <col:46> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55dff6d7add0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55dff6d7ad68 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55dff6d7ad50 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55dff6d7ad30 <col:65> '_Bool' lvalue Var 0x55dff6d79d98 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x55dff6d7adb8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55dff6d7ada0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55dff6d7ad80 <col:84> '_Bool' lvalue Var 0x55dff6d79f98 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55dff6d7afd0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dff6d7ae10 <col:101> 'int' lvalue Var 0x55dff6d79b90 'x' 'int'
|   |   `-ParenExpr 0x55dff6d7afb0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55dff6d7af80 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55dff6d7aed0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55dff6d7ae88 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55dff6d7ae70 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55dff6d7ae30 <col:106> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55dff6d7aeb8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55dff6d7aea0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55dff6d7ae50 <col:124> '_Bool' lvalue Var 0x55dff6d79d98 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55dff6d7af50 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55dff6d7aef0 <col:141> 'int' lvalue Var 0x55dff6d7a200 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55dff6d7af68 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dff6d7af30 <col:153> 'int' lvalue Var 0x55dff6d7a2f8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55dff6d7b528 <line:715:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55dff6d7b038 <col:3> 'int' lvalue Var 0x55dff6d7a200 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55dff6d7b4f8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55dff6d7b4c8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55dff6d7b4b0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55dff6d7b058 <col:15> '_Bool' lvalue Var 0x55dff6d7a580 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55dff6d7b4e0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dff6d7b078 <col:31> 'int' lvalue Var 0x55dff6d7a200 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55dff6d7b490 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55dff6d7b460 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55dff6d7b288 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55dff6d7b1a8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55dff6d7b0d0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55dff6d7b0b8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55dff6d7b098 <col:45> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55dff6d7b188 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55dff6d7b120 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55dff6d7b108 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55dff6d7b0e8 <col:64> '_Bool' lvalue Var 0x55dff6d79d98 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55dff6d7b170 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55dff6d7b158 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55dff6d7b138 <col:83> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55dff6d7b268 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55dff6d7b200 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55dff6d7b1e8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55dff6d7b1c8 <col:102> '_Bool' lvalue Var 0x55dff6d79d98 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55dff6d7b250 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55dff6d7b238 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55dff6d7b218 <col:121> '_Bool' lvalue Var 0x55dff6d79f98 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55dff6d7b448 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55dff6d7b2a8 <col:138> 'int' lvalue Var 0x55dff6d7a200 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55dff6d7b428 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55dff6d7b3f8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55dff6d7b368 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55dff6d7b320 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55dff6d7b308 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55dff6d7b2c8 <col:151> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55dff6d7b350 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55dff6d7b338 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55dff6d7b2e8 <col:169> '_Bool' lvalue Var 0x55dff6d79d98 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55dff6d7b3c8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55dff6d7b388 <col:186> 'int' lvalue Var 0x55dff6d7a200 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55dff6d7b3e0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55dff6d7b3a8 <col:198> 'int' lvalue Var 0x55dff6d7a200 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55dff6d7ba38 <line:716:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55dff6d7b548 <col:3> 'int' lvalue Var 0x55dff6d7a2f8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55dff6d7ba08 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55dff6d7b9d8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55dff6d7b9c0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55dff6d7b568 <col:15> '_Bool' lvalue Var 0x55dff6d7a580 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55dff6d7b9f0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dff6d7b588 <col:31> 'int' lvalue Var 0x55dff6d7a2f8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55dff6d7b9a0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55dff6d7b970 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55dff6d7b798 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55dff6d7b6b8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55dff6d7b5e0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55dff6d7b5c8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55dff6d7b5a8 <col:45> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55dff6d7b698 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55dff6d7b630 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55dff6d7b618 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55dff6d7b5f8 <col:64> '_Bool' lvalue Var 0x55dff6d79d98 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55dff6d7b680 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55dff6d7b668 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55dff6d7b648 <col:83> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55dff6d7b778 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55dff6d7b710 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55dff6d7b6f8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55dff6d7b6d8 <col:102> '_Bool' lvalue Var 0x55dff6d79d98 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55dff6d7b760 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55dff6d7b748 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55dff6d7b728 <col:121> '_Bool' lvalue Var 0x55dff6d79f98 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55dff6d7b958 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55dff6d7b7b8 <col:138> 'int' lvalue Var 0x55dff6d7a2f8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55dff6d7b938 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55dff6d7b908 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55dff6d7b878 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55dff6d7b830 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55dff6d7b818 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55dff6d7b7d8 <col:151> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55dff6d7b860 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55dff6d7b848 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55dff6d7b7f8 <col:169> '_Bool' lvalue Var 0x55dff6d79d98 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55dff6d7b8d8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55dff6d7b898 <col:186> 'int' lvalue Var 0x55dff6d7a2f8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55dff6d7b8f0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55dff6d7b8b8 <col:198> 'int' lvalue Var 0x55dff6d7a2f8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55dff6d7c008 <line:717:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d7ba58 <col:3> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55dff6d7bff0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dff6d7bfc0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55dff6d7bf78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55dff6d7bf60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55dff6d7ba78 <col:20> '_Bool' lvalue Var 0x55dff6d7a580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55dff6d7bfa8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55dff6d7bf90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55dff6d7ba98 <col:36> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55dff6d7bf40 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55dff6d7bee8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55dff6d7bca8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55dff6d7bbc8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55dff6d7baf0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55dff6d7bad8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55dff6d7bab8 <col:55> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55dff6d7bba8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55dff6d7bb40 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55dff6d7bb28 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55dff6d7bb08 <col:74> '_Bool' lvalue Var 0x55dff6d79d98 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55dff6d7bb90 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55dff6d7bb78 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55dff6d7bb58 <col:93> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55dff6d7bc88 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55dff6d7bc20 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55dff6d7bc08 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55dff6d7bbe8 <col:112> '_Bool' lvalue Var 0x55dff6d79d98 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55dff6d7bc70 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55dff6d7bc58 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55dff6d7bc38 <col:131> '_Bool' lvalue Var 0x55dff6d79f98 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55dff6d7bed0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55dff6d7beb8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55dff6d7bcc8 <col:148> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55dff6d7be98 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55dff6d7be68 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55dff6d7bd88 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55dff6d7bd40 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55dff6d7bd28 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55dff6d7bce8 <col:166> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55dff6d7bd70 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55dff6d7bd58 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55dff6d7bd08 <col:184> '_Bool' lvalue Var 0x55dff6d79d98 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55dff6d7be20 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55dff6d7bdd8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55dff6d7bda8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55dff6d7be50 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55dff6d7be38 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55dff6d7be00 <col:212> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55dff6d7c5d0 <line:718:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d7c028 <col:3> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55dff6d7c5b8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dff6d7c588 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55dff6d7c540 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55dff6d7c528 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55dff6d7c048 <col:20> '_Bool' lvalue Var 0x55dff6d7a580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55dff6d7c570 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55dff6d7c558 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55dff6d7c068 <col:36> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55dff6d7c508 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55dff6d7c4d8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55dff6d7c278 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55dff6d7c198 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55dff6d7c0c0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55dff6d7c0a8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55dff6d7c088 <col:55> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55dff6d7c178 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55dff6d7c110 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55dff6d7c0f8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55dff6d7c0d8 <col:74> '_Bool' lvalue Var 0x55dff6d79d98 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55dff6d7c160 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55dff6d7c148 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55dff6d7c128 <col:93> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55dff6d7c258 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55dff6d7c1f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55dff6d7c1d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55dff6d7c1b8 <col:112> '_Bool' lvalue Var 0x55dff6d79d98 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55dff6d7c240 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55dff6d7c228 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55dff6d7c208 <col:131> '_Bool' lvalue Var 0x55dff6d79f98 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55dff6d7c4c0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55dff6d7c4a8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55dff6d7c298 <col:148> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55dff6d7c488 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55dff6d7c458 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55dff6d7c358 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55dff6d7c310 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55dff6d7c2f8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55dff6d7c2b8 <col:166> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55dff6d7c340 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55dff6d7c328 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55dff6d7c2d8 <col:184> '_Bool' lvalue Var 0x55dff6d79d98 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55dff6d7c428 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55dff6d7c3a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55dff6d7c378 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55dff6d7c440 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55dff6d7c400 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55dff6d7c3d0 <col:219> 'int' 0
|   |-BinaryOperator 0x55dff6d7cb78 <line:719:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d7c5f0 <col:3> '_Bool' lvalue Var 0x55dff6d79d98 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55dff6d7cb60 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dff6d7cb30 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55dff6d7cae8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55dff6d7cad0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55dff6d7c610 <col:20> '_Bool' lvalue Var 0x55dff6d7a580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55dff6d7cb18 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55dff6d7cb00 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55dff6d7c630 <col:36> '_Bool' lvalue Var 0x55dff6d79d98 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55dff6d7cab0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55dff6d7ca80 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55dff6d7c840 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55dff6d7c760 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55dff6d7c688 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55dff6d7c670 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55dff6d7c650 <col:55> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55dff6d7c740 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55dff6d7c6d8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55dff6d7c6c0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55dff6d7c6a0 <col:74> '_Bool' lvalue Var 0x55dff6d79d98 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55dff6d7c728 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55dff6d7c710 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55dff6d7c6f0 <col:93> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55dff6d7c820 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55dff6d7c7b8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55dff6d7c7a0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55dff6d7c780 <col:112> '_Bool' lvalue Var 0x55dff6d79d98 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55dff6d7c808 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55dff6d7c7f0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55dff6d7c7d0 <col:131> '_Bool' lvalue Var 0x55dff6d79f98 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55dff6d7ca68 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55dff6d7ca50 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55dff6d7c860 <col:148> '_Bool' lvalue Var 0x55dff6d79d98 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55dff6d7ca30 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55dff6d7ca00 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55dff6d7c920 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55dff6d7c8d8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55dff6d7c8c0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55dff6d7c880 <col:166> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55dff6d7c908 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55dff6d7c8f0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55dff6d7c8a0 <col:184> '_Bool' lvalue Var 0x55dff6d79d98 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55dff6d7c9b8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55dff6d7c970 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55dff6d7c940 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55dff6d7c9e8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55dff6d7c9d0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55dff6d7c998 <col:212> '_Bool' lvalue Var 0x55dff6d79d98 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55dff6d7d150 <line:720:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d7cb98 <col:3> '_Bool' lvalue Var 0x55dff6d79f98 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55dff6d7d138 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dff6d7d108 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55dff6d7d0c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55dff6d7d0a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55dff6d7cbb8 <col:20> '_Bool' lvalue Var 0x55dff6d7a580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55dff6d7d0f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55dff6d7d0d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55dff6d7cbd8 <col:36> '_Bool' lvalue Var 0x55dff6d79f98 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55dff6d7d088 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55dff6d7d058 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55dff6d7cde8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55dff6d7cd08 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55dff6d7cc30 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55dff6d7cc18 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55dff6d7cbf8 <col:55> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55dff6d7cce8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55dff6d7cc80 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55dff6d7cc68 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55dff6d7cc48 <col:74> '_Bool' lvalue Var 0x55dff6d79d98 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55dff6d7ccd0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55dff6d7ccb8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55dff6d7cc98 <col:93> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55dff6d7cdc8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55dff6d7cd60 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55dff6d7cd48 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55dff6d7cd28 <col:112> '_Bool' lvalue Var 0x55dff6d79d98 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55dff6d7cdb0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55dff6d7cd98 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55dff6d7cd78 <col:131> '_Bool' lvalue Var 0x55dff6d79f98 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55dff6d7d040 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55dff6d7d028 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55dff6d7ce08 <col:148> '_Bool' lvalue Var 0x55dff6d79f98 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55dff6d7d008 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55dff6d7cfd8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55dff6d7cec8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55dff6d7ce80 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55dff6d7ce68 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55dff6d7ce28 <col:166> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55dff6d7ceb0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55dff6d7ce98 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55dff6d7ce48 <col:184> '_Bool' lvalue Var 0x55dff6d79d98 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55dff6d7cfa8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55dff6d7cf18 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55dff6d7cee8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55dff6d7cfc0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55dff6d7cf80 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55dff6d7cf50 <col:219> 'int' 0
|   |-BinaryOperator 0x55dff6d7d1c8 <line:721:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55dff6d7d170 <col:3> 'int' lvalue Var 0x55dff6d79860 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55dff6d7d1b0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dff6d7d190 <col:25> 'int' lvalue Var 0x55dff6d79b90 'x' 'int'
|   |-BinaryOperator 0x55dff6d7d2f8 <line:722:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55dff6d7d1e8 <col:3> 'int' lvalue Var 0x55dff6d79b90 'x' 'int'
|   | `-ConditionalOperator 0x55dff6d7d2c8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55dff6d7d280 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55dff6d7d268 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55dff6d7d208 <col:7> '_Bool' lvalue Var 0x55dff6d79c28 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55dff6d7d298 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dff6d7d228 <col:25> 'int' lvalue Var 0x55dff6d79ca8 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55dff6d7d2b0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55dff6d7d248 <col:37> 'int' lvalue Var 0x55dff6d79b90 'x' 'int'
|   |-BinaryOperator 0x55dff6d7d390 <line:723:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d7d318 <col:3> '_Bool' lvalue Var 0x55dff6d79c28 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55dff6d7d368 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55dff6d7d338 <col:28> 'int' 0
|   |-CallExpr 0x55dff6d7d3e8 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55dff6d7d3d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dff6d7d3b0 <col:3> 'void ()' Function 0x55dff6d20570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55dff6d7d440 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55dff6d7d428 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dff6d7d408 <col:3> 'void ()' Function 0x55dff6d204b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55dff6d7d498 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55dff6d7d480 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dff6d7d460 <col:3> 'void ()' Function 0x55dff6d20570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55dff6d7d4f0 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55dff6d7d4d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dff6d7d4b8 <col:3> 'void ()' Function 0x55dff6d204b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55dff6d7d5a8 <line:728:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55dff6d7d510 <col:3> 'int' lvalue Var 0x55dff6d79740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55dff6d7d588 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55dff6d7d570 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dff6d7d530 <col:22> 'int' lvalue Var 0x55dff6d79740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55dff6d7d550 <col:41> 'int' 1
|   |-CallExpr 0x55dff6d7d600 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55dff6d7d5e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dff6d7d5c8 <col:3> 'void ()' Function 0x55dff6d20570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55dff6d7d6a8 <line:730:3, col:36>
|     `-CallExpr 0x55dff6d7d688 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55dff6d7d670 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55dff6d7d620 <col:10> 'void *(void)' Function 0x55dff6d1ffc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55dff6d7d850 prev 0x55dff6d79268 <line:732:1, line:771:1> line:732:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55dff6d7d7b8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55dff6d82190 <line:733:1, line:771:1>
|   |-CallExpr 0x55dff6d7d930 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55dff6d7d918 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dff6d7d8f8 <col:3> 'void ()' Function 0x55dff6d204b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55dff6d7d990 <line:735:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55dff6d7d950 <col:3> 'int' lvalue Var 0x55dff6d79b90 'x' 'int'
|   | `-IntegerLiteral 0x55dff6d7d970 <col:7> 'int' 1
|   |-CallExpr 0x55dff6d7d9e8 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55dff6d7d9d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dff6d7d9b0 <col:3> 'void ()' Function 0x55dff6d20570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55dff6d7da40 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55dff6d7da28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dff6d7da08 <col:3> 'void ()' Function 0x55dff6d204b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55dff6d7dd28 <line:738:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55dff6d7da60 <col:3> 'int' lvalue Var 0x55dff6d79b90 'x' 'int'
|   | `-ConditionalOperator 0x55dff6d7dcf8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55dff6d7db20 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55dff6d7dad8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55dff6d7dac0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55dff6d7da80 <col:7> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55dff6d7db08 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55dff6d7daf0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55dff6d7daa0 <col:25> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55dff6d7dce0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dff6d7db40 <col:42> 'int' lvalue Var 0x55dff6d7a200 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55dff6d7dcc0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55dff6d7dc90 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55dff6d7dc00 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55dff6d7dbb8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55dff6d7dba0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55dff6d7db60 <col:55> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55dff6d7dbe8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55dff6d7dbd0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55dff6d7db80 <col:73> '_Bool' lvalue Var 0x55dff6d7a010 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55dff6d7dc60 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55dff6d7dc20 <col:90> 'int' lvalue Var 0x55dff6d7a2f8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55dff6d7dc78 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dff6d7dc40 <col:102> 'int' lvalue Var 0x55dff6d79b90 'x' 'int'
|   |-BinaryOperator 0x55dff6d7df30 <line:739:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d7dd48 <col:3> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55dff6d7df18 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dff6d7dee8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55dff6d7de08 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55dff6d7ddc0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55dff6d7dda8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55dff6d7dd68 <col:20> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55dff6d7ddf0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55dff6d7ddd8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55dff6d7dd88 <col:38> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55dff6d7dea0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55dff6d7de58 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55dff6d7de28 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55dff6d7ded0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55dff6d7deb8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dff6d7de80 <col:66> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55dff6d7e228 <line:740:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d7df60 <col:3> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55dff6d7e210 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dff6d7e1e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55dff6d7e100 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55dff6d7e020 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55dff6d7dfd8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55dff6d7dfc0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55dff6d7df80 <col:20> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55dff6d7e008 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55dff6d7dff0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55dff6d7dfa0 <col:38> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55dff6d7e0e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55dff6d7e098 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55dff6d7e080 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55dff6d7e040 <col:56> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55dff6d7e0c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55dff6d7e0b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55dff6d7e060 <col:74> '_Bool' lvalue Var 0x55dff6d7a010 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55dff6d7e198 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55dff6d7e150 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55dff6d7e120 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55dff6d7e1c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55dff6d7e1b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dff6d7e178 <col:102> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55dff6d7e430 <line:741:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d7e248 <col:3> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55dff6d7e418 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dff6d7e3e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55dff6d7e308 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55dff6d7e2c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55dff6d7e2a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55dff6d7e268 <col:20> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55dff6d7e2f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55dff6d7e2d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55dff6d7e288 <col:38> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55dff6d7e3a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55dff6d7e358 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55dff6d7e328 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55dff6d7e3d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55dff6d7e3b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dff6d7e380 <col:66> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55dff6d7e718 <line:742:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d7e450 <col:3> '_Bool' lvalue Var 0x55dff6d7a010 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55dff6d7e700 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dff6d7e6d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55dff6d7e5f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55dff6d7e510 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55dff6d7e4c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55dff6d7e4b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55dff6d7e470 <col:20> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55dff6d7e4f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55dff6d7e4e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55dff6d7e490 <col:38> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55dff6d7e5d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55dff6d7e588 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55dff6d7e570 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55dff6d7e530 <col:56> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55dff6d7e5b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55dff6d7e5a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55dff6d7e550 <col:74> '_Bool' lvalue Var 0x55dff6d7a010 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55dff6d7e688 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55dff6d7e640 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55dff6d7e610 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55dff6d7e6b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55dff6d7e6a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dff6d7e668 <col:102> '_Bool' lvalue Var 0x55dff6d7a010 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55dff6d7e770 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55dff6d7e758 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dff6d7e738 <col:3> 'void ()' Function 0x55dff6d20570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55dff6d7e7c8 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55dff6d7e7b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dff6d7e790 <col:3> 'void ()' Function 0x55dff6d204b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55dff6d7e860 <line:745:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d7e7e8 <col:3> '_Bool' lvalue Var 0x55dff6d7a508 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55dff6d7e840 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55dff6d7e828 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55dff6d7e808 <col:19> '_Bool (void)' Function 0x55dff6d1fc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55dff6d7e8f8 <line:746:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d7e880 <col:3> '_Bool' lvalue Var 0x55dff6d7a580 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55dff6d7e8d8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55dff6d7e8c0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55dff6d7e8a0 <col:19> '_Bool (void)' Function 0x55dff6d1fc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55dff6d7e970 <line:747:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d7e918 <col:3> '_Bool' lvalue Var 0x55dff6d79c28 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55dff6d7e958 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dff6d7e938 <col:21> '_Bool' lvalue Var 0x55dff6d7a580 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55dff6d7e9e8 <line:748:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55dff6d7e990 <col:3> 'int' lvalue Var 0x55dff6d79ca8 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55dff6d7e9d0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dff6d7e9b0 <col:15> 'int' lvalue Var 0x55dff6d79b90 'x' 'int'
|   |-BinaryOperator 0x55dff6d7ee20 <line:749:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55dff6d7ea08 <col:3> 'int' lvalue Var 0x55dff6d79b90 'x' 'int'
|   | `-ConditionalOperator 0x55dff6d7edf0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55dff6d7ec18 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55dff6d7eb38 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55dff6d7ea60 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55dff6d7ea48 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55dff6d7ea28 <col:8> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55dff6d7eb18 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55dff6d7eab0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55dff6d7ea98 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55dff6d7ea78 <col:27> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x55dff6d7eb00 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55dff6d7eae8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55dff6d7eac8 <col:46> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55dff6d7ebf8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55dff6d7eb90 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55dff6d7eb78 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55dff6d7eb58 <col:65> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x55dff6d7ebe0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55dff6d7ebc8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55dff6d7eba8 <col:84> '_Bool' lvalue Var 0x55dff6d7a010 'x$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55dff6d7edd8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dff6d7ec38 <col:101> 'int' lvalue Var 0x55dff6d79b90 'x' 'int'
|   |   `-ParenExpr 0x55dff6d7edb8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55dff6d7ed88 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55dff6d7ecf8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55dff6d7ecb0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55dff6d7ec98 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55dff6d7ec58 <col:106> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55dff6d7ece0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55dff6d7ecc8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55dff6d7ec78 <col:124> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55dff6d7ed58 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55dff6d7ed18 <col:141> 'int' lvalue Var 0x55dff6d7a200 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55dff6d7ed70 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dff6d7ed38 <col:153> 'int' lvalue Var 0x55dff6d7a2f8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55dff6d7f340 <line:750:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55dff6d7ee40 <col:3> 'int' lvalue Var 0x55dff6d7a200 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55dff6d7f310 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55dff6d7f2e0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55dff6d7f2c8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55dff6d7ee60 <col:15> '_Bool' lvalue Var 0x55dff6d7a580 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55dff6d7f2f8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dff6d7ee80 <col:31> 'int' lvalue Var 0x55dff6d7a200 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55dff6d7f2a8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55dff6d7f278 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55dff6d7f0a0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55dff6d7efc0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55dff6d7eed8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55dff6d7eec0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55dff6d7eea0 <col:45> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55dff6d7efa0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55dff6d7ef28 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55dff6d7ef10 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55dff6d7eef0 <col:64> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55dff6d7ef88 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55dff6d7ef70 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55dff6d7ef40 <col:83> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55dff6d7f080 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55dff6d7f018 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55dff6d7f000 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55dff6d7efe0 <col:102> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55dff6d7f068 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55dff6d7f050 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55dff6d7f030 <col:121> '_Bool' lvalue Var 0x55dff6d7a010 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55dff6d7f260 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55dff6d7f0c0 <col:138> 'int' lvalue Var 0x55dff6d7a200 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55dff6d7f240 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55dff6d7f210 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55dff6d7f180 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55dff6d7f138 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55dff6d7f120 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55dff6d7f0e0 <col:151> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55dff6d7f168 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55dff6d7f150 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55dff6d7f100 <col:169> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55dff6d7f1e0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55dff6d7f1a0 <col:186> 'int' lvalue Var 0x55dff6d7a200 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55dff6d7f1f8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55dff6d7f1c0 <col:198> 'int' lvalue Var 0x55dff6d7a200 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55dff6d7f850 <line:751:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55dff6d7f360 <col:3> 'int' lvalue Var 0x55dff6d7a2f8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55dff6d7f820 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55dff6d7f7f0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55dff6d7f7d8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55dff6d7f380 <col:15> '_Bool' lvalue Var 0x55dff6d7a580 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55dff6d7f808 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dff6d7f3a0 <col:31> 'int' lvalue Var 0x55dff6d7a2f8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55dff6d7f7b8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55dff6d7f788 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55dff6d7f5b0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55dff6d7f4d0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55dff6d7f3f8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55dff6d7f3e0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55dff6d7f3c0 <col:45> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55dff6d7f4b0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55dff6d7f448 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55dff6d7f430 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55dff6d7f410 <col:64> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55dff6d7f498 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55dff6d7f480 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55dff6d7f460 <col:83> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55dff6d7f590 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55dff6d7f528 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55dff6d7f510 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55dff6d7f4f0 <col:102> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55dff6d7f578 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55dff6d7f560 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55dff6d7f540 <col:121> '_Bool' lvalue Var 0x55dff6d7a010 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55dff6d7f770 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55dff6d7f5d0 <col:138> 'int' lvalue Var 0x55dff6d7a2f8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55dff6d7f750 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55dff6d7f720 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55dff6d7f690 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55dff6d7f648 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55dff6d7f630 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55dff6d7f5f0 <col:151> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55dff6d7f678 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55dff6d7f660 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55dff6d7f610 <col:169> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55dff6d7f6f0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55dff6d7f6b0 <col:186> 'int' lvalue Var 0x55dff6d7a2f8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55dff6d7f708 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55dff6d7f6d0 <col:198> 'int' lvalue Var 0x55dff6d7a2f8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55dff6d7fdf8 <line:752:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d7f870 <col:3> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55dff6d7fde0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dff6d7fdb0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55dff6d7fd68 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55dff6d7fd50 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55dff6d7f890 <col:20> '_Bool' lvalue Var 0x55dff6d7a580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55dff6d7fd98 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55dff6d7fd80 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55dff6d7f8b0 <col:36> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55dff6d7fd30 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55dff6d7fd00 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55dff6d7fac0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55dff6d7f9e0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55dff6d7f908 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55dff6d7f8f0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55dff6d7f8d0 <col:55> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55dff6d7f9c0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55dff6d7f958 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55dff6d7f940 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55dff6d7f920 <col:74> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55dff6d7f9a8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55dff6d7f990 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55dff6d7f970 <col:93> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55dff6d7faa0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55dff6d7fa38 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55dff6d7fa20 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55dff6d7fa00 <col:112> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55dff6d7fa88 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55dff6d7fa70 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55dff6d7fa50 <col:131> '_Bool' lvalue Var 0x55dff6d7a010 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55dff6d7fce8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55dff6d7fcd0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55dff6d7fae0 <col:148> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55dff6d7fcb0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55dff6d7fc80 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55dff6d7fba0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55dff6d7fb58 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55dff6d7fb40 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55dff6d7fb00 <col:166> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55dff6d7fb88 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55dff6d7fb70 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55dff6d7fb20 <col:184> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55dff6d7fc38 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55dff6d7fbf0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55dff6d7fbc0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55dff6d7fc68 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55dff6d7fc50 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55dff6d7fc18 <col:212> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55dff6d803d8 <line:753:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d7fe18 <col:3> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55dff6d803c0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dff6d80390 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55dff6d80348 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55dff6d80330 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55dff6d7fe38 <col:20> '_Bool' lvalue Var 0x55dff6d7a580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55dff6d80378 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55dff6d80360 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55dff6d7fe58 <col:36> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55dff6d80310 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55dff6d802e0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55dff6d80080 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55dff6d7ffa0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55dff6d7feb0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55dff6d7fe98 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55dff6d7fe78 <col:55> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55dff6d7ff80 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55dff6d7ff00 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55dff6d7fee8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55dff6d7fec8 <col:74> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55dff6d7ff50 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55dff6d7ff38 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55dff6d7ff18 <col:93> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55dff6d80060 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55dff6d7fff8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55dff6d7ffe0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55dff6d7ffc0 <col:112> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55dff6d80048 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55dff6d80030 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55dff6d80010 <col:131> '_Bool' lvalue Var 0x55dff6d7a010 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55dff6d802c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55dff6d802b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55dff6d800a0 <col:148> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55dff6d80290 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55dff6d80260 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55dff6d80160 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55dff6d80118 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55dff6d80100 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55dff6d800c0 <col:166> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55dff6d80148 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55dff6d80130 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55dff6d800e0 <col:184> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55dff6d80230 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55dff6d801b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55dff6d80180 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55dff6d80248 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55dff6d80208 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55dff6d801d8 <col:219> 'int' 0
|   |-BinaryOperator 0x55dff6d80980 <line:754:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d803f8 <col:3> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55dff6d80968 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dff6d80938 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55dff6d808f0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55dff6d808d8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55dff6d80418 <col:20> '_Bool' lvalue Var 0x55dff6d7a580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55dff6d80920 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55dff6d80908 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55dff6d80438 <col:36> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55dff6d808b8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55dff6d80888 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55dff6d80648 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55dff6d80568 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55dff6d80490 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55dff6d80478 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55dff6d80458 <col:55> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55dff6d80548 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55dff6d804e0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55dff6d804c8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55dff6d804a8 <col:74> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55dff6d80530 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55dff6d80518 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55dff6d804f8 <col:93> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55dff6d80628 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55dff6d805c0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55dff6d805a8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55dff6d80588 <col:112> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55dff6d80610 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55dff6d805f8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55dff6d805d8 <col:131> '_Bool' lvalue Var 0x55dff6d7a010 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55dff6d80870 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55dff6d80858 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55dff6d80668 <col:148> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55dff6d80838 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55dff6d80808 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55dff6d80728 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55dff6d806e0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55dff6d806c8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55dff6d80688 <col:166> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55dff6d80710 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55dff6d806f8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55dff6d806a8 <col:184> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55dff6d807c0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55dff6d80778 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55dff6d80748 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55dff6d807f0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55dff6d807d8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55dff6d807a0 <col:212> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55dff6d80f48 <line:755:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d809a0 <col:3> '_Bool' lvalue Var 0x55dff6d7a010 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55dff6d80f30 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dff6d80f00 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55dff6d80eb8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55dff6d80ea0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55dff6d809c0 <col:20> '_Bool' lvalue Var 0x55dff6d7a580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55dff6d80ee8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55dff6d80ed0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55dff6d809e0 <col:36> '_Bool' lvalue Var 0x55dff6d7a010 'x$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x55dff6d80e80 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55dff6d80e50 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55dff6d80bf0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55dff6d80b10 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55dff6d80a38 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55dff6d80a20 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55dff6d80a00 <col:55> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55dff6d80af0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55dff6d80a88 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55dff6d80a70 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55dff6d80a50 <col:74> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55dff6d80ad8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55dff6d80ac0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55dff6d80aa0 <col:93> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55dff6d80bd0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55dff6d80b68 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55dff6d80b50 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55dff6d80b30 <col:112> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55dff6d80bb8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55dff6d80ba0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55dff6d80b80 <col:131> '_Bool' lvalue Var 0x55dff6d7a010 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55dff6d80e38 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55dff6d80e20 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55dff6d80c10 <col:148> '_Bool' lvalue Var 0x55dff6d7a010 'x$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x55dff6d80e00 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55dff6d80dd0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55dff6d80cd0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55dff6d80c88 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55dff6d80c70 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55dff6d80c30 <col:166> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55dff6d80cb8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55dff6d80ca0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55dff6d80c50 <col:184> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55dff6d80da0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55dff6d80d20 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55dff6d80cf0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55dff6d80db8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55dff6d80d78 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55dff6d80d48 <col:219> 'int' 0
|   |-BinaryOperator 0x55dff6d80fe8 <line:756:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55dff6d80f90 <col:3> 'int' lvalue Var 0x55dff6d79980 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55dff6d80fd0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dff6d80fb0 <col:25> 'int' lvalue Var 0x55dff6d79b90 'x' 'int'
|   |-BinaryOperator 0x55dff6d81118 <line:757:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55dff6d81008 <col:3> 'int' lvalue Var 0x55dff6d79b90 'x' 'int'
|   | `-ConditionalOperator 0x55dff6d810e8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55dff6d810a0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55dff6d81088 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55dff6d81028 <col:7> '_Bool' lvalue Var 0x55dff6d79c28 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55dff6d810b8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dff6d81048 <col:25> 'int' lvalue Var 0x55dff6d79ca8 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55dff6d810d0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55dff6d81068 <col:37> 'int' lvalue Var 0x55dff6d79b90 'x' 'int'
|   |-BinaryOperator 0x55dff6d811b0 <line:758:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d81138 <col:3> '_Bool' lvalue Var 0x55dff6d79c28 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55dff6d81188 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55dff6d81158 <col:28> 'int' 0
|   |-CallExpr 0x55dff6d81208 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55dff6d811f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dff6d811d0 <col:3> 'void ()' Function 0x55dff6d20570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55dff6d81260 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55dff6d81248 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dff6d81228 <col:3> 'void ()' Function 0x55dff6d204b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55dff6d81548 <line:761:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55dff6d81280 <col:3> 'int' lvalue Var 0x55dff6d79b90 'x' 'int'
|   | `-ConditionalOperator 0x55dff6d81518 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55dff6d81340 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55dff6d812f8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55dff6d812e0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55dff6d812a0 <col:7> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55dff6d81328 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55dff6d81310 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55dff6d812c0 <col:25> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55dff6d81500 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dff6d81360 <col:42> 'int' lvalue Var 0x55dff6d7a200 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55dff6d814e0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55dff6d814b0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55dff6d81420 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55dff6d813d8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55dff6d813c0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55dff6d81380 <col:55> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55dff6d81408 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55dff6d813f0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55dff6d813a0 <col:73> '_Bool' lvalue Var 0x55dff6d7a010 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55dff6d81480 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55dff6d81440 <col:90> 'int' lvalue Var 0x55dff6d7a2f8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55dff6d81498 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dff6d81460 <col:102> 'int' lvalue Var 0x55dff6d79b90 'x' 'int'
|   |-BinaryOperator 0x55dff6d81750 <line:762:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d81568 <col:3> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55dff6d81738 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dff6d81708 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55dff6d81628 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55dff6d815e0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55dff6d815c8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55dff6d81588 <col:20> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55dff6d81610 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55dff6d815f8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55dff6d815a8 <col:38> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55dff6d816c0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55dff6d81678 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55dff6d81648 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55dff6d816f0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55dff6d816d8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dff6d816a0 <col:66> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55dff6d81a38 <line:763:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d81770 <col:3> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55dff6d81a20 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dff6d819f0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55dff6d81910 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55dff6d81830 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55dff6d817e8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55dff6d817d0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55dff6d81790 <col:20> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55dff6d81818 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55dff6d81800 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55dff6d817b0 <col:38> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55dff6d818f0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55dff6d818a8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55dff6d81890 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55dff6d81850 <col:56> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55dff6d818d8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55dff6d818c0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55dff6d81870 <col:74> '_Bool' lvalue Var 0x55dff6d7a010 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55dff6d819a8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55dff6d81960 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55dff6d81930 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55dff6d819d8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55dff6d819c0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dff6d81988 <col:102> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55dff6d81c40 <line:764:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d81a58 <col:3> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55dff6d81c28 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dff6d81bf8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55dff6d81b18 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55dff6d81ad0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55dff6d81ab8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55dff6d81a78 <col:20> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55dff6d81b00 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55dff6d81ae8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55dff6d81a98 <col:38> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55dff6d81bb0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55dff6d81b68 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55dff6d81b38 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55dff6d81be0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55dff6d81bc8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dff6d81b90 <col:66> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55dff6d81f28 <line:765:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d81c60 <col:3> '_Bool' lvalue Var 0x55dff6d7a010 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55dff6d81f10 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dff6d81ee0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55dff6d81e00 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55dff6d81d20 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55dff6d81cd8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55dff6d81cc0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55dff6d81c80 <col:20> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55dff6d81d08 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55dff6d81cf0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55dff6d81ca0 <col:38> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55dff6d81de0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55dff6d81d98 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55dff6d81d80 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55dff6d81d40 <col:56> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55dff6d81dc8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55dff6d81db0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55dff6d81d60 <col:74> '_Bool' lvalue Var 0x55dff6d7a010 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55dff6d81e98 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55dff6d81e50 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55dff6d81e20 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55dff6d81ec8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55dff6d81eb0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dff6d81e78 <col:102> '_Bool' lvalue Var 0x55dff6d7a010 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55dff6d81fa0 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55dff6d81f68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dff6d81f48 <col:3> 'void ()' Function 0x55dff6d20570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55dff6d81ff8 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55dff6d81fe0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dff6d81fc0 <col:3> 'void ()' Function 0x55dff6d204b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55dff6d820b0 <line:768:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55dff6d82018 <col:3> 'int' lvalue Var 0x55dff6d79740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55dff6d82090 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55dff6d82078 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dff6d82038 <col:22> 'int' lvalue Var 0x55dff6d79740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55dff6d82058 <col:41> 'int' 1
|   |-CallExpr 0x55dff6d82108 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55dff6d820f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dff6d820d0 <col:3> 'void ()' Function 0x55dff6d20570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55dff6d82180 <line:770:3, col:36>
|     `-CallExpr 0x55dff6d82160 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55dff6d82148 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55dff6d82128 <col:10> 'void *(void)' Function 0x55dff6d1ffc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55dff6d82378 prev 0x55dff6d793c0 <line:772:1, line:800:1> line:772:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55dff6d822e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55dff6d83b28 <line:773:1, line:800:1>
|   |-CallExpr 0x55dff6d82458 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55dff6d82440 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dff6d82420 <col:3> 'void ()' Function 0x55dff6d204b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55dff6d824d0 <line:775:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55dff6d82478 <col:3> 'int' lvalue Var 0x55dff6d7a2f8 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55dff6d824b8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dff6d82498 <col:15> 'int' lvalue Var 0x55dff6d7a200 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55dff6d82530 <line:776:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55dff6d824f0 <col:3> 'int' lvalue Var 0x55dff6d7a200 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x55dff6d82510 <col:15> 'int' 2
|   |-BinaryOperator 0x55dff6d825a8 <line:777:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d82550 <col:3> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55dff6d82590 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dff6d82570 <col:20> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55dff6d82640 <line:778:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d825c8 <col:3> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55dff6d82618 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55dff6d825e8 <col:27> 'int' 1
|   |-CallExpr 0x55dff6d827c8 <line:779:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55dff6d827b0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55dff6d82660 <col:3> 'void (int)' Function 0x55dff6d20238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55dff6d82760 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55dff6d82740 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55dff6d82720 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55dff6d826d8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55dff6d826c0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55dff6d82680 <col:23> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55dff6d82708 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55dff6d826f0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55dff6d826a0 <col:41> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55dff6d82848 <line:780:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d827f0 <col:3> '_Bool' lvalue Var 0x55dff6d79f20 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55dff6d82830 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dff6d82810 <col:20> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55dff6d828c0 <line:781:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d82868 <col:3> '_Bool' lvalue Var 0x55dff6d79f98 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55dff6d828a8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dff6d82888 <col:20> '_Bool' lvalue Var 0x55dff6d79d98 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55dff6d82938 <line:782:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d828e0 <col:3> '_Bool' lvalue Var 0x55dff6d7a010 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55dff6d82920 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dff6d82900 <col:20> '_Bool' lvalue Var 0x55dff6d79e10 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55dff6d829b0 <line:783:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d82958 <col:3> '_Bool' lvalue Var 0x55dff6d7a088 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55dff6d82998 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dff6d82978 <col:20> '_Bool' lvalue Var 0x55dff6d79e88 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55dff6d82a48 <line:784:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d829d0 <col:3> '_Bool' lvalue Var 0x55dff6d79e88 'x$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x55dff6d82a20 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55dff6d829f0 <col:27> 'int' 1
|   |-CallExpr 0x55dff6d82aa0 <line:785:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55dff6d82a88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dff6d82a68 <col:3> 'void ()' Function 0x55dff6d20570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55dff6d82af8 <line:786:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55dff6d82ae0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dff6d82ac0 <col:3> 'void ()' Function 0x55dff6d204b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55dff6d82b58 <line:787:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55dff6d82b18 <col:3> 'int' lvalue Var 0x55dff6d7a470 'y' 'int'
|   | `-IntegerLiteral 0x55dff6d82b38 <col:7> 'int' 1
|   |-CallExpr 0x55dff6d82bb0 <line:788:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55dff6d82b98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dff6d82b78 <col:3> 'void ()' Function 0x55dff6d20570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55dff6d82c08 <line:789:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55dff6d82bf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dff6d82bd0 <col:3> 'void ()' Function 0x55dff6d204b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55dff6d82ef0 <line:790:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55dff6d82c28 <col:3> 'int' lvalue Var 0x55dff6d79b90 'x' 'int'
|   | `-ConditionalOperator 0x55dff6d82ec0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55dff6d82ce8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55dff6d82ca0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55dff6d82c88 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55dff6d82c48 <col:7> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55dff6d82cd0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55dff6d82cb8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55dff6d82c68 <col:25> '_Bool' lvalue Var 0x55dff6d79e88 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55dff6d82ea8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dff6d82d08 <col:42> 'int' lvalue Var 0x55dff6d7a200 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55dff6d82e88 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55dff6d82e58 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55dff6d82dc8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55dff6d82d80 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55dff6d82d68 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55dff6d82d28 <col:55> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55dff6d82db0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55dff6d82d98 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55dff6d82d48 <col:73> '_Bool' lvalue Var 0x55dff6d7a088 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55dff6d82e28 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55dff6d82de8 <col:90> 'int' lvalue Var 0x55dff6d7a2f8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55dff6d82e40 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dff6d82e08 <col:102> 'int' lvalue Var 0x55dff6d79b90 'x' 'int'
|   |-BinaryOperator 0x55dff6d83108 <line:791:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d82f10 <col:3> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55dff6d830f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dff6d830c0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55dff6d82fe0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55dff6d82f88 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55dff6d82f70 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55dff6d82f30 <col:20> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55dff6d82fc8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55dff6d82fb0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55dff6d82f50 <col:38> '_Bool' lvalue Var 0x55dff6d79e88 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55dff6d83078 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55dff6d83030 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55dff6d83000 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55dff6d830a8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55dff6d83090 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dff6d83058 <col:66> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55dff6d833f0 <line:792:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d83128 <col:3> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55dff6d833d8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dff6d833a8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55dff6d832c8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55dff6d831e8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55dff6d831a0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55dff6d83188 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55dff6d83148 <col:20> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55dff6d831d0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55dff6d831b8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55dff6d83168 <col:38> '_Bool' lvalue Var 0x55dff6d79e88 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55dff6d832a8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55dff6d83260 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55dff6d83248 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55dff6d83208 <col:56> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55dff6d83290 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55dff6d83278 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55dff6d83228 <col:74> '_Bool' lvalue Var 0x55dff6d7a088 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55dff6d83360 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55dff6d83318 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55dff6d832e8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55dff6d83390 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55dff6d83378 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dff6d83340 <col:102> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55dff6d835f8 <line:793:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d83410 <col:3> '_Bool' lvalue Var 0x55dff6d79e88 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55dff6d835e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dff6d835b0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55dff6d834d0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55dff6d83488 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55dff6d83470 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55dff6d83430 <col:20> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55dff6d834b8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55dff6d834a0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55dff6d83450 <col:38> '_Bool' lvalue Var 0x55dff6d79e88 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55dff6d83568 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55dff6d83520 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55dff6d834f0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55dff6d83598 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55dff6d83580 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dff6d83548 <col:66> '_Bool' lvalue Var 0x55dff6d79e88 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55dff6d838e0 <line:794:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55dff6d83618 <col:3> '_Bool' lvalue Var 0x55dff6d7a088 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55dff6d838c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dff6d83898 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55dff6d837b8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55dff6d836d8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55dff6d83690 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55dff6d83678 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55dff6d83638 <col:20> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55dff6d836c0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55dff6d836a8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55dff6d83658 <col:38> '_Bool' lvalue Var 0x55dff6d79e88 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55dff6d83798 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55dff6d83750 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55dff6d83738 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55dff6d836f8 <col:56> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55dff6d83780 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55dff6d83768 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55dff6d83718 <col:74> '_Bool' lvalue Var 0x55dff6d7a088 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55dff6d83850 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55dff6d83808 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55dff6d837d8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55dff6d83880 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55dff6d83868 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dff6d83830 <col:102> '_Bool' lvalue Var 0x55dff6d7a088 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55dff6d83938 <line:795:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55dff6d83920 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dff6d83900 <col:3> 'void ()' Function 0x55dff6d20570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55dff6d83990 <line:796:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55dff6d83978 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dff6d83958 <col:3> 'void ()' Function 0x55dff6d204b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55dff6d83a48 <line:797:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55dff6d839b0 <col:3> 'int' lvalue Var 0x55dff6d79740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55dff6d83a28 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55dff6d83a10 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dff6d839d0 <col:22> 'int' lvalue Var 0x55dff6d79740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55dff6d839f0 <col:41> 'int' 1
|   |-CallExpr 0x55dff6d83aa0 <line:798:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55dff6d83a88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dff6d83a68 <col:3> 'void ()' Function 0x55dff6d20570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55dff6d83b18 <line:799:3, col:36>
|     `-CallExpr 0x55dff6d83af8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55dff6d83ae0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55dff6d83ac0 <col:10> 'void *(void)' Function 0x55dff6d1ffc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55dff6d83c28 prev 0x55dff6d79488 <line:801:1, line:803:1> line:801:6 fence 'void ()'
| `-CompoundStmt 0x55dff6d83cc8 <line:802:1, line:803:1>
|-FunctionDecl 0x55dff6d83cf8 prev 0x55dff6d79548 <line:804:1, line:806:1> line:804:6 isync 'void ()'
| `-CompoundStmt 0x55dff6d83d98 <line:805:1, line:806:1>
|-FunctionDecl 0x55dff6d83dc8 prev 0x55dff6d79608 <line:807:1, line:809:1> line:807:6 lwfence 'void ()'
| `-CompoundStmt 0x55dff6d83e68 <line:808:1, line:809:1>
`-FunctionDecl 0x55dff6d83ed8 <line:810:1, line:847:1> line:810:5 main 'int ()'
  `-CompoundStmt 0x55dff6d88558 <line:811:1, line:847:1>
    |-DeclStmt 0x55dff6d84028 <line:812:3, col:18>
    | `-VarDecl 0x55dff6d83fc0 <col:3, col:13> col:13 used t2554 'pthread_t':'unsigned long'
    |-CallExpr 0x55dff6d84238 <line:813:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55dff6d84220 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55dff6d84040 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55dff6d609d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55dff6d84080 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55dff6d84060 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55dff6d83fc0 't2554' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55dff6d84278 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55dff6d840f8 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55dff6d840d0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55dff6d84098 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55dff6d84290 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55dff6d84118 <col:39> 'void *(void *)' Function 0x55dff6d7a698 'P0' 'void *(void *)'
    | `-ParenExpr 0x55dff6d84198 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55dff6d84170 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55dff6d84138 <col:52> 'int' 0
    |-DeclStmt 0x55dff6d84320 <line:814:3, col:18>
    | `-VarDecl 0x55dff6d842b8 <col:3, col:13> col:13 used t2555 'pthread_t':'unsigned long'
    |-CallExpr 0x55dff6d844c8 <line:815:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55dff6d844b0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55dff6d84338 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55dff6d609d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55dff6d84378 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55dff6d84358 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55dff6d842b8 't2555' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55dff6d84508 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55dff6d843f0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55dff6d843c8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55dff6d84390 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55dff6d84520 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55dff6d84410 <col:39> 'void *(void *)' Function 0x55dff6d7d850 'P1' 'void *(void *)'
    | `-ParenExpr 0x55dff6d84490 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55dff6d84468 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55dff6d84430 <col:52> 'int' 0
    |-DeclStmt 0x55dff6d845b0 <line:816:3, col:18>
    | `-VarDecl 0x55dff6d84548 <col:3, col:13> col:13 used t2556 'pthread_t':'unsigned long'
    |-CallExpr 0x55dff6d84758 <line:817:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55dff6d84740 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55dff6d845c8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55dff6d609d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55dff6d84608 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55dff6d845e8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55dff6d84548 't2556' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55dff6d84798 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55dff6d84680 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55dff6d84658 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55dff6d84620 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55dff6d847b0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55dff6d846a0 <col:39> 'void *(void *)' Function 0x55dff6d82378 'P2' 'void *(void *)'
    | `-ParenExpr 0x55dff6d84720 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55dff6d846f8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55dff6d846c0 <col:52> 'int' 0
    |-CallExpr 0x55dff6d84800 <line:818:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55dff6d847e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55dff6d847c8 <col:3> 'void ()' Function 0x55dff6d204b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55dff6d848d0 <line:819:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55dff6d84820 <col:3> '_Bool' lvalue Var 0x55dff6d79a18 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55dff6d848b8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55dff6d84898 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55dff6d84880 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55dff6d84840 <col:21> 'int' lvalue Var 0x55dff6d79740 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55dff6d84860 <col:41> 'int' 3
    |-CallExpr 0x55dff6d84928 <line:820:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55dff6d84910 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55dff6d848f0 <col:3> 'void ()' Function 0x55dff6d20570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55dff6d849a0 <line:821:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55dff6d84988 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55dff6d84948 <col:3> 'void (int)' Function 0x55dff6d1fe50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55dff6d849e0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55dff6d849c8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55dff6d84968 <col:21> '_Bool' lvalue Var 0x55dff6d79a18 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55dff6d84a30 <line:822:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55dff6d84a18 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55dff6d849f8 <col:3> 'void ()' Function 0x55dff6d204b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55dff6d84d18 <line:823:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55dff6d84a50 <col:3> 'int' lvalue Var 0x55dff6d79b90 'x' 'int'
    | `-ConditionalOperator 0x55dff6d84ce8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55dff6d84b10 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55dff6d84ac8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55dff6d84ab0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55dff6d84a70 <col:7> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55dff6d84af8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55dff6d84ae0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55dff6d84a90 <col:25> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55dff6d84cd0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55dff6d84b30 <col:42> 'int' lvalue Var 0x55dff6d7a200 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55dff6d84cb0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55dff6d84c80 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55dff6d84bf0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55dff6d84ba8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55dff6d84b90 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55dff6d84b50 <col:55> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55dff6d84bd8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55dff6d84bc0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55dff6d84b70 <col:73> '_Bool' lvalue Var 0x55dff6d79f20 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55dff6d84c50 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55dff6d84c10 <col:90> 'int' lvalue Var 0x55dff6d7a2f8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55dff6d84c68 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55dff6d84c30 <col:102> 'int' lvalue Var 0x55dff6d79b90 'x' 'int'
    |-BinaryOperator 0x55dff6d84f20 <line:824:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55dff6d84d38 <col:3> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55dff6d84f08 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55dff6d84ed8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55dff6d84df8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55dff6d84db0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55dff6d84d98 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55dff6d84d58 <col:20> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55dff6d84de0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55dff6d84dc8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55dff6d84d78 <col:38> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55dff6d84e90 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55dff6d84e48 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55dff6d84e18 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55dff6d84ec0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55dff6d84ea8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55dff6d84e70 <col:66> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55dff6d85220 <line:825:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55dff6d84f40 <col:3> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55dff6d85208 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55dff6d851d8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55dff6d850f8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55dff6d85018 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55dff6d84fd0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55dff6d84fa0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55dff6d84f60 <col:20> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55dff6d85000 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55dff6d84fe8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55dff6d84f80 <col:38> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55dff6d850d8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55dff6d85090 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55dff6d85078 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55dff6d85038 <col:56> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55dff6d850c0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55dff6d850a8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55dff6d85058 <col:74> '_Bool' lvalue Var 0x55dff6d79f20 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55dff6d85190 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55dff6d85148 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55dff6d85118 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55dff6d851c0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55dff6d851a8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55dff6d85170 <col:102> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55dff6d85428 <line:826:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55dff6d85240 <col:3> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55dff6d85410 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55dff6d853e0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55dff6d85300 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55dff6d852b8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55dff6d852a0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55dff6d85260 <col:20> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55dff6d852e8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55dff6d852d0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55dff6d85280 <col:38> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55dff6d85398 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55dff6d85350 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55dff6d85320 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55dff6d853c8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55dff6d853b0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55dff6d85378 <col:66> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55dff6d85710 <line:827:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55dff6d85448 <col:3> '_Bool' lvalue Var 0x55dff6d79f20 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55dff6d856f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55dff6d856c8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55dff6d855e8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55dff6d85508 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55dff6d854c0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55dff6d854a8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55dff6d85468 <col:20> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55dff6d854f0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55dff6d854d8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55dff6d85488 <col:38> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55dff6d855c8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55dff6d85580 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55dff6d85568 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55dff6d85528 <col:56> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55dff6d855b0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55dff6d85598 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55dff6d85548 <col:74> '_Bool' lvalue Var 0x55dff6d79f20 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55dff6d85680 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55dff6d85638 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55dff6d85608 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55dff6d856b0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55dff6d85698 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55dff6d85660 <col:102> '_Bool' lvalue Var 0x55dff6d79f20 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55dff6d85768 <line:828:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55dff6d85750 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55dff6d85730 <col:3> 'void ()' Function 0x55dff6d20570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55dff6d857c0 <line:829:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55dff6d857a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55dff6d85788 <col:3> 'void ()' Function 0x55dff6d204b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55dff6d85858 <line:830:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55dff6d857e0 <col:3> '_Bool' lvalue Var 0x55dff6d7a508 'weak$$choice0' '_Bool'
    | `-CallExpr 0x55dff6d85838 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55dff6d85820 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55dff6d85800 <col:19> '_Bool (void)' Function 0x55dff6d1fc80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55dff6d858f0 <line:831:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55dff6d85878 <col:3> '_Bool' lvalue Var 0x55dff6d7a580 'weak$$choice2' '_Bool'
    | `-CallExpr 0x55dff6d858d0 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55dff6d858b8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55dff6d85898 <col:19> '_Bool (void)' Function 0x55dff6d1fc80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55dff6d85968 <line:832:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x55dff6d85910 <col:3> '_Bool' lvalue Var 0x55dff6d79c28 'x$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x55dff6d85950 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x55dff6d85930 <col:21> '_Bool' lvalue Var 0x55dff6d7a580 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x55dff6d859e0 <line:833:3, col:15> 'int' '='
    | |-DeclRefExpr 0x55dff6d85988 <col:3> 'int' lvalue Var 0x55dff6d79ca8 'x$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x55dff6d859c8 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55dff6d859a8 <col:15> 'int' lvalue Var 0x55dff6d79b90 'x' 'int'
    |-BinaryOperator 0x55dff6d85e18 <line:834:3, col:162> 'int' '='
    | |-DeclRefExpr 0x55dff6d85a00 <col:3> 'int' lvalue Var 0x55dff6d79b90 'x' 'int'
    | `-ConditionalOperator 0x55dff6d85de8 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x55dff6d85c10 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x55dff6d85b30 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x55dff6d85a58 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x55dff6d85a40 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x55dff6d85a20 <col:8> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x55dff6d85b10 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x55dff6d85aa8 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x55dff6d85a90 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x55dff6d85a70 <col:27> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x55dff6d85af8 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x55dff6d85ae0 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x55dff6d85ac0 <col:46> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x55dff6d85bf0 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x55dff6d85b88 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x55dff6d85b70 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55dff6d85b50 <col:65> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x55dff6d85bd8 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x55dff6d85bc0 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x55dff6d85ba0 <col:84> '_Bool' lvalue Var 0x55dff6d79f20 'x$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55dff6d85dd0 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55dff6d85c30 <col:101> 'int' lvalue Var 0x55dff6d79b90 'x' 'int'
    |   `-ParenExpr 0x55dff6d85db0 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x55dff6d85d80 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x55dff6d85cf0 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55dff6d85ca8 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55dff6d85c90 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55dff6d85c50 <col:106> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55dff6d85cd8 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55dff6d85cc0 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55dff6d85c70 <col:124> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55dff6d85d50 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55dff6d85d10 <col:141> 'int' lvalue Var 0x55dff6d7a200 'x$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x55dff6d85d68 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55dff6d85d30 <col:153> 'int' lvalue Var 0x55dff6d7a2f8 'x$w_buff1' 'int'
    |-BinaryOperator 0x55dff6d86340 <line:835:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55dff6d85e38 <col:3> 'int' lvalue Var 0x55dff6d7a200 'x$w_buff0' 'int'
    | `-ConditionalOperator 0x55dff6d86310 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55dff6d862e0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55dff6d862c8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55dff6d85e58 <col:15> '_Bool' lvalue Var 0x55dff6d7a580 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55dff6d862f8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55dff6d85e78 <col:31> 'int' lvalue Var 0x55dff6d7a200 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55dff6d862a8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55dff6d86278 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55dff6d860a0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55dff6d85fa8 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55dff6d85ed0 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55dff6d85eb8 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55dff6d85e98 <col:45> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55dff6d85f88 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55dff6d85f20 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55dff6d85f08 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55dff6d85ee8 <col:64> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55dff6d85f70 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55dff6d85f58 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55dff6d85f38 <col:83> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55dff6d86080 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55dff6d86018 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55dff6d86000 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55dff6d85fe0 <col:102> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55dff6d86068 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55dff6d86050 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55dff6d86030 <col:121> '_Bool' lvalue Var 0x55dff6d79f20 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55dff6d86260 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55dff6d860c0 <col:138> 'int' lvalue Var 0x55dff6d7a200 'x$w_buff0' 'int'
    |       `-ParenExpr 0x55dff6d86240 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55dff6d86210 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55dff6d86180 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55dff6d86138 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55dff6d86120 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55dff6d860e0 <col:151> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55dff6d86168 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55dff6d86150 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55dff6d86100 <col:169> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55dff6d861e0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55dff6d861a0 <col:186> 'int' lvalue Var 0x55dff6d7a200 'x$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x55dff6d861f8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55dff6d861c0 <col:198> 'int' lvalue Var 0x55dff6d7a200 'x$w_buff0' 'int'
    |-BinaryOperator 0x55dff6d86850 <line:836:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55dff6d86360 <col:3> 'int' lvalue Var 0x55dff6d7a2f8 'x$w_buff1' 'int'
    | `-ConditionalOperator 0x55dff6d86820 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55dff6d867f0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55dff6d867d8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55dff6d86380 <col:15> '_Bool' lvalue Var 0x55dff6d7a580 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55dff6d86808 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55dff6d863a0 <col:31> 'int' lvalue Var 0x55dff6d7a2f8 'x$w_buff1' 'int'
    |   `-ParenExpr 0x55dff6d867b8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55dff6d86788 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55dff6d865b0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55dff6d864d0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55dff6d863f8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55dff6d863e0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55dff6d863c0 <col:45> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55dff6d864b0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55dff6d86448 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55dff6d86430 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55dff6d86410 <col:64> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55dff6d86498 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55dff6d86480 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55dff6d86460 <col:83> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55dff6d86590 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55dff6d86528 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55dff6d86510 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55dff6d864f0 <col:102> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55dff6d86578 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55dff6d86560 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55dff6d86540 <col:121> '_Bool' lvalue Var 0x55dff6d79f20 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55dff6d86770 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55dff6d865d0 <col:138> 'int' lvalue Var 0x55dff6d7a2f8 'x$w_buff1' 'int'
    |       `-ParenExpr 0x55dff6d86750 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55dff6d86720 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55dff6d86690 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55dff6d86648 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55dff6d86630 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55dff6d865f0 <col:151> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55dff6d86678 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55dff6d86660 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55dff6d86610 <col:169> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55dff6d866f0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55dff6d866b0 <col:186> 'int' lvalue Var 0x55dff6d7a2f8 'x$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x55dff6d86708 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55dff6d866d0 <col:198> 'int' lvalue Var 0x55dff6d7a2f8 'x$w_buff1' 'int'
    |-BinaryOperator 0x55dff6d86df8 <line:837:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55dff6d86870 <col:3> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55dff6d86de0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55dff6d86db0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55dff6d86d68 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55dff6d86d50 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55dff6d86890 <col:20> '_Bool' lvalue Var 0x55dff6d7a580 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55dff6d86d98 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55dff6d86d80 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55dff6d868b0 <col:36> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x55dff6d86d30 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55dff6d86d00 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55dff6d86ac0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55dff6d869e0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55dff6d86908 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55dff6d868f0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55dff6d868d0 <col:55> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55dff6d869c0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55dff6d86958 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55dff6d86940 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55dff6d86920 <col:74> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55dff6d869a8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55dff6d86990 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55dff6d86970 <col:93> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55dff6d86aa0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55dff6d86a38 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55dff6d86a20 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55dff6d86a00 <col:112> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55dff6d86a88 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55dff6d86a70 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55dff6d86a50 <col:131> '_Bool' lvalue Var 0x55dff6d79f20 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55dff6d86ce8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55dff6d86cd0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55dff6d86ae0 <col:148> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x55dff6d86cb0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55dff6d86c80 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55dff6d86ba0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55dff6d86b58 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55dff6d86b40 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55dff6d86b00 <col:166> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55dff6d86b88 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55dff6d86b70 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55dff6d86b20 <col:184> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55dff6d86c38 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55dff6d86bf0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55dff6d86bc0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55dff6d86c68 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55dff6d86c50 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55dff6d86c18 <col:212> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55dff6d873d0 <line:838:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55dff6d86e18 <col:3> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55dff6d873b8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55dff6d87388 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55dff6d87340 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55dff6d87328 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55dff6d86e38 <col:20> '_Bool' lvalue Var 0x55dff6d7a580 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55dff6d87370 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55dff6d87358 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55dff6d86e58 <col:36> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x55dff6d87308 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55dff6d872d8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55dff6d87078 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55dff6d86f88 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55dff6d86eb0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55dff6d86e98 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55dff6d86e78 <col:55> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55dff6d86f68 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55dff6d86f00 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55dff6d86ee8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55dff6d86ec8 <col:74> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55dff6d86f50 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55dff6d86f38 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55dff6d86f18 <col:93> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55dff6d87058 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55dff6d86ff0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55dff6d86fc8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55dff6d86fa8 <col:112> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55dff6d87040 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55dff6d87028 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55dff6d87008 <col:131> '_Bool' lvalue Var 0x55dff6d79f20 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55dff6d872c0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55dff6d872a8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55dff6d87098 <col:148> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x55dff6d87288 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55dff6d87258 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55dff6d87158 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55dff6d87110 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55dff6d870f8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55dff6d870b8 <col:166> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55dff6d87140 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55dff6d87128 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55dff6d870d8 <col:184> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55dff6d87228 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55dff6d871a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55dff6d87178 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55dff6d87240 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55dff6d87200 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55dff6d871d0 <col:219> 'int' 0
    |-BinaryOperator 0x55dff6d87978 <line:839:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55dff6d873f0 <col:3> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55dff6d87960 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55dff6d87930 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55dff6d878e8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55dff6d878d0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55dff6d87410 <col:20> '_Bool' lvalue Var 0x55dff6d7a580 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55dff6d87918 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55dff6d87900 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55dff6d87430 <col:36> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x55dff6d878b0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55dff6d87880 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55dff6d87640 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55dff6d87560 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55dff6d87488 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55dff6d87470 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55dff6d87450 <col:55> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55dff6d87540 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55dff6d874d8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55dff6d874c0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55dff6d874a0 <col:74> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55dff6d87528 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55dff6d87510 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55dff6d874f0 <col:93> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55dff6d87620 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55dff6d875b8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55dff6d875a0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55dff6d87580 <col:112> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55dff6d87608 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55dff6d875f0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55dff6d875d0 <col:131> '_Bool' lvalue Var 0x55dff6d79f20 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55dff6d87868 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55dff6d87850 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55dff6d87660 <col:148> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x55dff6d87830 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55dff6d87800 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55dff6d87720 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55dff6d876d8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55dff6d876c0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55dff6d87680 <col:166> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55dff6d87708 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55dff6d876f0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55dff6d876a0 <col:184> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55dff6d877b8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55dff6d87770 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55dff6d87740 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55dff6d877e8 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55dff6d877d0 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55dff6d87798 <col:212> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55dff6d87f40 <line:840:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55dff6d87998 <col:3> '_Bool' lvalue Var 0x55dff6d79f20 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55dff6d87f28 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55dff6d87ef8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55dff6d87eb0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55dff6d87e98 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55dff6d879b8 <col:20> '_Bool' lvalue Var 0x55dff6d7a580 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55dff6d87ee0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55dff6d87ec8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55dff6d879d8 <col:36> '_Bool' lvalue Var 0x55dff6d79f20 'x$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x55dff6d87e78 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55dff6d87e48 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55dff6d87be8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55dff6d87b08 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55dff6d87a30 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55dff6d87a18 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55dff6d879f8 <col:55> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55dff6d87ae8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55dff6d87a80 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55dff6d87a68 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55dff6d87a48 <col:74> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55dff6d87ad0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55dff6d87ab8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55dff6d87a98 <col:93> '_Bool' lvalue Var 0x55dff6d7a370 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55dff6d87bc8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55dff6d87b60 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55dff6d87b48 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55dff6d87b28 <col:112> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55dff6d87bb0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55dff6d87b98 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55dff6d87b78 <col:131> '_Bool' lvalue Var 0x55dff6d79f20 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55dff6d87e30 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55dff6d87e18 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55dff6d87c08 <col:148> '_Bool' lvalue Var 0x55dff6d79f20 'x$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x55dff6d87df8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55dff6d87dc8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55dff6d87cc8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55dff6d87c80 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55dff6d87c68 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55dff6d87c28 <col:166> '_Bool' lvalue Var 0x55dff6d7a278 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55dff6d87cb0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55dff6d87c98 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55dff6d87c48 <col:184> '_Bool' lvalue Var 0x55dff6d79d20 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55dff6d87d98 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55dff6d87d18 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55dff6d87ce8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55dff6d87db0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55dff6d87d70 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55dff6d87d40 <col:219> 'int' 0
    |-BinaryOperator 0x55dff6d88238 <line:841:3, col:95> '_Bool' '='
    | |-DeclRefExpr 0x55dff6d87f60 <col:3> '_Bool' lvalue Var 0x55dff6d79a90 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55dff6d88220 <col:21, col:95> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55dff6d88208 <col:21, col:95> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55dff6d881e8 <col:22, col:95> 'int'
    |       `-BinaryOperator 0x55dff6d881c8 <col:23, col:94> 'int' '&&'
    |         |-BinaryOperator 0x55dff6d88130 <col:23, col:66> 'int' '&&'
    |         | |-BinaryOperator 0x55dff6d88098 <col:23, col:38> 'int' '&&'
    |         | | |-BinaryOperator 0x55dff6d88000 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55dff6d87fc0 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55dff6d87f80 <col:23> 'int' lvalue Var 0x55dff6d79b90 'x' 'int'
    |         | | | `-IntegerLiteral 0x55dff6d87fa0 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x55dff6d88078 <col:33, col:38> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55dff6d88060 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55dff6d88020 <col:33> 'int' lvalue Var 0x55dff6d7a470 'y' 'int'
    |         | |   `-IntegerLiteral 0x55dff6d88040 <col:38> 'int' 2
    |         | `-BinaryOperator 0x55dff6d88110 <col:43, col:66> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55dff6d880f8 <col:43> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55dff6d880b8 <col:43> 'int' lvalue Var 0x55dff6d79860 '__unbuffered_p0_EAX' 'int'
    |         |   `-IntegerLiteral 0x55dff6d880d8 <col:66> 'int' 0
    |         `-BinaryOperator 0x55dff6d881a8 <col:71, col:94> 'int' '=='
    |           |-ImplicitCastExpr 0x55dff6d88190 <col:71> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55dff6d88150 <col:71> 'int' lvalue Var 0x55dff6d79980 '__unbuffered_p1_EAX' 'int'
    |           `-IntegerLiteral 0x55dff6d88170 <col:94> 'int' 1
    |-BinaryOperator 0x55dff6d88368 <line:842:3, col:37> 'int' '='
    | |-DeclRefExpr 0x55dff6d88258 <col:3> 'int' lvalue Var 0x55dff6d79b90 'x' 'int'
    | `-ConditionalOperator 0x55dff6d88338 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x55dff6d882f0 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55dff6d882d8 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55dff6d88278 <col:7> '_Bool' lvalue Var 0x55dff6d79c28 'x$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x55dff6d88308 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55dff6d88298 <col:25> 'int' lvalue Var 0x55dff6d79ca8 'x$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x55dff6d88320 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55dff6d882b8 <col:37> 'int' lvalue Var 0x55dff6d79b90 'x' 'int'
    |-BinaryOperator 0x55dff6d88400 <line:843:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x55dff6d88388 <col:3> '_Bool' lvalue Var 0x55dff6d79c28 'x$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x55dff6d883d8 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x55dff6d883a8 <col:28> 'int' 0
    |-CallExpr 0x55dff6d88458 <line:844:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55dff6d88440 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55dff6d88420 <col:3> 'void ()' Function 0x55dff6d20570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55dff6d884d0 <line:845:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55dff6d884b8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55dff6d88478 <col:3> 'void (int)' Function 0x55dff6d20238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55dff6d88510 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55dff6d884f8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55dff6d88498 <col:21> '_Bool' lvalue Var 0x55dff6d79a90 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55dff6d88548 <line:846:3, col:10>
      `-IntegerLiteral 0x55dff6d88528 <col:10> 'int' 0
