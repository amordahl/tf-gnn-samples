TranslationUnitDecl 0x562a4df92f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x562a4df93848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x562a4df93520 '__int128'
|-TypedefDecl 0x562a4df938b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x562a4df93540 'unsigned __int128'
|-TypedefDecl 0x562a4df93bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x562a4df93990 'struct __NSConstantString_tag'
|   `-Record 0x562a4df93910 '__NSConstantString_tag'
|-TypedefDecl 0x562a4df93c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x562a4df93c20 'char *'
|   `-BuiltinType 0x562a4df93020 'char'
|-TypedefDecl 0x562a4dfd2b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x562a4df93f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x562a4df93d40 'struct __va_list_tag'
|     `-Record 0x562a4df93cc0 '__va_list_tag'
|-FunctionDecl 0x562a4dfd2c80 <pthread-wmm/rfi010_tso.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x562a4dfd2e50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x562a4dfd2d80 <col:31> col:34 'int'
|-FunctionDecl 0x562a4dfd2fc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x562a4dfd30f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x562a4dfd3238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x562a4dfd31a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x562a4dfd3468 <col:40, col:99>
|   |-IfStmt 0x562a4dfd3438 <col:42, col:88>
|   | |-UnaryOperator 0x562a4dfd3318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x562a4dfd3300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x562a4dfd32e0 <col:47> 'int' lvalue ParmVar 0x562a4dfd31a8 'expression' 'int'
|   | `-CompoundStmt 0x562a4dfd3420 <col:59, col:88>
|   |   `-LabelStmt 0x562a4dfd3408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x562a4dfd3398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x562a4dfd3380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x562a4dfd3330 <col:68> 'void () __attribute__((noreturn))' Function 0x562a4dfd30f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x562a4dfd3450 <col:89>
|   `-ReturnStmt 0x562a4dfd3458 <col:91>
|-FunctionDecl 0x562a4dfd34b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x562a4dfd3570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x562a4dfd38f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562a4dfd3628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x562a4dfd36a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x562a4dfd3728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x562a4dfd37a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x562a4dfd39b0 <line:11:22>
|-FunctionDecl 0x562a4dff8f10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562a4dfd3a20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x562a4dfd3aa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x562a4dff8d40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x562a4dff8dc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x562a4dff8fd0 <line:14:22>
|-FunctionDecl 0x562a4dff9280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562a4dff9040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x562a4dff90c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x562a4dff9140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x562a4dff9338 <line:16:22>
|-TypedefDecl 0x562a4dff93a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x562a4df930e0 'unsigned char'
|-TypedefDecl 0x562a4dff9418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x562a4df93100 'unsigned short'
|-TypedefDecl 0x562a4dff9488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x562a4df93120 'unsigned int'
|-TypedefDecl 0x562a4dff94f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x562a4df93140 'unsigned long'
|-TypedefDecl 0x562a4dff9568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x562a4df93040 'signed char'
|-TypedefDecl 0x562a4dff95d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x562a4df930e0 'unsigned char'
|-TypedefDecl 0x562a4dff9648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x562a4df93060 'short'
|-TypedefDecl 0x562a4dff96b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x562a4df93100 'unsigned short'
|-TypedefDecl 0x562a4dff9728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x562a4df93080 'int'
|-TypedefDecl 0x562a4dff9798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x562a4df93120 'unsigned int'
|-TypedefDecl 0x562a4dff9808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x562a4df930a0 'long'
|-TypedefDecl 0x562a4dff9878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x562a4df93140 'unsigned long'
|-TypedefDecl 0x562a4dff98e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x562a4df930a0 'long'
|-TypedefDecl 0x562a4dff9958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x562a4df93140 'unsigned long'
|-TypedefDecl 0x562a4dff99c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x562a4df93140 'unsigned long'
|-TypedefDecl 0x562a4dff9a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x562a4df93120 'unsigned int'
|-TypedefDecl 0x562a4dff9aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x562a4df93120 'unsigned int'
|-TypedefDecl 0x562a4dff9b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x562a4df93140 'unsigned long'
|-TypedefDecl 0x562a4dff9b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x562a4df93140 'unsigned long'
|-TypedefDecl 0x562a4dff9bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x562a4df93120 'unsigned int'
|-TypedefDecl 0x562a4dff9c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x562a4df93140 'unsigned long'
|-TypedefDecl 0x562a4dff9cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x562a4df930a0 'long'
|-TypedefDecl 0x562a4dff9d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x562a4df930a0 'long'
|-TypedefDecl 0x562a4dff9dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x562a4df93080 'int'
|-RecordDecl 0x562a4dff9e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x562a4dff9f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x562a4dffa030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x562a4dff9fd0 'struct __fsid_t' sugar
|   `-RecordType 0x562a4dff9eb0 '__fsid_t'
|     `-Record 0x562a4dff9e30 ''
|-TypedefDecl 0x562a4dffa0b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x562a4df930a0 'long'
|-TypedefDecl 0x562a4dffa128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x562a4df93140 'unsigned long'
|-TypedefDecl 0x562a4dffa198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x562a4df93140 'unsigned long'
|-TypedefDecl 0x562a4dffa208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x562a4df93120 'unsigned int'
|-TypedefDecl 0x562a4dffa278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x562a4df930a0 'long'
|-TypedefDecl 0x562a4dffa2e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x562a4df93120 'unsigned int'
|-TypedefDecl 0x562a4dffa358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x562a4df930a0 'long'
|-TypedefDecl 0x562a4dffa3c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x562a4df93080 'int'
|-TypedefDecl 0x562a4dffa438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x562a4df93080 'int'
|-TypedefDecl 0x562a4dffa4a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x562a4df93080 'int'
|-TypedefDecl 0x562a4dffa518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x562a4df937a0 'void *'
|   `-BuiltinType 0x562a4df92fe0 'void'
|-TypedefDecl 0x562a4dffa588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x562a4df930a0 'long'
|-TypedefDecl 0x562a4dffa5f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x562a4df930a0 'long'
|-TypedefDecl 0x562a4dffa668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x562a4df930a0 'long'
|-TypedefDecl 0x562a4dffa6d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x562a4df93140 'unsigned long'
|-TypedefDecl 0x562a4dffa748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x562a4df93140 'unsigned long'
|-TypedefDecl 0x562a4dffa7b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x562a4df93140 'unsigned long'
|-TypedefDecl 0x562a4dffa828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x562a4df93140 'unsigned long'
|-TypedefDecl 0x562a4dffa898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x562a4df930a0 'long'
|-TypedefDecl 0x562a4dffa908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x562a4df930a0 'long'
|-TypedefDecl 0x562a4dffa978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x562a4df930a0 'long'
|-TypedefDecl 0x562a4dffa9e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x562a4df93140 'unsigned long'
|-TypedefDecl 0x562a4dffaa78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x562a4dffaa40 '__off64_t' sugar
|   |-Typedef 0x562a4dff9d68 '__off64_t'
|   `-BuiltinType 0x562a4df930a0 'long'
|-TypedefDecl 0x562a4dffab70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x562a4dffab30 '__quad_t *'
|   `-TypedefType 0x562a4dffaad0 '__quad_t' sugar
|     |-Typedef 0x562a4dff98e8 '__quad_t'
|     `-BuiltinType 0x562a4df930a0 'long'
|-TypedefDecl 0x562a4dffabe0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x562a4df93c20 'char *'
|   `-BuiltinType 0x562a4df93020 'char'
|-TypedefDecl 0x562a4dffac50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x562a4df930a0 'long'
|-TypedefDecl 0x562a4dffacc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x562a4df93120 'unsigned int'
|-FunctionDecl 0x562a4dffae38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x562a4dffad60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x562a4dffb148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x562a4dffb138 <line:73:3, col:34>
|     `-CallExpr 0x562a4dffb0f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x562a4dffb0e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x562a4dffb070 <col:10> '<builtin fn type>' Function 0x562a4dffaee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x562a4dffb120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x562a4dffb090 <col:29> 'unsigned int' lvalue ParmVar 0x562a4dffad60 '__bsx' 'unsigned int'
|-FunctionDecl 0x562a4dffaee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x562a4dffaf80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x562a4dffaff0 <col:10> Implicit
| `-ConstAttr 0x562a4dffb048 <col:10> Implicit
|-FunctionDecl 0x562a4dffb2a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x562a4dffb198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x562a4dffb5b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x562a4dffb5a8 <line:78:3, col:34>
|     `-CallExpr 0x562a4dffb568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x562a4dffb550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x562a4dffb4d8 <col:10> '<builtin fn type>' Function 0x562a4dffb348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x562a4dffb590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x562a4dffb4f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x562a4dffb198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x562a4dffb348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x562a4dffb3e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x562a4dffb458 <col:10> Implicit
| `-ConstAttr 0x562a4dffb4b0 <col:10> Implicit
|-TypedefDecl 0x562a4dffb5e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x562a4df93140 'unsigned long'
|-TypedefDecl 0x562a4dffb678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x562a4dffb640 '__time_t' sugar
|   |-Typedef 0x562a4dffa278 '__time_t'
|   `-BuiltinType 0x562a4df930a0 'long'
|-RecordDecl 0x562a4dffb6d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x562a4dffb788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x562a4dffb818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x562a4dffb8a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x562a4dffb870 '__pid_t' sugar
|   |-Typedef 0x562a4dff9dd8 '__pid_t'
|   `-BuiltinType 0x562a4df93080 'int'
|-RecordDecl 0x562a4dffb900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x562a4dffb9c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x562a4dffba10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x562a4dffbad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x562a4dffbb38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x562a4df93140 'unsigned long'
|-RecordDecl 0x562a4dffbb90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x562a4dffde70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x562a4dffdf20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x562a4dffdec0 'struct cpu_set_t' sugar
|   `-RecordType 0x562a4dffbc10 'cpu_set_t'
|     `-Record 0x562a4dffbb90 ''
|-FunctionDecl 0x562a4dffe1f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x562a4dffdfc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562a4dffe0d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x562a4dffe2a8 <line:108:19>
|-FunctionDecl 0x562a4dffe480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x562a4dffe310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x562a4dffe528 <col:69>
|-FunctionDecl 0x562a4dffe6a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x562a4dffe590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x562a4dffe748 <col:64>
|-FunctionDecl 0x562a4dffea08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x562a4dffe7b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562a4dffe8e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x562a4dffeab8 <line:114:22>
|-FunctionDecl 0x562a4dffee60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x562a4dffeb20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562a4dffec18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x562a4dffef10 <col:88>
|-FunctionDecl 0x562a4dfff1c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x562a4dffef78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562a4dffeff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x562a4dfff088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x562a4dfff280 <col:62>
|-FunctionDecl 0x562a4dfff3f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x562a4dfff2e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x562a4dfff4a0 <col:63>
|-FunctionDecl 0x562a4dfff5c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x562a4dfff668 <col:47>
|-FunctionDecl 0x562a4dfff770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x562a4dfff6d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x562a4dfff818 <col:69>
|-FunctionDecl 0x562a4dfff920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x562a4dfff888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x562a4dfff9c8 <col:69>
|-FunctionDecl 0x562a4dfffc88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562a4dfffa30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562a4dfffb68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x562a4dfffd38 <col:88>
|-TypedefDecl 0x562a4dfffdc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x562a4dfffd90 '__clock_t' sugar
|   |-Typedef 0x562a4dffa0b8 '__clock_t'
|   `-BuiltinType 0x562a4df930a0 'long'
|-TypedefDecl 0x562a4e0007e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x562a4dfffe20 '__clockid_t' sugar
|   |-Typedef 0x562a4dffa4a8 '__clockid_t'
|   `-BuiltinType 0x562a4df93080 'int'
|-TypedefDecl 0x562a4e000878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x562a4e000840 '__timer_t' sugar
|   |-Typedef 0x562a4dffa518 '__timer_t'
|   `-PointerType 0x562a4df937a0 'void *'
|     `-BuiltinType 0x562a4df92fe0 'void'
|-RecordDecl 0x562a4e0008d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x562a4e000990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x562a4e0009f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x562a4e000a60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x562a4e000ac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x562a4e000b30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x562a4e000b98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x562a4e000c00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x562a4e000c68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x562a4e000cd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x562a4e000d38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x562a4e000da0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x562a4e000df0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x562a4e000eb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x562a4e000f28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x562a4e000fd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x562a4e0011a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x562a4e001240 <col:45>
|-FunctionDecl 0x562a4e001420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x562a4e001310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x562a4e0014c8 <col:54>
|-FunctionDecl 0x562a4e0016c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x562a4e001530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x562a4e0015a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x562a4e001778 <line:158:22>
| `-ConstAttr 0x562a4e002410 <col:63>
|-FunctionDecl 0x562a4e002610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562a4e002508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x562a4e0026b8 <col:56>
|-FunctionDecl 0x562a4e002a60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x562a4e002728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x562a4e0027a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562a4e002820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x562a4e002918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x562a4e002b20 <col:54>
|-RecordDecl 0x562a4e002b78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x562a4e002c28 parent 0x562a4df92f88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x562a4e002e88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x562a4e002f28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x562a4e002f90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x562a4e002ff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x562a4e0030e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x562a4e003208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x562a4e0031b0 'struct __locale_struct *'
|   `-ElaboratedType 0x562a4e003140 'struct __locale_struct' sugar
|     `-RecordType 0x562a4e002c00 'struct __locale_struct'
|       `-Record 0x562a4e002b78 '__locale_struct'
|-TypedefDecl 0x562a4e0032b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x562a4e003280 '__locale_t' sugar
|   |-Typedef 0x562a4e003208 '__locale_t'
|   `-PointerType 0x562a4e0031b0 'struct __locale_struct *'
|     `-ElaboratedType 0x562a4e003140 'struct __locale_struct' sugar
|       `-RecordType 0x562a4e002c00 'struct __locale_struct'
|         `-Record 0x562a4e002b78 '__locale_struct'
|-FunctionDecl 0x562a4e0036b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x562a4e003328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x562a4e0033a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562a4e003438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x562a4e0034c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x562a4e003540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x562a4e003778 <col:40>
|-FunctionDecl 0x562a4e003968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x562a4e003840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x562a4e003a10 <col:66>
|-FunctionDecl 0x562a4e003b20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x562a4e003a78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x562a4e003bc8 <col:69>
|-FunctionDecl 0x562a4e003df8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x562a4e003c30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562a4e003cc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x562a4e003ea8 <col:52>
|-FunctionDecl 0x562a4e004050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x562a4e003f10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562a4e003fa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x562a4e004100 <col:55>
|-FunctionDecl 0x562a4e004298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x562a4e004180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x562a4e004340 <col:62>
|-FunctionDecl 0x562a4e004578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x562a4e0043a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x562a4e004620 <col:60>
|-FunctionDecl 0x562a4e004848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x562a4e0046a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x562a4e004720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x562a4e0048f8 <col:44>
|-FunctionDecl 0x562a4e004b08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x562a4e004960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562a4e0049e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x562a4e004bb8 <col:49>
|-VarDecl 0x562a4e004cb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x562a4e004d38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x562a4e004db8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x562a4e004e80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x562a4e004fb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x562a4e005050 <col:42>
|-VarDecl 0x562a4e0050c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x562a4e005140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x562a4e0052c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x562a4e0051b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x562a4e005370 <col:57>
|-FunctionDecl 0x562a4e0064f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562a4e0053f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x562a4e006598 <col:56>
|-FunctionDecl 0x562a4e0066a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562a4e006618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x562a4e006750 <col:59>
|-FunctionDecl 0x562a4e006858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x562a4e0067c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x562a4e006900 <col:48>
| `-ConstAttr 0x562a4e006958 <col:89>
|-FunctionDecl 0x562a4e006bb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x562a4e006a08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x562a4e006a98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x562a4e006e18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562a4e006ca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562a4e006d38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x562a4e006ec8 <col:88>
|-FunctionDecl 0x562a4e007060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562a4e006f30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562a4e006fc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x562a4e007110 <col:88>
|-FunctionDecl 0x562a4e007328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x562a4e007178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562a4e007208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x562a4e0073d8 <line:209:22>
|-FunctionDecl 0x562a4e007778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x562a4e007440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562a4e007500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x562a4e007590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x562a4e007620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x562a4e007a78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x562a4e007878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x562a4e007950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x562a4e007b28 <col:85>
|-FunctionDecl 0x562a4e007f18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x562a4e007b90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562a4e007cc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x562a4e007dd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x562a4e007fd0 <col:52>
|-FunctionDecl 0x562a4e008148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x562a4e008038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x562a4e0081f0 <col:61>
|-FunctionDecl 0x562a4e008668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x562a4e008258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x562a4e0082d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x562a4e008408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x562a4e008510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x562a4e008728 <col:62>
|-FunctionDecl 0x562a4e008948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x562a4e008790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x562a4e008820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x562a4e0089f8 <line:222:22>
|-FunctionDecl 0x562a4e008af8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x562a4e008a60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x562a4e008ba0 <col:65>
|-TypedefDecl 0x562a4e008c10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x562a4df93140 'unsigned long'
|-RecordDecl 0x562a4e008c68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x562a4e008db0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x562a4e008e18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562a4e008ec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x562a4e008e70 'union pthread_attr_t' sugar
|   `-RecordType 0x562a4e008cf0 'union pthread_attr_t'
|     `-Record 0x562a4e008c68 'pthread_attr_t'
|-RecordDecl 0x562a4e008f20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x562a4e009098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x562a4e009110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x562a4e0091c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x562a4e009160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x562a4e008fa0 'struct __pthread_internal_list'
|     `-Record 0x562a4e008f20 '__pthread_internal_list'
|-RecordDecl 0x562a4e009230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x562a4e0092d8 parent 0x562a4df92f88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x562a4e0093b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562a4e009418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x562a4e009480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x562a4e00d530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x562a4e00d598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x562a4e00d600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x562a4e00d688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x562a4e00d740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x562a4e00d830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x562a4e00d898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562a4e00da20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x562a4e00d9c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x562a4e0092b0 'pthread_mutex_t'
|     `-Record 0x562a4e009230 ''
|-RecordDecl 0x562a4e00da90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x562a4e00dbd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562a4e00dc38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562a4e00dcf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x562a4e00dc90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x562a4e00db10 'pthread_mutexattr_t'
|     `-Record 0x562a4e00da90 ''
|-RecordDecl 0x562a4e00dd60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x562a4e00de08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x562a4e00ded0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562a4e00df38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x562a4e00dfa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x562a4e00e008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x562a4e00e070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x562a4e00e0d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x562a4e00e140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x562a4e00e1a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x562a4e00e260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi010_tso.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/rfi010_tso.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x562a4e00e350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x562a4e00e3b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x562a4e00e540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x562a4e00e490 'union pthread_cond_t' sugar
|   `-RecordType 0x562a4e00dde0 'pthread_cond_t'
|     `-Record 0x562a4e00dd60 ''
|-RecordDecl 0x562a4e00e5b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x562a4e00e6b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562a4e00e718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562a4e00e7d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x562a4e00e770 'union pthread_condattr_t' sugar
|   `-RecordType 0x562a4e00e630 'pthread_condattr_t'
|     `-Record 0x562a4e00e5b0 ''
|-TypedefDecl 0x562a4e00e858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x562a4df93120 'unsigned int'
|-TypedefDecl 0x562a4e00e8c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x562a4df93080 'int'
|-RecordDecl 0x562a4e00e920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x562a4e00e9c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x562a4e00ea90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562a4e00eaf8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x562a4e00eb60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x562a4e00ebc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x562a4e00ec30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x562a4e00ec98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x562a4e00ed00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x562a4e00ed68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x562a4e00edd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x562a4e00ee38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x562a4e00eea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x562a4e00ef50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi010_tso.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/rfi010_tso.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x562a4e00eff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x562a4e00f060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562a4e00f1b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x562a4e00f150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x562a4e00e9a0 'pthread_rwlock_t'
|     `-Record 0x562a4e00e920 ''
|-RecordDecl 0x562a4e00f220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x562a4e00f360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x562a4e00f3c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562a4e00f480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x562a4e00f420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x562a4e00f2a0 'pthread_rwlockattr_t'
|     `-Record 0x562a4e00f220 ''
|-TypedefDecl 0x562a4e011560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x562a4df93084 'volatile int' volatile
|   `-BuiltinType 0x562a4df93080 'int'
|-RecordDecl 0x562a4e0115b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x562a4e011700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x562a4e011768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562a4e011820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x562a4e0117c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x562a4e011640 'pthread_barrier_t'
|     `-Record 0x562a4e0115b8 ''
|-RecordDecl 0x562a4e011890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x562a4e011990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562a4e0119f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562a4e011ab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x562a4e011a50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x562a4e011910 'pthread_barrierattr_t'
|     `-Record 0x562a4e011890 ''
|-TypedefDecl 0x562a4e011bc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x562a4e011b60 'long [8]' 8 
|   `-BuiltinType 0x562a4df930a0 'long'
|-EnumDecl 0x562a4e011c20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x562a4e011ce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x562a4e011d38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x562a4e011d88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x562a4e011e58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x562a4e011ea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x562a4e011ef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x562a4e011f48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x562a4e011fd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x562a4e011fb8 <col:26> 'int'
| |   `-DeclRefExpr 0x562a4e011f98 <col:26> 'int' EnumConstant 0x562a4e011e58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x562a4e012058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x562a4e012040 <col:29> 'int'
| |   `-DeclRefExpr 0x562a4e012020 <col:29> 'int' EnumConstant 0x562a4e011ea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x562a4e0120e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x562a4e0120c8 <col:30> 'int'
| |   `-DeclRefExpr 0x562a4e0120a8 <col:30> 'int' EnumConstant 0x562a4e011ef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x562a4e012168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x562a4e012150 <col:27> 'int'
|     `-DeclRefExpr 0x562a4e012130 <col:27> 'int' EnumConstant 0x562a4e011fd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x562a4e0121b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x562a4e012288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x562a4e012310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x562a4e0122f8 <col:30> 'int'
| |   `-DeclRefExpr 0x562a4e0122d8 <col:30> 'int' EnumConstant 0x562a4e012288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x562a4e012360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x562a4e0123e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x562a4e0123d0 <col:29> 'int'
|     `-DeclRefExpr 0x562a4e0123b0 <col:29> 'int' EnumConstant 0x562a4e012360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x562a4e012438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x562a4e012508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x562a4e012570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x562a4e0125c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x562a4e012610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x562a4e0126d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x562a4e012728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x562a4e012778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x562a4e012800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x562a4e0127e8 <col:31> 'int'
|     `-DeclRefExpr 0x562a4e0127c8 <col:31> 'int' EnumConstant 0x562a4e0126d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x562a4e012850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x562a4e012918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x562a4e012968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x562a4e0129b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x562a4e012a88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x562a4e012ad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x562a4e012b28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x562a4e012bf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x562a4e012c48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x562a4e012c98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x562a4e012ed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x562a4e012f40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x562a4e012fa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x562a4e0130c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x562a4e013118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x562a4e0131e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x562a4e013238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x562a4e013288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x562a4e013358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x562a4e0133a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x562a4e0139d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x562a4e0134a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x562a4e0135c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562a4e0137c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x562a4e013840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x562a4e013a98 <col:47>
| |-NonNullAttr 0x562a4e013af0 <col:77, col:94> 1 3
| `-CallbackAttr 0x562a4e013b28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x562a4e013c50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x562a4e013b80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x562a4e013ea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x562a4e013d08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x562a4e013d88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x562a4e014078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x562a4e013f68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x562a4e014120 <col:60>
|-FunctionDecl 0x562a4e014270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x562a4e014310 <col:54>
| `-ConstAttr 0x562a4e014368 <col:95>
|-FunctionDecl 0x562a4e014da0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x562a4e0143a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562a4e014418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x562a4e014e50 <line:395:19>
| `-ConstAttr 0x562a4e014ea8 <col:60>
|-FunctionDecl 0x562a4e015078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x562a4e014f40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x562a4e015120 <col:71>
| `-NonNullAttr 0x562a4e015178 <col:112, col:126> 1
|-FunctionDecl 0x562a4e015280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x562a4e0151c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x562a4e015328 <line:398:22>
| `-NonNullAttr 0x562a4e015380 <col:63, col:77> 1
|-FunctionDecl 0x562a4e0155a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x562a4e0153c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x562a4e015448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x562a4e015658 <line:401:22>
| `-NonNullAttr 0x562a4e0156b0 <col:63, col:80> 1 2
|-FunctionDecl 0x562a4e0158b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562a4e0156f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562a4e015778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x562a4e015968 <line:404:22>
| `-NonNullAttr 0x562a4e0159c0 <col:63, col:77> 1
|-FunctionDecl 0x562a4e015c18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x562a4e015a08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x562a4e015ab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x562a4e015cc8 <line:407:22>
| `-NonNullAttr 0x562a4e015d20 <col:63, col:80> 1 2
|-FunctionDecl 0x562a4e016f78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x562a4e016dc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562a4e016e38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562a4e017028 <line:410:22>
| `-NonNullAttr 0x562a4e017080 <col:63, col:77> 1
|-FunctionDecl 0x562a4e0172b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562a4e0170c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562a4e017158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x562a4e017368 <line:413:22>
| `-NonNullAttr 0x562a4e0173c0 <col:63, col:80> 1 2
|-FunctionDecl 0x562a4e0175f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562a4e017408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x562a4e017498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x562a4e0176a8 <col:37>
| `-NonNullAttr 0x562a4e017700 <col:78, col:95> 1 2
|-FunctionDecl 0x562a4e0178e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562a4e017748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562a4e0177c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x562a4e017998 <line:419:22>
| `-NonNullAttr 0x562a4e0179f0 <col:63, col:80> 1 2
|-FunctionDecl 0x562a4e017b78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562a4e017a38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562a4e017ab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x562a4e017c28 <line:421:22>
| `-NonNullAttr 0x562a4e017c80 <col:63, col:77> 1
|-FunctionDecl 0x562a4e018e58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562a4e017cc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562a4e017d48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x562a4e018f08 <line:424:22>
| `-NonNullAttr 0x562a4e018f60 <col:63, col:80> 1 2
|-FunctionDecl 0x562a4e0190e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562a4e018fa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562a4e019028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x562a4e019198 <line:427:22>
| `-NonNullAttr 0x562a4e0191f0 <col:63, col:77> 1
|-FunctionDecl 0x562a4e019398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562a4e019238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562a4e0192b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x562a4e019448 <line:430:22>
| `-NonNullAttr 0x562a4e0194a0 <col:63, col:80> 1 2
|-FunctionDecl 0x562a4e019628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562a4e0194e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562a4e019568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x562a4e0196d8 <line:432:22>
| `-NonNullAttr 0x562a4e019730 <col:63, col:77> 1
|-FunctionDecl 0x562a4e019958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x562a4e019778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562a4e0197f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x562a4e019a08 <line:435:22>
| |-NonNullAttr 0x562a4e019a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x562a4e019a98 <col:100> "" ""
|-FunctionDecl 0x562a4e019ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x562a4e019ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562a4e019b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x562a4e019d58 <line:438:22>
| |-NonNullAttr 0x562a4e019db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x562a4e019df8 <col:97> "" ""
|-FunctionDecl 0x562a4e019fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x562a4e019e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562a4e019ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x562a4e01a098 <line:441:22>
| `-NonNullAttr 0x562a4e01a0f0 <col:63, col:80> 1 2
|-FunctionDecl 0x562a4e01a270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x562a4e01a138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562a4e01a1b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562a4e01a320 <line:444:22>
| `-NonNullAttr 0x562a4e01a378 <col:63, col:77> 1
|-FunctionDecl 0x562a4e01a668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x562a4e01a3c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562a4e01a448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x562a4e01a4c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x562a4e01a720 <line:448:22>
| `-NonNullAttr 0x562a4e01a778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x562a4e01aa28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x562a4e01a7d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562a4e01a850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x562a4e01a8c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562a4e01aae0 <col:43>
| `-NonNullAttr 0x562a4e01ab38 <col:84, col:98> 1
|-FunctionDecl 0x562a4e01ae40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x562a4e01ab88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562a4e01ac08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x562a4e01ac98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x562a4e01aef8 <line:453:22>
| `-NonNullAttr 0x562a4e01af50 <col:63, col:77> 3
|-FunctionDecl 0x562a4e01b228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562a4e01af98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562a4e01b018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x562a4e01b0a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x562a4e01b2e0 <line:457:22>
| `-NonNullAttr 0x562a4e01b338 <col:63, col:80> 2 3
|-FunctionDecl 0x562a4e01b528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x562a4e01b388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562a4e01b408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x562a4e01b5d8 <line:459:22>
|-FunctionDecl 0x562a4e01b9a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x562a4e01b6a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x562a4e01b840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x562a4e01ba58 <col:52, col:69> 1 2
|-FunctionDecl 0x562a4e01bc00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x562a4e01bae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x562a4e01bb60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x562a4e01be10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x562a4e01bcc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x562a4e01bd48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x562a4e01bf68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x562a4e01bed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x562a4e01c0a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x562a4e01c148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x562a4e01c1f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x562a4e01c2e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x562a4e01c350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x562a4e01c520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/rfi010_tso.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x562a4e01c618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x562a4e01c6d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x562a4e01c670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x562a4e01c1d0 '__pthread_unwind_buf_t'
| |   `-Record 0x562a4e01c148 ''
| `-AlignedAttr 0x562a4e01c728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x562a4e01c7a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x562a4e01c900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x562a4e01c968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x562a4e01c9d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x562a4e01ca38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x562a4e01cc40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x562a4e01cb30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x562a4e01ce20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x562a4e01ccf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x562a4e01cfe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562a4e01ced8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x562a4e01d088 <line:488:22>
|-RecordDecl 0x562a4e01d0e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x562a4e01d3f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x562a4e01d258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x562a4e01d2d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x562a4e01d4a8 <col:86>
| `-ReturnsTwiceAttr 0x562a4e01d500 <col:12> Implicit
|-FunctionDecl 0x562a4e01d828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562a4e01d5d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x562a4e01d6e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x562a4e01d8d8 <line:494:22>
| `-NonNullAttr 0x562a4e01d930 <col:63, col:77> 1
|-FunctionDecl 0x562a4e01daa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562a4e01d978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562a4e01db50 <line:496:22>
| `-NonNullAttr 0x562a4e01dba8 <col:63, col:77> 1
|-FunctionDecl 0x562a4e01dcb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562a4e01dbf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562a4e01dd58 <line:498:22>
| `-NonNullAttr 0x562a4e01ddb0 <col:52, col:66> 1
|-FunctionDecl 0x562a4e01dee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562a4e01de30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562a4e01df90 <line:500:22>
| `-NonNullAttr 0x562a4e01dfe8 <col:52, col:66> 1
|-FunctionDecl 0x562a4e01e228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562a4e01e038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562a4e01e0c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562a4e01e2d8 <col:36>
| `-NonNullAttr 0x562a4e01e330 <col:66, col:83> 1 2
|-FunctionDecl 0x562a4e01e430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562a4e01e378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562a4e01e4d8 <line:505:22>
| `-NonNullAttr 0x562a4e01e530 <col:52, col:66> 1
|-FunctionDecl 0x562a4e01e7c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562a4e01e5e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562a4e01e660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x562a4e01e878 <line:509:22>
| `-NonNullAttr 0x562a4e01e8d0 <col:63, col:80> 1 2
|-FunctionDecl 0x562a4e01eb98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x562a4e01e918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562a4e01e998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x562a4e01ea18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x562a4e01ec50 <line:513:22>
| `-NonNullAttr 0x562a4e01eca8 <col:63, col:80> 1 3
|-FunctionDecl 0x562a4e01ee40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562a4e01ecf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562a4e01eee8 <line:515:22>
| `-NonNullAttr 0x562a4e01ef40 <col:63, col:77> 1
|-FunctionDecl 0x562a4e01f128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562a4e01eff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x562a4e01f1d0 <line:517:22>
| `-NonNullAttr 0x562a4e01f228 <col:63, col:77> 1
|-FunctionDecl 0x562a4e01f330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562a4e01f278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x562a4e01f3d8 <line:519:22>
| `-NonNullAttr 0x562a4e01f430 <col:63, col:77> 1
|-FunctionDecl 0x562a4e01f658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562a4e01f478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562a4e01f4f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x562a4e01f708 <line:523:22>
| `-NonNullAttr 0x562a4e01f760 <col:63, col:80> 1 2
|-FunctionDecl 0x562a4e01f968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562a4e01f7a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562a4e01f828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x562a4e01fa18 <line:526:22>
| `-NonNullAttr 0x562a4e01fa70 <col:63, col:77> 1
|-FunctionDecl 0x562a4e01fc18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562a4e01fab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562a4e01fb38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x562a4e01fcc8 <line:529:22>
| `-NonNullAttr 0x562a4e01fd20 <col:63, col:80> 1 2
|-FunctionDecl 0x562a4e020f20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562a4e01fd68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562a4e020e60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x562a4e020fd0 <line:531:22>
| `-NonNullAttr 0x562a4e021028 <col:63, col:77> 1
|-FunctionDecl 0x562a4e0211d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562a4e021078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562a4e0210f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x562a4e021288 <line:535:22>
| `-NonNullAttr 0x562a4e0212e0 <col:63, col:80> 1 2
|-FunctionDecl 0x562a4e021468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562a4e021328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562a4e0213a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x562a4e021518 <line:538:22>
| `-NonNullAttr 0x562a4e021570 <col:63, col:77> 1
|-FunctionDecl 0x562a4e021718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562a4e0215b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562a4e021638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x562a4e0217c8 <line:542:22>
| `-NonNullAttr 0x562a4e021820 <col:63, col:80> 1 2
|-FunctionDecl 0x562a4e0219a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562a4e021868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562a4e0218e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x562a4e021a58 <line:545:22>
| `-NonNullAttr 0x562a4e021ab0 <col:63, col:77> 1
|-FunctionDecl 0x562a4e021c98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x562a4e021af8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x562a4e021b78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x562a4e021d48 <line:548:22>
| `-NonNullAttr 0x562a4e021da0 <col:63, col:80> 1 2
|-FunctionDecl 0x562a4e022f58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562a4e021de8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562a4e022e98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x562a4e023008 <line:551:22>
| `-NonNullAttr 0x562a4e023060 <col:63, col:77> 1
|-FunctionDecl 0x562a4e023398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x562a4e023140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562a4e023250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x562a4e023448 <col:29>
| `-NonNullAttr 0x562a4e0234a0 <col:70, col:84> 1
|-FunctionDecl 0x562a4e023618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562a4e0234e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562a4e0236c0 <line:556:22>
| `-NonNullAttr 0x562a4e023718 <col:63, col:77> 1
|-FunctionDecl 0x562a4e023820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562a4e023768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562a4e0238c8 <line:558:22>
| `-NonNullAttr 0x562a4e023920 <col:52, col:66> 1
|-FunctionDecl 0x562a4e023a20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562a4e023968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562a4e023ac8 <line:560:19>
| `-NonNullAttr 0x562a4e023b20 <col:49, col:63> 1
|-FunctionDecl 0x562a4e023d58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562a4e023b68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562a4e023bf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562a4e023e08 <col:39>
| `-NonNullAttr 0x562a4e023e90 <col:69, col:86> 1 2
|-FunctionDecl 0x562a4e023f90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562a4e023ed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562a4e024038 <line:565:22>
| `-NonNullAttr 0x562a4e024090 <col:52, col:66> 1
|-FunctionDecl 0x562a4e024190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562a4e0240d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562a4e024238 <line:567:22>
| `-NonNullAttr 0x562a4e024290 <col:52, col:66> 1
|-FunctionDecl 0x562a4e024448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562a4e0242d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562a4e024368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562a4e0244f8 <col:39>
| `-NonNullAttr 0x562a4e024550 <col:69, col:86> 1 2
|-FunctionDecl 0x562a4e024650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562a4e024598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562a4e0246f8 <line:572:22>
| `-NonNullAttr 0x562a4e024750 <col:52, col:66> 1
|-FunctionDecl 0x562a4e024938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x562a4e024800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x562a4e0249e0 <line:574:22>
| `-NonNullAttr 0x562a4e024a38 <col:63, col:77> 1
|-FunctionDecl 0x562a4e024b40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x562a4e024a88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x562a4e024be8 <line:576:22>
| `-NonNullAttr 0x562a4e024c40 <col:63, col:77> 1
|-FunctionDecl 0x562a4e024ea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562a4e024c88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x562a4e024d08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x562a4e024f50 <line:580:22>
| `-NonNullAttr 0x562a4e024fa8 <col:63, col:80> 1 2
|-FunctionDecl 0x562a4e0251b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x562a4e024ff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x562a4e025078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x562a4e025268 <line:583:22>
| `-NonNullAttr 0x562a4e0252c0 <col:63, col:77> 1
|-FunctionDecl 0x562a4e025468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562a4e025308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x562a4e025388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x562a4e025518 <line:587:22>
| `-NonNullAttr 0x562a4e025570 <col:63, col:80> 1 2
|-FunctionDecl 0x562a4e0256f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x562a4e0255b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x562a4e025638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x562a4e0257a8 <col:36>
| `-NonNullAttr 0x562a4e025800 <col:77, col:91> 1
|-FunctionDecl 0x562a4e025b38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x562a4e0258e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562a4e0259f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x562a4e025be8 <line:592:22>
| `-NonNullAttr 0x562a4e025c40 <col:63, col:77> 1
|-FunctionDecl 0x562a4e025db8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562a4e025c88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562a4e025e60 <line:594:22>
| `-NonNullAttr 0x562a4e025ee0 <col:63, col:77> 1
|-FunctionDecl 0x562a4e025fe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562a4e025f28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562a4e026088 <line:596:22>
| `-NonNullAttr 0x562a4e0260e0 <col:52, col:66> 1
|-FunctionDecl 0x562a4e0261e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562a4e026128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562a4e026288 <line:598:22>
| `-NonNullAttr 0x562a4e0262e0 <col:52, col:66> 1
|-FunctionDecl 0x562a4e026508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x562a4e026328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562a4e0263a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x562a4e0265b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x562a4e0268e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562a4e026638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562a4e0266b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562a4e026740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x562a4e0269a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x562a4e026bb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x562a4e026a80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x562a4e026c60 <line:607:22>
| `-NonNullAttr 0x562a4e026cb8 <col:63, col:77> 1
|-FunctionDecl 0x562a4e026dc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x562a4e026d08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x562a4e026e68 <line:609:22>
| `-NonNullAttr 0x562a4e026ef0 <col:63, col:77> 1
|-FunctionDecl 0x562a4e027118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562a4e026f38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x562a4e026fb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x562a4e0271c8 <line:613:22>
| `-NonNullAttr 0x562a4e027220 <col:63, col:80> 1 2
|-FunctionDecl 0x562a4e027428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x562a4e027268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x562a4e0272e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x562a4e0274d8 <col:37>
| `-NonNullAttr 0x562a4e027530 <col:78, col:92> 1
|-FunctionDecl 0x562a4e027748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x562a4e027578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x562a4e027620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x562a4e0277f8 <line:619:22>
| `-NonNullAttr 0x562a4e027850 <col:63, col:80> 1 2
|-FunctionDecl 0x562a4e027a18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x562a4e027898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x562a4e027910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x562a4e027ac8 <line:622:22>
| `-NonNullAttr 0x562a4e027b20 <col:63, col:77> 1
|-FunctionDecl 0x562a4e027dc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x562a4e027c00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x562a4e027c80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x562a4e027e78 <line:624:22>
| `-NonNullAttr 0x562a4e027f00 <col:63, col:77> 1
|-FunctionDecl 0x562a4e028078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562a4e027f48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562a4e028120 <line:626:22>
| `-NonNullAttr 0x562a4e028178 <col:63, col:77> 1
|-FunctionDecl 0x562a4e028280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562a4e0281c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562a4e028328 <line:628:22>
| `-NonNullAttr 0x562a4e028380 <col:52, col:66> 1
|-FunctionDecl 0x562a4e028480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562a4e0283c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562a4e028528 <line:630:22>
| `-NonNullAttr 0x562a4e028580 <col:52, col:66> 1
|-FunctionDecl 0x562a4e028680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562a4e0285c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562a4e028728 <line:632:22>
| `-NonNullAttr 0x562a4e028780 <col:52, col:66> 1
|-FunctionDecl 0x562a4e028b58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x562a4e028860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x562a4e028970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x562a4e0289f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x562a4e028c10 <line:636:22>
| `-NonNullAttr 0x562a4e028c68 <col:63, col:77> 1
|-FunctionDecl 0x562a4e028de8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x562a4e028cb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x562a4e028e90 <line:638:22>
| `-NonNullAttr 0x562a4e028f10 <col:63, col:77> 1
|-FunctionDecl 0x562a4e029010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x562a4e028f58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x562a4e0290b8 <line:640:22>
| `-NonNullAttr 0x562a4e029110 <col:52, col:66> 1
|-FunctionDecl 0x562a4e0292f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x562a4e0291c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x562a4e0293a0 <line:642:22>
| `-NonNullAttr 0x562a4e0293f8 <col:63, col:77> 1
|-FunctionDecl 0x562a4e029500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x562a4e029448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x562a4e0295a8 <line:644:22>
| `-NonNullAttr 0x562a4e029600 <col:63, col:77> 1
|-FunctionDecl 0x562a4e029828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562a4e029648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x562a4e0296c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x562a4e0298d8 <line:648:22>
| `-NonNullAttr 0x562a4e029930 <col:63, col:80> 1 2
|-FunctionDecl 0x562a4e029b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x562a4e029978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x562a4e0299f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x562a4e029be8 <line:651:22>
| `-NonNullAttr 0x562a4e029c40 <col:63, col:77> 1
|-FunctionDecl 0x562a4e029fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x562a4e029d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x562a4e029e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x562a4e02a058 <line:654:22>
| `-NonNullAttr 0x562a4e02a0b0 <col:63, col:77> 1
|-FunctionDecl 0x562a4e02a208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x562a4e02a0f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x562a4e02a2b0 <col:69>
|-FunctionDecl 0x562a4e02a428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x562a4e02a318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x562a4e02a4d0 <col:72>
|-FunctionDecl 0x562a4e02a708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x562a4e02a538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x562a4e02a5e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x562a4e02a7b8 <col:44>
|-FunctionDecl 0x562a4e02a9d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x562a4e02a820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562a4e02a898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x562a4e02aa88 <line:661:22>
| `-NonNullAttr 0x562a4e02aae0 <col:63, col:77> 2
|-FunctionDecl 0x562a4e02bf50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x562a4e02abc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x562a4e02acd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x562a4e02ade0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x562a4e02c008 <col:47>
|-FunctionDecl 0x562a4e02c110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x562a4e02c078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562a4e02c268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x562a4e02c1d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562a4e02c330 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x562a4e02c3f0 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x562a4e02c4b0 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x562a4e02c568 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x562a4e02c5e8 prev 0x562a4e02c568 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x562a4e02c650 <col:24> 'int' 0
|-VarDecl 0x562a4e02c688 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x562a4e02c708 prev 0x562a4e02c688 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x562a4e02c770 <col:27> 'int' 0
|-VarDecl 0x562a4e02c7a8 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x562a4e02c828 prev 0x562a4e02c7a8 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x562a4e02c890 <col:27> 'int' 0
|-VarDecl 0x562a4e02c8c8 <line:677:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x562a4e02c948 prev 0x562a4e02c8c8 <line:678:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x562a4e02c9b0 <col:27> 'int' 0
|-VarDecl 0x562a4e02c9e0 <line:679:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x562a4e02ca58 <line:680:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x562a4e02cad8 <line:681:1, col:5> col:5 used x 'int'
|-VarDecl 0x562a4e02cb58 prev 0x562a4e02cad8 <line:682:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x562a4e02cbc0 <col:9> 'int' 0
|-VarDecl 0x562a4e02cbf8 <line:683:1, col:5> col:5 used y 'int'
|-VarDecl 0x562a4e02cc78 prev 0x562a4e02cbf8 <line:684:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x562a4e02cce0 <col:9> 'int' 0
|-VarDecl 0x562a4e02cd10 <line:685:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x562a4e02cd90 <line:686:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x562a4e02ce08 <line:687:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x562a4e02ce80 <line:688:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x562a4e02cf20 <line:689:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x562a4e02cf98 <line:690:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x562a4e02d010 <line:691:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x562a4e02d088 <line:692:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x562a4e02d100 <line:693:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x562a4e02d180 <line:694:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x562a4e02d200 <line:695:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x562a4e02d278 <line:696:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x562a4e02d2f8 <line:697:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x562a4e02d370 <line:698:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x562a4e02d3e8 <line:699:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x562a4e02d460 <line:700:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x562a4e02d578 prev 0x562a4e02c110 <line:701:1, line:730:1> line:701:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x562a4e02d4e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562a4e0305b8 <line:702:1, line:730:1>
|   |-CallExpr 0x562a4e02d688 <line:703:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562a4e02d670 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562a4e02d620 <col:3> 'void ()' Function 0x562a4dfd34b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562a4e02d6e8 <line:704:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562a4e02d6a8 <col:3> 'int' lvalue Var 0x562a4e02cb58 'x' 'int'
|   | `-IntegerLiteral 0x562a4e02d6c8 <col:7> 'int' 1
|   |-CallExpr 0x562a4e02d740 <line:705:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562a4e02d728 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562a4e02d708 <col:3> 'void ()' Function 0x562a4dfd3570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562a4e02d798 <line:706:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562a4e02d780 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562a4e02d760 <col:3> 'void ()' Function 0x562a4dfd34b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x562a4e02d7f0 <line:707:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562a4e02d7d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562a4e02d7b8 <col:3> 'void ()' Function 0x562a4dfd3570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562a4e02d848 <line:708:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562a4e02d830 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562a4e02d810 <col:3> 'void ()' Function 0x562a4dfd34b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562a4e02d918 <line:709:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x562a4e02d868 <col:3> '_Bool' lvalue Var 0x562a4e02d3e8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x562a4e02d8f8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x562a4e02d8e0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x562a4e02d888 <col:19> '_Bool (void)' Function 0x562a4dfd2c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x562a4e02d9b0 <line:710:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x562a4e02d938 <col:3> '_Bool' lvalue Var 0x562a4e02d460 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x562a4e02d990 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x562a4e02d978 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x562a4e02d958 <col:19> '_Bool (void)' Function 0x562a4dfd2c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x562a4e02da28 <line:711:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x562a4e02d9d0 <col:3> '_Bool' lvalue Var 0x562a4e02cd10 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x562a4e02da10 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562a4e02d9f0 <col:21> '_Bool' lvalue Var 0x562a4e02d460 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x562a4e02daa0 <line:712:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562a4e02da48 <col:3> 'int' lvalue Var 0x562a4e02cd90 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x562a4e02da88 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562a4e02da68 <col:15> 'int' lvalue Var 0x562a4e02cc78 'y' 'int'
|   |-BinaryOperator 0x562a4e02ded8 <line:713:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x562a4e02dac0 <col:3> 'int' lvalue Var 0x562a4e02cc78 'y' 'int'
|   | `-ConditionalOperator 0x562a4e02dea8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x562a4e02dcd0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x562a4e02dbf0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x562a4e02db18 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x562a4e02db00 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x562a4e02dae0 <col:8> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x562a4e02dbd0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x562a4e02db68 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x562a4e02db50 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x562a4e02db30 <col:27> '_Bool' lvalue Var 0x562a4e02ce80 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x562a4e02dbb8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x562a4e02dba0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x562a4e02db80 <col:46> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x562a4e02dcb0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x562a4e02dc48 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x562a4e02dc30 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x562a4e02dc10 <col:65> '_Bool' lvalue Var 0x562a4e02ce80 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x562a4e02dc98 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x562a4e02dc80 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x562a4e02dc60 <col:84> '_Bool' lvalue Var 0x562a4e02d010 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x562a4e02de90 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562a4e02dcf0 <col:101> 'int' lvalue Var 0x562a4e02cc78 'y' 'int'
|   |   `-ParenExpr 0x562a4e02de70 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x562a4e02de40 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x562a4e02ddb0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562a4e02dd68 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562a4e02dd50 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562a4e02dd10 <col:106> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562a4e02dd98 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562a4e02dd80 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562a4e02dd30 <col:124> '_Bool' lvalue Var 0x562a4e02ce80 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x562a4e02de10 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562a4e02ddd0 <col:141> 'int' lvalue Var 0x562a4e02d200 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x562a4e02de28 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562a4e02ddf0 <col:153> 'int' lvalue Var 0x562a4e02d2f8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x562a4e02e400 <line:714:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x562a4e02def8 <col:3> 'int' lvalue Var 0x562a4e02d200 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x562a4e02e3d0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562a4e02e3a0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562a4e02e388 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562a4e02df30 <col:15> '_Bool' lvalue Var 0x562a4e02d460 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562a4e02e3b8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562a4e02df50 <col:31> 'int' lvalue Var 0x562a4e02d200 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x562a4e02e368 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x562a4e02e338 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562a4e02e160 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x562a4e02e080 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562a4e02dfa8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562a4e02df90 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x562a4e02df70 <col:45> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x562a4e02e060 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x562a4e02dff8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x562a4e02dfe0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562a4e02dfc0 <col:64> '_Bool' lvalue Var 0x562a4e02ce80 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x562a4e02e048 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x562a4e02e030 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x562a4e02e010 <col:83> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x562a4e02e140 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x562a4e02e0d8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562a4e02e0c0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562a4e02e0a0 <col:102> '_Bool' lvalue Var 0x562a4e02ce80 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x562a4e02e128 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x562a4e02e110 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x562a4e02e0f0 <col:121> '_Bool' lvalue Var 0x562a4e02d010 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x562a4e02e320 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562a4e02e180 <col:138> 'int' lvalue Var 0x562a4e02d200 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x562a4e02e300 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562a4e02e2d0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x562a4e02e240 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x562a4e02e1f8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x562a4e02e1e0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562a4e02e1a0 <col:151> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x562a4e02e228 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x562a4e02e210 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562a4e02e1c0 <col:169> '_Bool' lvalue Var 0x562a4e02ce80 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x562a4e02e2a0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x562a4e02e260 <col:186> 'int' lvalue Var 0x562a4e02d200 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x562a4e02e2b8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562a4e02e280 <col:198> 'int' lvalue Var 0x562a4e02d200 'y$w_buff0' 'int'
|   |-BinaryOperator 0x562a4e02e910 <line:715:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x562a4e02e420 <col:3> 'int' lvalue Var 0x562a4e02d2f8 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x562a4e02e8e0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562a4e02e8b0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562a4e02e898 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562a4e02e440 <col:15> '_Bool' lvalue Var 0x562a4e02d460 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562a4e02e8c8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562a4e02e460 <col:31> 'int' lvalue Var 0x562a4e02d2f8 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x562a4e02e878 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x562a4e02e848 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562a4e02e670 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x562a4e02e590 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562a4e02e4b8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562a4e02e4a0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x562a4e02e480 <col:45> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x562a4e02e570 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x562a4e02e508 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x562a4e02e4f0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562a4e02e4d0 <col:64> '_Bool' lvalue Var 0x562a4e02ce80 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x562a4e02e558 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x562a4e02e540 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x562a4e02e520 <col:83> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x562a4e02e650 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x562a4e02e5e8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562a4e02e5d0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562a4e02e5b0 <col:102> '_Bool' lvalue Var 0x562a4e02ce80 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x562a4e02e638 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x562a4e02e620 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x562a4e02e600 <col:121> '_Bool' lvalue Var 0x562a4e02d010 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x562a4e02e830 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562a4e02e690 <col:138> 'int' lvalue Var 0x562a4e02d2f8 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x562a4e02e810 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562a4e02e7e0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x562a4e02e750 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x562a4e02e708 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x562a4e02e6f0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562a4e02e6b0 <col:151> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x562a4e02e738 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x562a4e02e720 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562a4e02e6d0 <col:169> '_Bool' lvalue Var 0x562a4e02ce80 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x562a4e02e7b0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x562a4e02e770 <col:186> 'int' lvalue Var 0x562a4e02d2f8 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x562a4e02e7c8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562a4e02e790 <col:198> 'int' lvalue Var 0x562a4e02d2f8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x562a4e02eeb8 <line:716:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x562a4e02e930 <col:3> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562a4e02eea0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562a4e02ee70 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x562a4e02ee28 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562a4e02ee10 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562a4e02e950 <col:20> '_Bool' lvalue Var 0x562a4e02d460 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562a4e02ee58 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562a4e02ee40 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562a4e02e970 <col:36> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x562a4e02edf0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x562a4e02edc0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x562a4e02eb80 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562a4e02eaa0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562a4e02e9c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562a4e02e9b0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562a4e02e990 <col:55> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562a4e02ea80 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562a4e02ea18 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562a4e02ea00 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562a4e02e9e0 <col:74> '_Bool' lvalue Var 0x562a4e02ce80 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x562a4e02ea68 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562a4e02ea50 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562a4e02ea30 <col:93> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562a4e02eb60 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562a4e02eaf8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562a4e02eae0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562a4e02eac0 <col:112> '_Bool' lvalue Var 0x562a4e02ce80 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x562a4e02eb48 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562a4e02eb30 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562a4e02eb10 <col:131> '_Bool' lvalue Var 0x562a4e02d010 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x562a4e02eda8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562a4e02ed90 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562a4e02eba0 <col:148> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x562a4e02ed70 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x562a4e02ed40 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x562a4e02ec60 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562a4e02ec18 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562a4e02ec00 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562a4e02ebc0 <col:166> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562a4e02ec48 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562a4e02ec30 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562a4e02ebe0 <col:184> '_Bool' lvalue Var 0x562a4e02ce80 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x562a4e02ecf8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562a4e02ecb0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562a4e02ec80 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562a4e02ed28 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562a4e02ed10 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562a4e02ecd8 <col:212> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562a4e02f4a8 <line:717:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x562a4e02eed8 <col:3> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562a4e02f490 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562a4e02f460 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x562a4e02f418 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562a4e02f400 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562a4e02eef8 <col:20> '_Bool' lvalue Var 0x562a4e02d460 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562a4e02f448 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562a4e02f430 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562a4e02ef40 <col:36> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x562a4e02f3e0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562a4e02f3b0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x562a4e02f150 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562a4e02f070 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562a4e02ef98 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562a4e02ef80 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562a4e02ef60 <col:55> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562a4e02f050 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562a4e02efe8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562a4e02efd0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562a4e02efb0 <col:74> '_Bool' lvalue Var 0x562a4e02ce80 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x562a4e02f038 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562a4e02f020 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562a4e02f000 <col:93> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562a4e02f130 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562a4e02f0c8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562a4e02f0b0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562a4e02f090 <col:112> '_Bool' lvalue Var 0x562a4e02ce80 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x562a4e02f118 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562a4e02f100 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562a4e02f0e0 <col:131> '_Bool' lvalue Var 0x562a4e02d010 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x562a4e02f398 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562a4e02f380 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562a4e02f170 <col:148> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x562a4e02f360 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x562a4e02f330 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x562a4e02f230 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562a4e02f1e8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562a4e02f1d0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562a4e02f190 <col:166> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562a4e02f218 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562a4e02f200 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562a4e02f1b0 <col:184> '_Bool' lvalue Var 0x562a4e02ce80 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x562a4e02f300 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562a4e02f280 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562a4e02f250 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562a4e02f318 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x562a4e02f2d8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562a4e02f2a8 <col:219> 'int' 0
|   |-BinaryOperator 0x562a4e02fa50 <line:718:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x562a4e02f4c8 <col:3> '_Bool' lvalue Var 0x562a4e02ce80 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562a4e02fa38 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562a4e02fa08 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x562a4e02f9c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562a4e02f9a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562a4e02f4e8 <col:20> '_Bool' lvalue Var 0x562a4e02d460 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562a4e02f9f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562a4e02f9d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562a4e02f508 <col:36> '_Bool' lvalue Var 0x562a4e02ce80 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x562a4e02f988 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x562a4e02f958 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x562a4e02f718 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562a4e02f638 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562a4e02f560 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562a4e02f548 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562a4e02f528 <col:55> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562a4e02f618 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562a4e02f5b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562a4e02f598 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562a4e02f578 <col:74> '_Bool' lvalue Var 0x562a4e02ce80 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x562a4e02f600 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562a4e02f5e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562a4e02f5c8 <col:93> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562a4e02f6f8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562a4e02f690 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562a4e02f678 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562a4e02f658 <col:112> '_Bool' lvalue Var 0x562a4e02ce80 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x562a4e02f6e0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562a4e02f6c8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562a4e02f6a8 <col:131> '_Bool' lvalue Var 0x562a4e02d010 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x562a4e02f940 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562a4e02f928 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562a4e02f738 <col:148> '_Bool' lvalue Var 0x562a4e02ce80 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x562a4e02f908 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x562a4e02f8d8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x562a4e02f7f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562a4e02f7b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562a4e02f798 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562a4e02f758 <col:166> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562a4e02f7e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562a4e02f7c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562a4e02f778 <col:184> '_Bool' lvalue Var 0x562a4e02ce80 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x562a4e02f890 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562a4e02f848 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562a4e02f818 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562a4e02f8c0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562a4e02f8a8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562a4e02f870 <col:212> '_Bool' lvalue Var 0x562a4e02ce80 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x562a4e030048 <line:719:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x562a4e02fa70 <col:3> '_Bool' lvalue Var 0x562a4e02d010 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562a4e030030 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562a4e030000 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x562a4e02ffb8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562a4e02ffa0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562a4e02fa90 <col:20> '_Bool' lvalue Var 0x562a4e02d460 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562a4e02ffe8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562a4e02ffd0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562a4e02fab0 <col:36> '_Bool' lvalue Var 0x562a4e02d010 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x562a4e02ff80 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562a4e02ff50 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x562a4e02fcc0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562a4e02fbe0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562a4e02fb08 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562a4e02faf0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562a4e02fad0 <col:55> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562a4e02fbc0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562a4e02fb58 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562a4e02fb40 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562a4e02fb20 <col:74> '_Bool' lvalue Var 0x562a4e02ce80 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x562a4e02fba8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562a4e02fb90 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562a4e02fb70 <col:93> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562a4e02fca0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562a4e02fc38 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562a4e02fc20 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562a4e02fc00 <col:112> '_Bool' lvalue Var 0x562a4e02ce80 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x562a4e02fc88 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562a4e02fc70 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562a4e02fc50 <col:131> '_Bool' lvalue Var 0x562a4e02d010 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x562a4e02ff08 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562a4e02fef0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562a4e02fce0 <col:148> '_Bool' lvalue Var 0x562a4e02d010 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x562a4e02fed0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x562a4e02fea0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x562a4e02fda0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562a4e02fd58 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562a4e02fd40 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562a4e02fd00 <col:166> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562a4e02fd88 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562a4e02fd70 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562a4e02fd20 <col:184> '_Bool' lvalue Var 0x562a4e02ce80 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x562a4e02fe70 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562a4e02fdf0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562a4e02fdc0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562a4e02fe88 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x562a4e02fe48 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562a4e02fe18 <col:219> 'int' 0
|   |-BinaryOperator 0x562a4e0300c0 <line:720:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562a4e030068 <col:3> 'int' lvalue Var 0x562a4e02c708 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x562a4e0300a8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562a4e030088 <col:25> 'int' lvalue Var 0x562a4e02cc78 'y' 'int'
|   |-BinaryOperator 0x562a4e0301f0 <line:721:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x562a4e0300e0 <col:3> 'int' lvalue Var 0x562a4e02cc78 'y' 'int'
|   | `-ConditionalOperator 0x562a4e0301c0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x562a4e030178 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562a4e030160 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562a4e030100 <col:7> '_Bool' lvalue Var 0x562a4e02cd10 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x562a4e030190 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562a4e030120 <col:25> 'int' lvalue Var 0x562a4e02cd90 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x562a4e0301a8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x562a4e030140 <col:37> 'int' lvalue Var 0x562a4e02cc78 'y' 'int'
|   |-BinaryOperator 0x562a4e030288 <line:722:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x562a4e030210 <col:3> '_Bool' lvalue Var 0x562a4e02cd10 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x562a4e030260 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562a4e030230 <col:28> 'int' 0
|   |-CallExpr 0x562a4e0302e0 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562a4e0302c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562a4e0302a8 <col:3> 'void ()' Function 0x562a4dfd3570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562a4e030338 <line:724:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562a4e030320 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562a4e030300 <col:3> 'void ()' Function 0x562a4dfd34b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x562a4e030390 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562a4e030378 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562a4e030358 <col:3> 'void ()' Function 0x562a4dfd3570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562a4e0303e8 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562a4e0303d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562a4e0303b0 <col:3> 'void ()' Function 0x562a4dfd34b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562a4e0304a0 <line:727:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562a4e030408 <col:3> 'int' lvalue Var 0x562a4e02c5e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562a4e030480 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562a4e030468 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562a4e030428 <col:22> 'int' lvalue Var 0x562a4e02c5e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562a4e030448 <col:41> 'int' 1
|   |-CallExpr 0x562a4e0304f8 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562a4e0304e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562a4e0304c0 <col:3> 'void ()' Function 0x562a4dfd3570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562a4e0305a8 <line:729:3, col:36>
|     `-CallExpr 0x562a4e030588 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562a4e030570 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562a4e030518 <col:10> 'void *(void)' Function 0x562a4dfd2fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562a4e030750 prev 0x562a4e02c268 <line:731:1, line:774:1> line:731:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x562a4e0306b8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562a4e034930 <line:732:1, line:774:1>
|   |-CallExpr 0x562a4e030830 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562a4e030818 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562a4e0307f8 <col:3> 'void ()' Function 0x562a4dfd34b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562a4e0308a8 <line:734:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562a4e030850 <col:3> 'int' lvalue Var 0x562a4e02d2f8 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x562a4e030890 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562a4e030870 <col:15> 'int' lvalue Var 0x562a4e02d200 'y$w_buff0' 'int'
|   |-BinaryOperator 0x562a4e030908 <line:735:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562a4e0308c8 <col:3> 'int' lvalue Var 0x562a4e02d200 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x562a4e0308e8 <col:15> 'int' 1
|   |-BinaryOperator 0x562a4e030980 <line:736:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562a4e030928 <col:3> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562a4e030968 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562a4e030948 <col:20> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562a4e030a18 <line:737:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x562a4e0309a0 <col:3> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x562a4e0309f0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562a4e0309c0 <col:27> 'int' 1
|   |-CallExpr 0x562a4e030b98 <line:738:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x562a4e030b80 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x562a4e030a38 <col:3> 'void (int)' Function 0x562a4dfd3238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x562a4e030b38 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x562a4e030b18 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x562a4e030af8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x562a4e030ab0 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x562a4e030a98 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x562a4e030a58 <col:23> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x562a4e030ae0 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x562a4e030ac8 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x562a4e030a78 <col:41> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562a4e030c18 <line:739:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562a4e030bc0 <col:3> '_Bool' lvalue Var 0x562a4e02cf98 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x562a4e030c00 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562a4e030be0 <col:20> '_Bool' lvalue Var 0x562a4e02ce08 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x562a4e030c90 <line:740:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562a4e030c38 <col:3> '_Bool' lvalue Var 0x562a4e02d010 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562a4e030c78 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562a4e030c58 <col:20> '_Bool' lvalue Var 0x562a4e02ce80 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x562a4e030d08 <line:741:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562a4e030cb0 <col:3> '_Bool' lvalue Var 0x562a4e02d088 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562a4e030cf0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562a4e030cd0 <col:20> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x562a4e030da0 <line:742:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x562a4e030d28 <col:3> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x562a4e030d78 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562a4e030d48 <col:27> 'int' 1
|   |-CallExpr 0x562a4e030df8 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562a4e030de0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562a4e030dc0 <col:3> 'void ()' Function 0x562a4dfd3570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562a4e030e50 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562a4e030e38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562a4e030e18 <col:3> 'void ()' Function 0x562a4dfd34b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562a4e030ee8 <line:745:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x562a4e030e70 <col:3> '_Bool' lvalue Var 0x562a4e02d3e8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x562a4e030ec8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x562a4e030eb0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x562a4e030e90 <col:19> '_Bool (void)' Function 0x562a4dfd2c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x562a4e030f98 <line:746:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x562a4e030f08 <col:3> '_Bool' lvalue Var 0x562a4e02d460 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x562a4e030f78 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x562a4e030f60 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x562a4e030f28 <col:19> '_Bool (void)' Function 0x562a4dfd2c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x562a4e031010 <line:747:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x562a4e030fb8 <col:3> '_Bool' lvalue Var 0x562a4e02cd10 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x562a4e030ff8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562a4e030fd8 <col:21> '_Bool' lvalue Var 0x562a4e02d460 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x562a4e031088 <line:748:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562a4e031030 <col:3> 'int' lvalue Var 0x562a4e02cd90 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x562a4e031070 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562a4e031050 <col:15> 'int' lvalue Var 0x562a4e02cc78 'y' 'int'
|   |-BinaryOperator 0x562a4e0314c0 <line:749:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x562a4e0310a8 <col:3> 'int' lvalue Var 0x562a4e02cc78 'y' 'int'
|   | `-ConditionalOperator 0x562a4e031490 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x562a4e0312b8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x562a4e0311d8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x562a4e031100 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x562a4e0310e8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x562a4e0310c8 <col:8> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x562a4e0311b8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x562a4e031150 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x562a4e031138 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x562a4e031118 <col:27> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x562a4e0311a0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x562a4e031188 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x562a4e031168 <col:46> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x562a4e031298 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x562a4e031230 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x562a4e031218 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x562a4e0311f8 <col:65> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x562a4e031280 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x562a4e031268 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x562a4e031248 <col:84> '_Bool' lvalue Var 0x562a4e02d088 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x562a4e031478 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562a4e0312d8 <col:101> 'int' lvalue Var 0x562a4e02cc78 'y' 'int'
|   |   `-ParenExpr 0x562a4e031458 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x562a4e031428 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x562a4e031398 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562a4e031350 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562a4e031338 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562a4e0312f8 <col:106> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562a4e031380 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562a4e031368 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562a4e031318 <col:124> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x562a4e0313f8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562a4e0313b8 <col:141> 'int' lvalue Var 0x562a4e02d200 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x562a4e031410 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562a4e0313d8 <col:153> 'int' lvalue Var 0x562a4e02d2f8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x562a4e0319d0 <line:750:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x562a4e0314e0 <col:3> 'int' lvalue Var 0x562a4e02d200 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x562a4e0319a0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562a4e031970 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562a4e031958 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562a4e031500 <col:15> '_Bool' lvalue Var 0x562a4e02d460 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562a4e031988 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562a4e031520 <col:31> 'int' lvalue Var 0x562a4e02d200 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x562a4e031938 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x562a4e031908 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562a4e031730 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x562a4e031650 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562a4e031578 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562a4e031560 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x562a4e031540 <col:45> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x562a4e031630 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x562a4e0315c8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x562a4e0315b0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562a4e031590 <col:64> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x562a4e031618 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x562a4e031600 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x562a4e0315e0 <col:83> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x562a4e031710 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x562a4e0316a8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562a4e031690 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562a4e031670 <col:102> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x562a4e0316f8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x562a4e0316e0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x562a4e0316c0 <col:121> '_Bool' lvalue Var 0x562a4e02d088 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x562a4e0318f0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562a4e031750 <col:138> 'int' lvalue Var 0x562a4e02d200 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x562a4e0318d0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562a4e0318a0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x562a4e031810 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x562a4e0317c8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x562a4e0317b0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562a4e031770 <col:151> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x562a4e0317f8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x562a4e0317e0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562a4e031790 <col:169> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x562a4e031870 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x562a4e031830 <col:186> 'int' lvalue Var 0x562a4e02d200 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x562a4e031888 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562a4e031850 <col:198> 'int' lvalue Var 0x562a4e02d200 'y$w_buff0' 'int'
|   |-BinaryOperator 0x562a4e031ee0 <line:751:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x562a4e0319f0 <col:3> 'int' lvalue Var 0x562a4e02d2f8 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x562a4e031eb0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562a4e031e80 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562a4e031e68 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562a4e031a10 <col:15> '_Bool' lvalue Var 0x562a4e02d460 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562a4e031e98 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562a4e031a30 <col:31> 'int' lvalue Var 0x562a4e02d2f8 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x562a4e031e48 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x562a4e031e18 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562a4e031c40 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x562a4e031b60 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562a4e031a88 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562a4e031a70 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x562a4e031a50 <col:45> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x562a4e031b40 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x562a4e031ad8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x562a4e031ac0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562a4e031aa0 <col:64> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x562a4e031b28 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x562a4e031b10 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x562a4e031af0 <col:83> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x562a4e031c20 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x562a4e031bb8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562a4e031ba0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562a4e031b80 <col:102> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x562a4e031c08 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x562a4e031bf0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x562a4e031bd0 <col:121> '_Bool' lvalue Var 0x562a4e02d088 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x562a4e031e00 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562a4e031c60 <col:138> 'int' lvalue Var 0x562a4e02d2f8 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x562a4e031de0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562a4e031db0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x562a4e031d20 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x562a4e031cd8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x562a4e031cc0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562a4e031c80 <col:151> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x562a4e031d08 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x562a4e031cf0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562a4e031ca0 <col:169> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x562a4e031d80 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x562a4e031d40 <col:186> 'int' lvalue Var 0x562a4e02d2f8 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x562a4e031d98 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562a4e031d60 <col:198> 'int' lvalue Var 0x562a4e02d2f8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x562a4e032498 <line:752:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x562a4e031f00 <col:3> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562a4e032480 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562a4e032450 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x562a4e032408 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562a4e0323f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562a4e031f20 <col:20> '_Bool' lvalue Var 0x562a4e02d460 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562a4e032438 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562a4e032420 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562a4e031f40 <col:36> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x562a4e0323d0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x562a4e0323a0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x562a4e032160 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562a4e032080 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562a4e031fa8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562a4e031f90 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562a4e031f70 <col:55> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562a4e032060 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562a4e031ff8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562a4e031fe0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562a4e031fc0 <col:74> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x562a4e032048 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562a4e032030 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562a4e032010 <col:93> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562a4e032140 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562a4e0320d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562a4e0320c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562a4e0320a0 <col:112> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x562a4e032128 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562a4e032110 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562a4e0320f0 <col:131> '_Bool' lvalue Var 0x562a4e02d088 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x562a4e032388 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562a4e032370 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562a4e032180 <col:148> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x562a4e032350 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x562a4e032320 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x562a4e032240 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562a4e0321f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562a4e0321e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562a4e0321a0 <col:166> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562a4e032228 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562a4e032210 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562a4e0321c0 <col:184> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x562a4e0322d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562a4e032290 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562a4e032260 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562a4e032308 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562a4e0322f0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562a4e0322b8 <col:212> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562a4e032a60 <line:753:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x562a4e0324b8 <col:3> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562a4e032a48 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562a4e032a18 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x562a4e0329d0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562a4e0329b8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562a4e0324d8 <col:20> '_Bool' lvalue Var 0x562a4e02d460 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562a4e032a00 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562a4e0329e8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562a4e0324f8 <col:36> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x562a4e032998 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562a4e032968 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x562a4e032708 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562a4e032628 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562a4e032550 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562a4e032538 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562a4e032518 <col:55> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562a4e032608 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562a4e0325a0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562a4e032588 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562a4e032568 <col:74> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x562a4e0325f0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562a4e0325d8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562a4e0325b8 <col:93> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562a4e0326e8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562a4e032680 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562a4e032668 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562a4e032648 <col:112> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x562a4e0326d0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562a4e0326b8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562a4e032698 <col:131> '_Bool' lvalue Var 0x562a4e02d088 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x562a4e032950 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562a4e032938 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562a4e032728 <col:148> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x562a4e032918 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x562a4e0328e8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x562a4e0327e8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562a4e0327a0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562a4e032788 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562a4e032748 <col:166> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562a4e0327d0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562a4e0327b8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562a4e032768 <col:184> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x562a4e0328b8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562a4e032838 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562a4e032808 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562a4e0328d0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x562a4e032890 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562a4e032860 <col:219> 'int' 0
|   |-BinaryOperator 0x562a4e033028 <line:754:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x562a4e032a80 <col:3> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562a4e033010 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562a4e032fe0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x562a4e032f98 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562a4e032f80 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562a4e032aa0 <col:20> '_Bool' lvalue Var 0x562a4e02d460 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562a4e032fc8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562a4e032fb0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562a4e032ac0 <col:36> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x562a4e032f40 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x562a4e032f10 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x562a4e032cd0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562a4e032bf0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562a4e032b18 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562a4e032b00 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562a4e032ae0 <col:55> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562a4e032bd0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562a4e032b68 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562a4e032b50 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562a4e032b30 <col:74> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x562a4e032bb8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562a4e032ba0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562a4e032b80 <col:93> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562a4e032cb0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562a4e032c48 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562a4e032c30 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562a4e032c10 <col:112> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x562a4e032c98 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562a4e032c80 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562a4e032c60 <col:131> '_Bool' lvalue Var 0x562a4e02d088 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x562a4e032ef8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562a4e032ee0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562a4e032cf0 <col:148> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x562a4e032ec0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x562a4e032e90 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x562a4e032db0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562a4e032d68 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562a4e032d50 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562a4e032d10 <col:166> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562a4e032d98 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562a4e032d80 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562a4e032d30 <col:184> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x562a4e032e48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562a4e032e00 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562a4e032dd0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562a4e032e78 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562a4e032e60 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562a4e032e28 <col:212> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x562a4e0335f0 <line:755:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x562a4e033048 <col:3> '_Bool' lvalue Var 0x562a4e02d088 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562a4e0335d8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562a4e0335a8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x562a4e033560 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562a4e033548 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562a4e033068 <col:20> '_Bool' lvalue Var 0x562a4e02d460 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562a4e033590 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562a4e033578 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562a4e033088 <col:36> '_Bool' lvalue Var 0x562a4e02d088 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x562a4e033528 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562a4e0334f8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x562a4e033298 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562a4e0331b8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562a4e0330e0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562a4e0330c8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562a4e0330a8 <col:55> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562a4e033198 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562a4e033130 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562a4e033118 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562a4e0330f8 <col:74> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x562a4e033180 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562a4e033168 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562a4e033148 <col:93> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562a4e033278 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562a4e033210 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562a4e0331f8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562a4e0331d8 <col:112> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x562a4e033260 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562a4e033248 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562a4e033228 <col:131> '_Bool' lvalue Var 0x562a4e02d088 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x562a4e0334e0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562a4e0334c8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562a4e0332b8 <col:148> '_Bool' lvalue Var 0x562a4e02d088 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x562a4e0334a8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x562a4e033478 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x562a4e033378 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562a4e033330 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562a4e033318 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562a4e0332d8 <col:166> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562a4e033360 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562a4e033348 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562a4e0332f8 <col:184> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x562a4e033448 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562a4e0333c8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562a4e033398 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562a4e033460 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x562a4e033420 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562a4e0333f0 <col:219> 'int' 0
|   |-BinaryOperator 0x562a4e033668 <line:756:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562a4e033610 <col:3> 'int' lvalue Var 0x562a4e02c828 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x562a4e033650 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562a4e033630 <col:25> 'int' lvalue Var 0x562a4e02cc78 'y' 'int'
|   |-BinaryOperator 0x562a4e033798 <line:757:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x562a4e033688 <col:3> 'int' lvalue Var 0x562a4e02cc78 'y' 'int'
|   | `-ConditionalOperator 0x562a4e033768 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x562a4e033720 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562a4e033708 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562a4e0336a8 <col:7> '_Bool' lvalue Var 0x562a4e02cd10 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x562a4e033738 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562a4e0336c8 <col:25> 'int' lvalue Var 0x562a4e02cd90 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x562a4e033750 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x562a4e0336e8 <col:37> 'int' lvalue Var 0x562a4e02cc78 'y' 'int'
|   |-BinaryOperator 0x562a4e033830 <line:758:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x562a4e0337b8 <col:3> '_Bool' lvalue Var 0x562a4e02cd10 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x562a4e033808 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562a4e0337d8 <col:28> 'int' 0
|   |-CallExpr 0x562a4e033888 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562a4e033870 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562a4e033850 <col:3> 'void ()' Function 0x562a4dfd3570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562a4e0338e0 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562a4e0338c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562a4e0338a8 <col:3> 'void ()' Function 0x562a4dfd34b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562a4e033958 <line:761:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562a4e033900 <col:3> 'int' lvalue Var 0x562a4e02c948 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x562a4e033940 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562a4e033920 <col:25> 'int' lvalue Var 0x562a4e02cb58 'x' 'int'
|   |-CallExpr 0x562a4e0339b0 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562a4e033998 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562a4e033978 <col:3> 'void ()' Function 0x562a4dfd3570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562a4e033a08 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562a4e0339f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562a4e0339d0 <col:3> 'void ()' Function 0x562a4dfd34b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562a4e033cf0 <line:764:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562a4e033a28 <col:3> 'int' lvalue Var 0x562a4e02cc78 'y' 'int'
|   | `-ConditionalOperator 0x562a4e033cc0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562a4e033ae8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562a4e033aa0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562a4e033a88 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562a4e033a48 <col:7> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562a4e033ad0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562a4e033ab8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562a4e033a68 <col:25> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x562a4e033ca8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562a4e033b08 <col:42> 'int' lvalue Var 0x562a4e02d200 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x562a4e033c88 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562a4e033c58 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562a4e033bc8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562a4e033b80 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562a4e033b68 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562a4e033b28 <col:55> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562a4e033bb0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562a4e033b98 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562a4e033b48 <col:73> '_Bool' lvalue Var 0x562a4e02d088 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x562a4e033c28 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562a4e033be8 <col:90> 'int' lvalue Var 0x562a4e02d2f8 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562a4e033c40 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562a4e033c08 <col:102> 'int' lvalue Var 0x562a4e02cc78 'y' 'int'
|   |-BinaryOperator 0x562a4e033ef8 <line:765:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562a4e033d10 <col:3> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562a4e033ee0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562a4e033eb0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562a4e033dd0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562a4e033d88 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562a4e033d70 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562a4e033d30 <col:20> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562a4e033db8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562a4e033da0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562a4e033d50 <col:38> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562a4e033e68 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562a4e033e20 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562a4e033df0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562a4e033e98 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562a4e033e80 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562a4e033e48 <col:66> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562a4e0341f8 <line:766:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562a4e033f18 <col:3> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562a4e0341e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562a4e0341b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562a4e0340d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562a4e033ff0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562a4e033fa8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562a4e033f90 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562a4e033f38 <col:20> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562a4e033fd8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562a4e033fc0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562a4e033f58 <col:38> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x562a4e0340b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562a4e034068 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562a4e034050 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562a4e034010 <col:56> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562a4e034098 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562a4e034080 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562a4e034030 <col:74> '_Bool' lvalue Var 0x562a4e02d088 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562a4e034168 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562a4e034120 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562a4e0340f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562a4e034198 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562a4e034180 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562a4e034148 <col:102> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562a4e034400 <line:767:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562a4e034218 <col:3> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562a4e0343e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562a4e0343b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562a4e0342d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562a4e034290 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562a4e034278 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562a4e034238 <col:20> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562a4e0342c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562a4e0342a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562a4e034258 <col:38> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562a4e034370 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562a4e034328 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562a4e0342f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562a4e0343a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562a4e034388 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562a4e034350 <col:66> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x562a4e0346e8 <line:768:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562a4e034420 <col:3> '_Bool' lvalue Var 0x562a4e02d088 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562a4e0346d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562a4e0346a0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562a4e0345c0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562a4e0344e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562a4e034498 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562a4e034480 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562a4e034440 <col:20> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562a4e0344c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562a4e0344b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562a4e034460 <col:38> '_Bool' lvalue Var 0x562a4e02cf20 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x562a4e0345a0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562a4e034558 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562a4e034540 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562a4e034500 <col:56> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562a4e034588 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562a4e034570 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562a4e034520 <col:74> '_Bool' lvalue Var 0x562a4e02d088 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562a4e034658 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562a4e034610 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562a4e0345e0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562a4e034688 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562a4e034670 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562a4e034638 <col:102> '_Bool' lvalue Var 0x562a4e02d088 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x562a4e034740 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562a4e034728 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562a4e034708 <col:3> 'void ()' Function 0x562a4dfd3570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562a4e034798 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562a4e034780 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562a4e034760 <col:3> 'void ()' Function 0x562a4dfd34b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562a4e034850 <line:771:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562a4e0347b8 <col:3> 'int' lvalue Var 0x562a4e02c5e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562a4e034830 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562a4e034818 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562a4e0347d8 <col:22> 'int' lvalue Var 0x562a4e02c5e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562a4e0347f8 <col:41> 'int' 1
|   |-CallExpr 0x562a4e0348a8 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562a4e034890 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562a4e034870 <col:3> 'void ()' Function 0x562a4dfd3570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562a4e034920 <line:773:3, col:36>
|     `-CallExpr 0x562a4e034900 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562a4e0348e8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562a4e0348c8 <col:10> 'void *(void)' Function 0x562a4dfd2fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562a4e034aa8 prev 0x562a4e02c330 <line:775:1, line:777:1> line:775:6 fence 'void ()'
| `-CompoundStmt 0x562a4e034b48 <line:776:1, line:777:1>
|-FunctionDecl 0x562a4e034b78 prev 0x562a4e02c3f0 <line:778:1, line:780:1> line:778:6 isync 'void ()'
| `-CompoundStmt 0x562a4e034c18 <line:779:1, line:780:1>
|-FunctionDecl 0x562a4e034c48 prev 0x562a4e02c4b0 <line:781:1, line:783:1> line:781:6 lwfence 'void ()'
| `-CompoundStmt 0x562a4e034ce8 <line:782:1, line:783:1>
`-FunctionDecl 0x562a4e034d58 <line:784:1, line:806:1> line:784:5 main 'int ()'
  `-CompoundStmt 0x562a4e036720 <line:785:1, line:806:1>
    |-DeclStmt 0x562a4e034e70 <line:786:3, col:18>
    | `-VarDecl 0x562a4e034e08 <col:3, col:13> col:13 used t1775 'pthread_t':'unsigned long'
    |-CallExpr 0x562a4e035098 <line:787:3, col:54> 'int'
    | |-ImplicitCastExpr 0x562a4e035080 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562a4e034e88 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562a4e0139d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562a4e034ec8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562a4e034ea8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562a4e034e08 't1775' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562a4e0350d8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562a4e034f40 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x562a4e034f18 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562a4e034ee0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x562a4e0350f0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562a4e034f60 <col:39> 'void *(void *)' Function 0x562a4e02d578 'P0' 'void *(void *)'
    | `-ParenExpr 0x562a4e035000 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x562a4e034fd8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562a4e034fa0 <col:52> 'int' 0
    |-DeclStmt 0x562a4e035180 <line:788:3, col:18>
    | `-VarDecl 0x562a4e035118 <col:3, col:13> col:13 used t1776 'pthread_t':'unsigned long'
    |-CallExpr 0x562a4e035328 <line:789:3, col:54> 'int'
    | |-ImplicitCastExpr 0x562a4e035310 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562a4e035198 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562a4e0139d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562a4e0351d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562a4e0351b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562a4e035118 't1776' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562a4e035368 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562a4e035250 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x562a4e035228 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562a4e0351f0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x562a4e035380 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562a4e035270 <col:39> 'void *(void *)' Function 0x562a4e030750 'P1' 'void *(void *)'
    | `-ParenExpr 0x562a4e0352f0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x562a4e0352c8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562a4e035290 <col:52> 'int' 0
    |-CallExpr 0x562a4e0353d0 <line:790:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562a4e0353b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562a4e035398 <col:3> 'void ()' Function 0x562a4dfd34b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562a4e0354a0 <line:791:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x562a4e0353f0 <col:3> '_Bool' lvalue Var 0x562a4e02c9e0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x562a4e035488 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x562a4e035468 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x562a4e035450 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x562a4e035410 <col:21> 'int' lvalue Var 0x562a4e02c5e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x562a4e035430 <col:41> 'int' 2
    |-CallExpr 0x562a4e0354f8 <line:792:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562a4e0354e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562a4e0354c0 <col:3> 'void ()' Function 0x562a4dfd3570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562a4e035570 <line:793:3, col:36> 'void'
    | |-ImplicitCastExpr 0x562a4e035558 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562a4e035518 <col:3> 'void (int)' Function 0x562a4dfd2e50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x562a4e0355b0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x562a4e035598 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x562a4e035538 <col:21> '_Bool' lvalue Var 0x562a4e02c9e0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x562a4e035600 <line:794:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562a4e0355e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562a4e0355c8 <col:3> 'void ()' Function 0x562a4dfd34b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562a4e0358e8 <line:795:3, col:103> 'int' '='
    | |-DeclRefExpr 0x562a4e035620 <col:3> 'int' lvalue Var 0x562a4e02cc78 'y' 'int'
    | `-ConditionalOperator 0x562a4e0358b8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x562a4e0356e0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x562a4e035698 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x562a4e035680 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x562a4e035640 <col:7> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x562a4e0356c8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x562a4e0356b0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x562a4e035660 <col:25> '_Bool' lvalue Var 0x562a4e02ce08 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x562a4e0358a0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x562a4e035700 <col:42> 'int' lvalue Var 0x562a4e02d200 'y$w_buff0' 'int'
    |   `-ParenExpr 0x562a4e035880 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x562a4e035850 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x562a4e0357c0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x562a4e035778 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x562a4e035760 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x562a4e035720 <col:55> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x562a4e0357a8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x562a4e035790 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x562a4e035740 <col:73> '_Bool' lvalue Var 0x562a4e02cf98 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x562a4e035820 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x562a4e0357e0 <col:90> 'int' lvalue Var 0x562a4e02d2f8 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x562a4e035838 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x562a4e035800 <col:102> 'int' lvalue Var 0x562a4e02cc78 'y' 'int'
    |-BinaryOperator 0x562a4e035af0 <line:796:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x562a4e035908 <col:3> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x562a4e035ad8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562a4e035aa8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x562a4e0359c8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x562a4e035980 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x562a4e035968 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x562a4e035928 <col:20> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x562a4e0359b0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x562a4e035998 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x562a4e035948 <col:38> '_Bool' lvalue Var 0x562a4e02ce08 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562a4e035a60 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562a4e035a18 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562a4e0359e8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x562a4e035a90 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562a4e035a78 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562a4e035a40 <col:66> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x562a4e035dd8 <line:797:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x562a4e035b10 <col:3> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x562a4e035dc0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562a4e035d90 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x562a4e035cb0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x562a4e035bd0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x562a4e035b88 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x562a4e035b70 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x562a4e035b30 <col:20> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x562a4e035bb8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x562a4e035ba0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x562a4e035b50 <col:38> '_Bool' lvalue Var 0x562a4e02ce08 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x562a4e035c90 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x562a4e035c48 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x562a4e035c30 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x562a4e035bf0 <col:56> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x562a4e035c78 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x562a4e035c60 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x562a4e035c10 <col:74> '_Bool' lvalue Var 0x562a4e02cf98 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562a4e035d48 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562a4e035d00 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562a4e035cd0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x562a4e035d78 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562a4e035d60 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562a4e035d28 <col:102> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x562a4e035ff8 <line:798:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x562a4e035df8 <col:3> '_Bool' lvalue Var 0x562a4e02ce08 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562a4e035fe0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562a4e035fb0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x562a4e035eb8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x562a4e035e70 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x562a4e035e58 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x562a4e035e18 <col:20> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x562a4e035ea0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x562a4e035e88 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x562a4e035e38 <col:38> '_Bool' lvalue Var 0x562a4e02ce08 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562a4e035f50 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562a4e035f08 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562a4e035ed8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x562a4e035f80 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562a4e035f68 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562a4e035f30 <col:66> '_Bool' lvalue Var 0x562a4e02ce08 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x562a4e0362e0 <line:799:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x562a4e036018 <col:3> '_Bool' lvalue Var 0x562a4e02cf98 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562a4e0362c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562a4e036298 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x562a4e0361b8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x562a4e0360d8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x562a4e036090 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x562a4e036078 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x562a4e036038 <col:20> '_Bool' lvalue Var 0x562a4e02d278 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x562a4e0360c0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x562a4e0360a8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x562a4e036058 <col:38> '_Bool' lvalue Var 0x562a4e02ce08 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x562a4e036198 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x562a4e036150 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x562a4e036138 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x562a4e0360f8 <col:56> '_Bool' lvalue Var 0x562a4e02d370 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x562a4e036180 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x562a4e036168 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x562a4e036118 <col:74> '_Bool' lvalue Var 0x562a4e02cf98 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562a4e036250 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562a4e036208 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562a4e0361d8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x562a4e036280 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562a4e036268 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562a4e036230 <col:102> '_Bool' lvalue Var 0x562a4e02cf98 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x562a4e036338 <line:800:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562a4e036320 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562a4e036300 <col:3> 'void ()' Function 0x562a4dfd3570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562a4e036390 <line:801:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562a4e036378 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562a4e036358 <col:3> 'void ()' Function 0x562a4dfd34b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562a4e0365c8 <line:802:3, col:103> '_Bool' '='
    | |-DeclRefExpr 0x562a4e0363b0 <col:3> '_Bool' lvalue Var 0x562a4e02ca58 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x562a4e0365b0 <col:21, col:103> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x562a4e036598 <col:21, col:103> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x562a4e036578 <col:22, col:103> 'int'
    |       `-BinaryOperator 0x562a4e036558 <col:23, col:102> 'int' '&&'
    |         |-BinaryOperator 0x562a4e0364c0 <col:23, col:74> 'int' '&&'
    |         | |-BinaryOperator 0x562a4e036428 <col:23, col:46> 'int' '=='
    |         | | |-ImplicitCastExpr 0x562a4e036410 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x562a4e0363d0 <col:23> 'int' lvalue Var 0x562a4e02c708 '__unbuffered_p0_EAX' 'int'
    |         | | `-IntegerLiteral 0x562a4e0363f0 <col:46> 'int' 0
    |         | `-BinaryOperator 0x562a4e0364a0 <col:51, col:74> 'int' '=='
    |         |   |-ImplicitCastExpr 0x562a4e036488 <col:51> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x562a4e036448 <col:51> 'int' lvalue Var 0x562a4e02c828 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x562a4e036468 <col:74> 'int' 1
    |         `-BinaryOperator 0x562a4e036538 <col:79, col:102> 'int' '=='
    |           |-ImplicitCastExpr 0x562a4e036520 <col:79> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x562a4e0364e0 <col:79> 'int' lvalue Var 0x562a4e02c948 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x562a4e036500 <col:102> 'int' 0
    |-CallExpr 0x562a4e036620 <line:803:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562a4e036608 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562a4e0365e8 <col:3> 'void ()' Function 0x562a4dfd3570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562a4e036698 <line:804:3, col:36> 'void'
    | |-ImplicitCastExpr 0x562a4e036680 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562a4e036640 <col:3> 'void (int)' Function 0x562a4dfd3238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x562a4e0366d8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x562a4e0366c0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x562a4e036660 <col:21> '_Bool' lvalue Var 0x562a4e02ca58 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x562a4e036710 <line:805:3, col:10>
      `-IntegerLiteral 0x562a4e0366f0 <col:10> 'int' 0
