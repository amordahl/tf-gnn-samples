TranslationUnitDecl 0x5623f0e7bf88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5623f0e7c848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5623f0e7c520 '__int128'
|-TypedefDecl 0x5623f0e7c8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5623f0e7c540 'unsigned __int128'
|-TypedefDecl 0x5623f0e7cbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5623f0e7c990 'struct __NSConstantString_tag'
|   `-Record 0x5623f0e7c910 '__NSConstantString_tag'
|-TypedefDecl 0x5623f0e7cc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5623f0e7cc20 'char *'
|   `-BuiltinType 0x5623f0e7c020 'char'
|-TypedefDecl 0x5623f0ebbb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5623f0e7cf00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5623f0e7cd40 'struct __va_list_tag'
|     `-Record 0x5623f0e7ccc0 '__va_list_tag'
|-FunctionDecl 0x5623f0ebbca0 <pthread-wmm/mix031_tso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5623f0ebbbd0 <col:31> col:34 'int'
|-FunctionDecl 0x5623f0ebbe68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5623f0ebbf90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5623f0ebc0d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5623f0ebc048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5623f0ebc308 <col:40, col:99>
|   |-IfStmt 0x5623f0ebc2d8 <col:42, col:88>
|   | |-UnaryOperator 0x5623f0ebc1b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5623f0ebc1a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5623f0ebc180 <col:47> 'int' lvalue ParmVar 0x5623f0ebc048 'expression' 'int'
|   | `-CompoundStmt 0x5623f0ebc2c0 <col:59, col:88>
|   |   `-LabelStmt 0x5623f0ebc2a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5623f0ebc238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5623f0ebc220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5623f0ebc1d0 <col:68> 'void () __attribute__((noreturn))' Function 0x5623f0ebbf90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5623f0ebc2f0 <col:89>
|   `-ReturnStmt 0x5623f0ebc2f8 <col:91>
|-FunctionDecl 0x5623f0ebc350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5623f0ebc410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5623f0ebc790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5623f0ebc4c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5623f0ebc548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5623f0ebc5c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5623f0ebc648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5623f0ebc850 <line:10:22>
|-FunctionDecl 0x5623f0ee28a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5623f0ebc8c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5623f0ebc940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5623f0ebc9c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5623f0ebca40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5623f0ee2960 <line:13:22>
|-FunctionDecl 0x5623f0ee2c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5623f0ee29d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5623f0ee2a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5623f0ee2ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5623f0ee2cc8 <line:15:22>
|-TypedefDecl 0x5623f0ee2d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5623f0e7c0e0 'unsigned char'
|-TypedefDecl 0x5623f0ee2da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5623f0e7c100 'unsigned short'
|-TypedefDecl 0x5623f0ee2e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5623f0e7c120 'unsigned int'
|-TypedefDecl 0x5623f0ee2e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5623f0e7c140 'unsigned long'
|-TypedefDecl 0x5623f0ee2ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5623f0e7c040 'signed char'
|-TypedefDecl 0x5623f0ee2f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5623f0e7c0e0 'unsigned char'
|-TypedefDecl 0x5623f0ee2fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5623f0e7c060 'short'
|-TypedefDecl 0x5623f0ee3048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5623f0e7c100 'unsigned short'
|-TypedefDecl 0x5623f0ee30b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5623f0e7c080 'int'
|-TypedefDecl 0x5623f0ee3128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5623f0e7c120 'unsigned int'
|-TypedefDecl 0x5623f0ee3198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5623f0e7c0a0 'long'
|-TypedefDecl 0x5623f0ee3208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5623f0e7c140 'unsigned long'
|-TypedefDecl 0x5623f0ee3278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5623f0e7c0a0 'long'
|-TypedefDecl 0x5623f0ee32e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5623f0e7c140 'unsigned long'
|-TypedefDecl 0x5623f0ee3358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5623f0e7c140 'unsigned long'
|-TypedefDecl 0x5623f0ee33c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5623f0e7c120 'unsigned int'
|-TypedefDecl 0x5623f0ee3438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5623f0e7c120 'unsigned int'
|-TypedefDecl 0x5623f0ee34a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5623f0e7c140 'unsigned long'
|-TypedefDecl 0x5623f0ee3518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5623f0e7c140 'unsigned long'
|-TypedefDecl 0x5623f0ee3588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5623f0e7c120 'unsigned int'
|-TypedefDecl 0x5623f0ee35f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5623f0e7c140 'unsigned long'
|-TypedefDecl 0x5623f0ee3668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5623f0e7c0a0 'long'
|-TypedefDecl 0x5623f0ee36d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5623f0e7c0a0 'long'
|-TypedefDecl 0x5623f0ee3748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5623f0e7c080 'int'
|-RecordDecl 0x5623f0ee37a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5623f0ee3918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5623f0ee39d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5623f0ee3970 'struct __fsid_t' sugar
|   `-RecordType 0x5623f0ee3820 '__fsid_t'
|     `-Record 0x5623f0ee37a0 ''
|-TypedefDecl 0x5623f0ee3a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5623f0e7c0a0 'long'
|-TypedefDecl 0x5623f0ee3ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5623f0e7c140 'unsigned long'
|-TypedefDecl 0x5623f0ee3b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5623f0e7c140 'unsigned long'
|-TypedefDecl 0x5623f0ee3ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5623f0e7c120 'unsigned int'
|-TypedefDecl 0x5623f0ee3c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5623f0e7c0a0 'long'
|-TypedefDecl 0x5623f0ee3c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5623f0e7c120 'unsigned int'
|-TypedefDecl 0x5623f0ee3cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5623f0e7c0a0 'long'
|-TypedefDecl 0x5623f0ee3d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5623f0e7c080 'int'
|-TypedefDecl 0x5623f0ee3dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5623f0e7c080 'int'
|-TypedefDecl 0x5623f0ee3e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5623f0e7c080 'int'
|-TypedefDecl 0x5623f0ee3eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5623f0e7c7a0 'void *'
|   `-BuiltinType 0x5623f0e7bfe0 'void'
|-TypedefDecl 0x5623f0ee3f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5623f0e7c0a0 'long'
|-TypedefDecl 0x5623f0ee3f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5623f0e7c0a0 'long'
|-TypedefDecl 0x5623f0ee4008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5623f0e7c0a0 'long'
|-TypedefDecl 0x5623f0ee4078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5623f0e7c140 'unsigned long'
|-TypedefDecl 0x5623f0ee40e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5623f0e7c140 'unsigned long'
|-TypedefDecl 0x5623f0ee4158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5623f0e7c140 'unsigned long'
|-TypedefDecl 0x5623f0ee41c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5623f0e7c140 'unsigned long'
|-TypedefDecl 0x5623f0ee4238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5623f0e7c0a0 'long'
|-TypedefDecl 0x5623f0ee42a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5623f0e7c0a0 'long'
|-TypedefDecl 0x5623f0ee4318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5623f0e7c0a0 'long'
|-TypedefDecl 0x5623f0ee4388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5623f0e7c140 'unsigned long'
|-TypedefDecl 0x5623f0ee4418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5623f0ee43e0 '__off64_t' sugar
|   |-Typedef 0x5623f0ee36d8 '__off64_t'
|   `-BuiltinType 0x5623f0e7c0a0 'long'
|-TypedefDecl 0x5623f0ee4510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5623f0ee44d0 '__quad_t *'
|   `-TypedefType 0x5623f0ee4470 '__quad_t' sugar
|     |-Typedef 0x5623f0ee3278 '__quad_t'
|     `-BuiltinType 0x5623f0e7c0a0 'long'
|-TypedefDecl 0x5623f0ee4580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5623f0e7cc20 'char *'
|   `-BuiltinType 0x5623f0e7c020 'char'
|-TypedefDecl 0x5623f0ee45f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5623f0e7c0a0 'long'
|-TypedefDecl 0x5623f0ee4660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5623f0e7c120 'unsigned int'
|-FunctionDecl 0x5623f0ee47a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5623f0ee46d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5623f0ee4ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5623f0ee4ad8 <line:72:3, col:34>
|     `-CallExpr 0x5623f0ee4a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5623f0ee4a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5623f0ee4a10 <col:10> '<builtin fn type>' Function 0x5623f0ee4880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5623f0ee4ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5623f0ee4a30 <col:29> 'unsigned int' lvalue ParmVar 0x5623f0ee46d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5623f0ee4880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5623f0ee4920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5623f0ee4990 <col:10> Implicit
| `-ConstAttr 0x5623f0ee49e8 <col:10> Implicit
|-FunctionDecl 0x5623f0ee4c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5623f0ee4b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5623f0ee4f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5623f0ee4f48 <line:77:3, col:34>
|     `-CallExpr 0x5623f0ee4f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5623f0ee4ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5623f0ee4e78 <col:10> '<builtin fn type>' Function 0x5623f0ee4ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5623f0ee4f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5623f0ee4e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5623f0ee4b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5623f0ee4ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5623f0ee4d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5623f0ee4df8 <col:10> Implicit
| `-ConstAttr 0x5623f0ee4e50 <col:10> Implicit
|-TypedefDecl 0x5623f0ee4f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5623f0e7c140 'unsigned long'
|-TypedefDecl 0x5623f0ee5018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5623f0ee4fe0 '__time_t' sugar
|   |-Typedef 0x5623f0ee3c18 '__time_t'
|   `-BuiltinType 0x5623f0e7c0a0 'long'
|-RecordDecl 0x5623f0ee5070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5623f0ee5128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5623f0ee51b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5623f0ee5248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5623f0ee5210 '__pid_t' sugar
|   |-Typedef 0x5623f0ee3748 '__pid_t'
|   `-BuiltinType 0x5623f0e7c080 'int'
|-RecordDecl 0x5623f0ee52a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5623f0ee5360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5623f0ee53b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5623f0ee5470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5623f0ee54d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5623f0e7c140 'unsigned long'
|-RecordDecl 0x5623f0ee5530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5623f0ee57c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5623f0ee78b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5623f0ee5810 'struct cpu_set_t' sugar
|   `-RecordType 0x5623f0ee55b0 'cpu_set_t'
|     `-Record 0x5623f0ee5530 ''
|-FunctionDecl 0x5623f0ee7b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5623f0ee7958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5623f0ee7a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5623f0ee7c38 <line:107:19>
|-FunctionDecl 0x5623f0ee7e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5623f0ee7ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5623f0ee7eb8 <col:69>
|-FunctionDecl 0x5623f0ee8030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5623f0ee7f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5623f0ee80d8 <col:64>
|-FunctionDecl 0x5623f0ee8398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5623f0ee8140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5623f0ee8278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5623f0ee8448 <line:113:22>
|-FunctionDecl 0x5623f0ee86c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5623f0ee84b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5623f0ee85a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5623f0ee8778 <col:88>
|-FunctionDecl 0x5623f0ee8a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5623f0ee87e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5623f0ee88c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5623f0ee8950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5623f0ee8b50 <col:62>
|-FunctionDecl 0x5623f0ee8cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5623f0ee8bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5623f0ee8d70 <col:63>
|-FunctionDecl 0x5623f0ee8e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5623f0ee8f38 <col:47>
|-FunctionDecl 0x5623f0ee9040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5623f0ee8fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5623f0ee90e8 <col:69>
|-FunctionDecl 0x5623f0ee91f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5623f0ee9158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5623f0ee9298 <col:69>
|-FunctionDecl 0x5623f0ee9558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5623f0ee9300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5623f0ee9438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5623f0ee9608 <col:88>
|-TypedefDecl 0x5623f0ee9698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5623f0ee9660 '__clock_t' sugar
|   |-Typedef 0x5623f0ee3a58 '__clock_t'
|   `-BuiltinType 0x5623f0e7c0a0 'long'
|-TypedefDecl 0x5623f0ee9728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5623f0ee96f0 '__clockid_t' sugar
|   |-Typedef 0x5623f0ee3e48 '__clockid_t'
|   `-BuiltinType 0x5623f0e7c080 'int'
|-TypedefDecl 0x5623f0ee97b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5623f0ee9780 '__timer_t' sugar
|   |-Typedef 0x5623f0ee3eb8 '__timer_t'
|   `-PointerType 0x5623f0e7c7a0 'void *'
|     `-BuiltinType 0x5623f0e7bfe0 'void'
|-RecordDecl 0x5623f0ee9810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5623f0ee98e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5623f0ee9950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5623f0ee99b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5623f0ee9a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5623f0ee9a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5623f0ee9af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5623f0ee9b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5623f0ee9bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5623f0ee9c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5623f0ee9c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5623f0ee9cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5623f0ee9d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5623f0ee9e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5623f0ee9e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5623f0ee9f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5623f0eea100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5623f0eea1a0 <col:45>
|-FunctionDecl 0x5623f0eea380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5623f0eea270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5623f0eea428 <col:54>
|-FunctionDecl 0x5623f0eea628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5623f0eea490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5623f0eea508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5623f0eea6d8 <line:157:22>
| `-ConstAttr 0x5623f0eea730 <col:63>
|-FunctionDecl 0x5623f0eeb560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5623f0eea828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5623f0eeb608 <col:56>
|-FunctionDecl 0x5623f0eeb9b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5623f0eeb678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5623f0eeb6f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5623f0eeb770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5623f0eeb868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5623f0eeba70 <col:54>
|-RecordDecl 0x5623f0eebac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5623f0eebb78 parent 0x5623f0e7bf88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5623f0eebdd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5623f0eebe78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5623f0eebee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5623f0eebf48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5623f0eec038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5623f0eec158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5623f0eec100 'struct __locale_struct *'
|   `-ElaboratedType 0x5623f0eec090 'struct __locale_struct' sugar
|     `-RecordType 0x5623f0eebb50 'struct __locale_struct'
|       `-Record 0x5623f0eebac8 '__locale_struct'
|-TypedefDecl 0x5623f0eec208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5623f0eec1d0 '__locale_t' sugar
|   |-Typedef 0x5623f0eec158 '__locale_t'
|   `-PointerType 0x5623f0eec100 'struct __locale_struct *'
|     `-ElaboratedType 0x5623f0eec090 'struct __locale_struct' sugar
|       `-RecordType 0x5623f0eebb50 'struct __locale_struct'
|         `-Record 0x5623f0eebac8 '__locale_struct'
|-FunctionDecl 0x5623f0eec610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5623f0eec278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5623f0eec2f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5623f0eec370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5623f0eec400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5623f0eec478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5623f0eec6d8 <col:40>
|-FunctionDecl 0x5623f0eec8c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5623f0eec7a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5623f0eec970 <col:66>
|-FunctionDecl 0x5623f0eeca80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5623f0eec9d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5623f0eecb28 <col:69>
|-FunctionDecl 0x5623f0eecd58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5623f0eecb90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5623f0eecc20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5623f0eece08 <col:52>
|-FunctionDecl 0x5623f0eecfb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5623f0eece70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5623f0eecf00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5623f0eed060 <col:55>
|-FunctionDecl 0x5623f0eed1f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5623f0eed0e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5623f0eed2a0 <col:62>
|-FunctionDecl 0x5623f0eed418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5623f0eed308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5623f0eed4c0 <col:60>
|-FunctionDecl 0x5623f0eed718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5623f0eed578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5623f0eed5f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5623f0eed7c8 <col:44>
|-FunctionDecl 0x5623f0eed9d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5623f0eed830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5623f0eed8b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5623f0eeda88 <col:49>
|-VarDecl 0x5623f0eedb88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5623f0eedc08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5623f0eedc88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5623f0eedd50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5623f0eede80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5623f0eedf20 <col:42>
|-VarDecl 0x5623f0eedf90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5623f0eee010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5623f0eee198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5623f0eee088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5623f0eee240 <col:57>
|-FunctionDecl 0x5623f0eee350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5623f0eee2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5623f0eee3f8 <col:56>
|-FunctionDecl 0x5623f0eef540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5623f0eee478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5623f0eef5e8 <col:59>
|-FunctionDecl 0x5623f0eef6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5623f0eef658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5623f0eef798 <col:48>
| `-ConstAttr 0x5623f0eef7f0 <col:89>
|-FunctionDecl 0x5623f0eefa58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5623f0eef8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5623f0eef938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5623f0eefcb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5623f0eefb48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5623f0eefbd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5623f0eefd68 <col:88>
|-FunctionDecl 0x5623f0eeff00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5623f0eefdd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5623f0eefe60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5623f0eeffb0 <col:88>
|-FunctionDecl 0x5623f0ef01c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5623f0ef0018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5623f0ef00a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5623f0ef0278 <line:208:22>
|-FunctionDecl 0x5623f0ef05e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5623f0ef02e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5623f0ef0360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5623f0ef03f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5623f0ef0480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5623f0ef08e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5623f0ef06e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5623f0ef07c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5623f0ef0998 <col:85>
|-FunctionDecl 0x5623f0ef0d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5623f0ef0a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5623f0ef0b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5623f0ef0c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5623f0ef0e40 <col:52>
|-FunctionDecl 0x5623f0ef0fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5623f0ef0ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5623f0ef1060 <col:61>
|-FunctionDecl 0x5623f0ef1560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5623f0ef10c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5623f0ef1148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5623f0ef1278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5623f0ef1368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5623f0ef1620 <col:62>
|-FunctionDecl 0x5623f0ef1838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5623f0ef1688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5623f0ef1718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5623f0ef18e8 <line:221:22>
|-FunctionDecl 0x5623f0ef19e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5623f0ef1950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5623f0ef1a90 <col:65>
|-TypedefDecl 0x5623f0ef1b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5623f0e7c140 'unsigned long'
|-RecordDecl 0x5623f0ef1b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5623f0ef1ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5623f0ef1d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5623f0ef1db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5623f0ef1d60 'union pthread_attr_t' sugar
|   `-RecordType 0x5623f0ef1be0 'union pthread_attr_t'
|     `-Record 0x5623f0ef1b58 'pthread_attr_t'
|-RecordDecl 0x5623f0ef1e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5623f0ef1f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5623f0ef2000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5623f0ef20b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5623f0ef2050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5623f0ef1e90 'struct __pthread_internal_list'
|     `-Record 0x5623f0ef1e10 '__pthread_internal_list'
|-RecordDecl 0x5623f0ef2120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5623f0ef21c8 parent 0x5623f0e7bf88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5623f0ef22a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5623f0ef2308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5623f0ef2370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5623f0ef23d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5623f0ef2440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5623f0ef24a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5623f0ef6580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5623f0ef6630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5623f0ef6720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5623f0ef6788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5623f0ef6910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5623f0ef68b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5623f0ef21a0 'pthread_mutex_t'
|     `-Record 0x5623f0ef2120 ''
|-RecordDecl 0x5623f0ef6980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5623f0ef6ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5623f0ef6b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5623f0ef6be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5623f0ef6b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5623f0ef6a00 'pthread_mutexattr_t'
|     `-Record 0x5623f0ef6980 ''
|-RecordDecl 0x5623f0ef6c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5623f0ef6cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5623f0ef6dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5623f0ef6e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5623f0ef6e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5623f0ef6ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5623f0ef6f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5623f0ef6fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5623f0ef7030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5623f0ef7098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5623f0ef7150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix031_tso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix031_tso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5623f0ef7240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5623f0ef72a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5623f0ef73e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5623f0ef7380 'union pthread_cond_t' sugar
|   `-RecordType 0x5623f0ef6cd0 'pthread_cond_t'
|     `-Record 0x5623f0ef6c50 ''
|-RecordDecl 0x5623f0ef7450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5623f0ef7590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5623f0ef75f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5623f0ef76b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5623f0ef7650 'union pthread_condattr_t' sugar
|   `-RecordType 0x5623f0ef74d0 'pthread_condattr_t'
|     `-Record 0x5623f0ef7450 ''
|-TypedefDecl 0x5623f0ef7738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5623f0e7c120 'unsigned int'
|-TypedefDecl 0x5623f0ef77a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5623f0e7c080 'int'
|-RecordDecl 0x5623f0ef7800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5623f0ef78a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5623f0ef7970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5623f0ef79d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5623f0ef7a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5623f0ef7aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5623f0ef7b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5623f0ef7b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5623f0ef7be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5623f0ef7c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5623f0ef7cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5623f0ef7d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5623f0ef7d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5623f0ef7e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix031_tso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix031_tso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5623f0ef7ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5623f0ef7f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5623f0ef8090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5623f0ef8030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5623f0ef7880 'pthread_rwlock_t'
|     `-Record 0x5623f0ef7800 ''
|-RecordDecl 0x5623f0ef8100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5623f0ef8240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5623f0ef82a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5623f0ef8360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5623f0ef8300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5623f0ef8180 'pthread_rwlockattr_t'
|     `-Record 0x5623f0ef8100 ''
|-TypedefDecl 0x5623f0ef83e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5623f0e7c084 'volatile int' volatile
|   `-BuiltinType 0x5623f0e7c080 'int'
|-RecordDecl 0x5623f0ef8440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5623f0efa5b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5623f0efa618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5623f0efa6d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5623f0efa670 'union pthread_barrier_t' sugar
|   `-RecordType 0x5623f0ef84c0 'pthread_barrier_t'
|     `-Record 0x5623f0ef8440 ''
|-RecordDecl 0x5623f0efa740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5623f0efa840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5623f0efa8a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5623f0efa960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5623f0efa900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5623f0efa7c0 'pthread_barrierattr_t'
|     `-Record 0x5623f0efa740 ''
|-TypedefDecl 0x5623f0efaa78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5623f0efaa10 'long [8]' 8 
|   `-BuiltinType 0x5623f0e7c0a0 'long'
|-EnumDecl 0x5623f0efaad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5623f0efab98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5623f0efabe8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5623f0efac38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5623f0efad08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5623f0efad58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5623f0efada8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5623f0efadf8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5623f0efae80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5623f0efae68 <col:26> 'int'
| |   `-DeclRefExpr 0x5623f0efae48 <col:26> 'int' EnumConstant 0x5623f0efad08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5623f0efaf08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5623f0efaef0 <col:29> 'int'
| |   `-DeclRefExpr 0x5623f0efaed0 <col:29> 'int' EnumConstant 0x5623f0efad58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5623f0efaf90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5623f0efaf78 <col:30> 'int'
| |   `-DeclRefExpr 0x5623f0efaf58 <col:30> 'int' EnumConstant 0x5623f0efada8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5623f0efb018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5623f0efb000 <col:27> 'int'
|     `-DeclRefExpr 0x5623f0efafe0 <col:27> 'int' EnumConstant 0x5623f0efae80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5623f0efb068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5623f0efb138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5623f0efb1c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5623f0efb1a8 <col:30> 'int'
| |   `-DeclRefExpr 0x5623f0efb188 <col:30> 'int' EnumConstant 0x5623f0efb138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5623f0efb210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5623f0efb298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5623f0efb280 <col:29> 'int'
|     `-DeclRefExpr 0x5623f0efb260 <col:29> 'int' EnumConstant 0x5623f0efb210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5623f0efb2e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5623f0efb3b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5623f0efb408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5623f0efb458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5623f0efb4a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5623f0efb5c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5623f0efb610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5623f0efb660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5623f0efb6e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5623f0efb6d0 <col:31> 'int'
|     `-DeclRefExpr 0x5623f0efb6b0 <col:31> 'int' EnumConstant 0x5623f0efb5c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5623f0efb738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5623f0efb808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5623f0efb858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5623f0efb8a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5623f0efb978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5623f0efb9c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5623f0efba18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5623f0efbae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5623f0efbb38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5623f0efbb88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5623f0efbdc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5623f0efbe30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5623f0efbe98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5623f0efbfb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5623f0efc008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5623f0efc0d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5623f0efc128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5623f0efc178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5623f0efc248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5623f0efc298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5623f0efc8f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5623f0efc390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5623f0efc4a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5623f0efc6e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5623f0efc760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5623f0efc9b8 <col:47>
| |-NonNullAttr 0x5623f0efca10 <col:77, col:94> 1 3
| `-CallbackAttr 0x5623f0efca48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5623f0efcb70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5623f0efcaa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5623f0efcdc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5623f0efcc28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5623f0efcca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5623f0efcf98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5623f0efce88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5623f0efd040 <col:60>
|-FunctionDecl 0x5623f0efd190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5623f0efd230 <col:54>
| `-ConstAttr 0x5623f0efd288 <col:95>
|-FunctionDecl 0x5623f0efd458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5623f0efd2c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5623f0efd338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5623f0efd508 <line:394:19>
| `-ConstAttr 0x5623f0efd560 <col:60>
|-FunctionDecl 0x5623f0efdf68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5623f0efde30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5623f0efe010 <col:71>
| `-NonNullAttr 0x5623f0efe068 <col:112, col:126> 1
|-FunctionDecl 0x5623f0efe170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5623f0efe0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5623f0efe218 <line:397:22>
| `-NonNullAttr 0x5623f0efe270 <col:63, col:77> 1
|-FunctionDecl 0x5623f0efe498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5623f0efe2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5623f0efe338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5623f0efe548 <line:400:22>
| `-NonNullAttr 0x5623f0efe5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5623f0efe7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5623f0efe5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5623f0efe668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5623f0efe858 <line:403:22>
| `-NonNullAttr 0x5623f0efe8b0 <col:63, col:77> 1
|-FunctionDecl 0x5623f0efeb08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5623f0efe8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5623f0efe9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5623f0efebb8 <line:406:22>
| `-NonNullAttr 0x5623f0efec10 <col:63, col:80> 1 2
|-FunctionDecl 0x5623f0effe48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5623f0efec58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5623f0efecd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5623f0effef8 <line:409:22>
| `-NonNullAttr 0x5623f0efff50 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f00188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5623f0efff98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5623f0f00028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5623f0f00238 <line:412:22>
| `-NonNullAttr 0x5623f0f00290 <col:63, col:80> 1 2
|-FunctionDecl 0x5623f0f004c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5623f0f002d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5623f0f00368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5623f0f00578 <col:37>
| `-NonNullAttr 0x5623f0f005d0 <col:78, col:95> 1 2
|-FunctionDecl 0x5623f0f007b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623f0f00618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5623f0f00698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5623f0f00868 <line:418:22>
| `-NonNullAttr 0x5623f0f008c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5623f0f00a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5623f0f00908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5623f0f00988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5623f0f00af8 <line:420:22>
| `-NonNullAttr 0x5623f0f00b50 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f00cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623f0f00b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5623f0f00c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5623f0f00da8 <line:423:22>
| `-NonNullAttr 0x5623f0f01e30 <col:63, col:80> 1 2
|-FunctionDecl 0x5623f0f01fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5623f0f01e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5623f0f01ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5623f0f02068 <line:426:22>
| `-NonNullAttr 0x5623f0f020c0 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f02268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623f0f02108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5623f0f02188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5623f0f02318 <line:429:22>
| `-NonNullAttr 0x5623f0f02370 <col:63, col:80> 1 2
|-FunctionDecl 0x5623f0f024f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5623f0f023b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5623f0f02438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5623f0f025a8 <line:431:22>
| `-NonNullAttr 0x5623f0f02600 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f02828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5623f0f02648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5623f0f026c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5623f0f028d8 <line:434:22>
| |-NonNullAttr 0x5623f0f02930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5623f0f02968 <col:100> "" ""
|-FunctionDecl 0x5623f0f02b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5623f0f029b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5623f0f02a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5623f0f02c28 <line:437:22>
| |-NonNullAttr 0x5623f0f02c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x5623f0f02cb8 <col:97> "" ""
|-FunctionDecl 0x5623f0f02eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5623f0f02d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5623f0f02d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5623f0f02f68 <line:440:22>
| `-NonNullAttr 0x5623f0f02fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x5623f0f03140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5623f0f03008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5623f0f03080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5623f0f031f0 <line:443:22>
| `-NonNullAttr 0x5623f0f03248 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f03538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5623f0f03298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5623f0f03318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5623f0f03390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5623f0f035f0 <line:447:22>
| `-NonNullAttr 0x5623f0f03648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5623f0f038f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5623f0f036a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5623f0f03720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5623f0f03798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5623f0f039b0 <col:43>
| `-NonNullAttr 0x5623f0f03a08 <col:84, col:98> 1
|-FunctionDecl 0x5623f0f03cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5623f0f03a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5623f0f03ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5623f0f03b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5623f0f03d80 <line:452:22>
| `-NonNullAttr 0x5623f0f03dd8 <col:63, col:77> 3
|-FunctionDecl 0x5623f0f040e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5623f0f03e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5623f0f03ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5623f0f03f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5623f0f041a0 <line:456:22>
| `-NonNullAttr 0x5623f0f041f8 <col:63, col:80> 2 3
|-FunctionDecl 0x5623f0f043e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5623f0f04248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5623f0f042c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5623f0f04498 <line:458:22>
|-FunctionDecl 0x5623f0f04868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5623f0f04560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5623f0f04700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5623f0f04918 <col:52, col:69> 1 2
|-FunctionDecl 0x5623f0f04ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5623f0f049a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5623f0f04a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5623f0f04ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5623f0f04b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5623f0f04c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5623f0f04e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5623f0f04d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5623f0f04fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5623f0f05040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5623f0f050e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5623f0f051d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5623f0f05240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5623f0f05410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix031_tso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5623f0f05508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5623f0f055c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5623f0f05560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5623f0f050c0 '__pthread_unwind_buf_t'
| |   `-Record 0x5623f0f05040 ''
| `-AlignedAttr 0x5623f0f05618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5623f0f05690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5623f0f057f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5623f0f05858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5623f0f058c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5623f0f05928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5623f0f05b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5623f0f05a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5623f0f05c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5623f0f05be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5623f0f05e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5623f0f05d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5623f0f05f18 <line:487:22>
|-RecordDecl 0x5623f0f05f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5623f0f06288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5623f0f060e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5623f0f06168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5623f0f06338 <col:86>
| `-ReturnsTwiceAttr 0x5623f0f06390 <col:12> Implicit
|-FunctionDecl 0x5623f0f066b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5623f0f06460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5623f0f06570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5623f0f06768 <line:493:22>
| `-NonNullAttr 0x5623f0f067c0 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f06938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5623f0f06808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5623f0f069e0 <line:495:22>
| `-NonNullAttr 0x5623f0f06a38 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f06b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5623f0f06a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5623f0f06be8 <line:497:22>
| `-NonNullAttr 0x5623f0f06c40 <col:52, col:66> 1
|-FunctionDecl 0x5623f0f06d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5623f0f06c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5623f0f06de8 <line:499:22>
| `-NonNullAttr 0x5623f0f06e40 <col:52, col:66> 1
|-FunctionDecl 0x5623f0f07088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5623f0f06e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5623f0f06f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5623f0f07138 <col:36>
| `-NonNullAttr 0x5623f0f07190 <col:66, col:83> 1 2
|-FunctionDecl 0x5623f0f07290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5623f0f071d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5623f0f07338 <line:504:22>
| `-NonNullAttr 0x5623f0f07390 <col:52, col:66> 1
|-FunctionDecl 0x5623f0f07628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623f0f07440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5623f0f074c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5623f0f076d8 <line:508:22>
| `-NonNullAttr 0x5623f0f07730 <col:63, col:80> 1 2
|-FunctionDecl 0x5623f0f079f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5623f0f07778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5623f0f077f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5623f0f07878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5623f0f07ab0 <line:512:22>
| `-NonNullAttr 0x5623f0f07b08 <col:63, col:80> 1 3
|-FunctionDecl 0x5623f0f07c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5623f0f07b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5623f0f07cb8 <line:514:22>
| `-NonNullAttr 0x5623f0f07d10 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f07f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5623f0f07dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5623f0f07fe0 <line:516:22>
| `-NonNullAttr 0x5623f0f08038 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f08140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5623f0f08088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5623f0f081e8 <line:518:22>
| `-NonNullAttr 0x5623f0f08240 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f08468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623f0f08288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5623f0f08308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5623f0f08518 <line:522:22>
| `-NonNullAttr 0x5623f0f08570 <col:63, col:80> 1 2
|-FunctionDecl 0x5623f0f08778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5623f0f085b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5623f0f08638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5623f0f08828 <line:525:22>
| `-NonNullAttr 0x5623f0f08880 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f08a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623f0f088c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5623f0f08948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5623f0f08ad8 <line:528:22>
| `-NonNullAttr 0x5623f0f08b30 <col:63, col:80> 1 2
|-FunctionDecl 0x5623f0f08cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5623f0f08b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5623f0f08bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5623f0f08d68 <line:530:22>
| `-NonNullAttr 0x5623f0f08dc0 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f09f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623f0f08e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5623f0f09eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5623f0f0a040 <line:534:22>
| `-NonNullAttr 0x5623f0f0a098 <col:63, col:80> 1 2
|-FunctionDecl 0x5623f0f0a228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5623f0f0a0e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5623f0f0a168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5623f0f0a2d8 <line:537:22>
| `-NonNullAttr 0x5623f0f0a330 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f0a4d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623f0f0a378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5623f0f0a3f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5623f0f0a588 <line:541:22>
| `-NonNullAttr 0x5623f0f0a5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5623f0f0a768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5623f0f0a628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5623f0f0a6a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5623f0f0a818 <line:544:22>
| `-NonNullAttr 0x5623f0f0a870 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f0aa58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5623f0f0a8b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5623f0f0a938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5623f0f0ab08 <line:547:22>
| `-NonNullAttr 0x5623f0f0ab60 <col:63, col:80> 1 2
|-FunctionDecl 0x5623f0f0ace8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5623f0f0aba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5623f0f0ac28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5623f0f0ad98 <line:550:22>
| `-NonNullAttr 0x5623f0f0adf0 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f0c168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5623f0f0bf10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5623f0f0c020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5623f0f0c218 <col:29>
| `-NonNullAttr 0x5623f0f0c270 <col:70, col:84> 1
|-FunctionDecl 0x5623f0f0c3e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5623f0f0c2b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5623f0f0c490 <line:555:22>
| `-NonNullAttr 0x5623f0f0c4e8 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f0c5f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5623f0f0c538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5623f0f0c698 <line:557:22>
| `-NonNullAttr 0x5623f0f0c6f0 <col:52, col:66> 1
|-FunctionDecl 0x5623f0f0c7f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5623f0f0c738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5623f0f0c898 <line:559:19>
| `-NonNullAttr 0x5623f0f0c8f0 <col:49, col:63> 1
|-FunctionDecl 0x5623f0f0cb28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5623f0f0c938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5623f0f0c9c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5623f0f0cbd8 <col:39>
| `-NonNullAttr 0x5623f0f0cc30 <col:69, col:86> 1 2
|-FunctionDecl 0x5623f0f0cd30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5623f0f0cc78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5623f0f0cdd8 <line:564:22>
| `-NonNullAttr 0x5623f0f0ce30 <col:52, col:66> 1
|-FunctionDecl 0x5623f0f0cf98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5623f0f0cee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5623f0f0d040 <line:566:22>
| `-NonNullAttr 0x5623f0f0d098 <col:52, col:66> 1
|-FunctionDecl 0x5623f0f0d258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5623f0f0d0e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5623f0f0d178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5623f0f0d308 <col:39>
| `-NonNullAttr 0x5623f0f0d360 <col:69, col:86> 1 2
|-FunctionDecl 0x5623f0f0d460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5623f0f0d3a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5623f0f0d508 <line:571:22>
| `-NonNullAttr 0x5623f0f0d560 <col:52, col:66> 1
|-FunctionDecl 0x5623f0f0d748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5623f0f0d610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5623f0f0d7f0 <line:573:22>
| `-NonNullAttr 0x5623f0f0d848 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f0d950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5623f0f0d898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5623f0f0d9f8 <line:575:22>
| `-NonNullAttr 0x5623f0f0da50 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f0dc78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623f0f0da98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5623f0f0db18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5623f0f0dd28 <line:579:22>
| `-NonNullAttr 0x5623f0f0dd80 <col:63, col:80> 1 2
|-FunctionDecl 0x5623f0f0dfa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5623f0f0ddc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5623f0f0de48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5623f0f0e058 <line:582:22>
| `-NonNullAttr 0x5623f0f0e0b0 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f0e258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623f0f0e0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5623f0f0e178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5623f0f0e308 <line:586:22>
| `-NonNullAttr 0x5623f0f0e360 <col:63, col:80> 1 2
|-FunctionDecl 0x5623f0f0e4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5623f0f0e3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5623f0f0e428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5623f0f0e598 <col:36>
| `-NonNullAttr 0x5623f0f0e5f0 <col:77, col:91> 1
|-FunctionDecl 0x5623f0f0e928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5623f0f0e6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5623f0f0e7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5623f0f0e9d8 <line:591:22>
| `-NonNullAttr 0x5623f0f0ea30 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f0eba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5623f0f0ea78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5623f0f0ec50 <line:593:22>
| `-NonNullAttr 0x5623f0f0eca8 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f0edb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5623f0f0ecf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5623f0f0ee58 <line:595:22>
| `-NonNullAttr 0x5623f0f0eeb0 <col:52, col:66> 1
|-FunctionDecl 0x5623f0f0efc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5623f0f0ef10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5623f0f0f070 <line:597:22>
| `-NonNullAttr 0x5623f0f0f0c8 <col:52, col:66> 1
|-FunctionDecl 0x5623f0f0f2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5623f0f0f118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5623f0f0f190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5623f0f0f3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5623f0f0f6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5623f0f0f428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5623f0f0f4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5623f0f0f530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5623f0f0f790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5623f0f0f9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5623f0f0f870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5623f0f0fa50 <line:606:22>
| `-NonNullAttr 0x5623f0f0faa8 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f0fbb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5623f0f0faf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5623f0f0fc58 <line:608:22>
| `-NonNullAttr 0x5623f0f0fcb0 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f0ff10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623f0f0fcf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5623f0f0fd78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5623f0f0ffc0 <line:612:22>
| `-NonNullAttr 0x5623f0f10018 <col:63, col:80> 1 2
|-FunctionDecl 0x5623f0f10228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5623f0f10068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5623f0f100e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5623f0f102d8 <col:37>
| `-NonNullAttr 0x5623f0f10330 <col:78, col:92> 1
|-FunctionDecl 0x5623f0f10548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5623f0f10378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5623f0f10420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5623f0f105f8 <line:618:22>
| `-NonNullAttr 0x5623f0f10650 <col:63, col:80> 1 2
|-FunctionDecl 0x5623f0f10818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5623f0f10698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5623f0f10710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5623f0f108c8 <line:621:22>
| `-NonNullAttr 0x5623f0f10920 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f10bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5623f0f10a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5623f0f10a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5623f0f10c78 <line:623:22>
| `-NonNullAttr 0x5623f0f10cd0 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f10e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5623f0f10d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5623f0f10f20 <line:625:22>
| `-NonNullAttr 0x5623f0f10f78 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f11080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5623f0f10fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5623f0f11128 <line:627:22>
| `-NonNullAttr 0x5623f0f11180 <col:52, col:66> 1
|-FunctionDecl 0x5623f0f11280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5623f0f111c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5623f0f11328 <line:629:22>
| `-NonNullAttr 0x5623f0f11380 <col:52, col:66> 1
|-FunctionDecl 0x5623f0f11480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5623f0f113c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5623f0f11528 <line:631:22>
| `-NonNullAttr 0x5623f0f11580 <col:52, col:66> 1
|-FunctionDecl 0x5623f0f11958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5623f0f11660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5623f0f11770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5623f0f117f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5623f0f11a10 <line:635:22>
| `-NonNullAttr 0x5623f0f11a68 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f11be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5623f0f11ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5623f0f11c90 <line:637:22>
| `-NonNullAttr 0x5623f0f11ce8 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f11df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5623f0f11d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5623f0f11e98 <line:639:22>
| `-NonNullAttr 0x5623f0f11ef0 <col:52, col:66> 1
|-FunctionDecl 0x5623f0f120e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5623f0f11fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5623f0f12190 <line:641:22>
| `-NonNullAttr 0x5623f0f121e8 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f122f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5623f0f12238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5623f0f12398 <line:643:22>
| `-NonNullAttr 0x5623f0f123f0 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f12618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623f0f12438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5623f0f124b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5623f0f126c8 <line:647:22>
| `-NonNullAttr 0x5623f0f12720 <col:63, col:80> 1 2
|-FunctionDecl 0x5623f0f12928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5623f0f12768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5623f0f127e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5623f0f129d8 <line:650:22>
| `-NonNullAttr 0x5623f0f12a30 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f12d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5623f0f12b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5623f0f12c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5623f0f12e28 <line:653:22>
| `-NonNullAttr 0x5623f0f12e80 <col:63, col:77> 1
|-FunctionDecl 0x5623f0f12fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5623f0f12ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5623f0f13090 <col:69>
|-FunctionDecl 0x5623f0f13208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5623f0f130f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5623f0f132b0 <col:72>
|-FunctionDecl 0x5623f0f134e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5623f0f13318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5623f0f133c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5623f0f13598 <col:44>
|-FunctionDecl 0x5623f0f137b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5623f0f13600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5623f0f13678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5623f0f13868 <line:660:22>
| `-NonNullAttr 0x5623f0f138c0 <col:63, col:77> 2
|-FunctionDecl 0x5623f0f13d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5623f0f139a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5623f0f13ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5623f0f13bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5623f0f13dc0 <col:47>
|-FunctionDecl 0x5623f0f14f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5623f0f13e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5623f0f150b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5623f0f15020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5623f0f15180 <line:667:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5623f0f15240 <line:668:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5623f0f15300 <line:669:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5623f0f153b8 <line:670:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5623f0f15438 prev 0x5623f0f153b8 <line:671:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5623f0f154a0 <col:24> 'int' 0
|-VarDecl 0x5623f0f154d8 <line:672:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5623f0f15558 prev 0x5623f0f154d8 <line:673:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x5623f0f155c0 <col:27> 'int' 0
|-VarDecl 0x5623f0f155f8 <line:674:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x5623f0f15678 prev 0x5623f0f155f8 <line:675:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x5623f0f156e0 <col:27> 'int' 0
|-VarDecl 0x5623f0f15718 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5623f0f15798 prev 0x5623f0f15718 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5623f0f15800 <col:27> 'int' 0
|-VarDecl 0x5623f0f15838 <line:678:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x5623f0f158b8 prev 0x5623f0f15838 <line:679:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x5623f0f15920 <col:27> 'int' 0
|-VarDecl 0x5623f0f15958 <line:680:1, col:5> col:5 used a 'int'
|-VarDecl 0x5623f0f159d8 prev 0x5623f0f15958 <line:681:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x5623f0f15a40 <col:9> 'int' 0
|-VarDecl 0x5623f0f15a70 <line:682:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x5623f0f15af0 <line:683:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x5623f0f15b68 <line:684:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x5623f0f15be0 <line:685:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x5623f0f15c58 <line:686:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x5623f0f15cd0 <line:687:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x5623f0f15d48 <line:688:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x5623f0f15dc0 <line:689:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x5623f0f15e38 <line:690:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x5623f0f15eb8 <line:691:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x5623f0f15f70 <line:692:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x5623f0f15fe8 <line:693:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x5623f0f16068 <line:694:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x5623f0f160e0 <line:695:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x5623f0f16158 <line:696:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5623f0f161d0 <line:697:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5623f0f16250 <line:698:1, col:5> col:5 used x 'int'
|-VarDecl 0x5623f0f162d0 prev 0x5623f0f16250 <line:699:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5623f0f16338 <col:9> 'int' 0
|-VarDecl 0x5623f0f16370 <line:700:1, col:5> col:5 used y 'int'
|-VarDecl 0x5623f0f163f0 prev 0x5623f0f16370 <line:701:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5623f0f16458 <col:9> 'int' 0
|-VarDecl 0x5623f0f16490 <line:702:1, col:5> col:5 used z 'int'
|-VarDecl 0x5623f0f16510 prev 0x5623f0f16490 <line:703:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5623f0f16578 <col:9> 'int' 0
|-VarDecl 0x5623f0f165a8 <line:704:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5623f0f16620 <line:705:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5623f0f16738 prev 0x5623f0f14f60 <line:706:1, line:739:1> line:706:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5623f0f166a0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5623f0f18138 <line:707:1, line:739:1>
|   |-CallExpr 0x5623f0f16848 <line:708:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623f0f16830 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623f0f167e0 <col:3> 'void ()' Function 0x5623f0ebc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623f0f168c0 <line:709:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5623f0f16868 <col:3> 'int' lvalue Var 0x5623f0f16068 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5623f0f168a8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623f0f16888 <col:15> 'int' lvalue Var 0x5623f0f15f70 'a$w_buff0' 'int'
|   |-BinaryOperator 0x5623f0f16920 <line:710:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5623f0f168e0 <col:3> 'int' lvalue Var 0x5623f0f15f70 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x5623f0f16900 <col:15> 'int' 1
|   |-BinaryOperator 0x5623f0f16998 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5623f0f16940 <col:3> '_Bool' lvalue Var 0x5623f0f160e0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5623f0f16980 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623f0f16960 <col:20> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5623f0f16a30 <line:712:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5623f0f169b8 <col:3> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5623f0f16a08 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5623f0f169d8 <col:27> 'int' 1
|   |-CallExpr 0x5623f0f16bb8 <line:713:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5623f0f16ba0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5623f0f16a50 <col:3> 'void (int)' Function 0x5623f0ebc0d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5623f0f16b50 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5623f0f16b30 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5623f0f16b10 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5623f0f16ac8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5623f0f16ab0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5623f0f16a70 <col:23> '_Bool' lvalue Var 0x5623f0f160e0 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5623f0f16af8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5623f0f16ae0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5623f0f16a90 <col:41> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5623f0f16c38 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5623f0f16be0 <col:3> '_Bool' lvalue Var 0x5623f0f15cd0 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5623f0f16c20 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623f0f16c00 <col:20> '_Bool' lvalue Var 0x5623f0f15b68 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5623f0f16cb0 <line:715:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5623f0f16c58 <col:3> '_Bool' lvalue Var 0x5623f0f15d48 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5623f0f16c98 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623f0f16c78 <col:20> '_Bool' lvalue Var 0x5623f0f15be0 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5623f0f16d28 <line:716:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5623f0f16cd0 <col:3> '_Bool' lvalue Var 0x5623f0f15dc0 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5623f0f16d10 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623f0f16cf0 <col:20> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5623f0f16dc0 <line:717:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5623f0f16d48 <col:3> '_Bool' lvalue Var 0x5623f0f15be0 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x5623f0f16d98 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5623f0f16d68 <col:27> 'int' 1
|   |-CallExpr 0x5623f0f16e18 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623f0f16e00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623f0f16de0 <col:3> 'void ()' Function 0x5623f0ebc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623f0f16e70 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623f0f16e58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623f0f16e38 <col:3> 'void ()' Function 0x5623f0ebc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623f0f16ed0 <line:720:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5623f0f16e90 <col:3> 'int' lvalue Var 0x5623f0f162d0 'x' 'int'
|   | `-IntegerLiteral 0x5623f0f16eb0 <col:7> 'int' 1
|   |-CallExpr 0x5623f0f16f28 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623f0f16f10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623f0f16ef0 <col:3> 'void ()' Function 0x5623f0ebc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623f0f16f98 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623f0f16f80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623f0f16f48 <col:3> 'void ()' Function 0x5623f0ebc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623f0f17010 <line:723:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5623f0f16fb8 <col:3> 'int' lvalue Var 0x5623f0f15558 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5623f0f16ff8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623f0f16fd8 <col:25> 'int' lvalue Var 0x5623f0f162d0 'x' 'int'
|   |-CallExpr 0x5623f0f17068 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623f0f17050 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623f0f17030 <col:3> 'void ()' Function 0x5623f0ebc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623f0f170c0 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623f0f170a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623f0f17088 <col:3> 'void ()' Function 0x5623f0ebc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623f0f17138 <line:726:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5623f0f170e0 <col:3> 'int' lvalue Var 0x5623f0f15678 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x5623f0f17120 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623f0f17100 <col:25> 'int' lvalue Var 0x5623f0f163f0 'y' 'int'
|   |-CallExpr 0x5623f0f17190 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623f0f17178 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623f0f17158 <col:3> 'void ()' Function 0x5623f0ebc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623f0f171e8 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623f0f171d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623f0f171b0 <col:3> 'void ()' Function 0x5623f0ebc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623f0f174d0 <line:729:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5623f0f17208 <col:3> 'int' lvalue Var 0x5623f0f159d8 'a' 'int'
|   | `-ConditionalOperator 0x5623f0f174a0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5623f0f172c8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5623f0f17280 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5623f0f17268 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5623f0f17228 <col:7> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5623f0f172b0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5623f0f17298 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5623f0f17248 <col:25> '_Bool' lvalue Var 0x5623f0f15be0 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5623f0f17488 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623f0f172e8 <col:42> 'int' lvalue Var 0x5623f0f15f70 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x5623f0f17468 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5623f0f17438 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5623f0f173a8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5623f0f17360 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5623f0f17348 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5623f0f17308 <col:55> '_Bool' lvalue Var 0x5623f0f160e0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5623f0f17390 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5623f0f17378 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5623f0f17328 <col:73> '_Bool' lvalue Var 0x5623f0f15d48 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5623f0f17408 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5623f0f173c8 <col:90> 'int' lvalue Var 0x5623f0f16068 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5623f0f17420 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5623f0f173e8 <col:102> 'int' lvalue Var 0x5623f0f159d8 'a' 'int'
|   |-BinaryOperator 0x5623f0f176d8 <line:730:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5623f0f174f0 <col:3> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5623f0f176c0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623f0f17690 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5623f0f175b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5623f0f17568 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5623f0f17550 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5623f0f17510 <col:20> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5623f0f17598 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5623f0f17580 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5623f0f17530 <col:38> '_Bool' lvalue Var 0x5623f0f15be0 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5623f0f17648 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5623f0f17600 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5623f0f175d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5623f0f17678 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5623f0f17660 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5623f0f17628 <col:66> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5623f0f179c0 <line:731:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5623f0f176f8 <col:3> '_Bool' lvalue Var 0x5623f0f160e0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5623f0f179a8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623f0f17978 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5623f0f17898 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5623f0f177b8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5623f0f17770 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5623f0f17758 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5623f0f17718 <col:20> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5623f0f177a0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5623f0f17788 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5623f0f17738 <col:38> '_Bool' lvalue Var 0x5623f0f15be0 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5623f0f17878 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5623f0f17830 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5623f0f17818 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5623f0f177d8 <col:56> '_Bool' lvalue Var 0x5623f0f160e0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5623f0f17860 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5623f0f17848 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5623f0f177f8 <col:74> '_Bool' lvalue Var 0x5623f0f15d48 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5623f0f17930 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5623f0f178e8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5623f0f178b8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5623f0f17960 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5623f0f17948 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5623f0f17910 <col:102> '_Bool' lvalue Var 0x5623f0f160e0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5623f0f17bc8 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5623f0f179e0 <col:3> '_Bool' lvalue Var 0x5623f0f15be0 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5623f0f17bb0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623f0f17b80 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5623f0f17aa0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5623f0f17a58 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5623f0f17a40 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5623f0f17a00 <col:20> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5623f0f17a88 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5623f0f17a70 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5623f0f17a20 <col:38> '_Bool' lvalue Var 0x5623f0f15be0 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5623f0f17b38 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5623f0f17af0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5623f0f17ac0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5623f0f17b68 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5623f0f17b50 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5623f0f17b18 <col:66> '_Bool' lvalue Var 0x5623f0f15be0 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5623f0f17eb0 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5623f0f17be8 <col:3> '_Bool' lvalue Var 0x5623f0f15d48 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5623f0f17e98 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623f0f17e68 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5623f0f17d88 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5623f0f17ca8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5623f0f17c60 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5623f0f17c48 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5623f0f17c08 <col:20> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5623f0f17c90 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5623f0f17c78 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5623f0f17c28 <col:38> '_Bool' lvalue Var 0x5623f0f15be0 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5623f0f17d68 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5623f0f17d20 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5623f0f17d08 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5623f0f17cc8 <col:56> '_Bool' lvalue Var 0x5623f0f160e0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5623f0f17d50 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5623f0f17d38 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5623f0f17ce8 <col:74> '_Bool' lvalue Var 0x5623f0f15d48 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5623f0f17e20 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5623f0f17dd8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5623f0f17da8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5623f0f17e50 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5623f0f17e38 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5623f0f17e00 <col:102> '_Bool' lvalue Var 0x5623f0f15d48 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x5623f0f17f08 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623f0f17ef0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623f0f17ed0 <col:3> 'void ()' Function 0x5623f0ebc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623f0f17f60 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623f0f17f48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623f0f17f28 <col:3> 'void ()' Function 0x5623f0ebc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623f0f18028 <line:736:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5623f0f17f90 <col:3> 'int' lvalue Var 0x5623f0f15438 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5623f0f18008 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5623f0f17ff0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623f0f17fb0 <col:22> 'int' lvalue Var 0x5623f0f15438 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5623f0f17fd0 <col:41> 'int' 1
|   |-CallExpr 0x5623f0f18080 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623f0f18068 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623f0f18048 <col:3> 'void ()' Function 0x5623f0ebc410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5623f0f18128 <line:738:3, col:36>
|     `-CallExpr 0x5623f0f18108 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5623f0f180f0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5623f0f180a0 <col:10> 'void *(void)' Function 0x5623f0ebbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5623f0f182f0 prev 0x5623f0f150b8 <line:740:1, line:778:1> line:740:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5623f0f18258 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5623f0f1c108 <line:741:1, line:778:1>
|   |-CallExpr 0x5623f0f183d0 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623f0f183b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623f0f18398 <col:3> 'void ()' Function 0x5623f0ebc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623f0f18430 <line:743:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5623f0f183f0 <col:3> 'int' lvalue Var 0x5623f0f163f0 'y' 'int'
|   | `-IntegerLiteral 0x5623f0f18410 <col:7> 'int' 1
|   |-CallExpr 0x5623f0f18488 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623f0f18470 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623f0f18450 <col:3> 'void ()' Function 0x5623f0ebc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623f0f184e0 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623f0f184c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623f0f184a8 <col:3> 'void ()' Function 0x5623f0ebc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623f0f18540 <line:746:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5623f0f18500 <col:3> 'int' lvalue Var 0x5623f0f16510 'z' 'int'
|   | `-IntegerLiteral 0x5623f0f18520 <col:7> 'int' 1
|   |-CallExpr 0x5623f0f18598 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623f0f18580 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623f0f18560 <col:3> 'void ()' Function 0x5623f0ebc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623f0f185f0 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623f0f185d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623f0f185b8 <col:3> 'void ()' Function 0x5623f0ebc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623f0f18668 <line:749:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5623f0f18610 <col:3> 'int' lvalue Var 0x5623f0f15798 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5623f0f18650 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623f0f18630 <col:25> 'int' lvalue Var 0x5623f0f16510 'z' 'int'
|   |-CallExpr 0x5623f0f186c0 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623f0f186a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623f0f18688 <col:3> 'void ()' Function 0x5623f0ebc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623f0f18718 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623f0f18700 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623f0f186e0 <col:3> 'void ()' Function 0x5623f0ebc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623f0f187c8 <line:752:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5623f0f18738 <col:3> '_Bool' lvalue Var 0x5623f0f165a8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5623f0f187b0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5623f0f18790 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5623f0f18778 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5623f0f18758 <col:19> 'void *(void)' Function 0x5623f0ebbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5623f0f18878 <line:753:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5623f0f187e8 <col:3> '_Bool' lvalue Var 0x5623f0f16620 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5623f0f18860 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5623f0f18840 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5623f0f18828 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5623f0f18808 <col:19> 'void *(void)' Function 0x5623f0ebbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5623f0f188f0 <line:754:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5623f0f18898 <col:3> '_Bool' lvalue Var 0x5623f0f15a70 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5623f0f188d8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623f0f188b8 <col:21> '_Bool' lvalue Var 0x5623f0f16620 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5623f0f18968 <line:755:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5623f0f18910 <col:3> 'int' lvalue Var 0x5623f0f15af0 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5623f0f18950 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623f0f18930 <col:15> 'int' lvalue Var 0x5623f0f159d8 'a' 'int'
|   |-BinaryOperator 0x5623f0f18da0 <line:756:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5623f0f18988 <col:3> 'int' lvalue Var 0x5623f0f159d8 'a' 'int'
|   | `-ConditionalOperator 0x5623f0f18d70 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5623f0f18b98 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5623f0f18ab8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5623f0f189e0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5623f0f189c8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5623f0f189a8 <col:8> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5623f0f18a98 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5623f0f18a30 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5623f0f18a18 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5623f0f189f8 <col:27> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x5623f0f18a80 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5623f0f18a68 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5623f0f18a48 <col:46> '_Bool' lvalue Var 0x5623f0f160e0 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5623f0f18b78 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5623f0f18b10 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5623f0f18af8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5623f0f18ad8 <col:65> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x5623f0f18b60 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5623f0f18b48 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5623f0f18b28 <col:84> '_Bool' lvalue Var 0x5623f0f15dc0 'a$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5623f0f18d58 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623f0f18bb8 <col:101> 'int' lvalue Var 0x5623f0f159d8 'a' 'int'
|   |   `-ParenExpr 0x5623f0f18d38 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5623f0f18d08 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5623f0f18c78 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5623f0f18c30 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5623f0f18c18 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5623f0f18bd8 <col:106> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5623f0f18c60 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5623f0f18c48 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5623f0f18bf8 <col:124> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5623f0f18cd8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5623f0f18c98 <col:141> 'int' lvalue Var 0x5623f0f15f70 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5623f0f18cf0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5623f0f18cb8 <col:153> 'int' lvalue Var 0x5623f0f16068 'a$w_buff1' 'int'
|   |-BinaryOperator 0x5623f0f192c8 <line:757:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5623f0f18dc0 <col:3> 'int' lvalue Var 0x5623f0f15f70 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x5623f0f19298 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5623f0f19268 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5623f0f19250 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5623f0f18de0 <col:15> '_Bool' lvalue Var 0x5623f0f16620 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5623f0f19280 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623f0f18e00 <col:31> 'int' lvalue Var 0x5623f0f15f70 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x5623f0f19230 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5623f0f19200 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5623f0f19028 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5623f0f18f30 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5623f0f18e58 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5623f0f18e40 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5623f0f18e20 <col:45> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5623f0f18f10 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5623f0f18ea8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5623f0f18e90 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5623f0f18e70 <col:64> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5623f0f18ef8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5623f0f18ee0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5623f0f18ec0 <col:83> '_Bool' lvalue Var 0x5623f0f160e0 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5623f0f19008 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5623f0f18fa0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5623f0f18f70 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5623f0f18f50 <col:102> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5623f0f18ff0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5623f0f18fd8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5623f0f18fb8 <col:121> '_Bool' lvalue Var 0x5623f0f15dc0 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5623f0f191e8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5623f0f19048 <col:138> 'int' lvalue Var 0x5623f0f15f70 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x5623f0f191c8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5623f0f19198 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5623f0f19108 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5623f0f190c0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5623f0f190a8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5623f0f19068 <col:151> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5623f0f190f0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5623f0f190d8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5623f0f19088 <col:169> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5623f0f19168 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5623f0f19128 <col:186> 'int' lvalue Var 0x5623f0f15f70 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5623f0f19180 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5623f0f19148 <col:198> 'int' lvalue Var 0x5623f0f15f70 'a$w_buff0' 'int'
|   |-BinaryOperator 0x5623f0f197d8 <line:758:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5623f0f192e8 <col:3> 'int' lvalue Var 0x5623f0f16068 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x5623f0f197a8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5623f0f19778 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5623f0f19760 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5623f0f19308 <col:15> '_Bool' lvalue Var 0x5623f0f16620 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5623f0f19790 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623f0f19328 <col:31> 'int' lvalue Var 0x5623f0f16068 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x5623f0f19740 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5623f0f19710 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5623f0f19538 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5623f0f19458 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5623f0f19380 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5623f0f19368 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5623f0f19348 <col:45> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5623f0f19438 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5623f0f193d0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5623f0f193b8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5623f0f19398 <col:64> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5623f0f19420 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5623f0f19408 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5623f0f193e8 <col:83> '_Bool' lvalue Var 0x5623f0f160e0 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5623f0f19518 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5623f0f194b0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5623f0f19498 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5623f0f19478 <col:102> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5623f0f19500 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5623f0f194e8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5623f0f194c8 <col:121> '_Bool' lvalue Var 0x5623f0f15dc0 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5623f0f196f8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5623f0f19558 <col:138> 'int' lvalue Var 0x5623f0f16068 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x5623f0f196d8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5623f0f196a8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5623f0f19618 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5623f0f195d0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5623f0f195b8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5623f0f19578 <col:151> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5623f0f19600 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5623f0f195e8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5623f0f19598 <col:169> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5623f0f19678 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5623f0f19638 <col:186> 'int' lvalue Var 0x5623f0f16068 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5623f0f19690 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5623f0f19658 <col:198> 'int' lvalue Var 0x5623f0f16068 'a$w_buff1' 'int'
|   |-BinaryOperator 0x5623f0f19d80 <line:759:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5623f0f197f8 <col:3> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5623f0f19d68 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623f0f19d38 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5623f0f19cf0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623f0f19cd8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623f0f19818 <col:20> '_Bool' lvalue Var 0x5623f0f16620 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5623f0f19d20 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623f0f19d08 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623f0f19838 <col:36> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5623f0f19cb8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5623f0f19c88 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5623f0f19a48 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5623f0f19968 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5623f0f19890 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5623f0f19878 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5623f0f19858 <col:55> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5623f0f19948 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5623f0f198e0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5623f0f198c8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5623f0f198a8 <col:74> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5623f0f19930 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5623f0f19918 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5623f0f198f8 <col:93> '_Bool' lvalue Var 0x5623f0f160e0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5623f0f19a28 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5623f0f199c0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5623f0f199a8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5623f0f19988 <col:112> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5623f0f19a10 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5623f0f199f8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5623f0f199d8 <col:131> '_Bool' lvalue Var 0x5623f0f15dc0 'a$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5623f0f19c70 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5623f0f19c58 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5623f0f19a68 <col:148> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5623f0f19c38 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5623f0f19c08 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5623f0f19b28 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5623f0f19ae0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5623f0f19ac8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5623f0f19a88 <col:166> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5623f0f19b10 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5623f0f19af8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5623f0f19aa8 <col:184> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5623f0f19bc0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5623f0f19b78 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5623f0f19b48 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5623f0f19bf0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5623f0f19bd8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5623f0f19ba0 <col:212> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5623f0f1a358 <line:760:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5623f0f19da0 <col:3> '_Bool' lvalue Var 0x5623f0f160e0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5623f0f1a340 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623f0f1a310 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5623f0f1a2c8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623f0f1a2b0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623f0f19dc0 <col:20> '_Bool' lvalue Var 0x5623f0f16620 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5623f0f1a2f8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623f0f1a2e0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623f0f19de0 <col:36> '_Bool' lvalue Var 0x5623f0f160e0 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5623f0f1a290 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5623f0f1a260 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5623f0f1a000 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5623f0f19f10 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5623f0f19e38 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5623f0f19e20 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5623f0f19e00 <col:55> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5623f0f19ef0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5623f0f19e88 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5623f0f19e70 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5623f0f19e50 <col:74> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5623f0f19ed8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5623f0f19ec0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5623f0f19ea0 <col:93> '_Bool' lvalue Var 0x5623f0f160e0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5623f0f19fe0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5623f0f19f68 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5623f0f19f50 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5623f0f19f30 <col:112> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5623f0f19fc8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5623f0f19fb0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5623f0f19f80 <col:131> '_Bool' lvalue Var 0x5623f0f15dc0 'a$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5623f0f1a248 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5623f0f1a230 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5623f0f1a020 <col:148> '_Bool' lvalue Var 0x5623f0f160e0 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5623f0f1a210 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5623f0f1a1e0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5623f0f1a0e0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5623f0f1a098 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5623f0f1a080 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5623f0f1a040 <col:166> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5623f0f1a0c8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5623f0f1a0b0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5623f0f1a060 <col:184> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5623f0f1a1b0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5623f0f1a130 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5623f0f1a100 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5623f0f1a1c8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5623f0f1a188 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5623f0f1a158 <col:219> 'int' 0
|   |-BinaryOperator 0x5623f0f1a900 <line:761:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5623f0f1a378 <col:3> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5623f0f1a8e8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623f0f1a8b8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5623f0f1a870 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623f0f1a858 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623f0f1a398 <col:20> '_Bool' lvalue Var 0x5623f0f16620 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5623f0f1a8a0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623f0f1a888 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623f0f1a3b8 <col:36> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x5623f0f1a838 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5623f0f1a808 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5623f0f1a5c8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5623f0f1a4e8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5623f0f1a410 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5623f0f1a3f8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5623f0f1a3d8 <col:55> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5623f0f1a4c8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5623f0f1a460 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5623f0f1a448 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5623f0f1a428 <col:74> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5623f0f1a4b0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5623f0f1a498 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5623f0f1a478 <col:93> '_Bool' lvalue Var 0x5623f0f160e0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5623f0f1a5a8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5623f0f1a540 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5623f0f1a528 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5623f0f1a508 <col:112> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5623f0f1a590 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5623f0f1a578 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5623f0f1a558 <col:131> '_Bool' lvalue Var 0x5623f0f15dc0 'a$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5623f0f1a7f0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5623f0f1a7d8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5623f0f1a5e8 <col:148> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x5623f0f1a7b8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5623f0f1a788 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5623f0f1a6a8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5623f0f1a660 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5623f0f1a648 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5623f0f1a608 <col:166> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5623f0f1a690 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5623f0f1a678 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5623f0f1a628 <col:184> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5623f0f1a740 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5623f0f1a6f8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5623f0f1a6c8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5623f0f1a770 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5623f0f1a758 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5623f0f1a720 <col:212> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5623f0f1aec8 <line:762:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5623f0f1a920 <col:3> '_Bool' lvalue Var 0x5623f0f15dc0 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5623f0f1aeb0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623f0f1ae80 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5623f0f1ae38 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623f0f1ae20 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623f0f1a940 <col:20> '_Bool' lvalue Var 0x5623f0f16620 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5623f0f1ae68 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623f0f1ae50 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623f0f1a960 <col:36> '_Bool' lvalue Var 0x5623f0f15dc0 'a$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x5623f0f1ae00 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5623f0f1add0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5623f0f1ab70 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5623f0f1aa90 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5623f0f1a9b8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5623f0f1a9a0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5623f0f1a980 <col:55> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5623f0f1aa70 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5623f0f1aa08 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5623f0f1a9f0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5623f0f1a9d0 <col:74> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5623f0f1aa58 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5623f0f1aa40 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5623f0f1aa20 <col:93> '_Bool' lvalue Var 0x5623f0f160e0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5623f0f1ab50 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5623f0f1aae8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5623f0f1aad0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5623f0f1aab0 <col:112> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5623f0f1ab38 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5623f0f1ab20 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5623f0f1ab00 <col:131> '_Bool' lvalue Var 0x5623f0f15dc0 'a$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5623f0f1adb8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5623f0f1ada0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5623f0f1ab90 <col:148> '_Bool' lvalue Var 0x5623f0f15dc0 'a$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x5623f0f1ad80 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5623f0f1ad50 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5623f0f1ac50 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5623f0f1ac08 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5623f0f1abf0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5623f0f1abb0 <col:166> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5623f0f1ac38 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5623f0f1ac20 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5623f0f1abd0 <col:184> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5623f0f1ad20 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5623f0f1aca0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5623f0f1ac70 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5623f0f1ad38 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5623f0f1acf8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5623f0f1acc8 <col:219> 'int' 0
|   |-BinaryOperator 0x5623f0f1af40 <line:763:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5623f0f1aee8 <col:3> 'int' lvalue Var 0x5623f0f158b8 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x5623f0f1af28 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623f0f1af08 <col:25> 'int' lvalue Var 0x5623f0f159d8 'a' 'int'
|   |-BinaryOperator 0x5623f0f1b090 <line:764:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5623f0f1af60 <col:3> 'int' lvalue Var 0x5623f0f159d8 'a' 'int'
|   | `-ConditionalOperator 0x5623f0f1b060 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5623f0f1b018 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5623f0f1b000 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5623f0f1af80 <col:7> '_Bool' lvalue Var 0x5623f0f15a70 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5623f0f1b030 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623f0f1afc0 <col:25> 'int' lvalue Var 0x5623f0f15af0 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5623f0f1b048 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5623f0f1afe0 <col:37> 'int' lvalue Var 0x5623f0f159d8 'a' 'int'
|   |-BinaryOperator 0x5623f0f1b128 <line:765:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5623f0f1b0b0 <col:3> '_Bool' lvalue Var 0x5623f0f15a70 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5623f0f1b100 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5623f0f1b0d0 <col:28> 'int' 0
|   |-CallExpr 0x5623f0f1b180 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623f0f1b168 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623f0f1b148 <col:3> 'void ()' Function 0x5623f0ebc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623f0f1b1d8 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623f0f1b1c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623f0f1b1a0 <col:3> 'void ()' Function 0x5623f0ebc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623f0f1b4c0 <line:768:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5623f0f1b1f8 <col:3> 'int' lvalue Var 0x5623f0f159d8 'a' 'int'
|   | `-ConditionalOperator 0x5623f0f1b490 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5623f0f1b2b8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5623f0f1b270 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5623f0f1b258 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5623f0f1b218 <col:7> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5623f0f1b2a0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5623f0f1b288 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5623f0f1b238 <col:25> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5623f0f1b478 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623f0f1b2d8 <col:42> 'int' lvalue Var 0x5623f0f15f70 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x5623f0f1b458 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5623f0f1b428 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5623f0f1b398 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5623f0f1b350 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5623f0f1b338 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5623f0f1b2f8 <col:55> '_Bool' lvalue Var 0x5623f0f160e0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5623f0f1b380 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5623f0f1b368 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5623f0f1b318 <col:73> '_Bool' lvalue Var 0x5623f0f15dc0 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5623f0f1b3f8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5623f0f1b3b8 <col:90> 'int' lvalue Var 0x5623f0f16068 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5623f0f1b410 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5623f0f1b3d8 <col:102> 'int' lvalue Var 0x5623f0f159d8 'a' 'int'
|   |-BinaryOperator 0x5623f0f1b6c8 <line:769:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5623f0f1b4e0 <col:3> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5623f0f1b6b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623f0f1b680 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5623f0f1b5a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5623f0f1b558 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5623f0f1b540 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5623f0f1b500 <col:20> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5623f0f1b588 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5623f0f1b570 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5623f0f1b520 <col:38> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5623f0f1b638 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5623f0f1b5f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5623f0f1b5c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5623f0f1b668 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5623f0f1b650 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5623f0f1b618 <col:66> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5623f0f1b9b0 <line:770:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5623f0f1b6e8 <col:3> '_Bool' lvalue Var 0x5623f0f160e0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5623f0f1b998 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623f0f1b968 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5623f0f1b888 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5623f0f1b7a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5623f0f1b760 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5623f0f1b748 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5623f0f1b708 <col:20> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5623f0f1b790 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5623f0f1b778 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5623f0f1b728 <col:38> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5623f0f1b868 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5623f0f1b820 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5623f0f1b808 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5623f0f1b7c8 <col:56> '_Bool' lvalue Var 0x5623f0f160e0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5623f0f1b850 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5623f0f1b838 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5623f0f1b7e8 <col:74> '_Bool' lvalue Var 0x5623f0f15dc0 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5623f0f1b920 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5623f0f1b8d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5623f0f1b8a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5623f0f1b950 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5623f0f1b938 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5623f0f1b900 <col:102> '_Bool' lvalue Var 0x5623f0f160e0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5623f0f1bbb8 <line:771:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5623f0f1b9d0 <col:3> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5623f0f1bba0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623f0f1bb70 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5623f0f1ba90 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5623f0f1ba48 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5623f0f1ba30 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5623f0f1b9f0 <col:20> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5623f0f1ba78 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5623f0f1ba60 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5623f0f1ba10 <col:38> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5623f0f1bb28 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5623f0f1bae0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5623f0f1bab0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5623f0f1bb58 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5623f0f1bb40 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5623f0f1bb08 <col:66> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5623f0f1bea0 <line:772:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5623f0f1bbd8 <col:3> '_Bool' lvalue Var 0x5623f0f15dc0 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5623f0f1be88 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623f0f1be58 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5623f0f1bd78 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5623f0f1bc98 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5623f0f1bc50 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5623f0f1bc38 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5623f0f1bbf8 <col:20> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5623f0f1bc80 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5623f0f1bc68 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5623f0f1bc18 <col:38> '_Bool' lvalue Var 0x5623f0f15c58 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5623f0f1bd58 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5623f0f1bd10 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5623f0f1bcf8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5623f0f1bcb8 <col:56> '_Bool' lvalue Var 0x5623f0f160e0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5623f0f1bd40 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5623f0f1bd28 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5623f0f1bcd8 <col:74> '_Bool' lvalue Var 0x5623f0f15dc0 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5623f0f1be10 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5623f0f1bdc8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5623f0f1bd98 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5623f0f1be40 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5623f0f1be28 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5623f0f1bdf0 <col:102> '_Bool' lvalue Var 0x5623f0f15dc0 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5623f0f1bef8 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623f0f1bee0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623f0f1bec0 <col:3> 'void ()' Function 0x5623f0ebc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623f0f1bf50 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623f0f1bf38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623f0f1bf18 <col:3> 'void ()' Function 0x5623f0ebc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623f0f1c028 <line:775:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5623f0f1bf70 <col:3> 'int' lvalue Var 0x5623f0f15438 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5623f0f1c008 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5623f0f1bff0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623f0f1bf90 <col:22> 'int' lvalue Var 0x5623f0f15438 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5623f0f1bfd0 <col:41> 'int' 1
|   |-CallExpr 0x5623f0f1c080 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623f0f1c068 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623f0f1c048 <col:3> 'void ()' Function 0x5623f0ebc410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5623f0f1c0f8 <line:777:3, col:36>
|     `-CallExpr 0x5623f0f1c0d8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5623f0f1c0c0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5623f0f1c0a0 <col:10> 'void *(void)' Function 0x5623f0ebbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5623f0f1c258 prev 0x5623f0f15180 <line:779:1, line:781:1> line:779:6 fence 'void ()'
| `-CompoundStmt 0x5623f0f1c2f8 <line:780:1, line:781:1>
|-FunctionDecl 0x5623f0f1c328 prev 0x5623f0f15240 <line:782:1, line:784:1> line:782:6 isync 'void ()'
| `-CompoundStmt 0x5623f0f1c3c8 <line:783:1, line:784:1>
|-FunctionDecl 0x5623f0f1c3f8 prev 0x5623f0f15300 <line:785:1, line:787:1> line:785:6 lwfence 'void ()'
| `-CompoundStmt 0x5623f0f1c498 <line:786:1, line:787:1>
`-FunctionDecl 0x5623f0f1c508 <line:788:1, line:810:1> line:788:5 main 'int ()'
  `-CompoundStmt 0x5623f0f1dff0 <line:789:1, line:810:1>
    |-DeclStmt 0x5623f0f1c620 <line:790:3, col:17>
    | `-VarDecl 0x5623f0f1c5b8 <col:3, col:13> col:13 used t847 'pthread_t':'unsigned long'
    |-CallExpr 0x5623f0f1c828 <line:791:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5623f0f1c810 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5623f0f1c638 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5623f0efc8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5623f0f1c678 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5623f0f1c658 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5623f0f1c5b8 't847' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5623f0f1c868 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5623f0f1c6f0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5623f0f1c6c8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5623f0f1c690 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5623f0f1c880 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5623f0f1c710 <col:38> 'void *(void *)' Function 0x5623f0f16738 'P0' 'void *(void *)'
    | `-ParenExpr 0x5623f0f1c790 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5623f0f1c768 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5623f0f1c730 <col:51> 'int' 0
    |-DeclStmt 0x5623f0f1c910 <line:792:3, col:17>
    | `-VarDecl 0x5623f0f1c8a8 <col:3, col:13> col:13 used t848 'pthread_t':'unsigned long'
    |-CallExpr 0x5623f0f1cab8 <line:793:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5623f0f1caa0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5623f0f1c928 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5623f0efc8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5623f0f1c968 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5623f0f1c948 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5623f0f1c8a8 't848' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5623f0f1caf8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5623f0f1c9e0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5623f0f1c9b8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5623f0f1c980 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5623f0f1cb10 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5623f0f1ca00 <col:38> 'void *(void *)' Function 0x5623f0f182f0 'P1' 'void *(void *)'
    | `-ParenExpr 0x5623f0f1ca80 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5623f0f1ca58 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5623f0f1ca20 <col:51> 'int' 0
    |-CallExpr 0x5623f0f1cb60 <line:794:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5623f0f1cb48 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5623f0f1cb28 <col:3> 'void ()' Function 0x5623f0ebc350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5623f0f1cc30 <line:795:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5623f0f1cb80 <col:3> '_Bool' lvalue Var 0x5623f0f16158 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5623f0f1cc18 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5623f0f1cbf8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5623f0f1cbe0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5623f0f1cba0 <col:21> 'int' lvalue Var 0x5623f0f15438 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5623f0f1cbc0 <col:41> 'int' 2
    |-CallExpr 0x5623f0f1cc88 <line:796:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5623f0f1cc70 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5623f0f1cc50 <col:3> 'void ()' Function 0x5623f0ebc410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5623f0f1cd00 <line:797:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5623f0f1cce8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5623f0f1cca8 <col:3> 'void (int)' Function 0x5623f0ebbca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5623f0f1cd40 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5623f0f1cd28 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5623f0f1ccc8 <col:21> '_Bool' lvalue Var 0x5623f0f16158 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5623f0f1cd90 <line:798:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5623f0f1cd78 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5623f0f1cd58 <col:3> 'void ()' Function 0x5623f0ebc350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5623f0f1d090 <line:799:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5623f0f1cdb0 <col:3> 'int' lvalue Var 0x5623f0f159d8 'a' 'int'
    | `-ConditionalOperator 0x5623f0f1d060 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5623f0f1ce70 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5623f0f1ce28 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5623f0f1ce10 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5623f0f1cdd0 <col:7> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5623f0f1ce58 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5623f0f1ce40 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5623f0f1cdf0 <col:25> '_Bool' lvalue Var 0x5623f0f15b68 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5623f0f1d048 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5623f0f1ce90 <col:42> 'int' lvalue Var 0x5623f0f15f70 'a$w_buff0' 'int'
    |   `-ParenExpr 0x5623f0f1d028 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5623f0f1cff8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5623f0f1cf50 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5623f0f1cf08 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5623f0f1cef0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5623f0f1ceb0 <col:55> '_Bool' lvalue Var 0x5623f0f160e0 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5623f0f1cf38 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5623f0f1cf20 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5623f0f1ced0 <col:73> '_Bool' lvalue Var 0x5623f0f15cd0 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5623f0f1cfb0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5623f0f1cf70 <col:90> 'int' lvalue Var 0x5623f0f16068 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5623f0f1cfe0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5623f0f1cf90 <col:102> 'int' lvalue Var 0x5623f0f159d8 'a' 'int'
    |-BinaryOperator 0x5623f0f1d298 <line:800:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5623f0f1d0b0 <col:3> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5623f0f1d280 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5623f0f1d250 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5623f0f1d170 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5623f0f1d128 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5623f0f1d110 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5623f0f1d0d0 <col:20> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5623f0f1d158 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5623f0f1d140 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5623f0f1d0f0 <col:38> '_Bool' lvalue Var 0x5623f0f15b68 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5623f0f1d208 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5623f0f1d1c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5623f0f1d190 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5623f0f1d238 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5623f0f1d220 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5623f0f1d1e8 <col:66> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5623f0f1d580 <line:801:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5623f0f1d2b8 <col:3> '_Bool' lvalue Var 0x5623f0f160e0 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5623f0f1d568 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5623f0f1d538 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5623f0f1d458 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5623f0f1d378 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5623f0f1d330 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5623f0f1d318 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5623f0f1d2d8 <col:20> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5623f0f1d360 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5623f0f1d348 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5623f0f1d2f8 <col:38> '_Bool' lvalue Var 0x5623f0f15b68 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5623f0f1d438 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5623f0f1d3f0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5623f0f1d3d8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5623f0f1d398 <col:56> '_Bool' lvalue Var 0x5623f0f160e0 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5623f0f1d420 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5623f0f1d408 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5623f0f1d3b8 <col:74> '_Bool' lvalue Var 0x5623f0f15cd0 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5623f0f1d4f0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5623f0f1d4a8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5623f0f1d478 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5623f0f1d520 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5623f0f1d508 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5623f0f1d4d0 <col:102> '_Bool' lvalue Var 0x5623f0f160e0 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5623f0f1d788 <line:802:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5623f0f1d5a0 <col:3> '_Bool' lvalue Var 0x5623f0f15b68 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5623f0f1d770 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5623f0f1d740 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5623f0f1d660 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5623f0f1d618 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5623f0f1d600 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5623f0f1d5c0 <col:20> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5623f0f1d648 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5623f0f1d630 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5623f0f1d5e0 <col:38> '_Bool' lvalue Var 0x5623f0f15b68 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5623f0f1d6f8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5623f0f1d6b0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5623f0f1d680 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5623f0f1d728 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5623f0f1d710 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5623f0f1d6d8 <col:66> '_Bool' lvalue Var 0x5623f0f15b68 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5623f0f1da70 <line:803:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5623f0f1d7a8 <col:3> '_Bool' lvalue Var 0x5623f0f15cd0 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5623f0f1da58 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5623f0f1da28 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5623f0f1d948 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5623f0f1d868 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5623f0f1d820 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5623f0f1d808 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5623f0f1d7c8 <col:20> '_Bool' lvalue Var 0x5623f0f15fe8 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5623f0f1d850 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5623f0f1d838 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5623f0f1d7e8 <col:38> '_Bool' lvalue Var 0x5623f0f15b68 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5623f0f1d928 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5623f0f1d8e0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5623f0f1d8c8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5623f0f1d888 <col:56> '_Bool' lvalue Var 0x5623f0f160e0 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5623f0f1d910 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5623f0f1d8f8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5623f0f1d8a8 <col:74> '_Bool' lvalue Var 0x5623f0f15cd0 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5623f0f1d9e0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5623f0f1d998 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5623f0f1d968 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5623f0f1da10 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5623f0f1d9f8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5623f0f1d9c0 <col:102> '_Bool' lvalue Var 0x5623f0f15cd0 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5623f0f1dac8 <line:804:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5623f0f1dab0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5623f0f1da90 <col:3> 'void ()' Function 0x5623f0ebc410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5623f0f1db20 <line:805:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5623f0f1db08 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5623f0f1dae8 <col:3> 'void ()' Function 0x5623f0ebc350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5623f0f1ddf0 <line:806:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x5623f0f1db40 <col:3> '_Bool' lvalue Var 0x5623f0f161d0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5623f0f1ddd8 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5623f0f1ddc0 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5623f0f1dda0 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x5623f0f1dd80 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x5623f0f1dce8 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x5623f0f1dc50 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x5623f0f1dbb8 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x5623f0f1dba0 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x5623f0f1db60 <col:23> 'int' lvalue Var 0x5623f0f15558 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x5623f0f1db80 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x5623f0f1dc30 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5623f0f1dc18 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5623f0f1dbd8 <col:51> 'int' lvalue Var 0x5623f0f15678 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x5623f0f1dbf8 <col:74> 'int' 0
    |         | `-BinaryOperator 0x5623f0f1dcc8 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5623f0f1dcb0 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5623f0f1dc70 <col:79> 'int' lvalue Var 0x5623f0f15798 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x5623f0f1dc90 <col:102> 'int' 1
    |         `-BinaryOperator 0x5623f0f1dd60 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x5623f0f1dd48 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5623f0f1dd08 <col:107> 'int' lvalue Var 0x5623f0f158b8 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x5623f0f1dd28 <col:130> 'int' 0
    |-CallExpr 0x5623f0f1de48 <line:807:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5623f0f1de30 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5623f0f1de10 <col:3> 'void ()' Function 0x5623f0ebc410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5623f0f1dec0 <line:808:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5623f0f1dea8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5623f0f1de68 <col:3> 'void (int)' Function 0x5623f0ebc0d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5623f0f1df00 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5623f0f1dee8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5623f0f1de88 <col:21> '_Bool' lvalue Var 0x5623f0f161d0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5623f0f1df38 <line:809:3, col:10>
      `-IntegerLiteral 0x5623f0f1df18 <col:10> 'int' 0
