TranslationUnitDecl 0x561811293f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x561811294848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x561811294520 '__int128'
|-TypedefDecl 0x5618112948b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x561811294540 'unsigned __int128'
|-TypedefDecl 0x561811294bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x561811294990 'struct __NSConstantString_tag'
|   `-Record 0x561811294910 '__NSConstantString_tag'
|-TypedefDecl 0x561811294c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x561811294c20 'char *'
|   `-BuiltinType 0x561811294020 'char'
|-TypedefDecl 0x5618112d3b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x561811294f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x561811294d40 'struct __va_list_tag'
|     `-Record 0x561811294cc0 '__va_list_tag'
|-FunctionDecl 0x5618112d3ca0 <pthread-wmm/mix023_power.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5618112d3bd0 <col:31> col:34 'int'
|-FunctionDecl 0x5618112d3e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5618112d3f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5618112d40d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5618112d4048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5618112d4308 <col:40, col:99>
|   |-IfStmt 0x5618112d42d8 <col:42, col:88>
|   | |-UnaryOperator 0x5618112d41b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5618112d41a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5618112d4180 <col:47> 'int' lvalue ParmVar 0x5618112d4048 'expression' 'int'
|   | `-CompoundStmt 0x5618112d42c0 <col:59, col:88>
|   |   `-LabelStmt 0x5618112d42a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5618112d4238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5618112d4220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5618112d41d0 <col:68> 'void () __attribute__((noreturn))' Function 0x5618112d3f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5618112d42f0 <col:89>
|   `-ReturnStmt 0x5618112d42f8 <col:91>
|-FunctionDecl 0x5618112d4350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5618112d4410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5618112d4790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5618112d44c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5618112d4548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5618112d45c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5618112d4648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5618112d4850 <line:10:22>
|-FunctionDecl 0x5618112fa8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5618112d48c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5618112d4940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5618112d49c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5618112d4a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5618112fa960 <line:13:22>
|-FunctionDecl 0x5618112fac10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5618112fa9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5618112faa50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5618112faad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5618112facc8 <line:15:22>
|-TypedefDecl 0x5618112fad38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5618112940e0 'unsigned char'
|-TypedefDecl 0x5618112fada8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x561811294100 'unsigned short'
|-TypedefDecl 0x5618112fae18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x561811294120 'unsigned int'
|-TypedefDecl 0x5618112fae88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x561811294140 'unsigned long'
|-TypedefDecl 0x5618112faef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x561811294040 'signed char'
|-TypedefDecl 0x5618112faf68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5618112940e0 'unsigned char'
|-TypedefDecl 0x5618112fafd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x561811294060 'short'
|-TypedefDecl 0x5618112fb048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x561811294100 'unsigned short'
|-TypedefDecl 0x5618112fb0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x561811294080 'int'
|-TypedefDecl 0x5618112fb128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x561811294120 'unsigned int'
|-TypedefDecl 0x5618112fb198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5618112940a0 'long'
|-TypedefDecl 0x5618112fb208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x561811294140 'unsigned long'
|-TypedefDecl 0x5618112fb278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5618112940a0 'long'
|-TypedefDecl 0x5618112fb2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x561811294140 'unsigned long'
|-TypedefDecl 0x5618112fb358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x561811294140 'unsigned long'
|-TypedefDecl 0x5618112fb3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x561811294120 'unsigned int'
|-TypedefDecl 0x5618112fb438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x561811294120 'unsigned int'
|-TypedefDecl 0x5618112fb4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x561811294140 'unsigned long'
|-TypedefDecl 0x5618112fb518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x561811294140 'unsigned long'
|-TypedefDecl 0x5618112fb588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x561811294120 'unsigned int'
|-TypedefDecl 0x5618112fb5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x561811294140 'unsigned long'
|-TypedefDecl 0x5618112fb668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5618112940a0 'long'
|-TypedefDecl 0x5618112fb6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5618112940a0 'long'
|-TypedefDecl 0x5618112fb748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x561811294080 'int'
|-RecordDecl 0x5618112fb7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5618112fb918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5618112fb9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5618112fb970 'struct __fsid_t' sugar
|   `-RecordType 0x5618112fb820 '__fsid_t'
|     `-Record 0x5618112fb7a0 ''
|-TypedefDecl 0x5618112fba58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5618112940a0 'long'
|-TypedefDecl 0x5618112fbac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x561811294140 'unsigned long'
|-TypedefDecl 0x5618112fbb38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x561811294140 'unsigned long'
|-TypedefDecl 0x5618112fbba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x561811294120 'unsigned int'
|-TypedefDecl 0x5618112fbc18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5618112940a0 'long'
|-TypedefDecl 0x5618112fbc88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x561811294120 'unsigned int'
|-TypedefDecl 0x5618112fbcf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5618112940a0 'long'
|-TypedefDecl 0x5618112fbd68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x561811294080 'int'
|-TypedefDecl 0x5618112fbdd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x561811294080 'int'
|-TypedefDecl 0x5618112fbe48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x561811294080 'int'
|-TypedefDecl 0x5618112fbeb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5618112947a0 'void *'
|   `-BuiltinType 0x561811293fe0 'void'
|-TypedefDecl 0x5618112fbf28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5618112940a0 'long'
|-TypedefDecl 0x5618112fbf98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5618112940a0 'long'
|-TypedefDecl 0x5618112fc008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5618112940a0 'long'
|-TypedefDecl 0x5618112fc078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x561811294140 'unsigned long'
|-TypedefDecl 0x5618112fc0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x561811294140 'unsigned long'
|-TypedefDecl 0x5618112fc158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x561811294140 'unsigned long'
|-TypedefDecl 0x5618112fc1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x561811294140 'unsigned long'
|-TypedefDecl 0x5618112fc238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5618112940a0 'long'
|-TypedefDecl 0x5618112fc2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5618112940a0 'long'
|-TypedefDecl 0x5618112fc318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5618112940a0 'long'
|-TypedefDecl 0x5618112fc388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x561811294140 'unsigned long'
|-TypedefDecl 0x5618112fc418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5618112fc3e0 '__off64_t' sugar
|   |-Typedef 0x5618112fb6d8 '__off64_t'
|   `-BuiltinType 0x5618112940a0 'long'
|-TypedefDecl 0x5618112fc510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5618112fc4d0 '__quad_t *'
|   `-TypedefType 0x5618112fc470 '__quad_t' sugar
|     |-Typedef 0x5618112fb278 '__quad_t'
|     `-BuiltinType 0x5618112940a0 'long'
|-TypedefDecl 0x5618112fc580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x561811294c20 'char *'
|   `-BuiltinType 0x561811294020 'char'
|-TypedefDecl 0x5618112fc5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5618112940a0 'long'
|-TypedefDecl 0x5618112fc660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x561811294120 'unsigned int'
|-FunctionDecl 0x5618112fc7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5618112fc6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5618112fcae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5618112fcad8 <line:72:3, col:34>
|     `-CallExpr 0x5618112fca98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5618112fca80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5618112fca10 <col:10> '<builtin fn type>' Function 0x5618112fc880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5618112fcac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5618112fca30 <col:29> 'unsigned int' lvalue ParmVar 0x5618112fc6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5618112fc880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5618112fc920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5618112fc990 <col:10> Implicit
| `-ConstAttr 0x5618112fc9e8 <col:10> Implicit
|-FunctionDecl 0x5618112fcc40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5618112fcb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5618112fcf58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5618112fcf48 <line:77:3, col:34>
|     `-CallExpr 0x5618112fcf08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5618112fcef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5618112fce78 <col:10> '<builtin fn type>' Function 0x5618112fcce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5618112fcf30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5618112fce98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5618112fcb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5618112fcce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5618112fcd88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5618112fcdf8 <col:10> Implicit
| `-ConstAttr 0x5618112fce50 <col:10> Implicit
|-TypedefDecl 0x5618112fcf88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x561811294140 'unsigned long'
|-TypedefDecl 0x5618112fd018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5618112fcfe0 '__time_t' sugar
|   |-Typedef 0x5618112fbc18 '__time_t'
|   `-BuiltinType 0x5618112940a0 'long'
|-RecordDecl 0x5618112fd070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5618112fd128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5618112fd1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5618112fd248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5618112fd210 '__pid_t' sugar
|   |-Typedef 0x5618112fb748 '__pid_t'
|   `-BuiltinType 0x561811294080 'int'
|-RecordDecl 0x5618112fd2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5618112fd360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5618112fd3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5618112fd470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5618112fd4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x561811294140 'unsigned long'
|-RecordDecl 0x5618112fd530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5618112fd7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5618112ff8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5618112fd810 'struct cpu_set_t' sugar
|   `-RecordType 0x5618112fd5b0 'cpu_set_t'
|     `-Record 0x5618112fd530 ''
|-FunctionDecl 0x5618112ffb88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5618112ff958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5618112ffa60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5618112ffc38 <line:107:19>
|-FunctionDecl 0x5618112ffe10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5618112ffca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5618112ffeb8 <col:69>
|-FunctionDecl 0x561811300030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5618112fff20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5618113000d8 <col:64>
|-FunctionDecl 0x561811300398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x561811300140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561811300278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x561811300448 <line:113:22>
|-FunctionDecl 0x5618113006c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5618113004b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5618113005a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x561811300778 <col:88>
|-FunctionDecl 0x561811300a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5618113007e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5618113008c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x561811300950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x561811300b50 <col:62>
|-FunctionDecl 0x561811300cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x561811300bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x561811300d70 <col:63>
|-FunctionDecl 0x561811300e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x561811300f38 <col:47>
|-FunctionDecl 0x561811301040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x561811300fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5618113010e8 <col:69>
|-FunctionDecl 0x5618113011f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x561811301158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x561811301298 <col:69>
|-FunctionDecl 0x561811301558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561811301300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561811301438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x561811301608 <col:88>
|-TypedefDecl 0x561811301698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x561811301660 '__clock_t' sugar
|   |-Typedef 0x5618112fba58 '__clock_t'
|   `-BuiltinType 0x5618112940a0 'long'
|-TypedefDecl 0x561811301728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5618113016f0 '__clockid_t' sugar
|   |-Typedef 0x5618112fbe48 '__clockid_t'
|   `-BuiltinType 0x561811294080 'int'
|-TypedefDecl 0x5618113017b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x561811301780 '__timer_t' sugar
|   |-Typedef 0x5618112fbeb8 '__timer_t'
|   `-PointerType 0x5618112947a0 'void *'
|     `-BuiltinType 0x561811293fe0 'void'
|-RecordDecl 0x561811301810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5618113018e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x561811301950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5618113019b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x561811301a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x561811301a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x561811301af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x561811301b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x561811301bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x561811301c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x561811301c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x561811301cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x561811301d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x561811301e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x561811301e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x561811301f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x561811302100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5618113021a0 <col:45>
|-FunctionDecl 0x561811302380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x561811302270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x561811302428 <col:54>
|-FunctionDecl 0x561811302628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x561811302490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x561811302508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5618113026d8 <line:157:22>
| `-ConstAttr 0x561811302730 <col:63>
|-FunctionDecl 0x561811303560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561811302828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x561811303608 <col:56>
|-FunctionDecl 0x5618113039b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x561811303678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5618113036f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561811303770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x561811303868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x561811303a70 <col:54>
|-RecordDecl 0x561811303ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x561811303b78 parent 0x561811293f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x561811303dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x561811303e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x561811303ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x561811303f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x561811304038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x561811304158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x561811304100 'struct __locale_struct *'
|   `-ElaboratedType 0x561811304090 'struct __locale_struct' sugar
|     `-RecordType 0x561811303b50 'struct __locale_struct'
|       `-Record 0x561811303ac8 '__locale_struct'
|-TypedefDecl 0x561811304208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5618113041d0 '__locale_t' sugar
|   |-Typedef 0x561811304158 '__locale_t'
|   `-PointerType 0x561811304100 'struct __locale_struct *'
|     `-ElaboratedType 0x561811304090 'struct __locale_struct' sugar
|       `-RecordType 0x561811303b50 'struct __locale_struct'
|         `-Record 0x561811303ac8 '__locale_struct'
|-FunctionDecl 0x561811304610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x561811304278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5618113042f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561811304370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x561811304400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x561811304478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5618113046d8 <col:40>
|-FunctionDecl 0x5618113048c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5618113047a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x561811304970 <col:66>
|-FunctionDecl 0x561811304a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5618113049d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x561811304b28 <col:69>
|-FunctionDecl 0x561811304d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x561811304b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561811304c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x561811304e08 <col:52>
|-FunctionDecl 0x561811304fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x561811304e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561811304f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x561811305060 <col:55>
|-FunctionDecl 0x5618113051f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5618113050e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5618113052a0 <col:62>
|-FunctionDecl 0x561811305418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x561811305308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5618113054c0 <col:60>
|-FunctionDecl 0x561811305718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x561811305578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5618113055f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5618113057c8 <col:44>
|-FunctionDecl 0x5618113059d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x561811305830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5618113058b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x561811305a88 <col:49>
|-VarDecl 0x561811305b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x561811305c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x561811305c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x561811305d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x561811305e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x561811305f20 <col:42>
|-VarDecl 0x561811305f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x561811306010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x561811306198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x561811306088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x561811306240 <col:57>
|-FunctionDecl 0x561811306350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5618113062c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5618113063f8 <col:56>
|-FunctionDecl 0x561811307540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561811306478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5618113075e8 <col:59>
|-FunctionDecl 0x5618113076f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x561811307658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x561811307798 <col:48>
| `-ConstAttr 0x5618113077f0 <col:89>
|-FunctionDecl 0x561811307a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5618113078a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x561811307938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x561811307cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561811307b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561811307bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x561811307d68 <col:88>
|-FunctionDecl 0x561811307f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561811307dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561811307e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x561811307fb0 <col:88>
|-FunctionDecl 0x5618113081c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x561811308018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5618113080a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x561811308278 <line:208:22>
|-FunctionDecl 0x5618113085e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5618113082e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561811308360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5618113083f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x561811308480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5618113088e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5618113086e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5618113087c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x561811308998 <col:85>
|-FunctionDecl 0x561811308d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x561811308a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561811308b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x561811308c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x561811308e40 <col:52>
|-FunctionDecl 0x561811308fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x561811308ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x561811309060 <col:61>
|-FunctionDecl 0x561811309560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5618113090c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x561811309148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x561811309278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x561811309368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x561811309620 <col:62>
|-FunctionDecl 0x561811309838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x561811309688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x561811309718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5618113098e8 <line:221:22>
|-FunctionDecl 0x5618113099e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x561811309950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x561811309a90 <col:65>
|-TypedefDecl 0x561811309b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x561811294140 'unsigned long'
|-RecordDecl 0x561811309b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x561811309ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x561811309d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561811309db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x561811309d60 'union pthread_attr_t' sugar
|   `-RecordType 0x561811309be0 'union pthread_attr_t'
|     `-Record 0x561811309b58 'pthread_attr_t'
|-RecordDecl 0x561811309e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x561811309f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x56181130a000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x56181130a0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x56181130a050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x561811309e90 'struct __pthread_internal_list'
|     `-Record 0x561811309e10 '__pthread_internal_list'
|-RecordDecl 0x56181130a120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x56181130a1c8 parent 0x561811293f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x56181130a2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56181130a308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x56181130a370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x56181130a3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x56181130a440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x56181130a4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x56181130e580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x56181130e630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x56181130e720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x56181130e788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56181130e910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x56181130e8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x56181130a1a0 'pthread_mutex_t'
|     `-Record 0x56181130a120 ''
|-RecordDecl 0x56181130e980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x56181130eac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56181130eb28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56181130ebe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x56181130eb80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x56181130ea00 'pthread_mutexattr_t'
|     `-Record 0x56181130e980 ''
|-RecordDecl 0x56181130ec50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x56181130ecf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x56181130edc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56181130ee28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x56181130ee90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x56181130eef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x56181130ef60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x56181130efc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x56181130f030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x56181130f098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x56181130f150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix023_power.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix023_power.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x56181130f240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x56181130f2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x56181130f3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x56181130f380 'union pthread_cond_t' sugar
|   `-RecordType 0x56181130ecd0 'pthread_cond_t'
|     `-Record 0x56181130ec50 ''
|-RecordDecl 0x56181130f450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x56181130f590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56181130f5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56181130f6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x56181130f650 'union pthread_condattr_t' sugar
|   `-RecordType 0x56181130f4d0 'pthread_condattr_t'
|     `-Record 0x56181130f450 ''
|-TypedefDecl 0x56181130f738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x561811294120 'unsigned int'
|-TypedefDecl 0x56181130f7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x561811294080 'int'
|-RecordDecl 0x56181130f800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x56181130f8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x56181130f970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56181130f9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x56181130fa40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x56181130faa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x56181130fb10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x56181130fb78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x56181130fbe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x56181130fc48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x56181130fcb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x56181130fd18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x56181130fd80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x56181130fe30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix023_power.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix023_power.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x56181130fed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56181130ff40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561811310090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x561811310030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x56181130f880 'pthread_rwlock_t'
|     `-Record 0x56181130f800 ''
|-RecordDecl 0x561811310100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x561811310240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5618113102a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561811310360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x561811310300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x561811310180 'pthread_rwlockattr_t'
|     `-Record 0x561811310100 ''
|-TypedefDecl 0x5618113103e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x561811294084 'volatile int' volatile
|   `-BuiltinType 0x561811294080 'int'
|-RecordDecl 0x561811310440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5618113125b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x561811312618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5618113126d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x561811312670 'union pthread_barrier_t' sugar
|   `-RecordType 0x5618113104c0 'pthread_barrier_t'
|     `-Record 0x561811310440 ''
|-RecordDecl 0x561811312740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x561811312840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5618113128a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561811312960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x561811312900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5618113127c0 'pthread_barrierattr_t'
|     `-Record 0x561811312740 ''
|-TypedefDecl 0x561811312a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x561811312a10 'long [8]' 8 
|   `-BuiltinType 0x5618112940a0 'long'
|-EnumDecl 0x561811312ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x561811312b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x561811312be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x561811312c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x561811312d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x561811312d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x561811312da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x561811312df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x561811312e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x561811312e68 <col:26> 'int'
| |   `-DeclRefExpr 0x561811312e48 <col:26> 'int' EnumConstant 0x561811312d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x561811312f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x561811312ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x561811312ed0 <col:29> 'int' EnumConstant 0x561811312d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x561811312f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x561811312f78 <col:30> 'int'
| |   `-DeclRefExpr 0x561811312f58 <col:30> 'int' EnumConstant 0x561811312da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x561811313018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x561811313000 <col:27> 'int'
|     `-DeclRefExpr 0x561811312fe0 <col:27> 'int' EnumConstant 0x561811312e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x561811313068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x561811313138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5618113131c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5618113131a8 <col:30> 'int'
| |   `-DeclRefExpr 0x561811313188 <col:30> 'int' EnumConstant 0x561811313138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x561811313210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x561811313298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x561811313280 <col:29> 'int'
|     `-DeclRefExpr 0x561811313260 <col:29> 'int' EnumConstant 0x561811313210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5618113132e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5618113133b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x561811313408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x561811313458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5618113134a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5618113135c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x561811313610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x561811313660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5618113136e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5618113136d0 <col:31> 'int'
|     `-DeclRefExpr 0x5618113136b0 <col:31> 'int' EnumConstant 0x5618113135c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x561811313738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x561811313808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x561811313858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5618113138a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x561811313978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5618113139c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x561811313a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x561811313ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x561811313b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x561811313b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x561811313dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x561811313e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x561811313e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x561811313fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x561811314008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5618113140d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x561811314128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x561811314178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x561811314248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x561811314298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5618113148f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x561811314390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5618113144a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5618113146e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x561811314760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5618113149b8 <col:47>
| |-NonNullAttr 0x561811314a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x561811314a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x561811314b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x561811314aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x561811314dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x561811314c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x561811314ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x561811314f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x561811314e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x561811315040 <col:60>
|-FunctionDecl 0x561811315190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x561811315230 <col:54>
| `-ConstAttr 0x561811315288 <col:95>
|-FunctionDecl 0x561811315458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5618113152c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561811315338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x561811315508 <line:394:19>
| `-ConstAttr 0x561811315560 <col:60>
|-FunctionDecl 0x561811315f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x561811315e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x561811316010 <col:71>
| `-NonNullAttr 0x561811316068 <col:112, col:126> 1
|-FunctionDecl 0x561811316170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5618113160b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x561811316218 <line:397:22>
| `-NonNullAttr 0x561811316270 <col:63, col:77> 1
|-FunctionDecl 0x561811316498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5618113162b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x561811316338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x561811316548 <line:400:22>
| `-NonNullAttr 0x5618113165a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5618113167a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5618113165e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561811316668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x561811316858 <line:403:22>
| `-NonNullAttr 0x5618113168b0 <col:63, col:77> 1
|-FunctionDecl 0x561811316b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5618113168f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5618113169a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x561811316bb8 <line:406:22>
| `-NonNullAttr 0x561811316c10 <col:63, col:80> 1 2
|-FunctionDecl 0x561811317e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x561811316c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561811316cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561811317ef8 <line:409:22>
| `-NonNullAttr 0x561811317f50 <col:63, col:77> 1
|-FunctionDecl 0x561811318188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561811317f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561811318028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x561811318238 <line:412:22>
| `-NonNullAttr 0x561811318290 <col:63, col:80> 1 2
|-FunctionDecl 0x5618113184c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5618113182d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x561811318368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x561811318578 <col:37>
| `-NonNullAttr 0x5618113185d0 <col:78, col:95> 1 2
|-FunctionDecl 0x5618113187b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561811318618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561811318698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x561811318868 <line:418:22>
| `-NonNullAttr 0x5618113188c0 <col:63, col:80> 1 2
|-FunctionDecl 0x561811318a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561811318908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561811318988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x561811318af8 <line:420:22>
| `-NonNullAttr 0x561811318b50 <col:63, col:77> 1
|-FunctionDecl 0x561811318cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561811318b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561811318c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x561811318da8 <line:423:22>
| `-NonNullAttr 0x561811319e30 <col:63, col:80> 1 2
|-FunctionDecl 0x561811319fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561811319e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561811319ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x56181131a068 <line:426:22>
| `-NonNullAttr 0x56181131a0c0 <col:63, col:77> 1
|-FunctionDecl 0x56181131a268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56181131a108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56181131a188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x56181131a318 <line:429:22>
| `-NonNullAttr 0x56181131a370 <col:63, col:80> 1 2
|-FunctionDecl 0x56181131a4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56181131a3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56181131a438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x56181131a5a8 <line:431:22>
| `-NonNullAttr 0x56181131a600 <col:63, col:77> 1
|-FunctionDecl 0x56181131a828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x56181131a648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56181131a6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x56181131a8d8 <line:434:22>
| |-NonNullAttr 0x56181131a930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x56181131a968 <col:100> "" ""
|-FunctionDecl 0x56181131ab78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x56181131a9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56181131aa38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x56181131ac28 <line:437:22>
| |-NonNullAttr 0x56181131ac80 <col:63, col:77> 1
| `-DeprecatedAttr 0x56181131acb8 <col:97> "" ""
|-FunctionDecl 0x56181131aeb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56181131ad08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56181131ad80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56181131af68 <line:440:22>
| `-NonNullAttr 0x56181131afc0 <col:63, col:80> 1 2
|-FunctionDecl 0x56181131b140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56181131b008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56181131b080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56181131b1f0 <line:443:22>
| `-NonNullAttr 0x56181131b248 <col:63, col:77> 1
|-FunctionDecl 0x56181131b538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56181131b298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56181131b318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x56181131b390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56181131b5f0 <line:447:22>
| `-NonNullAttr 0x56181131b648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x56181131b8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x56181131b6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56181131b720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x56181131b798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56181131b9b0 <col:43>
| `-NonNullAttr 0x56181131ba08 <col:84, col:98> 1
|-FunctionDecl 0x56181131bcc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56181131ba58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56181131bad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x56181131bb68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x56181131bd80 <line:452:22>
| `-NonNullAttr 0x56181131bdd8 <col:63, col:77> 3
|-FunctionDecl 0x56181131c0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56181131be50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56181131bed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x56181131bf60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56181131c1a0 <line:456:22>
| `-NonNullAttr 0x56181131c1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x56181131c3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x56181131c248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56181131c2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x56181131c498 <line:458:22>
|-FunctionDecl 0x56181131c868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x56181131c560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x56181131c700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x56181131c918 <col:52, col:69> 1 2
|-FunctionDecl 0x56181131cac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x56181131c9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x56181131ca20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x56181131cca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x56181131cb88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x56181131cc08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x56181131ce60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x56181131cd68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x56181131cfa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x56181131d040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x56181131d0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x56181131d1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x56181131d240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x56181131d410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix023_power.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x56181131d508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x56181131d5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x56181131d560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x56181131d0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x56181131d040 ''
| `-AlignedAttr 0x56181131d618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x56181131d690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x56181131d7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x56181131d858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x56181131d8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x56181131d928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x56181131db30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56181131da20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56181131dc78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56181131dbe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56181131de70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56181131dd30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x56181131df18 <line:487:22>
|-RecordDecl 0x56181131df70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x56181131e288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x56181131e0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x56181131e168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x56181131e338 <col:86>
| `-ReturnsTwiceAttr 0x56181131e390 <col:12> Implicit
|-FunctionDecl 0x56181131e6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56181131e460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x56181131e570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x56181131e768 <line:493:22>
| `-NonNullAttr 0x56181131e7c0 <col:63, col:77> 1
|-FunctionDecl 0x56181131e938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56181131e808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56181131e9e0 <line:495:22>
| `-NonNullAttr 0x56181131ea38 <col:63, col:77> 1
|-FunctionDecl 0x56181131eb40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56181131ea88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56181131ebe8 <line:497:22>
| `-NonNullAttr 0x56181131ec40 <col:52, col:66> 1
|-FunctionDecl 0x56181131ed40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56181131ec88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56181131ede8 <line:499:22>
| `-NonNullAttr 0x56181131ee40 <col:52, col:66> 1
|-FunctionDecl 0x56181131f088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56181131ee98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56181131ef28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56181131f138 <col:36>
| `-NonNullAttr 0x56181131f190 <col:66, col:83> 1 2
|-FunctionDecl 0x56181131f290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56181131f1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56181131f338 <line:504:22>
| `-NonNullAttr 0x56181131f390 <col:52, col:66> 1
|-FunctionDecl 0x56181131f628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56181131f440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56181131f4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56181131f6d8 <line:508:22>
| `-NonNullAttr 0x56181131f730 <col:63, col:80> 1 2
|-FunctionDecl 0x56181131f9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x56181131f778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56181131f7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x56181131f878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x56181131fab0 <line:512:22>
| `-NonNullAttr 0x56181131fb08 <col:63, col:80> 1 3
|-FunctionDecl 0x56181131fc10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56181131fb58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56181131fcb8 <line:514:22>
| `-NonNullAttr 0x56181131fd10 <col:63, col:77> 1
|-FunctionDecl 0x56181131ff38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56181131fdc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56181131ffe0 <line:516:22>
| `-NonNullAttr 0x561811320038 <col:63, col:77> 1
|-FunctionDecl 0x561811320140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561811320088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5618113201e8 <line:518:22>
| `-NonNullAttr 0x561811320240 <col:63, col:77> 1
|-FunctionDecl 0x561811320468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561811320288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561811320308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x561811320518 <line:522:22>
| `-NonNullAttr 0x561811320570 <col:63, col:80> 1 2
|-FunctionDecl 0x561811320778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5618113205b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561811320638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x561811320828 <line:525:22>
| `-NonNullAttr 0x561811320880 <col:63, col:77> 1
|-FunctionDecl 0x561811320a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5618113208c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561811320948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x561811320ad8 <line:528:22>
| `-NonNullAttr 0x561811320b30 <col:63, col:80> 1 2
|-FunctionDecl 0x561811320cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561811320b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561811320bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x561811320d68 <line:530:22>
| `-NonNullAttr 0x561811320dc0 <col:63, col:77> 1
|-FunctionDecl 0x561811321f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561811320e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561811321eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x561811322040 <line:534:22>
| `-NonNullAttr 0x561811322098 <col:63, col:80> 1 2
|-FunctionDecl 0x561811322228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5618113220e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561811322168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5618113222d8 <line:537:22>
| `-NonNullAttr 0x561811322330 <col:63, col:77> 1
|-FunctionDecl 0x5618113224d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561811322378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5618113223f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x561811322588 <line:541:22>
| `-NonNullAttr 0x5618113225e0 <col:63, col:80> 1 2
|-FunctionDecl 0x561811322768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561811322628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5618113226a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x561811322818 <line:544:22>
| `-NonNullAttr 0x561811322870 <col:63, col:77> 1
|-FunctionDecl 0x561811322a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5618113228b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x561811322938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x561811322b08 <line:547:22>
| `-NonNullAttr 0x561811322b60 <col:63, col:80> 1 2
|-FunctionDecl 0x561811322ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561811322ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561811322c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x561811322d98 <line:550:22>
| `-NonNullAttr 0x561811322df0 <col:63, col:77> 1
|-FunctionDecl 0x561811324168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x561811323f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561811324020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x561811324218 <col:29>
| `-NonNullAttr 0x561811324270 <col:70, col:84> 1
|-FunctionDecl 0x5618113243e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5618113242b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561811324490 <line:555:22>
| `-NonNullAttr 0x5618113244e8 <col:63, col:77> 1
|-FunctionDecl 0x5618113245f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561811324538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561811324698 <line:557:22>
| `-NonNullAttr 0x5618113246f0 <col:52, col:66> 1
|-FunctionDecl 0x5618113247f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561811324738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561811324898 <line:559:19>
| `-NonNullAttr 0x5618113248f0 <col:49, col:63> 1
|-FunctionDecl 0x561811324b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561811324938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5618113249c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561811324bd8 <col:39>
| `-NonNullAttr 0x561811324c30 <col:69, col:86> 1 2
|-FunctionDecl 0x561811324d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561811324c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561811324dd8 <line:564:22>
| `-NonNullAttr 0x561811324e30 <col:52, col:66> 1
|-FunctionDecl 0x561811324f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561811324ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561811325040 <line:566:22>
| `-NonNullAttr 0x561811325098 <col:52, col:66> 1
|-FunctionDecl 0x561811325258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5618113250e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561811325178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561811325308 <col:39>
| `-NonNullAttr 0x561811325360 <col:69, col:86> 1 2
|-FunctionDecl 0x561811325460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5618113253a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561811325508 <line:571:22>
| `-NonNullAttr 0x561811325560 <col:52, col:66> 1
|-FunctionDecl 0x561811325748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x561811325610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5618113257f0 <line:573:22>
| `-NonNullAttr 0x561811325848 <col:63, col:77> 1
|-FunctionDecl 0x561811325950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x561811325898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5618113259f8 <line:575:22>
| `-NonNullAttr 0x561811325a50 <col:63, col:77> 1
|-FunctionDecl 0x561811325c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561811325a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x561811325b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x561811325d28 <line:579:22>
| `-NonNullAttr 0x561811325d80 <col:63, col:80> 1 2
|-FunctionDecl 0x561811325fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x561811325dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x561811325e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x561811326058 <line:582:22>
| `-NonNullAttr 0x5618113260b0 <col:63, col:77> 1
|-FunctionDecl 0x561811326258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5618113260f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x561811326178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x561811326308 <line:586:22>
| `-NonNullAttr 0x561811326360 <col:63, col:80> 1 2
|-FunctionDecl 0x5618113264e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5618113263a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x561811326428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x561811326598 <col:36>
| `-NonNullAttr 0x5618113265f0 <col:77, col:91> 1
|-FunctionDecl 0x561811326928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5618113266d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5618113267e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5618113269d8 <line:591:22>
| `-NonNullAttr 0x561811326a30 <col:63, col:77> 1
|-FunctionDecl 0x561811326ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561811326a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561811326c50 <line:593:22>
| `-NonNullAttr 0x561811326ca8 <col:63, col:77> 1
|-FunctionDecl 0x561811326db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561811326cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561811326e58 <line:595:22>
| `-NonNullAttr 0x561811326eb0 <col:52, col:66> 1
|-FunctionDecl 0x561811326fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561811326f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561811327070 <line:597:22>
| `-NonNullAttr 0x5618113270c8 <col:52, col:66> 1
|-FunctionDecl 0x5618113272f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x561811327118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561811327190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5618113273a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5618113276d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561811327428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5618113274a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561811327530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x561811327790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5618113279a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x561811327870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x561811327a50 <line:606:22>
| `-NonNullAttr 0x561811327aa8 <col:63, col:77> 1
|-FunctionDecl 0x561811327bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x561811327af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x561811327c58 <line:608:22>
| `-NonNullAttr 0x561811327cb0 <col:63, col:77> 1
|-FunctionDecl 0x561811327f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561811327cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x561811327d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x561811327fc0 <line:612:22>
| `-NonNullAttr 0x561811328018 <col:63, col:80> 1 2
|-FunctionDecl 0x561811328228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x561811328068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5618113280e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5618113282d8 <col:37>
| `-NonNullAttr 0x561811328330 <col:78, col:92> 1
|-FunctionDecl 0x561811328548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x561811328378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x561811328420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5618113285f8 <line:618:22>
| `-NonNullAttr 0x561811328650 <col:63, col:80> 1 2
|-FunctionDecl 0x561811328818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x561811328698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x561811328710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5618113288c8 <line:621:22>
| `-NonNullAttr 0x561811328920 <col:63, col:77> 1
|-FunctionDecl 0x561811328bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x561811328a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x561811328a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x561811328c78 <line:623:22>
| `-NonNullAttr 0x561811328cd0 <col:63, col:77> 1
|-FunctionDecl 0x561811328e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561811328d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561811328f20 <line:625:22>
| `-NonNullAttr 0x561811328f78 <col:63, col:77> 1
|-FunctionDecl 0x561811329080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561811328fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561811329128 <line:627:22>
| `-NonNullAttr 0x561811329180 <col:52, col:66> 1
|-FunctionDecl 0x561811329280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5618113291c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561811329328 <line:629:22>
| `-NonNullAttr 0x561811329380 <col:52, col:66> 1
|-FunctionDecl 0x561811329480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5618113293c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561811329528 <line:631:22>
| `-NonNullAttr 0x561811329580 <col:52, col:66> 1
|-FunctionDecl 0x561811329958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x561811329660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x561811329770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5618113297f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x561811329a10 <line:635:22>
| `-NonNullAttr 0x561811329a68 <col:63, col:77> 1
|-FunctionDecl 0x561811329be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x561811329ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x561811329c90 <line:637:22>
| `-NonNullAttr 0x561811329ce8 <col:63, col:77> 1
|-FunctionDecl 0x561811329df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x561811329d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x561811329e98 <line:639:22>
| `-NonNullAttr 0x561811329ef0 <col:52, col:66> 1
|-FunctionDecl 0x56181132a0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x561811329fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56181132a190 <line:641:22>
| `-NonNullAttr 0x56181132a1e8 <col:63, col:77> 1
|-FunctionDecl 0x56181132a2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56181132a238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56181132a398 <line:643:22>
| `-NonNullAttr 0x56181132a3f0 <col:63, col:77> 1
|-FunctionDecl 0x56181132a618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56181132a438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56181132a4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x56181132a6c8 <line:647:22>
| `-NonNullAttr 0x56181132a720 <col:63, col:80> 1 2
|-FunctionDecl 0x56181132a928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x56181132a768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x56181132a7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x56181132a9d8 <line:650:22>
| `-NonNullAttr 0x56181132aa30 <col:63, col:77> 1
|-FunctionDecl 0x56181132ad78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x56181132ab10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x56181132ac30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x56181132ae28 <line:653:22>
| `-NonNullAttr 0x56181132ae80 <col:63, col:77> 1
|-FunctionDecl 0x56181132afe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x56181132aec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56181132b090 <col:69>
|-FunctionDecl 0x56181132b208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x56181132b0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56181132b2b0 <col:72>
|-FunctionDecl 0x56181132b4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x56181132b318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x56181132b3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x56181132b598 <col:44>
|-FunctionDecl 0x56181132b7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x56181132b600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56181132b678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x56181132b868 <line:660:22>
| `-NonNullAttr 0x56181132b8c0 <col:63, col:77> 2
|-FunctionDecl 0x56181132bd08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x56181132b9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x56181132bab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x56181132bbc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x56181132bdc0 <col:47>
|-FunctionDecl 0x56181132cf60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x56181132be30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56181132d0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x56181132d020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56181132d210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x56181132d178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56181132d368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x56181132d2d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56181132d430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x56181132d4f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x56181132d5b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x56181132d668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x56181132d6e8 prev 0x56181132d668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x56181132d750 <col:24> 'int' 0
|-VarDecl 0x56181132d788 <line:674:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x56181132d808 prev 0x56181132d788 <line:675:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x56181132d870 <col:27> 'int' 0
|-VarDecl 0x56181132d8a8 <line:676:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x56181132d928 prev 0x56181132d8a8 <line:677:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x56181132d990 <col:27> 'int' 0
|-VarDecl 0x56181132d9c8 <line:678:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x56181132da48 prev 0x56181132d9c8 <line:679:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x56181132dab0 <col:27> 'int' 0
|-VarDecl 0x56181132dae8 <line:680:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x56181132db68 prev 0x56181132dae8 <line:681:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x56181132dbd0 <col:27> 'int' 0
|-VarDecl 0x56181132dc08 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x56181132dc88 prev 0x56181132dc08 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x56181132dcf0 <col:9> 'int' 0
|-VarDecl 0x56181132dd20 <line:684:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x56181132dda0 <line:685:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x56181132de18 <line:686:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x56181132de90 <line:687:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x56181132df70 <line:688:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x56181132dfe8 <line:689:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x56181132e060 <line:690:1, col:7> col:7 used a$r_buff0_thd4 '_Bool'
|-VarDecl 0x56181132e0d8 <line:691:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x56181132e150 <line:692:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x56181132e1c8 <line:693:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x56181132e240 <line:694:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x56181132e2b8 <line:695:1, col:7> col:7 used a$r_buff1_thd4 '_Bool'
|-VarDecl 0x56181132e330 <line:696:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x56181132e3b0 <line:697:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x56181132e430 <line:698:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x56181132e4a8 <line:699:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x56181132e528 <line:700:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x56181132e5a0 <line:701:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x56181132e618 <line:702:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x56181132e690 <line:703:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x56181132e710 <line:704:1, col:5> col:5 used x 'int'
|-VarDecl 0x56181132e790 prev 0x56181132e710 <line:705:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x56181132e7f8 <col:9> 'int' 0
|-VarDecl 0x56181132e830 <line:706:1, col:5> col:5 used y 'int'
|-VarDecl 0x56181132e8b0 prev 0x56181132e830 <line:707:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x56181132e918 <col:9> 'int' 0
|-VarDecl 0x56181132e950 <line:708:1, col:5> col:5 used z 'int'
|-VarDecl 0x56181132e9d0 prev 0x56181132e950 <line:709:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x56181132ea38 <col:9> 'int' 0
|-VarDecl 0x56181132ea68 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x56181132eae0 <line:711:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x56181132ebf8 prev 0x56181132cf60 <line:712:1, line:741:1> line:712:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x56181132eb60 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561811330498 <line:713:1, line:741:1>
|   |-CallExpr 0x56181132ed08 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56181132ecf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56181132eca0 <col:3> 'void ()' Function 0x5618112d4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56181132ed80 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56181132ed28 <col:3> 'int' lvalue Var 0x56181132e528 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x56181132ed68 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56181132ed48 <col:15> 'int' lvalue Var 0x56181132e430 'a$w_buff0' 'int'
|   |-BinaryOperator 0x56181132ede0 <line:716:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56181132eda0 <col:3> 'int' lvalue Var 0x56181132e430 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x56181132edc0 <col:15> 'int' 1
|   |-BinaryOperator 0x56181132ee58 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56181132ee00 <col:3> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56181132ee40 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56181132ee20 <col:20> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56181132eef0 <line:718:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56181132ee78 <col:3> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x56181132eec8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56181132ee98 <col:27> 'int' 1
|   |-CallExpr 0x56181132f088 <line:719:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x56181132f070 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x56181132ef10 <col:3> 'void (int)' Function 0x5618112d40d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x56181132f020 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x56181132f000 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x56181132efe0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x56181132ef98 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x56181132ef80 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x56181132ef30 <col:23> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x56181132efc8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x56181132efb0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x56181132ef50 <col:41> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56181132f108 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56181132f0b0 <col:3> '_Bool' lvalue Var 0x56181132e0d8 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x56181132f0f0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56181132f0d0 <col:20> '_Bool' lvalue Var 0x56181132de18 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x56181132f180 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56181132f128 <col:3> '_Bool' lvalue Var 0x56181132e150 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56181132f168 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56181132f148 <col:20> '_Bool' lvalue Var 0x56181132de90 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56181132f1f8 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56181132f1a0 <col:3> '_Bool' lvalue Var 0x56181132e1c8 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56181132f1e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56181132f1c0 <col:20> '_Bool' lvalue Var 0x56181132df70 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56181132f270 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56181132f218 <col:3> '_Bool' lvalue Var 0x56181132e240 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56181132f258 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56181132f238 <col:20> '_Bool' lvalue Var 0x56181132dfe8 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56181132f2e8 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56181132f290 <col:3> '_Bool' lvalue Var 0x56181132e2b8 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56181132f2d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56181132f2b0 <col:20> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x56181132f380 <line:725:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56181132f308 <col:3> '_Bool' lvalue Var 0x56181132de90 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x56181132f358 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56181132f328 <col:27> 'int' 1
|   |-CallExpr 0x56181132f3d8 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56181132f3c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56181132f3a0 <col:3> 'void ()' Function 0x5618112d4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56181132f430 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56181132f418 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56181132f3f8 <col:3> 'void ()' Function 0x5618112d4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56181132f490 <line:728:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56181132f450 <col:3> 'int' lvalue Var 0x56181132e790 'x' 'int'
|   | `-IntegerLiteral 0x56181132f470 <col:7> 'int' 1
|   |-CallExpr 0x56181132f4e8 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56181132f4d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56181132f4b0 <col:3> 'void ()' Function 0x5618112d4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56181132f540 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56181132f528 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56181132f508 <col:3> 'void ()' Function 0x5618112d4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56181132f828 <line:731:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56181132f560 <col:3> 'int' lvalue Var 0x56181132dc88 'a' 'int'
|   | `-ConditionalOperator 0x56181132f7f8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56181132f620 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56181132f5d8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56181132f5c0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56181132f580 <col:7> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56181132f608 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56181132f5f0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56181132f5a0 <col:25> '_Bool' lvalue Var 0x56181132de90 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x56181132f7e0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56181132f640 <col:42> 'int' lvalue Var 0x56181132e430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x56181132f7c0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56181132f790 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56181132f700 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56181132f6b8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56181132f6a0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56181132f660 <col:55> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56181132f6e8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56181132f6d0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56181132f680 <col:73> '_Bool' lvalue Var 0x56181132e150 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x56181132f760 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56181132f720 <col:90> 'int' lvalue Var 0x56181132e528 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56181132f778 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56181132f740 <col:102> 'int' lvalue Var 0x56181132dc88 'a' 'int'
|   |-BinaryOperator 0x56181132fa30 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56181132f848 <col:3> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56181132fa18 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56181132f9e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56181132f908 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56181132f8c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56181132f8a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56181132f868 <col:20> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56181132f8f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56181132f8d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56181132f888 <col:38> '_Bool' lvalue Var 0x56181132de90 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56181132f9a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56181132f958 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56181132f928 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56181132f9d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56181132f9b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56181132f980 <col:66> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56181132fd18 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56181132fa50 <col:3> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56181132fd00 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56181132fcd0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56181132fbf0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56181132fb10 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56181132fac8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56181132fab0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56181132fa70 <col:20> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56181132faf8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56181132fae0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56181132fa90 <col:38> '_Bool' lvalue Var 0x56181132de90 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x56181132fbd0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56181132fb88 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56181132fb70 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56181132fb30 <col:56> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56181132fbb8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56181132fba0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56181132fb50 <col:74> '_Bool' lvalue Var 0x56181132e150 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56181132fc88 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56181132fc40 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56181132fc10 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56181132fcb8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56181132fca0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56181132fc68 <col:102> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56181132ff20 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56181132fd38 <col:3> '_Bool' lvalue Var 0x56181132de90 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56181132ff08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56181132fed8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56181132fdf8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56181132fdb0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56181132fd98 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56181132fd58 <col:20> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56181132fde0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56181132fdc8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56181132fd78 <col:38> '_Bool' lvalue Var 0x56181132de90 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56181132fe90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56181132fe48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56181132fe18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56181132fec0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56181132fea8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56181132fe70 <col:66> '_Bool' lvalue Var 0x56181132de90 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x561811330218 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56181132ff40 <col:3> '_Bool' lvalue Var 0x56181132e150 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561811330200 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5618113301d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5618113300f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561811330010 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56181132ffc8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56181132ffb0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56181132ff60 <col:20> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56181132fff8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56181132ffe0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56181132ff90 <col:38> '_Bool' lvalue Var 0x56181132de90 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5618113300d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561811330088 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561811330070 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561811330030 <col:56> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5618113300b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5618113300a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561811330050 <col:74> '_Bool' lvalue Var 0x56181132e150 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561811330188 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561811330140 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561811330110 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5618113301b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5618113301a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561811330168 <col:102> '_Bool' lvalue Var 0x56181132e150 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x561811330270 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561811330258 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561811330238 <col:3> 'void ()' Function 0x5618112d4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5618113302c8 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5618113302b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561811330290 <col:3> 'void ()' Function 0x5618112d4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561811330380 <line:738:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5618113302e8 <col:3> 'int' lvalue Var 0x56181132d6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561811330360 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561811330348 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561811330308 <col:22> 'int' lvalue Var 0x56181132d6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561811330328 <col:41> 'int' 1
|   |-CallExpr 0x5618113303d8 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5618113303c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5618113303a0 <col:3> 'void ()' Function 0x5618112d4410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561811330488 <line:740:3, col:36>
|     `-CallExpr 0x561811330468 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561811330450 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5618113303f8 <col:10> 'void *(void)' Function 0x5618112d3e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561811330630 prev 0x56181132d0b8 <line:742:1, line:764:1> line:742:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x561811330598 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5618113319a0 <line:743:1, line:764:1>
|   |-CallExpr 0x561811330710 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5618113306f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5618113306d8 <col:3> 'void ()' Function 0x5618112d4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561811330770 <line:745:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561811330730 <col:3> 'int' lvalue Var 0x56181132e790 'x' 'int'
|   | `-IntegerLiteral 0x561811330750 <col:7> 'int' 2
|   |-CallExpr 0x5618113307c8 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5618113307b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561811330790 <col:3> 'void ()' Function 0x5618112d4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561811330820 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561811330808 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5618113307e8 <col:3> 'void ()' Function 0x5618112d4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561811330898 <line:748:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561811330840 <col:3> 'int' lvalue Var 0x56181132d808 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x561811330880 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561811330860 <col:25> 'int' lvalue Var 0x56181132e790 'x' 'int'
|   |-CallExpr 0x5618113308f0 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5618113308d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5618113308b8 <col:3> 'void ()' Function 0x5618112d4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561811330948 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561811330930 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561811330910 <col:3> 'void ()' Function 0x5618112d4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5618113309c0 <line:751:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561811330968 <col:3> 'int' lvalue Var 0x56181132d928 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x5618113309a8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561811330988 <col:25> 'int' lvalue Var 0x56181132e8b0 'y' 'int'
|   |-CallExpr 0x561811330a18 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561811330a00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5618113309e0 <col:3> 'void ()' Function 0x5618112d4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561811330a70 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561811330a58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561811330a38 <col:3> 'void ()' Function 0x5618112d4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561811330d58 <line:754:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561811330a90 <col:3> 'int' lvalue Var 0x56181132dc88 'a' 'int'
|   | `-ConditionalOperator 0x561811330d28 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561811330b50 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561811330b08 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561811330af0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561811330ab0 <col:7> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561811330b38 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561811330b20 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561811330ad0 <col:25> '_Bool' lvalue Var 0x56181132df70 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x561811330d10 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561811330b70 <col:42> 'int' lvalue Var 0x56181132e430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x561811330cf0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561811330cc0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561811330c30 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561811330be8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561811330bd0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561811330b90 <col:55> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561811330c18 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561811330c00 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561811330bb0 <col:73> '_Bool' lvalue Var 0x56181132e1c8 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x561811330c90 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561811330c50 <col:90> 'int' lvalue Var 0x56181132e528 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561811330ca8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561811330c70 <col:102> 'int' lvalue Var 0x56181132dc88 'a' 'int'
|   |-BinaryOperator 0x561811330f60 <line:755:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561811330d78 <col:3> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561811330f48 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561811330f18 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561811330e38 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561811330df0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561811330dd8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561811330d98 <col:20> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561811330e20 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561811330e08 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561811330db8 <col:38> '_Bool' lvalue Var 0x56181132df70 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561811330ed0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561811330e88 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561811330e58 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561811330f00 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561811330ee8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561811330eb0 <col:66> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561811331268 <line:756:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561811330fa0 <col:3> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561811331250 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561811331220 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561811331140 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561811331060 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561811331018 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561811331000 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561811330fc0 <col:20> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561811331048 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561811331030 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561811330fe0 <col:38> '_Bool' lvalue Var 0x56181132df70 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x561811331120 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5618113310d8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5618113310c0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561811331080 <col:56> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561811331108 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5618113310f0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5618113310a0 <col:74> '_Bool' lvalue Var 0x56181132e1c8 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5618113311d8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561811331190 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561811331160 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561811331208 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5618113311f0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5618113311b8 <col:102> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561811331470 <line:757:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561811331288 <col:3> '_Bool' lvalue Var 0x56181132df70 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561811331458 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561811331428 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561811331348 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561811331300 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5618113312e8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5618113312a8 <col:20> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561811331330 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561811331318 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5618113312c8 <col:38> '_Bool' lvalue Var 0x56181132df70 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5618113313e0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561811331398 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561811331368 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561811331410 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5618113313f8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5618113313c0 <col:66> '_Bool' lvalue Var 0x56181132df70 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x561811331758 <line:758:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561811331490 <col:3> '_Bool' lvalue Var 0x56181132e1c8 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561811331740 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561811331710 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561811331630 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561811331550 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561811331508 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5618113314f0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5618113314b0 <col:20> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561811331538 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561811331520 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5618113314d0 <col:38> '_Bool' lvalue Var 0x56181132df70 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x561811331610 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5618113315c8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5618113315b0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561811331570 <col:56> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5618113315f8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5618113315e0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561811331590 <col:74> '_Bool' lvalue Var 0x56181132e1c8 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5618113316c8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561811331680 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561811331650 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5618113316f8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5618113316e0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5618113316a8 <col:102> '_Bool' lvalue Var 0x56181132e1c8 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5618113317b0 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561811331798 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561811331778 <col:3> 'void ()' Function 0x5618112d4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561811331808 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5618113317f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5618113317d0 <col:3> 'void ()' Function 0x5618112d4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5618113318c0 <line:761:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561811331828 <col:3> 'int' lvalue Var 0x56181132d6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5618113318a0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561811331888 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561811331848 <col:22> 'int' lvalue Var 0x56181132d6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561811331868 <col:41> 'int' 1
|   |-CallExpr 0x561811331918 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561811331900 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5618113318e0 <col:3> 'void ()' Function 0x5618112d4410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561811331990 <line:763:3, col:36>
|     `-CallExpr 0x561811331970 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561811331958 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561811331938 <col:10> 'void *(void)' Function 0x5618112d3e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561811331b00 prev 0x56181132d210 <line:765:1, line:784:1> line:765:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x561811331a68 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561811332d30 <line:766:1, line:784:1>
|   |-CallExpr 0x561811331be0 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561811331bc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561811331ba8 <col:3> 'void ()' Function 0x5618112d4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561811331c40 <line:768:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561811331c00 <col:3> 'int' lvalue Var 0x56181132e8b0 'y' 'int'
|   | `-IntegerLiteral 0x561811331c20 <col:7> 'int' 1
|   |-CallExpr 0x561811331c98 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561811331c80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561811331c60 <col:3> 'void ()' Function 0x5618112d4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561811331cf0 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561811331cd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561811331cb8 <col:3> 'void ()' Function 0x5618112d4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561811331d50 <line:771:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561811331d10 <col:3> 'int' lvalue Var 0x56181132e9d0 'z' 'int'
|   | `-IntegerLiteral 0x561811331d30 <col:7> 'int' 1
|   |-CallExpr 0x561811331da8 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561811331d90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561811331d70 <col:3> 'void ()' Function 0x5618112d4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561811331e00 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561811331de8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561811331dc8 <col:3> 'void ()' Function 0x5618112d4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561811332108 <line:774:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561811331e20 <col:3> 'int' lvalue Var 0x56181132dc88 'a' 'int'
|   | `-ConditionalOperator 0x5618113320d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561811331ee0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561811331e98 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561811331e80 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561811331e40 <col:7> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561811331ec8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561811331eb0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561811331e60 <col:25> '_Bool' lvalue Var 0x56181132dfe8 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5618113320c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561811331f00 <col:42> 'int' lvalue Var 0x56181132e430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x5618113320a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561811332070 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561811331fe0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561811331f78 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561811331f60 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561811331f20 <col:55> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561811331fc8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561811331fb0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561811331f40 <col:73> '_Bool' lvalue Var 0x56181132e240 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x561811332040 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561811332000 <col:90> 'int' lvalue Var 0x56181132e528 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561811332058 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561811332020 <col:102> 'int' lvalue Var 0x56181132dc88 'a' 'int'
|   |-BinaryOperator 0x561811332310 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561811332128 <col:3> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5618113322f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5618113322c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5618113321e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5618113321a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561811332188 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561811332148 <col:20> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5618113321d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5618113321b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561811332168 <col:38> '_Bool' lvalue Var 0x56181132dfe8 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561811332280 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561811332238 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561811332208 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5618113322b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561811332298 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561811332260 <col:66> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5618113325f8 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561811332330 <col:3> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5618113325e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5618113325b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5618113324d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5618113323f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5618113323a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561811332390 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561811332350 <col:20> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5618113323d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5618113323c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561811332370 <col:38> '_Bool' lvalue Var 0x56181132dfe8 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5618113324b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561811332468 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561811332450 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561811332410 <col:56> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561811332498 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561811332480 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561811332430 <col:74> '_Bool' lvalue Var 0x56181132e240 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561811332568 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561811332520 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5618113324f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561811332598 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561811332580 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561811332548 <col:102> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561811332800 <line:777:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561811332618 <col:3> '_Bool' lvalue Var 0x56181132dfe8 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5618113327e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5618113327b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5618113326d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561811332690 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561811332678 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561811332638 <col:20> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5618113326c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5618113326a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561811332658 <col:38> '_Bool' lvalue Var 0x56181132dfe8 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561811332770 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561811332728 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5618113326f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5618113327a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561811332788 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561811332750 <col:66> '_Bool' lvalue Var 0x56181132dfe8 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x561811332ae8 <line:778:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561811332820 <col:3> '_Bool' lvalue Var 0x56181132e240 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561811332ad0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561811332aa0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5618113329c0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5618113328e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561811332898 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561811332880 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561811332840 <col:20> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5618113328c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5618113328b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561811332860 <col:38> '_Bool' lvalue Var 0x56181132dfe8 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5618113329a0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561811332958 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561811332940 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561811332900 <col:56> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561811332988 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561811332970 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561811332920 <col:74> '_Bool' lvalue Var 0x56181132e240 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561811332a58 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561811332a10 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5618113329e0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561811332a88 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561811332a70 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561811332a38 <col:102> '_Bool' lvalue Var 0x56181132e240 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x561811332b40 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561811332b28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561811332b08 <col:3> 'void ()' Function 0x5618112d4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561811332b98 <line:780:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561811332b80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561811332b60 <col:3> 'void ()' Function 0x5618112d4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561811332c50 <line:781:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561811332bb8 <col:3> 'int' lvalue Var 0x56181132d6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561811332c30 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561811332c18 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561811332bd8 <col:22> 'int' lvalue Var 0x56181132d6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561811332bf8 <col:41> 'int' 1
|   |-CallExpr 0x561811332ca8 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561811332c90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561811332c70 <col:3> 'void ()' Function 0x5618112d4410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561811332d20 <line:783:3, col:36>
|     `-CallExpr 0x561811332d00 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561811332ce8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561811332cc8 <col:10> 'void *(void)' Function 0x5618112d3e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561811332e78 prev 0x56181132d368 <line:785:1, line:820:1> line:785:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x561811332de0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561811336b80 <line:786:1, line:820:1>
|   |-CallExpr 0x561811332f58 <line:787:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561811332f40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561811332f20 <col:3> 'void ()' Function 0x5618112d4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561811332fe0 <line:788:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561811332f78 <col:3> 'int' lvalue Var 0x56181132e9d0 'z' 'int'
|   | `-IntegerLiteral 0x561811332fc0 <col:7> 'int' 2
|   |-CallExpr 0x561811333038 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561811333020 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561811333000 <col:3> 'void ()' Function 0x5618112d4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561811333090 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561811333078 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561811333058 <col:3> 'void ()' Function 0x5618112d4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561811333108 <line:791:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5618113330b0 <col:3> 'int' lvalue Var 0x56181132da48 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x5618113330f0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5618113330d0 <col:25> 'int' lvalue Var 0x56181132e9d0 'z' 'int'
|   |-CallExpr 0x561811333160 <line:792:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561811333148 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561811333128 <col:3> 'void ()' Function 0x5618112d4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5618113331b8 <line:793:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5618113331a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561811333180 <col:3> 'void ()' Function 0x5618112d4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561811333268 <line:794:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5618113331d8 <col:3> '_Bool' lvalue Var 0x56181132ea68 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x561811333250 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x561811333230 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x561811333218 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5618113331f8 <col:19> 'void *(void)' Function 0x5618112d3e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x561811333318 <line:795:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x561811333288 <col:3> '_Bool' lvalue Var 0x56181132eae0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x561811333300 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5618113332e0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5618113332c8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5618113332a8 <col:19> 'void *(void)' Function 0x5618112d3e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x561811333390 <line:796:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x561811333338 <col:3> '_Bool' lvalue Var 0x56181132dd20 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x561811333378 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561811333358 <col:21> '_Bool' lvalue Var 0x56181132eae0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x561811333408 <line:797:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5618113333b0 <col:3> 'int' lvalue Var 0x56181132dda0 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5618113333f0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5618113333d0 <col:15> 'int' lvalue Var 0x56181132dc88 'a' 'int'
|   |-BinaryOperator 0x561811333840 <line:798:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x561811333428 <col:3> 'int' lvalue Var 0x56181132dc88 'a' 'int'
|   | `-ConditionalOperator 0x561811333810 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x561811333638 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x561811333558 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x561811333480 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x561811333468 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x561811333448 <col:8> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x561811333538 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5618113334d0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5618113334b8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x561811333498 <col:27> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x561811333520 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x561811333508 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5618113334e8 <col:46> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x561811333618 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5618113335b0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x561811333598 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x561811333578 <col:65> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x561811333600 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5618113335e8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5618113335c8 <col:84> '_Bool' lvalue Var 0x56181132e2b8 'a$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x5618113337f8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561811333658 <col:101> 'int' lvalue Var 0x56181132dc88 'a' 'int'
|   |   `-ParenExpr 0x5618113337d8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5618113337a8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x561811333718 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5618113336d0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5618113336b8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561811333678 <col:106> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561811333700 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5618113336e8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561811333698 <col:124> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x561811333778 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561811333738 <col:141> 'int' lvalue Var 0x56181132e430 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x561811333790 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561811333758 <col:153> 'int' lvalue Var 0x56181132e528 'a$w_buff1' 'int'
|   |-BinaryOperator 0x561811333d50 <line:799:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x561811333860 <col:3> 'int' lvalue Var 0x56181132e430 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x561811333d20 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x561811333cf0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561811333cd8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561811333880 <col:15> '_Bool' lvalue Var 0x56181132eae0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x561811333d08 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5618113338a0 <col:31> 'int' lvalue Var 0x56181132e430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x561811333cb8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x561811333c88 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x561811333ab0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5618113339d0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5618113338f8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5618113338e0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5618113338c0 <col:45> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5618113339b0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x561811333948 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x561811333930 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x561811333910 <col:64> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x561811333998 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x561811333980 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x561811333960 <col:83> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x561811333a90 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x561811333a28 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x561811333a10 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5618113339f0 <col:102> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x561811333a78 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x561811333a60 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x561811333a40 <col:121> '_Bool' lvalue Var 0x56181132e2b8 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x561811333c70 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561811333ad0 <col:138> 'int' lvalue Var 0x56181132e430 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x561811333c50 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x561811333c20 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x561811333b90 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x561811333b48 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x561811333b30 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x561811333af0 <col:151> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x561811333b78 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x561811333b60 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x561811333b10 <col:169> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x561811333bf0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x561811333bb0 <col:186> 'int' lvalue Var 0x56181132e430 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x561811333c08 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x561811333bd0 <col:198> 'int' lvalue Var 0x56181132e430 'a$w_buff0' 'int'
|   |-BinaryOperator 0x561811334270 <line:800:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x561811333d70 <col:3> 'int' lvalue Var 0x56181132e528 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x561811334240 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x561811334210 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5618113341f8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561811333d90 <col:15> '_Bool' lvalue Var 0x56181132eae0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x561811334228 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561811333db0 <col:31> 'int' lvalue Var 0x56181132e528 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x5618113341d8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5618113341a8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x561811333fd0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x561811333ee0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x561811333e08 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x561811333df0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x561811333dd0 <col:45> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x561811333ec0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x561811333e58 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x561811333e40 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x561811333e20 <col:64> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x561811333ea8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x561811333e90 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x561811333e70 <col:83> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x561811333fa0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x561811333f38 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x561811333f20 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x561811333f00 <col:102> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x561811333f88 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x561811333f70 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x561811333f50 <col:121> '_Bool' lvalue Var 0x56181132e2b8 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x561811334190 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561811333ff0 <col:138> 'int' lvalue Var 0x56181132e528 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x561811334170 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x561811334140 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5618113340b0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x561811334068 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x561811334050 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x561811334010 <col:151> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x561811334098 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x561811334080 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x561811334030 <col:169> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x561811334110 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5618113340d0 <col:186> 'int' lvalue Var 0x56181132e528 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x561811334128 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5618113340f0 <col:198> 'int' lvalue Var 0x56181132e528 'a$w_buff1' 'int'
|   |-BinaryOperator 0x561811334818 <line:801:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x561811334290 <col:3> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561811334800 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5618113347d0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x561811334788 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561811334770 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5618113342b0 <col:20> '_Bool' lvalue Var 0x56181132eae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5618113347b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5618113347a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5618113342d0 <col:36> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x561811334750 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x561811334720 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5618113344e0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561811334400 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561811334328 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561811334310 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5618113342f0 <col:55> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5618113343e0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561811334378 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561811334360 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561811334340 <col:74> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5618113343c8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5618113343b0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561811334390 <col:93> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5618113344c0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561811334458 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561811334440 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561811334420 <col:112> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5618113344a8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561811334490 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561811334470 <col:131> '_Bool' lvalue Var 0x56181132e2b8 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x561811334708 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5618113346f0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561811334500 <col:148> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5618113346d0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5618113346a0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5618113345c0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561811334578 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561811334560 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561811334520 <col:166> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5618113345a8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561811334590 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561811334540 <col:184> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x561811334658 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561811334610 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5618113345e0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561811334688 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x561811334670 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x561811334638 <col:212> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561811334de0 <line:802:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x561811334838 <col:3> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561811334dc8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561811334d98 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x561811334d50 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561811334d38 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561811334858 <col:20> '_Bool' lvalue Var 0x56181132eae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561811334d80 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561811334d68 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561811334878 <col:36> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x561811334d18 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x561811334ce8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x561811334a88 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5618113349a8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5618113348d0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5618113348b8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561811334898 <col:55> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561811334988 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561811334920 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561811334908 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5618113348e8 <col:74> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x561811334970 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561811334958 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561811334938 <col:93> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561811334a68 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561811334a00 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5618113349e8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5618113349c8 <col:112> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x561811334a50 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561811334a38 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561811334a18 <col:131> '_Bool' lvalue Var 0x56181132e2b8 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x561811334cd0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561811334cb8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561811334aa8 <col:148> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x561811334c98 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x561811334c68 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x561811334b68 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561811334b20 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561811334b08 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561811334ac8 <col:166> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561811334b50 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561811334b38 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561811334ae8 <col:184> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x561811334c38 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561811334bb8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561811334b88 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561811334c50 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x561811334c10 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x561811334be0 <col:219> 'int' 0
|   |-BinaryOperator 0x5618113353a0 <line:803:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x561811334e00 <col:3> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x561811335388 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561811335358 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x561811335310 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5618113352f8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561811334e20 <col:20> '_Bool' lvalue Var 0x56181132eae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561811335340 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561811335328 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561811334e40 <col:36> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x5618113352d8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5618113352a8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x561811335068 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561811334f70 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561811334e98 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561811334e80 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561811334e60 <col:55> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561811334f50 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561811334ee8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561811334ed0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561811334eb0 <col:74> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x561811334f38 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561811334f20 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561811334f00 <col:93> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561811335048 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561811334fe0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561811334fb0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561811334f90 <col:112> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x561811335030 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561811335018 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561811334ff8 <col:131> '_Bool' lvalue Var 0x56181132e2b8 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x561811335290 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561811335278 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561811335088 <col:148> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x561811335258 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x561811335228 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x561811335148 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561811335100 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5618113350e8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5618113350a8 <col:166> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561811335130 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561811335118 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5618113350c8 <col:184> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5618113351e0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561811335198 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561811335168 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561811335210 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5618113351f8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5618113351c0 <col:212> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x561811335968 <line:804:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5618113353c0 <col:3> '_Bool' lvalue Var 0x56181132e2b8 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x561811335950 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561811335920 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5618113358d8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5618113358c0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5618113353e0 <col:20> '_Bool' lvalue Var 0x56181132eae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561811335908 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5618113358f0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561811335400 <col:36> '_Bool' lvalue Var 0x56181132e2b8 'a$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x5618113358a0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x561811335870 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x561811335610 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561811335530 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561811335458 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561811335440 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561811335420 <col:55> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561811335510 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5618113354a8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561811335490 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561811335470 <col:74> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5618113354f8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5618113354e0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5618113354c0 <col:93> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5618113355f0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561811335588 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561811335570 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561811335550 <col:112> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5618113355d8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5618113355c0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5618113355a0 <col:131> '_Bool' lvalue Var 0x56181132e2b8 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x561811335858 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561811335840 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561811335630 <col:148> '_Bool' lvalue Var 0x56181132e2b8 'a$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x561811335820 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5618113357f0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5618113356f0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5618113356a8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561811335690 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561811335650 <col:166> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5618113356d8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5618113356c0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561811335670 <col:184> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5618113357c0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561811335740 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561811335710 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5618113357d8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x561811335798 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x561811335768 <col:219> 'int' 0
|   |-BinaryOperator 0x5618113359e0 <line:805:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561811335988 <col:3> 'int' lvalue Var 0x56181132db68 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x5618113359c8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5618113359a8 <col:25> 'int' lvalue Var 0x56181132dc88 'a' 'int'
|   |-BinaryOperator 0x561811335b10 <line:806:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x561811335a00 <col:3> 'int' lvalue Var 0x56181132dc88 'a' 'int'
|   | `-ConditionalOperator 0x561811335ae0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x561811335a98 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561811335a80 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561811335a20 <col:7> '_Bool' lvalue Var 0x56181132dd20 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x561811335ab0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561811335a40 <col:25> 'int' lvalue Var 0x56181132dda0 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x561811335ac8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x561811335a60 <col:37> 'int' lvalue Var 0x56181132dc88 'a' 'int'
|   |-BinaryOperator 0x561811335ba8 <line:807:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x561811335b30 <col:3> '_Bool' lvalue Var 0x56181132dd20 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x561811335b80 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561811335b50 <col:28> 'int' 0
|   |-CallExpr 0x561811335c00 <line:808:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561811335be8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561811335bc8 <col:3> 'void ()' Function 0x5618112d4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561811335c58 <line:809:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561811335c40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561811335c20 <col:3> 'void ()' Function 0x5618112d4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561811335f40 <line:810:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561811335c78 <col:3> 'int' lvalue Var 0x56181132dc88 'a' 'int'
|   | `-ConditionalOperator 0x561811335f10 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561811335d38 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561811335cf0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561811335cd8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561811335c98 <col:7> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561811335d20 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561811335d08 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561811335cb8 <col:25> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x561811335ef8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561811335d58 <col:42> 'int' lvalue Var 0x56181132e430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x561811335ed8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561811335ea8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561811335e18 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561811335dd0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561811335db8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561811335d78 <col:55> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561811335e00 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561811335de8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561811335d98 <col:73> '_Bool' lvalue Var 0x56181132e2b8 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x561811335e78 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561811335e38 <col:90> 'int' lvalue Var 0x56181132e528 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561811335e90 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561811335e58 <col:102> 'int' lvalue Var 0x56181132dc88 'a' 'int'
|   |-BinaryOperator 0x561811336160 <line:811:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561811335f60 <col:3> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561811336148 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561811336118 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561811336038 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561811335ff0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561811335fc0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561811335f80 <col:20> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561811336020 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561811336008 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561811335fa0 <col:38> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5618113360d0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561811336088 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561811336058 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561811336100 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5618113360e8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5618113360b0 <col:66> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561811336448 <line:812:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561811336180 <col:3> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561811336430 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561811336400 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561811336320 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561811336240 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5618113361f8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5618113361e0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5618113361a0 <col:20> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561811336228 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561811336210 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5618113361c0 <col:38> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x561811336300 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5618113362b8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5618113362a0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561811336260 <col:56> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5618113362e8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5618113362d0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561811336280 <col:74> '_Bool' lvalue Var 0x56181132e2b8 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5618113363b8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561811336370 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561811336340 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5618113363e8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5618113363d0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561811336398 <col:102> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561811336650 <line:813:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561811336468 <col:3> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x561811336638 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561811336608 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561811336528 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5618113364e0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5618113364c8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561811336488 <col:20> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561811336510 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5618113364f8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5618113364a8 <col:38> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5618113365c0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561811336578 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561811336548 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5618113365f0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5618113365d8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5618113365a0 <col:66> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x561811336938 <line:814:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561811336670 <col:3> '_Bool' lvalue Var 0x56181132e2b8 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x561811336920 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5618113368f0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561811336810 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561811336730 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5618113366e8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5618113366d0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561811336690 <col:20> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561811336718 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561811336700 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5618113366b0 <col:38> '_Bool' lvalue Var 0x56181132e060 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5618113367f0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5618113367a8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561811336790 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561811336750 <col:56> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5618113367d8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5618113367c0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561811336770 <col:74> '_Bool' lvalue Var 0x56181132e2b8 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5618113368a8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561811336860 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561811336830 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5618113368d8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5618113368c0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561811336888 <col:102> '_Bool' lvalue Var 0x56181132e2b8 'a$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x561811336990 <line:815:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561811336978 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561811336958 <col:3> 'void ()' Function 0x5618112d4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5618113369e8 <line:816:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5618113369d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5618113369b0 <col:3> 'void ()' Function 0x5618112d4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561811336aa0 <line:817:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561811336a08 <col:3> 'int' lvalue Var 0x56181132d6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561811336a80 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561811336a68 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561811336a28 <col:22> 'int' lvalue Var 0x56181132d6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561811336a48 <col:41> 'int' 1
|   |-CallExpr 0x561811336af8 <line:818:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561811336ae0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561811336ac0 <col:3> 'void ()' Function 0x5618112d4410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561811336b70 <line:819:3, col:36>
|     `-CallExpr 0x561811336b50 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561811336b38 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561811336b18 <col:10> 'void *(void)' Function 0x5618112d3e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561811336cb8 prev 0x56181132d430 <line:821:1, line:823:1> line:821:6 fence 'void ()'
| `-CompoundStmt 0x561811336d58 <line:822:1, line:823:1>
|-FunctionDecl 0x561811336d88 prev 0x56181132d4f0 <line:824:1, line:826:1> line:824:6 isync 'void ()'
| `-CompoundStmt 0x561811336e28 <line:825:1, line:826:1>
|-FunctionDecl 0x561811336e58 prev 0x56181132d5b0 <line:827:1, line:829:1> line:827:6 lwfence 'void ()'
| `-CompoundStmt 0x561811336ef8 <line:828:1, line:829:1>
`-FunctionDecl 0x561811337000 <line:830:1, line:856:1> line:830:5 main 'int ()'
  `-CompoundStmt 0x5618113390a8 <line:831:1, line:856:1>
    |-DeclStmt 0x561811337118 <line:832:3, col:17>
    | `-VarDecl 0x5618113370b0 <col:3, col:13> col:13 used t603 'pthread_t':'unsigned long'
    |-CallExpr 0x561811337328 <line:833:3, col:53> 'int'
    | |-ImplicitCastExpr 0x561811337310 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561811337130 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5618113148f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561811337170 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561811337150 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5618113370b0 't603' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561811337368 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5618113371e8 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5618113371c0 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561811337188 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x561811337380 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561811337208 <col:38> 'void *(void *)' Function 0x56181132ebf8 'P0' 'void *(void *)'
    | `-ParenExpr 0x561811337288 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x561811337260 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561811337228 <col:51> 'int' 0
    |-DeclStmt 0x561811337410 <line:834:3, col:17>
    | `-VarDecl 0x5618113373a8 <col:3, col:13> col:13 used t604 'pthread_t':'unsigned long'
    |-CallExpr 0x5618113375b8 <line:835:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5618113375a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561811337428 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5618113148f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561811337468 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561811337448 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5618113373a8 't604' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5618113375f8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5618113374e0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5618113374b8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561811337480 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x561811337610 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561811337500 <col:38> 'void *(void *)' Function 0x561811330630 'P1' 'void *(void *)'
    | `-ParenExpr 0x561811337580 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x561811337558 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561811337520 <col:51> 'int' 0
    |-DeclStmt 0x5618113376a0 <line:836:3, col:17>
    | `-VarDecl 0x561811337638 <col:3, col:13> col:13 used t605 'pthread_t':'unsigned long'
    |-CallExpr 0x561811337848 <line:837:3, col:53> 'int'
    | |-ImplicitCastExpr 0x561811337830 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5618113376b8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5618113148f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5618113376f8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5618113376d8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561811337638 't605' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561811337888 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561811337770 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x561811337748 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561811337710 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5618113378a0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561811337790 <col:38> 'void *(void *)' Function 0x561811331b00 'P2' 'void *(void *)'
    | `-ParenExpr 0x561811337810 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5618113377e8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5618113377b0 <col:51> 'int' 0
    |-DeclStmt 0x561811337930 <line:838:3, col:17>
    | `-VarDecl 0x5618113378c8 <col:3, col:13> col:13 used t606 'pthread_t':'unsigned long'
    |-CallExpr 0x561811337ad8 <line:839:3, col:53> 'int'
    | |-ImplicitCastExpr 0x561811337ac0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561811337948 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5618113148f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561811337988 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561811337968 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5618113378c8 't606' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561811337b18 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561811337a00 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5618113379d8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5618113379a0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x561811337b30 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561811337a20 <col:38> 'void *(void *)' Function 0x561811332e78 'P3' 'void *(void *)'
    | `-ParenExpr 0x561811337aa0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x561811337a78 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561811337a40 <col:51> 'int' 0
    |-CallExpr 0x561811337b80 <line:840:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561811337b68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561811337b48 <col:3> 'void ()' Function 0x5618112d4350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561811337c50 <line:841:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x561811337ba0 <col:3> '_Bool' lvalue Var 0x56181132e618 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x561811337c38 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x561811337c18 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x561811337c00 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x561811337bc0 <col:21> 'int' lvalue Var 0x56181132d6e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x561811337be0 <col:41> 'int' 4
    |-CallExpr 0x561811337ca8 <line:842:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561811337c90 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561811337c70 <col:3> 'void ()' Function 0x5618112d4410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561811337d20 <line:843:3, col:36> 'void'
    | |-ImplicitCastExpr 0x561811337d08 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561811337cc8 <col:3> 'void (int)' Function 0x5618112d3ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x561811337d60 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x561811337d48 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x561811337ce8 <col:21> '_Bool' lvalue Var 0x56181132e618 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x561811337db0 <line:844:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561811337d98 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561811337d78 <col:3> 'void ()' Function 0x5618112d4350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5618113380a8 <line:845:3, col:103> 'int' '='
    | |-DeclRefExpr 0x561811337dd0 <col:3> 'int' lvalue Var 0x56181132dc88 'a' 'int'
    | `-ConditionalOperator 0x561811338078 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x561811337e90 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x561811337e48 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x561811337e30 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x561811337df0 <col:7> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x561811337e78 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x561811337e60 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x561811337e10 <col:25> '_Bool' lvalue Var 0x56181132de18 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x561811338060 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x561811337eb0 <col:42> 'int' lvalue Var 0x56181132e430 'a$w_buff0' 'int'
    |   `-ParenExpr 0x561811338040 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x561811338010 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x561811337f70 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x561811337f28 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x561811337f10 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x561811337ed0 <col:55> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x561811337f58 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x561811337f40 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x561811337ef0 <col:73> '_Bool' lvalue Var 0x56181132e0d8 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x561811337fd0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x561811337f90 <col:90> 'int' lvalue Var 0x56181132e528 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x561811337fe8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x561811337fb0 <col:102> 'int' lvalue Var 0x56181132dc88 'a' 'int'
    |-BinaryOperator 0x5618113382b0 <line:846:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5618113380c8 <col:3> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x561811338298 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561811338268 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x561811338188 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x561811338140 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x561811338128 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5618113380e8 <col:20> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x561811338170 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x561811338158 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x561811338108 <col:38> '_Bool' lvalue Var 0x56181132de18 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561811338220 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5618113381d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5618113381a8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x561811338250 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561811338238 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561811338200 <col:66> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x561811338598 <line:847:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5618113382d0 <col:3> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x561811338580 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561811338550 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x561811338470 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x561811338390 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x561811338348 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x561811338330 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5618113382f0 <col:20> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x561811338378 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x561811338360 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x561811338310 <col:38> '_Bool' lvalue Var 0x56181132de18 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x561811338450 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x561811338408 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5618113383f0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5618113383b0 <col:56> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x561811338438 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x561811338420 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5618113383d0 <col:74> '_Bool' lvalue Var 0x56181132e0d8 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561811338508 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5618113384c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561811338490 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x561811338538 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561811338520 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5618113384e8 <col:102> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5618113387a0 <line:848:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5618113385b8 <col:3> '_Bool' lvalue Var 0x56181132de18 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561811338788 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561811338758 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x561811338678 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x561811338630 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x561811338618 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5618113385d8 <col:20> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x561811338660 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x561811338648 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5618113385f8 <col:38> '_Bool' lvalue Var 0x56181132de18 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561811338710 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5618113386c8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561811338698 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x561811338740 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561811338728 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5618113386f0 <col:66> '_Bool' lvalue Var 0x56181132de18 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x561811338a88 <line:849:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5618113387c0 <col:3> '_Bool' lvalue Var 0x56181132e0d8 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561811338a70 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561811338a40 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x561811338960 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x561811338880 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x561811338838 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x561811338820 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5618113387e0 <col:20> '_Bool' lvalue Var 0x56181132e4a8 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x561811338868 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x561811338850 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x561811338800 <col:38> '_Bool' lvalue Var 0x56181132de18 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x561811338940 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5618113388f8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5618113388e0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5618113388a0 <col:56> '_Bool' lvalue Var 0x56181132e5a0 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x561811338928 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x561811338910 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5618113388c0 <col:74> '_Bool' lvalue Var 0x56181132e0d8 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5618113389f8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5618113389b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561811338980 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x561811338a28 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561811338a10 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5618113389d8 <col:102> '_Bool' lvalue Var 0x56181132e0d8 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x561811338ae0 <line:850:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561811338ac8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561811338aa8 <col:3> 'void ()' Function 0x5618112d4410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561811338b38 <line:851:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561811338b20 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561811338b00 <col:3> 'void ()' Function 0x5618112d4350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561811338f38 <line:852:3, col:151> '_Bool' '='
    | |-DeclRefExpr 0x561811338b58 <col:3> '_Bool' lvalue Var 0x56181132e690 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x561811338f20 <col:21, col:151> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x561811338f08 <col:21, col:151> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x561811338ee8 <col:22, col:151> 'int'
    |       `-BinaryOperator 0x561811338ec8 <col:23, col:150> 'int' '&&'
    |         |-BinaryOperator 0x561811338e30 <col:23, col:122> 'int' '&&'
    |         | |-BinaryOperator 0x561811338d98 <col:23, col:94> 'int' '&&'
    |         | | |-BinaryOperator 0x561811338d00 <col:23, col:66> 'int' '&&'
    |         | | | |-BinaryOperator 0x561811338c68 <col:23, col:38> 'int' '&&'
    |         | | | | |-BinaryOperator 0x561811338bd0 <col:23, col:28> 'int' '=='
    |         | | | | | |-ImplicitCastExpr 0x561811338bb8 <col:23> 'int' <LValueToRValue>
    |         | | | | | | `-DeclRefExpr 0x561811338b78 <col:23> 'int' lvalue Var 0x56181132e790 'x' 'int'
    |         | | | | | `-IntegerLiteral 0x561811338b98 <col:28> 'int' 2
    |         | | | | `-BinaryOperator 0x561811338c48 <col:33, col:38> 'int' '=='
    |         | | | |   |-ImplicitCastExpr 0x561811338c30 <col:33> 'int' <LValueToRValue>
    |         | | | |   | `-DeclRefExpr 0x561811338bf0 <col:33> 'int' lvalue Var 0x56181132e9d0 'z' 'int'
    |         | | | |   `-IntegerLiteral 0x561811338c10 <col:38> 'int' 2
    |         | | | `-BinaryOperator 0x561811338ce0 <col:43, col:66> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x561811338cc8 <col:43> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x561811338c88 <col:43> 'int' lvalue Var 0x56181132d808 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x561811338ca8 <col:66> 'int' 2
    |         | | `-BinaryOperator 0x561811338d78 <col:71, col:94> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x561811338d60 <col:71> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x561811338d20 <col:71> 'int' lvalue Var 0x56181132d928 '__unbuffered_p1_EBX' 'int'
    |         | |   `-IntegerLiteral 0x561811338d40 <col:94> 'int' 0
    |         | `-BinaryOperator 0x561811338e10 <col:99, col:122> 'int' '=='
    |         |   |-ImplicitCastExpr 0x561811338df8 <col:99> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x561811338db8 <col:99> 'int' lvalue Var 0x56181132da48 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x561811338dd8 <col:122> 'int' 2
    |         `-BinaryOperator 0x561811338ea8 <col:127, col:150> 'int' '=='
    |           |-ImplicitCastExpr 0x561811338e90 <col:127> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x561811338e50 <col:127> 'int' lvalue Var 0x56181132db68 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x561811338e70 <col:150> 'int' 0
    |-CallExpr 0x561811338f90 <line:853:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561811338f78 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561811338f58 <col:3> 'void ()' Function 0x5618112d4410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561811339020 <line:854:3, col:36> 'void'
    | |-ImplicitCastExpr 0x561811338ff0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561811338fb0 <col:3> 'void (int)' Function 0x5618112d40d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x561811339060 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x561811339048 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x561811338fd0 <col:21> '_Bool' lvalue Var 0x56181132e690 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x561811339098 <line:855:3, col:10>
      `-IntegerLiteral 0x561811339078 <col:10> 'int' 0
