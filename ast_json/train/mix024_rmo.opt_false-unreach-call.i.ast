TranslationUnitDecl 0x563344b56f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x563344b57848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x563344b57520 '__int128'
|-TypedefDecl 0x563344b578b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x563344b57540 'unsigned __int128'
|-TypedefDecl 0x563344b57bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x563344b57990 'struct __NSConstantString_tag'
|   `-Record 0x563344b57910 '__NSConstantString_tag'
|-TypedefDecl 0x563344b57c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x563344b57c20 'char *'
|   `-BuiltinType 0x563344b57020 'char'
|-TypedefDecl 0x563344b96b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x563344b57f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x563344b57d40 'struct __va_list_tag'
|     `-Record 0x563344b57cc0 '__va_list_tag'
|-FunctionDecl 0x563344b96c80 <pthread-wmm/mix024_rmo.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x563344b96e50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x563344b96d80 <col:31> col:34 'int'
|-FunctionDecl 0x563344b96fc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x563344b970f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x563344b97238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x563344b971a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x563344b97468 <col:40, col:99>
|   |-IfStmt 0x563344b97438 <col:42, col:88>
|   | |-UnaryOperator 0x563344b97318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x563344b97300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x563344b972e0 <col:47> 'int' lvalue ParmVar 0x563344b971a8 'expression' 'int'
|   | `-CompoundStmt 0x563344b97420 <col:59, col:88>
|   |   `-LabelStmt 0x563344b97408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x563344b97398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x563344b97380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x563344b97330 <col:68> 'void () __attribute__((noreturn))' Function 0x563344b970f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x563344b97450 <col:89>
|   `-ReturnStmt 0x563344b97458 <col:91>
|-FunctionDecl 0x563344b974b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x563344b97570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x563344b978f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563344b97628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x563344b976a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x563344b97728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x563344b977a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x563344b979b0 <line:11:22>
|-FunctionDecl 0x563344bbcf10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563344b97a20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x563344b97aa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x563344bbcd40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x563344bbcdc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x563344bbcfd0 <line:14:22>
|-FunctionDecl 0x563344bbd280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563344bbd040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x563344bbd0c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x563344bbd140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x563344bbd338 <line:16:22>
|-TypedefDecl 0x563344bbd3a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x563344b570e0 'unsigned char'
|-TypedefDecl 0x563344bbd418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x563344b57100 'unsigned short'
|-TypedefDecl 0x563344bbd488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x563344b57120 'unsigned int'
|-TypedefDecl 0x563344bbd4f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x563344b57140 'unsigned long'
|-TypedefDecl 0x563344bbd568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x563344b57040 'signed char'
|-TypedefDecl 0x563344bbd5d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x563344b570e0 'unsigned char'
|-TypedefDecl 0x563344bbd648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x563344b57060 'short'
|-TypedefDecl 0x563344bbd6b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x563344b57100 'unsigned short'
|-TypedefDecl 0x563344bbd728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x563344b57080 'int'
|-TypedefDecl 0x563344bbd798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x563344b57120 'unsigned int'
|-TypedefDecl 0x563344bbd808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x563344b570a0 'long'
|-TypedefDecl 0x563344bbd878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x563344b57140 'unsigned long'
|-TypedefDecl 0x563344bbd8e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x563344b570a0 'long'
|-TypedefDecl 0x563344bbd958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x563344b57140 'unsigned long'
|-TypedefDecl 0x563344bbd9c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x563344b57140 'unsigned long'
|-TypedefDecl 0x563344bbda38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x563344b57120 'unsigned int'
|-TypedefDecl 0x563344bbdaa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x563344b57120 'unsigned int'
|-TypedefDecl 0x563344bbdb18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x563344b57140 'unsigned long'
|-TypedefDecl 0x563344bbdb88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x563344b57140 'unsigned long'
|-TypedefDecl 0x563344bbdbf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x563344b57120 'unsigned int'
|-TypedefDecl 0x563344bbdc68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x563344b57140 'unsigned long'
|-TypedefDecl 0x563344bbdcd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x563344b570a0 'long'
|-TypedefDecl 0x563344bbdd68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x563344b570a0 'long'
|-TypedefDecl 0x563344bbddd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x563344b57080 'int'
|-RecordDecl 0x563344bbde30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x563344bbdf78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x563344bbe030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x563344bbdfd0 'struct __fsid_t' sugar
|   `-RecordType 0x563344bbdeb0 '__fsid_t'
|     `-Record 0x563344bbde30 ''
|-TypedefDecl 0x563344bbe0b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x563344b570a0 'long'
|-TypedefDecl 0x563344bbe128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x563344b57140 'unsigned long'
|-TypedefDecl 0x563344bbe198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x563344b57140 'unsigned long'
|-TypedefDecl 0x563344bbe208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x563344b57120 'unsigned int'
|-TypedefDecl 0x563344bbe278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x563344b570a0 'long'
|-TypedefDecl 0x563344bbe2e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x563344b57120 'unsigned int'
|-TypedefDecl 0x563344bbe358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x563344b570a0 'long'
|-TypedefDecl 0x563344bbe3c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x563344b57080 'int'
|-TypedefDecl 0x563344bbe438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x563344b57080 'int'
|-TypedefDecl 0x563344bbe4a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x563344b57080 'int'
|-TypedefDecl 0x563344bbe518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x563344b577a0 'void *'
|   `-BuiltinType 0x563344b56fe0 'void'
|-TypedefDecl 0x563344bbe588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x563344b570a0 'long'
|-TypedefDecl 0x563344bbe5f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x563344b570a0 'long'
|-TypedefDecl 0x563344bbe668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x563344b570a0 'long'
|-TypedefDecl 0x563344bbe6d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x563344b57140 'unsigned long'
|-TypedefDecl 0x563344bbe748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x563344b57140 'unsigned long'
|-TypedefDecl 0x563344bbe7b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x563344b57140 'unsigned long'
|-TypedefDecl 0x563344bbe828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x563344b57140 'unsigned long'
|-TypedefDecl 0x563344bbe898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x563344b570a0 'long'
|-TypedefDecl 0x563344bbe908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x563344b570a0 'long'
|-TypedefDecl 0x563344bbe978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x563344b570a0 'long'
|-TypedefDecl 0x563344bbe9e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x563344b57140 'unsigned long'
|-TypedefDecl 0x563344bbea78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x563344bbea40 '__off64_t' sugar
|   |-Typedef 0x563344bbdd68 '__off64_t'
|   `-BuiltinType 0x563344b570a0 'long'
|-TypedefDecl 0x563344bbeb70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x563344bbeb30 '__quad_t *'
|   `-TypedefType 0x563344bbead0 '__quad_t' sugar
|     |-Typedef 0x563344bbd8e8 '__quad_t'
|     `-BuiltinType 0x563344b570a0 'long'
|-TypedefDecl 0x563344bbebe0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x563344b57c20 'char *'
|   `-BuiltinType 0x563344b57020 'char'
|-TypedefDecl 0x563344bbec50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x563344b570a0 'long'
|-TypedefDecl 0x563344bbecc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x563344b57120 'unsigned int'
|-FunctionDecl 0x563344bbee38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x563344bbed60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x563344bbf148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x563344bbf138 <line:73:3, col:34>
|     `-CallExpr 0x563344bbf0f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x563344bbf0e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x563344bbf070 <col:10> '<builtin fn type>' Function 0x563344bbeee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x563344bbf120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x563344bbf090 <col:29> 'unsigned int' lvalue ParmVar 0x563344bbed60 '__bsx' 'unsigned int'
|-FunctionDecl 0x563344bbeee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x563344bbef80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x563344bbeff0 <col:10> Implicit
| `-ConstAttr 0x563344bbf048 <col:10> Implicit
|-FunctionDecl 0x563344bbf2a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x563344bbf198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x563344bbf5b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x563344bbf5a8 <line:78:3, col:34>
|     `-CallExpr 0x563344bbf568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x563344bbf550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x563344bbf4d8 <col:10> '<builtin fn type>' Function 0x563344bbf348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x563344bbf590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x563344bbf4f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x563344bbf198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x563344bbf348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x563344bbf3e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x563344bbf458 <col:10> Implicit
| `-ConstAttr 0x563344bbf4b0 <col:10> Implicit
|-TypedefDecl 0x563344bbf5e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x563344b57140 'unsigned long'
|-TypedefDecl 0x563344bbf678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x563344bbf640 '__time_t' sugar
|   |-Typedef 0x563344bbe278 '__time_t'
|   `-BuiltinType 0x563344b570a0 'long'
|-RecordDecl 0x563344bbf6d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x563344bbf788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x563344bbf818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x563344bbf8a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x563344bbf870 '__pid_t' sugar
|   |-Typedef 0x563344bbddd8 '__pid_t'
|   `-BuiltinType 0x563344b57080 'int'
|-RecordDecl 0x563344bbf900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x563344bbf9c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x563344bbfa10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x563344bbfad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x563344bbfb38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x563344b57140 'unsigned long'
|-RecordDecl 0x563344bbfb90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x563344bc1e70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x563344bc1f20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x563344bc1ec0 'struct cpu_set_t' sugar
|   `-RecordType 0x563344bbfc10 'cpu_set_t'
|     `-Record 0x563344bbfb90 ''
|-FunctionDecl 0x563344bc21f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x563344bc1fc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x563344bc20d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x563344bc22a8 <line:108:19>
|-FunctionDecl 0x563344bc2480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x563344bc2310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x563344bc2528 <col:69>
|-FunctionDecl 0x563344bc26a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x563344bc2590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x563344bc2748 <col:64>
|-FunctionDecl 0x563344bc2a08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x563344bc27b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563344bc28e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x563344bc2ab8 <line:114:22>
|-FunctionDecl 0x563344bc2e60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x563344bc2b20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563344bc2c18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x563344bc2f10 <col:88>
|-FunctionDecl 0x563344bc31c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x563344bc2f78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563344bc2ff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x563344bc3088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x563344bc3280 <col:62>
|-FunctionDecl 0x563344bc33f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x563344bc32e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x563344bc34a0 <col:63>
|-FunctionDecl 0x563344bc35c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x563344bc3668 <col:47>
|-FunctionDecl 0x563344bc3770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x563344bc36d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x563344bc3818 <col:69>
|-FunctionDecl 0x563344bc3920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x563344bc3888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x563344bc39c8 <col:69>
|-FunctionDecl 0x563344bc3c88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x563344bc3a30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563344bc3b68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x563344bc3d38 <col:88>
|-TypedefDecl 0x563344bc3dc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x563344bc3d90 '__clock_t' sugar
|   |-Typedef 0x563344bbe0b8 '__clock_t'
|   `-BuiltinType 0x563344b570a0 'long'
|-TypedefDecl 0x563344bc47e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x563344bc3e20 '__clockid_t' sugar
|   |-Typedef 0x563344bbe4a8 '__clockid_t'
|   `-BuiltinType 0x563344b57080 'int'
|-TypedefDecl 0x563344bc4878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x563344bc4840 '__timer_t' sugar
|   |-Typedef 0x563344bbe518 '__timer_t'
|   `-PointerType 0x563344b577a0 'void *'
|     `-BuiltinType 0x563344b56fe0 'void'
|-RecordDecl 0x563344bc48d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x563344bc4990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x563344bc49f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x563344bc4a60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x563344bc4ac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x563344bc4b30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x563344bc4b98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x563344bc4c00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x563344bc4c68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x563344bc4cd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x563344bc4d38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x563344bc4da0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x563344bc4df0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x563344bc4eb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x563344bc4f28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x563344bc4fd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x563344bc51a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x563344bc5240 <col:45>
|-FunctionDecl 0x563344bc5420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x563344bc5310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x563344bc54c8 <col:54>
|-FunctionDecl 0x563344bc56c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x563344bc5530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x563344bc55a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x563344bc5778 <line:158:22>
| `-ConstAttr 0x563344bc6410 <col:63>
|-FunctionDecl 0x563344bc6610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x563344bc6508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x563344bc66b8 <col:56>
|-FunctionDecl 0x563344bc6a60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x563344bc6728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x563344bc67a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x563344bc6820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x563344bc6918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x563344bc6b20 <col:54>
|-RecordDecl 0x563344bc6b78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x563344bc6c28 parent 0x563344b56f88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x563344bc6e88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x563344bc6f28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x563344bc6f90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x563344bc6ff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x563344bc70e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x563344bc7208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x563344bc71b0 'struct __locale_struct *'
|   `-ElaboratedType 0x563344bc7140 'struct __locale_struct' sugar
|     `-RecordType 0x563344bc6c00 'struct __locale_struct'
|       `-Record 0x563344bc6b78 '__locale_struct'
|-TypedefDecl 0x563344bc72b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x563344bc7280 '__locale_t' sugar
|   |-Typedef 0x563344bc7208 '__locale_t'
|   `-PointerType 0x563344bc71b0 'struct __locale_struct *'
|     `-ElaboratedType 0x563344bc7140 'struct __locale_struct' sugar
|       `-RecordType 0x563344bc6c00 'struct __locale_struct'
|         `-Record 0x563344bc6b78 '__locale_struct'
|-FunctionDecl 0x563344bc76b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x563344bc7328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x563344bc73a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x563344bc7438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x563344bc74c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x563344bc7540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x563344bc7778 <col:40>
|-FunctionDecl 0x563344bc7968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x563344bc7840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x563344bc7a10 <col:66>
|-FunctionDecl 0x563344bc7b20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x563344bc7a78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x563344bc7bc8 <col:69>
|-FunctionDecl 0x563344bc7df8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x563344bc7c30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x563344bc7cc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x563344bc7ea8 <col:52>
|-FunctionDecl 0x563344bc8050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x563344bc7f10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x563344bc7fa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x563344bc8100 <col:55>
|-FunctionDecl 0x563344bc8298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x563344bc8180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x563344bc8340 <col:62>
|-FunctionDecl 0x563344bc8578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x563344bc83a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x563344bc8620 <col:60>
|-FunctionDecl 0x563344bc8848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x563344bc86a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x563344bc8720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x563344bc88f8 <col:44>
|-FunctionDecl 0x563344bc8b08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x563344bc8960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x563344bc89e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x563344bc8bb8 <col:49>
|-VarDecl 0x563344bc8cb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x563344bc8d38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x563344bc8db8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x563344bc8e80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x563344bc8fb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x563344bc9050 <col:42>
|-VarDecl 0x563344bc90c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x563344bc9140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x563344bc92c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x563344bc91b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x563344bc9370 <col:57>
|-FunctionDecl 0x563344bca4f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x563344bc93f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x563344bca598 <col:56>
|-FunctionDecl 0x563344bca6a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x563344bca618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x563344bca750 <col:59>
|-FunctionDecl 0x563344bca858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x563344bca7c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x563344bca900 <col:48>
| `-ConstAttr 0x563344bca958 <col:89>
|-FunctionDecl 0x563344bcabb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x563344bcaa08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x563344bcaa98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x563344bcae18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x563344bcaca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563344bcad38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x563344bcaec8 <col:88>
|-FunctionDecl 0x563344bcb060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x563344bcaf30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563344bcafc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x563344bcb110 <col:88>
|-FunctionDecl 0x563344bcb328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x563344bcb178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563344bcb208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x563344bcb3d8 <line:209:22>
|-FunctionDecl 0x563344bcb778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x563344bcb440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563344bcb500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x563344bcb590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x563344bcb620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x563344bcba78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x563344bcb878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x563344bcb950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x563344bcbb28 <col:85>
|-FunctionDecl 0x563344bcbf18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x563344bcbb90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563344bcbcc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x563344bcbdd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x563344bcbfd0 <col:52>
|-FunctionDecl 0x563344bcc148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x563344bcc038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x563344bcc1f0 <col:61>
|-FunctionDecl 0x563344bcc668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x563344bcc258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x563344bcc2d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x563344bcc408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x563344bcc510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x563344bcc728 <col:62>
|-FunctionDecl 0x563344bcc948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x563344bcc790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x563344bcc820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x563344bcc9f8 <line:222:22>
|-FunctionDecl 0x563344bccaf8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x563344bcca60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x563344bccba0 <col:65>
|-TypedefDecl 0x563344bccc10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x563344b57140 'unsigned long'
|-RecordDecl 0x563344bccc68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x563344bccdb0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x563344bcce18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563344bccec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x563344bcce70 'union pthread_attr_t' sugar
|   `-RecordType 0x563344bcccf0 'union pthread_attr_t'
|     `-Record 0x563344bccc68 'pthread_attr_t'
|-RecordDecl 0x563344bccf20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x563344bcd098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x563344bcd110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x563344bcd1c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x563344bcd160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x563344bccfa0 'struct __pthread_internal_list'
|     `-Record 0x563344bccf20 '__pthread_internal_list'
|-RecordDecl 0x563344bcd230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x563344bcd2d8 parent 0x563344b56f88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x563344bcd3b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x563344bcd418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x563344bcd480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x563344bd1530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x563344bd1598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x563344bd1600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x563344bd1688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x563344bd1740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x563344bd1830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x563344bd1898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563344bd1a20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x563344bd19c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x563344bcd2b0 'pthread_mutex_t'
|     `-Record 0x563344bcd230 ''
|-RecordDecl 0x563344bd1a90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x563344bd1bd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x563344bd1c38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x563344bd1cf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x563344bd1c90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x563344bd1b10 'pthread_mutexattr_t'
|     `-Record 0x563344bd1a90 ''
|-RecordDecl 0x563344bd1d60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x563344bd1e08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x563344bd1ed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x563344bd1f38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x563344bd1fa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x563344bd2008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x563344bd2070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x563344bd20d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x563344bd2140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x563344bd21a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x563344bd2260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix024_rmo.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix024_rmo.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x563344bd2350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x563344bd23b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x563344bd2540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x563344bd2490 'union pthread_cond_t' sugar
|   `-RecordType 0x563344bd1de0 'pthread_cond_t'
|     `-Record 0x563344bd1d60 ''
|-RecordDecl 0x563344bd25b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x563344bd26b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x563344bd2718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x563344bd27d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x563344bd2770 'union pthread_condattr_t' sugar
|   `-RecordType 0x563344bd2630 'pthread_condattr_t'
|     `-Record 0x563344bd25b0 ''
|-TypedefDecl 0x563344bd2858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x563344b57120 'unsigned int'
|-TypedefDecl 0x563344bd28c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x563344b57080 'int'
|-RecordDecl 0x563344bd2920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x563344bd29c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x563344bd2a90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x563344bd2af8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x563344bd2b60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x563344bd2bc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x563344bd2c30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x563344bd2c98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x563344bd2d00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x563344bd2d68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x563344bd2dd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x563344bd2e38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x563344bd2ea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x563344bd2f50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix024_rmo.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix024_rmo.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x563344bd2ff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x563344bd3060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563344bd31b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x563344bd3150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x563344bd29a0 'pthread_rwlock_t'
|     `-Record 0x563344bd2920 ''
|-RecordDecl 0x563344bd3220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x563344bd3360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x563344bd33c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563344bd3480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x563344bd3420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x563344bd32a0 'pthread_rwlockattr_t'
|     `-Record 0x563344bd3220 ''
|-TypedefDecl 0x563344bd5560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x563344b57084 'volatile int' volatile
|   `-BuiltinType 0x563344b57080 'int'
|-RecordDecl 0x563344bd55b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x563344bd5700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x563344bd5768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563344bd5820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x563344bd57c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x563344bd5640 'pthread_barrier_t'
|     `-Record 0x563344bd55b8 ''
|-RecordDecl 0x563344bd5890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x563344bd5990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x563344bd59f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x563344bd5ab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x563344bd5a50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x563344bd5910 'pthread_barrierattr_t'
|     `-Record 0x563344bd5890 ''
|-TypedefDecl 0x563344bd5bc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x563344bd5b60 'long [8]' 8 
|   `-BuiltinType 0x563344b570a0 'long'
|-EnumDecl 0x563344bd5c20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x563344bd5ce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x563344bd5d38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x563344bd5d88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x563344bd5e58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x563344bd5ea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x563344bd5ef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x563344bd5f48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x563344bd5fd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x563344bd5fb8 <col:26> 'int'
| |   `-DeclRefExpr 0x563344bd5f98 <col:26> 'int' EnumConstant 0x563344bd5e58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x563344bd6058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x563344bd6040 <col:29> 'int'
| |   `-DeclRefExpr 0x563344bd6020 <col:29> 'int' EnumConstant 0x563344bd5ea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x563344bd60e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x563344bd60c8 <col:30> 'int'
| |   `-DeclRefExpr 0x563344bd60a8 <col:30> 'int' EnumConstant 0x563344bd5ef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x563344bd6168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x563344bd6150 <col:27> 'int'
|     `-DeclRefExpr 0x563344bd6130 <col:27> 'int' EnumConstant 0x563344bd5fd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x563344bd61b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x563344bd6288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x563344bd6310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x563344bd62f8 <col:30> 'int'
| |   `-DeclRefExpr 0x563344bd62d8 <col:30> 'int' EnumConstant 0x563344bd6288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x563344bd6360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x563344bd63e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x563344bd63d0 <col:29> 'int'
|     `-DeclRefExpr 0x563344bd63b0 <col:29> 'int' EnumConstant 0x563344bd6360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x563344bd6438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x563344bd6508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x563344bd6570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x563344bd65c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x563344bd6610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x563344bd66d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x563344bd6728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x563344bd6778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x563344bd6800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x563344bd67e8 <col:31> 'int'
|     `-DeclRefExpr 0x563344bd67c8 <col:31> 'int' EnumConstant 0x563344bd66d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x563344bd6850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x563344bd6918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x563344bd6968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x563344bd69b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x563344bd6a88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x563344bd6ad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x563344bd6b28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x563344bd6bf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x563344bd6c48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x563344bd6c98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x563344bd6ed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x563344bd6f40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x563344bd6fa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x563344bd70c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x563344bd7118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x563344bd71e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x563344bd7238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x563344bd7288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x563344bd7358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x563344bd73a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x563344bd79d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x563344bd74a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x563344bd75c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563344bd77c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x563344bd7840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x563344bd7a98 <col:47>
| |-NonNullAttr 0x563344bd7af0 <col:77, col:94> 1 3
| `-CallbackAttr 0x563344bd7b28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x563344bd7c50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x563344bd7b80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x563344bd7ea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x563344bd7d08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x563344bd7d88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x563344bd8078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x563344bd7f68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x563344bd8120 <col:60>
|-FunctionDecl 0x563344bd8270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x563344bd8310 <col:54>
| `-ConstAttr 0x563344bd8368 <col:95>
|-FunctionDecl 0x563344bd8da0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x563344bd83a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563344bd8418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x563344bd8e50 <line:395:19>
| `-ConstAttr 0x563344bd8ea8 <col:60>
|-FunctionDecl 0x563344bd9078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x563344bd8f40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x563344bd9120 <col:71>
| `-NonNullAttr 0x563344bd9178 <col:112, col:126> 1
|-FunctionDecl 0x563344bd9280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x563344bd91c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x563344bd9328 <line:398:22>
| `-NonNullAttr 0x563344bd9380 <col:63, col:77> 1
|-FunctionDecl 0x563344bd95a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x563344bd93c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x563344bd9448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x563344bd9658 <line:401:22>
| `-NonNullAttr 0x563344bd96b0 <col:63, col:80> 1 2
|-FunctionDecl 0x563344bd98b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563344bd96f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563344bd9778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x563344bd9968 <line:404:22>
| `-NonNullAttr 0x563344bd99c0 <col:63, col:77> 1
|-FunctionDecl 0x563344bd9c18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x563344bd9a08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x563344bd9ab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x563344bd9cc8 <line:407:22>
| `-NonNullAttr 0x563344bd9d20 <col:63, col:80> 1 2
|-FunctionDecl 0x563344bdaf78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x563344bdadc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563344bdae38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x563344bdb028 <line:410:22>
| `-NonNullAttr 0x563344bdb080 <col:63, col:77> 1
|-FunctionDecl 0x563344bdb2b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x563344bdb0c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563344bdb158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x563344bdb368 <line:413:22>
| `-NonNullAttr 0x563344bdb3c0 <col:63, col:80> 1 2
|-FunctionDecl 0x563344bdb5f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x563344bdb408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x563344bdb498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x563344bdb6a8 <col:37>
| `-NonNullAttr 0x563344bdb700 <col:78, col:95> 1 2
|-FunctionDecl 0x563344bdb8e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563344bdb748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563344bdb7c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x563344bdb998 <line:419:22>
| `-NonNullAttr 0x563344bdb9f0 <col:63, col:80> 1 2
|-FunctionDecl 0x563344bdbb78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563344bdba38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563344bdbab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x563344bdbc28 <line:421:22>
| `-NonNullAttr 0x563344bdbc80 <col:63, col:77> 1
|-FunctionDecl 0x563344bdce58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563344bdbcc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563344bdbd48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x563344bdcf08 <line:424:22>
| `-NonNullAttr 0x563344bdcf60 <col:63, col:80> 1 2
|-FunctionDecl 0x563344bdd0e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563344bdcfa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563344bdd028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x563344bdd198 <line:427:22>
| `-NonNullAttr 0x563344bdd1f0 <col:63, col:77> 1
|-FunctionDecl 0x563344bdd398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563344bdd238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563344bdd2b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x563344bdd448 <line:430:22>
| `-NonNullAttr 0x563344bdd4a0 <col:63, col:80> 1 2
|-FunctionDecl 0x563344bdd628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563344bdd4e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563344bdd568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x563344bdd6d8 <line:432:22>
| `-NonNullAttr 0x563344bdd730 <col:63, col:77> 1
|-FunctionDecl 0x563344bdd958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x563344bdd778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563344bdd7f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x563344bdda08 <line:435:22>
| |-NonNullAttr 0x563344bdda60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x563344bdda98 <col:100> "" ""
|-FunctionDecl 0x563344bddca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x563344bddae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563344bddb68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x563344bddd58 <line:438:22>
| |-NonNullAttr 0x563344bdddb0 <col:63, col:77> 1
| `-DeprecatedAttr 0x563344bdddf8 <col:97> "" ""
|-FunctionDecl 0x563344bddfe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x563344bdde48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563344bddec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x563344bde098 <line:441:22>
| `-NonNullAttr 0x563344bde0f0 <col:63, col:80> 1 2
|-FunctionDecl 0x563344bde270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x563344bde138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563344bde1b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x563344bde320 <line:444:22>
| `-NonNullAttr 0x563344bde378 <col:63, col:77> 1
|-FunctionDecl 0x563344bde668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x563344bde3c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563344bde448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x563344bde4c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x563344bde720 <line:448:22>
| `-NonNullAttr 0x563344bde778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x563344bdea28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x563344bde7d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563344bde850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x563344bde8c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x563344bdeae0 <col:43>
| `-NonNullAttr 0x563344bdeb38 <col:84, col:98> 1
|-FunctionDecl 0x563344bdee40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x563344bdeb88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563344bdec08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x563344bdec98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x563344bdeef8 <line:453:22>
| `-NonNullAttr 0x563344bdef50 <col:63, col:77> 3
|-FunctionDecl 0x563344bdf228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x563344bdef98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563344bdf018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x563344bdf0a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x563344bdf2e0 <line:457:22>
| `-NonNullAttr 0x563344bdf338 <col:63, col:80> 2 3
|-FunctionDecl 0x563344bdf528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x563344bdf388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563344bdf408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x563344bdf5d8 <line:459:22>
|-FunctionDecl 0x563344bdf9a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x563344bdf6a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x563344bdf840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x563344bdfa58 <col:52, col:69> 1 2
|-FunctionDecl 0x563344bdfc00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x563344bdfae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x563344bdfb60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x563344bdfe10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x563344bdfcc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x563344bdfd48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x563344bdff68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x563344bdfed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x563344be00a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x563344be0148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x563344be01f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x563344be02e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x563344be0350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x563344be0520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix024_rmo.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x563344be0618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x563344be06d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x563344be0670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x563344be01d0 '__pthread_unwind_buf_t'
| |   `-Record 0x563344be0148 ''
| `-AlignedAttr 0x563344be0728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x563344be07a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x563344be0900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x563344be0968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x563344be09d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x563344be0a38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x563344be0c40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x563344be0b30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x563344be0e20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x563344be0cf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x563344be0fe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563344be0ed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x563344be1088 <line:488:22>
|-RecordDecl 0x563344be10e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x563344be13f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x563344be1258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x563344be12d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x563344be14a8 <col:86>
| `-ReturnsTwiceAttr 0x563344be1500 <col:12> Implicit
|-FunctionDecl 0x563344be1828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x563344be15d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x563344be16e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x563344be18d8 <line:494:22>
| `-NonNullAttr 0x563344be1930 <col:63, col:77> 1
|-FunctionDecl 0x563344be1aa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563344be1978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563344be1b50 <line:496:22>
| `-NonNullAttr 0x563344be1ba8 <col:63, col:77> 1
|-FunctionDecl 0x563344be1cb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563344be1bf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563344be1d58 <line:498:22>
| `-NonNullAttr 0x563344be1db0 <col:52, col:66> 1
|-FunctionDecl 0x563344be1ee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563344be1e30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563344be1f90 <line:500:22>
| `-NonNullAttr 0x563344be1fe8 <col:52, col:66> 1
|-FunctionDecl 0x563344be2228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563344be2038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563344be20c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x563344be22d8 <col:36>
| `-NonNullAttr 0x563344be2330 <col:66, col:83> 1 2
|-FunctionDecl 0x563344be2430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563344be2378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563344be24d8 <line:505:22>
| `-NonNullAttr 0x563344be2530 <col:52, col:66> 1
|-FunctionDecl 0x563344be27c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563344be25e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563344be2660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x563344be2878 <line:509:22>
| `-NonNullAttr 0x563344be28d0 <col:63, col:80> 1 2
|-FunctionDecl 0x563344be2b98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x563344be2918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563344be2998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x563344be2a18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x563344be2c50 <line:513:22>
| `-NonNullAttr 0x563344be2ca8 <col:63, col:80> 1 3
|-FunctionDecl 0x563344be2e40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563344be2cf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563344be2ee8 <line:515:22>
| `-NonNullAttr 0x563344be2f40 <col:63, col:77> 1
|-FunctionDecl 0x563344be3128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x563344be2ff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x563344be31d0 <line:517:22>
| `-NonNullAttr 0x563344be3228 <col:63, col:77> 1
|-FunctionDecl 0x563344be3330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x563344be3278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x563344be33d8 <line:519:22>
| `-NonNullAttr 0x563344be3430 <col:63, col:77> 1
|-FunctionDecl 0x563344be3658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563344be3478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563344be34f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x563344be3708 <line:523:22>
| `-NonNullAttr 0x563344be3760 <col:63, col:80> 1 2
|-FunctionDecl 0x563344be3968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563344be37a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563344be3828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x563344be3a18 <line:526:22>
| `-NonNullAttr 0x563344be3a70 <col:63, col:77> 1
|-FunctionDecl 0x563344be3c18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563344be3ab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563344be3b38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x563344be3cc8 <line:529:22>
| `-NonNullAttr 0x563344be3d20 <col:63, col:80> 1 2
|-FunctionDecl 0x563344be4f20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563344be3d68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563344be4e60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x563344be4fd0 <line:531:22>
| `-NonNullAttr 0x563344be5028 <col:63, col:77> 1
|-FunctionDecl 0x563344be51d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563344be5078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563344be50f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x563344be5288 <line:535:22>
| `-NonNullAttr 0x563344be52e0 <col:63, col:80> 1 2
|-FunctionDecl 0x563344be5468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563344be5328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563344be53a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x563344be5518 <line:538:22>
| `-NonNullAttr 0x563344be5570 <col:63, col:77> 1
|-FunctionDecl 0x563344be5718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563344be55b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563344be5638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x563344be57c8 <line:542:22>
| `-NonNullAttr 0x563344be5820 <col:63, col:80> 1 2
|-FunctionDecl 0x563344be59a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563344be5868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563344be58e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x563344be5a58 <line:545:22>
| `-NonNullAttr 0x563344be5ab0 <col:63, col:77> 1
|-FunctionDecl 0x563344be5c98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x563344be5af8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x563344be5b78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x563344be5d48 <line:548:22>
| `-NonNullAttr 0x563344be5da0 <col:63, col:80> 1 2
|-FunctionDecl 0x563344be6f58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563344be5de8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563344be6e98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x563344be7008 <line:551:22>
| `-NonNullAttr 0x563344be7060 <col:63, col:77> 1
|-FunctionDecl 0x563344be7398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x563344be7140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x563344be7250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x563344be7448 <col:29>
| `-NonNullAttr 0x563344be74a0 <col:70, col:84> 1
|-FunctionDecl 0x563344be7618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563344be74e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563344be76c0 <line:556:22>
| `-NonNullAttr 0x563344be7718 <col:63, col:77> 1
|-FunctionDecl 0x563344be7820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563344be7768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563344be78c8 <line:558:22>
| `-NonNullAttr 0x563344be7920 <col:52, col:66> 1
|-FunctionDecl 0x563344be7a20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563344be7968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563344be7ac8 <line:560:19>
| `-NonNullAttr 0x563344be7b20 <col:49, col:63> 1
|-FunctionDecl 0x563344be7d58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563344be7b68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x563344be7bf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x563344be7e08 <col:39>
| `-NonNullAttr 0x563344be7e90 <col:69, col:86> 1 2
|-FunctionDecl 0x563344be7f90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563344be7ed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563344be8038 <line:565:22>
| `-NonNullAttr 0x563344be8090 <col:52, col:66> 1
|-FunctionDecl 0x563344be8190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563344be80d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563344be8238 <line:567:22>
| `-NonNullAttr 0x563344be8290 <col:52, col:66> 1
|-FunctionDecl 0x563344be8448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563344be82d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x563344be8368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x563344be84f8 <col:39>
| `-NonNullAttr 0x563344be8550 <col:69, col:86> 1 2
|-FunctionDecl 0x563344be8650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563344be8598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563344be86f8 <line:572:22>
| `-NonNullAttr 0x563344be8750 <col:52, col:66> 1
|-FunctionDecl 0x563344be8938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x563344be8800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x563344be89e0 <line:574:22>
| `-NonNullAttr 0x563344be8a38 <col:63, col:77> 1
|-FunctionDecl 0x563344be8b40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x563344be8a88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x563344be8be8 <line:576:22>
| `-NonNullAttr 0x563344be8c40 <col:63, col:77> 1
|-FunctionDecl 0x563344be8ea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563344be8c88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x563344be8d08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x563344be8f50 <line:580:22>
| `-NonNullAttr 0x563344be8fa8 <col:63, col:80> 1 2
|-FunctionDecl 0x563344be91b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x563344be8ff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x563344be9078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x563344be9268 <line:583:22>
| `-NonNullAttr 0x563344be92c0 <col:63, col:77> 1
|-FunctionDecl 0x563344be9468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563344be9308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x563344be9388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x563344be9518 <line:587:22>
| `-NonNullAttr 0x563344be9570 <col:63, col:80> 1 2
|-FunctionDecl 0x563344be96f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x563344be95b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x563344be9638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x563344be97a8 <col:36>
| `-NonNullAttr 0x563344be9800 <col:77, col:91> 1
|-FunctionDecl 0x563344be9b38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x563344be98e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x563344be99f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x563344be9be8 <line:592:22>
| `-NonNullAttr 0x563344be9c40 <col:63, col:77> 1
|-FunctionDecl 0x563344be9db8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563344be9c88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563344be9e60 <line:594:22>
| `-NonNullAttr 0x563344be9ee0 <col:63, col:77> 1
|-FunctionDecl 0x563344be9fe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563344be9f28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563344bea088 <line:596:22>
| `-NonNullAttr 0x563344bea0e0 <col:52, col:66> 1
|-FunctionDecl 0x563344bea1e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563344bea128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563344bea288 <line:598:22>
| `-NonNullAttr 0x563344bea2e0 <col:52, col:66> 1
|-FunctionDecl 0x563344bea508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x563344bea328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x563344bea3a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x563344bea5b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x563344bea8e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563344bea638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x563344bea6b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563344bea740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x563344bea9a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x563344beabb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x563344beaa80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x563344beac60 <line:607:22>
| `-NonNullAttr 0x563344beacb8 <col:63, col:77> 1
|-FunctionDecl 0x563344beadc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x563344bead08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x563344beae68 <line:609:22>
| `-NonNullAttr 0x563344beaef0 <col:63, col:77> 1
|-FunctionDecl 0x563344beb118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563344beaf38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x563344beafb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x563344beb1c8 <line:613:22>
| `-NonNullAttr 0x563344beb220 <col:63, col:80> 1 2
|-FunctionDecl 0x563344beb428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x563344beb268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x563344beb2e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x563344beb4d8 <col:37>
| `-NonNullAttr 0x563344beb530 <col:78, col:92> 1
|-FunctionDecl 0x563344beb748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x563344beb578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x563344beb620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x563344beb7f8 <line:619:22>
| `-NonNullAttr 0x563344beb850 <col:63, col:80> 1 2
|-FunctionDecl 0x563344beba18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x563344beb898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x563344beb910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x563344bebac8 <line:622:22>
| `-NonNullAttr 0x563344bebb20 <col:63, col:77> 1
|-FunctionDecl 0x563344bebdc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x563344bebc00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x563344bebc80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x563344bebe78 <line:624:22>
| `-NonNullAttr 0x563344bebf00 <col:63, col:77> 1
|-FunctionDecl 0x563344bec078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563344bebf48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563344bec120 <line:626:22>
| `-NonNullAttr 0x563344bec178 <col:63, col:77> 1
|-FunctionDecl 0x563344bec280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563344bec1c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563344bec328 <line:628:22>
| `-NonNullAttr 0x563344bec380 <col:52, col:66> 1
|-FunctionDecl 0x563344bec480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563344bec3c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563344bec528 <line:630:22>
| `-NonNullAttr 0x563344bec580 <col:52, col:66> 1
|-FunctionDecl 0x563344bec680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563344bec5c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563344bec728 <line:632:22>
| `-NonNullAttr 0x563344bec780 <col:52, col:66> 1
|-FunctionDecl 0x563344becb58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x563344bec860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x563344bec970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x563344bec9f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x563344becc10 <line:636:22>
| `-NonNullAttr 0x563344becc68 <col:63, col:77> 1
|-FunctionDecl 0x563344becde8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x563344beccb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x563344bece90 <line:638:22>
| `-NonNullAttr 0x563344becf10 <col:63, col:77> 1
|-FunctionDecl 0x563344bed010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x563344becf58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x563344bed0b8 <line:640:22>
| `-NonNullAttr 0x563344bed110 <col:52, col:66> 1
|-FunctionDecl 0x563344bed2f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x563344bed1c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x563344bed3a0 <line:642:22>
| `-NonNullAttr 0x563344bed3f8 <col:63, col:77> 1
|-FunctionDecl 0x563344bed500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x563344bed448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x563344bed5a8 <line:644:22>
| `-NonNullAttr 0x563344bed600 <col:63, col:77> 1
|-FunctionDecl 0x563344bed828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563344bed648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x563344bed6c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x563344bed8d8 <line:648:22>
| `-NonNullAttr 0x563344bed930 <col:63, col:80> 1 2
|-FunctionDecl 0x563344bedb38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x563344bed978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x563344bed9f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x563344bedbe8 <line:651:22>
| `-NonNullAttr 0x563344bedc40 <col:63, col:77> 1
|-FunctionDecl 0x563344bedfa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x563344bedd20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x563344bede40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x563344bee058 <line:654:22>
| `-NonNullAttr 0x563344bee0b0 <col:63, col:77> 1
|-FunctionDecl 0x563344bee208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x563344bee0f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x563344bee2b0 <col:69>
|-FunctionDecl 0x563344bee428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x563344bee318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x563344bee4d0 <col:72>
|-FunctionDecl 0x563344bee708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x563344bee538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x563344bee5e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x563344bee7b8 <col:44>
|-FunctionDecl 0x563344bee9d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x563344bee820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563344bee898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x563344beea88 <line:661:22>
| `-NonNullAttr 0x563344beeae0 <col:63, col:77> 2
|-FunctionDecl 0x563344beff50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x563344beebc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x563344beecd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x563344beede0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x563344bf0008 <col:47>
|-FunctionDecl 0x563344bf0110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x563344bf0078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x563344bf0268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x563344bf01d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x563344bf03c0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x563344bf0328 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x563344bf0488 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x563344bf0548 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x563344bf0608 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x563344bf06c0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x563344bf0740 prev 0x563344bf06c0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x563344bf07a8 <col:24> 'int' 0
|-VarDecl 0x563344bf07e0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x563344bf0860 prev 0x563344bf07e0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x563344bf08c8 <col:27> 'int' 0
|-VarDecl 0x563344bf0900 <line:676:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x563344bf0980 prev 0x563344bf0900 <line:677:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x563344bf09e8 <col:27> 'int' 0
|-VarDecl 0x563344bf0a20 <line:678:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x563344bf0aa0 prev 0x563344bf0a20 <line:679:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x563344bf0b08 <col:27> 'int' 0
|-VarDecl 0x563344bf0b40 <line:680:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x563344bf0bc0 prev 0x563344bf0b40 <line:681:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x563344bf0c28 <col:27> 'int' 0
|-VarDecl 0x563344bf0c60 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x563344bf0ce0 prev 0x563344bf0c60 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x563344bf0d48 <col:9> 'int' 0
|-VarDecl 0x563344bf0d78 <line:684:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x563344bf0df0 <line:685:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x563344bf0e70 <line:686:1, col:5> col:5 used x 'int'
|-VarDecl 0x563344bf0f20 prev 0x563344bf0e70 <line:687:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x563344bf0f88 <col:9> 'int' 0
|-VarDecl 0x563344bf0fc0 <line:688:1, col:5> col:5 used y 'int'
|-VarDecl 0x563344bf1040 prev 0x563344bf0fc0 <line:689:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x563344bf10a8 <col:9> 'int' 0
|-VarDecl 0x563344bf10d8 <line:690:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x563344bf1158 <line:691:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x563344bf11d0 <line:692:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x563344bf1248 <line:693:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x563344bf12c0 <line:694:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x563344bf1338 <line:695:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x563344bf13b0 <line:696:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x563344bf1428 <line:697:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x563344bf14a0 <line:698:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x563344bf1518 <line:699:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x563344bf1590 <line:700:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x563344bf1610 <line:701:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x563344bf1690 <line:702:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x563344bf1708 <line:703:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x563344bf1788 <line:704:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x563344bf1800 <line:705:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x563344bf1880 <line:706:1, col:5> col:5 used z 'int'
|-VarDecl 0x563344bf1900 prev 0x563344bf1880 <line:707:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x563344bf1968 <col:9> 'int' 0
|-VarDecl 0x563344bf1998 <line:708:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x563344bf1a10 <line:709:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x563344bf1b28 prev 0x563344bf0110 <line:710:1, line:743:1> line:710:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x563344bf1a90 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x563344bf4cd8 <line:711:1, line:743:1>
|   |-CallExpr 0x563344bf1c38 <line:712:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563344bf1c20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf1bd0 <col:3> 'void ()' Function 0x563344b974b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563344bf1c98 <line:713:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x563344bf1c58 <col:3> 'int' lvalue Var 0x563344bf0ce0 'a' 'int'
|   | `-IntegerLiteral 0x563344bf1c78 <col:7> 'int' 1
|   |-CallExpr 0x563344bf1cf0 <line:714:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563344bf1cd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf1cb8 <col:3> 'void ()' Function 0x563344b97570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563344bf1d48 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563344bf1d30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf1d10 <col:3> 'void ()' Function 0x563344b974b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563344bf1da8 <line:716:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x563344bf1d68 <col:3> 'int' lvalue Var 0x563344bf0f20 'x' 'int'
|   | `-IntegerLiteral 0x563344bf1d88 <col:7> 'int' 1
|   |-CallExpr 0x563344bf1e00 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563344bf1de8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf1dc8 <col:3> 'void ()' Function 0x563344b97570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563344bf1e58 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563344bf1e40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf1e20 <col:3> 'void ()' Function 0x563344b974b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563344bf1ed0 <line:719:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563344bf1e78 <col:3> 'int' lvalue Var 0x563344bf0860 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x563344bf1eb8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563344bf1e98 <col:25> 'int' lvalue Var 0x563344bf0f20 'x' 'int'
|   |-CallExpr 0x563344bf1f48 <line:720:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563344bf1f30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf1ef0 <col:3> 'void ()' Function 0x563344b97570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563344bf1fa0 <line:721:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563344bf1f88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf1f68 <col:3> 'void ()' Function 0x563344b974b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563344bf2068 <line:722:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x563344bf1fc0 <col:3> '_Bool' lvalue Var 0x563344bf1998 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x563344bf2048 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x563344bf2030 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x563344bf1fe0 <col:19> '_Bool (void)' Function 0x563344b96c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x563344bf2100 <line:723:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x563344bf2088 <col:3> '_Bool' lvalue Var 0x563344bf1a10 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x563344bf20e0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x563344bf20c8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x563344bf20a8 <col:19> '_Bool (void)' Function 0x563344b96c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x563344bf2178 <line:724:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x563344bf2120 <col:3> '_Bool' lvalue Var 0x563344bf10d8 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x563344bf2160 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563344bf2140 <col:21> '_Bool' lvalue Var 0x563344bf1a10 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x563344bf21f0 <line:725:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563344bf2198 <col:3> 'int' lvalue Var 0x563344bf1158 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x563344bf21d8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563344bf21b8 <col:15> 'int' lvalue Var 0x563344bf1040 'y' 'int'
|   |-BinaryOperator 0x563344bf2628 <line:726:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x563344bf2210 <col:3> 'int' lvalue Var 0x563344bf1040 'y' 'int'
|   | `-ConditionalOperator 0x563344bf25f8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x563344bf2420 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x563344bf2340 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x563344bf2268 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x563344bf2250 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x563344bf2230 <col:8> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x563344bf2320 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x563344bf22b8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x563344bf22a0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x563344bf2280 <col:27> '_Bool' lvalue Var 0x563344bf1248 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x563344bf2308 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x563344bf22f0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x563344bf22d0 <col:46> '_Bool' lvalue Var 0x563344bf1800 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x563344bf2400 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x563344bf2398 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x563344bf2380 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x563344bf2360 <col:65> '_Bool' lvalue Var 0x563344bf1248 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x563344bf23e8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x563344bf23d0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x563344bf23b0 <col:84> '_Bool' lvalue Var 0x563344bf1428 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x563344bf25e0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563344bf2440 <col:101> 'int' lvalue Var 0x563344bf1040 'y' 'int'
|   |   `-ParenExpr 0x563344bf25c0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x563344bf2590 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x563344bf2500 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563344bf24b8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563344bf24a0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563344bf2460 <col:106> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563344bf24e8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563344bf24d0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563344bf2480 <col:124> '_Bool' lvalue Var 0x563344bf1248 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x563344bf2560 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563344bf2520 <col:141> 'int' lvalue Var 0x563344bf1690 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x563344bf2578 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563344bf2540 <col:153> 'int' lvalue Var 0x563344bf1788 'y$w_buff1' 'int'
|   |-BinaryOperator 0x563344bf2b38 <line:727:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x563344bf2648 <col:3> 'int' lvalue Var 0x563344bf1690 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x563344bf2b08 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x563344bf2ad8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563344bf2ac0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563344bf2668 <col:15> '_Bool' lvalue Var 0x563344bf1a10 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x563344bf2af0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563344bf2688 <col:31> 'int' lvalue Var 0x563344bf1690 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x563344bf2aa0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x563344bf2a70 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x563344bf2898 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x563344bf27b8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x563344bf26e0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x563344bf26c8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x563344bf26a8 <col:45> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x563344bf2798 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x563344bf2730 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x563344bf2718 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x563344bf26f8 <col:64> '_Bool' lvalue Var 0x563344bf1248 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x563344bf2780 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x563344bf2768 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x563344bf2748 <col:83> '_Bool' lvalue Var 0x563344bf1800 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x563344bf2878 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x563344bf2810 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x563344bf27f8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x563344bf27d8 <col:102> '_Bool' lvalue Var 0x563344bf1248 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x563344bf2860 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x563344bf2848 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x563344bf2828 <col:121> '_Bool' lvalue Var 0x563344bf1428 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x563344bf2a58 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563344bf28b8 <col:138> 'int' lvalue Var 0x563344bf1690 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x563344bf2a38 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x563344bf2a08 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x563344bf2978 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x563344bf2930 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x563344bf2918 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x563344bf28d8 <col:151> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x563344bf2960 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x563344bf2948 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x563344bf28f8 <col:169> '_Bool' lvalue Var 0x563344bf1248 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x563344bf29d8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x563344bf2998 <col:186> 'int' lvalue Var 0x563344bf1690 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x563344bf29f0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x563344bf29b8 <col:198> 'int' lvalue Var 0x563344bf1690 'y$w_buff0' 'int'
|   |-BinaryOperator 0x563344bf3070 <line:728:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x563344bf2b58 <col:3> 'int' lvalue Var 0x563344bf1788 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x563344bf3040 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x563344bf3010 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563344bf2ff8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563344bf2b78 <col:15> '_Bool' lvalue Var 0x563344bf1a10 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x563344bf3028 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563344bf2b98 <col:31> 'int' lvalue Var 0x563344bf1788 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x563344bf2fd8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x563344bf2fa8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x563344bf2da8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x563344bf2cc8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x563344bf2bf0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x563344bf2bd8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x563344bf2bb8 <col:45> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x563344bf2ca8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x563344bf2c40 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x563344bf2c28 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x563344bf2c08 <col:64> '_Bool' lvalue Var 0x563344bf1248 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x563344bf2c90 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x563344bf2c78 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x563344bf2c58 <col:83> '_Bool' lvalue Var 0x563344bf1800 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x563344bf2d88 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x563344bf2d20 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x563344bf2d08 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x563344bf2ce8 <col:102> '_Bool' lvalue Var 0x563344bf1248 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x563344bf2d70 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x563344bf2d58 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x563344bf2d38 <col:121> '_Bool' lvalue Var 0x563344bf1428 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x563344bf2f90 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563344bf2dc8 <col:138> 'int' lvalue Var 0x563344bf1788 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x563344bf2f70 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x563344bf2f40 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x563344bf2e88 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x563344bf2e40 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x563344bf2e28 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x563344bf2de8 <col:151> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x563344bf2e70 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x563344bf2e58 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x563344bf2e08 <col:169> '_Bool' lvalue Var 0x563344bf1248 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x563344bf2ee8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x563344bf2ea8 <col:186> 'int' lvalue Var 0x563344bf1788 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x563344bf2f00 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x563344bf2ec8 <col:198> 'int' lvalue Var 0x563344bf1788 'y$w_buff1' 'int'
|   |-BinaryOperator 0x563344bf3618 <line:729:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x563344bf3090 <col:3> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563344bf3600 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563344bf35d0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x563344bf3588 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563344bf3570 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563344bf30b0 <col:20> '_Bool' lvalue Var 0x563344bf1a10 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563344bf35b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563344bf35a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563344bf30d0 <col:36> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x563344bf3550 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x563344bf3520 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x563344bf32e0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563344bf3200 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563344bf3128 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563344bf3110 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563344bf30f0 <col:55> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563344bf31e0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563344bf3178 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563344bf3160 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563344bf3140 <col:74> '_Bool' lvalue Var 0x563344bf1248 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x563344bf31c8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563344bf31b0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563344bf3190 <col:93> '_Bool' lvalue Var 0x563344bf1800 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563344bf32c0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563344bf3258 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563344bf3240 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563344bf3220 <col:112> '_Bool' lvalue Var 0x563344bf1248 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x563344bf32a8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563344bf3290 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563344bf3270 <col:131> '_Bool' lvalue Var 0x563344bf1428 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x563344bf3508 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563344bf34f0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563344bf3300 <col:148> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x563344bf34d0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x563344bf34a0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x563344bf33c0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563344bf3378 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563344bf3360 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563344bf3320 <col:166> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563344bf33a8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563344bf3390 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563344bf3340 <col:184> '_Bool' lvalue Var 0x563344bf1248 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x563344bf3458 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563344bf3410 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563344bf33e0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563344bf3488 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x563344bf3470 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x563344bf3438 <col:212> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563344bf3be0 <line:730:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x563344bf3638 <col:3> '_Bool' lvalue Var 0x563344bf1800 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563344bf3bc8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563344bf3b98 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x563344bf3b50 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563344bf3b38 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563344bf3658 <col:20> '_Bool' lvalue Var 0x563344bf1a10 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563344bf3b80 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563344bf3b68 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563344bf3678 <col:36> '_Bool' lvalue Var 0x563344bf1800 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x563344bf3b18 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x563344bf3ae8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x563344bf3888 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563344bf37a8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563344bf36d0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563344bf36b8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563344bf3698 <col:55> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563344bf3788 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563344bf3720 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563344bf3708 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563344bf36e8 <col:74> '_Bool' lvalue Var 0x563344bf1248 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x563344bf3770 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563344bf3758 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563344bf3738 <col:93> '_Bool' lvalue Var 0x563344bf1800 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563344bf3868 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563344bf3800 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563344bf37e8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563344bf37c8 <col:112> '_Bool' lvalue Var 0x563344bf1248 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x563344bf3850 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563344bf3838 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563344bf3818 <col:131> '_Bool' lvalue Var 0x563344bf1428 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x563344bf3ad0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563344bf3ab8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563344bf38a8 <col:148> '_Bool' lvalue Var 0x563344bf1800 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x563344bf3a98 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x563344bf3a68 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x563344bf3968 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563344bf3920 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563344bf3908 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563344bf38c8 <col:166> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563344bf3950 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563344bf3938 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563344bf38e8 <col:184> '_Bool' lvalue Var 0x563344bf1248 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x563344bf3a38 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563344bf39b8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563344bf3988 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563344bf3a50 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x563344bf3a10 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x563344bf39e0 <col:219> 'int' 0
|   |-BinaryOperator 0x563344bf41a8 <line:731:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x563344bf3c00 <col:3> '_Bool' lvalue Var 0x563344bf1248 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563344bf4190 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563344bf4160 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x563344bf4118 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563344bf4100 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563344bf3c20 <col:20> '_Bool' lvalue Var 0x563344bf1a10 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563344bf4148 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563344bf4130 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563344bf3c40 <col:36> '_Bool' lvalue Var 0x563344bf1248 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x563344bf40e0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x563344bf40b0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x563344bf3e50 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563344bf3d70 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563344bf3c98 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563344bf3c80 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563344bf3c60 <col:55> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563344bf3d50 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563344bf3ce8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563344bf3cd0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563344bf3cb0 <col:74> '_Bool' lvalue Var 0x563344bf1248 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x563344bf3d38 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563344bf3d20 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563344bf3d00 <col:93> '_Bool' lvalue Var 0x563344bf1800 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563344bf3e30 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563344bf3dc8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563344bf3db0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563344bf3d90 <col:112> '_Bool' lvalue Var 0x563344bf1248 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x563344bf3e18 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563344bf3e00 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563344bf3de0 <col:131> '_Bool' lvalue Var 0x563344bf1428 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x563344bf4098 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563344bf4080 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563344bf3e70 <col:148> '_Bool' lvalue Var 0x563344bf1248 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x563344bf4060 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x563344bf4030 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x563344bf3f50 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563344bf3ee8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563344bf3ed0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563344bf3e90 <col:166> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563344bf3f18 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563344bf3f00 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563344bf3eb0 <col:184> '_Bool' lvalue Var 0x563344bf1248 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x563344bf3fe8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563344bf3fa0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563344bf3f70 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563344bf4018 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x563344bf4000 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x563344bf3fc8 <col:212> '_Bool' lvalue Var 0x563344bf1248 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x563344bf4770 <line:732:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x563344bf41c8 <col:3> '_Bool' lvalue Var 0x563344bf1428 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563344bf4758 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563344bf4728 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x563344bf46e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563344bf46c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563344bf41e8 <col:20> '_Bool' lvalue Var 0x563344bf1a10 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563344bf4710 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563344bf46f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563344bf4208 <col:36> '_Bool' lvalue Var 0x563344bf1428 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x563344bf46a8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x563344bf4678 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x563344bf4418 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563344bf4338 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563344bf4260 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563344bf4248 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563344bf4228 <col:55> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563344bf4318 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563344bf42b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563344bf4298 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563344bf4278 <col:74> '_Bool' lvalue Var 0x563344bf1248 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x563344bf4300 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563344bf42e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563344bf42c8 <col:93> '_Bool' lvalue Var 0x563344bf1800 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563344bf43f8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563344bf4390 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563344bf4378 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563344bf4358 <col:112> '_Bool' lvalue Var 0x563344bf1248 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x563344bf43e0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563344bf43c8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563344bf43a8 <col:131> '_Bool' lvalue Var 0x563344bf1428 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x563344bf4660 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563344bf4648 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563344bf4438 <col:148> '_Bool' lvalue Var 0x563344bf1428 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x563344bf4628 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x563344bf45f8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x563344bf44f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563344bf44b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563344bf4498 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563344bf4458 <col:166> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563344bf44e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563344bf44c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563344bf4478 <col:184> '_Bool' lvalue Var 0x563344bf1248 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x563344bf45c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563344bf4548 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563344bf4518 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563344bf45e0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x563344bf45a0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x563344bf4570 <col:219> 'int' 0
|   |-BinaryOperator 0x563344bf47e8 <line:733:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563344bf4790 <col:3> 'int' lvalue Var 0x563344bf0980 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x563344bf47d0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563344bf47b0 <col:25> 'int' lvalue Var 0x563344bf1040 'y' 'int'
|   |-BinaryOperator 0x563344bf4918 <line:734:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x563344bf4808 <col:3> 'int' lvalue Var 0x563344bf1040 'y' 'int'
|   | `-ConditionalOperator 0x563344bf48e8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x563344bf48a0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563344bf4888 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563344bf4828 <col:7> '_Bool' lvalue Var 0x563344bf10d8 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x563344bf48b8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563344bf4848 <col:25> 'int' lvalue Var 0x563344bf1158 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x563344bf48d0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x563344bf4868 <col:37> 'int' lvalue Var 0x563344bf1040 'y' 'int'
|   |-BinaryOperator 0x563344bf49b0 <line:735:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x563344bf4938 <col:3> '_Bool' lvalue Var 0x563344bf10d8 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x563344bf4988 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563344bf4958 <col:28> 'int' 0
|   |-CallExpr 0x563344bf4a08 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563344bf49f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf49d0 <col:3> 'void ()' Function 0x563344b97570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563344bf4a60 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563344bf4a48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf4a28 <col:3> 'void ()' Function 0x563344b974b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x563344bf4ab8 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563344bf4aa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf4a80 <col:3> 'void ()' Function 0x563344b97570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563344bf4b10 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563344bf4af8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf4ad8 <col:3> 'void ()' Function 0x563344b974b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563344bf4bc8 <line:740:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x563344bf4b30 <col:3> 'int' lvalue Var 0x563344bf0740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x563344bf4ba8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x563344bf4b90 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563344bf4b50 <col:22> 'int' lvalue Var 0x563344bf0740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x563344bf4b70 <col:41> 'int' 1
|   |-CallExpr 0x563344bf4c20 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563344bf4c08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf4be8 <col:3> 'void ()' Function 0x563344b97570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x563344bf4cc8 <line:742:3, col:36>
|     `-CallExpr 0x563344bf4ca8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x563344bf4c90 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x563344bf4c40 <col:10> 'void *(void)' Function 0x563344b96fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x563344bf4e90 prev 0x563344bf0268 <line:744:1, line:772:1> line:744:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x563344bf4df8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x563344bf6668 <line:745:1, line:772:1>
|   |-CallExpr 0x563344bf4f98 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563344bf4f80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf4f60 <col:3> 'void ()' Function 0x563344b974b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563344bf5010 <line:747:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563344bf4fb8 <col:3> 'int' lvalue Var 0x563344bf1788 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x563344bf4ff8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563344bf4fd8 <col:15> 'int' lvalue Var 0x563344bf1690 'y$w_buff0' 'int'
|   |-BinaryOperator 0x563344bf5070 <line:748:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563344bf5030 <col:3> 'int' lvalue Var 0x563344bf1690 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x563344bf5050 <col:15> 'int' 1
|   |-BinaryOperator 0x563344bf50e8 <line:749:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563344bf5090 <col:3> '_Bool' lvalue Var 0x563344bf1800 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563344bf50d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563344bf50b0 <col:20> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563344bf5180 <line:750:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x563344bf5108 <col:3> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x563344bf5158 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563344bf5128 <col:27> 'int' 1
|   |-CallExpr 0x563344bf5308 <line:751:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x563344bf52f0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x563344bf51a0 <col:3> 'void (int)' Function 0x563344b97238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x563344bf52a0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x563344bf5280 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x563344bf5260 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x563344bf5218 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x563344bf5200 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x563344bf51c0 <col:23> '_Bool' lvalue Var 0x563344bf1800 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x563344bf5248 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x563344bf5230 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x563344bf51e0 <col:41> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563344bf5388 <line:752:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563344bf5330 <col:3> '_Bool' lvalue Var 0x563344bf13b0 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x563344bf5370 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563344bf5350 <col:20> '_Bool' lvalue Var 0x563344bf11d0 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x563344bf5400 <line:753:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563344bf53a8 <col:3> '_Bool' lvalue Var 0x563344bf1428 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563344bf53e8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563344bf53c8 <col:20> '_Bool' lvalue Var 0x563344bf1248 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x563344bf5478 <line:754:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563344bf5420 <col:3> '_Bool' lvalue Var 0x563344bf14a0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563344bf5460 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563344bf5440 <col:20> '_Bool' lvalue Var 0x563344bf12c0 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x563344bf54f0 <line:755:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563344bf5498 <col:3> '_Bool' lvalue Var 0x563344bf1518 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x563344bf54d8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563344bf54b8 <col:20> '_Bool' lvalue Var 0x563344bf1338 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x563344bf5588 <line:756:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x563344bf5510 <col:3> '_Bool' lvalue Var 0x563344bf12c0 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x563344bf5560 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563344bf5530 <col:27> 'int' 1
|   |-CallExpr 0x563344bf55e0 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563344bf55c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf55a8 <col:3> 'void ()' Function 0x563344b97570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563344bf5638 <line:758:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563344bf5620 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf5600 <col:3> 'void ()' Function 0x563344b974b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563344bf5698 <line:759:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x563344bf5658 <col:3> 'int' lvalue Var 0x563344bf1900 'z' 'int'
|   | `-IntegerLiteral 0x563344bf5678 <col:7> 'int' 1
|   |-CallExpr 0x563344bf56f0 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563344bf56d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf56b8 <col:3> 'void ()' Function 0x563344b97570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563344bf5748 <line:761:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563344bf5730 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf5710 <col:3> 'void ()' Function 0x563344b974b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563344bf5a30 <line:762:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x563344bf5768 <col:3> 'int' lvalue Var 0x563344bf1040 'y' 'int'
|   | `-ConditionalOperator 0x563344bf5a00 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x563344bf5828 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x563344bf57e0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x563344bf57c8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x563344bf5788 <col:7> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x563344bf5810 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x563344bf57f8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x563344bf57a8 <col:25> '_Bool' lvalue Var 0x563344bf12c0 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x563344bf59e8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563344bf5848 <col:42> 'int' lvalue Var 0x563344bf1690 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x563344bf59c8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x563344bf5998 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x563344bf5908 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563344bf58c0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563344bf58a8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563344bf5868 <col:55> '_Bool' lvalue Var 0x563344bf1800 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563344bf58f0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563344bf58d8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563344bf5888 <col:73> '_Bool' lvalue Var 0x563344bf14a0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x563344bf5968 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563344bf5928 <col:90> 'int' lvalue Var 0x563344bf1788 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x563344bf5980 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563344bf5948 <col:102> 'int' lvalue Var 0x563344bf1040 'y' 'int'
|   |-BinaryOperator 0x563344bf5c38 <line:763:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563344bf5a50 <col:3> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563344bf5c20 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563344bf5bf0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563344bf5b10 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563344bf5ac8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563344bf5ab0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563344bf5a70 <col:20> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563344bf5af8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563344bf5ae0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563344bf5a90 <col:38> '_Bool' lvalue Var 0x563344bf12c0 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563344bf5ba8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563344bf5b60 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563344bf5b30 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563344bf5bd8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563344bf5bc0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563344bf5b88 <col:66> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563344bf5f20 <line:764:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563344bf5c58 <col:3> '_Bool' lvalue Var 0x563344bf1800 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563344bf5f08 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563344bf5ed8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563344bf5df8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563344bf5d18 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563344bf5cd0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563344bf5cb8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563344bf5c78 <col:20> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563344bf5d00 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563344bf5ce8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563344bf5c98 <col:38> '_Bool' lvalue Var 0x563344bf12c0 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x563344bf5dd8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563344bf5d90 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563344bf5d78 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563344bf5d38 <col:56> '_Bool' lvalue Var 0x563344bf1800 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563344bf5dc0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563344bf5da8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563344bf5d58 <col:74> '_Bool' lvalue Var 0x563344bf14a0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563344bf5e90 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563344bf5e48 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563344bf5e18 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563344bf5ec0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563344bf5ea8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563344bf5e70 <col:102> '_Bool' lvalue Var 0x563344bf1800 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x563344bf6138 <line:765:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563344bf5f40 <col:3> '_Bool' lvalue Var 0x563344bf12c0 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563344bf6120 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563344bf60f0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563344bf6010 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563344bf5fc8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563344bf5fb0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563344bf5f70 <col:20> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563344bf5ff8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563344bf5fe0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563344bf5f90 <col:38> '_Bool' lvalue Var 0x563344bf12c0 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563344bf60a8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563344bf6060 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563344bf6030 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563344bf60d8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563344bf60c0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563344bf6088 <col:66> '_Bool' lvalue Var 0x563344bf12c0 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x563344bf6420 <line:766:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563344bf6158 <col:3> '_Bool' lvalue Var 0x563344bf14a0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563344bf6408 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563344bf63d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563344bf62f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563344bf6218 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563344bf61d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563344bf61b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563344bf6178 <col:20> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563344bf6200 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563344bf61e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563344bf6198 <col:38> '_Bool' lvalue Var 0x563344bf12c0 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x563344bf62d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563344bf6290 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563344bf6278 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563344bf6238 <col:56> '_Bool' lvalue Var 0x563344bf1800 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563344bf62c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563344bf62a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563344bf6258 <col:74> '_Bool' lvalue Var 0x563344bf14a0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563344bf6390 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563344bf6348 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563344bf6318 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563344bf63c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563344bf63a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563344bf6370 <col:102> '_Bool' lvalue Var 0x563344bf14a0 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x563344bf6478 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563344bf6460 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf6440 <col:3> 'void ()' Function 0x563344b97570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563344bf64d0 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563344bf64b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf6498 <col:3> 'void ()' Function 0x563344b974b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563344bf6588 <line:769:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x563344bf64f0 <col:3> 'int' lvalue Var 0x563344bf0740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x563344bf6568 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x563344bf6550 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563344bf6510 <col:22> 'int' lvalue Var 0x563344bf0740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x563344bf6530 <col:41> 'int' 1
|   |-CallExpr 0x563344bf65e0 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563344bf65c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf65a8 <col:3> 'void ()' Function 0x563344b97570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x563344bf6658 <line:771:3, col:36>
|     `-CallExpr 0x563344bf6638 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x563344bf6620 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x563344bf6600 <col:10> 'void *(void)' Function 0x563344b96fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x563344bf67f8 prev 0x563344bf03c0 <line:773:1, line:795:1> line:773:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x563344bf6760 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x563344bf7b68 <line:774:1, line:795:1>
|   |-CallExpr 0x563344bf68d8 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563344bf68c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf68a0 <col:3> 'void ()' Function 0x563344b974b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563344bf6938 <line:776:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x563344bf68f8 <col:3> 'int' lvalue Var 0x563344bf1900 'z' 'int'
|   | `-IntegerLiteral 0x563344bf6918 <col:7> 'int' 2
|   |-CallExpr 0x563344bf6990 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563344bf6978 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf6958 <col:3> 'void ()' Function 0x563344b97570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563344bf69e8 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563344bf69d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf69b0 <col:3> 'void ()' Function 0x563344b974b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563344bf6a60 <line:779:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563344bf6a08 <col:3> 'int' lvalue Var 0x563344bf0aa0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x563344bf6a48 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563344bf6a28 <col:25> 'int' lvalue Var 0x563344bf1900 'z' 'int'
|   |-CallExpr 0x563344bf6ab8 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563344bf6aa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf6a80 <col:3> 'void ()' Function 0x563344b97570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563344bf6b10 <line:781:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563344bf6af8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf6ad8 <col:3> 'void ()' Function 0x563344b974b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563344bf6b88 <line:782:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563344bf6b30 <col:3> 'int' lvalue Var 0x563344bf0bc0 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x563344bf6b70 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563344bf6b50 <col:25> 'int' lvalue Var 0x563344bf0ce0 'a' 'int'
|   |-CallExpr 0x563344bf6be0 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563344bf6bc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf6ba8 <col:3> 'void ()' Function 0x563344b97570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563344bf6c38 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563344bf6c20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf6c00 <col:3> 'void ()' Function 0x563344b974b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563344bf6f20 <line:785:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x563344bf6c58 <col:3> 'int' lvalue Var 0x563344bf1040 'y' 'int'
|   | `-ConditionalOperator 0x563344bf6ef0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x563344bf6d18 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x563344bf6cd0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x563344bf6cb8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x563344bf6c78 <col:7> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x563344bf6d00 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x563344bf6ce8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x563344bf6c98 <col:25> '_Bool' lvalue Var 0x563344bf1338 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x563344bf6ed8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563344bf6d38 <col:42> 'int' lvalue Var 0x563344bf1690 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x563344bf6eb8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x563344bf6e88 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x563344bf6df8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563344bf6db0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563344bf6d98 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563344bf6d58 <col:55> '_Bool' lvalue Var 0x563344bf1800 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563344bf6de0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563344bf6dc8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563344bf6d78 <col:73> '_Bool' lvalue Var 0x563344bf1518 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x563344bf6e58 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563344bf6e18 <col:90> 'int' lvalue Var 0x563344bf1788 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x563344bf6e70 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563344bf6e38 <col:102> 'int' lvalue Var 0x563344bf1040 'y' 'int'
|   |-BinaryOperator 0x563344bf7148 <line:786:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563344bf6f40 <col:3> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563344bf7130 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563344bf7100 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563344bf7020 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563344bf6fd8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563344bf6fc0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563344bf6f80 <col:20> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563344bf7008 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563344bf6ff0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563344bf6fa0 <col:38> '_Bool' lvalue Var 0x563344bf1338 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x563344bf70b8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563344bf7070 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563344bf7040 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563344bf70e8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563344bf70d0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563344bf7098 <col:66> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563344bf7430 <line:787:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563344bf7168 <col:3> '_Bool' lvalue Var 0x563344bf1800 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563344bf7418 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563344bf73e8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563344bf7308 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563344bf7228 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563344bf71e0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563344bf71c8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563344bf7188 <col:20> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563344bf7210 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563344bf71f8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563344bf71a8 <col:38> '_Bool' lvalue Var 0x563344bf1338 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x563344bf72e8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563344bf72a0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563344bf7288 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563344bf7248 <col:56> '_Bool' lvalue Var 0x563344bf1800 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563344bf72d0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563344bf72b8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563344bf7268 <col:74> '_Bool' lvalue Var 0x563344bf1518 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x563344bf73a0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563344bf7358 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563344bf7328 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563344bf73d0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563344bf73b8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563344bf7380 <col:102> '_Bool' lvalue Var 0x563344bf1800 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x563344bf7638 <line:788:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563344bf7450 <col:3> '_Bool' lvalue Var 0x563344bf1338 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x563344bf7620 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563344bf75f0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563344bf7510 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563344bf74c8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563344bf74b0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563344bf7470 <col:20> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563344bf74f8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563344bf74e0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563344bf7490 <col:38> '_Bool' lvalue Var 0x563344bf1338 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x563344bf75a8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563344bf7560 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563344bf7530 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563344bf75d8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563344bf75c0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563344bf7588 <col:66> '_Bool' lvalue Var 0x563344bf1338 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x563344bf7920 <line:789:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563344bf7658 <col:3> '_Bool' lvalue Var 0x563344bf1518 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x563344bf7908 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563344bf78d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563344bf77f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563344bf7718 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563344bf76d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563344bf76b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563344bf7678 <col:20> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563344bf7700 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563344bf76e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563344bf7698 <col:38> '_Bool' lvalue Var 0x563344bf1338 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x563344bf77d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563344bf7790 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563344bf7778 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563344bf7738 <col:56> '_Bool' lvalue Var 0x563344bf1800 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563344bf77c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563344bf77a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563344bf7758 <col:74> '_Bool' lvalue Var 0x563344bf1518 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x563344bf7890 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563344bf7848 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563344bf7818 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563344bf78c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563344bf78a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563344bf7870 <col:102> '_Bool' lvalue Var 0x563344bf1518 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x563344bf7978 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563344bf7960 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf7940 <col:3> 'void ()' Function 0x563344b97570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563344bf79d0 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563344bf79b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf7998 <col:3> 'void ()' Function 0x563344b974b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563344bf7a88 <line:792:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x563344bf79f0 <col:3> 'int' lvalue Var 0x563344bf0740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x563344bf7a68 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x563344bf7a50 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563344bf7a10 <col:22> 'int' lvalue Var 0x563344bf0740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x563344bf7a30 <col:41> 'int' 1
|   |-CallExpr 0x563344bf7ae0 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563344bf7ac8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563344bf7aa8 <col:3> 'void ()' Function 0x563344b97570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x563344bf7b58 <line:794:3, col:36>
|     `-CallExpr 0x563344bf7b38 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x563344bf7b20 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x563344bf7b00 <col:10> 'void *(void)' Function 0x563344b96fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x563344bf7c38 prev 0x563344bf0488 <line:796:1, line:798:1> line:796:6 fence 'void ()'
| `-CompoundStmt 0x563344bf7cd8 <line:797:1, line:798:1>
|-FunctionDecl 0x563344bf7d08 prev 0x563344bf0548 <line:799:1, line:801:1> line:799:6 isync 'void ()'
| `-CompoundStmt 0x563344bf7da8 <line:800:1, line:801:1>
|-FunctionDecl 0x563344bf7dd8 prev 0x563344bf0608 <line:802:1, line:804:1> line:802:6 lwfence 'void ()'
| `-CompoundStmt 0x563344bf7e78 <line:803:1, line:804:1>
`-FunctionDecl 0x563344bf7f90 <line:805:1, line:829:1> line:805:5 main 'int ()'
  `-CompoundStmt 0x563344bf9d00 <line:806:1, line:829:1>
    |-DeclStmt 0x563344bf80a8 <line:807:3, col:17>
    | `-VarDecl 0x563344bf8040 <col:3, col:13> col:13 used t650 'pthread_t':'unsigned long'
    |-CallExpr 0x563344bf82b8 <line:808:3, col:53> 'int'
    | |-ImplicitCastExpr 0x563344bf82a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563344bf80c0 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x563344bd79d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x563344bf8100 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x563344bf80e0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x563344bf8040 't650' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x563344bf82f8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x563344bf8178 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x563344bf8150 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x563344bf8118 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x563344bf8310 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563344bf8198 <col:38> 'void *(void *)' Function 0x563344bf1b28 'P0' 'void *(void *)'
    | `-ParenExpr 0x563344bf8218 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x563344bf81f0 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x563344bf81b8 <col:51> 'int' 0
    |-DeclStmt 0x563344bf83a0 <line:809:3, col:17>
    | `-VarDecl 0x563344bf8338 <col:3, col:13> col:13 used t651 'pthread_t':'unsigned long'
    |-CallExpr 0x563344bf8548 <line:810:3, col:53> 'int'
    | |-ImplicitCastExpr 0x563344bf8530 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563344bf83b8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x563344bd79d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x563344bf83f8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x563344bf83d8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x563344bf8338 't651' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x563344bf8588 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x563344bf8470 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x563344bf8448 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x563344bf8410 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x563344bf85a0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563344bf8490 <col:38> 'void *(void *)' Function 0x563344bf4e90 'P1' 'void *(void *)'
    | `-ParenExpr 0x563344bf8510 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x563344bf84e8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x563344bf84b0 <col:51> 'int' 0
    |-DeclStmt 0x563344bf8630 <line:811:3, col:17>
    | `-VarDecl 0x563344bf85c8 <col:3, col:13> col:13 used t652 'pthread_t':'unsigned long'
    |-CallExpr 0x563344bf87d8 <line:812:3, col:53> 'int'
    | |-ImplicitCastExpr 0x563344bf87c0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563344bf8648 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x563344bd79d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x563344bf8688 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x563344bf8668 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x563344bf85c8 't652' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x563344bf8818 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x563344bf8700 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x563344bf86d8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x563344bf86a0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x563344bf8830 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563344bf8720 <col:38> 'void *(void *)' Function 0x563344bf67f8 'P2' 'void *(void *)'
    | `-ParenExpr 0x563344bf87a0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x563344bf8778 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x563344bf8740 <col:51> 'int' 0
    |-CallExpr 0x563344bf8880 <line:813:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563344bf8868 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563344bf8848 <col:3> 'void ()' Function 0x563344b974b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563344bf8950 <line:814:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x563344bf88a0 <col:3> '_Bool' lvalue Var 0x563344bf0d78 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x563344bf8938 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x563344bf8918 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x563344bf8900 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x563344bf88c0 <col:21> 'int' lvalue Var 0x563344bf0740 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x563344bf88e0 <col:41> 'int' 3
    |-CallExpr 0x563344bf89a8 <line:815:3, col:25> 'void'
    | `-ImplicitCastExpr 0x563344bf8990 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563344bf8970 <col:3> 'void ()' Function 0x563344b97570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563344bf8a20 <line:816:3, col:36> 'void'
    | |-ImplicitCastExpr 0x563344bf8a08 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563344bf89c8 <col:3> 'void (int)' Function 0x563344b96e50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x563344bf8a60 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x563344bf8a48 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x563344bf89e8 <col:21> '_Bool' lvalue Var 0x563344bf0d78 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x563344bf8ab0 <line:817:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563344bf8a98 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563344bf8a78 <col:3> 'void ()' Function 0x563344b974b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563344bf8d98 <line:818:3, col:103> 'int' '='
    | |-DeclRefExpr 0x563344bf8ad0 <col:3> 'int' lvalue Var 0x563344bf1040 'y' 'int'
    | `-ConditionalOperator 0x563344bf8d68 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x563344bf8b90 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x563344bf8b48 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x563344bf8b30 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x563344bf8af0 <col:7> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x563344bf8b78 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x563344bf8b60 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x563344bf8b10 <col:25> '_Bool' lvalue Var 0x563344bf11d0 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x563344bf8d50 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x563344bf8bb0 <col:42> 'int' lvalue Var 0x563344bf1690 'y$w_buff0' 'int'
    |   `-ParenExpr 0x563344bf8d30 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x563344bf8d00 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x563344bf8c70 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x563344bf8c28 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x563344bf8c10 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x563344bf8bd0 <col:55> '_Bool' lvalue Var 0x563344bf1800 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x563344bf8c58 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x563344bf8c40 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x563344bf8bf0 <col:73> '_Bool' lvalue Var 0x563344bf13b0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x563344bf8cd0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x563344bf8c90 <col:90> 'int' lvalue Var 0x563344bf1788 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x563344bf8ce8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x563344bf8cb0 <col:102> 'int' lvalue Var 0x563344bf1040 'y' 'int'
    |-BinaryOperator 0x563344bf8fb8 <line:819:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x563344bf8db8 <col:3> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x563344bf8fa0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563344bf8f58 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x563344bf8e78 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x563344bf8e30 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x563344bf8e18 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x563344bf8dd8 <col:20> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x563344bf8e60 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x563344bf8e48 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x563344bf8df8 <col:38> '_Bool' lvalue Var 0x563344bf11d0 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563344bf8f10 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563344bf8ec8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563344bf8e98 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x563344bf8f40 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563344bf8f28 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563344bf8ef0 <col:66> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x563344bf92a0 <line:820:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x563344bf8fd8 <col:3> '_Bool' lvalue Var 0x563344bf1800 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x563344bf9288 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563344bf9258 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x563344bf9178 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x563344bf9098 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x563344bf9050 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x563344bf9038 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x563344bf8ff8 <col:20> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x563344bf9080 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x563344bf9068 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x563344bf9018 <col:38> '_Bool' lvalue Var 0x563344bf11d0 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x563344bf9158 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x563344bf9110 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x563344bf90f8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x563344bf90b8 <col:56> '_Bool' lvalue Var 0x563344bf1800 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x563344bf9140 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x563344bf9128 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x563344bf90d8 <col:74> '_Bool' lvalue Var 0x563344bf13b0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563344bf9210 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563344bf91c8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563344bf9198 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x563344bf9240 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563344bf9228 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563344bf91f0 <col:102> '_Bool' lvalue Var 0x563344bf1800 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x563344bf94a8 <line:821:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x563344bf92c0 <col:3> '_Bool' lvalue Var 0x563344bf11d0 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x563344bf9490 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563344bf9460 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x563344bf9380 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x563344bf9338 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x563344bf9320 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x563344bf92e0 <col:20> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x563344bf9368 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x563344bf9350 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x563344bf9300 <col:38> '_Bool' lvalue Var 0x563344bf11d0 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563344bf9418 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563344bf93d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563344bf93a0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x563344bf9448 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563344bf9430 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563344bf93f8 <col:66> '_Bool' lvalue Var 0x563344bf11d0 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x563344bf9790 <line:822:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x563344bf94c8 <col:3> '_Bool' lvalue Var 0x563344bf13b0 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x563344bf9778 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563344bf9748 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x563344bf9668 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x563344bf9588 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x563344bf9540 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x563344bf9528 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x563344bf94e8 <col:20> '_Bool' lvalue Var 0x563344bf1708 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x563344bf9570 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x563344bf9558 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x563344bf9508 <col:38> '_Bool' lvalue Var 0x563344bf11d0 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x563344bf9648 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x563344bf9600 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x563344bf95e8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x563344bf95a8 <col:56> '_Bool' lvalue Var 0x563344bf1800 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x563344bf9630 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x563344bf9618 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x563344bf95c8 <col:74> '_Bool' lvalue Var 0x563344bf13b0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563344bf9700 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563344bf96b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563344bf9688 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x563344bf9730 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563344bf9718 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563344bf96e0 <col:102> '_Bool' lvalue Var 0x563344bf13b0 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x563344bf97e8 <line:823:3, col:25> 'void'
    | `-ImplicitCastExpr 0x563344bf97d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563344bf97b0 <col:3> 'void ()' Function 0x563344b97570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563344bf9840 <line:824:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563344bf9828 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563344bf9808 <col:3> 'void ()' Function 0x563344b974b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563344bf9ba8 <line:825:3, col:141> '_Bool' '='
    | |-DeclRefExpr 0x563344bf9860 <col:3> '_Bool' lvalue Var 0x563344bf0df0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x563344bf9b90 <col:21, col:141> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x563344bf9b78 <col:21, col:141> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x563344bf9b58 <col:22, col:141> 'int'
    |       `-BinaryOperator 0x563344bf9b38 <col:23, col:140> 'int' '&&'
    |         |-BinaryOperator 0x563344bf9aa0 <col:23, col:112> 'int' '&&'
    |         | |-BinaryOperator 0x563344bf9a08 <col:23, col:84> 'int' '&&'
    |         | | |-BinaryOperator 0x563344bf9970 <col:23, col:56> 'int' '&&'
    |         | | | |-BinaryOperator 0x563344bf98d8 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x563344bf98c0 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x563344bf9880 <col:23> 'int' lvalue Var 0x563344bf1900 'z' 'int'
    |         | | | | `-IntegerLiteral 0x563344bf98a0 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x563344bf9950 <col:33, col:56> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x563344bf9938 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x563344bf98f8 <col:33> 'int' lvalue Var 0x563344bf0860 '__unbuffered_p0_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x563344bf9918 <col:56> 'int' 1
    |         | | `-BinaryOperator 0x563344bf99e8 <col:61, col:84> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x563344bf99d0 <col:61> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x563344bf9990 <col:61> 'int' lvalue Var 0x563344bf0980 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x563344bf99b0 <col:84> 'int' 0
    |         | `-BinaryOperator 0x563344bf9a80 <col:89, col:112> 'int' '=='
    |         |   |-ImplicitCastExpr 0x563344bf9a68 <col:89> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x563344bf9a28 <col:89> 'int' lvalue Var 0x563344bf0aa0 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x563344bf9a48 <col:112> 'int' 2
    |         `-BinaryOperator 0x563344bf9b18 <col:117, col:140> 'int' '=='
    |           |-ImplicitCastExpr 0x563344bf9b00 <col:117> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x563344bf9ac0 <col:117> 'int' lvalue Var 0x563344bf0bc0 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x563344bf9ae0 <col:140> 'int' 0
    |-CallExpr 0x563344bf9c00 <line:826:3, col:25> 'void'
    | `-ImplicitCastExpr 0x563344bf9be8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563344bf9bc8 <col:3> 'void ()' Function 0x563344b97570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563344bf9c78 <line:827:3, col:36> 'void'
    | |-ImplicitCastExpr 0x563344bf9c60 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563344bf9c20 <col:3> 'void (int)' Function 0x563344b97238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x563344bf9cb8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x563344bf9ca0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x563344bf9c40 <col:21> '_Bool' lvalue Var 0x563344bf0df0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x563344bf9cf0 <line:828:3, col:10>
      `-IntegerLiteral 0x563344bf9cd0 <col:10> 'int' 0
