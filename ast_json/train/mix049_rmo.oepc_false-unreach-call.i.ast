TranslationUnitDecl 0x55fe8e7fbf88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55fe8e7fc848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55fe8e7fc520 '__int128'
|-TypedefDecl 0x55fe8e7fc8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55fe8e7fc540 'unsigned __int128'
|-TypedefDecl 0x55fe8e7fcbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55fe8e7fc990 'struct __NSConstantString_tag'
|   `-Record 0x55fe8e7fc910 '__NSConstantString_tag'
|-TypedefDecl 0x55fe8e7fcc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55fe8e7fcc20 'char *'
|   `-BuiltinType 0x55fe8e7fc020 'char'
|-TypedefDecl 0x55fe8e83bb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55fe8e7fcf00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55fe8e7fcd40 'struct __va_list_tag'
|     `-Record 0x55fe8e7fccc0 '__va_list_tag'
|-FunctionDecl 0x55fe8e83bca0 <pthread-wmm/mix049_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55fe8e83bbd0 <col:31> col:34 'int'
|-FunctionDecl 0x55fe8e83be68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55fe8e83bf90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55fe8e83c0d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55fe8e83c048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55fe8e83c308 <col:40, col:99>
|   |-IfStmt 0x55fe8e83c2d8 <col:42, col:88>
|   | |-UnaryOperator 0x55fe8e83c1b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55fe8e83c1a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55fe8e83c180 <col:47> 'int' lvalue ParmVar 0x55fe8e83c048 'expression' 'int'
|   | `-CompoundStmt 0x55fe8e83c2c0 <col:59, col:88>
|   |   `-LabelStmt 0x55fe8e83c2a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55fe8e83c238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55fe8e83c220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55fe8e83c1d0 <col:68> 'void () __attribute__((noreturn))' Function 0x55fe8e83bf90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55fe8e83c2f0 <col:89>
|   `-ReturnStmt 0x55fe8e83c2f8 <col:91>
|-FunctionDecl 0x55fe8e83c350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55fe8e83c410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55fe8e83c790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55fe8e83c4c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55fe8e83c548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55fe8e83c5c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55fe8e83c648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55fe8e83c850 <line:10:22>
|-FunctionDecl 0x55fe8e8628a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55fe8e83c8c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55fe8e83c940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55fe8e83c9c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55fe8e83ca40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55fe8e862960 <line:13:22>
|-FunctionDecl 0x55fe8e862c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55fe8e8629d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55fe8e862a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55fe8e862ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55fe8e862cc8 <line:15:22>
|-TypedefDecl 0x55fe8e862d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55fe8e7fc0e0 'unsigned char'
|-TypedefDecl 0x55fe8e862da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55fe8e7fc100 'unsigned short'
|-TypedefDecl 0x55fe8e862e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55fe8e7fc120 'unsigned int'
|-TypedefDecl 0x55fe8e862e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55fe8e7fc140 'unsigned long'
|-TypedefDecl 0x55fe8e862ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55fe8e7fc040 'signed char'
|-TypedefDecl 0x55fe8e862f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55fe8e7fc0e0 'unsigned char'
|-TypedefDecl 0x55fe8e862fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55fe8e7fc060 'short'
|-TypedefDecl 0x55fe8e863048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55fe8e7fc100 'unsigned short'
|-TypedefDecl 0x55fe8e8630b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55fe8e7fc080 'int'
|-TypedefDecl 0x55fe8e863128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55fe8e7fc120 'unsigned int'
|-TypedefDecl 0x55fe8e863198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55fe8e7fc0a0 'long'
|-TypedefDecl 0x55fe8e863208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55fe8e7fc140 'unsigned long'
|-TypedefDecl 0x55fe8e863278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55fe8e7fc0a0 'long'
|-TypedefDecl 0x55fe8e8632e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55fe8e7fc140 'unsigned long'
|-TypedefDecl 0x55fe8e863358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55fe8e7fc140 'unsigned long'
|-TypedefDecl 0x55fe8e8633c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55fe8e7fc120 'unsigned int'
|-TypedefDecl 0x55fe8e863438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55fe8e7fc120 'unsigned int'
|-TypedefDecl 0x55fe8e8634a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55fe8e7fc140 'unsigned long'
|-TypedefDecl 0x55fe8e863518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55fe8e7fc140 'unsigned long'
|-TypedefDecl 0x55fe8e863588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55fe8e7fc120 'unsigned int'
|-TypedefDecl 0x55fe8e8635f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55fe8e7fc140 'unsigned long'
|-TypedefDecl 0x55fe8e863668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55fe8e7fc0a0 'long'
|-TypedefDecl 0x55fe8e8636d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55fe8e7fc0a0 'long'
|-TypedefDecl 0x55fe8e863748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55fe8e7fc080 'int'
|-RecordDecl 0x55fe8e8637a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55fe8e863918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55fe8e8639d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55fe8e863970 'struct __fsid_t' sugar
|   `-RecordType 0x55fe8e863820 '__fsid_t'
|     `-Record 0x55fe8e8637a0 ''
|-TypedefDecl 0x55fe8e863a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55fe8e7fc0a0 'long'
|-TypedefDecl 0x55fe8e863ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55fe8e7fc140 'unsigned long'
|-TypedefDecl 0x55fe8e863b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55fe8e7fc140 'unsigned long'
|-TypedefDecl 0x55fe8e863ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55fe8e7fc120 'unsigned int'
|-TypedefDecl 0x55fe8e863c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55fe8e7fc0a0 'long'
|-TypedefDecl 0x55fe8e863c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55fe8e7fc120 'unsigned int'
|-TypedefDecl 0x55fe8e863cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55fe8e7fc0a0 'long'
|-TypedefDecl 0x55fe8e863d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55fe8e7fc080 'int'
|-TypedefDecl 0x55fe8e863dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55fe8e7fc080 'int'
|-TypedefDecl 0x55fe8e863e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55fe8e7fc080 'int'
|-TypedefDecl 0x55fe8e863eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55fe8e7fc7a0 'void *'
|   `-BuiltinType 0x55fe8e7fbfe0 'void'
|-TypedefDecl 0x55fe8e863f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55fe8e7fc0a0 'long'
|-TypedefDecl 0x55fe8e863f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55fe8e7fc0a0 'long'
|-TypedefDecl 0x55fe8e864008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55fe8e7fc0a0 'long'
|-TypedefDecl 0x55fe8e864078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55fe8e7fc140 'unsigned long'
|-TypedefDecl 0x55fe8e8640e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55fe8e7fc140 'unsigned long'
|-TypedefDecl 0x55fe8e864158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55fe8e7fc140 'unsigned long'
|-TypedefDecl 0x55fe8e8641c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55fe8e7fc140 'unsigned long'
|-TypedefDecl 0x55fe8e864238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55fe8e7fc0a0 'long'
|-TypedefDecl 0x55fe8e8642a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55fe8e7fc0a0 'long'
|-TypedefDecl 0x55fe8e864318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55fe8e7fc0a0 'long'
|-TypedefDecl 0x55fe8e864388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55fe8e7fc140 'unsigned long'
|-TypedefDecl 0x55fe8e864418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55fe8e8643e0 '__off64_t' sugar
|   |-Typedef 0x55fe8e8636d8 '__off64_t'
|   `-BuiltinType 0x55fe8e7fc0a0 'long'
|-TypedefDecl 0x55fe8e864510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55fe8e8644d0 '__quad_t *'
|   `-TypedefType 0x55fe8e864470 '__quad_t' sugar
|     |-Typedef 0x55fe8e863278 '__quad_t'
|     `-BuiltinType 0x55fe8e7fc0a0 'long'
|-TypedefDecl 0x55fe8e864580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55fe8e7fcc20 'char *'
|   `-BuiltinType 0x55fe8e7fc020 'char'
|-TypedefDecl 0x55fe8e8645f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55fe8e7fc0a0 'long'
|-TypedefDecl 0x55fe8e864660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55fe8e7fc120 'unsigned int'
|-FunctionDecl 0x55fe8e8647a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55fe8e8646d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55fe8e864ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55fe8e864ad8 <line:72:3, col:34>
|     `-CallExpr 0x55fe8e864a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55fe8e864a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55fe8e864a10 <col:10> '<builtin fn type>' Function 0x55fe8e864880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55fe8e864ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55fe8e864a30 <col:29> 'unsigned int' lvalue ParmVar 0x55fe8e8646d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55fe8e864880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55fe8e864920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55fe8e864990 <col:10> Implicit
| `-ConstAttr 0x55fe8e8649e8 <col:10> Implicit
|-FunctionDecl 0x55fe8e864c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55fe8e864b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55fe8e864f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55fe8e864f48 <line:77:3, col:34>
|     `-CallExpr 0x55fe8e864f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55fe8e864ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55fe8e864e78 <col:10> '<builtin fn type>' Function 0x55fe8e864ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55fe8e864f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55fe8e864e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55fe8e864b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55fe8e864ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55fe8e864d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55fe8e864df8 <col:10> Implicit
| `-ConstAttr 0x55fe8e864e50 <col:10> Implicit
|-TypedefDecl 0x55fe8e864f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55fe8e7fc140 'unsigned long'
|-TypedefDecl 0x55fe8e865018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55fe8e864fe0 '__time_t' sugar
|   |-Typedef 0x55fe8e863c18 '__time_t'
|   `-BuiltinType 0x55fe8e7fc0a0 'long'
|-RecordDecl 0x55fe8e865070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55fe8e865128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55fe8e8651b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55fe8e865248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55fe8e865210 '__pid_t' sugar
|   |-Typedef 0x55fe8e863748 '__pid_t'
|   `-BuiltinType 0x55fe8e7fc080 'int'
|-RecordDecl 0x55fe8e8652a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55fe8e865360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55fe8e8653b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55fe8e865470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55fe8e8654d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55fe8e7fc140 'unsigned long'
|-RecordDecl 0x55fe8e865530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55fe8e8657c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55fe8e8678b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55fe8e865810 'struct cpu_set_t' sugar
|   `-RecordType 0x55fe8e8655b0 'cpu_set_t'
|     `-Record 0x55fe8e865530 ''
|-FunctionDecl 0x55fe8e867b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55fe8e867958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55fe8e867a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55fe8e867c38 <line:107:19>
|-FunctionDecl 0x55fe8e867e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55fe8e867ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55fe8e867eb8 <col:69>
|-FunctionDecl 0x55fe8e868030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55fe8e867f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55fe8e8680d8 <col:64>
|-FunctionDecl 0x55fe8e868398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55fe8e868140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55fe8e868278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55fe8e868448 <line:113:22>
|-FunctionDecl 0x55fe8e8686c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55fe8e8684b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55fe8e8685a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55fe8e868778 <col:88>
|-FunctionDecl 0x55fe8e868a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55fe8e8687e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55fe8e8688c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55fe8e868950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55fe8e868b50 <col:62>
|-FunctionDecl 0x55fe8e868cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55fe8e868bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55fe8e868d70 <col:63>
|-FunctionDecl 0x55fe8e868e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55fe8e868f38 <col:47>
|-FunctionDecl 0x55fe8e869040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55fe8e868fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55fe8e8690e8 <col:69>
|-FunctionDecl 0x55fe8e8691f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55fe8e869158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55fe8e869298 <col:69>
|-FunctionDecl 0x55fe8e869558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55fe8e869300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55fe8e869438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55fe8e869608 <col:88>
|-TypedefDecl 0x55fe8e869698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55fe8e869660 '__clock_t' sugar
|   |-Typedef 0x55fe8e863a58 '__clock_t'
|   `-BuiltinType 0x55fe8e7fc0a0 'long'
|-TypedefDecl 0x55fe8e869728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55fe8e8696f0 '__clockid_t' sugar
|   |-Typedef 0x55fe8e863e48 '__clockid_t'
|   `-BuiltinType 0x55fe8e7fc080 'int'
|-TypedefDecl 0x55fe8e8697b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55fe8e869780 '__timer_t' sugar
|   |-Typedef 0x55fe8e863eb8 '__timer_t'
|   `-PointerType 0x55fe8e7fc7a0 'void *'
|     `-BuiltinType 0x55fe8e7fbfe0 'void'
|-RecordDecl 0x55fe8e869810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55fe8e8698e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55fe8e869950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55fe8e8699b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55fe8e869a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55fe8e869a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55fe8e869af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55fe8e869b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55fe8e869bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55fe8e869c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55fe8e869c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55fe8e869cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55fe8e869d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55fe8e869e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55fe8e869e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55fe8e869f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55fe8e86a100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55fe8e86a1a0 <col:45>
|-FunctionDecl 0x55fe8e86a380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55fe8e86a270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55fe8e86a428 <col:54>
|-FunctionDecl 0x55fe8e86a628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55fe8e86a490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55fe8e86a508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55fe8e86a6d8 <line:157:22>
| `-ConstAttr 0x55fe8e86a730 <col:63>
|-FunctionDecl 0x55fe8e86b560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55fe8e86a828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55fe8e86b608 <col:56>
|-FunctionDecl 0x55fe8e86b9b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55fe8e86b678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55fe8e86b6f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55fe8e86b770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55fe8e86b868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55fe8e86ba70 <col:54>
|-RecordDecl 0x55fe8e86bac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55fe8e86bb78 parent 0x55fe8e7fbf88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55fe8e86bdd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55fe8e86be78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55fe8e86bee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55fe8e86bf48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55fe8e86c038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55fe8e86c158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55fe8e86c100 'struct __locale_struct *'
|   `-ElaboratedType 0x55fe8e86c090 'struct __locale_struct' sugar
|     `-RecordType 0x55fe8e86bb50 'struct __locale_struct'
|       `-Record 0x55fe8e86bac8 '__locale_struct'
|-TypedefDecl 0x55fe8e86c208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55fe8e86c1d0 '__locale_t' sugar
|   |-Typedef 0x55fe8e86c158 '__locale_t'
|   `-PointerType 0x55fe8e86c100 'struct __locale_struct *'
|     `-ElaboratedType 0x55fe8e86c090 'struct __locale_struct' sugar
|       `-RecordType 0x55fe8e86bb50 'struct __locale_struct'
|         `-Record 0x55fe8e86bac8 '__locale_struct'
|-FunctionDecl 0x55fe8e86c610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55fe8e86c278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55fe8e86c2f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55fe8e86c370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55fe8e86c400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55fe8e86c478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55fe8e86c6d8 <col:40>
|-FunctionDecl 0x55fe8e86c8c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55fe8e86c7a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55fe8e86c970 <col:66>
|-FunctionDecl 0x55fe8e86ca80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55fe8e86c9d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55fe8e86cb28 <col:69>
|-FunctionDecl 0x55fe8e86cd58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55fe8e86cb90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55fe8e86cc20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55fe8e86ce08 <col:52>
|-FunctionDecl 0x55fe8e86cfb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55fe8e86ce70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55fe8e86cf00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55fe8e86d060 <col:55>
|-FunctionDecl 0x55fe8e86d1f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55fe8e86d0e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55fe8e86d2a0 <col:62>
|-FunctionDecl 0x55fe8e86d418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55fe8e86d308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55fe8e86d4c0 <col:60>
|-FunctionDecl 0x55fe8e86d718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55fe8e86d578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55fe8e86d5f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55fe8e86d7c8 <col:44>
|-FunctionDecl 0x55fe8e86d9d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55fe8e86d830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55fe8e86d8b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55fe8e86da88 <col:49>
|-VarDecl 0x55fe8e86db88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55fe8e86dc08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55fe8e86dc88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55fe8e86dd50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55fe8e86de80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55fe8e86df20 <col:42>
|-VarDecl 0x55fe8e86df90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55fe8e86e010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55fe8e86e198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55fe8e86e088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55fe8e86e240 <col:57>
|-FunctionDecl 0x55fe8e86e350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55fe8e86e2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55fe8e86e3f8 <col:56>
|-FunctionDecl 0x55fe8e86f540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55fe8e86e478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55fe8e86f5e8 <col:59>
|-FunctionDecl 0x55fe8e86f6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55fe8e86f658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55fe8e86f798 <col:48>
| `-ConstAttr 0x55fe8e86f7f0 <col:89>
|-FunctionDecl 0x55fe8e86fa58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55fe8e86f8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55fe8e86f938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55fe8e86fcb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55fe8e86fb48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55fe8e86fbd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55fe8e86fd68 <col:88>
|-FunctionDecl 0x55fe8e86ff00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55fe8e86fdd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55fe8e86fe60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55fe8e86ffb0 <col:88>
|-FunctionDecl 0x55fe8e8701c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55fe8e870018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55fe8e8700a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55fe8e870278 <line:208:22>
|-FunctionDecl 0x55fe8e8705e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55fe8e8702e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55fe8e870360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55fe8e8703f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55fe8e870480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55fe8e8708e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55fe8e8706e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55fe8e8707c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55fe8e870998 <col:85>
|-FunctionDecl 0x55fe8e870d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55fe8e870a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55fe8e870b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55fe8e870c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55fe8e870e40 <col:52>
|-FunctionDecl 0x55fe8e870fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55fe8e870ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55fe8e871060 <col:61>
|-FunctionDecl 0x55fe8e871560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55fe8e8710c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55fe8e871148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55fe8e871278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55fe8e871368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55fe8e871620 <col:62>
|-FunctionDecl 0x55fe8e871838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55fe8e871688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55fe8e871718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55fe8e8718e8 <line:221:22>
|-FunctionDecl 0x55fe8e8719e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55fe8e871950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55fe8e871a90 <col:65>
|-TypedefDecl 0x55fe8e871b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55fe8e7fc140 'unsigned long'
|-RecordDecl 0x55fe8e871b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55fe8e871ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55fe8e871d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55fe8e871db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55fe8e871d60 'union pthread_attr_t' sugar
|   `-RecordType 0x55fe8e871be0 'union pthread_attr_t'
|     `-Record 0x55fe8e871b58 'pthread_attr_t'
|-RecordDecl 0x55fe8e871e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55fe8e871f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55fe8e872000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55fe8e8720b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55fe8e872050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55fe8e871e90 'struct __pthread_internal_list'
|     `-Record 0x55fe8e871e10 '__pthread_internal_list'
|-RecordDecl 0x55fe8e872120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55fe8e8721c8 parent 0x55fe8e7fbf88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55fe8e8722a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55fe8e872308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55fe8e872370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55fe8e8723d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55fe8e872440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55fe8e8724a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55fe8e876580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55fe8e876630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55fe8e876720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55fe8e876788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55fe8e876910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55fe8e8768b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55fe8e8721a0 'pthread_mutex_t'
|     `-Record 0x55fe8e872120 ''
|-RecordDecl 0x55fe8e876980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55fe8e876ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55fe8e876b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55fe8e876be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55fe8e876b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55fe8e876a00 'pthread_mutexattr_t'
|     `-Record 0x55fe8e876980 ''
|-RecordDecl 0x55fe8e876c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55fe8e876cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55fe8e876dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55fe8e876e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55fe8e876e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55fe8e876ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55fe8e876f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55fe8e876fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55fe8e877030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55fe8e877098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55fe8e877150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix049_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix049_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55fe8e877240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55fe8e8772a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55fe8e8773e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55fe8e877380 'union pthread_cond_t' sugar
|   `-RecordType 0x55fe8e876cd0 'pthread_cond_t'
|     `-Record 0x55fe8e876c50 ''
|-RecordDecl 0x55fe8e877450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55fe8e877590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55fe8e8775f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55fe8e8776b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55fe8e877650 'union pthread_condattr_t' sugar
|   `-RecordType 0x55fe8e8774d0 'pthread_condattr_t'
|     `-Record 0x55fe8e877450 ''
|-TypedefDecl 0x55fe8e877738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55fe8e7fc120 'unsigned int'
|-TypedefDecl 0x55fe8e8777a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55fe8e7fc080 'int'
|-RecordDecl 0x55fe8e877800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55fe8e8778a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55fe8e877970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55fe8e8779d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55fe8e877a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55fe8e877aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55fe8e877b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55fe8e877b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55fe8e877be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55fe8e877c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55fe8e877cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55fe8e877d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55fe8e877d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55fe8e877e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix049_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix049_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55fe8e877ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55fe8e877f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55fe8e878090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55fe8e878030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55fe8e877880 'pthread_rwlock_t'
|     `-Record 0x55fe8e877800 ''
|-RecordDecl 0x55fe8e878100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55fe8e878240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55fe8e8782a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55fe8e878360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55fe8e878300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55fe8e878180 'pthread_rwlockattr_t'
|     `-Record 0x55fe8e878100 ''
|-TypedefDecl 0x55fe8e8783e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55fe8e7fc084 'volatile int' volatile
|   `-BuiltinType 0x55fe8e7fc080 'int'
|-RecordDecl 0x55fe8e878440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55fe8e87a5b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55fe8e87a618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55fe8e87a6d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55fe8e87a670 'union pthread_barrier_t' sugar
|   `-RecordType 0x55fe8e8784c0 'pthread_barrier_t'
|     `-Record 0x55fe8e878440 ''
|-RecordDecl 0x55fe8e87a740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55fe8e87a840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55fe8e87a8a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55fe8e87a960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55fe8e87a900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55fe8e87a7c0 'pthread_barrierattr_t'
|     `-Record 0x55fe8e87a740 ''
|-TypedefDecl 0x55fe8e87aa78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55fe8e87aa10 'long [8]' 8 
|   `-BuiltinType 0x55fe8e7fc0a0 'long'
|-EnumDecl 0x55fe8e87aad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55fe8e87ab98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55fe8e87abe8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55fe8e87ac38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55fe8e87ad08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55fe8e87ad58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55fe8e87ada8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55fe8e87adf8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55fe8e87ae80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55fe8e87ae68 <col:26> 'int'
| |   `-DeclRefExpr 0x55fe8e87ae48 <col:26> 'int' EnumConstant 0x55fe8e87ad08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55fe8e87af08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55fe8e87aef0 <col:29> 'int'
| |   `-DeclRefExpr 0x55fe8e87aed0 <col:29> 'int' EnumConstant 0x55fe8e87ad58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55fe8e87af90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55fe8e87af78 <col:30> 'int'
| |   `-DeclRefExpr 0x55fe8e87af58 <col:30> 'int' EnumConstant 0x55fe8e87ada8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55fe8e87b018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55fe8e87b000 <col:27> 'int'
|     `-DeclRefExpr 0x55fe8e87afe0 <col:27> 'int' EnumConstant 0x55fe8e87ae80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55fe8e87b068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55fe8e87b138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55fe8e87b1c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55fe8e87b1a8 <col:30> 'int'
| |   `-DeclRefExpr 0x55fe8e87b188 <col:30> 'int' EnumConstant 0x55fe8e87b138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55fe8e87b210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55fe8e87b298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55fe8e87b280 <col:29> 'int'
|     `-DeclRefExpr 0x55fe8e87b260 <col:29> 'int' EnumConstant 0x55fe8e87b210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55fe8e87b2e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55fe8e87b3b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55fe8e87b408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55fe8e87b458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55fe8e87b4a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55fe8e87b5c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55fe8e87b610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55fe8e87b660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55fe8e87b6e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55fe8e87b6d0 <col:31> 'int'
|     `-DeclRefExpr 0x55fe8e87b6b0 <col:31> 'int' EnumConstant 0x55fe8e87b5c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55fe8e87b738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55fe8e87b808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55fe8e87b858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55fe8e87b8a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55fe8e87b978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55fe8e87b9c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55fe8e87ba18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55fe8e87bae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55fe8e87bb38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55fe8e87bb88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55fe8e87bdc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55fe8e87be30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55fe8e87be98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55fe8e87bfb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55fe8e87c008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55fe8e87c0d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55fe8e87c128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55fe8e87c178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55fe8e87c248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55fe8e87c298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55fe8e87c8f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55fe8e87c390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55fe8e87c4a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fe8e87c6e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55fe8e87c760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55fe8e87c9b8 <col:47>
| |-NonNullAttr 0x55fe8e87ca10 <col:77, col:94> 1 3
| `-CallbackAttr 0x55fe8e87ca48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55fe8e87cb70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55fe8e87caa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55fe8e87cdc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55fe8e87cc28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55fe8e87cca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55fe8e87cf98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55fe8e87ce88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55fe8e87d040 <col:60>
|-FunctionDecl 0x55fe8e87d190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55fe8e87d230 <col:54>
| `-ConstAttr 0x55fe8e87d288 <col:95>
|-FunctionDecl 0x55fe8e87d458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55fe8e87d2c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55fe8e87d338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55fe8e87d508 <line:394:19>
| `-ConstAttr 0x55fe8e87d560 <col:60>
|-FunctionDecl 0x55fe8e87df68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55fe8e87de30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55fe8e87e010 <col:71>
| `-NonNullAttr 0x55fe8e87e068 <col:112, col:126> 1
|-FunctionDecl 0x55fe8e87e170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55fe8e87e0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55fe8e87e218 <line:397:22>
| `-NonNullAttr 0x55fe8e87e270 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e87e498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55fe8e87e2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55fe8e87e338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55fe8e87e548 <line:400:22>
| `-NonNullAttr 0x55fe8e87e5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe8e87e7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55fe8e87e5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fe8e87e668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55fe8e87e858 <line:403:22>
| `-NonNullAttr 0x55fe8e87e8b0 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e87eb08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55fe8e87e8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55fe8e87e9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55fe8e87ebb8 <line:406:22>
| `-NonNullAttr 0x55fe8e87ec10 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe8e87fe48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55fe8e87ec58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fe8e87ecd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55fe8e87fef8 <line:409:22>
| `-NonNullAttr 0x55fe8e87ff50 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e880188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55fe8e87ff98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fe8e880028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55fe8e880238 <line:412:22>
| `-NonNullAttr 0x55fe8e880290 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe8e8804c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55fe8e8802d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fe8e880368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55fe8e880578 <col:37>
| `-NonNullAttr 0x55fe8e8805d0 <col:78, col:95> 1 2
|-FunctionDecl 0x55fe8e8807b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fe8e880618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fe8e880698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55fe8e880868 <line:418:22>
| `-NonNullAttr 0x55fe8e8808c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe8e880a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55fe8e880908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fe8e880988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55fe8e880af8 <line:420:22>
| `-NonNullAttr 0x55fe8e880b50 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e880cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fe8e880b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fe8e880c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55fe8e880da8 <line:423:22>
| `-NonNullAttr 0x55fe8e881e30 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe8e881fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55fe8e881e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fe8e881ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55fe8e882068 <line:426:22>
| `-NonNullAttr 0x55fe8e8820c0 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e882268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fe8e882108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fe8e882188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55fe8e882318 <line:429:22>
| `-NonNullAttr 0x55fe8e882370 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe8e8824f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55fe8e8823b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fe8e882438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55fe8e8825a8 <line:431:22>
| `-NonNullAttr 0x55fe8e882600 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e882828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55fe8e882648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fe8e8826c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55fe8e8828d8 <line:434:22>
| |-NonNullAttr 0x55fe8e882930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55fe8e882968 <col:100> "" ""
|-FunctionDecl 0x55fe8e882b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55fe8e8829b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fe8e882a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55fe8e882c28 <line:437:22>
| |-NonNullAttr 0x55fe8e882c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x55fe8e882cb8 <col:97> "" ""
|-FunctionDecl 0x55fe8e882eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55fe8e882d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fe8e882d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55fe8e882f68 <line:440:22>
| `-NonNullAttr 0x55fe8e882fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe8e883140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55fe8e883008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fe8e883080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55fe8e8831f0 <line:443:22>
| `-NonNullAttr 0x55fe8e883248 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e883538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55fe8e883298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fe8e883318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55fe8e883390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55fe8e8835f0 <line:447:22>
| `-NonNullAttr 0x55fe8e883648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55fe8e8838f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55fe8e8836a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fe8e883720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55fe8e883798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55fe8e8839b0 <col:43>
| `-NonNullAttr 0x55fe8e883a08 <col:84, col:98> 1
|-FunctionDecl 0x55fe8e883cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55fe8e883a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55fe8e883ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55fe8e883b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55fe8e883d80 <line:452:22>
| `-NonNullAttr 0x55fe8e883dd8 <col:63, col:77> 3
|-FunctionDecl 0x55fe8e8840e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55fe8e883e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55fe8e883ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55fe8e883f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55fe8e8841a0 <line:456:22>
| `-NonNullAttr 0x55fe8e8841f8 <col:63, col:80> 2 3
|-FunctionDecl 0x55fe8e8843e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55fe8e884248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55fe8e8842c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55fe8e884498 <line:458:22>
|-FunctionDecl 0x55fe8e884868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55fe8e884560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55fe8e884700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55fe8e884918 <col:52, col:69> 1 2
|-FunctionDecl 0x55fe8e884ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55fe8e8849a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55fe8e884a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55fe8e884ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55fe8e884b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55fe8e884c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55fe8e884e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55fe8e884d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55fe8e884fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55fe8e885040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55fe8e8850e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55fe8e8851d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55fe8e885240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55fe8e885410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix049_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55fe8e885508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55fe8e8855c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55fe8e885560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55fe8e8850c0 '__pthread_unwind_buf_t'
| |   `-Record 0x55fe8e885040 ''
| `-AlignedAttr 0x55fe8e885618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55fe8e885690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55fe8e8857f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55fe8e885858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55fe8e8858c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55fe8e885928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55fe8e885b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55fe8e885a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55fe8e885c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55fe8e885be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55fe8e885e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55fe8e885d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55fe8e885f18 <line:487:22>
|-RecordDecl 0x55fe8e885f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55fe8e886288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55fe8e8860e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55fe8e886168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55fe8e886338 <col:86>
| `-ReturnsTwiceAttr 0x55fe8e886390 <col:12> Implicit
|-FunctionDecl 0x55fe8e8866b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55fe8e886460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55fe8e886570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55fe8e886768 <line:493:22>
| `-NonNullAttr 0x55fe8e8867c0 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e886938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55fe8e886808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55fe8e8869e0 <line:495:22>
| `-NonNullAttr 0x55fe8e886a38 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e886b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55fe8e886a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55fe8e886be8 <line:497:22>
| `-NonNullAttr 0x55fe8e886c40 <col:52, col:66> 1
|-FunctionDecl 0x55fe8e886d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55fe8e886c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55fe8e886de8 <line:499:22>
| `-NonNullAttr 0x55fe8e886e40 <col:52, col:66> 1
|-FunctionDecl 0x55fe8e887088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55fe8e886e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55fe8e886f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55fe8e887138 <col:36>
| `-NonNullAttr 0x55fe8e887190 <col:66, col:83> 1 2
|-FunctionDecl 0x55fe8e887290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55fe8e8871d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55fe8e887338 <line:504:22>
| `-NonNullAttr 0x55fe8e887390 <col:52, col:66> 1
|-FunctionDecl 0x55fe8e887628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fe8e887440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55fe8e8874c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55fe8e8876d8 <line:508:22>
| `-NonNullAttr 0x55fe8e887730 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe8e8879f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55fe8e887778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55fe8e8877f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55fe8e887878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55fe8e887ab0 <line:512:22>
| `-NonNullAttr 0x55fe8e887b08 <col:63, col:80> 1 3
|-FunctionDecl 0x55fe8e887c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55fe8e887b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55fe8e887cb8 <line:514:22>
| `-NonNullAttr 0x55fe8e887d10 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e887f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55fe8e887dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55fe8e887fe0 <line:516:22>
| `-NonNullAttr 0x55fe8e888038 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e888140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55fe8e888088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55fe8e8881e8 <line:518:22>
| `-NonNullAttr 0x55fe8e888240 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e888468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fe8e888288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55fe8e888308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55fe8e888518 <line:522:22>
| `-NonNullAttr 0x55fe8e888570 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe8e888778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55fe8e8885b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55fe8e888638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55fe8e888828 <line:525:22>
| `-NonNullAttr 0x55fe8e888880 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e888a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fe8e8888c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55fe8e888948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55fe8e888ad8 <line:528:22>
| `-NonNullAttr 0x55fe8e888b30 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe8e888cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55fe8e888b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55fe8e888bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55fe8e888d68 <line:530:22>
| `-NonNullAttr 0x55fe8e888dc0 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e889f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fe8e888e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55fe8e889eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55fe8e88a040 <line:534:22>
| `-NonNullAttr 0x55fe8e88a098 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe8e88a228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55fe8e88a0e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55fe8e88a168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55fe8e88a2d8 <line:537:22>
| `-NonNullAttr 0x55fe8e88a330 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e88a4d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fe8e88a378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55fe8e88a3f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55fe8e88a588 <line:541:22>
| `-NonNullAttr 0x55fe8e88a5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe8e88a768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55fe8e88a628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55fe8e88a6a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55fe8e88a818 <line:544:22>
| `-NonNullAttr 0x55fe8e88a870 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e88aa58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55fe8e88a8b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55fe8e88a938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55fe8e88ab08 <line:547:22>
| `-NonNullAttr 0x55fe8e88ab60 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe8e88ace8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55fe8e88aba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55fe8e88ac28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55fe8e88ad98 <line:550:22>
| `-NonNullAttr 0x55fe8e88adf0 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e88c168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55fe8e88bf10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55fe8e88c020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55fe8e88c218 <col:29>
| `-NonNullAttr 0x55fe8e88c270 <col:70, col:84> 1
|-FunctionDecl 0x55fe8e88c3e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55fe8e88c2b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55fe8e88c490 <line:555:22>
| `-NonNullAttr 0x55fe8e88c4e8 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e88c5f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55fe8e88c538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55fe8e88c698 <line:557:22>
| `-NonNullAttr 0x55fe8e88c6f0 <col:52, col:66> 1
|-FunctionDecl 0x55fe8e88c7f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55fe8e88c738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55fe8e88c898 <line:559:19>
| `-NonNullAttr 0x55fe8e88c8f0 <col:49, col:63> 1
|-FunctionDecl 0x55fe8e88cb28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55fe8e88c938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55fe8e88c9c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55fe8e88cbd8 <col:39>
| `-NonNullAttr 0x55fe8e88cc30 <col:69, col:86> 1 2
|-FunctionDecl 0x55fe8e88cd30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55fe8e88cc78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55fe8e88cdd8 <line:564:22>
| `-NonNullAttr 0x55fe8e88ce30 <col:52, col:66> 1
|-FunctionDecl 0x55fe8e88cf98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55fe8e88cee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55fe8e88d040 <line:566:22>
| `-NonNullAttr 0x55fe8e88d098 <col:52, col:66> 1
|-FunctionDecl 0x55fe8e88d258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55fe8e88d0e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55fe8e88d178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55fe8e88d308 <col:39>
| `-NonNullAttr 0x55fe8e88d360 <col:69, col:86> 1 2
|-FunctionDecl 0x55fe8e88d460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55fe8e88d3a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55fe8e88d508 <line:571:22>
| `-NonNullAttr 0x55fe8e88d560 <col:52, col:66> 1
|-FunctionDecl 0x55fe8e88d748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55fe8e88d610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55fe8e88d7f0 <line:573:22>
| `-NonNullAttr 0x55fe8e88d848 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e88d950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55fe8e88d898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55fe8e88d9f8 <line:575:22>
| `-NonNullAttr 0x55fe8e88da50 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e88dc78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fe8e88da98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55fe8e88db18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55fe8e88dd28 <line:579:22>
| `-NonNullAttr 0x55fe8e88dd80 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe8e88dfa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55fe8e88ddc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55fe8e88de48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55fe8e88e058 <line:582:22>
| `-NonNullAttr 0x55fe8e88e0b0 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e88e258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fe8e88e0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55fe8e88e178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55fe8e88e308 <line:586:22>
| `-NonNullAttr 0x55fe8e88e360 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe8e88e4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55fe8e88e3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55fe8e88e428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55fe8e88e598 <col:36>
| `-NonNullAttr 0x55fe8e88e5f0 <col:77, col:91> 1
|-FunctionDecl 0x55fe8e88e928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55fe8e88e6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55fe8e88e7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55fe8e88e9d8 <line:591:22>
| `-NonNullAttr 0x55fe8e88ea30 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e88eba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55fe8e88ea78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55fe8e88ec50 <line:593:22>
| `-NonNullAttr 0x55fe8e88eca8 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e88edb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55fe8e88ecf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55fe8e88ee58 <line:595:22>
| `-NonNullAttr 0x55fe8e88eeb0 <col:52, col:66> 1
|-FunctionDecl 0x55fe8e88efc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55fe8e88ef10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55fe8e88f070 <line:597:22>
| `-NonNullAttr 0x55fe8e88f0c8 <col:52, col:66> 1
|-FunctionDecl 0x55fe8e88f2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55fe8e88f118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55fe8e88f190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55fe8e88f3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55fe8e88f6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55fe8e88f428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55fe8e88f4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55fe8e88f530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55fe8e88f790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55fe8e88f9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55fe8e88f870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55fe8e88fa50 <line:606:22>
| `-NonNullAttr 0x55fe8e88faa8 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e88fbb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55fe8e88faf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55fe8e88fc58 <line:608:22>
| `-NonNullAttr 0x55fe8e88fcb0 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e88ff10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fe8e88fcf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55fe8e88fd78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55fe8e88ffc0 <line:612:22>
| `-NonNullAttr 0x55fe8e890018 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe8e890228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55fe8e890068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55fe8e8900e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55fe8e8902d8 <col:37>
| `-NonNullAttr 0x55fe8e890330 <col:78, col:92> 1
|-FunctionDecl 0x55fe8e890548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55fe8e890378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55fe8e890420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55fe8e8905f8 <line:618:22>
| `-NonNullAttr 0x55fe8e890650 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe8e890818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55fe8e890698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55fe8e890710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55fe8e8908c8 <line:621:22>
| `-NonNullAttr 0x55fe8e890920 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e890bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55fe8e890a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55fe8e890a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55fe8e890c78 <line:623:22>
| `-NonNullAttr 0x55fe8e890cd0 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e890e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55fe8e890d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55fe8e890f20 <line:625:22>
| `-NonNullAttr 0x55fe8e890f78 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e891080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55fe8e890fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55fe8e891128 <line:627:22>
| `-NonNullAttr 0x55fe8e891180 <col:52, col:66> 1
|-FunctionDecl 0x55fe8e891280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55fe8e8911c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55fe8e891328 <line:629:22>
| `-NonNullAttr 0x55fe8e891380 <col:52, col:66> 1
|-FunctionDecl 0x55fe8e891480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55fe8e8913c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55fe8e891528 <line:631:22>
| `-NonNullAttr 0x55fe8e891580 <col:52, col:66> 1
|-FunctionDecl 0x55fe8e891958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55fe8e891660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55fe8e891770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55fe8e8917f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55fe8e891a10 <line:635:22>
| `-NonNullAttr 0x55fe8e891a68 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e891be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55fe8e891ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55fe8e891c90 <line:637:22>
| `-NonNullAttr 0x55fe8e891ce8 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e891df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55fe8e891d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55fe8e891e98 <line:639:22>
| `-NonNullAttr 0x55fe8e891ef0 <col:52, col:66> 1
|-FunctionDecl 0x55fe8e8920e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55fe8e891fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55fe8e892190 <line:641:22>
| `-NonNullAttr 0x55fe8e8921e8 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e8922f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55fe8e892238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55fe8e892398 <line:643:22>
| `-NonNullAttr 0x55fe8e8923f0 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e892618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fe8e892438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55fe8e8924b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55fe8e8926c8 <line:647:22>
| `-NonNullAttr 0x55fe8e892720 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe8e892928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55fe8e892768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55fe8e8927e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55fe8e8929d8 <line:650:22>
| `-NonNullAttr 0x55fe8e892a30 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e892d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55fe8e892b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55fe8e892c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55fe8e892e28 <line:653:22>
| `-NonNullAttr 0x55fe8e892e80 <col:63, col:77> 1
|-FunctionDecl 0x55fe8e892fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55fe8e892ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55fe8e893090 <col:69>
|-FunctionDecl 0x55fe8e893208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55fe8e8930f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55fe8e8932b0 <col:72>
|-FunctionDecl 0x55fe8e8934e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55fe8e893318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55fe8e8933c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55fe8e893598 <col:44>
|-FunctionDecl 0x55fe8e8937b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55fe8e893600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55fe8e893678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55fe8e893868 <line:660:22>
| `-NonNullAttr 0x55fe8e8938c0 <col:63, col:77> 2
|-FunctionDecl 0x55fe8e893d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55fe8e8939a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55fe8e893ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55fe8e893bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55fe8e893dc0 <col:47>
|-FunctionDecl 0x55fe8e894f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55fe8e893e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55fe8e8950b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55fe8e895020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55fe8e895210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55fe8e895178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55fe8e8952d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55fe8e895398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55fe8e895458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55fe8e895510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55fe8e895590 prev 0x55fe8e895510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55fe8e8955f8 <col:24> 'int' 0
|-VarDecl 0x55fe8e895630 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55fe8e8956b0 prev 0x55fe8e895630 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55fe8e895718 <col:27> 'int' 0
|-VarDecl 0x55fe8e895750 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55fe8e8957d0 prev 0x55fe8e895750 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55fe8e895838 <col:27> 'int' 0
|-VarDecl 0x55fe8e895870 <line:677:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55fe8e8958f0 prev 0x55fe8e895870 <line:678:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55fe8e895958 <col:27> 'int' 0
|-VarDecl 0x55fe8e895988 <line:679:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55fe8e895a00 <line:680:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55fe8e895a80 <line:681:1, col:5> col:5 used x 'int'
|-VarDecl 0x55fe8e895b00 prev 0x55fe8e895a80 <line:682:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55fe8e895b68 <col:9> 'int' 0
|-VarDecl 0x55fe8e895ba0 <line:683:1, col:5> col:5 used y 'int'
|-VarDecl 0x55fe8e895c20 prev 0x55fe8e895ba0 <line:684:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55fe8e895c88 <col:9> 'int' 0
|-VarDecl 0x55fe8e895cc0 <line:685:1, col:5> col:5 used z 'int'
|-VarDecl 0x55fe8e895d40 prev 0x55fe8e895cc0 <line:686:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55fe8e895da8 <col:9> 'int' 0
|-VarDecl 0x55fe8e895dd8 <line:687:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x55fe8e895e58 <line:688:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x55fe8e895ed0 <line:689:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x55fe8e895f70 <line:690:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x55fe8e895fe8 <line:691:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x55fe8e896060 <line:692:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x55fe8e8960d8 <line:693:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x55fe8e896150 <line:694:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x55fe8e8961c8 <line:695:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x55fe8e896240 <line:696:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x55fe8e8962b8 <line:697:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x55fe8e896338 <line:698:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x55fe8e8963b8 <line:699:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x55fe8e896430 <line:700:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x55fe8e8964b0 <line:701:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x55fe8e896528 <line:702:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x55fe8e8965a0 <line:703:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55fe8e896618 <line:704:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55fe8e896730 prev 0x55fe8e894f60 <line:705:1, line:733:1> line:705:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55fe8e896698 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55fe8e897f90 <line:706:1, line:733:1>
|   |-CallExpr 0x55fe8e896848 <line:707:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fe8e896830 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe8e8967d8 <col:3> 'void ()' Function 0x55fe8e83c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fe8e8968c0 <line:708:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55fe8e896868 <col:3> 'int' lvalue Var 0x55fe8e8964b0 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55fe8e8968a8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fe8e896888 <col:15> 'int' lvalue Var 0x55fe8e8963b8 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55fe8e896920 <line:709:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55fe8e8968e0 <col:3> 'int' lvalue Var 0x55fe8e8963b8 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x55fe8e896900 <col:15> 'int' 1
|   |-BinaryOperator 0x55fe8e896998 <line:710:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55fe8e896940 <col:3> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fe8e896980 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fe8e896960 <col:20> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55fe8e896a30 <line:711:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55fe8e8969b8 <col:3> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55fe8e896a08 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55fe8e8969d8 <col:27> 'int' 1
|   |-CallExpr 0x55fe8e896bb8 <line:712:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55fe8e896ba0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55fe8e896a50 <col:3> 'void (int)' Function 0x55fe8e83c0d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55fe8e896b50 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55fe8e896b30 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55fe8e896b10 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55fe8e896ac8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55fe8e896ab0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55fe8e896a70 <col:23> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55fe8e896af8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55fe8e896ae0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55fe8e896a90 <col:41> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55fe8e896c38 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55fe8e896be0 <col:3> '_Bool' lvalue Var 0x55fe8e8960d8 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55fe8e896c20 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fe8e896c00 <col:20> '_Bool' lvalue Var 0x55fe8e895ed0 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55fe8e896cb0 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55fe8e896c58 <col:3> '_Bool' lvalue Var 0x55fe8e896150 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55fe8e896c98 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fe8e896c78 <col:20> '_Bool' lvalue Var 0x55fe8e895f70 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55fe8e896d28 <line:715:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55fe8e896cd0 <col:3> '_Bool' lvalue Var 0x55fe8e8961c8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55fe8e896d10 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fe8e896cf0 <col:20> '_Bool' lvalue Var 0x55fe8e895fe8 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55fe8e896da0 <line:716:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55fe8e896d48 <col:3> '_Bool' lvalue Var 0x55fe8e896240 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55fe8e896d88 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fe8e896d68 <col:20> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55fe8e896e38 <line:717:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55fe8e896dc0 <col:3> '_Bool' lvalue Var 0x55fe8e895f70 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x55fe8e896e10 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55fe8e896de0 <col:27> 'int' 1
|   |-CallExpr 0x55fe8e896e90 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fe8e896e78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe8e896e58 <col:3> 'void ()' Function 0x55fe8e83c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fe8e896ee8 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fe8e896ed0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe8e896eb0 <col:3> 'void ()' Function 0x55fe8e83c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fe8e896f80 <line:720:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55fe8e896f08 <col:3> 'int' lvalue Var 0x55fe8e8956b0 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55fe8e896f48 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fe8e896f28 <col:25> 'int' lvalue Var 0x55fe8e895b00 'x' 'int'
|   |-CallExpr 0x55fe8e896fd8 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fe8e896fc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe8e896fa0 <col:3> 'void ()' Function 0x55fe8e83c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fe8e897030 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fe8e897018 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe8e896ff8 <col:3> 'void ()' Function 0x55fe8e83c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fe8e897318 <line:723:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55fe8e897050 <col:3> 'int' lvalue Var 0x55fe8e895d40 'z' 'int'
|   | `-ConditionalOperator 0x55fe8e8972e8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55fe8e897110 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55fe8e8970c8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55fe8e8970b0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55fe8e897070 <col:7> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55fe8e8970f8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55fe8e8970e0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55fe8e897090 <col:25> '_Bool' lvalue Var 0x55fe8e895f70 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55fe8e8972d0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fe8e897130 <col:42> 'int' lvalue Var 0x55fe8e8963b8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55fe8e8972b0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55fe8e897280 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55fe8e8971f0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55fe8e8971a8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55fe8e897190 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55fe8e897150 <col:55> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55fe8e8971d8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55fe8e8971c0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55fe8e897170 <col:73> '_Bool' lvalue Var 0x55fe8e896150 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55fe8e897250 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fe8e897210 <col:90> 'int' lvalue Var 0x55fe8e8964b0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55fe8e897268 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fe8e897230 <col:102> 'int' lvalue Var 0x55fe8e895d40 'z' 'int'
|   |-BinaryOperator 0x55fe8e897520 <line:724:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55fe8e897338 <col:3> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fe8e897508 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe8e8974d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55fe8e8973f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55fe8e8973b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55fe8e897398 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55fe8e897358 <col:20> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55fe8e8973e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55fe8e8973c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55fe8e897378 <col:38> '_Bool' lvalue Var 0x55fe8e895f70 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe8e897490 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fe8e897448 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fe8e897418 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55fe8e8974c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fe8e8974a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fe8e897470 <col:66> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55fe8e897808 <line:725:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55fe8e897540 <col:3> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fe8e8977f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe8e8977c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55fe8e8976e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55fe8e897600 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55fe8e8975b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55fe8e8975a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55fe8e897560 <col:20> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55fe8e8975e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55fe8e8975d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55fe8e897580 <col:38> '_Bool' lvalue Var 0x55fe8e895f70 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55fe8e8976c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55fe8e897678 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55fe8e897660 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55fe8e897620 <col:56> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55fe8e8976a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55fe8e897690 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55fe8e897640 <col:74> '_Bool' lvalue Var 0x55fe8e896150 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe8e897778 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fe8e897730 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fe8e897700 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55fe8e8977a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fe8e897790 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fe8e897758 <col:102> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55fe8e897a10 <line:726:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55fe8e897828 <col:3> '_Bool' lvalue Var 0x55fe8e895f70 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55fe8e8979f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe8e8979c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55fe8e8978e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55fe8e8978a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55fe8e897888 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55fe8e897848 <col:20> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55fe8e8978d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55fe8e8978b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55fe8e897868 <col:38> '_Bool' lvalue Var 0x55fe8e895f70 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe8e897980 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fe8e897938 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fe8e897908 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55fe8e8979b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fe8e897998 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fe8e897960 <col:66> '_Bool' lvalue Var 0x55fe8e895f70 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55fe8e897cf8 <line:727:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55fe8e897a30 <col:3> '_Bool' lvalue Var 0x55fe8e896150 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55fe8e897ce0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe8e897cb0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55fe8e897bd0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55fe8e897af0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55fe8e897aa8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55fe8e897a90 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55fe8e897a50 <col:20> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55fe8e897ad8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55fe8e897ac0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55fe8e897a70 <col:38> '_Bool' lvalue Var 0x55fe8e895f70 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55fe8e897bb0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55fe8e897b68 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55fe8e897b50 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55fe8e897b10 <col:56> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55fe8e897b98 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55fe8e897b80 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55fe8e897b30 <col:74> '_Bool' lvalue Var 0x55fe8e896150 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe8e897c68 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fe8e897c20 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fe8e897bf0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55fe8e897c98 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fe8e897c80 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fe8e897c48 <col:102> '_Bool' lvalue Var 0x55fe8e896150 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55fe8e897d50 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fe8e897d38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe8e897d18 <col:3> 'void ()' Function 0x55fe8e83c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fe8e897da8 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fe8e897d90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe8e897d70 <col:3> 'void ()' Function 0x55fe8e83c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fe8e897e60 <line:730:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55fe8e897dc8 <col:3> 'int' lvalue Var 0x55fe8e895590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55fe8e897e40 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55fe8e897e28 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fe8e897de8 <col:22> 'int' lvalue Var 0x55fe8e895590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55fe8e897e08 <col:41> 'int' 1
|   |-CallExpr 0x55fe8e897eb8 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fe8e897ea0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe8e897e80 <col:3> 'void ()' Function 0x55fe8e83c410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55fe8e897f68 <line:732:3, col:36>
|     `-CallExpr 0x55fe8e897f48 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55fe8e897f30 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55fe8e897ed8 <col:10> 'void *(void)' Function 0x55fe8e83be68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55fe8e898120 prev 0x55fe8e8950b8 <line:734:1, line:753:1> line:734:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55fe8e898088 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55fe8e899360 <line:735:1, line:753:1>
|   |-CallExpr 0x55fe8e898200 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fe8e8981e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe8e8981c8 <col:3> 'void ()' Function 0x55fe8e83c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fe8e898260 <line:737:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55fe8e898220 <col:3> 'int' lvalue Var 0x55fe8e895b00 'x' 'int'
|   | `-IntegerLiteral 0x55fe8e898240 <col:7> 'int' 1
|   |-CallExpr 0x55fe8e8982b8 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fe8e8982a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe8e898280 <col:3> 'void ()' Function 0x55fe8e83c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fe8e898310 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fe8e8982f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe8e8982d8 <col:3> 'void ()' Function 0x55fe8e83c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fe8e898388 <line:740:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55fe8e898330 <col:3> 'int' lvalue Var 0x55fe8e8957d0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55fe8e898370 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fe8e898350 <col:25> 'int' lvalue Var 0x55fe8e895c20 'y' 'int'
|   |-CallExpr 0x55fe8e8983e0 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fe8e8983c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe8e8983a8 <col:3> 'void ()' Function 0x55fe8e83c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fe8e898438 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fe8e898420 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe8e898400 <col:3> 'void ()' Function 0x55fe8e83c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fe8e898720 <line:743:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55fe8e898458 <col:3> 'int' lvalue Var 0x55fe8e895d40 'z' 'int'
|   | `-ConditionalOperator 0x55fe8e8986f0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55fe8e898518 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55fe8e8984d0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55fe8e8984b8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55fe8e898478 <col:7> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55fe8e898500 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55fe8e8984e8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55fe8e898498 <col:25> '_Bool' lvalue Var 0x55fe8e895fe8 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55fe8e8986d8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fe8e898538 <col:42> 'int' lvalue Var 0x55fe8e8963b8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55fe8e8986b8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55fe8e898688 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55fe8e8985f8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55fe8e8985b0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55fe8e898598 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55fe8e898558 <col:55> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55fe8e8985e0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55fe8e8985c8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55fe8e898578 <col:73> '_Bool' lvalue Var 0x55fe8e8961c8 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55fe8e898658 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fe8e898618 <col:90> 'int' lvalue Var 0x55fe8e8964b0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55fe8e898670 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fe8e898638 <col:102> 'int' lvalue Var 0x55fe8e895d40 'z' 'int'
|   |-BinaryOperator 0x55fe8e898928 <line:744:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55fe8e898740 <col:3> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fe8e898910 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe8e8988e0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55fe8e898800 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55fe8e8987b8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55fe8e8987a0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55fe8e898760 <col:20> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55fe8e8987e8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55fe8e8987d0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55fe8e898780 <col:38> '_Bool' lvalue Var 0x55fe8e895fe8 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe8e898898 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fe8e898850 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fe8e898820 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55fe8e8988c8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fe8e8988b0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fe8e898878 <col:66> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55fe8e898c10 <line:745:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55fe8e898948 <col:3> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fe8e898bf8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe8e898bc8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55fe8e898ae8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55fe8e898a08 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55fe8e8989c0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55fe8e8989a8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55fe8e898968 <col:20> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55fe8e8989f0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55fe8e8989d8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55fe8e898988 <col:38> '_Bool' lvalue Var 0x55fe8e895fe8 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55fe8e898ac8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55fe8e898a80 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55fe8e898a68 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55fe8e898a28 <col:56> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55fe8e898ab0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55fe8e898a98 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55fe8e898a48 <col:74> '_Bool' lvalue Var 0x55fe8e8961c8 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe8e898b80 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fe8e898b38 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fe8e898b08 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55fe8e898bb0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fe8e898b98 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fe8e898b60 <col:102> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55fe8e898e18 <line:746:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55fe8e898c30 <col:3> '_Bool' lvalue Var 0x55fe8e895fe8 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55fe8e898e00 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe8e898dd0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55fe8e898cf0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55fe8e898ca8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55fe8e898c90 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55fe8e898c50 <col:20> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55fe8e898cd8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55fe8e898cc0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55fe8e898c70 <col:38> '_Bool' lvalue Var 0x55fe8e895fe8 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe8e898d88 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fe8e898d40 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fe8e898d10 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55fe8e898db8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fe8e898da0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fe8e898d68 <col:66> '_Bool' lvalue Var 0x55fe8e895fe8 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55fe8e899118 <line:747:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55fe8e898e38 <col:3> '_Bool' lvalue Var 0x55fe8e8961c8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55fe8e899100 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe8e8990d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55fe8e898ff0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55fe8e898ef8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55fe8e898eb0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55fe8e898e98 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55fe8e898e58 <col:20> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55fe8e898ee0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55fe8e898ec8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55fe8e898e78 <col:38> '_Bool' lvalue Var 0x55fe8e895fe8 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55fe8e898fd0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55fe8e898f70 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55fe8e898f58 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55fe8e898f18 <col:56> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55fe8e898fb8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55fe8e898fa0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55fe8e898f38 <col:74> '_Bool' lvalue Var 0x55fe8e8961c8 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe8e899088 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fe8e899040 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fe8e899010 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55fe8e8990b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fe8e8990a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fe8e899068 <col:102> '_Bool' lvalue Var 0x55fe8e8961c8 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55fe8e899170 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fe8e899158 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe8e899138 <col:3> 'void ()' Function 0x55fe8e83c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fe8e8991c8 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fe8e8991b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe8e899190 <col:3> 'void ()' Function 0x55fe8e83c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fe8e899280 <line:750:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55fe8e8991e8 <col:3> 'int' lvalue Var 0x55fe8e895590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55fe8e899260 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55fe8e899248 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fe8e899208 <col:22> 'int' lvalue Var 0x55fe8e895590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55fe8e899228 <col:41> 'int' 1
|   |-CallExpr 0x55fe8e8992d8 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fe8e8992c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe8e8992a0 <col:3> 'void ()' Function 0x55fe8e83c410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55fe8e899350 <line:752:3, col:36>
|     `-CallExpr 0x55fe8e899330 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55fe8e899318 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55fe8e8992f8 <col:10> 'void *(void)' Function 0x55fe8e83be68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55fe8e8994a8 prev 0x55fe8e895210 <line:754:1, line:786:1> line:754:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55fe8e899410 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55fe8e89d0a0 <line:755:1, line:786:1>
|   |-CallExpr 0x55fe8e899588 <line:756:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fe8e899570 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe8e899550 <col:3> 'void ()' Function 0x55fe8e83c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fe8e8995e8 <line:757:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55fe8e8995a8 <col:3> 'int' lvalue Var 0x55fe8e895c20 'y' 'int'
|   | `-IntegerLiteral 0x55fe8e8995c8 <col:7> 'int' 1
|   |-CallExpr 0x55fe8e899640 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fe8e899628 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe8e899608 <col:3> 'void ()' Function 0x55fe8e83c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fe8e899698 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fe8e899680 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe8e899660 <col:3> 'void ()' Function 0x55fe8e83c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fe8e899748 <line:760:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55fe8e8996b8 <col:3> '_Bool' lvalue Var 0x55fe8e8965a0 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55fe8e899730 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55fe8e899710 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55fe8e8996f8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55fe8e8996d8 <col:19> 'void *(void)' Function 0x55fe8e83be68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55fe8e8997f8 <line:761:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55fe8e899768 <col:3> '_Bool' lvalue Var 0x55fe8e896618 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55fe8e8997e0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55fe8e8997c0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55fe8e8997a8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55fe8e899788 <col:19> 'void *(void)' Function 0x55fe8e83be68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55fe8e899870 <line:762:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55fe8e899818 <col:3> '_Bool' lvalue Var 0x55fe8e895dd8 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55fe8e899858 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fe8e899838 <col:21> '_Bool' lvalue Var 0x55fe8e896618 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55fe8e8998e8 <line:763:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55fe8e899890 <col:3> 'int' lvalue Var 0x55fe8e895e58 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55fe8e8998d0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fe8e8998b0 <col:15> 'int' lvalue Var 0x55fe8e895d40 'z' 'int'
|   |-BinaryOperator 0x55fe8e899d20 <line:764:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55fe8e899908 <col:3> 'int' lvalue Var 0x55fe8e895d40 'z' 'int'
|   | `-ConditionalOperator 0x55fe8e899cf0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55fe8e899b18 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55fe8e899a38 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55fe8e899960 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55fe8e899948 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55fe8e899928 <col:8> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55fe8e899a18 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55fe8e8999b0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55fe8e899998 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55fe8e899978 <col:27> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x55fe8e899a00 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55fe8e8999e8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55fe8e8999c8 <col:46> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55fe8e899af8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55fe8e899a90 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55fe8e899a78 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55fe8e899a58 <col:65> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x55fe8e899ae0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55fe8e899ac8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55fe8e899aa8 <col:84> '_Bool' lvalue Var 0x55fe8e896240 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55fe8e899cd8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fe8e899b38 <col:101> 'int' lvalue Var 0x55fe8e895d40 'z' 'int'
|   |   `-ParenExpr 0x55fe8e899cb8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55fe8e899c88 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55fe8e899bf8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55fe8e899bb0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55fe8e899b98 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55fe8e899b58 <col:106> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55fe8e899be0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55fe8e899bc8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55fe8e899b78 <col:124> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55fe8e899c58 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fe8e899c18 <col:141> 'int' lvalue Var 0x55fe8e8963b8 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55fe8e899c70 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fe8e899c38 <col:153> 'int' lvalue Var 0x55fe8e8964b0 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55fe8e89a250 <line:765:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55fe8e899d40 <col:3> 'int' lvalue Var 0x55fe8e8963b8 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x55fe8e89a220 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55fe8e89a1f0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55fe8e89a1d8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55fe8e899d60 <col:15> '_Bool' lvalue Var 0x55fe8e896618 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55fe8e89a208 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fe8e899d80 <col:31> 'int' lvalue Var 0x55fe8e8963b8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55fe8e89a1b8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55fe8e89a188 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55fe8e899fb0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55fe8e899eb0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55fe8e899dd8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55fe8e899dc0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55fe8e899da0 <col:45> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55fe8e899e90 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55fe8e899e28 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55fe8e899e10 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55fe8e899df0 <col:64> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55fe8e899e78 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55fe8e899e60 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55fe8e899e40 <col:83> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55fe8e899f70 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55fe8e899f08 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55fe8e899ef0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55fe8e899ed0 <col:102> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55fe8e899f58 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55fe8e899f40 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55fe8e899f20 <col:121> '_Bool' lvalue Var 0x55fe8e896240 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55fe8e89a170 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fe8e899fd0 <col:138> 'int' lvalue Var 0x55fe8e8963b8 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x55fe8e89a150 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55fe8e89a120 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55fe8e89a090 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55fe8e89a048 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55fe8e89a030 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55fe8e899ff0 <col:151> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55fe8e89a078 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55fe8e89a060 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55fe8e89a010 <col:169> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55fe8e89a0f0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55fe8e89a0b0 <col:186> 'int' lvalue Var 0x55fe8e8963b8 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55fe8e89a108 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55fe8e89a0d0 <col:198> 'int' lvalue Var 0x55fe8e8963b8 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55fe8e89a760 <line:766:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55fe8e89a270 <col:3> 'int' lvalue Var 0x55fe8e8964b0 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x55fe8e89a730 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55fe8e89a700 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55fe8e89a6e8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55fe8e89a290 <col:15> '_Bool' lvalue Var 0x55fe8e896618 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55fe8e89a718 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fe8e89a2b0 <col:31> 'int' lvalue Var 0x55fe8e8964b0 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x55fe8e89a6c8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55fe8e89a698 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55fe8e89a4c0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55fe8e89a3e0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55fe8e89a308 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55fe8e89a2f0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55fe8e89a2d0 <col:45> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55fe8e89a3c0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55fe8e89a358 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55fe8e89a340 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55fe8e89a320 <col:64> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55fe8e89a3a8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55fe8e89a390 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55fe8e89a370 <col:83> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55fe8e89a4a0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55fe8e89a438 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55fe8e89a420 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55fe8e89a400 <col:102> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55fe8e89a488 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55fe8e89a470 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55fe8e89a450 <col:121> '_Bool' lvalue Var 0x55fe8e896240 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55fe8e89a680 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fe8e89a4e0 <col:138> 'int' lvalue Var 0x55fe8e8964b0 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x55fe8e89a660 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55fe8e89a630 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55fe8e89a5a0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55fe8e89a558 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55fe8e89a540 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55fe8e89a500 <col:151> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55fe8e89a588 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55fe8e89a570 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55fe8e89a520 <col:169> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55fe8e89a600 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55fe8e89a5c0 <col:186> 'int' lvalue Var 0x55fe8e8964b0 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55fe8e89a618 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55fe8e89a5e0 <col:198> 'int' lvalue Var 0x55fe8e8964b0 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55fe8e89ad08 <line:767:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55fe8e89a780 <col:3> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fe8e89acf0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe8e89acc0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55fe8e89ac78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fe8e89ac60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fe8e89a7a0 <col:20> '_Bool' lvalue Var 0x55fe8e896618 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe8e89aca8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fe8e89ac90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fe8e89a7c0 <col:36> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55fe8e89ac40 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55fe8e89ac10 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55fe8e89a9d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55fe8e89a8f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55fe8e89a818 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55fe8e89a800 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55fe8e89a7e0 <col:55> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55fe8e89a8d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55fe8e89a868 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55fe8e89a850 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55fe8e89a830 <col:74> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55fe8e89a8b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55fe8e89a8a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55fe8e89a880 <col:93> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55fe8e89a9b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55fe8e89a948 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55fe8e89a930 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55fe8e89a910 <col:112> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55fe8e89a998 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55fe8e89a980 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55fe8e89a960 <col:131> '_Bool' lvalue Var 0x55fe8e896240 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55fe8e89abf8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55fe8e89abe0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55fe8e89a9f0 <col:148> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55fe8e89abc0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55fe8e89ab90 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55fe8e89aab0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55fe8e89aa68 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55fe8e89aa50 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55fe8e89aa10 <col:166> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55fe8e89aa98 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55fe8e89aa80 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55fe8e89aa30 <col:184> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55fe8e89ab48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55fe8e89ab00 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55fe8e89aad0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55fe8e89ab78 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55fe8e89ab60 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55fe8e89ab28 <col:212> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55fe8e89b2f8 <line:768:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55fe8e89ad28 <col:3> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fe8e89b2e0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe8e89b2b0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55fe8e89b268 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fe8e89b250 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fe8e89ad48 <col:20> '_Bool' lvalue Var 0x55fe8e896618 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe8e89b298 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fe8e89b280 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fe8e89ad68 <col:36> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55fe8e89b230 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55fe8e89b200 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55fe8e89af78 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55fe8e89ae98 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55fe8e89adc0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55fe8e89ada8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55fe8e89ad88 <col:55> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55fe8e89ae78 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55fe8e89ae10 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55fe8e89adf8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55fe8e89add8 <col:74> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55fe8e89ae60 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55fe8e89ae48 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55fe8e89ae28 <col:93> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55fe8e89af58 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55fe8e89aef0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55fe8e89aed8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55fe8e89aeb8 <col:112> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55fe8e89af40 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55fe8e89af28 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55fe8e89af08 <col:131> '_Bool' lvalue Var 0x55fe8e896240 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55fe8e89b1e8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55fe8e89b1d0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55fe8e89afc0 <col:148> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55fe8e89b1b0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55fe8e89b180 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55fe8e89b080 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55fe8e89b038 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55fe8e89b020 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55fe8e89afe0 <col:166> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55fe8e89b068 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55fe8e89b050 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55fe8e89b000 <col:184> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55fe8e89b150 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55fe8e89b0d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55fe8e89b0a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55fe8e89b168 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55fe8e89b128 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55fe8e89b0f8 <col:219> 'int' 0
|   |-BinaryOperator 0x55fe8e89b8a0 <line:769:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55fe8e89b318 <col:3> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55fe8e89b888 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe8e89b858 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55fe8e89b810 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fe8e89b7f8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fe8e89b338 <col:20> '_Bool' lvalue Var 0x55fe8e896618 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe8e89b840 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fe8e89b828 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fe8e89b358 <col:36> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x55fe8e89b7d8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55fe8e89b7a8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55fe8e89b568 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55fe8e89b488 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55fe8e89b3b0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55fe8e89b398 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55fe8e89b378 <col:55> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55fe8e89b468 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55fe8e89b400 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55fe8e89b3e8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55fe8e89b3c8 <col:74> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55fe8e89b450 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55fe8e89b438 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55fe8e89b418 <col:93> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55fe8e89b548 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55fe8e89b4e0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55fe8e89b4c8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55fe8e89b4a8 <col:112> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55fe8e89b530 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55fe8e89b518 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55fe8e89b4f8 <col:131> '_Bool' lvalue Var 0x55fe8e896240 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55fe8e89b790 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55fe8e89b778 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55fe8e89b588 <col:148> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x55fe8e89b758 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55fe8e89b728 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55fe8e89b648 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55fe8e89b600 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55fe8e89b5e8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55fe8e89b5a8 <col:166> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55fe8e89b630 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55fe8e89b618 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55fe8e89b5c8 <col:184> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55fe8e89b6e0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55fe8e89b698 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55fe8e89b668 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55fe8e89b710 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55fe8e89b6f8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55fe8e89b6c0 <col:212> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55fe8e89be68 <line:770:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55fe8e89b8c0 <col:3> '_Bool' lvalue Var 0x55fe8e896240 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55fe8e89be50 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe8e89be20 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55fe8e89bdd8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fe8e89bdc0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fe8e89b8e0 <col:20> '_Bool' lvalue Var 0x55fe8e896618 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe8e89be08 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fe8e89bdf0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fe8e89b900 <col:36> '_Bool' lvalue Var 0x55fe8e896240 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x55fe8e89bda0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55fe8e89bd70 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55fe8e89bb10 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55fe8e89ba30 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55fe8e89b958 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55fe8e89b940 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55fe8e89b920 <col:55> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55fe8e89ba10 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55fe8e89b9a8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55fe8e89b990 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55fe8e89b970 <col:74> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55fe8e89b9f8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55fe8e89b9e0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55fe8e89b9c0 <col:93> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55fe8e89baf0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55fe8e89ba88 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55fe8e89ba70 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55fe8e89ba50 <col:112> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55fe8e89bad8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55fe8e89bac0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55fe8e89baa0 <col:131> '_Bool' lvalue Var 0x55fe8e896240 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55fe8e89bd58 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55fe8e89bd40 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55fe8e89bb30 <col:148> '_Bool' lvalue Var 0x55fe8e896240 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x55fe8e89bd20 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55fe8e89bcf0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55fe8e89bbf0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55fe8e89bba8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55fe8e89bb90 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55fe8e89bb50 <col:166> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55fe8e89bbd8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55fe8e89bbc0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55fe8e89bb70 <col:184> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55fe8e89bcc0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55fe8e89bc40 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55fe8e89bc10 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55fe8e89bcd8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55fe8e89bc98 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55fe8e89bc68 <col:219> 'int' 0
|   |-BinaryOperator 0x55fe8e89bee0 <line:771:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55fe8e89be88 <col:3> 'int' lvalue Var 0x55fe8e8958f0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55fe8e89bec8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fe8e89bea8 <col:25> 'int' lvalue Var 0x55fe8e895d40 'z' 'int'
|   |-BinaryOperator 0x55fe8e89c030 <line:772:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55fe8e89bf00 <col:3> 'int' lvalue Var 0x55fe8e895d40 'z' 'int'
|   | `-ConditionalOperator 0x55fe8e89c000 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55fe8e89bf98 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55fe8e89bf80 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55fe8e89bf20 <col:7> '_Bool' lvalue Var 0x55fe8e895dd8 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55fe8e89bfd0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fe8e89bf40 <col:25> 'int' lvalue Var 0x55fe8e895e58 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55fe8e89bfe8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55fe8e89bf60 <col:37> 'int' lvalue Var 0x55fe8e895d40 'z' 'int'
|   |-BinaryOperator 0x55fe8e89c0c8 <line:773:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55fe8e89c050 <col:3> '_Bool' lvalue Var 0x55fe8e895dd8 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55fe8e89c0a0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55fe8e89c070 <col:28> 'int' 0
|   |-CallExpr 0x55fe8e89c120 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fe8e89c108 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe8e89c0e8 <col:3> 'void ()' Function 0x55fe8e83c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fe8e89c178 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fe8e89c160 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe8e89c140 <col:3> 'void ()' Function 0x55fe8e83c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fe8e89c460 <line:776:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55fe8e89c198 <col:3> 'int' lvalue Var 0x55fe8e895d40 'z' 'int'
|   | `-ConditionalOperator 0x55fe8e89c430 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55fe8e89c258 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55fe8e89c210 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55fe8e89c1f8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55fe8e89c1b8 <col:7> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55fe8e89c240 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55fe8e89c228 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55fe8e89c1d8 <col:25> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55fe8e89c418 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fe8e89c278 <col:42> 'int' lvalue Var 0x55fe8e8963b8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55fe8e89c3f8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55fe8e89c3c8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55fe8e89c338 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55fe8e89c2f0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55fe8e89c2d8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55fe8e89c298 <col:55> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55fe8e89c320 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55fe8e89c308 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55fe8e89c2b8 <col:73> '_Bool' lvalue Var 0x55fe8e896240 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55fe8e89c398 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fe8e89c358 <col:90> 'int' lvalue Var 0x55fe8e8964b0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55fe8e89c3b0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fe8e89c378 <col:102> 'int' lvalue Var 0x55fe8e895d40 'z' 'int'
|   |-BinaryOperator 0x55fe8e89c668 <line:777:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55fe8e89c480 <col:3> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fe8e89c650 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe8e89c620 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55fe8e89c540 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55fe8e89c4f8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55fe8e89c4e0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55fe8e89c4a0 <col:20> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55fe8e89c528 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55fe8e89c510 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55fe8e89c4c0 <col:38> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe8e89c5d8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fe8e89c590 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fe8e89c560 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55fe8e89c608 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fe8e89c5f0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fe8e89c5b8 <col:66> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55fe8e89c950 <line:778:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55fe8e89c688 <col:3> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fe8e89c938 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe8e89c908 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55fe8e89c828 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55fe8e89c748 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55fe8e89c700 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55fe8e89c6e8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55fe8e89c6a8 <col:20> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55fe8e89c730 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55fe8e89c718 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55fe8e89c6c8 <col:38> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55fe8e89c808 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55fe8e89c7c0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55fe8e89c7a8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55fe8e89c768 <col:56> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55fe8e89c7f0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55fe8e89c7d8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55fe8e89c788 <col:74> '_Bool' lvalue Var 0x55fe8e896240 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe8e89c8c0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fe8e89c878 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fe8e89c848 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55fe8e89c8f0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fe8e89c8d8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fe8e89c8a0 <col:102> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55fe8e89cb58 <line:779:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55fe8e89c970 <col:3> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55fe8e89cb40 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe8e89cb10 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55fe8e89ca30 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55fe8e89c9e8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55fe8e89c9d0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55fe8e89c990 <col:20> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55fe8e89ca18 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55fe8e89ca00 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55fe8e89c9b0 <col:38> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe8e89cac8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fe8e89ca80 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fe8e89ca50 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55fe8e89caf8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fe8e89cae0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fe8e89caa8 <col:66> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55fe8e89ce40 <line:780:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55fe8e89cb78 <col:3> '_Bool' lvalue Var 0x55fe8e896240 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55fe8e89ce28 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe8e89cdf8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55fe8e89cd18 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55fe8e89cc38 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55fe8e89cbf0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55fe8e89cbd8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55fe8e89cb98 <col:20> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55fe8e89cc20 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55fe8e89cc08 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55fe8e89cbb8 <col:38> '_Bool' lvalue Var 0x55fe8e896060 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55fe8e89ccf8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55fe8e89ccb0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55fe8e89cc98 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55fe8e89cc58 <col:56> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55fe8e89cce0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55fe8e89ccc8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55fe8e89cc78 <col:74> '_Bool' lvalue Var 0x55fe8e896240 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe8e89cdb0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fe8e89cd68 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fe8e89cd38 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55fe8e89cde0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fe8e89cdc8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fe8e89cd90 <col:102> '_Bool' lvalue Var 0x55fe8e896240 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55fe8e89ce98 <line:781:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fe8e89ce80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe8e89ce60 <col:3> 'void ()' Function 0x55fe8e83c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fe8e89cef0 <line:782:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fe8e89ced8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe8e89ceb8 <col:3> 'void ()' Function 0x55fe8e83c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fe8e89cfa8 <line:783:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55fe8e89cf10 <col:3> 'int' lvalue Var 0x55fe8e895590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55fe8e89cf88 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55fe8e89cf70 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fe8e89cf30 <col:22> 'int' lvalue Var 0x55fe8e895590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55fe8e89cf50 <col:41> 'int' 1
|   |-CallExpr 0x55fe8e89d018 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fe8e89d000 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe8e89cfe0 <col:3> 'void ()' Function 0x55fe8e83c410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55fe8e89d090 <line:785:3, col:36>
|     `-CallExpr 0x55fe8e89d070 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55fe8e89d058 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55fe8e89d038 <col:10> 'void *(void)' Function 0x55fe8e83be68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55fe8e89d1c0 prev 0x55fe8e8952d8 <line:787:1, line:789:1> line:787:6 fence 'void ()'
| `-CompoundStmt 0x55fe8e89d260 <line:788:1, line:789:1>
|-FunctionDecl 0x55fe8e89d290 prev 0x55fe8e895398 <line:790:1, line:792:1> line:790:6 isync 'void ()'
| `-CompoundStmt 0x55fe8e89d330 <line:791:1, line:792:1>
|-FunctionDecl 0x55fe8e89d360 prev 0x55fe8e895458 <line:793:1, line:795:1> line:793:6 lwfence 'void ()'
| `-CompoundStmt 0x55fe8e89d400 <line:794:1, line:795:1>
`-FunctionDecl 0x55fe8e89d468 <line:796:1, line:820:1> line:796:5 main 'int ()'
  `-CompoundStmt 0x55fe8e89f0c0 <line:797:1, line:820:1>
    |-DeclStmt 0x55fe8e89d580 <line:798:3, col:18>
    | `-VarDecl 0x55fe8e89d518 <col:3, col:13> col:13 used t1311 'pthread_t':'unsigned long'
    |-CallExpr 0x55fe8e89d788 <line:799:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55fe8e89d770 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fe8e89d598 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55fe8e87c8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55fe8e89d5d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55fe8e89d5b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55fe8e89d518 't1311' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55fe8e89d7c8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55fe8e89d650 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55fe8e89d628 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55fe8e89d5f0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55fe8e89d7e0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fe8e89d670 <col:39> 'void *(void *)' Function 0x55fe8e896730 'P0' 'void *(void *)'
    | `-ParenExpr 0x55fe8e89d6f0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55fe8e89d6c8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55fe8e89d690 <col:52> 'int' 0
    |-DeclStmt 0x55fe8e89d870 <line:800:3, col:18>
    | `-VarDecl 0x55fe8e89d808 <col:3, col:13> col:13 used t1312 'pthread_t':'unsigned long'
    |-CallExpr 0x55fe8e89da18 <line:801:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55fe8e89da00 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fe8e89d888 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55fe8e87c8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55fe8e89d8c8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55fe8e89d8a8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55fe8e89d808 't1312' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55fe8e89da58 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55fe8e89d940 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55fe8e89d918 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55fe8e89d8e0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55fe8e89da70 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fe8e89d960 <col:39> 'void *(void *)' Function 0x55fe8e898120 'P1' 'void *(void *)'
    | `-ParenExpr 0x55fe8e89d9e0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55fe8e89d9b8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55fe8e89d980 <col:52> 'int' 0
    |-DeclStmt 0x55fe8e89db00 <line:802:3, col:18>
    | `-VarDecl 0x55fe8e89da98 <col:3, col:13> col:13 used t1313 'pthread_t':'unsigned long'
    |-CallExpr 0x55fe8e89dca8 <line:803:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55fe8e89dc90 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fe8e89db18 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55fe8e87c8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55fe8e89db58 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55fe8e89db38 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55fe8e89da98 't1313' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55fe8e89dce8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55fe8e89dbd0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55fe8e89dba8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55fe8e89db70 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55fe8e89dd00 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fe8e89dbf0 <col:39> 'void *(void *)' Function 0x55fe8e8994a8 'P2' 'void *(void *)'
    | `-ParenExpr 0x55fe8e89dc70 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55fe8e89dc48 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55fe8e89dc10 <col:52> 'int' 0
    |-CallExpr 0x55fe8e89dd50 <line:804:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55fe8e89dd38 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55fe8e89dd18 <col:3> 'void ()' Function 0x55fe8e83c350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55fe8e89de20 <line:805:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55fe8e89dd70 <col:3> '_Bool' lvalue Var 0x55fe8e895988 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55fe8e89de08 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55fe8e89dde8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55fe8e89ddd0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55fe8e89dd90 <col:21> 'int' lvalue Var 0x55fe8e895590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55fe8e89ddb0 <col:41> 'int' 3
    |-CallExpr 0x55fe8e89de78 <line:806:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55fe8e89de60 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55fe8e89de40 <col:3> 'void ()' Function 0x55fe8e83c410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55fe8e89def0 <line:807:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55fe8e89ded8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fe8e89de98 <col:3> 'void (int)' Function 0x55fe8e83bca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55fe8e89df30 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55fe8e89df18 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55fe8e89deb8 <col:21> '_Bool' lvalue Var 0x55fe8e895988 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55fe8e89df80 <line:808:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55fe8e89df68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55fe8e89df48 <col:3> 'void ()' Function 0x55fe8e83c350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55fe8e89e278 <line:809:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55fe8e89dfa0 <col:3> 'int' lvalue Var 0x55fe8e895d40 'z' 'int'
    | `-ConditionalOperator 0x55fe8e89e248 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55fe8e89e070 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55fe8e89e028 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55fe8e89e010 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55fe8e89dfc0 <col:7> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55fe8e89e058 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55fe8e89e040 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55fe8e89dff0 <col:25> '_Bool' lvalue Var 0x55fe8e895ed0 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55fe8e89e230 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55fe8e89e090 <col:42> 'int' lvalue Var 0x55fe8e8963b8 'z$w_buff0' 'int'
    |   `-ParenExpr 0x55fe8e89e210 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55fe8e89e1e0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55fe8e89e150 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55fe8e89e108 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55fe8e89e0f0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55fe8e89e0b0 <col:55> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55fe8e89e138 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55fe8e89e120 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55fe8e89e0d0 <col:73> '_Bool' lvalue Var 0x55fe8e8960d8 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55fe8e89e1b0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55fe8e89e170 <col:90> 'int' lvalue Var 0x55fe8e8964b0 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55fe8e89e1c8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55fe8e89e190 <col:102> 'int' lvalue Var 0x55fe8e895d40 'z' 'int'
    |-BinaryOperator 0x55fe8e89e480 <line:810:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55fe8e89e298 <col:3> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55fe8e89e468 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55fe8e89e438 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55fe8e89e358 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55fe8e89e310 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55fe8e89e2f8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55fe8e89e2b8 <col:20> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55fe8e89e340 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55fe8e89e328 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55fe8e89e2d8 <col:38> '_Bool' lvalue Var 0x55fe8e895ed0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55fe8e89e3f0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55fe8e89e3a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55fe8e89e378 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55fe8e89e420 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55fe8e89e408 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55fe8e89e3d0 <col:66> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55fe8e89e768 <line:811:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55fe8e89e4a0 <col:3> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55fe8e89e750 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55fe8e89e720 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55fe8e89e640 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55fe8e89e560 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55fe8e89e518 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55fe8e89e500 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55fe8e89e4c0 <col:20> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55fe8e89e548 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55fe8e89e530 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55fe8e89e4e0 <col:38> '_Bool' lvalue Var 0x55fe8e895ed0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55fe8e89e620 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55fe8e89e5d8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55fe8e89e5c0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55fe8e89e580 <col:56> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55fe8e89e608 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55fe8e89e5f0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55fe8e89e5a0 <col:74> '_Bool' lvalue Var 0x55fe8e8960d8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55fe8e89e6d8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55fe8e89e690 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55fe8e89e660 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55fe8e89e708 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55fe8e89e6f0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55fe8e89e6b8 <col:102> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55fe8e89e970 <line:812:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55fe8e89e788 <col:3> '_Bool' lvalue Var 0x55fe8e895ed0 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55fe8e89e958 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55fe8e89e928 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55fe8e89e848 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55fe8e89e800 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55fe8e89e7e8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55fe8e89e7a8 <col:20> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55fe8e89e830 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55fe8e89e818 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55fe8e89e7c8 <col:38> '_Bool' lvalue Var 0x55fe8e895ed0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55fe8e89e8e0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55fe8e89e898 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55fe8e89e868 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55fe8e89e910 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55fe8e89e8f8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55fe8e89e8c0 <col:66> '_Bool' lvalue Var 0x55fe8e895ed0 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55fe8e89ec58 <line:813:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55fe8e89e990 <col:3> '_Bool' lvalue Var 0x55fe8e8960d8 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55fe8e89ec40 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55fe8e89ec10 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55fe8e89eb30 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55fe8e89ea50 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55fe8e89ea08 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55fe8e89e9f0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55fe8e89e9b0 <col:20> '_Bool' lvalue Var 0x55fe8e896430 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55fe8e89ea38 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55fe8e89ea20 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55fe8e89e9d0 <col:38> '_Bool' lvalue Var 0x55fe8e895ed0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55fe8e89eb10 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55fe8e89eac8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55fe8e89eab0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55fe8e89ea70 <col:56> '_Bool' lvalue Var 0x55fe8e896528 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55fe8e89eaf8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55fe8e89eae0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55fe8e89ea90 <col:74> '_Bool' lvalue Var 0x55fe8e8960d8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55fe8e89ebc8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55fe8e89eb80 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55fe8e89eb50 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55fe8e89ebf8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55fe8e89ebe0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55fe8e89eba8 <col:102> '_Bool' lvalue Var 0x55fe8e8960d8 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55fe8e89ecb0 <line:814:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55fe8e89ec98 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55fe8e89ec78 <col:3> 'void ()' Function 0x55fe8e83c410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55fe8e89ed08 <line:815:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55fe8e89ecf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55fe8e89ecd0 <col:3> 'void ()' Function 0x55fe8e83c350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55fe8e89ef40 <line:816:3, col:103> '_Bool' '='
    | |-DeclRefExpr 0x55fe8e89ed28 <col:3> '_Bool' lvalue Var 0x55fe8e895a00 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55fe8e89ef28 <col:21, col:103> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55fe8e89ef10 <col:21, col:103> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55fe8e89eef0 <col:22, col:103> 'int'
    |       `-BinaryOperator 0x55fe8e89eed0 <col:23, col:102> 'int' '&&'
    |         |-BinaryOperator 0x55fe8e89ee38 <col:23, col:74> 'int' '&&'
    |         | |-BinaryOperator 0x55fe8e89eda0 <col:23, col:46> 'int' '=='
    |         | | |-ImplicitCastExpr 0x55fe8e89ed88 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x55fe8e89ed48 <col:23> 'int' lvalue Var 0x55fe8e8956b0 '__unbuffered_p0_EAX' 'int'
    |         | | `-IntegerLiteral 0x55fe8e89ed68 <col:46> 'int' 0
    |         | `-BinaryOperator 0x55fe8e89ee18 <col:51, col:74> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55fe8e89ee00 <col:51> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55fe8e89edc0 <col:51> 'int' lvalue Var 0x55fe8e8957d0 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x55fe8e89ede0 <col:74> 'int' 0
    |         `-BinaryOperator 0x55fe8e89eeb0 <col:79, col:102> 'int' '=='
    |           |-ImplicitCastExpr 0x55fe8e89ee98 <col:79> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55fe8e89ee58 <col:79> 'int' lvalue Var 0x55fe8e8958f0 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x55fe8e89ee78 <col:102> 'int' 0
    |-CallExpr 0x55fe8e89ef98 <line:817:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55fe8e89ef80 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55fe8e89ef60 <col:3> 'void ()' Function 0x55fe8e83c410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55fe8e89f038 <line:818:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55fe8e89f020 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fe8e89efb8 <col:3> 'void (int)' Function 0x55fe8e83c0d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55fe8e89f078 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55fe8e89f060 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55fe8e89f000 <col:21> '_Bool' lvalue Var 0x55fe8e895a00 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55fe8e89f0b0 <line:819:3, col:10>
      `-IntegerLiteral 0x55fe8e89f090 <col:10> 'int' 0
