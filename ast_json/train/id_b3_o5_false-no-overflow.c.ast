TranslationUnitDecl 0x55ebb91204d8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55ebb9120d98 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55ebb9120a70 '__int128'
|-TypedefDecl 0x55ebb9120e08 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55ebb9120a90 'unsigned __int128'
|-TypedefDecl 0x55ebb9121110 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55ebb9120ee0 'struct __NSConstantString_tag'
|   `-Record 0x55ebb9120e60 '__NSConstantString_tag'
|-TypedefDecl 0x55ebb91211b8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55ebb9121170 'char *'
|   `-BuiltinType 0x55ebb9120570 'char'
|-TypedefDecl 0x55ebb9160110 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55ebb9121450 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55ebb9121290 'struct __va_list_tag'
|     `-Record 0x55ebb9121210 '__va_list_tag'
|-FunctionDecl 0x55ebb91601c8 <recursive-simple/id_b3_o5_false-no-overflow.c:1:1, col:34> col:12 used __VERIFIER_nondet_int 'int ()' extern
|-FunctionDecl 0x55ebb9160300 <line:2:1, col:30> col:13 used __VERIFIER_error 'void ()' extern
|-FunctionDecl 0x55ebb9160488 <line:4:1, line:9:1> line:4:5 used id 'int (int)'
| |-ParmVarDecl 0x55ebb91603b8 <col:8, col:12> col:12 used x 'int'
| `-CompoundStmt 0x55ebb91608e0 <col:15, line:9:1>
|   |-IfStmt 0x55ebb91605d8 <line:5:3, col:20>
|   | |-BinaryOperator 0x55ebb9160588 <col:7, col:10> 'int' '=='
|   | | |-ImplicitCastExpr 0x55ebb9160570 <col:7> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x55ebb9160530 <col:7> 'int' lvalue ParmVar 0x55ebb91603b8 'x' 'int'
|   | | `-IntegerLiteral 0x55ebb9160550 <col:10> 'int' 0
|   | `-ReturnStmt 0x55ebb91605c8 <col:13, col:20>
|   |   `-IntegerLiteral 0x55ebb91605a8 <col:20> 'int' 0
|   |-DeclStmt 0x55ebb91607c0 <line:6:3, col:24>
|   | `-VarDecl 0x55ebb9160608 <col:3, col:23> col:7 used ret 'int' cinit
|   |   `-BinaryOperator 0x55ebb91607a0 <col:13, col:23> 'int' '+'
|   |     |-CallExpr 0x55ebb9160758 <col:13, col:19> 'int'
|   |     | |-ImplicitCastExpr 0x55ebb9160740 <col:13> 'int (*)(int)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x55ebb9160670 <col:13> 'int (int)' Function 0x55ebb9160488 'id' 'int (int)'
|   |     | `-BinaryOperator 0x55ebb91606e8 <col:16, col:18> 'int' '-'
|   |     |   |-ImplicitCastExpr 0x55ebb91606d0 <col:16> 'int' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x55ebb9160690 <col:16> 'int' lvalue ParmVar 0x55ebb91603b8 'x' 'int'
|   |     |   `-IntegerLiteral 0x55ebb91606b0 <col:18> 'int' 1
|   |     `-IntegerLiteral 0x55ebb9160780 <col:23> 'int' 1
|   |-IfStmt 0x55ebb9160880 <line:7:3, col:23>
|   | |-BinaryOperator 0x55ebb9160830 <col:7, col:13> 'int' '>'
|   | | |-ImplicitCastExpr 0x55ebb9160818 <col:7> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x55ebb91607d8 <col:7> 'int' lvalue Var 0x55ebb9160608 'ret' 'int'
|   | | `-IntegerLiteral 0x55ebb91607f8 <col:13> 'int' 3
|   | `-ReturnStmt 0x55ebb9160870 <col:16, col:23>
|   |   `-IntegerLiteral 0x55ebb9160850 <col:23> 'int' 3
|   `-ReturnStmt 0x55ebb91608d0 <line:8:3, col:10>
|     `-ImplicitCastExpr 0x55ebb91608b8 <col:10> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55ebb9160898 <col:10> 'int' lvalue Var 0x55ebb9160608 'ret' 'int'
`-FunctionDecl 0x55ebb91609e8 <line:11:1, line:17:1> line:11:5 main 'int (void)'
  `-CompoundStmt 0x55ebb9160eb0 <col:16, line:17:1>
    |-DeclStmt 0x55ebb9160bc8 <line:12:3, col:38>
    | `-VarDecl 0x55ebb9160ad8 <col:3, col:37> col:7 used input 'int' cinit
    |   `-CallExpr 0x55ebb9160ba8 <col:15, col:37> 'int'
    |     `-ImplicitCastExpr 0x55ebb9160b90 <col:15> 'int (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55ebb9160b40 <col:15> 'int ()' Function 0x55ebb91601c8 '__VERIFIER_nondet_int' 'int ()'
    |-DeclStmt 0x55ebb9160cf8 <line:13:3, col:25>
    | `-VarDecl 0x55ebb9160bf8 <col:3, col:24> col:7 used result 'int' cinit
    |   `-CallExpr 0x55ebb9160cb8 <col:16, col:24> 'int'
    |     |-ImplicitCastExpr 0x55ebb9160ca0 <col:16> 'int (*)(int)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x55ebb9160c60 <col:16> 'int (int)' Function 0x55ebb9160488 'id' 'int (int)'
    |     `-ImplicitCastExpr 0x55ebb9160ce0 <col:19> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x55ebb9160c80 <col:19> 'int' lvalue Var 0x55ebb9160ad8 'input' 'int'
    `-IfStmt 0x55ebb9160e98 <line:14:3, line:16:3>
      |-BinaryOperator 0x55ebb9160d68 <line:14:7, col:17> 'int' '=='
      | |-ImplicitCastExpr 0x55ebb9160d50 <col:7> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x55ebb9160d10 <col:7> 'int' lvalue Var 0x55ebb9160bf8 'result' 'int'
      | `-IntegerLiteral 0x55ebb9160d30 <col:17> 'int' 5
      `-CompoundStmt 0x55ebb9160e80 <col:20, line:16:3>
        `-LabelStmt 0x55ebb9160e68 <line:15:5, col:29> 'ERROR'
          `-CallExpr 0x55ebb9160df8 <col:12, col:29> 'void'
            `-ImplicitCastExpr 0x55ebb9160de0 <col:12> 'void (*)()' <FunctionToPointerDecay>
              `-DeclRefExpr 0x55ebb9160d88 <col:12> 'void ()' Function 0x55ebb9160300 '__VERIFIER_error' 'void ()'
