TranslationUnitDecl 0x563ab52f9f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x563ab52fa848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x563ab52fa520 '__int128'
|-TypedefDecl 0x563ab52fa8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x563ab52fa540 'unsigned __int128'
|-TypedefDecl 0x563ab52fabc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x563ab52fa990 'struct __NSConstantString_tag'
|   `-Record 0x563ab52fa910 '__NSConstantString_tag'
|-TypedefDecl 0x563ab52fac68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x563ab52fac20 'char *'
|   `-BuiltinType 0x563ab52fa020 'char'
|-TypedefDecl 0x563ab5339b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x563ab52faf00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x563ab52fad40 'struct __va_list_tag'
|     `-Record 0x563ab52facc0 '__va_list_tag'
|-FunctionDecl 0x563ab5339ca0 <pthread-wmm/mix043_pso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x563ab5339bd0 <col:31> col:34 'int'
|-FunctionDecl 0x563ab5339e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x563ab5339f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x563ab533a0d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x563ab533a048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x563ab533a308 <col:40, col:99>
|   |-IfStmt 0x563ab533a2d8 <col:42, col:88>
|   | |-UnaryOperator 0x563ab533a1b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x563ab533a1a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x563ab533a180 <col:47> 'int' lvalue ParmVar 0x563ab533a048 'expression' 'int'
|   | `-CompoundStmt 0x563ab533a2c0 <col:59, col:88>
|   |   `-LabelStmt 0x563ab533a2a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x563ab533a238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x563ab533a220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x563ab533a1d0 <col:68> 'void () __attribute__((noreturn))' Function 0x563ab5339f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x563ab533a2f0 <col:89>
|   `-ReturnStmt 0x563ab533a2f8 <col:91>
|-FunctionDecl 0x563ab533a350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x563ab533a410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x563ab533a790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563ab533a4c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x563ab533a548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x563ab533a5c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x563ab533a648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x563ab533a850 <line:10:22>
|-FunctionDecl 0x563ab53608a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563ab533a8c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x563ab533a940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x563ab533a9c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x563ab533aa40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x563ab5360960 <line:13:22>
|-FunctionDecl 0x563ab5360c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563ab53609d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x563ab5360a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x563ab5360ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x563ab5360cc8 <line:15:22>
|-TypedefDecl 0x563ab5360d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x563ab52fa0e0 'unsigned char'
|-TypedefDecl 0x563ab5360da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x563ab52fa100 'unsigned short'
|-TypedefDecl 0x563ab5360e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x563ab52fa120 'unsigned int'
|-TypedefDecl 0x563ab5360e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x563ab52fa140 'unsigned long'
|-TypedefDecl 0x563ab5360ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x563ab52fa040 'signed char'
|-TypedefDecl 0x563ab5360f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x563ab52fa0e0 'unsigned char'
|-TypedefDecl 0x563ab5360fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x563ab52fa060 'short'
|-TypedefDecl 0x563ab5361048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x563ab52fa100 'unsigned short'
|-TypedefDecl 0x563ab53610b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x563ab52fa080 'int'
|-TypedefDecl 0x563ab5361128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x563ab52fa120 'unsigned int'
|-TypedefDecl 0x563ab5361198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x563ab52fa0a0 'long'
|-TypedefDecl 0x563ab5361208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x563ab52fa140 'unsigned long'
|-TypedefDecl 0x563ab5361278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x563ab52fa0a0 'long'
|-TypedefDecl 0x563ab53612e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x563ab52fa140 'unsigned long'
|-TypedefDecl 0x563ab5361358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x563ab52fa140 'unsigned long'
|-TypedefDecl 0x563ab53613c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x563ab52fa120 'unsigned int'
|-TypedefDecl 0x563ab5361438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x563ab52fa120 'unsigned int'
|-TypedefDecl 0x563ab53614a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x563ab52fa140 'unsigned long'
|-TypedefDecl 0x563ab5361518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x563ab52fa140 'unsigned long'
|-TypedefDecl 0x563ab5361588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x563ab52fa120 'unsigned int'
|-TypedefDecl 0x563ab53615f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x563ab52fa140 'unsigned long'
|-TypedefDecl 0x563ab5361668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x563ab52fa0a0 'long'
|-TypedefDecl 0x563ab53616d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x563ab52fa0a0 'long'
|-TypedefDecl 0x563ab5361748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x563ab52fa080 'int'
|-RecordDecl 0x563ab53617a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x563ab5361918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x563ab53619d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x563ab5361970 'struct __fsid_t' sugar
|   `-RecordType 0x563ab5361820 '__fsid_t'
|     `-Record 0x563ab53617a0 ''
|-TypedefDecl 0x563ab5361a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x563ab52fa0a0 'long'
|-TypedefDecl 0x563ab5361ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x563ab52fa140 'unsigned long'
|-TypedefDecl 0x563ab5361b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x563ab52fa140 'unsigned long'
|-TypedefDecl 0x563ab5361ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x563ab52fa120 'unsigned int'
|-TypedefDecl 0x563ab5361c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x563ab52fa0a0 'long'
|-TypedefDecl 0x563ab5361c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x563ab52fa120 'unsigned int'
|-TypedefDecl 0x563ab5361cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x563ab52fa0a0 'long'
|-TypedefDecl 0x563ab5361d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x563ab52fa080 'int'
|-TypedefDecl 0x563ab5361dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x563ab52fa080 'int'
|-TypedefDecl 0x563ab5361e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x563ab52fa080 'int'
|-TypedefDecl 0x563ab5361eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x563ab52fa7a0 'void *'
|   `-BuiltinType 0x563ab52f9fe0 'void'
|-TypedefDecl 0x563ab5361f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x563ab52fa0a0 'long'
|-TypedefDecl 0x563ab5361f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x563ab52fa0a0 'long'
|-TypedefDecl 0x563ab5362008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x563ab52fa0a0 'long'
|-TypedefDecl 0x563ab5362078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x563ab52fa140 'unsigned long'
|-TypedefDecl 0x563ab53620e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x563ab52fa140 'unsigned long'
|-TypedefDecl 0x563ab5362158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x563ab52fa140 'unsigned long'
|-TypedefDecl 0x563ab53621c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x563ab52fa140 'unsigned long'
|-TypedefDecl 0x563ab5362238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x563ab52fa0a0 'long'
|-TypedefDecl 0x563ab53622a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x563ab52fa0a0 'long'
|-TypedefDecl 0x563ab5362318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x563ab52fa0a0 'long'
|-TypedefDecl 0x563ab5362388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x563ab52fa140 'unsigned long'
|-TypedefDecl 0x563ab5362418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x563ab53623e0 '__off64_t' sugar
|   |-Typedef 0x563ab53616d8 '__off64_t'
|   `-BuiltinType 0x563ab52fa0a0 'long'
|-TypedefDecl 0x563ab5362510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x563ab53624d0 '__quad_t *'
|   `-TypedefType 0x563ab5362470 '__quad_t' sugar
|     |-Typedef 0x563ab5361278 '__quad_t'
|     `-BuiltinType 0x563ab52fa0a0 'long'
|-TypedefDecl 0x563ab5362580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x563ab52fac20 'char *'
|   `-BuiltinType 0x563ab52fa020 'char'
|-TypedefDecl 0x563ab53625f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x563ab52fa0a0 'long'
|-TypedefDecl 0x563ab5362660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x563ab52fa120 'unsigned int'
|-FunctionDecl 0x563ab53627a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x563ab53626d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x563ab5362ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x563ab5362ad8 <line:72:3, col:34>
|     `-CallExpr 0x563ab5362a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x563ab5362a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x563ab5362a10 <col:10> '<builtin fn type>' Function 0x563ab5362880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x563ab5362ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x563ab5362a30 <col:29> 'unsigned int' lvalue ParmVar 0x563ab53626d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x563ab5362880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x563ab5362920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x563ab5362990 <col:10> Implicit
| `-ConstAttr 0x563ab53629e8 <col:10> Implicit
|-FunctionDecl 0x563ab5362c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x563ab5362b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x563ab5362f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x563ab5362f48 <line:77:3, col:34>
|     `-CallExpr 0x563ab5362f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x563ab5362ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x563ab5362e78 <col:10> '<builtin fn type>' Function 0x563ab5362ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x563ab5362f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x563ab5362e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x563ab5362b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x563ab5362ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x563ab5362d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x563ab5362df8 <col:10> Implicit
| `-ConstAttr 0x563ab5362e50 <col:10> Implicit
|-TypedefDecl 0x563ab5362f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x563ab52fa140 'unsigned long'
|-TypedefDecl 0x563ab5363018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x563ab5362fe0 '__time_t' sugar
|   |-Typedef 0x563ab5361c18 '__time_t'
|   `-BuiltinType 0x563ab52fa0a0 'long'
|-RecordDecl 0x563ab5363070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x563ab5363128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x563ab53631b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x563ab5363248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x563ab5363210 '__pid_t' sugar
|   |-Typedef 0x563ab5361748 '__pid_t'
|   `-BuiltinType 0x563ab52fa080 'int'
|-RecordDecl 0x563ab53632a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x563ab5363360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x563ab53633b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x563ab5363470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x563ab53634d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x563ab52fa140 'unsigned long'
|-RecordDecl 0x563ab5363530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x563ab53637c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x563ab53658b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x563ab5363810 'struct cpu_set_t' sugar
|   `-RecordType 0x563ab53635b0 'cpu_set_t'
|     `-Record 0x563ab5363530 ''
|-FunctionDecl 0x563ab5365b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x563ab5365958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x563ab5365a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x563ab5365c38 <line:107:19>
|-FunctionDecl 0x563ab5365e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x563ab5365ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x563ab5365eb8 <col:69>
|-FunctionDecl 0x563ab5366030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x563ab5365f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x563ab53660d8 <col:64>
|-FunctionDecl 0x563ab5366398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x563ab5366140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563ab5366278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x563ab5366448 <line:113:22>
|-FunctionDecl 0x563ab53666c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x563ab53664b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563ab53665a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x563ab5366778 <col:88>
|-FunctionDecl 0x563ab5366a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x563ab53667e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563ab53668c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x563ab5366950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x563ab5366b50 <col:62>
|-FunctionDecl 0x563ab5366cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x563ab5366bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x563ab5366d70 <col:63>
|-FunctionDecl 0x563ab5366e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x563ab5366f38 <col:47>
|-FunctionDecl 0x563ab5367040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x563ab5366fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x563ab53670e8 <col:69>
|-FunctionDecl 0x563ab53671f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x563ab5367158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x563ab5367298 <col:69>
|-FunctionDecl 0x563ab5367558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x563ab5367300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563ab5367438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x563ab5367608 <col:88>
|-TypedefDecl 0x563ab5367698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x563ab5367660 '__clock_t' sugar
|   |-Typedef 0x563ab5361a58 '__clock_t'
|   `-BuiltinType 0x563ab52fa0a0 'long'
|-TypedefDecl 0x563ab5367728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x563ab53676f0 '__clockid_t' sugar
|   |-Typedef 0x563ab5361e48 '__clockid_t'
|   `-BuiltinType 0x563ab52fa080 'int'
|-TypedefDecl 0x563ab53677b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x563ab5367780 '__timer_t' sugar
|   |-Typedef 0x563ab5361eb8 '__timer_t'
|   `-PointerType 0x563ab52fa7a0 'void *'
|     `-BuiltinType 0x563ab52f9fe0 'void'
|-RecordDecl 0x563ab5367810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x563ab53678e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x563ab5367950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x563ab53679b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x563ab5367a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x563ab5367a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x563ab5367af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x563ab5367b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x563ab5367bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x563ab5367c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x563ab5367c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x563ab5367cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x563ab5367d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x563ab5367e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x563ab5367e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x563ab5367f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x563ab5368100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x563ab53681a0 <col:45>
|-FunctionDecl 0x563ab5368380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x563ab5368270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x563ab5368428 <col:54>
|-FunctionDecl 0x563ab5368628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x563ab5368490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x563ab5368508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x563ab53686d8 <line:157:22>
| `-ConstAttr 0x563ab5368730 <col:63>
|-FunctionDecl 0x563ab5369560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x563ab5368828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x563ab5369608 <col:56>
|-FunctionDecl 0x563ab53699b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x563ab5369678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x563ab53696f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x563ab5369770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x563ab5369868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x563ab5369a70 <col:54>
|-RecordDecl 0x563ab5369ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x563ab5369b78 parent 0x563ab52f9f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x563ab5369dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x563ab5369e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x563ab5369ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x563ab5369f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x563ab536a038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x563ab536a158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x563ab536a100 'struct __locale_struct *'
|   `-ElaboratedType 0x563ab536a090 'struct __locale_struct' sugar
|     `-RecordType 0x563ab5369b50 'struct __locale_struct'
|       `-Record 0x563ab5369ac8 '__locale_struct'
|-TypedefDecl 0x563ab536a208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x563ab536a1d0 '__locale_t' sugar
|   |-Typedef 0x563ab536a158 '__locale_t'
|   `-PointerType 0x563ab536a100 'struct __locale_struct *'
|     `-ElaboratedType 0x563ab536a090 'struct __locale_struct' sugar
|       `-RecordType 0x563ab5369b50 'struct __locale_struct'
|         `-Record 0x563ab5369ac8 '__locale_struct'
|-FunctionDecl 0x563ab536a610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x563ab536a278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x563ab536a2f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x563ab536a370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x563ab536a400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x563ab536a478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x563ab536a6d8 <col:40>
|-FunctionDecl 0x563ab536a8c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x563ab536a7a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x563ab536a970 <col:66>
|-FunctionDecl 0x563ab536aa80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x563ab536a9d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x563ab536ab28 <col:69>
|-FunctionDecl 0x563ab536ad58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x563ab536ab90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x563ab536ac20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x563ab536ae08 <col:52>
|-FunctionDecl 0x563ab536afb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x563ab536ae70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x563ab536af00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x563ab536b060 <col:55>
|-FunctionDecl 0x563ab536b1f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x563ab536b0e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x563ab536b2a0 <col:62>
|-FunctionDecl 0x563ab536b418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x563ab536b308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x563ab536b4c0 <col:60>
|-FunctionDecl 0x563ab536b718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x563ab536b578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x563ab536b5f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x563ab536b7c8 <col:44>
|-FunctionDecl 0x563ab536b9d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x563ab536b830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x563ab536b8b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x563ab536ba88 <col:49>
|-VarDecl 0x563ab536bb88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x563ab536bc08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x563ab536bc88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x563ab536bd50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x563ab536be80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x563ab536bf20 <col:42>
|-VarDecl 0x563ab536bf90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x563ab536c010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x563ab536c198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x563ab536c088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x563ab536c240 <col:57>
|-FunctionDecl 0x563ab536c350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x563ab536c2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x563ab536c3f8 <col:56>
|-FunctionDecl 0x563ab536d540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x563ab536c478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x563ab536d5e8 <col:59>
|-FunctionDecl 0x563ab536d6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x563ab536d658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x563ab536d798 <col:48>
| `-ConstAttr 0x563ab536d7f0 <col:89>
|-FunctionDecl 0x563ab536da58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x563ab536d8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x563ab536d938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x563ab536dcb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x563ab536db48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563ab536dbd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x563ab536dd68 <col:88>
|-FunctionDecl 0x563ab536df00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x563ab536ddd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563ab536de60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x563ab536dfb0 <col:88>
|-FunctionDecl 0x563ab536e1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x563ab536e018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563ab536e0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x563ab536e278 <line:208:22>
|-FunctionDecl 0x563ab536e5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x563ab536e2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563ab536e360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x563ab536e3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x563ab536e480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x563ab536e8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x563ab536e6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x563ab536e7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x563ab536e998 <col:85>
|-FunctionDecl 0x563ab536ed88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x563ab536ea00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563ab536eb38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x563ab536ec40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x563ab536ee40 <col:52>
|-FunctionDecl 0x563ab536efb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x563ab536eea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x563ab536f060 <col:61>
|-FunctionDecl 0x563ab536f560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x563ab536f0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x563ab536f148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x563ab536f278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x563ab536f368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x563ab536f620 <col:62>
|-FunctionDecl 0x563ab536f838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x563ab536f688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x563ab536f718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x563ab536f8e8 <line:221:22>
|-FunctionDecl 0x563ab536f9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x563ab536f950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x563ab536fa90 <col:65>
|-TypedefDecl 0x563ab536fb00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x563ab52fa140 'unsigned long'
|-RecordDecl 0x563ab536fb58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x563ab536fca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x563ab536fd08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563ab536fdb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x563ab536fd60 'union pthread_attr_t' sugar
|   `-RecordType 0x563ab536fbe0 'union pthread_attr_t'
|     `-Record 0x563ab536fb58 'pthread_attr_t'
|-RecordDecl 0x563ab536fe10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x563ab536ff88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x563ab5370000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x563ab53700b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x563ab5370050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x563ab536fe90 'struct __pthread_internal_list'
|     `-Record 0x563ab536fe10 '__pthread_internal_list'
|-RecordDecl 0x563ab5370120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x563ab53701c8 parent 0x563ab52f9f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x563ab53702a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x563ab5370308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x563ab5370370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x563ab53703d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x563ab5370440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x563ab53704a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x563ab5374580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x563ab5374630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x563ab5374720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x563ab5374788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563ab5374910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x563ab53748b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x563ab53701a0 'pthread_mutex_t'
|     `-Record 0x563ab5370120 ''
|-RecordDecl 0x563ab5374980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x563ab5374ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x563ab5374b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x563ab5374be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x563ab5374b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x563ab5374a00 'pthread_mutexattr_t'
|     `-Record 0x563ab5374980 ''
|-RecordDecl 0x563ab5374c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x563ab5374cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x563ab5374dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x563ab5374e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x563ab5374e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x563ab5374ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x563ab5374f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x563ab5374fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x563ab5375030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x563ab5375098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x563ab5375150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix043_pso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix043_pso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x563ab5375240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x563ab53752a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x563ab53753e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x563ab5375380 'union pthread_cond_t' sugar
|   `-RecordType 0x563ab5374cd0 'pthread_cond_t'
|     `-Record 0x563ab5374c50 ''
|-RecordDecl 0x563ab5375450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x563ab5375590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x563ab53755f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x563ab53756b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x563ab5375650 'union pthread_condattr_t' sugar
|   `-RecordType 0x563ab53754d0 'pthread_condattr_t'
|     `-Record 0x563ab5375450 ''
|-TypedefDecl 0x563ab5375738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x563ab52fa120 'unsigned int'
|-TypedefDecl 0x563ab53757a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x563ab52fa080 'int'
|-RecordDecl 0x563ab5375800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x563ab53758a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x563ab5375970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x563ab53759d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x563ab5375a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x563ab5375aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x563ab5375b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x563ab5375b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x563ab5375be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x563ab5375c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x563ab5375cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x563ab5375d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x563ab5375d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x563ab5375e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix043_pso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix043_pso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x563ab5375ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x563ab5375f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563ab5376090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x563ab5376030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x563ab5375880 'pthread_rwlock_t'
|     `-Record 0x563ab5375800 ''
|-RecordDecl 0x563ab5376100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x563ab5376240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x563ab53762a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563ab5376360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x563ab5376300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x563ab5376180 'pthread_rwlockattr_t'
|     `-Record 0x563ab5376100 ''
|-TypedefDecl 0x563ab53763e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x563ab52fa084 'volatile int' volatile
|   `-BuiltinType 0x563ab52fa080 'int'
|-RecordDecl 0x563ab5376440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x563ab53785b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x563ab5378618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563ab53786d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x563ab5378670 'union pthread_barrier_t' sugar
|   `-RecordType 0x563ab53764c0 'pthread_barrier_t'
|     `-Record 0x563ab5376440 ''
|-RecordDecl 0x563ab5378740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x563ab5378840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x563ab53788a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x563ab5378960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x563ab5378900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x563ab53787c0 'pthread_barrierattr_t'
|     `-Record 0x563ab5378740 ''
|-TypedefDecl 0x563ab5378a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x563ab5378a10 'long [8]' 8 
|   `-BuiltinType 0x563ab52fa0a0 'long'
|-EnumDecl 0x563ab5378ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x563ab5378b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x563ab5378be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x563ab5378c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x563ab5378d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x563ab5378d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x563ab5378da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x563ab5378df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x563ab5378e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x563ab5378e68 <col:26> 'int'
| |   `-DeclRefExpr 0x563ab5378e48 <col:26> 'int' EnumConstant 0x563ab5378d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x563ab5378f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x563ab5378ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x563ab5378ed0 <col:29> 'int' EnumConstant 0x563ab5378d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x563ab5378f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x563ab5378f78 <col:30> 'int'
| |   `-DeclRefExpr 0x563ab5378f58 <col:30> 'int' EnumConstant 0x563ab5378da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x563ab5379018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x563ab5379000 <col:27> 'int'
|     `-DeclRefExpr 0x563ab5378fe0 <col:27> 'int' EnumConstant 0x563ab5378e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x563ab5379068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x563ab5379138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x563ab53791c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x563ab53791a8 <col:30> 'int'
| |   `-DeclRefExpr 0x563ab5379188 <col:30> 'int' EnumConstant 0x563ab5379138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x563ab5379210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x563ab5379298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x563ab5379280 <col:29> 'int'
|     `-DeclRefExpr 0x563ab5379260 <col:29> 'int' EnumConstant 0x563ab5379210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x563ab53792e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x563ab53793b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x563ab5379408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x563ab5379458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x563ab53794a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x563ab53795c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x563ab5379610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x563ab5379660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x563ab53796e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x563ab53796d0 <col:31> 'int'
|     `-DeclRefExpr 0x563ab53796b0 <col:31> 'int' EnumConstant 0x563ab53795c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x563ab5379738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x563ab5379808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x563ab5379858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x563ab53798a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x563ab5379978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x563ab53799c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x563ab5379a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x563ab5379ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x563ab5379b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x563ab5379b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x563ab5379dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x563ab5379e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x563ab5379e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x563ab5379fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x563ab537a008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x563ab537a0d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x563ab537a128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x563ab537a178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x563ab537a248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x563ab537a298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x563ab537a8f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x563ab537a390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x563ab537a4a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563ab537a6e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x563ab537a760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x563ab537a9b8 <col:47>
| |-NonNullAttr 0x563ab537aa10 <col:77, col:94> 1 3
| `-CallbackAttr 0x563ab537aa48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x563ab537ab70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x563ab537aaa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x563ab537adc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x563ab537ac28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x563ab537aca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x563ab537af98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x563ab537ae88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x563ab537b040 <col:60>
|-FunctionDecl 0x563ab537b190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x563ab537b230 <col:54>
| `-ConstAttr 0x563ab537b288 <col:95>
|-FunctionDecl 0x563ab537b458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x563ab537b2c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563ab537b338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x563ab537b508 <line:394:19>
| `-ConstAttr 0x563ab537b560 <col:60>
|-FunctionDecl 0x563ab537bf68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x563ab537be30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x563ab537c010 <col:71>
| `-NonNullAttr 0x563ab537c068 <col:112, col:126> 1
|-FunctionDecl 0x563ab537c170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x563ab537c0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x563ab537c218 <line:397:22>
| `-NonNullAttr 0x563ab537c270 <col:63, col:77> 1
|-FunctionDecl 0x563ab537c498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x563ab537c2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x563ab537c338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x563ab537c548 <line:400:22>
| `-NonNullAttr 0x563ab537c5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x563ab537c7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563ab537c5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563ab537c668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x563ab537c858 <line:403:22>
| `-NonNullAttr 0x563ab537c8b0 <col:63, col:77> 1
|-FunctionDecl 0x563ab537cb08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x563ab537c8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x563ab537c9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x563ab537cbb8 <line:406:22>
| `-NonNullAttr 0x563ab537cc10 <col:63, col:80> 1 2
|-FunctionDecl 0x563ab537de48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x563ab537cc58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563ab537ccd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x563ab537def8 <line:409:22>
| `-NonNullAttr 0x563ab537df50 <col:63, col:77> 1
|-FunctionDecl 0x563ab537e188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x563ab537df98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563ab537e028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x563ab537e238 <line:412:22>
| `-NonNullAttr 0x563ab537e290 <col:63, col:80> 1 2
|-FunctionDecl 0x563ab537e4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x563ab537e2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x563ab537e368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x563ab537e578 <col:37>
| `-NonNullAttr 0x563ab537e5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x563ab537e7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563ab537e618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563ab537e698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x563ab537e868 <line:418:22>
| `-NonNullAttr 0x563ab537e8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x563ab537ea48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563ab537e908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563ab537e988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x563ab537eaf8 <line:420:22>
| `-NonNullAttr 0x563ab537eb50 <col:63, col:77> 1
|-FunctionDecl 0x563ab537ecf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563ab537eb98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563ab537ec18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x563ab537eda8 <line:423:22>
| `-NonNullAttr 0x563ab537fe30 <col:63, col:80> 1 2
|-FunctionDecl 0x563ab537ffb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563ab537fe78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563ab537fef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x563ab5380068 <line:426:22>
| `-NonNullAttr 0x563ab53800c0 <col:63, col:77> 1
|-FunctionDecl 0x563ab5380268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563ab5380108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563ab5380188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x563ab5380318 <line:429:22>
| `-NonNullAttr 0x563ab5380370 <col:63, col:80> 1 2
|-FunctionDecl 0x563ab53804f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563ab53803b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563ab5380438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x563ab53805a8 <line:431:22>
| `-NonNullAttr 0x563ab5380600 <col:63, col:77> 1
|-FunctionDecl 0x563ab5380828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x563ab5380648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563ab53806c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x563ab53808d8 <line:434:22>
| |-NonNullAttr 0x563ab5380930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x563ab5380968 <col:100> "" ""
|-FunctionDecl 0x563ab5380b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x563ab53809b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563ab5380a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x563ab5380c28 <line:437:22>
| |-NonNullAttr 0x563ab5380c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x563ab5380cb8 <col:97> "" ""
|-FunctionDecl 0x563ab5380eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x563ab5380d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563ab5380d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x563ab5380f68 <line:440:22>
| `-NonNullAttr 0x563ab5380fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x563ab5381140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x563ab5381008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563ab5381080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x563ab53811f0 <line:443:22>
| `-NonNullAttr 0x563ab5381248 <col:63, col:77> 1
|-FunctionDecl 0x563ab5381538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x563ab5381298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563ab5381318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x563ab5381390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x563ab53815f0 <line:447:22>
| `-NonNullAttr 0x563ab5381648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x563ab53818f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x563ab53816a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563ab5381720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x563ab5381798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x563ab53819b0 <col:43>
| `-NonNullAttr 0x563ab5381a08 <col:84, col:98> 1
|-FunctionDecl 0x563ab5381cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x563ab5381a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563ab5381ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x563ab5381b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x563ab5381d80 <line:452:22>
| `-NonNullAttr 0x563ab5381dd8 <col:63, col:77> 3
|-FunctionDecl 0x563ab53820e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x563ab5381e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563ab5381ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x563ab5381f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x563ab53821a0 <line:456:22>
| `-NonNullAttr 0x563ab53821f8 <col:63, col:80> 2 3
|-FunctionDecl 0x563ab53823e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x563ab5382248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563ab53822c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x563ab5382498 <line:458:22>
|-FunctionDecl 0x563ab5382868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x563ab5382560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x563ab5382700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x563ab5382918 <col:52, col:69> 1 2
|-FunctionDecl 0x563ab5382ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x563ab53829a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x563ab5382a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x563ab5382ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x563ab5382b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x563ab5382c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x563ab5382e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x563ab5382d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x563ab5382fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x563ab5383040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x563ab53830e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x563ab53831d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x563ab5383240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x563ab5383410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix043_pso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x563ab5383508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x563ab53835c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x563ab5383560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x563ab53830c0 '__pthread_unwind_buf_t'
| |   `-Record 0x563ab5383040 ''
| `-AlignedAttr 0x563ab5383618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x563ab5383690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x563ab53837f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x563ab5383858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x563ab53838c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x563ab5383928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x563ab5383b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x563ab5383a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x563ab5383c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x563ab5383be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x563ab5383e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563ab5383d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x563ab5383f18 <line:487:22>
|-RecordDecl 0x563ab5383f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x563ab5384288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x563ab53840e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x563ab5384168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x563ab5384338 <col:86>
| `-ReturnsTwiceAttr 0x563ab5384390 <col:12> Implicit
|-FunctionDecl 0x563ab53846b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x563ab5384460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x563ab5384570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x563ab5384768 <line:493:22>
| `-NonNullAttr 0x563ab53847c0 <col:63, col:77> 1
|-FunctionDecl 0x563ab5384938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563ab5384808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563ab53849e0 <line:495:22>
| `-NonNullAttr 0x563ab5384a38 <col:63, col:77> 1
|-FunctionDecl 0x563ab5384b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563ab5384a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563ab5384be8 <line:497:22>
| `-NonNullAttr 0x563ab5384c40 <col:52, col:66> 1
|-FunctionDecl 0x563ab5384d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563ab5384c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563ab5384de8 <line:499:22>
| `-NonNullAttr 0x563ab5384e40 <col:52, col:66> 1
|-FunctionDecl 0x563ab5385088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563ab5384e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563ab5384f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x563ab5385138 <col:36>
| `-NonNullAttr 0x563ab5385190 <col:66, col:83> 1 2
|-FunctionDecl 0x563ab5385290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563ab53851d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563ab5385338 <line:504:22>
| `-NonNullAttr 0x563ab5385390 <col:52, col:66> 1
|-FunctionDecl 0x563ab5385628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563ab5385440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563ab53854c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x563ab53856d8 <line:508:22>
| `-NonNullAttr 0x563ab5385730 <col:63, col:80> 1 2
|-FunctionDecl 0x563ab53859f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x563ab5385778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563ab53857f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x563ab5385878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x563ab5385ab0 <line:512:22>
| `-NonNullAttr 0x563ab5385b08 <col:63, col:80> 1 3
|-FunctionDecl 0x563ab5385c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563ab5385b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563ab5385cb8 <line:514:22>
| `-NonNullAttr 0x563ab5385d10 <col:63, col:77> 1
|-FunctionDecl 0x563ab5385f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x563ab5385dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x563ab5385fe0 <line:516:22>
| `-NonNullAttr 0x563ab5386038 <col:63, col:77> 1
|-FunctionDecl 0x563ab5386140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x563ab5386088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x563ab53861e8 <line:518:22>
| `-NonNullAttr 0x563ab5386240 <col:63, col:77> 1
|-FunctionDecl 0x563ab5386468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563ab5386288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563ab5386308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x563ab5386518 <line:522:22>
| `-NonNullAttr 0x563ab5386570 <col:63, col:80> 1 2
|-FunctionDecl 0x563ab5386778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563ab53865b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563ab5386638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x563ab5386828 <line:525:22>
| `-NonNullAttr 0x563ab5386880 <col:63, col:77> 1
|-FunctionDecl 0x563ab5386a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563ab53868c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563ab5386948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x563ab5386ad8 <line:528:22>
| `-NonNullAttr 0x563ab5386b30 <col:63, col:80> 1 2
|-FunctionDecl 0x563ab5386cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563ab5386b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563ab5386bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x563ab5386d68 <line:530:22>
| `-NonNullAttr 0x563ab5386dc0 <col:63, col:77> 1
|-FunctionDecl 0x563ab5387f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563ab5386e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563ab5387eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x563ab5388040 <line:534:22>
| `-NonNullAttr 0x563ab5388098 <col:63, col:80> 1 2
|-FunctionDecl 0x563ab5388228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563ab53880e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563ab5388168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x563ab53882d8 <line:537:22>
| `-NonNullAttr 0x563ab5388330 <col:63, col:77> 1
|-FunctionDecl 0x563ab53884d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563ab5388378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563ab53883f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x563ab5388588 <line:541:22>
| `-NonNullAttr 0x563ab53885e0 <col:63, col:80> 1 2
|-FunctionDecl 0x563ab5388768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563ab5388628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563ab53886a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x563ab5388818 <line:544:22>
| `-NonNullAttr 0x563ab5388870 <col:63, col:77> 1
|-FunctionDecl 0x563ab5388a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x563ab53888b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x563ab5388938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x563ab5388b08 <line:547:22>
| `-NonNullAttr 0x563ab5388b60 <col:63, col:80> 1 2
|-FunctionDecl 0x563ab5388ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563ab5388ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563ab5388c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x563ab5388d98 <line:550:22>
| `-NonNullAttr 0x563ab5388df0 <col:63, col:77> 1
|-FunctionDecl 0x563ab538a168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x563ab5389f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x563ab538a020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x563ab538a218 <col:29>
| `-NonNullAttr 0x563ab538a270 <col:70, col:84> 1
|-FunctionDecl 0x563ab538a3e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563ab538a2b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563ab538a490 <line:555:22>
| `-NonNullAttr 0x563ab538a4e8 <col:63, col:77> 1
|-FunctionDecl 0x563ab538a5f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563ab538a538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563ab538a698 <line:557:22>
| `-NonNullAttr 0x563ab538a6f0 <col:52, col:66> 1
|-FunctionDecl 0x563ab538a7f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563ab538a738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563ab538a898 <line:559:19>
| `-NonNullAttr 0x563ab538a8f0 <col:49, col:63> 1
|-FunctionDecl 0x563ab538ab28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563ab538a938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x563ab538a9c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x563ab538abd8 <col:39>
| `-NonNullAttr 0x563ab538ac30 <col:69, col:86> 1 2
|-FunctionDecl 0x563ab538ad30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563ab538ac78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563ab538add8 <line:564:22>
| `-NonNullAttr 0x563ab538ae30 <col:52, col:66> 1
|-FunctionDecl 0x563ab538af98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563ab538aee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563ab538b040 <line:566:22>
| `-NonNullAttr 0x563ab538b098 <col:52, col:66> 1
|-FunctionDecl 0x563ab538b258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563ab538b0e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x563ab538b178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x563ab538b308 <col:39>
| `-NonNullAttr 0x563ab538b360 <col:69, col:86> 1 2
|-FunctionDecl 0x563ab538b460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563ab538b3a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563ab538b508 <line:571:22>
| `-NonNullAttr 0x563ab538b560 <col:52, col:66> 1
|-FunctionDecl 0x563ab538b748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x563ab538b610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x563ab538b7f0 <line:573:22>
| `-NonNullAttr 0x563ab538b848 <col:63, col:77> 1
|-FunctionDecl 0x563ab538b950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x563ab538b898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x563ab538b9f8 <line:575:22>
| `-NonNullAttr 0x563ab538ba50 <col:63, col:77> 1
|-FunctionDecl 0x563ab538bc78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563ab538ba98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x563ab538bb18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x563ab538bd28 <line:579:22>
| `-NonNullAttr 0x563ab538bd80 <col:63, col:80> 1 2
|-FunctionDecl 0x563ab538bfa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x563ab538bdc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x563ab538be48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x563ab538c058 <line:582:22>
| `-NonNullAttr 0x563ab538c0b0 <col:63, col:77> 1
|-FunctionDecl 0x563ab538c258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563ab538c0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x563ab538c178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x563ab538c308 <line:586:22>
| `-NonNullAttr 0x563ab538c360 <col:63, col:80> 1 2
|-FunctionDecl 0x563ab538c4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x563ab538c3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x563ab538c428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x563ab538c598 <col:36>
| `-NonNullAttr 0x563ab538c5f0 <col:77, col:91> 1
|-FunctionDecl 0x563ab538c928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x563ab538c6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x563ab538c7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x563ab538c9d8 <line:591:22>
| `-NonNullAttr 0x563ab538ca30 <col:63, col:77> 1
|-FunctionDecl 0x563ab538cba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563ab538ca78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563ab538cc50 <line:593:22>
| `-NonNullAttr 0x563ab538cca8 <col:63, col:77> 1
|-FunctionDecl 0x563ab538cdb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563ab538ccf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563ab538ce58 <line:595:22>
| `-NonNullAttr 0x563ab538ceb0 <col:52, col:66> 1
|-FunctionDecl 0x563ab538cfc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563ab538cf10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563ab538d070 <line:597:22>
| `-NonNullAttr 0x563ab538d0c8 <col:52, col:66> 1
|-FunctionDecl 0x563ab538d2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x563ab538d118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x563ab538d190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x563ab538d3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x563ab538d6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563ab538d428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x563ab538d4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563ab538d530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x563ab538d790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x563ab538d9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x563ab538d870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x563ab538da50 <line:606:22>
| `-NonNullAttr 0x563ab538daa8 <col:63, col:77> 1
|-FunctionDecl 0x563ab538dbb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x563ab538daf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x563ab538dc58 <line:608:22>
| `-NonNullAttr 0x563ab538dcb0 <col:63, col:77> 1
|-FunctionDecl 0x563ab538df10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563ab538dcf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x563ab538dd78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x563ab538dfc0 <line:612:22>
| `-NonNullAttr 0x563ab538e018 <col:63, col:80> 1 2
|-FunctionDecl 0x563ab538e228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x563ab538e068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x563ab538e0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x563ab538e2d8 <col:37>
| `-NonNullAttr 0x563ab538e330 <col:78, col:92> 1
|-FunctionDecl 0x563ab538e548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x563ab538e378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x563ab538e420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x563ab538e5f8 <line:618:22>
| `-NonNullAttr 0x563ab538e650 <col:63, col:80> 1 2
|-FunctionDecl 0x563ab538e818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x563ab538e698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x563ab538e710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x563ab538e8c8 <line:621:22>
| `-NonNullAttr 0x563ab538e920 <col:63, col:77> 1
|-FunctionDecl 0x563ab538ebc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x563ab538ea00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x563ab538ea80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x563ab538ec78 <line:623:22>
| `-NonNullAttr 0x563ab538ecd0 <col:63, col:77> 1
|-FunctionDecl 0x563ab538ee48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563ab538ed18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563ab538ef20 <line:625:22>
| `-NonNullAttr 0x563ab538ef78 <col:63, col:77> 1
|-FunctionDecl 0x563ab538f080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563ab538efc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563ab538f128 <line:627:22>
| `-NonNullAttr 0x563ab538f180 <col:52, col:66> 1
|-FunctionDecl 0x563ab538f280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563ab538f1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563ab538f328 <line:629:22>
| `-NonNullAttr 0x563ab538f380 <col:52, col:66> 1
|-FunctionDecl 0x563ab538f480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563ab538f3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563ab538f528 <line:631:22>
| `-NonNullAttr 0x563ab538f580 <col:52, col:66> 1
|-FunctionDecl 0x563ab538f958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x563ab538f660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x563ab538f770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x563ab538f7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x563ab538fa10 <line:635:22>
| `-NonNullAttr 0x563ab538fa68 <col:63, col:77> 1
|-FunctionDecl 0x563ab538fbe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x563ab538fab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x563ab538fc90 <line:637:22>
| `-NonNullAttr 0x563ab538fce8 <col:63, col:77> 1
|-FunctionDecl 0x563ab538fdf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x563ab538fd38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x563ab538fe98 <line:639:22>
| `-NonNullAttr 0x563ab538fef0 <col:52, col:66> 1
|-FunctionDecl 0x563ab53900e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x563ab538ffb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x563ab5390190 <line:641:22>
| `-NonNullAttr 0x563ab53901e8 <col:63, col:77> 1
|-FunctionDecl 0x563ab53902f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x563ab5390238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x563ab5390398 <line:643:22>
| `-NonNullAttr 0x563ab53903f0 <col:63, col:77> 1
|-FunctionDecl 0x563ab5390618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563ab5390438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x563ab53904b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x563ab53906c8 <line:647:22>
| `-NonNullAttr 0x563ab5390720 <col:63, col:80> 1 2
|-FunctionDecl 0x563ab5390928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x563ab5390768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x563ab53907e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x563ab53909d8 <line:650:22>
| `-NonNullAttr 0x563ab5390a30 <col:63, col:77> 1
|-FunctionDecl 0x563ab5390d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x563ab5390b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x563ab5390c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x563ab5390e28 <line:653:22>
| `-NonNullAttr 0x563ab5390e80 <col:63, col:77> 1
|-FunctionDecl 0x563ab5390fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x563ab5390ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x563ab5391090 <col:69>
|-FunctionDecl 0x563ab5391208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x563ab53910f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x563ab53912b0 <col:72>
|-FunctionDecl 0x563ab53914e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x563ab5391318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x563ab53913c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x563ab5391598 <col:44>
|-FunctionDecl 0x563ab53917b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x563ab5391600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563ab5391678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x563ab5391868 <line:660:22>
| `-NonNullAttr 0x563ab53918c0 <col:63, col:77> 2
|-FunctionDecl 0x563ab5391d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x563ab53919a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x563ab5391ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x563ab5391bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x563ab5391dc0 <col:47>
|-FunctionDecl 0x563ab5392f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x563ab5391e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x563ab53930b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x563ab5393020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x563ab5393210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x563ab5393178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x563ab5393368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x563ab53932d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x563ab5393430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x563ab53934f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x563ab53935b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x563ab5393668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x563ab53936e8 prev 0x563ab5393668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x563ab5393750 <col:24> 'int' 0
|-VarDecl 0x563ab5393788 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x563ab5393808 prev 0x563ab5393788 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x563ab5393870 <col:27> 'int' 0
|-VarDecl 0x563ab53938a8 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x563ab5393928 prev 0x563ab53938a8 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x563ab5393990 <col:27> 'int' 0
|-VarDecl 0x563ab53939c8 <line:678:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x563ab5393a48 prev 0x563ab53939c8 <line:679:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x563ab5393ab0 <col:27> 'int' 0
|-VarDecl 0x563ab5393ae8 <line:680:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x563ab5393b68 prev 0x563ab5393ae8 <line:681:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x563ab5393bd0 <col:27> 'int' 0
|-VarDecl 0x563ab5393c08 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x563ab5393c88 prev 0x563ab5393c08 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x563ab5393cf0 <col:9> 'int' 0
|-VarDecl 0x563ab5393d28 <line:684:1, col:5> col:5 used b 'int'
|-VarDecl 0x563ab5393da8 prev 0x563ab5393d28 <line:685:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x563ab5393e10 <col:9> 'int' 0
|-VarDecl 0x563ab5393e40 <line:686:1, col:7> col:7 used b$flush_delayed '_Bool'
|-VarDecl 0x563ab5393ec0 <line:687:1, col:5> col:5 used b$mem_tmp 'int'
|-VarDecl 0x563ab5393f70 <line:688:1, col:7> col:7 used b$r_buff0_thd0 '_Bool'
|-VarDecl 0x563ab5393fe8 <line:689:1, col:7> col:7 used b$r_buff0_thd1 '_Bool'
|-VarDecl 0x563ab5394060 <line:690:1, col:7> col:7 used b$r_buff0_thd2 '_Bool'
|-VarDecl 0x563ab53940d8 <line:691:1, col:7> col:7 used b$r_buff0_thd3 '_Bool'
|-VarDecl 0x563ab5394150 <line:692:1, col:7> col:7 used b$r_buff0_thd4 '_Bool'
|-VarDecl 0x563ab53941c8 <line:693:1, col:7> col:7 used b$r_buff1_thd0 '_Bool'
|-VarDecl 0x563ab5394240 <line:694:1, col:7> col:7 used b$r_buff1_thd1 '_Bool'
|-VarDecl 0x563ab53942b8 <line:695:1, col:7> col:7 used b$r_buff1_thd2 '_Bool'
|-VarDecl 0x563ab5394330 <line:696:1, col:7> col:7 used b$r_buff1_thd3 '_Bool'
|-VarDecl 0x563ab53943a8 <line:697:1, col:7> col:7 used b$r_buff1_thd4 '_Bool'
|-VarDecl 0x563ab5394420 <line:698:1, col:7> col:7 b$read_delayed '_Bool'
|-VarDecl 0x563ab53944a0 <line:699:1, col:6> col:6 b$read_delayed_var 'int *'
|-VarDecl 0x563ab5394520 <line:700:1, col:5> col:5 used b$w_buff0 'int'
|-VarDecl 0x563ab5394598 <line:701:1, col:7> col:7 used b$w_buff0_used '_Bool'
|-VarDecl 0x563ab5394618 <line:702:1, col:5> col:5 used b$w_buff1 'int'
|-VarDecl 0x563ab5394690 <line:703:1, col:7> col:7 used b$w_buff1_used '_Bool'
|-VarDecl 0x563ab5394708 <line:704:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x563ab5394780 <line:705:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x563ab5394800 <line:706:1, col:5> col:5 used x 'int'
|-VarDecl 0x563ab5394880 prev 0x563ab5394800 <line:707:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x563ab53948e8 <col:9> 'int' 0
|-VarDecl 0x563ab5394920 <line:708:1, col:5> col:5 used y 'int'
|-VarDecl 0x563ab53949a0 prev 0x563ab5394920 <line:709:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x563ab5394a08 <col:9> 'int' 0
|-VarDecl 0x563ab5394a40 <line:710:1, col:5> col:5 used z 'int'
|-VarDecl 0x563ab5394ac0 prev 0x563ab5394a40 <line:711:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x563ab5394b28 <col:9> 'int' 0
|-VarDecl 0x563ab5394b58 <line:712:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x563ab5394bd0 <line:713:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x563ab5394ce8 prev 0x563ab5392f60 <line:714:1, line:743:1> line:714:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x563ab5394c50 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x563ab53965a8 <line:715:1, line:743:1>
|   |-CallExpr 0x563ab5394df8 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563ab5394de0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab5394d90 <col:3> 'void ()' Function 0x563ab533a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563ab5394e70 <line:717:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563ab5394e18 <col:3> 'int' lvalue Var 0x563ab5394618 'b$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x563ab5394e58 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563ab5394e38 <col:15> 'int' lvalue Var 0x563ab5394520 'b$w_buff0' 'int'
|   |-BinaryOperator 0x563ab5394ed0 <line:718:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563ab5394e90 <col:3> 'int' lvalue Var 0x563ab5394520 'b$w_buff0' 'int'
|   | `-IntegerLiteral 0x563ab5394eb0 <col:15> 'int' 1
|   |-BinaryOperator 0x563ab5394f48 <line:719:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563ab5394ef0 <col:3> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563ab5394f30 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563ab5394f10 <col:20> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563ab5394ff8 <line:720:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x563ab5394f80 <col:3> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x563ab5394fd0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563ab5394fa0 <col:27> 'int' 1
|   |-CallExpr 0x563ab5395178 <line:721:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x563ab5395160 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x563ab5395018 <col:3> 'void (int)' Function 0x563ab533a0d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x563ab5395118 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x563ab53950f8 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x563ab53950d8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x563ab5395090 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x563ab5395078 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x563ab5395038 <col:23> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x563ab53950c0 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x563ab53950a8 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x563ab5395058 <col:41> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563ab53951f8 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563ab53951a0 <col:3> '_Bool' lvalue Var 0x563ab53941c8 'b$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x563ab53951e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563ab53951c0 <col:20> '_Bool' lvalue Var 0x563ab5393f70 'b$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x563ab5395270 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563ab5395218 <col:3> '_Bool' lvalue Var 0x563ab5394240 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563ab5395258 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563ab5395238 <col:20> '_Bool' lvalue Var 0x563ab5393fe8 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x563ab53952e8 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563ab5395290 <col:3> '_Bool' lvalue Var 0x563ab53942b8 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563ab53952d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563ab53952b0 <col:20> '_Bool' lvalue Var 0x563ab5394060 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x563ab5395360 <line:725:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563ab5395308 <col:3> '_Bool' lvalue Var 0x563ab5394330 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x563ab5395348 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563ab5395328 <col:20> '_Bool' lvalue Var 0x563ab53940d8 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x563ab53953d8 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563ab5395380 <col:3> '_Bool' lvalue Var 0x563ab53943a8 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x563ab53953c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563ab53953a0 <col:20> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x563ab5395470 <line:727:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x563ab53953f8 <col:3> '_Bool' lvalue Var 0x563ab5393fe8 'b$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x563ab5395448 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563ab5395418 <col:27> 'int' 1
|   |-CallExpr 0x563ab53954c8 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563ab53954b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab5395490 <col:3> 'void ()' Function 0x563ab533a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563ab5395520 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563ab5395508 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab53954e8 <col:3> 'void ()' Function 0x563ab533a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563ab5395598 <line:730:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563ab5395540 <col:3> 'int' lvalue Var 0x563ab5393808 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x563ab5395580 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563ab5395560 <col:25> 'int' lvalue Var 0x563ab5394880 'x' 'int'
|   |-CallExpr 0x563ab53955f0 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563ab53955d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab53955b8 <col:3> 'void ()' Function 0x563ab533a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563ab5395648 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563ab5395630 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab5395610 <col:3> 'void ()' Function 0x563ab533a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563ab5395930 <line:733:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x563ab5395668 <col:3> 'int' lvalue Var 0x563ab5393da8 'b' 'int'
|   | `-ConditionalOperator 0x563ab5395900 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x563ab5395728 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x563ab53956e0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x563ab53956c8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x563ab5395688 <col:7> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x563ab5395710 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x563ab53956f8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x563ab53956a8 <col:25> '_Bool' lvalue Var 0x563ab5393fe8 'b$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x563ab53958e8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563ab5395748 <col:42> 'int' lvalue Var 0x563ab5394520 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x563ab53958c8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x563ab5395898 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x563ab5395808 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563ab53957c0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563ab53957a8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563ab5395768 <col:55> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563ab53957f0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563ab53957d8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563ab5395788 <col:73> '_Bool' lvalue Var 0x563ab5394240 'b$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x563ab5395868 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563ab5395828 <col:90> 'int' lvalue Var 0x563ab5394618 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x563ab5395880 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563ab5395848 <col:102> 'int' lvalue Var 0x563ab5393da8 'b' 'int'
|   |-BinaryOperator 0x563ab5395b38 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563ab5395950 <col:3> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563ab5395b20 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563ab5395af0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563ab5395a10 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563ab53959c8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563ab53959b0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563ab5395970 <col:20> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563ab53959f8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563ab53959e0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563ab5395990 <col:38> '_Bool' lvalue Var 0x563ab5393fe8 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x563ab5395aa8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563ab5395a60 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563ab5395a30 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563ab5395ad8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563ab5395ac0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563ab5395a88 <col:66> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563ab5395e20 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563ab5395b58 <col:3> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563ab5395e08 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563ab5395dd8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563ab5395cf8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563ab5395c18 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563ab5395bd0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563ab5395bb8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563ab5395b78 <col:20> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563ab5395c00 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563ab5395be8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563ab5395b98 <col:38> '_Bool' lvalue Var 0x563ab5393fe8 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x563ab5395cd8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563ab5395c90 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563ab5395c78 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563ab5395c38 <col:56> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563ab5395cc0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563ab5395ca8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563ab5395c58 <col:74> '_Bool' lvalue Var 0x563ab5394240 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x563ab5395d90 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563ab5395d48 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563ab5395d18 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563ab5395dc0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563ab5395da8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563ab5395d70 <col:102> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x563ab5396040 <line:736:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563ab5395e40 <col:3> '_Bool' lvalue Var 0x563ab5393fe8 'b$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563ab5396028 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563ab5395ff8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563ab5395f00 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563ab5395eb8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563ab5395ea0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563ab5395e60 <col:20> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563ab5395ee8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563ab5395ed0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563ab5395e80 <col:38> '_Bool' lvalue Var 0x563ab5393fe8 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x563ab5395fb0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563ab5395f50 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563ab5395f20 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563ab5395fe0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563ab5395fc8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563ab5395f90 <col:66> '_Bool' lvalue Var 0x563ab5393fe8 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x563ab5396328 <line:737:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563ab5396060 <col:3> '_Bool' lvalue Var 0x563ab5394240 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563ab5396310 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563ab53962e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563ab5396200 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563ab5396120 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563ab53960d8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563ab53960c0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563ab5396080 <col:20> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563ab5396108 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563ab53960f0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563ab53960a0 <col:38> '_Bool' lvalue Var 0x563ab5393fe8 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x563ab53961e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563ab5396198 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563ab5396180 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563ab5396140 <col:56> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563ab53961c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563ab53961b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563ab5396160 <col:74> '_Bool' lvalue Var 0x563ab5394240 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x563ab5396298 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563ab5396250 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563ab5396220 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563ab53962c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563ab53962b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563ab5396278 <col:102> '_Bool' lvalue Var 0x563ab5394240 'b$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x563ab5396380 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563ab5396368 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab5396348 <col:3> 'void ()' Function 0x563ab533a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563ab53963d8 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563ab53963c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab53963a0 <col:3> 'void ()' Function 0x563ab533a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563ab5396490 <line:740:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x563ab53963f8 <col:3> 'int' lvalue Var 0x563ab53936e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x563ab5396470 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x563ab5396458 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563ab5396418 <col:22> 'int' lvalue Var 0x563ab53936e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x563ab5396438 <col:41> 'int' 1
|   |-CallExpr 0x563ab53964e8 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563ab53964d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab53964b0 <col:3> 'void ()' Function 0x563ab533a410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x563ab5396598 <line:742:3, col:36>
|     `-CallExpr 0x563ab5396578 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x563ab5396560 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x563ab5396508 <col:10> 'void *(void)' Function 0x563ab5339e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x563ab5396740 prev 0x563ab53930b8 <line:744:1, line:763:1> line:744:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x563ab53966a8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x563ab5397980 <line:745:1, line:763:1>
|   |-CallExpr 0x563ab5396820 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563ab5396808 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab53967e8 <col:3> 'void ()' Function 0x563ab533a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563ab5396880 <line:747:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x563ab5396840 <col:3> 'int' lvalue Var 0x563ab5394880 'x' 'int'
|   | `-IntegerLiteral 0x563ab5396860 <col:7> 'int' 1
|   |-CallExpr 0x563ab53968d8 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563ab53968c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab53968a0 <col:3> 'void ()' Function 0x563ab533a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563ab5396930 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563ab5396918 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab53968f8 <col:3> 'void ()' Function 0x563ab533a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563ab53969a8 <line:750:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563ab5396950 <col:3> 'int' lvalue Var 0x563ab5393928 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x563ab5396990 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563ab5396970 <col:25> 'int' lvalue Var 0x563ab53949a0 'y' 'int'
|   |-CallExpr 0x563ab5396a00 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563ab53969e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab53969c8 <col:3> 'void ()' Function 0x563ab533a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563ab5396a58 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563ab5396a40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab5396a20 <col:3> 'void ()' Function 0x563ab533a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563ab5396d40 <line:753:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x563ab5396a78 <col:3> 'int' lvalue Var 0x563ab5393da8 'b' 'int'
|   | `-ConditionalOperator 0x563ab5396d10 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x563ab5396b38 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x563ab5396af0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x563ab5396ad8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x563ab5396a98 <col:7> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x563ab5396b20 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x563ab5396b08 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x563ab5396ab8 <col:25> '_Bool' lvalue Var 0x563ab5394060 'b$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x563ab5396cf8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563ab5396b58 <col:42> 'int' lvalue Var 0x563ab5394520 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x563ab5396cd8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x563ab5396ca8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x563ab5396c18 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563ab5396bd0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563ab5396bb8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563ab5396b78 <col:55> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563ab5396c00 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563ab5396be8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563ab5396b98 <col:73> '_Bool' lvalue Var 0x563ab53942b8 'b$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x563ab5396c78 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563ab5396c38 <col:90> 'int' lvalue Var 0x563ab5394618 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x563ab5396c90 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563ab5396c58 <col:102> 'int' lvalue Var 0x563ab5393da8 'b' 'int'
|   |-BinaryOperator 0x563ab5396f48 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563ab5396d60 <col:3> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563ab5396f30 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563ab5396f00 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563ab5396e20 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563ab5396dd8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563ab5396dc0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563ab5396d80 <col:20> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563ab5396e08 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563ab5396df0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563ab5396da0 <col:38> '_Bool' lvalue Var 0x563ab5394060 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563ab5396eb8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563ab5396e70 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563ab5396e40 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563ab5396ee8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563ab5396ed0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563ab5396e98 <col:66> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563ab5397248 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563ab5396f68 <col:3> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563ab5397230 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563ab5397200 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563ab5397120 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563ab5397040 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563ab5396ff8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563ab5396fe0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563ab5396fa0 <col:20> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563ab5397028 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563ab5397010 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563ab5396fc0 <col:38> '_Bool' lvalue Var 0x563ab5394060 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x563ab5397100 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563ab53970b8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563ab53970a0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563ab5397060 <col:56> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563ab53970e8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563ab53970d0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563ab5397080 <col:74> '_Bool' lvalue Var 0x563ab53942b8 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563ab53971b8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563ab5397170 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563ab5397140 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563ab53971e8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563ab53971d0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563ab5397198 <col:102> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x563ab5397450 <line:756:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563ab5397268 <col:3> '_Bool' lvalue Var 0x563ab5394060 'b$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563ab5397438 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563ab5397408 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563ab5397328 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563ab53972e0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563ab53972c8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563ab5397288 <col:20> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563ab5397310 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563ab53972f8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563ab53972a8 <col:38> '_Bool' lvalue Var 0x563ab5394060 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563ab53973c0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563ab5397378 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563ab5397348 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563ab53973f0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563ab53973d8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563ab53973a0 <col:66> '_Bool' lvalue Var 0x563ab5394060 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x563ab5397738 <line:757:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563ab5397470 <col:3> '_Bool' lvalue Var 0x563ab53942b8 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563ab5397720 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563ab53976f0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563ab5397610 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563ab5397530 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563ab53974e8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563ab53974d0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563ab5397490 <col:20> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563ab5397518 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563ab5397500 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563ab53974b0 <col:38> '_Bool' lvalue Var 0x563ab5394060 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x563ab53975f0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563ab53975a8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563ab5397590 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563ab5397550 <col:56> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563ab53975d8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563ab53975c0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563ab5397570 <col:74> '_Bool' lvalue Var 0x563ab53942b8 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563ab53976a8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563ab5397660 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563ab5397630 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563ab53976d8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563ab53976c0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563ab5397688 <col:102> '_Bool' lvalue Var 0x563ab53942b8 'b$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x563ab5397790 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563ab5397778 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab5397758 <col:3> 'void ()' Function 0x563ab533a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563ab53977e8 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563ab53977d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab53977b0 <col:3> 'void ()' Function 0x563ab533a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563ab53978a0 <line:760:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x563ab5397808 <col:3> 'int' lvalue Var 0x563ab53936e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x563ab5397880 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x563ab5397868 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563ab5397828 <col:22> 'int' lvalue Var 0x563ab53936e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x563ab5397848 <col:41> 'int' 1
|   |-CallExpr 0x563ab53978f8 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563ab53978e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab53978c0 <col:3> 'void ()' Function 0x563ab533a410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x563ab5397970 <line:762:3, col:36>
|     `-CallExpr 0x563ab5397950 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x563ab5397938 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x563ab5397918 <col:10> 'void *(void)' Function 0x563ab5339e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x563ab5397ac8 prev 0x563ab5393210 <line:764:1, line:783:1> line:764:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x563ab5397a30 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x563ab5398d00 <line:765:1, line:783:1>
|   |-CallExpr 0x563ab5397ba8 <line:766:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563ab5397b90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab5397b70 <col:3> 'void ()' Function 0x563ab533a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563ab5397c08 <line:767:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x563ab5397bc8 <col:3> 'int' lvalue Var 0x563ab53949a0 'y' 'int'
|   | `-IntegerLiteral 0x563ab5397be8 <col:7> 'int' 1
|   |-CallExpr 0x563ab5397c60 <line:768:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563ab5397c48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab5397c28 <col:3> 'void ()' Function 0x563ab533a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563ab5397cb8 <line:769:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563ab5397ca0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab5397c80 <col:3> 'void ()' Function 0x563ab533a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563ab5397d18 <line:770:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x563ab5397cd8 <col:3> 'int' lvalue Var 0x563ab5394ac0 'z' 'int'
|   | `-IntegerLiteral 0x563ab5397cf8 <col:7> 'int' 1
|   |-CallExpr 0x563ab5397d70 <line:771:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563ab5397d58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab5397d38 <col:3> 'void ()' Function 0x563ab533a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563ab5397dc8 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563ab5397db0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab5397d90 <col:3> 'void ()' Function 0x563ab533a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563ab53980d8 <line:773:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x563ab5397de8 <col:3> 'int' lvalue Var 0x563ab5393da8 'b' 'int'
|   | `-ConditionalOperator 0x563ab53980a8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x563ab5397ea8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x563ab5397e60 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x563ab5397e48 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x563ab5397e08 <col:7> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x563ab5397e90 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x563ab5397e78 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x563ab5397e28 <col:25> '_Bool' lvalue Var 0x563ab53940d8 'b$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x563ab5398090 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563ab5397ec8 <col:42> 'int' lvalue Var 0x563ab5394520 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x563ab5398070 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x563ab5398040 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x563ab5397fb0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563ab5397f40 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563ab5397f28 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563ab5397ee8 <col:55> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563ab5397f70 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563ab5397f58 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563ab5397f08 <col:73> '_Bool' lvalue Var 0x563ab5394330 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x563ab5398010 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563ab5397fd0 <col:90> 'int' lvalue Var 0x563ab5394618 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x563ab5398028 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563ab5397ff0 <col:102> 'int' lvalue Var 0x563ab5393da8 'b' 'int'
|   |-BinaryOperator 0x563ab53982e0 <line:774:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563ab53980f8 <col:3> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563ab53982c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563ab5398298 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563ab53981b8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563ab5398170 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563ab5398158 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563ab5398118 <col:20> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563ab53981a0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563ab5398188 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563ab5398138 <col:38> '_Bool' lvalue Var 0x563ab53940d8 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x563ab5398250 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563ab5398208 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563ab53981d8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563ab5398280 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563ab5398268 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563ab5398230 <col:66> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563ab53985c8 <line:775:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563ab5398300 <col:3> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563ab53985b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563ab5398580 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563ab53984a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563ab53983c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563ab5398378 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563ab5398360 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563ab5398320 <col:20> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563ab53983a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563ab5398390 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563ab5398340 <col:38> '_Bool' lvalue Var 0x563ab53940d8 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x563ab5398480 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563ab5398438 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563ab5398420 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563ab53983e0 <col:56> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563ab5398468 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563ab5398450 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563ab5398400 <col:74> '_Bool' lvalue Var 0x563ab5394330 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x563ab5398538 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563ab53984f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563ab53984c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563ab5398568 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563ab5398550 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563ab5398518 <col:102> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x563ab53987d0 <line:776:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563ab53985e8 <col:3> '_Bool' lvalue Var 0x563ab53940d8 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x563ab53987b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563ab5398788 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563ab53986a8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563ab5398660 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563ab5398648 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563ab5398608 <col:20> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563ab5398690 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563ab5398678 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563ab5398628 <col:38> '_Bool' lvalue Var 0x563ab53940d8 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x563ab5398740 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563ab53986f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563ab53986c8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563ab5398770 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563ab5398758 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563ab5398720 <col:66> '_Bool' lvalue Var 0x563ab53940d8 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x563ab5398ab8 <line:777:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563ab53987f0 <col:3> '_Bool' lvalue Var 0x563ab5394330 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x563ab5398aa0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563ab5398a70 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563ab5398990 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563ab53988b0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563ab5398868 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563ab5398850 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563ab5398810 <col:20> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563ab5398898 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563ab5398880 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563ab5398830 <col:38> '_Bool' lvalue Var 0x563ab53940d8 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x563ab5398970 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563ab5398928 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563ab5398910 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563ab53988d0 <col:56> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563ab5398958 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563ab5398940 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563ab53988f0 <col:74> '_Bool' lvalue Var 0x563ab5394330 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x563ab5398a28 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563ab53989e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563ab53989b0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563ab5398a58 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563ab5398a40 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563ab5398a08 <col:102> '_Bool' lvalue Var 0x563ab5394330 'b$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x563ab5398b10 <line:778:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563ab5398af8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab5398ad8 <col:3> 'void ()' Function 0x563ab533a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563ab5398b68 <line:779:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563ab5398b50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab5398b30 <col:3> 'void ()' Function 0x563ab533a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563ab5398c20 <line:780:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x563ab5398b88 <col:3> 'int' lvalue Var 0x563ab53936e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x563ab5398c00 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x563ab5398be8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563ab5398ba8 <col:22> 'int' lvalue Var 0x563ab53936e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x563ab5398bc8 <col:41> 'int' 1
|   |-CallExpr 0x563ab5398c78 <line:781:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563ab5398c60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab5398c40 <col:3> 'void ()' Function 0x563ab533a410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x563ab5398cf0 <line:782:3, col:36>
|     `-CallExpr 0x563ab5398cd0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x563ab5398cb8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x563ab5398c98 <col:10> 'void *(void)' Function 0x563ab5339e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x563ab5398e48 prev 0x563ab5393368 <line:784:1, line:822:1> line:784:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x563ab5398db0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x563ab539cc60 <line:785:1, line:822:1>
|   |-CallExpr 0x563ab5398f28 <line:786:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563ab5398f10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab5398ef0 <col:3> 'void ()' Function 0x563ab533a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563ab5398f88 <line:787:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x563ab5398f48 <col:3> 'int' lvalue Var 0x563ab5394ac0 'z' 'int'
|   | `-IntegerLiteral 0x563ab5398f68 <col:7> 'int' 2
|   |-CallExpr 0x563ab5398ff8 <line:788:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563ab5398fe0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab5398fc0 <col:3> 'void ()' Function 0x563ab533a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563ab5399050 <line:789:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563ab5399038 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab5399018 <col:3> 'void ()' Function 0x563ab533a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563ab53990b0 <line:790:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x563ab5399070 <col:3> 'int' lvalue Var 0x563ab5393c88 'a' 'int'
|   | `-IntegerLiteral 0x563ab5399090 <col:7> 'int' 1
|   |-CallExpr 0x563ab5399108 <line:791:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563ab53990f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab53990d0 <col:3> 'void ()' Function 0x563ab533a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563ab5399160 <line:792:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563ab5399148 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab5399128 <col:3> 'void ()' Function 0x563ab533a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563ab53991d8 <line:793:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563ab5399180 <col:3> 'int' lvalue Var 0x563ab5393a48 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x563ab53991c0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563ab53991a0 <col:25> 'int' lvalue Var 0x563ab5393c88 'a' 'int'
|   |-CallExpr 0x563ab5399230 <line:794:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563ab5399218 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab53991f8 <col:3> 'void ()' Function 0x563ab533a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563ab5399288 <line:795:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563ab5399270 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab5399250 <col:3> 'void ()' Function 0x563ab533a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563ab5399338 <line:796:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x563ab53992a8 <col:3> '_Bool' lvalue Var 0x563ab5394b58 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x563ab5399320 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x563ab5399300 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x563ab53992e8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x563ab53992c8 <col:19> 'void *(void)' Function 0x563ab5339e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x563ab53993e8 <line:797:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x563ab5399358 <col:3> '_Bool' lvalue Var 0x563ab5394bd0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x563ab53993d0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x563ab53993b0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x563ab5399398 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x563ab5399378 <col:19> 'void *(void)' Function 0x563ab5339e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x563ab5399460 <line:798:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x563ab5399408 <col:3> '_Bool' lvalue Var 0x563ab5393e40 'b$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x563ab5399448 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563ab5399428 <col:21> '_Bool' lvalue Var 0x563ab5394bd0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x563ab53994d8 <line:799:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563ab5399480 <col:3> 'int' lvalue Var 0x563ab5393ec0 'b$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x563ab53994c0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563ab53994a0 <col:15> 'int' lvalue Var 0x563ab5393da8 'b' 'int'
|   |-BinaryOperator 0x563ab5399910 <line:800:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x563ab53994f8 <col:3> 'int' lvalue Var 0x563ab5393da8 'b' 'int'
|   | `-ConditionalOperator 0x563ab53998e0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x563ab5399708 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x563ab5399628 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x563ab5399550 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x563ab5399538 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x563ab5399518 <col:8> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x563ab5399608 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x563ab53995a0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x563ab5399588 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x563ab5399568 <col:27> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x563ab53995f0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x563ab53995d8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x563ab53995b8 <col:46> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x563ab53996e8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x563ab5399680 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x563ab5399668 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x563ab5399648 <col:65> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x563ab53996d0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x563ab53996b8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x563ab5399698 <col:84> '_Bool' lvalue Var 0x563ab53943a8 'b$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x563ab53998c8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563ab5399728 <col:101> 'int' lvalue Var 0x563ab5393da8 'b' 'int'
|   |   `-ParenExpr 0x563ab53998a8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x563ab5399878 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x563ab53997e8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563ab53997a0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563ab5399788 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563ab5399748 <col:106> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563ab53997d0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563ab53997b8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563ab5399768 <col:124> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x563ab5399848 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563ab5399808 <col:141> 'int' lvalue Var 0x563ab5394520 'b$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x563ab5399860 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563ab5399828 <col:153> 'int' lvalue Var 0x563ab5394618 'b$w_buff1' 'int'
|   |-BinaryOperator 0x563ab5399e20 <line:801:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x563ab5399930 <col:3> 'int' lvalue Var 0x563ab5394520 'b$w_buff0' 'int'
|   | `-ConditionalOperator 0x563ab5399df0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x563ab5399dc0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563ab5399da8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563ab5399950 <col:15> '_Bool' lvalue Var 0x563ab5394bd0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x563ab5399dd8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563ab5399970 <col:31> 'int' lvalue Var 0x563ab5394520 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x563ab5399d88 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x563ab5399d58 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x563ab5399b80 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x563ab5399aa0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x563ab53999c8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x563ab53999b0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x563ab5399990 <col:45> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x563ab5399a80 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x563ab5399a18 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x563ab5399a00 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x563ab53999e0 <col:64> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x563ab5399a68 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x563ab5399a50 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x563ab5399a30 <col:83> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x563ab5399b60 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x563ab5399af8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x563ab5399ae0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x563ab5399ac0 <col:102> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x563ab5399b48 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x563ab5399b30 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x563ab5399b10 <col:121> '_Bool' lvalue Var 0x563ab53943a8 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x563ab5399d40 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563ab5399ba0 <col:138> 'int' lvalue Var 0x563ab5394520 'b$w_buff0' 'int'
|   |       `-ParenExpr 0x563ab5399d20 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x563ab5399cf0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x563ab5399c60 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x563ab5399c18 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x563ab5399c00 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x563ab5399bc0 <col:151> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x563ab5399c48 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x563ab5399c30 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x563ab5399be0 <col:169> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x563ab5399cc0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x563ab5399c80 <col:186> 'int' lvalue Var 0x563ab5394520 'b$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x563ab5399cd8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x563ab5399ca0 <col:198> 'int' lvalue Var 0x563ab5394520 'b$w_buff0' 'int'
|   |-BinaryOperator 0x563ab539a350 <line:802:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x563ab5399e40 <col:3> 'int' lvalue Var 0x563ab5394618 'b$w_buff1' 'int'
|   | `-ConditionalOperator 0x563ab539a320 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x563ab539a2f0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563ab539a2d8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563ab5399e60 <col:15> '_Bool' lvalue Var 0x563ab5394bd0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x563ab539a308 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563ab5399e80 <col:31> 'int' lvalue Var 0x563ab5394618 'b$w_buff1' 'int'
|   |   `-ParenExpr 0x563ab539a2b8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x563ab539a288 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x563ab539a0b0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x563ab5399fd0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x563ab5399ed8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x563ab5399ec0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x563ab5399ea0 <col:45> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x563ab5399f90 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x563ab5399f28 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x563ab5399f10 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x563ab5399ef0 <col:64> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x563ab5399f78 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x563ab5399f60 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x563ab5399f40 <col:83> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x563ab539a090 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x563ab539a028 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x563ab539a010 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x563ab5399ff0 <col:102> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x563ab539a078 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x563ab539a060 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x563ab539a040 <col:121> '_Bool' lvalue Var 0x563ab53943a8 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x563ab539a270 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563ab539a0d0 <col:138> 'int' lvalue Var 0x563ab5394618 'b$w_buff1' 'int'
|   |       `-ParenExpr 0x563ab539a250 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x563ab539a220 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x563ab539a190 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x563ab539a148 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x563ab539a130 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x563ab539a0f0 <col:151> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x563ab539a178 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x563ab539a160 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x563ab539a110 <col:169> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x563ab539a1f0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x563ab539a1b0 <col:186> 'int' lvalue Var 0x563ab5394618 'b$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x563ab539a208 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x563ab539a1d0 <col:198> 'int' lvalue Var 0x563ab5394618 'b$w_buff1' 'int'
|   |-BinaryOperator 0x563ab539a8f8 <line:803:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x563ab539a370 <col:3> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563ab539a8e0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563ab539a8b0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x563ab539a868 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563ab539a850 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563ab539a390 <col:20> '_Bool' lvalue Var 0x563ab5394bd0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563ab539a898 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563ab539a880 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563ab539a3b0 <col:36> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x563ab539a830 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x563ab539a800 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x563ab539a5c0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563ab539a4e0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563ab539a408 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563ab539a3f0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563ab539a3d0 <col:55> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563ab539a4c0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563ab539a458 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563ab539a440 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563ab539a420 <col:74> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x563ab539a4a8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563ab539a490 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563ab539a470 <col:93> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563ab539a5a0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563ab539a538 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563ab539a520 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563ab539a500 <col:112> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x563ab539a588 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563ab539a570 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563ab539a550 <col:131> '_Bool' lvalue Var 0x563ab53943a8 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x563ab539a7e8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563ab539a7d0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563ab539a5e0 <col:148> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x563ab539a7b0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x563ab539a780 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x563ab539a6a0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563ab539a658 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563ab539a640 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563ab539a600 <col:166> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563ab539a688 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563ab539a670 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563ab539a620 <col:184> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x563ab539a738 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563ab539a6f0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563ab539a6c0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563ab539a768 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x563ab539a750 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x563ab539a718 <col:212> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563ab539aec0 <line:804:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x563ab539a918 <col:3> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563ab539aea8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563ab539ae78 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x563ab539ae30 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563ab539ae18 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563ab539a938 <col:20> '_Bool' lvalue Var 0x563ab5394bd0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563ab539ae60 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563ab539ae48 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563ab539a958 <col:36> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x563ab539adf8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x563ab539adc8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x563ab539ab68 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563ab539aa88 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563ab539a9b0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563ab539a998 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563ab539a978 <col:55> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563ab539aa68 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563ab539aa00 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563ab539a9e8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563ab539a9c8 <col:74> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x563ab539aa50 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563ab539aa38 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563ab539aa18 <col:93> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563ab539ab48 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563ab539aae0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563ab539aac8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563ab539aaa8 <col:112> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x563ab539ab30 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563ab539ab18 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563ab539aaf8 <col:131> '_Bool' lvalue Var 0x563ab53943a8 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x563ab539adb0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563ab539ad98 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563ab539ab88 <col:148> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x563ab539ad78 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x563ab539ad48 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x563ab539ac48 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563ab539ac00 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563ab539abe8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563ab539aba8 <col:166> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563ab539ac30 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563ab539ac18 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563ab539abc8 <col:184> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x563ab539ad18 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563ab539ac98 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563ab539ac68 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563ab539ad30 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x563ab539acf0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x563ab539acc0 <col:219> 'int' 0
|   |-BinaryOperator 0x563ab539b480 <line:805:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x563ab539aee0 <col:3> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x563ab539b468 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563ab539b438 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x563ab539b3f0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563ab539b3d8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563ab539af00 <col:20> '_Bool' lvalue Var 0x563ab5394bd0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563ab539b420 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563ab539b408 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563ab539af20 <col:36> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x563ab539b3b8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x563ab539b388 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x563ab539b148 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563ab539b068 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563ab539af78 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563ab539af60 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563ab539af40 <col:55> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563ab539b048 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563ab539afe0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563ab539afb0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563ab539af90 <col:74> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x563ab539b030 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563ab539b018 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563ab539aff8 <col:93> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563ab539b128 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563ab539b0c0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563ab539b0a8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563ab539b088 <col:112> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x563ab539b110 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563ab539b0f8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563ab539b0d8 <col:131> '_Bool' lvalue Var 0x563ab53943a8 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x563ab539b370 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563ab539b358 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563ab539b168 <col:148> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x563ab539b338 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x563ab539b308 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x563ab539b228 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563ab539b1e0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563ab539b1c8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563ab539b188 <col:166> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563ab539b210 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563ab539b1f8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563ab539b1a8 <col:184> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x563ab539b2c0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563ab539b278 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563ab539b248 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563ab539b2f0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x563ab539b2d8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x563ab539b2a0 <col:212> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x563ab539ba48 <line:806:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x563ab539b4a0 <col:3> '_Bool' lvalue Var 0x563ab53943a8 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x563ab539ba30 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563ab539ba00 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x563ab539b9b8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563ab539b9a0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563ab539b4c0 <col:20> '_Bool' lvalue Var 0x563ab5394bd0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563ab539b9e8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563ab539b9d0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563ab539b4e0 <col:36> '_Bool' lvalue Var 0x563ab53943a8 'b$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x563ab539b980 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x563ab539b950 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x563ab539b6f0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563ab539b610 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563ab539b538 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563ab539b520 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563ab539b500 <col:55> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563ab539b5f0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563ab539b588 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563ab539b570 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563ab539b550 <col:74> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x563ab539b5d8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563ab539b5c0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563ab539b5a0 <col:93> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563ab539b6d0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563ab539b668 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563ab539b650 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563ab539b630 <col:112> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x563ab539b6b8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563ab539b6a0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563ab539b680 <col:131> '_Bool' lvalue Var 0x563ab53943a8 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x563ab539b938 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563ab539b920 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563ab539b710 <col:148> '_Bool' lvalue Var 0x563ab53943a8 'b$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x563ab539b900 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x563ab539b8d0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x563ab539b7d0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563ab539b788 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563ab539b770 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563ab539b730 <col:166> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563ab539b7b8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563ab539b7a0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563ab539b750 <col:184> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x563ab539b8a0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563ab539b820 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563ab539b7f0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563ab539b8b8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x563ab539b878 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x563ab539b848 <col:219> 'int' 0
|   |-BinaryOperator 0x563ab539bac0 <line:807:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563ab539ba68 <col:3> 'int' lvalue Var 0x563ab5393b68 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x563ab539baa8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563ab539ba88 <col:25> 'int' lvalue Var 0x563ab5393da8 'b' 'int'
|   |-BinaryOperator 0x563ab539bbf0 <line:808:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x563ab539bae0 <col:3> 'int' lvalue Var 0x563ab5393da8 'b' 'int'
|   | `-ConditionalOperator 0x563ab539bbc0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x563ab539bb78 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563ab539bb60 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563ab539bb00 <col:7> '_Bool' lvalue Var 0x563ab5393e40 'b$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x563ab539bb90 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563ab539bb20 <col:25> 'int' lvalue Var 0x563ab5393ec0 'b$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x563ab539bba8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x563ab539bb40 <col:37> 'int' lvalue Var 0x563ab5393da8 'b' 'int'
|   |-BinaryOperator 0x563ab539bc88 <line:809:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x563ab539bc10 <col:3> '_Bool' lvalue Var 0x563ab5393e40 'b$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x563ab539bc60 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563ab539bc30 <col:28> 'int' 0
|   |-CallExpr 0x563ab539bce0 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563ab539bcc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab539bca8 <col:3> 'void ()' Function 0x563ab533a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563ab539bd38 <line:811:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563ab539bd20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab539bd00 <col:3> 'void ()' Function 0x563ab533a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563ab539c038 <line:812:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x563ab539bd58 <col:3> 'int' lvalue Var 0x563ab5393da8 'b' 'int'
|   | `-ConditionalOperator 0x563ab539c008 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x563ab539be18 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x563ab539bdd0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x563ab539bdb8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x563ab539bd78 <col:7> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x563ab539be00 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x563ab539bde8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x563ab539bd98 <col:25> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x563ab539bff0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563ab539be38 <col:42> 'int' lvalue Var 0x563ab5394520 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x563ab539bfb8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x563ab539bf88 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x563ab539bef8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563ab539beb0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563ab539be98 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563ab539be58 <col:55> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563ab539bee0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563ab539bec8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563ab539be78 <col:73> '_Bool' lvalue Var 0x563ab53943a8 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x563ab539bf58 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563ab539bf18 <col:90> 'int' lvalue Var 0x563ab5394618 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x563ab539bf70 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563ab539bf38 <col:102> 'int' lvalue Var 0x563ab5393da8 'b' 'int'
|   |-BinaryOperator 0x563ab539c240 <line:813:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563ab539c058 <col:3> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563ab539c228 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563ab539c1f8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563ab539c118 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563ab539c0d0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563ab539c0b8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563ab539c078 <col:20> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563ab539c100 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563ab539c0e8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563ab539c098 <col:38> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x563ab539c1b0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563ab539c168 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563ab539c138 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563ab539c1e0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563ab539c1c8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563ab539c190 <col:66> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563ab539c528 <line:814:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563ab539c260 <col:3> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563ab539c510 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563ab539c4e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563ab539c400 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563ab539c320 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563ab539c2d8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563ab539c2c0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563ab539c280 <col:20> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563ab539c308 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563ab539c2f0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563ab539c2a0 <col:38> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x563ab539c3e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563ab539c398 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563ab539c380 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563ab539c340 <col:56> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563ab539c3c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563ab539c3b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563ab539c360 <col:74> '_Bool' lvalue Var 0x563ab53943a8 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x563ab539c498 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563ab539c450 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563ab539c420 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563ab539c4c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563ab539c4b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563ab539c478 <col:102> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x563ab539c730 <line:815:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563ab539c548 <col:3> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x563ab539c718 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563ab539c6e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563ab539c608 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563ab539c5c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563ab539c5a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563ab539c568 <col:20> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563ab539c5f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563ab539c5d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563ab539c588 <col:38> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x563ab539c6a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563ab539c658 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563ab539c628 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563ab539c6d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563ab539c6b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563ab539c680 <col:66> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x563ab539ca18 <line:816:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563ab539c750 <col:3> '_Bool' lvalue Var 0x563ab53943a8 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x563ab539ca00 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563ab539c9d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563ab539c8f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563ab539c810 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563ab539c7c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563ab539c7b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563ab539c770 <col:20> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563ab539c7f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563ab539c7e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563ab539c790 <col:38> '_Bool' lvalue Var 0x563ab5394150 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x563ab539c8d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563ab539c888 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563ab539c870 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563ab539c830 <col:56> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563ab539c8b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563ab539c8a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563ab539c850 <col:74> '_Bool' lvalue Var 0x563ab53943a8 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x563ab539c988 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563ab539c940 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563ab539c910 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563ab539c9b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563ab539c9a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563ab539c968 <col:102> '_Bool' lvalue Var 0x563ab53943a8 'b$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x563ab539ca70 <line:817:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563ab539ca58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab539ca38 <col:3> 'void ()' Function 0x563ab533a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563ab539cac8 <line:818:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563ab539cab0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab539ca90 <col:3> 'void ()' Function 0x563ab533a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563ab539cb80 <line:819:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x563ab539cae8 <col:3> 'int' lvalue Var 0x563ab53936e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x563ab539cb60 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x563ab539cb48 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563ab539cb08 <col:22> 'int' lvalue Var 0x563ab53936e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x563ab539cb28 <col:41> 'int' 1
|   |-CallExpr 0x563ab539cbd8 <line:820:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563ab539cbc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ab539cba0 <col:3> 'void ()' Function 0x563ab533a410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x563ab539cc50 <line:821:3, col:36>
|     `-CallExpr 0x563ab539cc30 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x563ab539cc18 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x563ab539cbf8 <col:10> 'void *(void)' Function 0x563ab5339e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x563ab539cdb0 prev 0x563ab5393430 <line:823:1, line:825:1> line:823:6 fence 'void ()'
| `-CompoundStmt 0x563ab539ce50 <line:824:1, line:825:1>
|-FunctionDecl 0x563ab539ce80 prev 0x563ab53934f0 <line:826:1, line:828:1> line:826:6 isync 'void ()'
| `-CompoundStmt 0x563ab539cf20 <line:827:1, line:828:1>
|-FunctionDecl 0x563ab539cf50 prev 0x563ab53935b0 <line:829:1, line:831:1> line:829:6 lwfence 'void ()'
| `-CompoundStmt 0x563ab539d000 <line:830:1, line:831:1>
`-FunctionDecl 0x563ab539d068 <line:832:1, line:858:1> line:832:5 main 'int ()'
  `-CompoundStmt 0x563ab539f080 <line:833:1, line:858:1>
    |-DeclStmt 0x563ab539d180 <line:834:3, col:18>
    | `-VarDecl 0x563ab539d118 <col:3, col:13> col:13 used t1139 'pthread_t':'unsigned long'
    |-CallExpr 0x563ab539d388 <line:835:3, col:54> 'int'
    | |-ImplicitCastExpr 0x563ab539d370 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563ab539d198 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x563ab537a8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x563ab539d1d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x563ab539d1b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x563ab539d118 't1139' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x563ab539d3c8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x563ab539d250 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x563ab539d228 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x563ab539d1f0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x563ab539d3e0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563ab539d270 <col:39> 'void *(void *)' Function 0x563ab5394ce8 'P0' 'void *(void *)'
    | `-ParenExpr 0x563ab539d2f0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x563ab539d2c8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x563ab539d290 <col:52> 'int' 0
    |-DeclStmt 0x563ab539d470 <line:836:3, col:18>
    | `-VarDecl 0x563ab539d408 <col:3, col:13> col:13 used t1140 'pthread_t':'unsigned long'
    |-CallExpr 0x563ab539d618 <line:837:3, col:54> 'int'
    | |-ImplicitCastExpr 0x563ab539d600 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563ab539d488 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x563ab537a8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x563ab539d4c8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x563ab539d4a8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x563ab539d408 't1140' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x563ab539d658 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x563ab539d540 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x563ab539d518 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x563ab539d4e0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x563ab539d670 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563ab539d560 <col:39> 'void *(void *)' Function 0x563ab5396740 'P1' 'void *(void *)'
    | `-ParenExpr 0x563ab539d5e0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x563ab539d5b8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x563ab539d580 <col:52> 'int' 0
    |-DeclStmt 0x563ab539d700 <line:838:3, col:18>
    | `-VarDecl 0x563ab539d698 <col:3, col:13> col:13 used t1141 'pthread_t':'unsigned long'
    |-CallExpr 0x563ab539d8a8 <line:839:3, col:54> 'int'
    | |-ImplicitCastExpr 0x563ab539d890 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563ab539d718 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x563ab537a8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x563ab539d758 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x563ab539d738 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x563ab539d698 't1141' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x563ab539d8e8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x563ab539d7d0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x563ab539d7a8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x563ab539d770 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x563ab539d900 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563ab539d7f0 <col:39> 'void *(void *)' Function 0x563ab5397ac8 'P2' 'void *(void *)'
    | `-ParenExpr 0x563ab539d870 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x563ab539d848 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x563ab539d810 <col:52> 'int' 0
    |-DeclStmt 0x563ab539d990 <line:840:3, col:18>
    | `-VarDecl 0x563ab539d928 <col:3, col:13> col:13 used t1142 'pthread_t':'unsigned long'
    |-CallExpr 0x563ab539db38 <line:841:3, col:54> 'int'
    | |-ImplicitCastExpr 0x563ab539db20 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563ab539d9a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x563ab537a8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x563ab539d9e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x563ab539d9c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x563ab539d928 't1142' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x563ab539db78 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x563ab539da60 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x563ab539da38 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x563ab539da00 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x563ab539db90 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563ab539da80 <col:39> 'void *(void *)' Function 0x563ab5398e48 'P3' 'void *(void *)'
    | `-ParenExpr 0x563ab539db00 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x563ab539dad8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x563ab539daa0 <col:52> 'int' 0
    |-CallExpr 0x563ab539dbe0 <line:842:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563ab539dbc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563ab539dba8 <col:3> 'void ()' Function 0x563ab533a350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563ab539dcb0 <line:843:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x563ab539dc00 <col:3> '_Bool' lvalue Var 0x563ab5394708 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x563ab539dc98 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x563ab539dc78 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x563ab539dc60 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x563ab539dc20 <col:21> 'int' lvalue Var 0x563ab53936e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x563ab539dc40 <col:41> 'int' 4
    |-CallExpr 0x563ab539dd08 <line:844:3, col:25> 'void'
    | `-ImplicitCastExpr 0x563ab539dcf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563ab539dcd0 <col:3> 'void ()' Function 0x563ab533a410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563ab539dd80 <line:845:3, col:36> 'void'
    | |-ImplicitCastExpr 0x563ab539dd68 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563ab539dd28 <col:3> 'void (int)' Function 0x563ab5339ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x563ab539ddc0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x563ab539dda8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x563ab539dd48 <col:21> '_Bool' lvalue Var 0x563ab5394708 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x563ab539de10 <line:846:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563ab539ddf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563ab539ddd8 <col:3> 'void ()' Function 0x563ab533a350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563ab539e118 <line:847:3, col:103> 'int' '='
    | |-DeclRefExpr 0x563ab539de30 <col:3> 'int' lvalue Var 0x563ab5393da8 'b' 'int'
    | `-ConditionalOperator 0x563ab539e0e8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x563ab539def0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x563ab539dea8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x563ab539de90 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x563ab539de50 <col:7> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x563ab539ded8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x563ab539dec0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x563ab539de70 <col:25> '_Bool' lvalue Var 0x563ab5393f70 'b$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x563ab539e0d0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x563ab539df10 <col:42> 'int' lvalue Var 0x563ab5394520 'b$w_buff0' 'int'
    |   `-ParenExpr 0x563ab539e0b0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x563ab539e080 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x563ab539dfd0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x563ab539df88 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x563ab539df70 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x563ab539df30 <col:55> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x563ab539dfb8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x563ab539dfa0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x563ab539df50 <col:73> '_Bool' lvalue Var 0x563ab53941c8 'b$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x563ab539e050 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x563ab539e010 <col:90> 'int' lvalue Var 0x563ab5394618 'b$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x563ab539e068 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x563ab539e030 <col:102> 'int' lvalue Var 0x563ab5393da8 'b' 'int'
    |-BinaryOperator 0x563ab539e320 <line:848:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x563ab539e138 <col:3> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x563ab539e308 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563ab539e2d8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x563ab539e1f8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x563ab539e1b0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x563ab539e198 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x563ab539e158 <col:20> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x563ab539e1e0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x563ab539e1c8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x563ab539e178 <col:38> '_Bool' lvalue Var 0x563ab5393f70 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563ab539e290 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563ab539e248 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563ab539e218 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x563ab539e2c0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563ab539e2a8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563ab539e270 <col:66> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
    |-BinaryOperator 0x563ab539e608 <line:849:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x563ab539e340 <col:3> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x563ab539e5f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563ab539e5c0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x563ab539e4e0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x563ab539e400 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x563ab539e3b8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x563ab539e3a0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x563ab539e360 <col:20> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x563ab539e3e8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x563ab539e3d0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x563ab539e380 <col:38> '_Bool' lvalue Var 0x563ab5393f70 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x563ab539e4c0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x563ab539e478 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x563ab539e460 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x563ab539e420 <col:56> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x563ab539e4a8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x563ab539e490 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x563ab539e440 <col:74> '_Bool' lvalue Var 0x563ab53941c8 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563ab539e578 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563ab539e530 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563ab539e500 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x563ab539e5a8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563ab539e590 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563ab539e558 <col:102> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
    |-BinaryOperator 0x563ab539e810 <line:850:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x563ab539e628 <col:3> '_Bool' lvalue Var 0x563ab5393f70 'b$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x563ab539e7f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563ab539e7c8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x563ab539e6e8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x563ab539e6a0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x563ab539e688 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x563ab539e648 <col:20> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x563ab539e6d0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x563ab539e6b8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x563ab539e668 <col:38> '_Bool' lvalue Var 0x563ab5393f70 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563ab539e780 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563ab539e738 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563ab539e708 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x563ab539e7b0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563ab539e798 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563ab539e760 <col:66> '_Bool' lvalue Var 0x563ab5393f70 'b$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x563ab539eaf8 <line:851:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x563ab539e830 <col:3> '_Bool' lvalue Var 0x563ab53941c8 'b$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x563ab539eae0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563ab539eab0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x563ab539e9d0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x563ab539e8f0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x563ab539e8a8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x563ab539e890 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x563ab539e850 <col:20> '_Bool' lvalue Var 0x563ab5394598 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x563ab539e8d8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x563ab539e8c0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x563ab539e870 <col:38> '_Bool' lvalue Var 0x563ab5393f70 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x563ab539e9b0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x563ab539e968 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x563ab539e950 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x563ab539e910 <col:56> '_Bool' lvalue Var 0x563ab5394690 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x563ab539e998 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x563ab539e980 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x563ab539e930 <col:74> '_Bool' lvalue Var 0x563ab53941c8 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563ab539ea68 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563ab539ea20 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563ab539e9f0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x563ab539ea98 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563ab539ea80 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563ab539ea48 <col:102> '_Bool' lvalue Var 0x563ab53941c8 'b$r_buff1_thd0' '_Bool'
    |-CallExpr 0x563ab539eb50 <line:852:3, col:25> 'void'
    | `-ImplicitCastExpr 0x563ab539eb38 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563ab539eb18 <col:3> 'void ()' Function 0x563ab533a410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563ab539eba8 <line:853:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563ab539eb90 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563ab539eb70 <col:3> 'void ()' Function 0x563ab533a350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563ab539ef10 <line:854:3, col:141> '_Bool' '='
    | |-DeclRefExpr 0x563ab539ebc8 <col:3> '_Bool' lvalue Var 0x563ab5394780 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x563ab539eef8 <col:21, col:141> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x563ab539eee0 <col:21, col:141> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x563ab539eec0 <col:22, col:141> 'int'
    |       `-BinaryOperator 0x563ab539eea0 <col:23, col:140> 'int' '&&'
    |         |-BinaryOperator 0x563ab539ee08 <col:23, col:112> 'int' '&&'
    |         | |-BinaryOperator 0x563ab539ed70 <col:23, col:84> 'int' '&&'
    |         | | |-BinaryOperator 0x563ab539ecd8 <col:23, col:56> 'int' '&&'
    |         | | | |-BinaryOperator 0x563ab539ec40 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x563ab539ec28 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x563ab539ebe8 <col:23> 'int' lvalue Var 0x563ab5394ac0 'z' 'int'
    |         | | | | `-IntegerLiteral 0x563ab539ec08 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x563ab539ecb8 <col:33, col:56> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x563ab539eca0 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x563ab539ec60 <col:33> 'int' lvalue Var 0x563ab5393808 '__unbuffered_p0_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x563ab539ec80 <col:56> 'int' 0
    |         | | `-BinaryOperator 0x563ab539ed50 <col:61, col:84> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x563ab539ed38 <col:61> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x563ab539ecf8 <col:61> 'int' lvalue Var 0x563ab5393928 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x563ab539ed18 <col:84> 'int' 0
    |         | `-BinaryOperator 0x563ab539ede8 <col:89, col:112> 'int' '=='
    |         |   |-ImplicitCastExpr 0x563ab539edd0 <col:89> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x563ab539ed90 <col:89> 'int' lvalue Var 0x563ab5393a48 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x563ab539edb0 <col:112> 'int' 1
    |         `-BinaryOperator 0x563ab539ee80 <col:117, col:140> 'int' '=='
    |           |-ImplicitCastExpr 0x563ab539ee68 <col:117> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x563ab539ee28 <col:117> 'int' lvalue Var 0x563ab5393b68 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x563ab539ee48 <col:140> 'int' 0
    |-CallExpr 0x563ab539ef68 <line:855:3, col:25> 'void'
    | `-ImplicitCastExpr 0x563ab539ef50 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563ab539ef30 <col:3> 'void ()' Function 0x563ab533a410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563ab539efe0 <line:856:3, col:36> 'void'
    | |-ImplicitCastExpr 0x563ab539efc8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563ab539ef88 <col:3> 'void (int)' Function 0x563ab533a0d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x563ab539f038 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x563ab539f020 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x563ab539efa8 <col:21> '_Bool' lvalue Var 0x563ab5394780 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x563ab539f070 <line:857:3, col:10>
      `-IntegerLiteral 0x563ab539f050 <col:10> 'int' 0
