TranslationUnitDecl 0x563322ba1f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x563322ba2848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x563322ba2520 '__int128'
|-TypedefDecl 0x563322ba28b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x563322ba2540 'unsigned __int128'
|-TypedefDecl 0x563322ba2bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x563322ba2990 'struct __NSConstantString_tag'
|   `-Record 0x563322ba2910 '__NSConstantString_tag'
|-TypedefDecl 0x563322ba2c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x563322ba2c20 'char *'
|   `-BuiltinType 0x563322ba2020 'char'
|-TypedefDecl 0x563322be1b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x563322ba2f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x563322ba2d40 'struct __va_list_tag'
|     `-Record 0x563322ba2cc0 '__va_list_tag'
|-FunctionDecl 0x563322be1ca0 <pthread-wmm/safe008_pso.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x563322be1bd0 <col:31> col:34 'int'
|-FunctionDecl 0x563322be1e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x563322be1f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x563322be20d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x563322be2048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x563322be2308 <col:40, col:99>
|   |-IfStmt 0x563322be22d8 <col:42, col:88>
|   | |-UnaryOperator 0x563322be21b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x563322be21a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x563322be2180 <col:47> 'int' lvalue ParmVar 0x563322be2048 'expression' 'int'
|   | `-CompoundStmt 0x563322be22c0 <col:59, col:88>
|   |   `-LabelStmt 0x563322be22a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x563322be2238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x563322be2220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x563322be21d0 <col:68> 'void () __attribute__((noreturn))' Function 0x563322be1f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x563322be22f0 <col:89>
|   `-ReturnStmt 0x563322be22f8 <col:91>
|-FunctionDecl 0x563322be2350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x563322be2410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x563322be2790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563322be24c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x563322be2548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x563322be25c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x563322be2648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x563322be2850 <line:10:22>
|-FunctionDecl 0x563322c088a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563322be28c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x563322be2940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x563322be29c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x563322be2a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x563322c08960 <line:13:22>
|-FunctionDecl 0x563322c08c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563322c089d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x563322c08a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x563322c08ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x563322c08cc8 <line:15:22>
|-TypedefDecl 0x563322c08d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x563322ba20e0 'unsigned char'
|-TypedefDecl 0x563322c08da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x563322ba2100 'unsigned short'
|-TypedefDecl 0x563322c08e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x563322ba2120 'unsigned int'
|-TypedefDecl 0x563322c08e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x563322ba2140 'unsigned long'
|-TypedefDecl 0x563322c08ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x563322ba2040 'signed char'
|-TypedefDecl 0x563322c08f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x563322ba20e0 'unsigned char'
|-TypedefDecl 0x563322c08fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x563322ba2060 'short'
|-TypedefDecl 0x563322c09048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x563322ba2100 'unsigned short'
|-TypedefDecl 0x563322c090b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x563322ba2080 'int'
|-TypedefDecl 0x563322c09128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x563322ba2120 'unsigned int'
|-TypedefDecl 0x563322c09198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x563322ba20a0 'long'
|-TypedefDecl 0x563322c09208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x563322ba2140 'unsigned long'
|-TypedefDecl 0x563322c09278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x563322ba20a0 'long'
|-TypedefDecl 0x563322c092e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x563322ba2140 'unsigned long'
|-TypedefDecl 0x563322c09358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x563322ba2140 'unsigned long'
|-TypedefDecl 0x563322c093c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x563322ba2120 'unsigned int'
|-TypedefDecl 0x563322c09438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x563322ba2120 'unsigned int'
|-TypedefDecl 0x563322c094a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x563322ba2140 'unsigned long'
|-TypedefDecl 0x563322c09518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x563322ba2140 'unsigned long'
|-TypedefDecl 0x563322c09588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x563322ba2120 'unsigned int'
|-TypedefDecl 0x563322c095f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x563322ba2140 'unsigned long'
|-TypedefDecl 0x563322c09668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x563322ba20a0 'long'
|-TypedefDecl 0x563322c096d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x563322ba20a0 'long'
|-TypedefDecl 0x563322c09748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x563322ba2080 'int'
|-RecordDecl 0x563322c097a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x563322c09918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x563322c099d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x563322c09970 'struct __fsid_t' sugar
|   `-RecordType 0x563322c09820 '__fsid_t'
|     `-Record 0x563322c097a0 ''
|-TypedefDecl 0x563322c09a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x563322ba20a0 'long'
|-TypedefDecl 0x563322c09ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x563322ba2140 'unsigned long'
|-TypedefDecl 0x563322c09b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x563322ba2140 'unsigned long'
|-TypedefDecl 0x563322c09ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x563322ba2120 'unsigned int'
|-TypedefDecl 0x563322c09c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x563322ba20a0 'long'
|-TypedefDecl 0x563322c09c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x563322ba2120 'unsigned int'
|-TypedefDecl 0x563322c09cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x563322ba20a0 'long'
|-TypedefDecl 0x563322c09d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x563322ba2080 'int'
|-TypedefDecl 0x563322c09dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x563322ba2080 'int'
|-TypedefDecl 0x563322c09e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x563322ba2080 'int'
|-TypedefDecl 0x563322c09eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x563322ba27a0 'void *'
|   `-BuiltinType 0x563322ba1fe0 'void'
|-TypedefDecl 0x563322c09f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x563322ba20a0 'long'
|-TypedefDecl 0x563322c09f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x563322ba20a0 'long'
|-TypedefDecl 0x563322c0a008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x563322ba20a0 'long'
|-TypedefDecl 0x563322c0a078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x563322ba2140 'unsigned long'
|-TypedefDecl 0x563322c0a0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x563322ba2140 'unsigned long'
|-TypedefDecl 0x563322c0a158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x563322ba2140 'unsigned long'
|-TypedefDecl 0x563322c0a1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x563322ba2140 'unsigned long'
|-TypedefDecl 0x563322c0a238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x563322ba20a0 'long'
|-TypedefDecl 0x563322c0a2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x563322ba20a0 'long'
|-TypedefDecl 0x563322c0a318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x563322ba20a0 'long'
|-TypedefDecl 0x563322c0a388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x563322ba2140 'unsigned long'
|-TypedefDecl 0x563322c0a418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x563322c0a3e0 '__off64_t' sugar
|   |-Typedef 0x563322c096d8 '__off64_t'
|   `-BuiltinType 0x563322ba20a0 'long'
|-TypedefDecl 0x563322c0a510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x563322c0a4d0 '__quad_t *'
|   `-TypedefType 0x563322c0a470 '__quad_t' sugar
|     |-Typedef 0x563322c09278 '__quad_t'
|     `-BuiltinType 0x563322ba20a0 'long'
|-TypedefDecl 0x563322c0a580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x563322ba2c20 'char *'
|   `-BuiltinType 0x563322ba2020 'char'
|-TypedefDecl 0x563322c0a5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x563322ba20a0 'long'
|-TypedefDecl 0x563322c0a660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x563322ba2120 'unsigned int'
|-FunctionDecl 0x563322c0a7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x563322c0a6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x563322c0aae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x563322c0aad8 <line:72:3, col:34>
|     `-CallExpr 0x563322c0aa98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x563322c0aa80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x563322c0aa10 <col:10> '<builtin fn type>' Function 0x563322c0a880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x563322c0aac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x563322c0aa30 <col:29> 'unsigned int' lvalue ParmVar 0x563322c0a6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x563322c0a880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x563322c0a920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x563322c0a990 <col:10> Implicit
| `-ConstAttr 0x563322c0a9e8 <col:10> Implicit
|-FunctionDecl 0x563322c0ac40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x563322c0ab38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x563322c0af58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x563322c0af48 <line:77:3, col:34>
|     `-CallExpr 0x563322c0af08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x563322c0aef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x563322c0ae78 <col:10> '<builtin fn type>' Function 0x563322c0ace8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x563322c0af30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x563322c0ae98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x563322c0ab38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x563322c0ace8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x563322c0ad88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x563322c0adf8 <col:10> Implicit
| `-ConstAttr 0x563322c0ae50 <col:10> Implicit
|-TypedefDecl 0x563322c0af88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x563322ba2140 'unsigned long'
|-TypedefDecl 0x563322c0b018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x563322c0afe0 '__time_t' sugar
|   |-Typedef 0x563322c09c18 '__time_t'
|   `-BuiltinType 0x563322ba20a0 'long'
|-RecordDecl 0x563322c0b070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x563322c0b128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x563322c0b1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x563322c0b248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x563322c0b210 '__pid_t' sugar
|   |-Typedef 0x563322c09748 '__pid_t'
|   `-BuiltinType 0x563322ba2080 'int'
|-RecordDecl 0x563322c0b2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x563322c0b360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x563322c0b3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x563322c0b470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x563322c0b4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x563322ba2140 'unsigned long'
|-RecordDecl 0x563322c0b530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x563322c0b7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x563322c0d8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x563322c0b810 'struct cpu_set_t' sugar
|   `-RecordType 0x563322c0b5b0 'cpu_set_t'
|     `-Record 0x563322c0b530 ''
|-FunctionDecl 0x563322c0db88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x563322c0d958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x563322c0da60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x563322c0dc38 <line:107:19>
|-FunctionDecl 0x563322c0de10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x563322c0dca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x563322c0deb8 <col:69>
|-FunctionDecl 0x563322c0e030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x563322c0df20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x563322c0e0d8 <col:64>
|-FunctionDecl 0x563322c0e398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x563322c0e140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563322c0e278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x563322c0e448 <line:113:22>
|-FunctionDecl 0x563322c0e6c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x563322c0e4b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563322c0e5a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x563322c0e778 <col:88>
|-FunctionDecl 0x563322c0ea98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x563322c0e7e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563322c0e8c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x563322c0e950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x563322c0eb50 <col:62>
|-FunctionDecl 0x563322c0ecc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x563322c0ebb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x563322c0ed70 <col:63>
|-FunctionDecl 0x563322c0ee98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x563322c0ef38 <col:47>
|-FunctionDecl 0x563322c0f040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x563322c0efa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x563322c0f0e8 <col:69>
|-FunctionDecl 0x563322c0f1f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x563322c0f158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x563322c0f298 <col:69>
|-FunctionDecl 0x563322c0f558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x563322c0f300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563322c0f438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x563322c0f608 <col:88>
|-TypedefDecl 0x563322c0f698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x563322c0f660 '__clock_t' sugar
|   |-Typedef 0x563322c09a58 '__clock_t'
|   `-BuiltinType 0x563322ba20a0 'long'
|-TypedefDecl 0x563322c0f728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x563322c0f6f0 '__clockid_t' sugar
|   |-Typedef 0x563322c09e48 '__clockid_t'
|   `-BuiltinType 0x563322ba2080 'int'
|-TypedefDecl 0x563322c0f7b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x563322c0f780 '__timer_t' sugar
|   |-Typedef 0x563322c09eb8 '__timer_t'
|   `-PointerType 0x563322ba27a0 'void *'
|     `-BuiltinType 0x563322ba1fe0 'void'
|-RecordDecl 0x563322c0f810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x563322c0f8e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x563322c0f950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x563322c0f9b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x563322c0fa20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x563322c0fa88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x563322c0faf0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x563322c0fb58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x563322c0fbc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x563322c0fc28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x563322c0fc90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x563322c0fcf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x563322c0fd48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x563322c0fe18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x563322c0fe88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x563322c0ff30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x563322c10100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x563322c101a0 <col:45>
|-FunctionDecl 0x563322c10380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x563322c10270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x563322c10428 <col:54>
|-FunctionDecl 0x563322c10628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x563322c10490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x563322c10508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x563322c106d8 <line:157:22>
| `-ConstAttr 0x563322c10730 <col:63>
|-FunctionDecl 0x563322c11560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x563322c10828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x563322c11608 <col:56>
|-FunctionDecl 0x563322c119b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x563322c11678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x563322c116f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x563322c11770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x563322c11868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x563322c11a70 <col:54>
|-RecordDecl 0x563322c11ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x563322c11b78 parent 0x563322ba1f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x563322c11dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x563322c11e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x563322c11ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x563322c11f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x563322c12038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x563322c12158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x563322c12100 'struct __locale_struct *'
|   `-ElaboratedType 0x563322c12090 'struct __locale_struct' sugar
|     `-RecordType 0x563322c11b50 'struct __locale_struct'
|       `-Record 0x563322c11ac8 '__locale_struct'
|-TypedefDecl 0x563322c12208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x563322c121d0 '__locale_t' sugar
|   |-Typedef 0x563322c12158 '__locale_t'
|   `-PointerType 0x563322c12100 'struct __locale_struct *'
|     `-ElaboratedType 0x563322c12090 'struct __locale_struct' sugar
|       `-RecordType 0x563322c11b50 'struct __locale_struct'
|         `-Record 0x563322c11ac8 '__locale_struct'
|-FunctionDecl 0x563322c12610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x563322c12278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x563322c122f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x563322c12370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x563322c12400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x563322c12478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x563322c126d8 <col:40>
|-FunctionDecl 0x563322c128c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x563322c127a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x563322c12970 <col:66>
|-FunctionDecl 0x563322c12a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x563322c129d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x563322c12b28 <col:69>
|-FunctionDecl 0x563322c12d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x563322c12b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x563322c12c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x563322c12e08 <col:52>
|-FunctionDecl 0x563322c12fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x563322c12e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x563322c12f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x563322c13060 <col:55>
|-FunctionDecl 0x563322c131f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x563322c130e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x563322c132a0 <col:62>
|-FunctionDecl 0x563322c13418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x563322c13308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x563322c134c0 <col:60>
|-FunctionDecl 0x563322c13718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x563322c13578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x563322c135f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x563322c137c8 <col:44>
|-FunctionDecl 0x563322c139d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x563322c13830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x563322c138b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x563322c13a88 <col:49>
|-VarDecl 0x563322c13b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x563322c13c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x563322c13c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x563322c13d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x563322c13e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x563322c13f20 <col:42>
|-VarDecl 0x563322c13f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x563322c14010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x563322c14198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x563322c14088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x563322c14240 <col:57>
|-FunctionDecl 0x563322c14350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x563322c142c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x563322c143f8 <col:56>
|-FunctionDecl 0x563322c15540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x563322c14478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x563322c155e8 <col:59>
|-FunctionDecl 0x563322c156f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x563322c15658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x563322c15798 <col:48>
| `-ConstAttr 0x563322c157f0 <col:89>
|-FunctionDecl 0x563322c15a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x563322c158a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x563322c15938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x563322c15cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x563322c15b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563322c15bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x563322c15d68 <col:88>
|-FunctionDecl 0x563322c15f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x563322c15dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563322c15e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x563322c15fb0 <col:88>
|-FunctionDecl 0x563322c161c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x563322c16018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563322c160a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x563322c16278 <line:208:22>
|-FunctionDecl 0x563322c165e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x563322c162e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563322c16360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x563322c163f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x563322c16480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x563322c168e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x563322c166e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x563322c167c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x563322c16998 <col:85>
|-FunctionDecl 0x563322c16d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x563322c16a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563322c16b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x563322c16c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x563322c16e40 <col:52>
|-FunctionDecl 0x563322c16fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x563322c16ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x563322c17060 <col:61>
|-FunctionDecl 0x563322c17560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x563322c170c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x563322c17148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x563322c17278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x563322c17368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x563322c17620 <col:62>
|-FunctionDecl 0x563322c17838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x563322c17688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x563322c17718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x563322c178e8 <line:221:22>
|-FunctionDecl 0x563322c179e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x563322c17950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x563322c17a90 <col:65>
|-TypedefDecl 0x563322c17b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x563322ba2140 'unsigned long'
|-RecordDecl 0x563322c17b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x563322c17ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x563322c17d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563322c17db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x563322c17d60 'union pthread_attr_t' sugar
|   `-RecordType 0x563322c17be0 'union pthread_attr_t'
|     `-Record 0x563322c17b58 'pthread_attr_t'
|-RecordDecl 0x563322c17e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x563322c17f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x563322c18000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x563322c180b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x563322c18050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x563322c17e90 'struct __pthread_internal_list'
|     `-Record 0x563322c17e10 '__pthread_internal_list'
|-RecordDecl 0x563322c18120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x563322c181c8 parent 0x563322ba1f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x563322c182a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x563322c18308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x563322c18370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x563322c183d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x563322c18440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x563322c184a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x563322c1c580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x563322c1c630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x563322c1c720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x563322c1c788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563322c1c910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x563322c1c8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x563322c181a0 'pthread_mutex_t'
|     `-Record 0x563322c18120 ''
|-RecordDecl 0x563322c1c980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x563322c1cac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x563322c1cb28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x563322c1cbe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x563322c1cb80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x563322c1ca00 'pthread_mutexattr_t'
|     `-Record 0x563322c1c980 ''
|-RecordDecl 0x563322c1cc50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x563322c1ccf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x563322c1cdc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x563322c1ce28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x563322c1ce90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x563322c1cef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x563322c1cf60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x563322c1cfc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x563322c1d030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x563322c1d098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x563322c1d150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe008_pso.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe008_pso.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x563322c1d240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x563322c1d2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x563322c1d3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x563322c1d380 'union pthread_cond_t' sugar
|   `-RecordType 0x563322c1ccd0 'pthread_cond_t'
|     `-Record 0x563322c1cc50 ''
|-RecordDecl 0x563322c1d450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x563322c1d590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x563322c1d5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x563322c1d6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x563322c1d650 'union pthread_condattr_t' sugar
|   `-RecordType 0x563322c1d4d0 'pthread_condattr_t'
|     `-Record 0x563322c1d450 ''
|-TypedefDecl 0x563322c1d738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x563322ba2120 'unsigned int'
|-TypedefDecl 0x563322c1d7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x563322ba2080 'int'
|-RecordDecl 0x563322c1d800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x563322c1d8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x563322c1d970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x563322c1d9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x563322c1da40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x563322c1daa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x563322c1db10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x563322c1db78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x563322c1dbe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x563322c1dc48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x563322c1dcb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x563322c1dd18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x563322c1dd80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x563322c1de30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe008_pso.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe008_pso.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x563322c1ded8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x563322c1df40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563322c1e090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x563322c1e030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x563322c1d880 'pthread_rwlock_t'
|     `-Record 0x563322c1d800 ''
|-RecordDecl 0x563322c1e100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x563322c1e240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x563322c1e2a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563322c1e360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x563322c1e300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x563322c1e180 'pthread_rwlockattr_t'
|     `-Record 0x563322c1e100 ''
|-TypedefDecl 0x563322c1e3e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x563322ba2084 'volatile int' volatile
|   `-BuiltinType 0x563322ba2080 'int'
|-RecordDecl 0x563322c1e440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x563322c205b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x563322c20618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563322c206d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x563322c20670 'union pthread_barrier_t' sugar
|   `-RecordType 0x563322c1e4c0 'pthread_barrier_t'
|     `-Record 0x563322c1e440 ''
|-RecordDecl 0x563322c20740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x563322c20840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x563322c208a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x563322c20960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x563322c20900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x563322c207c0 'pthread_barrierattr_t'
|     `-Record 0x563322c20740 ''
|-TypedefDecl 0x563322c20a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x563322c20a10 'long [8]' 8 
|   `-BuiltinType 0x563322ba20a0 'long'
|-EnumDecl 0x563322c20ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x563322c20b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x563322c20be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x563322c20c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x563322c20d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x563322c20d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x563322c20da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x563322c20df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x563322c20e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x563322c20e68 <col:26> 'int'
| |   `-DeclRefExpr 0x563322c20e48 <col:26> 'int' EnumConstant 0x563322c20d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x563322c20f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x563322c20ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x563322c20ed0 <col:29> 'int' EnumConstant 0x563322c20d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x563322c20f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x563322c20f78 <col:30> 'int'
| |   `-DeclRefExpr 0x563322c20f58 <col:30> 'int' EnumConstant 0x563322c20da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x563322c21018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x563322c21000 <col:27> 'int'
|     `-DeclRefExpr 0x563322c20fe0 <col:27> 'int' EnumConstant 0x563322c20e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x563322c21068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x563322c21138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x563322c211c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x563322c211a8 <col:30> 'int'
| |   `-DeclRefExpr 0x563322c21188 <col:30> 'int' EnumConstant 0x563322c21138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x563322c21210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x563322c21298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x563322c21280 <col:29> 'int'
|     `-DeclRefExpr 0x563322c21260 <col:29> 'int' EnumConstant 0x563322c21210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x563322c212e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x563322c213b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x563322c21408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x563322c21458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x563322c214a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x563322c215c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x563322c21610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x563322c21660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x563322c216e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x563322c216d0 <col:31> 'int'
|     `-DeclRefExpr 0x563322c216b0 <col:31> 'int' EnumConstant 0x563322c215c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x563322c21738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x563322c21808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x563322c21858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x563322c218a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x563322c21978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x563322c219c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x563322c21a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x563322c21ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x563322c21b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x563322c21b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x563322c21dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x563322c21e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x563322c21e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x563322c21fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x563322c22008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x563322c220d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x563322c22128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x563322c22178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x563322c22248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x563322c22298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x563322c228f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x563322c22390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x563322c224a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563322c226e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x563322c22760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x563322c229b8 <col:47>
| |-NonNullAttr 0x563322c22a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x563322c22a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x563322c22b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x563322c22aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x563322c22dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x563322c22c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x563322c22ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x563322c22f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x563322c22e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x563322c23040 <col:60>
|-FunctionDecl 0x563322c23190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x563322c23230 <col:54>
| `-ConstAttr 0x563322c23288 <col:95>
|-FunctionDecl 0x563322c23458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x563322c232c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563322c23338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x563322c23508 <line:394:19>
| `-ConstAttr 0x563322c23560 <col:60>
|-FunctionDecl 0x563322c23f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x563322c23e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x563322c24010 <col:71>
| `-NonNullAttr 0x563322c24068 <col:112, col:126> 1
|-FunctionDecl 0x563322c24170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x563322c240b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x563322c24218 <line:397:22>
| `-NonNullAttr 0x563322c24270 <col:63, col:77> 1
|-FunctionDecl 0x563322c24498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x563322c242b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x563322c24338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x563322c24548 <line:400:22>
| `-NonNullAttr 0x563322c245a0 <col:63, col:80> 1 2
|-FunctionDecl 0x563322c247a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563322c245e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563322c24668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x563322c24858 <line:403:22>
| `-NonNullAttr 0x563322c248b0 <col:63, col:77> 1
|-FunctionDecl 0x563322c24b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x563322c248f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x563322c249a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x563322c24bb8 <line:406:22>
| `-NonNullAttr 0x563322c24c10 <col:63, col:80> 1 2
|-FunctionDecl 0x563322c25e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x563322c24c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563322c24cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x563322c25ef8 <line:409:22>
| `-NonNullAttr 0x563322c25f50 <col:63, col:77> 1
|-FunctionDecl 0x563322c26188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x563322c25f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563322c26028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x563322c26238 <line:412:22>
| `-NonNullAttr 0x563322c26290 <col:63, col:80> 1 2
|-FunctionDecl 0x563322c264c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x563322c262d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x563322c26368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x563322c26578 <col:37>
| `-NonNullAttr 0x563322c265d0 <col:78, col:95> 1 2
|-FunctionDecl 0x563322c267b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563322c26618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563322c26698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x563322c26868 <line:418:22>
| `-NonNullAttr 0x563322c268c0 <col:63, col:80> 1 2
|-FunctionDecl 0x563322c26a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563322c26908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563322c26988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x563322c26af8 <line:420:22>
| `-NonNullAttr 0x563322c26b50 <col:63, col:77> 1
|-FunctionDecl 0x563322c26cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563322c26b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563322c26c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x563322c26da8 <line:423:22>
| `-NonNullAttr 0x563322c27e30 <col:63, col:80> 1 2
|-FunctionDecl 0x563322c27fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563322c27e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563322c27ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x563322c28068 <line:426:22>
| `-NonNullAttr 0x563322c280c0 <col:63, col:77> 1
|-FunctionDecl 0x563322c28268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563322c28108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563322c28188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x563322c28318 <line:429:22>
| `-NonNullAttr 0x563322c28370 <col:63, col:80> 1 2
|-FunctionDecl 0x563322c284f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563322c283b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563322c28438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x563322c285a8 <line:431:22>
| `-NonNullAttr 0x563322c28600 <col:63, col:77> 1
|-FunctionDecl 0x563322c28828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x563322c28648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563322c286c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x563322c288d8 <line:434:22>
| |-NonNullAttr 0x563322c28930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x563322c28968 <col:100> "" ""
|-FunctionDecl 0x563322c28b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x563322c289b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563322c28a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x563322c28c28 <line:437:22>
| |-NonNullAttr 0x563322c28c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x563322c28cb8 <col:97> "" ""
|-FunctionDecl 0x563322c28eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x563322c28d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563322c28d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x563322c28f68 <line:440:22>
| `-NonNullAttr 0x563322c28fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x563322c29140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x563322c29008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563322c29080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x563322c291f0 <line:443:22>
| `-NonNullAttr 0x563322c29248 <col:63, col:77> 1
|-FunctionDecl 0x563322c29538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x563322c29298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563322c29318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x563322c29390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x563322c295f0 <line:447:22>
| `-NonNullAttr 0x563322c29648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x563322c298f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x563322c296a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563322c29720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x563322c29798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x563322c299b0 <col:43>
| `-NonNullAttr 0x563322c29a08 <col:84, col:98> 1
|-FunctionDecl 0x563322c29cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x563322c29a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563322c29ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x563322c29b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x563322c29d80 <line:452:22>
| `-NonNullAttr 0x563322c29dd8 <col:63, col:77> 3
|-FunctionDecl 0x563322c2a0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x563322c29e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563322c29ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x563322c29f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x563322c2a1a0 <line:456:22>
| `-NonNullAttr 0x563322c2a1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x563322c2a3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x563322c2a248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563322c2a2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x563322c2a498 <line:458:22>
|-FunctionDecl 0x563322c2a868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x563322c2a560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x563322c2a700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x563322c2a918 <col:52, col:69> 1 2
|-FunctionDecl 0x563322c2aac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x563322c2a9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x563322c2aa20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x563322c2aca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x563322c2ab88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x563322c2ac08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x563322c2ae60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x563322c2ad68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x563322c2afa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x563322c2b040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x563322c2b0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x563322c2b1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x563322c2b240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x563322c2b410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe008_pso.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x563322c2b508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x563322c2b5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x563322c2b560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x563322c2b0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x563322c2b040 ''
| `-AlignedAttr 0x563322c2b618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x563322c2b690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x563322c2b7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x563322c2b858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x563322c2b8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x563322c2b928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x563322c2bb30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x563322c2ba20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x563322c2bc78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x563322c2bbe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x563322c2be70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563322c2bd30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x563322c2bf18 <line:487:22>
|-RecordDecl 0x563322c2bf70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x563322c2c288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x563322c2c0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x563322c2c168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x563322c2c338 <col:86>
| `-ReturnsTwiceAttr 0x563322c2c390 <col:12> Implicit
|-FunctionDecl 0x563322c2c6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x563322c2c460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x563322c2c570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x563322c2c768 <line:493:22>
| `-NonNullAttr 0x563322c2c7c0 <col:63, col:77> 1
|-FunctionDecl 0x563322c2c938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563322c2c808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563322c2c9e0 <line:495:22>
| `-NonNullAttr 0x563322c2ca38 <col:63, col:77> 1
|-FunctionDecl 0x563322c2cb40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563322c2ca88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563322c2cbe8 <line:497:22>
| `-NonNullAttr 0x563322c2cc40 <col:52, col:66> 1
|-FunctionDecl 0x563322c2cd40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563322c2cc88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563322c2cde8 <line:499:22>
| `-NonNullAttr 0x563322c2ce40 <col:52, col:66> 1
|-FunctionDecl 0x563322c2d088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563322c2ce98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563322c2cf28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x563322c2d138 <col:36>
| `-NonNullAttr 0x563322c2d190 <col:66, col:83> 1 2
|-FunctionDecl 0x563322c2d290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563322c2d1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563322c2d338 <line:504:22>
| `-NonNullAttr 0x563322c2d390 <col:52, col:66> 1
|-FunctionDecl 0x563322c2d628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563322c2d440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563322c2d4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x563322c2d6d8 <line:508:22>
| `-NonNullAttr 0x563322c2d730 <col:63, col:80> 1 2
|-FunctionDecl 0x563322c2d9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x563322c2d778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563322c2d7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x563322c2d878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x563322c2dab0 <line:512:22>
| `-NonNullAttr 0x563322c2db08 <col:63, col:80> 1 3
|-FunctionDecl 0x563322c2dc10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563322c2db58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563322c2dcb8 <line:514:22>
| `-NonNullAttr 0x563322c2dd10 <col:63, col:77> 1
|-FunctionDecl 0x563322c2df38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x563322c2ddc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x563322c2dfe0 <line:516:22>
| `-NonNullAttr 0x563322c2e038 <col:63, col:77> 1
|-FunctionDecl 0x563322c2e140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x563322c2e088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x563322c2e1e8 <line:518:22>
| `-NonNullAttr 0x563322c2e240 <col:63, col:77> 1
|-FunctionDecl 0x563322c2e468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563322c2e288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563322c2e308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x563322c2e518 <line:522:22>
| `-NonNullAttr 0x563322c2e570 <col:63, col:80> 1 2
|-FunctionDecl 0x563322c2e778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563322c2e5b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563322c2e638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x563322c2e828 <line:525:22>
| `-NonNullAttr 0x563322c2e880 <col:63, col:77> 1
|-FunctionDecl 0x563322c2ea28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563322c2e8c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563322c2e948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x563322c2ead8 <line:528:22>
| `-NonNullAttr 0x563322c2eb30 <col:63, col:80> 1 2
|-FunctionDecl 0x563322c2ecb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563322c2eb78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563322c2ebf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x563322c2ed68 <line:530:22>
| `-NonNullAttr 0x563322c2edc0 <col:63, col:77> 1
|-FunctionDecl 0x563322c2ff90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563322c2ee08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563322c2feb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x563322c30040 <line:534:22>
| `-NonNullAttr 0x563322c30098 <col:63, col:80> 1 2
|-FunctionDecl 0x563322c30228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563322c300e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563322c30168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x563322c302d8 <line:537:22>
| `-NonNullAttr 0x563322c30330 <col:63, col:77> 1
|-FunctionDecl 0x563322c304d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563322c30378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563322c303f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x563322c30588 <line:541:22>
| `-NonNullAttr 0x563322c305e0 <col:63, col:80> 1 2
|-FunctionDecl 0x563322c30768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563322c30628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563322c306a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x563322c30818 <line:544:22>
| `-NonNullAttr 0x563322c30870 <col:63, col:77> 1
|-FunctionDecl 0x563322c30a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x563322c308b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x563322c30938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x563322c30b08 <line:547:22>
| `-NonNullAttr 0x563322c30b60 <col:63, col:80> 1 2
|-FunctionDecl 0x563322c30ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563322c30ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563322c30c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x563322c30d98 <line:550:22>
| `-NonNullAttr 0x563322c30df0 <col:63, col:77> 1
|-FunctionDecl 0x563322c32168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x563322c31f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x563322c32020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x563322c32218 <col:29>
| `-NonNullAttr 0x563322c32270 <col:70, col:84> 1
|-FunctionDecl 0x563322c323e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563322c322b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563322c32490 <line:555:22>
| `-NonNullAttr 0x563322c324e8 <col:63, col:77> 1
|-FunctionDecl 0x563322c325f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563322c32538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563322c32698 <line:557:22>
| `-NonNullAttr 0x563322c326f0 <col:52, col:66> 1
|-FunctionDecl 0x563322c327f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563322c32738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563322c32898 <line:559:19>
| `-NonNullAttr 0x563322c328f0 <col:49, col:63> 1
|-FunctionDecl 0x563322c32b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563322c32938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x563322c329c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x563322c32bd8 <col:39>
| `-NonNullAttr 0x563322c32c30 <col:69, col:86> 1 2
|-FunctionDecl 0x563322c32d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563322c32c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563322c32dd8 <line:564:22>
| `-NonNullAttr 0x563322c32e30 <col:52, col:66> 1
|-FunctionDecl 0x563322c32f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563322c32ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563322c33040 <line:566:22>
| `-NonNullAttr 0x563322c33098 <col:52, col:66> 1
|-FunctionDecl 0x563322c33258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563322c330e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x563322c33178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x563322c33308 <col:39>
| `-NonNullAttr 0x563322c33360 <col:69, col:86> 1 2
|-FunctionDecl 0x563322c33460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563322c333a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563322c33508 <line:571:22>
| `-NonNullAttr 0x563322c33560 <col:52, col:66> 1
|-FunctionDecl 0x563322c33748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x563322c33610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x563322c337f0 <line:573:22>
| `-NonNullAttr 0x563322c33848 <col:63, col:77> 1
|-FunctionDecl 0x563322c33950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x563322c33898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x563322c339f8 <line:575:22>
| `-NonNullAttr 0x563322c33a50 <col:63, col:77> 1
|-FunctionDecl 0x563322c33c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563322c33a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x563322c33b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x563322c33d28 <line:579:22>
| `-NonNullAttr 0x563322c33d80 <col:63, col:80> 1 2
|-FunctionDecl 0x563322c33fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x563322c33dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x563322c33e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x563322c34058 <line:582:22>
| `-NonNullAttr 0x563322c340b0 <col:63, col:77> 1
|-FunctionDecl 0x563322c34258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563322c340f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x563322c34178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x563322c34308 <line:586:22>
| `-NonNullAttr 0x563322c34360 <col:63, col:80> 1 2
|-FunctionDecl 0x563322c344e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x563322c343a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x563322c34428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x563322c34598 <col:36>
| `-NonNullAttr 0x563322c345f0 <col:77, col:91> 1
|-FunctionDecl 0x563322c34928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x563322c346d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x563322c347e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x563322c349d8 <line:591:22>
| `-NonNullAttr 0x563322c34a30 <col:63, col:77> 1
|-FunctionDecl 0x563322c34ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563322c34a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563322c34c50 <line:593:22>
| `-NonNullAttr 0x563322c34ca8 <col:63, col:77> 1
|-FunctionDecl 0x563322c34db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563322c34cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563322c34e58 <line:595:22>
| `-NonNullAttr 0x563322c34eb0 <col:52, col:66> 1
|-FunctionDecl 0x563322c34fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563322c34f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563322c35070 <line:597:22>
| `-NonNullAttr 0x563322c350c8 <col:52, col:66> 1
|-FunctionDecl 0x563322c352f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x563322c35118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x563322c35190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x563322c353a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x563322c356d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563322c35428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x563322c354a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563322c35530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x563322c35790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x563322c359a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x563322c35870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x563322c35a50 <line:606:22>
| `-NonNullAttr 0x563322c35aa8 <col:63, col:77> 1
|-FunctionDecl 0x563322c35bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x563322c35af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x563322c35c58 <line:608:22>
| `-NonNullAttr 0x563322c35cb0 <col:63, col:77> 1
|-FunctionDecl 0x563322c35f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563322c35cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x563322c35d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x563322c35fc0 <line:612:22>
| `-NonNullAttr 0x563322c36018 <col:63, col:80> 1 2
|-FunctionDecl 0x563322c36228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x563322c36068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x563322c360e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x563322c362d8 <col:37>
| `-NonNullAttr 0x563322c36330 <col:78, col:92> 1
|-FunctionDecl 0x563322c36548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x563322c36378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x563322c36420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x563322c365f8 <line:618:22>
| `-NonNullAttr 0x563322c36650 <col:63, col:80> 1 2
|-FunctionDecl 0x563322c36818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x563322c36698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x563322c36710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x563322c368c8 <line:621:22>
| `-NonNullAttr 0x563322c36920 <col:63, col:77> 1
|-FunctionDecl 0x563322c36bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x563322c36a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x563322c36a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x563322c36c78 <line:623:22>
| `-NonNullAttr 0x563322c36cd0 <col:63, col:77> 1
|-FunctionDecl 0x563322c36e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563322c36d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563322c36f20 <line:625:22>
| `-NonNullAttr 0x563322c36f78 <col:63, col:77> 1
|-FunctionDecl 0x563322c37080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563322c36fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563322c37128 <line:627:22>
| `-NonNullAttr 0x563322c37180 <col:52, col:66> 1
|-FunctionDecl 0x563322c37280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563322c371c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563322c37328 <line:629:22>
| `-NonNullAttr 0x563322c37380 <col:52, col:66> 1
|-FunctionDecl 0x563322c37480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563322c373c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563322c37528 <line:631:22>
| `-NonNullAttr 0x563322c37580 <col:52, col:66> 1
|-FunctionDecl 0x563322c37958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x563322c37660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x563322c37770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x563322c377f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x563322c37a10 <line:635:22>
| `-NonNullAttr 0x563322c37a68 <col:63, col:77> 1
|-FunctionDecl 0x563322c37be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x563322c37ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x563322c37c90 <line:637:22>
| `-NonNullAttr 0x563322c37ce8 <col:63, col:77> 1
|-FunctionDecl 0x563322c37df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x563322c37d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x563322c37e98 <line:639:22>
| `-NonNullAttr 0x563322c37ef0 <col:52, col:66> 1
|-FunctionDecl 0x563322c380e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x563322c37fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x563322c38190 <line:641:22>
| `-NonNullAttr 0x563322c381e8 <col:63, col:77> 1
|-FunctionDecl 0x563322c382f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x563322c38238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x563322c38398 <line:643:22>
| `-NonNullAttr 0x563322c383f0 <col:63, col:77> 1
|-FunctionDecl 0x563322c38618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563322c38438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x563322c384b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x563322c386c8 <line:647:22>
| `-NonNullAttr 0x563322c38720 <col:63, col:80> 1 2
|-FunctionDecl 0x563322c38928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x563322c38768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x563322c387e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x563322c389d8 <line:650:22>
| `-NonNullAttr 0x563322c38a30 <col:63, col:77> 1
|-FunctionDecl 0x563322c38d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x563322c38b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x563322c38c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x563322c38e28 <line:653:22>
| `-NonNullAttr 0x563322c38e80 <col:63, col:77> 1
|-FunctionDecl 0x563322c38fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x563322c38ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x563322c39090 <col:69>
|-FunctionDecl 0x563322c39208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x563322c390f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x563322c392b0 <col:72>
|-FunctionDecl 0x563322c394e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x563322c39318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x563322c393c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x563322c39598 <col:44>
|-FunctionDecl 0x563322c397b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x563322c39600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563322c39678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x563322c39868 <line:660:22>
| `-NonNullAttr 0x563322c398c0 <col:63, col:77> 2
|-FunctionDecl 0x563322c39d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x563322c399a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x563322c39ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x563322c39bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x563322c39dc0 <col:47>
|-FunctionDecl 0x563322c3af60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x563322c39e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x563322c3b0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x563322c3b020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x563322c3b210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x563322c3b178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x563322c3b2d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x563322c3b398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x563322c3b458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x563322c3b510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x563322c3b590 prev 0x563322c3b510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x563322c3b5f8 <col:24> 'int' 0
|-VarDecl 0x563322c3b630 <line:673:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x563322c3b6b0 prev 0x563322c3b630 <line:674:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x563322c3b718 <col:27> 'int' 0
|-VarDecl 0x563322c3b750 <line:675:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x563322c3b7d0 prev 0x563322c3b750 <line:676:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x563322c3b838 <col:27> 'int' 0
|-VarDecl 0x563322c3b868 <line:677:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x563322c3b8e0 <line:678:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x563322c3b960 <line:679:1, col:5> col:5 used x 'int'
|-VarDecl 0x563322c3b9e0 prev 0x563322c3b960 <line:680:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x563322c3ba48 <col:9> 'int' 0
|-VarDecl 0x563322c3ba80 <line:681:1, col:5> col:5 used y 'int'
|-VarDecl 0x563322c3bb00 prev 0x563322c3ba80 <line:682:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x563322c3bb68 <col:9> 'int' 0
|-VarDecl 0x563322c3bba0 <line:683:1, col:5> col:5 used z 'int'
|-VarDecl 0x563322c3bc20 prev 0x563322c3bba0 <line:684:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x563322c3bc88 <col:9> 'int' 0
|-VarDecl 0x563322c3bcb8 <line:685:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x563322c3bd38 <line:686:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x563322c3bdb0 <line:687:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x563322c3be28 <line:688:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x563322c3bea0 <line:689:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x563322c3bf70 <line:690:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x563322c3bfe8 <line:691:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x563322c3c060 <line:692:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x563322c3c0d8 <line:693:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x563322c3c150 <line:694:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x563322c3c1c8 <line:695:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x563322c3c248 <line:696:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x563322c3c2c8 <line:697:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x563322c3c340 <line:698:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x563322c3c3c0 <line:699:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x563322c3c438 <line:700:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x563322c3c4b0 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x563322c3c528 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x563322c3c640 prev 0x563322c3af60 <line:703:1, line:731:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x563322c3c5a8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x563322c3de68 <line:704:1, line:731:1>
|   |-CallExpr 0x563322c3c758 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563322c3c740 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563322c3c6e8 <col:3> 'void ()' Function 0x563322be2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563322c3c7d0 <line:706:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563322c3c778 <col:3> 'int' lvalue Var 0x563322c3c3c0 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x563322c3c7b8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563322c3c798 <col:15> 'int' lvalue Var 0x563322c3c2c8 'z$w_buff0' 'int'
|   |-BinaryOperator 0x563322c3c830 <line:707:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563322c3c7f0 <col:3> 'int' lvalue Var 0x563322c3c2c8 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x563322c3c810 <col:15> 'int' 2
|   |-BinaryOperator 0x563322c3c8a8 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563322c3c850 <col:3> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563322c3c890 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563322c3c870 <col:20> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563322c3c940 <line:709:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x563322c3c8c8 <col:3> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x563322c3c918 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563322c3c8e8 <col:27> 'int' 1
|   |-CallExpr 0x563322c3cac8 <line:710:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x563322c3cab0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x563322c3c960 <col:3> 'void (int)' Function 0x563322be20d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x563322c3ca60 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x563322c3ca40 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x563322c3ca20 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x563322c3c9d8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x563322c3c9c0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x563322c3c980 <col:23> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x563322c3ca08 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x563322c3c9f0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x563322c3c9a0 <col:41> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563322c3cb48 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563322c3caf0 <col:3> '_Bool' lvalue Var 0x563322c3bfe8 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x563322c3cb30 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563322c3cb10 <col:20> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x563322c3cbc0 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563322c3cb68 <col:3> '_Bool' lvalue Var 0x563322c3c060 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563322c3cba8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563322c3cb88 <col:20> '_Bool' lvalue Var 0x563322c3be28 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x563322c3cc38 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563322c3cbe0 <col:3> '_Bool' lvalue Var 0x563322c3c0d8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563322c3cc20 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563322c3cc00 <col:20> '_Bool' lvalue Var 0x563322c3bea0 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x563322c3ccb0 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563322c3cc58 <col:3> '_Bool' lvalue Var 0x563322c3c150 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x563322c3cc98 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563322c3cc78 <col:20> '_Bool' lvalue Var 0x563322c3bf70 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x563322c3cd48 <line:715:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x563322c3ccd0 <col:3> '_Bool' lvalue Var 0x563322c3be28 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x563322c3cd20 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563322c3ccf0 <col:27> 'int' 1
|   |-CallExpr 0x563322c3cda0 <line:716:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563322c3cd88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563322c3cd68 <col:3> 'void ()' Function 0x563322be2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563322c3cdf8 <line:717:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563322c3cde0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563322c3cdc0 <col:3> 'void ()' Function 0x563322be2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563322c3ce58 <line:718:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x563322c3ce18 <col:3> 'int' lvalue Var 0x563322c3b9e0 'x' 'int'
|   | `-IntegerLiteral 0x563322c3ce38 <col:7> 'int' 1
|   |-CallExpr 0x563322c3ceb0 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563322c3ce98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563322c3ce78 <col:3> 'void ()' Function 0x563322be2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563322c3cf08 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563322c3cef0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563322c3ced0 <col:3> 'void ()' Function 0x563322be2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563322c3d208 <line:721:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x563322c3cf28 <col:3> 'int' lvalue Var 0x563322c3bc20 'z' 'int'
|   | `-ConditionalOperator 0x563322c3d1d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x563322c3d000 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x563322c3cfb8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x563322c3cfa0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x563322c3cf48 <col:7> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x563322c3cfe8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x563322c3cfd0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x563322c3cf80 <col:25> '_Bool' lvalue Var 0x563322c3be28 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x563322c3d1c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563322c3d020 <col:42> 'int' lvalue Var 0x563322c3c2c8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x563322c3d1a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x563322c3d170 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x563322c3d0e0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563322c3d098 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563322c3d080 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563322c3d040 <col:55> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563322c3d0c8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563322c3d0b0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563322c3d060 <col:73> '_Bool' lvalue Var 0x563322c3c060 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x563322c3d140 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563322c3d100 <col:90> 'int' lvalue Var 0x563322c3c3c0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x563322c3d158 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563322c3d120 <col:102> 'int' lvalue Var 0x563322c3bc20 'z' 'int'
|   |-BinaryOperator 0x563322c3d410 <line:722:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563322c3d228 <col:3> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563322c3d3f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563322c3d3c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563322c3d2e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563322c3d2a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563322c3d288 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563322c3d248 <col:20> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563322c3d2d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563322c3d2b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563322c3d268 <col:38> '_Bool' lvalue Var 0x563322c3be28 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x563322c3d380 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563322c3d338 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563322c3d308 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563322c3d3b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563322c3d398 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563322c3d360 <col:66> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563322c3d6f8 <line:723:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563322c3d430 <col:3> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563322c3d6e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563322c3d6b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563322c3d5d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563322c3d4f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563322c3d4a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563322c3d490 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563322c3d450 <col:20> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563322c3d4d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563322c3d4c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563322c3d470 <col:38> '_Bool' lvalue Var 0x563322c3be28 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x563322c3d5b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563322c3d568 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563322c3d550 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563322c3d510 <col:56> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563322c3d598 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563322c3d580 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563322c3d530 <col:74> '_Bool' lvalue Var 0x563322c3c060 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x563322c3d668 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563322c3d620 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563322c3d5f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563322c3d698 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563322c3d680 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563322c3d648 <col:102> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x563322c3d900 <line:724:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563322c3d718 <col:3> '_Bool' lvalue Var 0x563322c3be28 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563322c3d8e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563322c3d8b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563322c3d7d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563322c3d790 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563322c3d778 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563322c3d738 <col:20> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563322c3d7c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563322c3d7a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563322c3d758 <col:38> '_Bool' lvalue Var 0x563322c3be28 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x563322c3d870 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563322c3d828 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563322c3d7f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563322c3d8a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563322c3d888 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563322c3d850 <col:66> '_Bool' lvalue Var 0x563322c3be28 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x563322c3dbe8 <line:725:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563322c3d920 <col:3> '_Bool' lvalue Var 0x563322c3c060 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563322c3dbd0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563322c3dba0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563322c3dac0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563322c3d9e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563322c3d998 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563322c3d980 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563322c3d940 <col:20> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563322c3d9c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563322c3d9b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563322c3d960 <col:38> '_Bool' lvalue Var 0x563322c3be28 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x563322c3daa0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563322c3da58 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563322c3da40 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563322c3da00 <col:56> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563322c3da88 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563322c3da70 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563322c3da20 <col:74> '_Bool' lvalue Var 0x563322c3c060 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x563322c3db58 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563322c3db10 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563322c3dae0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563322c3db88 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563322c3db70 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563322c3db38 <col:102> '_Bool' lvalue Var 0x563322c3c060 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x563322c3dc40 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563322c3dc28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563322c3dc08 <col:3> 'void ()' Function 0x563322be2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563322c3dc98 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563322c3dc80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563322c3dc60 <col:3> 'void ()' Function 0x563322be2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563322c3dd50 <line:728:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x563322c3dcb8 <col:3> 'int' lvalue Var 0x563322c3b590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x563322c3dd30 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x563322c3dd18 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563322c3dcd8 <col:22> 'int' lvalue Var 0x563322c3b590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x563322c3dcf8 <col:41> 'int' 1
|   |-CallExpr 0x563322c3dda8 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563322c3dd90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563322c3dd70 <col:3> 'void ()' Function 0x563322be2410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x563322c3de58 <line:730:3, col:36>
|     `-CallExpr 0x563322c3de38 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x563322c3de20 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x563322c3ddc8 <col:10> 'void *(void)' Function 0x563322be1e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x563322c3e028 prev 0x563322c3b0b8 <line:732:1, line:751:1> line:732:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x563322c3df90 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x563322c3f260 <line:733:1, line:751:1>
|   |-CallExpr 0x563322c3e108 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563322c3e0f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563322c3e0d0 <col:3> 'void ()' Function 0x563322be2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563322c3e180 <line:735:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563322c3e128 <col:3> 'int' lvalue Var 0x563322c3b6b0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x563322c3e168 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563322c3e148 <col:25> 'int' lvalue Var 0x563322c3b9e0 'x' 'int'
|   |-CallExpr 0x563322c3e1d8 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563322c3e1c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563322c3e1a0 <col:3> 'void ()' Function 0x563322be2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563322c3e230 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563322c3e218 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563322c3e1f8 <col:3> 'void ()' Function 0x563322be2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563322c3e290 <line:738:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x563322c3e250 <col:3> 'int' lvalue Var 0x563322c3bb00 'y' 'int'
|   | `-IntegerLiteral 0x563322c3e270 <col:7> 'int' 1
|   |-CallExpr 0x563322c3e2e8 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563322c3e2d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563322c3e2b0 <col:3> 'void ()' Function 0x563322be2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563322c3e340 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563322c3e328 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563322c3e308 <col:3> 'void ()' Function 0x563322be2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563322c3e628 <line:741:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x563322c3e360 <col:3> 'int' lvalue Var 0x563322c3bc20 'z' 'int'
|   | `-ConditionalOperator 0x563322c3e5f8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x563322c3e420 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x563322c3e3d8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x563322c3e3c0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x563322c3e380 <col:7> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x563322c3e408 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x563322c3e3f0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x563322c3e3a0 <col:25> '_Bool' lvalue Var 0x563322c3bea0 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x563322c3e5e0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563322c3e440 <col:42> 'int' lvalue Var 0x563322c3c2c8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x563322c3e5c0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x563322c3e590 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x563322c3e500 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563322c3e4b8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563322c3e4a0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563322c3e460 <col:55> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563322c3e4e8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563322c3e4d0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563322c3e480 <col:73> '_Bool' lvalue Var 0x563322c3c0d8 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x563322c3e560 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563322c3e520 <col:90> 'int' lvalue Var 0x563322c3c3c0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x563322c3e578 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563322c3e540 <col:102> 'int' lvalue Var 0x563322c3bc20 'z' 'int'
|   |-BinaryOperator 0x563322c3e830 <line:742:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563322c3e648 <col:3> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563322c3e818 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563322c3e7e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563322c3e708 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563322c3e6c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563322c3e6a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563322c3e668 <col:20> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563322c3e6f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563322c3e6d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563322c3e688 <col:38> '_Bool' lvalue Var 0x563322c3bea0 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563322c3e7a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563322c3e758 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563322c3e728 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563322c3e7d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563322c3e7b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563322c3e780 <col:66> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563322c3eb18 <line:743:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563322c3e850 <col:3> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563322c3eb00 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563322c3ead0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563322c3e9f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563322c3e910 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563322c3e8c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563322c3e8b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563322c3e870 <col:20> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563322c3e8f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563322c3e8e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563322c3e890 <col:38> '_Bool' lvalue Var 0x563322c3bea0 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x563322c3e9d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563322c3e988 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563322c3e970 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563322c3e930 <col:56> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563322c3e9b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563322c3e9a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563322c3e950 <col:74> '_Bool' lvalue Var 0x563322c3c0d8 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563322c3ea88 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563322c3ea40 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563322c3ea10 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563322c3eab8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563322c3eaa0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563322c3ea68 <col:102> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x563322c3ed20 <line:744:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563322c3eb38 <col:3> '_Bool' lvalue Var 0x563322c3bea0 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563322c3ed08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563322c3ecd8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563322c3ebf8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563322c3ebb0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563322c3eb98 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563322c3eb58 <col:20> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563322c3ebe0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563322c3ebc8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563322c3eb78 <col:38> '_Bool' lvalue Var 0x563322c3bea0 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563322c3ec90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563322c3ec48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563322c3ec18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563322c3ecc0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563322c3eca8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563322c3ec70 <col:66> '_Bool' lvalue Var 0x563322c3bea0 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x563322c3f018 <line:745:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563322c3ed40 <col:3> '_Bool' lvalue Var 0x563322c3c0d8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563322c3f000 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563322c3efd0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563322c3eee0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563322c3ee00 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563322c3edb8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563322c3eda0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563322c3ed60 <col:20> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563322c3ede8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563322c3edd0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563322c3ed80 <col:38> '_Bool' lvalue Var 0x563322c3bea0 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x563322c3eec0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563322c3ee78 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563322c3ee60 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563322c3ee20 <col:56> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563322c3eea8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563322c3ee90 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563322c3ee40 <col:74> '_Bool' lvalue Var 0x563322c3c0d8 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563322c3ef78 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563322c3ef30 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563322c3ef00 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563322c3efb8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563322c3efa0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563322c3ef58 <col:102> '_Bool' lvalue Var 0x563322c3c0d8 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x563322c3f070 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563322c3f058 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563322c3f038 <col:3> 'void ()' Function 0x563322be2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563322c3f0c8 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563322c3f0b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563322c3f090 <col:3> 'void ()' Function 0x563322be2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563322c3f180 <line:748:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x563322c3f0e8 <col:3> 'int' lvalue Var 0x563322c3b590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x563322c3f160 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x563322c3f148 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563322c3f108 <col:22> 'int' lvalue Var 0x563322c3b590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x563322c3f128 <col:41> 'int' 1
|   |-CallExpr 0x563322c3f1d8 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563322c3f1c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563322c3f1a0 <col:3> 'void ()' Function 0x563322be2410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x563322c3f250 <line:750:3, col:36>
|     `-CallExpr 0x563322c3f230 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x563322c3f218 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x563322c3f1f8 <col:10> 'void *(void)' Function 0x563322be1e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x563322c3f3a8 prev 0x563322c3b210 <line:752:1, line:771:1> line:752:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x563322c3f310 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x563322c405e8 <line:753:1, line:771:1>
|   |-CallExpr 0x563322c3f488 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563322c3f470 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563322c3f450 <col:3> 'void ()' Function 0x563322be2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563322c3f500 <line:755:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563322c3f4a8 <col:3> 'int' lvalue Var 0x563322c3b7d0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x563322c3f4e8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563322c3f4c8 <col:25> 'int' lvalue Var 0x563322c3bb00 'y' 'int'
|   |-CallExpr 0x563322c3f558 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563322c3f540 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563322c3f520 <col:3> 'void ()' Function 0x563322be2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563322c3f5b0 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563322c3f598 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563322c3f578 <col:3> 'void ()' Function 0x563322be2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563322c3f610 <line:758:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x563322c3f5d0 <col:3> 'int' lvalue Var 0x563322c3bc20 'z' 'int'
|   | `-IntegerLiteral 0x563322c3f5f0 <col:7> 'int' 1
|   |-CallExpr 0x563322c3f668 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563322c3f650 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563322c3f630 <col:3> 'void ()' Function 0x563322be2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563322c3f6c0 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563322c3f6a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563322c3f688 <col:3> 'void ()' Function 0x563322be2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563322c3f9a8 <line:761:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x563322c3f6e0 <col:3> 'int' lvalue Var 0x563322c3bc20 'z' 'int'
|   | `-ConditionalOperator 0x563322c3f978 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x563322c3f7a0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x563322c3f758 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x563322c3f740 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x563322c3f700 <col:7> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x563322c3f788 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x563322c3f770 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x563322c3f720 <col:25> '_Bool' lvalue Var 0x563322c3bf70 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x563322c3f960 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563322c3f7c0 <col:42> 'int' lvalue Var 0x563322c3c2c8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x563322c3f940 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x563322c3f910 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x563322c3f880 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563322c3f838 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563322c3f820 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563322c3f7e0 <col:55> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563322c3f868 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563322c3f850 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563322c3f800 <col:73> '_Bool' lvalue Var 0x563322c3c150 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x563322c3f8e0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563322c3f8a0 <col:90> 'int' lvalue Var 0x563322c3c3c0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x563322c3f8f8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563322c3f8c0 <col:102> 'int' lvalue Var 0x563322c3bc20 'z' 'int'
|   |-BinaryOperator 0x563322c3fbb0 <line:762:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563322c3f9c8 <col:3> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563322c3fb98 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563322c3fb68 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563322c3fa88 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563322c3fa40 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563322c3fa28 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563322c3f9e8 <col:20> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563322c3fa70 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563322c3fa58 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563322c3fa08 <col:38> '_Bool' lvalue Var 0x563322c3bf70 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x563322c3fb20 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563322c3fad8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563322c3faa8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563322c3fb50 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563322c3fb38 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563322c3fb00 <col:66> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563322c3fe98 <line:763:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563322c3fbd0 <col:3> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563322c3fe80 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563322c3fe50 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563322c3fd70 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563322c3fc90 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563322c3fc48 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563322c3fc30 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563322c3fbf0 <col:20> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563322c3fc78 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563322c3fc60 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563322c3fc10 <col:38> '_Bool' lvalue Var 0x563322c3bf70 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x563322c3fd50 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563322c3fd08 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563322c3fcf0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563322c3fcb0 <col:56> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563322c3fd38 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563322c3fd20 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563322c3fcd0 <col:74> '_Bool' lvalue Var 0x563322c3c150 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x563322c3fe08 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563322c3fdc0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563322c3fd90 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563322c3fe38 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563322c3fe20 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563322c3fde8 <col:102> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x563322c400b8 <line:764:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563322c3feb8 <col:3> '_Bool' lvalue Var 0x563322c3bf70 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x563322c400a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563322c40070 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563322c3ff78 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563322c3ff30 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563322c3ff18 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563322c3fed8 <col:20> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563322c3ff60 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563322c3ff48 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563322c3fef8 <col:38> '_Bool' lvalue Var 0x563322c3bf70 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x563322c40028 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563322c3ffe0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563322c3ffb0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563322c40058 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563322c40040 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563322c40008 <col:66> '_Bool' lvalue Var 0x563322c3bf70 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x563322c403a0 <line:765:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563322c400d8 <col:3> '_Bool' lvalue Var 0x563322c3c150 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x563322c40388 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563322c40358 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563322c40278 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563322c40198 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563322c40150 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563322c40138 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563322c400f8 <col:20> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563322c40180 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563322c40168 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563322c40118 <col:38> '_Bool' lvalue Var 0x563322c3bf70 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x563322c40258 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563322c40210 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563322c401f8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563322c401b8 <col:56> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563322c40240 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563322c40228 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563322c401d8 <col:74> '_Bool' lvalue Var 0x563322c3c150 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x563322c40310 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563322c402c8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563322c40298 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563322c40340 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563322c40328 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563322c402f0 <col:102> '_Bool' lvalue Var 0x563322c3c150 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x563322c403f8 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563322c403e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563322c403c0 <col:3> 'void ()' Function 0x563322be2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563322c40450 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563322c40438 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563322c40418 <col:3> 'void ()' Function 0x563322be2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563322c40508 <line:768:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x563322c40470 <col:3> 'int' lvalue Var 0x563322c3b590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x563322c404e8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x563322c404d0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563322c40490 <col:22> 'int' lvalue Var 0x563322c3b590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x563322c404b0 <col:41> 'int' 1
|   |-CallExpr 0x563322c40560 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563322c40548 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563322c40528 <col:3> 'void ()' Function 0x563322be2410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x563322c405d8 <line:770:3, col:36>
|     `-CallExpr 0x563322c405b8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x563322c405a0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x563322c40580 <col:10> 'void *(void)' Function 0x563322be1e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x563322c406a0 prev 0x563322c3b2d8 <line:772:1, line:774:1> line:772:6 fence 'void ()'
| `-CompoundStmt 0x563322c40740 <line:773:1, line:774:1>
|-FunctionDecl 0x563322c40770 prev 0x563322c3b398 <line:775:1, line:777:1> line:775:6 isync 'void ()'
| `-CompoundStmt 0x563322c40810 <line:776:1, line:777:1>
|-FunctionDecl 0x563322c40840 prev 0x563322c3b458 <line:778:1, line:780:1> line:778:6 lwfence 'void ()'
| `-CompoundStmt 0x563322c408e0 <line:779:1, line:780:1>
`-FunctionDecl 0x563322c40948 <line:781:1, line:818:1> line:781:5 main 'int ()'
  `-CompoundStmt 0x563322c45000 <line:782:1, line:818:1>
    |-DeclStmt 0x563322c40a60 <line:783:3, col:18>
    | `-VarDecl 0x563322c409f8 <col:3, col:13> col:13 used t1972 'pthread_t':'unsigned long'
    |-CallExpr 0x563322c40c68 <line:784:3, col:54> 'int'
    | |-ImplicitCastExpr 0x563322c40c50 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563322c40a78 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x563322c228f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x563322c40ab8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x563322c40a98 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x563322c409f8 't1972' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x563322c40ca8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x563322c40b30 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x563322c40b08 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x563322c40ad0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x563322c40cc0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563322c40b50 <col:39> 'void *(void *)' Function 0x563322c3c640 'P0' 'void *(void *)'
    | `-ParenExpr 0x563322c40bd0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x563322c40ba8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x563322c40b70 <col:52> 'int' 0
    |-DeclStmt 0x563322c40d50 <line:785:3, col:18>
    | `-VarDecl 0x563322c40ce8 <col:3, col:13> col:13 used t1973 'pthread_t':'unsigned long'
    |-CallExpr 0x563322c40ef8 <line:786:3, col:54> 'int'
    | |-ImplicitCastExpr 0x563322c40ee0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563322c40d68 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x563322c228f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x563322c40da8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x563322c40d88 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x563322c40ce8 't1973' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x563322c40f38 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x563322c40e20 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x563322c40df8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x563322c40dc0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x563322c40f50 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563322c40e40 <col:39> 'void *(void *)' Function 0x563322c3e028 'P1' 'void *(void *)'
    | `-ParenExpr 0x563322c40ec0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x563322c40e98 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x563322c40e60 <col:52> 'int' 0
    |-DeclStmt 0x563322c41028 <line:787:3, col:18>
    | `-VarDecl 0x563322c40fc0 <col:3, col:13> col:13 used t1974 'pthread_t':'unsigned long'
    |-CallExpr 0x563322c411d0 <line:788:3, col:54> 'int'
    | |-ImplicitCastExpr 0x563322c411b8 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563322c41040 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x563322c228f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x563322c41080 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x563322c41060 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x563322c40fc0 't1974' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x563322c41210 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x563322c410f8 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x563322c410d0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x563322c41098 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x563322c41228 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563322c41118 <col:39> 'void *(void *)' Function 0x563322c3f3a8 'P2' 'void *(void *)'
    | `-ParenExpr 0x563322c41198 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x563322c41170 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x563322c41138 <col:52> 'int' 0
    |-CallExpr 0x563322c41278 <line:789:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563322c41260 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563322c41240 <col:3> 'void ()' Function 0x563322be2350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563322c41348 <line:790:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x563322c41298 <col:3> '_Bool' lvalue Var 0x563322c3b868 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x563322c41330 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x563322c41310 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x563322c412f8 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x563322c412b8 <col:21> 'int' lvalue Var 0x563322c3b590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x563322c412d8 <col:41> 'int' 3
    |-CallExpr 0x563322c413a0 <line:791:3, col:25> 'void'
    | `-ImplicitCastExpr 0x563322c41388 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563322c41368 <col:3> 'void ()' Function 0x563322be2410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563322c41418 <line:792:3, col:36> 'void'
    | |-ImplicitCastExpr 0x563322c41400 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563322c413c0 <col:3> 'void (int)' Function 0x563322be1ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x563322c41458 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x563322c41440 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x563322c413e0 <col:21> '_Bool' lvalue Var 0x563322c3b868 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x563322c414a8 <line:793:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563322c41490 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563322c41470 <col:3> 'void ()' Function 0x563322be2350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563322c41790 <line:794:3, col:103> 'int' '='
    | |-DeclRefExpr 0x563322c414c8 <col:3> 'int' lvalue Var 0x563322c3bc20 'z' 'int'
    | `-ConditionalOperator 0x563322c41760 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x563322c41588 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x563322c41540 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x563322c41528 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x563322c414e8 <col:7> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x563322c41570 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x563322c41558 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x563322c41508 <col:25> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x563322c41748 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x563322c415a8 <col:42> 'int' lvalue Var 0x563322c3c2c8 'z$w_buff0' 'int'
    |   `-ParenExpr 0x563322c41728 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x563322c416f8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x563322c41668 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x563322c41620 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x563322c41608 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x563322c415c8 <col:55> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x563322c41650 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x563322c41638 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x563322c415e8 <col:73> '_Bool' lvalue Var 0x563322c3bfe8 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x563322c416c8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x563322c41688 <col:90> 'int' lvalue Var 0x563322c3c3c0 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x563322c416e0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x563322c416a8 <col:102> 'int' lvalue Var 0x563322c3bc20 'z' 'int'
    |-BinaryOperator 0x563322c41998 <line:795:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x563322c417b0 <col:3> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x563322c41980 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563322c41950 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x563322c41870 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x563322c41828 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x563322c41810 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x563322c417d0 <col:20> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x563322c41858 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x563322c41840 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x563322c417f0 <col:38> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563322c41908 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563322c418c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563322c41890 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x563322c41938 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563322c41920 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563322c418e8 <col:66> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x563322c41c80 <line:796:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x563322c419b8 <col:3> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x563322c41c68 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563322c41c38 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x563322c41b58 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x563322c41a78 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x563322c41a30 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x563322c41a18 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x563322c419d8 <col:20> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x563322c41a60 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x563322c41a48 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x563322c419f8 <col:38> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x563322c41b38 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x563322c41af0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x563322c41ad8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x563322c41a98 <col:56> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x563322c41b20 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x563322c41b08 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x563322c41ab8 <col:74> '_Bool' lvalue Var 0x563322c3bfe8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563322c41bf0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563322c41ba8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563322c41b78 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x563322c41c20 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563322c41c08 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563322c41bd0 <col:102> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x563322c41e88 <line:797:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x563322c41ca0 <col:3> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x563322c41e70 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563322c41e40 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x563322c41d60 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x563322c41d18 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x563322c41d00 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x563322c41cc0 <col:20> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x563322c41d48 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x563322c41d30 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x563322c41ce0 <col:38> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563322c41df8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563322c41db0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563322c41d80 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x563322c41e28 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563322c41e10 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563322c41dd8 <col:66> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x563322c42198 <line:798:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x563322c41ea8 <col:3> '_Bool' lvalue Var 0x563322c3bfe8 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x563322c42180 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563322c42150 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x563322c42070 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x563322c41f68 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x563322c41f20 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x563322c41f08 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x563322c41ec8 <col:20> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x563322c41f50 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x563322c41f38 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x563322c41ee8 <col:38> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x563322c42050 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x563322c42008 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x563322c41ff0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x563322c41f88 <col:56> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x563322c42038 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x563322c42020 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x563322c41fd0 <col:74> '_Bool' lvalue Var 0x563322c3bfe8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563322c42108 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563322c420c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563322c42090 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x563322c42138 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563322c42120 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563322c420e8 <col:102> '_Bool' lvalue Var 0x563322c3bfe8 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x563322c421f0 <line:799:3, col:25> 'void'
    | `-ImplicitCastExpr 0x563322c421d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563322c421b8 <col:3> 'void ()' Function 0x563322be2410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563322c42248 <line:800:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563322c42230 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563322c42210 <col:3> 'void ()' Function 0x563322be2350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563322c422f8 <line:801:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x563322c42268 <col:3> '_Bool' lvalue Var 0x563322c3c4b0 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x563322c422e0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x563322c422c0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x563322c422a8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x563322c42288 <col:19> 'void *(void)' Function 0x563322be1e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x563322c423a8 <line:802:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x563322c42318 <col:3> '_Bool' lvalue Var 0x563322c3c528 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x563322c42390 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x563322c42370 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x563322c42358 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x563322c42338 <col:19> 'void *(void)' Function 0x563322be1e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x563322c42420 <line:803:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x563322c423c8 <col:3> '_Bool' lvalue Var 0x563322c3bcb8 'z$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x563322c42408 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x563322c423e8 <col:21> '_Bool' lvalue Var 0x563322c3c528 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x563322c42498 <line:804:3, col:15> 'int' '='
    | |-DeclRefExpr 0x563322c42440 <col:3> 'int' lvalue Var 0x563322c3bd38 'z$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x563322c42480 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x563322c42460 <col:15> 'int' lvalue Var 0x563322c3bc20 'z' 'int'
    |-BinaryOperator 0x563322c428d0 <line:805:3, col:162> 'int' '='
    | |-DeclRefExpr 0x563322c424b8 <col:3> 'int' lvalue Var 0x563322c3bc20 'z' 'int'
    | `-ConditionalOperator 0x563322c428a0 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x563322c426c8 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x563322c425e8 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x563322c42510 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x563322c424f8 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x563322c424d8 <col:8> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x563322c425c8 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x563322c42560 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x563322c42548 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x563322c42528 <col:27> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x563322c425b0 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x563322c42598 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x563322c42578 <col:46> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x563322c426a8 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x563322c42640 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x563322c42628 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x563322c42608 <col:65> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x563322c42690 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x563322c42678 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x563322c42658 <col:84> '_Bool' lvalue Var 0x563322c3bfe8 'z$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x563322c42888 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x563322c426e8 <col:101> 'int' lvalue Var 0x563322c3bc20 'z' 'int'
    |   `-ParenExpr 0x563322c42868 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x563322c42838 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x563322c427a8 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x563322c42760 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x563322c42748 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x563322c42708 <col:106> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x563322c42790 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x563322c42778 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x563322c42728 <col:124> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x563322c42808 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x563322c427c8 <col:141> 'int' lvalue Var 0x563322c3c2c8 'z$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x563322c42820 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x563322c427e8 <col:153> 'int' lvalue Var 0x563322c3c3c0 'z$w_buff1' 'int'
    |-BinaryOperator 0x563322c42de0 <line:806:3, col:208> 'int' '='
    | |-DeclRefExpr 0x563322c428f0 <col:3> 'int' lvalue Var 0x563322c3c2c8 'z$w_buff0' 'int'
    | `-ConditionalOperator 0x563322c42db0 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x563322c42d80 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x563322c42d68 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x563322c42910 <col:15> '_Bool' lvalue Var 0x563322c3c528 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x563322c42d98 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x563322c42930 <col:31> 'int' lvalue Var 0x563322c3c2c8 'z$w_buff0' 'int'
    |   `-ParenExpr 0x563322c42d48 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x563322c42d18 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x563322c42b40 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x563322c42a60 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x563322c42988 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x563322c42970 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x563322c42950 <col:45> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x563322c42a40 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x563322c429d8 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x563322c429c0 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x563322c429a0 <col:64> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x563322c42a28 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x563322c42a10 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x563322c429f0 <col:83> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x563322c42b20 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x563322c42ab8 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x563322c42aa0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x563322c42a80 <col:102> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x563322c42b08 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x563322c42af0 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x563322c42ad0 <col:121> '_Bool' lvalue Var 0x563322c3bfe8 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x563322c42d00 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x563322c42b60 <col:138> 'int' lvalue Var 0x563322c3c2c8 'z$w_buff0' 'int'
    |       `-ParenExpr 0x563322c42ce0 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x563322c42cb0 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x563322c42c20 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x563322c42bd8 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x563322c42bc0 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x563322c42b80 <col:151> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x563322c42c08 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x563322c42bf0 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x563322c42ba0 <col:169> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x563322c42c80 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x563322c42c40 <col:186> 'int' lvalue Var 0x563322c3c2c8 'z$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x563322c42c98 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x563322c42c60 <col:198> 'int' lvalue Var 0x563322c3c2c8 'z$w_buff0' 'int'
    |-BinaryOperator 0x563322c43308 <line:807:3, col:208> 'int' '='
    | |-DeclRefExpr 0x563322c42e00 <col:3> 'int' lvalue Var 0x563322c3c3c0 'z$w_buff1' 'int'
    | `-ConditionalOperator 0x563322c432d8 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x563322c432a8 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x563322c43290 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x563322c42e20 <col:15> '_Bool' lvalue Var 0x563322c3c528 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x563322c432c0 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x563322c42e40 <col:31> 'int' lvalue Var 0x563322c3c3c0 'z$w_buff1' 'int'
    |   `-ParenExpr 0x563322c43270 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x563322c43240 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x563322c43068 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x563322c42f70 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x563322c42e98 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x563322c42e80 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x563322c42e60 <col:45> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x563322c42f50 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x563322c42ee8 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x563322c42ed0 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x563322c42eb0 <col:64> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x563322c42f38 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x563322c42f20 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x563322c42f00 <col:83> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x563322c43048 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x563322c42fe0 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x563322c42fb0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x563322c42f90 <col:102> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x563322c43030 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x563322c43018 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x563322c42ff8 <col:121> '_Bool' lvalue Var 0x563322c3bfe8 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x563322c43228 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x563322c43088 <col:138> 'int' lvalue Var 0x563322c3c3c0 'z$w_buff1' 'int'
    |       `-ParenExpr 0x563322c43208 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x563322c431d8 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x563322c43148 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x563322c43100 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x563322c430e8 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x563322c430a8 <col:151> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x563322c43130 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x563322c43118 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x563322c430c8 <col:169> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x563322c431a8 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x563322c43168 <col:186> 'int' lvalue Var 0x563322c3c3c0 'z$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x563322c431c0 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x563322c43188 <col:198> 'int' lvalue Var 0x563322c3c3c0 'z$w_buff1' 'int'
    |-BinaryOperator 0x563322c438b0 <line:808:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x563322c43328 <col:3> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x563322c43898 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563322c43868 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x563322c43820 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x563322c43808 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x563322c43348 <col:20> '_Bool' lvalue Var 0x563322c3c528 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x563322c43850 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x563322c43838 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x563322c43368 <col:36> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x563322c437e8 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x563322c437b8 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x563322c43578 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x563322c43498 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x563322c433c0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x563322c433a8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x563322c43388 <col:55> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x563322c43478 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x563322c43410 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x563322c433f8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x563322c433d8 <col:74> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x563322c43460 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x563322c43448 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x563322c43428 <col:93> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x563322c43558 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x563322c434f0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x563322c434d8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x563322c434b8 <col:112> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x563322c43540 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x563322c43528 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x563322c43508 <col:131> '_Bool' lvalue Var 0x563322c3bfe8 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x563322c437a0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x563322c43788 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x563322c43598 <col:148> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x563322c43768 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x563322c43738 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x563322c43658 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x563322c43610 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x563322c435f8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x563322c435b8 <col:166> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x563322c43640 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x563322c43628 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x563322c435d8 <col:184> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x563322c436f0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x563322c436a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x563322c43678 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x563322c43720 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x563322c43708 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x563322c436d0 <col:212> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x563322c43e78 <line:809:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x563322c438d0 <col:3> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x563322c43e60 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563322c43e30 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x563322c43de8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x563322c43dd0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x563322c438f0 <col:20> '_Bool' lvalue Var 0x563322c3c528 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x563322c43e18 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x563322c43e00 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x563322c43910 <col:36> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x563322c43db0 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x563322c43d80 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x563322c43b20 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x563322c43a40 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x563322c43968 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x563322c43950 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x563322c43930 <col:55> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x563322c43a20 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x563322c439b8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x563322c439a0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x563322c43980 <col:74> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x563322c43a08 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x563322c439f0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x563322c439d0 <col:93> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x563322c43b00 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x563322c43a98 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x563322c43a80 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x563322c43a60 <col:112> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x563322c43ae8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x563322c43ad0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x563322c43ab0 <col:131> '_Bool' lvalue Var 0x563322c3bfe8 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x563322c43d68 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x563322c43d50 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x563322c43b40 <col:148> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x563322c43d30 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x563322c43d00 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x563322c43c00 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x563322c43bb8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x563322c43ba0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x563322c43b60 <col:166> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x563322c43be8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x563322c43bd0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x563322c43b80 <col:184> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x563322c43cd0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x563322c43c50 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x563322c43c20 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x563322c43ce8 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x563322c43ca8 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x563322c43c78 <col:219> 'int' 0
    |-BinaryOperator 0x563322c44440 <line:810:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x563322c43e98 <col:3> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x563322c44428 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563322c443f8 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x563322c443b0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x563322c44398 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x563322c43eb8 <col:20> '_Bool' lvalue Var 0x563322c3c528 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x563322c443e0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x563322c443c8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x563322c43ed8 <col:36> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x563322c44378 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x563322c44348 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x563322c44108 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x563322c44028 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x563322c43f30 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x563322c43f18 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x563322c43ef8 <col:55> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x563322c44008 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x563322c43f80 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x563322c43f68 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x563322c43f48 <col:74> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x563322c43ff0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x563322c43fb8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x563322c43f98 <col:93> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x563322c440e8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x563322c44080 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x563322c44068 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x563322c44048 <col:112> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x563322c440d0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x563322c440b8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x563322c44098 <col:131> '_Bool' lvalue Var 0x563322c3bfe8 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x563322c44330 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x563322c44318 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x563322c44128 <col:148> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x563322c442f8 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x563322c442c8 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x563322c441e8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x563322c441a0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x563322c44188 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x563322c44148 <col:166> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x563322c441d0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x563322c441b8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x563322c44168 <col:184> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x563322c44280 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x563322c44238 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x563322c44208 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x563322c442b0 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x563322c44298 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x563322c44260 <col:212> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x563322c44a08 <line:811:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x563322c44460 <col:3> '_Bool' lvalue Var 0x563322c3bfe8 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x563322c449f0 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563322c449c0 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x563322c44978 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x563322c44960 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x563322c44480 <col:20> '_Bool' lvalue Var 0x563322c3c528 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x563322c449a8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x563322c44990 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x563322c444a0 <col:36> '_Bool' lvalue Var 0x563322c3bfe8 'z$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x563322c44940 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x563322c44910 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x563322c446b0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x563322c445d0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x563322c444f8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x563322c444e0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x563322c444c0 <col:55> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x563322c445b0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x563322c44548 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x563322c44530 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x563322c44510 <col:74> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x563322c44598 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x563322c44580 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x563322c44560 <col:93> '_Bool' lvalue Var 0x563322c3c438 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x563322c44690 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x563322c44628 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x563322c44610 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x563322c445f0 <col:112> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x563322c44678 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x563322c44660 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x563322c44640 <col:131> '_Bool' lvalue Var 0x563322c3bfe8 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x563322c448f8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x563322c448e0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x563322c446d0 <col:148> '_Bool' lvalue Var 0x563322c3bfe8 'z$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x563322c448c0 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x563322c44890 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x563322c44790 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x563322c44748 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x563322c44730 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x563322c446f0 <col:166> '_Bool' lvalue Var 0x563322c3c340 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x563322c44778 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x563322c44760 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x563322c44710 <col:184> '_Bool' lvalue Var 0x563322c3bdb0 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x563322c44860 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x563322c447e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x563322c447b0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x563322c44878 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x563322c44838 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x563322c44808 <col:219> 'int' 0
    |-BinaryOperator 0x563322c44c40 <line:812:3, col:85> '_Bool' '='
    | |-DeclRefExpr 0x563322c44a28 <col:3> '_Bool' lvalue Var 0x563322c3b8e0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x563322c44c28 <col:21, col:85> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x563322c44c10 <col:21, col:85> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x563322c44bf0 <col:22, col:85> 'int'
    |       `-BinaryOperator 0x563322c44bd0 <col:23, col:84> 'int' '&&'
    |         |-BinaryOperator 0x563322c44b38 <col:23, col:56> 'int' '&&'
    |         | |-BinaryOperator 0x563322c44aa0 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x563322c44a88 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x563322c44a48 <col:23> 'int' lvalue Var 0x563322c3bc20 'z' 'int'
    |         | | `-IntegerLiteral 0x563322c44a68 <col:28> 'int' 2
    |         | `-BinaryOperator 0x563322c44b18 <col:33, col:56> 'int' '=='
    |         |   |-ImplicitCastExpr 0x563322c44b00 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x563322c44ac0 <col:33> 'int' lvalue Var 0x563322c3b6b0 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x563322c44ae0 <col:56> 'int' 1
    |         `-BinaryOperator 0x563322c44bb0 <col:61, col:84> 'int' '=='
    |           |-ImplicitCastExpr 0x563322c44b98 <col:61> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x563322c44b58 <col:61> 'int' lvalue Var 0x563322c3b7d0 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x563322c44b78 <col:84> 'int' 1
    |-BinaryOperator 0x563322c44d70 <line:813:3, col:37> 'int' '='
    | |-DeclRefExpr 0x563322c44c60 <col:3> 'int' lvalue Var 0x563322c3bc20 'z' 'int'
    | `-ConditionalOperator 0x563322c44d40 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x563322c44cf8 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x563322c44ce0 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x563322c44c80 <col:7> '_Bool' lvalue Var 0x563322c3bcb8 'z$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x563322c44d10 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x563322c44ca0 <col:25> 'int' lvalue Var 0x563322c3bd38 'z$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x563322c44d28 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x563322c44cc0 <col:37> 'int' lvalue Var 0x563322c3bc20 'z' 'int'
    |-BinaryOperator 0x563322c44e08 <line:814:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x563322c44d90 <col:3> '_Bool' lvalue Var 0x563322c3bcb8 'z$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x563322c44de0 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x563322c44db0 <col:28> 'int' 0
    |-CallExpr 0x563322c44e60 <line:815:3, col:25> 'void'
    | `-ImplicitCastExpr 0x563322c44e48 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563322c44e28 <col:3> 'void ()' Function 0x563322be2410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563322c44ed8 <line:816:3, col:36> 'void'
    | |-ImplicitCastExpr 0x563322c44ec0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563322c44e80 <col:3> 'void (int)' Function 0x563322be20d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x563322c44f18 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x563322c44f00 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x563322c44ea0 <col:21> '_Bool' lvalue Var 0x563322c3b8e0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x563322c44f50 <line:817:3, col:10>
      `-IntegerLiteral 0x563322c44f30 <col:10> 'int' 0
