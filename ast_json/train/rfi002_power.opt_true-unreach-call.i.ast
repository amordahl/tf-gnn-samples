TranslationUnitDecl 0x55bfb4a49f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55bfb4a4a848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55bfb4a4a520 '__int128'
|-TypedefDecl 0x55bfb4a4a8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55bfb4a4a540 'unsigned __int128'
|-TypedefDecl 0x55bfb4a4abc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55bfb4a4a990 'struct __NSConstantString_tag'
|   `-Record 0x55bfb4a4a910 '__NSConstantString_tag'
|-TypedefDecl 0x55bfb4a4ac68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55bfb4a4ac20 'char *'
|   `-BuiltinType 0x55bfb4a4a020 'char'
|-TypedefDecl 0x55bfb4a89b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55bfb4a4af00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55bfb4a4ad40 'struct __va_list_tag'
|     `-Record 0x55bfb4a4acc0 '__va_list_tag'
|-FunctionDecl 0x55bfb4a89c80 <pthread-wmm/rfi002_power.opt_true-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55bfb4a89e50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55bfb4a89d80 <col:31> col:34 'int'
|-FunctionDecl 0x55bfb4a89fc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55bfb4a8a0f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55bfb4a8a238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55bfb4a8a1a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55bfb4a8a468 <col:40, col:99>
|   |-IfStmt 0x55bfb4a8a438 <col:42, col:88>
|   | |-UnaryOperator 0x55bfb4a8a318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55bfb4a8a300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55bfb4a8a2e0 <col:47> 'int' lvalue ParmVar 0x55bfb4a8a1a8 'expression' 'int'
|   | `-CompoundStmt 0x55bfb4a8a420 <col:59, col:88>
|   |   `-LabelStmt 0x55bfb4a8a408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55bfb4a8a398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55bfb4a8a380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55bfb4a8a330 <col:68> 'void () __attribute__((noreturn))' Function 0x55bfb4a8a0f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55bfb4a8a450 <col:89>
|   `-ReturnStmt 0x55bfb4a8a458 <col:91>
|-FunctionDecl 0x55bfb4a8a4b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55bfb4a8a570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55bfb4a8a8f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55bfb4a8a628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55bfb4a8a6a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55bfb4a8a728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55bfb4a8a7a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55bfb4a8a9b0 <line:11:22>
|-FunctionDecl 0x55bfb4aaff10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55bfb4a8aa20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55bfb4a8aaa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55bfb4aafd40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55bfb4aafdc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55bfb4aaffd0 <line:14:22>
|-FunctionDecl 0x55bfb4ab0280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55bfb4ab0040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55bfb4ab00c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55bfb4ab0140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55bfb4ab0338 <line:16:22>
|-TypedefDecl 0x55bfb4ab03a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55bfb4a4a0e0 'unsigned char'
|-TypedefDecl 0x55bfb4ab0418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55bfb4a4a100 'unsigned short'
|-TypedefDecl 0x55bfb4ab0488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55bfb4a4a120 'unsigned int'
|-TypedefDecl 0x55bfb4ab04f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55bfb4a4a140 'unsigned long'
|-TypedefDecl 0x55bfb4ab0568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55bfb4a4a040 'signed char'
|-TypedefDecl 0x55bfb4ab05d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55bfb4a4a0e0 'unsigned char'
|-TypedefDecl 0x55bfb4ab0648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55bfb4a4a060 'short'
|-TypedefDecl 0x55bfb4ab06b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55bfb4a4a100 'unsigned short'
|-TypedefDecl 0x55bfb4ab0728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55bfb4a4a080 'int'
|-TypedefDecl 0x55bfb4ab0798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55bfb4a4a120 'unsigned int'
|-TypedefDecl 0x55bfb4ab0808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55bfb4a4a0a0 'long'
|-TypedefDecl 0x55bfb4ab0878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55bfb4a4a140 'unsigned long'
|-TypedefDecl 0x55bfb4ab08e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55bfb4a4a0a0 'long'
|-TypedefDecl 0x55bfb4ab0958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55bfb4a4a140 'unsigned long'
|-TypedefDecl 0x55bfb4ab09c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55bfb4a4a140 'unsigned long'
|-TypedefDecl 0x55bfb4ab0a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55bfb4a4a120 'unsigned int'
|-TypedefDecl 0x55bfb4ab0aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55bfb4a4a120 'unsigned int'
|-TypedefDecl 0x55bfb4ab0b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55bfb4a4a140 'unsigned long'
|-TypedefDecl 0x55bfb4ab0b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55bfb4a4a140 'unsigned long'
|-TypedefDecl 0x55bfb4ab0bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55bfb4a4a120 'unsigned int'
|-TypedefDecl 0x55bfb4ab0c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55bfb4a4a140 'unsigned long'
|-TypedefDecl 0x55bfb4ab0cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55bfb4a4a0a0 'long'
|-TypedefDecl 0x55bfb4ab0d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55bfb4a4a0a0 'long'
|-TypedefDecl 0x55bfb4ab0dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55bfb4a4a080 'int'
|-RecordDecl 0x55bfb4ab0e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55bfb4ab0f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55bfb4ab1030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55bfb4ab0fd0 'struct __fsid_t' sugar
|   `-RecordType 0x55bfb4ab0eb0 '__fsid_t'
|     `-Record 0x55bfb4ab0e30 ''
|-TypedefDecl 0x55bfb4ab10b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55bfb4a4a0a0 'long'
|-TypedefDecl 0x55bfb4ab1128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55bfb4a4a140 'unsigned long'
|-TypedefDecl 0x55bfb4ab1198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55bfb4a4a140 'unsigned long'
|-TypedefDecl 0x55bfb4ab1208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55bfb4a4a120 'unsigned int'
|-TypedefDecl 0x55bfb4ab1278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55bfb4a4a0a0 'long'
|-TypedefDecl 0x55bfb4ab12e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55bfb4a4a120 'unsigned int'
|-TypedefDecl 0x55bfb4ab1358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55bfb4a4a0a0 'long'
|-TypedefDecl 0x55bfb4ab13c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55bfb4a4a080 'int'
|-TypedefDecl 0x55bfb4ab1438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55bfb4a4a080 'int'
|-TypedefDecl 0x55bfb4ab14a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55bfb4a4a080 'int'
|-TypedefDecl 0x55bfb4ab1518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55bfb4a4a7a0 'void *'
|   `-BuiltinType 0x55bfb4a49fe0 'void'
|-TypedefDecl 0x55bfb4ab1588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55bfb4a4a0a0 'long'
|-TypedefDecl 0x55bfb4ab15f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55bfb4a4a0a0 'long'
|-TypedefDecl 0x55bfb4ab1668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55bfb4a4a0a0 'long'
|-TypedefDecl 0x55bfb4ab16d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55bfb4a4a140 'unsigned long'
|-TypedefDecl 0x55bfb4ab1748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55bfb4a4a140 'unsigned long'
|-TypedefDecl 0x55bfb4ab17b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55bfb4a4a140 'unsigned long'
|-TypedefDecl 0x55bfb4ab1828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55bfb4a4a140 'unsigned long'
|-TypedefDecl 0x55bfb4ab1898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55bfb4a4a0a0 'long'
|-TypedefDecl 0x55bfb4ab1908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55bfb4a4a0a0 'long'
|-TypedefDecl 0x55bfb4ab1978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55bfb4a4a0a0 'long'
|-TypedefDecl 0x55bfb4ab19e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55bfb4a4a140 'unsigned long'
|-TypedefDecl 0x55bfb4ab1a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55bfb4ab1a40 '__off64_t' sugar
|   |-Typedef 0x55bfb4ab0d68 '__off64_t'
|   `-BuiltinType 0x55bfb4a4a0a0 'long'
|-TypedefDecl 0x55bfb4ab1b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55bfb4ab1b30 '__quad_t *'
|   `-TypedefType 0x55bfb4ab1ad0 '__quad_t' sugar
|     |-Typedef 0x55bfb4ab08e8 '__quad_t'
|     `-BuiltinType 0x55bfb4a4a0a0 'long'
|-TypedefDecl 0x55bfb4ab1be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55bfb4a4ac20 'char *'
|   `-BuiltinType 0x55bfb4a4a020 'char'
|-TypedefDecl 0x55bfb4ab1c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55bfb4a4a0a0 'long'
|-TypedefDecl 0x55bfb4ab1cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55bfb4a4a120 'unsigned int'
|-FunctionDecl 0x55bfb4ab1e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55bfb4ab1d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55bfb4ab2148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55bfb4ab2138 <line:73:3, col:34>
|     `-CallExpr 0x55bfb4ab20f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55bfb4ab20e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55bfb4ab2070 <col:10> '<builtin fn type>' Function 0x55bfb4ab1ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55bfb4ab2120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55bfb4ab2090 <col:29> 'unsigned int' lvalue ParmVar 0x55bfb4ab1d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x55bfb4ab1ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55bfb4ab1f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55bfb4ab1ff0 <col:10> Implicit
| `-ConstAttr 0x55bfb4ab2048 <col:10> Implicit
|-FunctionDecl 0x55bfb4ab22a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55bfb4ab2198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55bfb4ab25b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55bfb4ab25a8 <line:78:3, col:34>
|     `-CallExpr 0x55bfb4ab2568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55bfb4ab2550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55bfb4ab24d8 <col:10> '<builtin fn type>' Function 0x55bfb4ab2348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55bfb4ab2590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55bfb4ab24f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55bfb4ab2198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55bfb4ab2348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55bfb4ab23e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55bfb4ab2458 <col:10> Implicit
| `-ConstAttr 0x55bfb4ab24b0 <col:10> Implicit
|-TypedefDecl 0x55bfb4ab25e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55bfb4a4a140 'unsigned long'
|-TypedefDecl 0x55bfb4ab2678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55bfb4ab2640 '__time_t' sugar
|   |-Typedef 0x55bfb4ab1278 '__time_t'
|   `-BuiltinType 0x55bfb4a4a0a0 'long'
|-RecordDecl 0x55bfb4ab26d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55bfb4ab2788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55bfb4ab2818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55bfb4ab28a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55bfb4ab2870 '__pid_t' sugar
|   |-Typedef 0x55bfb4ab0dd8 '__pid_t'
|   `-BuiltinType 0x55bfb4a4a080 'int'
|-RecordDecl 0x55bfb4ab2900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55bfb4ab29c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55bfb4ab2a10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55bfb4ab2ad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55bfb4ab2b38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55bfb4a4a140 'unsigned long'
|-RecordDecl 0x55bfb4ab2b90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55bfb4ab4e70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55bfb4ab4f20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55bfb4ab4ec0 'struct cpu_set_t' sugar
|   `-RecordType 0x55bfb4ab2c10 'cpu_set_t'
|     `-Record 0x55bfb4ab2b90 ''
|-FunctionDecl 0x55bfb4ab51f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55bfb4ab4fc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55bfb4ab50d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55bfb4ab52a8 <line:108:19>
|-FunctionDecl 0x55bfb4ab5480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55bfb4ab5310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55bfb4ab5528 <col:69>
|-FunctionDecl 0x55bfb4ab56a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55bfb4ab5590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55bfb4ab5748 <col:64>
|-FunctionDecl 0x55bfb4ab5a08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55bfb4ab57b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55bfb4ab58e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55bfb4ab5ab8 <line:114:22>
|-FunctionDecl 0x55bfb4ab5e60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55bfb4ab5b20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55bfb4ab5c18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55bfb4ab5f10 <col:88>
|-FunctionDecl 0x55bfb4ab61c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55bfb4ab5f78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55bfb4ab5ff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55bfb4ab6088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55bfb4ab6280 <col:62>
|-FunctionDecl 0x55bfb4ab63f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55bfb4ab62e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55bfb4ab64a0 <col:63>
|-FunctionDecl 0x55bfb4ab65c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55bfb4ab6668 <col:47>
|-FunctionDecl 0x55bfb4ab6770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55bfb4ab66d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55bfb4ab6818 <col:69>
|-FunctionDecl 0x55bfb4ab6920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55bfb4ab6888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55bfb4ab69c8 <col:69>
|-FunctionDecl 0x55bfb4ab6c88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55bfb4ab6a30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55bfb4ab6b68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55bfb4ab6d38 <col:88>
|-TypedefDecl 0x55bfb4ab6dc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55bfb4ab6d90 '__clock_t' sugar
|   |-Typedef 0x55bfb4ab10b8 '__clock_t'
|   `-BuiltinType 0x55bfb4a4a0a0 'long'
|-TypedefDecl 0x55bfb4ab77e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55bfb4ab6e20 '__clockid_t' sugar
|   |-Typedef 0x55bfb4ab14a8 '__clockid_t'
|   `-BuiltinType 0x55bfb4a4a080 'int'
|-TypedefDecl 0x55bfb4ab7878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55bfb4ab7840 '__timer_t' sugar
|   |-Typedef 0x55bfb4ab1518 '__timer_t'
|   `-PointerType 0x55bfb4a4a7a0 'void *'
|     `-BuiltinType 0x55bfb4a49fe0 'void'
|-RecordDecl 0x55bfb4ab78d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55bfb4ab7990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55bfb4ab79f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55bfb4ab7a60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55bfb4ab7ac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55bfb4ab7b30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55bfb4ab7b98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55bfb4ab7c00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55bfb4ab7c68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55bfb4ab7cd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55bfb4ab7d38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55bfb4ab7da0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55bfb4ab7df0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55bfb4ab7eb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55bfb4ab7f28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55bfb4ab7fd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55bfb4ab81a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55bfb4ab8240 <col:45>
|-FunctionDecl 0x55bfb4ab8420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55bfb4ab8310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55bfb4ab84c8 <col:54>
|-FunctionDecl 0x55bfb4ab86c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55bfb4ab8530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55bfb4ab85a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55bfb4ab8778 <line:158:22>
| `-ConstAttr 0x55bfb4ab9410 <col:63>
|-FunctionDecl 0x55bfb4ab9610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55bfb4ab9508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55bfb4ab96b8 <col:56>
|-FunctionDecl 0x55bfb4ab9a60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55bfb4ab9728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55bfb4ab97a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55bfb4ab9820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55bfb4ab9918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55bfb4ab9b20 <col:54>
|-RecordDecl 0x55bfb4ab9b78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55bfb4ab9c28 parent 0x55bfb4a49f88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55bfb4ab9e88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55bfb4ab9f28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55bfb4ab9f90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55bfb4ab9ff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55bfb4aba0e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55bfb4aba208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55bfb4aba1b0 'struct __locale_struct *'
|   `-ElaboratedType 0x55bfb4aba140 'struct __locale_struct' sugar
|     `-RecordType 0x55bfb4ab9c00 'struct __locale_struct'
|       `-Record 0x55bfb4ab9b78 '__locale_struct'
|-TypedefDecl 0x55bfb4aba2b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55bfb4aba280 '__locale_t' sugar
|   |-Typedef 0x55bfb4aba208 '__locale_t'
|   `-PointerType 0x55bfb4aba1b0 'struct __locale_struct *'
|     `-ElaboratedType 0x55bfb4aba140 'struct __locale_struct' sugar
|       `-RecordType 0x55bfb4ab9c00 'struct __locale_struct'
|         `-Record 0x55bfb4ab9b78 '__locale_struct'
|-FunctionDecl 0x55bfb4aba6b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55bfb4aba328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55bfb4aba3a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55bfb4aba438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55bfb4aba4c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55bfb4aba540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55bfb4aba778 <col:40>
|-FunctionDecl 0x55bfb4aba968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55bfb4aba840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55bfb4abaa10 <col:66>
|-FunctionDecl 0x55bfb4abab20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55bfb4abaa78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55bfb4ababc8 <col:69>
|-FunctionDecl 0x55bfb4abadf8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55bfb4abac30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55bfb4abacc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55bfb4abaea8 <col:52>
|-FunctionDecl 0x55bfb4abb050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55bfb4abaf10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55bfb4abafa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55bfb4abb100 <col:55>
|-FunctionDecl 0x55bfb4abb298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55bfb4abb180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55bfb4abb340 <col:62>
|-FunctionDecl 0x55bfb4abb578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55bfb4abb3a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55bfb4abb620 <col:60>
|-FunctionDecl 0x55bfb4abb848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55bfb4abb6a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55bfb4abb720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55bfb4abb8f8 <col:44>
|-FunctionDecl 0x55bfb4abbb08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55bfb4abb960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55bfb4abb9e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55bfb4abbbb8 <col:49>
|-VarDecl 0x55bfb4abbcb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55bfb4abbd38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55bfb4abbdb8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55bfb4abbe80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55bfb4abbfb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55bfb4abc050 <col:42>
|-VarDecl 0x55bfb4abc0c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55bfb4abc140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55bfb4abc2c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55bfb4abc1b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55bfb4abc370 <col:57>
|-FunctionDecl 0x55bfb4abd4f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55bfb4abc3f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55bfb4abd598 <col:56>
|-FunctionDecl 0x55bfb4abd6a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55bfb4abd618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55bfb4abd750 <col:59>
|-FunctionDecl 0x55bfb4abd858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55bfb4abd7c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55bfb4abd900 <col:48>
| `-ConstAttr 0x55bfb4abd958 <col:89>
|-FunctionDecl 0x55bfb4abdbb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55bfb4abda08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55bfb4abda98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55bfb4abde18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55bfb4abdca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55bfb4abdd38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55bfb4abdec8 <col:88>
|-FunctionDecl 0x55bfb4abe060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55bfb4abdf30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55bfb4abdfc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55bfb4abe110 <col:88>
|-FunctionDecl 0x55bfb4abe328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55bfb4abe178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55bfb4abe208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55bfb4abe3d8 <line:209:22>
|-FunctionDecl 0x55bfb4abe778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55bfb4abe440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55bfb4abe500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55bfb4abe590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55bfb4abe620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55bfb4abea78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55bfb4abe878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55bfb4abe950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55bfb4abeb28 <col:85>
|-FunctionDecl 0x55bfb4abef18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55bfb4abeb90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55bfb4abecc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55bfb4abedd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55bfb4abefd0 <col:52>
|-FunctionDecl 0x55bfb4abf148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55bfb4abf038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55bfb4abf1f0 <col:61>
|-FunctionDecl 0x55bfb4abf668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55bfb4abf258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55bfb4abf2d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55bfb4abf408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55bfb4abf510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55bfb4abf728 <col:62>
|-FunctionDecl 0x55bfb4abf948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55bfb4abf790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55bfb4abf820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55bfb4abf9f8 <line:222:22>
|-FunctionDecl 0x55bfb4abfaf8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55bfb4abfa60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55bfb4abfba0 <col:65>
|-TypedefDecl 0x55bfb4abfc10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55bfb4a4a140 'unsigned long'
|-RecordDecl 0x55bfb4abfc68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55bfb4abfdb0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55bfb4abfe18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55bfb4abfec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55bfb4abfe70 'union pthread_attr_t' sugar
|   `-RecordType 0x55bfb4abfcf0 'union pthread_attr_t'
|     `-Record 0x55bfb4abfc68 'pthread_attr_t'
|-RecordDecl 0x55bfb4abff20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55bfb4ac0098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55bfb4ac0110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55bfb4ac01c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55bfb4ac0160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55bfb4abffa0 'struct __pthread_internal_list'
|     `-Record 0x55bfb4abff20 '__pthread_internal_list'
|-RecordDecl 0x55bfb4ac0230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55bfb4ac02d8 parent 0x55bfb4a49f88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55bfb4ac03b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55bfb4ac0418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55bfb4ac0480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55bfb4ac4530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55bfb4ac4598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55bfb4ac4600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55bfb4ac4688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55bfb4ac4740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55bfb4ac4830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55bfb4ac4898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55bfb4ac4a20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55bfb4ac49c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55bfb4ac02b0 'pthread_mutex_t'
|     `-Record 0x55bfb4ac0230 ''
|-RecordDecl 0x55bfb4ac4a90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55bfb4ac4bd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55bfb4ac4c38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55bfb4ac4cf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55bfb4ac4c90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55bfb4ac4b10 'pthread_mutexattr_t'
|     `-Record 0x55bfb4ac4a90 ''
|-RecordDecl 0x55bfb4ac4d60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55bfb4ac4e08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55bfb4ac4ed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55bfb4ac4f38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55bfb4ac4fa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55bfb4ac5008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55bfb4ac5070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55bfb4ac50d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55bfb4ac5140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55bfb4ac51a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55bfb4ac5260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi002_power.opt_true-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/rfi002_power.opt_true-unreach-call.i:259:3)'
| |-FieldDecl 0x55bfb4ac5350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55bfb4ac53b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55bfb4ac5540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55bfb4ac5490 'union pthread_cond_t' sugar
|   `-RecordType 0x55bfb4ac4de0 'pthread_cond_t'
|     `-Record 0x55bfb4ac4d60 ''
|-RecordDecl 0x55bfb4ac55b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55bfb4ac56b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55bfb4ac5718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55bfb4ac57d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55bfb4ac5770 'union pthread_condattr_t' sugar
|   `-RecordType 0x55bfb4ac5630 'pthread_condattr_t'
|     `-Record 0x55bfb4ac55b0 ''
|-TypedefDecl 0x55bfb4ac5858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55bfb4a4a120 'unsigned int'
|-TypedefDecl 0x55bfb4ac58c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55bfb4a4a080 'int'
|-RecordDecl 0x55bfb4ac5920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55bfb4ac59c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55bfb4ac5a90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55bfb4ac5af8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55bfb4ac5b60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55bfb4ac5bc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55bfb4ac5c30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55bfb4ac5c98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55bfb4ac5d00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55bfb4ac5d68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55bfb4ac5dd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55bfb4ac5e38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55bfb4ac5ea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55bfb4ac5f50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi002_power.opt_true-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/rfi002_power.opt_true-unreach-call.i:282:3)'
| |-FieldDecl 0x55bfb4ac5ff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55bfb4ac6060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55bfb4ac61b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55bfb4ac6150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55bfb4ac59a0 'pthread_rwlock_t'
|     `-Record 0x55bfb4ac5920 ''
|-RecordDecl 0x55bfb4ac6220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55bfb4ac6360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55bfb4ac63c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55bfb4ac6480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55bfb4ac6420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55bfb4ac62a0 'pthread_rwlockattr_t'
|     `-Record 0x55bfb4ac6220 ''
|-TypedefDecl 0x55bfb4ac8560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55bfb4a4a084 'volatile int' volatile
|   `-BuiltinType 0x55bfb4a4a080 'int'
|-RecordDecl 0x55bfb4ac85b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55bfb4ac8700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55bfb4ac8768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55bfb4ac8820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55bfb4ac87c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55bfb4ac8640 'pthread_barrier_t'
|     `-Record 0x55bfb4ac85b8 ''
|-RecordDecl 0x55bfb4ac8890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55bfb4ac8990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55bfb4ac89f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55bfb4ac8ab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55bfb4ac8a50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55bfb4ac8910 'pthread_barrierattr_t'
|     `-Record 0x55bfb4ac8890 ''
|-TypedefDecl 0x55bfb4ac8bc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55bfb4ac8b60 'long [8]' 8 
|   `-BuiltinType 0x55bfb4a4a0a0 'long'
|-EnumDecl 0x55bfb4ac8c20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55bfb4ac8ce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55bfb4ac8d38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55bfb4ac8d88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55bfb4ac8e58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55bfb4ac8ea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55bfb4ac8ef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55bfb4ac8f48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55bfb4ac8fd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55bfb4ac8fb8 <col:26> 'int'
| |   `-DeclRefExpr 0x55bfb4ac8f98 <col:26> 'int' EnumConstant 0x55bfb4ac8e58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55bfb4ac9058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55bfb4ac9040 <col:29> 'int'
| |   `-DeclRefExpr 0x55bfb4ac9020 <col:29> 'int' EnumConstant 0x55bfb4ac8ea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55bfb4ac90e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55bfb4ac90c8 <col:30> 'int'
| |   `-DeclRefExpr 0x55bfb4ac90a8 <col:30> 'int' EnumConstant 0x55bfb4ac8ef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55bfb4ac9168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55bfb4ac9150 <col:27> 'int'
|     `-DeclRefExpr 0x55bfb4ac9130 <col:27> 'int' EnumConstant 0x55bfb4ac8fd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55bfb4ac91b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55bfb4ac9288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55bfb4ac9310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55bfb4ac92f8 <col:30> 'int'
| |   `-DeclRefExpr 0x55bfb4ac92d8 <col:30> 'int' EnumConstant 0x55bfb4ac9288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55bfb4ac9360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55bfb4ac93e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55bfb4ac93d0 <col:29> 'int'
|     `-DeclRefExpr 0x55bfb4ac93b0 <col:29> 'int' EnumConstant 0x55bfb4ac9360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55bfb4ac9438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55bfb4ac9508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55bfb4ac9570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55bfb4ac95c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55bfb4ac9610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55bfb4ac96d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55bfb4ac9728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55bfb4ac9778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55bfb4ac9800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55bfb4ac97e8 <col:31> 'int'
|     `-DeclRefExpr 0x55bfb4ac97c8 <col:31> 'int' EnumConstant 0x55bfb4ac96d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55bfb4ac9850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55bfb4ac9918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55bfb4ac9968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55bfb4ac99b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55bfb4ac9a88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55bfb4ac9ad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55bfb4ac9b28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55bfb4ac9bf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55bfb4ac9c48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55bfb4ac9c98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55bfb4ac9ed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55bfb4ac9f40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55bfb4ac9fa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55bfb4aca0c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55bfb4aca118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55bfb4aca1e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55bfb4aca238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55bfb4aca288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55bfb4aca358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55bfb4aca3a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55bfb4aca9d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55bfb4aca4a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55bfb4aca5c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55bfb4aca7c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55bfb4aca840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55bfb4acaa98 <col:47>
| |-NonNullAttr 0x55bfb4acaaf0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55bfb4acab28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55bfb4acac50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55bfb4acab80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55bfb4acaea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55bfb4acad08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55bfb4acad88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55bfb4acb078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55bfb4acaf68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55bfb4acb120 <col:60>
|-FunctionDecl 0x55bfb4acb270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55bfb4acb310 <col:54>
| `-ConstAttr 0x55bfb4acb368 <col:95>
|-FunctionDecl 0x55bfb4acbda0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55bfb4acb3a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55bfb4acb418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55bfb4acbe50 <line:395:19>
| `-ConstAttr 0x55bfb4acbea8 <col:60>
|-FunctionDecl 0x55bfb4acc078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55bfb4acbf40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55bfb4acc120 <col:71>
| `-NonNullAttr 0x55bfb4acc178 <col:112, col:126> 1
|-FunctionDecl 0x55bfb4acc280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55bfb4acc1c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55bfb4acc328 <line:398:22>
| `-NonNullAttr 0x55bfb4acc380 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4acc5a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55bfb4acc3c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55bfb4acc448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55bfb4acc658 <line:401:22>
| `-NonNullAttr 0x55bfb4acc6b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55bfb4acc8b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55bfb4acc6f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55bfb4acc778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55bfb4acc968 <line:404:22>
| `-NonNullAttr 0x55bfb4acc9c0 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4accc18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55bfb4acca08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55bfb4accab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55bfb4acccc8 <line:407:22>
| `-NonNullAttr 0x55bfb4accd20 <col:63, col:80> 1 2
|-FunctionDecl 0x55bfb4acdf78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55bfb4acddc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55bfb4acde38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55bfb4ace028 <line:410:22>
| `-NonNullAttr 0x55bfb4ace080 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4ace2b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55bfb4ace0c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55bfb4ace158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55bfb4ace368 <line:413:22>
| `-NonNullAttr 0x55bfb4ace3c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55bfb4ace5f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55bfb4ace408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55bfb4ace498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55bfb4ace6a8 <col:37>
| `-NonNullAttr 0x55bfb4ace700 <col:78, col:95> 1 2
|-FunctionDecl 0x55bfb4ace8e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bfb4ace748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55bfb4ace7c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55bfb4ace998 <line:419:22>
| `-NonNullAttr 0x55bfb4ace9f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55bfb4aceb78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55bfb4acea38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55bfb4aceab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55bfb4acec28 <line:421:22>
| `-NonNullAttr 0x55bfb4acec80 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4acfe58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bfb4acecc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55bfb4aced48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55bfb4acff08 <line:424:22>
| `-NonNullAttr 0x55bfb4acff60 <col:63, col:80> 1 2
|-FunctionDecl 0x55bfb4ad00e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55bfb4acffa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55bfb4ad0028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55bfb4ad0198 <line:427:22>
| `-NonNullAttr 0x55bfb4ad01f0 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4ad0398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bfb4ad0238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55bfb4ad02b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55bfb4ad0448 <line:430:22>
| `-NonNullAttr 0x55bfb4ad04a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55bfb4ad0628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55bfb4ad04e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55bfb4ad0568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55bfb4ad06d8 <line:432:22>
| `-NonNullAttr 0x55bfb4ad0730 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4ad0958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55bfb4ad0778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55bfb4ad07f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55bfb4ad0a08 <line:435:22>
| |-NonNullAttr 0x55bfb4ad0a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55bfb4ad0a98 <col:100> "" ""
|-FunctionDecl 0x55bfb4ad0ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55bfb4ad0ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55bfb4ad0b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55bfb4ad0d58 <line:438:22>
| |-NonNullAttr 0x55bfb4ad0db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x55bfb4ad0df8 <col:97> "" ""
|-FunctionDecl 0x55bfb4ad0fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55bfb4ad0e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55bfb4ad0ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55bfb4ad1098 <line:441:22>
| `-NonNullAttr 0x55bfb4ad10f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55bfb4ad1270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55bfb4ad1138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55bfb4ad11b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55bfb4ad1320 <line:444:22>
| `-NonNullAttr 0x55bfb4ad1378 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4ad1668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55bfb4ad13c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55bfb4ad1448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55bfb4ad14c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55bfb4ad1720 <line:448:22>
| `-NonNullAttr 0x55bfb4ad1778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55bfb4ad1a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55bfb4ad17d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55bfb4ad1850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55bfb4ad18c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55bfb4ad1ae0 <col:43>
| `-NonNullAttr 0x55bfb4ad1b38 <col:84, col:98> 1
|-FunctionDecl 0x55bfb4ad1e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55bfb4ad1b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55bfb4ad1c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55bfb4ad1c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55bfb4ad1ef8 <line:453:22>
| `-NonNullAttr 0x55bfb4ad1f50 <col:63, col:77> 3
|-FunctionDecl 0x55bfb4ad2228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55bfb4ad1f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55bfb4ad2018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55bfb4ad20a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55bfb4ad22e0 <line:457:22>
| `-NonNullAttr 0x55bfb4ad2338 <col:63, col:80> 2 3
|-FunctionDecl 0x55bfb4ad2528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55bfb4ad2388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55bfb4ad2408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55bfb4ad25d8 <line:459:22>
|-FunctionDecl 0x55bfb4ad29a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55bfb4ad26a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55bfb4ad2840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55bfb4ad2a58 <col:52, col:69> 1 2
|-FunctionDecl 0x55bfb4ad2c00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55bfb4ad2ae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55bfb4ad2b60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55bfb4ad2e10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55bfb4ad2cc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55bfb4ad2d48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55bfb4ad2f68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55bfb4ad2ed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55bfb4ad30a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55bfb4ad3148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55bfb4ad31f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55bfb4ad32e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55bfb4ad3350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55bfb4ad3520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/rfi002_power.opt_true-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55bfb4ad3618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55bfb4ad36d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55bfb4ad3670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55bfb4ad31d0 '__pthread_unwind_buf_t'
| |   `-Record 0x55bfb4ad3148 ''
| `-AlignedAttr 0x55bfb4ad3728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55bfb4ad37a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55bfb4ad3900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55bfb4ad3968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55bfb4ad39d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55bfb4ad3a38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55bfb4ad3c40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55bfb4ad3b30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55bfb4ad3e20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55bfb4ad3cf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55bfb4ad3fe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55bfb4ad3ed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55bfb4ad4088 <line:488:22>
|-RecordDecl 0x55bfb4ad40e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55bfb4ad43f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55bfb4ad4258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55bfb4ad42d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55bfb4ad44a8 <col:86>
| `-ReturnsTwiceAttr 0x55bfb4ad4500 <col:12> Implicit
|-FunctionDecl 0x55bfb4ad4828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55bfb4ad45d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55bfb4ad46e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55bfb4ad48d8 <line:494:22>
| `-NonNullAttr 0x55bfb4ad4930 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4ad4aa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55bfb4ad4978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55bfb4ad4b50 <line:496:22>
| `-NonNullAttr 0x55bfb4ad4ba8 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4ad4cb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55bfb4ad4bf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55bfb4ad4d58 <line:498:22>
| `-NonNullAttr 0x55bfb4ad4db0 <col:52, col:66> 1
|-FunctionDecl 0x55bfb4ad4ee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55bfb4ad4e30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55bfb4ad4f90 <line:500:22>
| `-NonNullAttr 0x55bfb4ad4fe8 <col:52, col:66> 1
|-FunctionDecl 0x55bfb4ad5228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55bfb4ad5038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55bfb4ad50c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55bfb4ad52d8 <col:36>
| `-NonNullAttr 0x55bfb4ad5330 <col:66, col:83> 1 2
|-FunctionDecl 0x55bfb4ad5430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55bfb4ad5378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55bfb4ad54d8 <line:505:22>
| `-NonNullAttr 0x55bfb4ad5530 <col:52, col:66> 1
|-FunctionDecl 0x55bfb4ad57c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bfb4ad55e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55bfb4ad5660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55bfb4ad5878 <line:509:22>
| `-NonNullAttr 0x55bfb4ad58d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55bfb4ad5b98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55bfb4ad5918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55bfb4ad5998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55bfb4ad5a18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55bfb4ad5c50 <line:513:22>
| `-NonNullAttr 0x55bfb4ad5ca8 <col:63, col:80> 1 3
|-FunctionDecl 0x55bfb4ad5e40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55bfb4ad5cf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55bfb4ad5ee8 <line:515:22>
| `-NonNullAttr 0x55bfb4ad5f40 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4ad6128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55bfb4ad5ff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55bfb4ad61d0 <line:517:22>
| `-NonNullAttr 0x55bfb4ad6228 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4ad6330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55bfb4ad6278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55bfb4ad63d8 <line:519:22>
| `-NonNullAttr 0x55bfb4ad6430 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4ad6658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bfb4ad6478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55bfb4ad64f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55bfb4ad6708 <line:523:22>
| `-NonNullAttr 0x55bfb4ad6760 <col:63, col:80> 1 2
|-FunctionDecl 0x55bfb4ad6968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55bfb4ad67a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55bfb4ad6828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55bfb4ad6a18 <line:526:22>
| `-NonNullAttr 0x55bfb4ad6a70 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4ad6c18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bfb4ad6ab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55bfb4ad6b38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55bfb4ad6cc8 <line:529:22>
| `-NonNullAttr 0x55bfb4ad6d20 <col:63, col:80> 1 2
|-FunctionDecl 0x55bfb4ad7f20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55bfb4ad6d68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55bfb4ad7e60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55bfb4ad7fd0 <line:531:22>
| `-NonNullAttr 0x55bfb4ad8028 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4ad81d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bfb4ad8078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55bfb4ad80f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55bfb4ad8288 <line:535:22>
| `-NonNullAttr 0x55bfb4ad82e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55bfb4ad8468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55bfb4ad8328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55bfb4ad83a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55bfb4ad8518 <line:538:22>
| `-NonNullAttr 0x55bfb4ad8570 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4ad8718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bfb4ad85b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55bfb4ad8638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55bfb4ad87c8 <line:542:22>
| `-NonNullAttr 0x55bfb4ad8820 <col:63, col:80> 1 2
|-FunctionDecl 0x55bfb4ad89a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55bfb4ad8868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55bfb4ad88e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55bfb4ad8a58 <line:545:22>
| `-NonNullAttr 0x55bfb4ad8ab0 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4ad8c98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55bfb4ad8af8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55bfb4ad8b78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55bfb4ad8d48 <line:548:22>
| `-NonNullAttr 0x55bfb4ad8da0 <col:63, col:80> 1 2
|-FunctionDecl 0x55bfb4ad9f58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55bfb4ad8de8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55bfb4ad9e98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55bfb4ada008 <line:551:22>
| `-NonNullAttr 0x55bfb4ada060 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4ada398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55bfb4ada140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55bfb4ada250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55bfb4ada448 <col:29>
| `-NonNullAttr 0x55bfb4ada4a0 <col:70, col:84> 1
|-FunctionDecl 0x55bfb4ada618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55bfb4ada4e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55bfb4ada6c0 <line:556:22>
| `-NonNullAttr 0x55bfb4ada718 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4ada820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55bfb4ada768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55bfb4ada8c8 <line:558:22>
| `-NonNullAttr 0x55bfb4ada920 <col:52, col:66> 1
|-FunctionDecl 0x55bfb4adaa20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55bfb4ada968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55bfb4adaac8 <line:560:19>
| `-NonNullAttr 0x55bfb4adab20 <col:49, col:63> 1
|-FunctionDecl 0x55bfb4adad58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55bfb4adab68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55bfb4adabf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55bfb4adae08 <col:39>
| `-NonNullAttr 0x55bfb4adae90 <col:69, col:86> 1 2
|-FunctionDecl 0x55bfb4adaf90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55bfb4adaed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55bfb4adb038 <line:565:22>
| `-NonNullAttr 0x55bfb4adb090 <col:52, col:66> 1
|-FunctionDecl 0x55bfb4adb190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55bfb4adb0d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55bfb4adb238 <line:567:22>
| `-NonNullAttr 0x55bfb4adb290 <col:52, col:66> 1
|-FunctionDecl 0x55bfb4adb448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55bfb4adb2d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55bfb4adb368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55bfb4adb4f8 <col:39>
| `-NonNullAttr 0x55bfb4adb550 <col:69, col:86> 1 2
|-FunctionDecl 0x55bfb4adb650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55bfb4adb598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55bfb4adb6f8 <line:572:22>
| `-NonNullAttr 0x55bfb4adb750 <col:52, col:66> 1
|-FunctionDecl 0x55bfb4adb938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55bfb4adb800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55bfb4adb9e0 <line:574:22>
| `-NonNullAttr 0x55bfb4adba38 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4adbb40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55bfb4adba88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55bfb4adbbe8 <line:576:22>
| `-NonNullAttr 0x55bfb4adbc40 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4adbea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bfb4adbc88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55bfb4adbd08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55bfb4adbf50 <line:580:22>
| `-NonNullAttr 0x55bfb4adbfa8 <col:63, col:80> 1 2
|-FunctionDecl 0x55bfb4adc1b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55bfb4adbff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55bfb4adc078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55bfb4adc268 <line:583:22>
| `-NonNullAttr 0x55bfb4adc2c0 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4adc468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bfb4adc308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55bfb4adc388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55bfb4adc518 <line:587:22>
| `-NonNullAttr 0x55bfb4adc570 <col:63, col:80> 1 2
|-FunctionDecl 0x55bfb4adc6f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55bfb4adc5b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55bfb4adc638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55bfb4adc7a8 <col:36>
| `-NonNullAttr 0x55bfb4adc800 <col:77, col:91> 1
|-FunctionDecl 0x55bfb4adcb38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55bfb4adc8e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55bfb4adc9f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55bfb4adcbe8 <line:592:22>
| `-NonNullAttr 0x55bfb4adcc40 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4adcdb8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55bfb4adcc88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55bfb4adce60 <line:594:22>
| `-NonNullAttr 0x55bfb4adcee0 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4adcfe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55bfb4adcf28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55bfb4add088 <line:596:22>
| `-NonNullAttr 0x55bfb4add0e0 <col:52, col:66> 1
|-FunctionDecl 0x55bfb4add1e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55bfb4add128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55bfb4add288 <line:598:22>
| `-NonNullAttr 0x55bfb4add2e0 <col:52, col:66> 1
|-FunctionDecl 0x55bfb4add508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55bfb4add328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55bfb4add3a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55bfb4add5b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55bfb4add8e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55bfb4add638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55bfb4add6b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55bfb4add740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55bfb4add9a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55bfb4addbb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55bfb4adda80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55bfb4addc60 <line:607:22>
| `-NonNullAttr 0x55bfb4addcb8 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4adddc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55bfb4addd08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55bfb4adde68 <line:609:22>
| `-NonNullAttr 0x55bfb4addef0 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4ade118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bfb4addf38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55bfb4addfb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55bfb4ade1c8 <line:613:22>
| `-NonNullAttr 0x55bfb4ade220 <col:63, col:80> 1 2
|-FunctionDecl 0x55bfb4ade428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55bfb4ade268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55bfb4ade2e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55bfb4ade4d8 <col:37>
| `-NonNullAttr 0x55bfb4ade530 <col:78, col:92> 1
|-FunctionDecl 0x55bfb4ade748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55bfb4ade578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55bfb4ade620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55bfb4ade7f8 <line:619:22>
| `-NonNullAttr 0x55bfb4ade850 <col:63, col:80> 1 2
|-FunctionDecl 0x55bfb4adea18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55bfb4ade898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55bfb4ade910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55bfb4adeac8 <line:622:22>
| `-NonNullAttr 0x55bfb4adeb20 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4adedc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55bfb4adec00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55bfb4adec80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55bfb4adee78 <line:624:22>
| `-NonNullAttr 0x55bfb4adef00 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4adf078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55bfb4adef48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55bfb4adf120 <line:626:22>
| `-NonNullAttr 0x55bfb4adf178 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4adf280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55bfb4adf1c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55bfb4adf328 <line:628:22>
| `-NonNullAttr 0x55bfb4adf380 <col:52, col:66> 1
|-FunctionDecl 0x55bfb4adf480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55bfb4adf3c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55bfb4adf528 <line:630:22>
| `-NonNullAttr 0x55bfb4adf580 <col:52, col:66> 1
|-FunctionDecl 0x55bfb4adf680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55bfb4adf5c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55bfb4adf728 <line:632:22>
| `-NonNullAttr 0x55bfb4adf780 <col:52, col:66> 1
|-FunctionDecl 0x55bfb4adfb58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55bfb4adf860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55bfb4adf970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55bfb4adf9f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55bfb4adfc10 <line:636:22>
| `-NonNullAttr 0x55bfb4adfc68 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4adfde8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55bfb4adfcb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55bfb4adfe90 <line:638:22>
| `-NonNullAttr 0x55bfb4adff10 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4ae0010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55bfb4adff58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55bfb4ae00b8 <line:640:22>
| `-NonNullAttr 0x55bfb4ae0110 <col:52, col:66> 1
|-FunctionDecl 0x55bfb4ae02f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55bfb4ae01c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55bfb4ae03a0 <line:642:22>
| `-NonNullAttr 0x55bfb4ae03f8 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4ae0500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55bfb4ae0448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55bfb4ae05a8 <line:644:22>
| `-NonNullAttr 0x55bfb4ae0600 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4ae0828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bfb4ae0648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55bfb4ae06c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55bfb4ae08d8 <line:648:22>
| `-NonNullAttr 0x55bfb4ae0930 <col:63, col:80> 1 2
|-FunctionDecl 0x55bfb4ae0b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55bfb4ae0978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55bfb4ae09f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55bfb4ae0be8 <line:651:22>
| `-NonNullAttr 0x55bfb4ae0c40 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4ae0fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55bfb4ae0d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55bfb4ae0e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55bfb4ae1058 <line:654:22>
| `-NonNullAttr 0x55bfb4ae10b0 <col:63, col:77> 1
|-FunctionDecl 0x55bfb4ae1208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55bfb4ae10f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55bfb4ae12b0 <col:69>
|-FunctionDecl 0x55bfb4ae1428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55bfb4ae1318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55bfb4ae14d0 <col:72>
|-FunctionDecl 0x55bfb4ae1708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55bfb4ae1538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55bfb4ae15e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55bfb4ae17b8 <col:44>
|-FunctionDecl 0x55bfb4ae19d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55bfb4ae1820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55bfb4ae1898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55bfb4ae1a88 <line:661:22>
| `-NonNullAttr 0x55bfb4ae1ae0 <col:63, col:77> 2
|-FunctionDecl 0x55bfb4ae2f50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55bfb4ae1bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55bfb4ae1cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55bfb4ae1de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55bfb4ae3008 <col:47>
|-FunctionDecl 0x55bfb4ae3110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55bfb4ae3078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55bfb4ae3268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55bfb4ae31d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55bfb4ae3330 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55bfb4ae33f0 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55bfb4ae34b0 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55bfb4ae3568 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55bfb4ae35e8 prev 0x55bfb4ae3568 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55bfb4ae3650 <col:24> 'int' 0
|-VarDecl 0x55bfb4ae3688 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55bfb4ae3708 prev 0x55bfb4ae3688 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55bfb4ae3770 <col:27> 'int' 0
|-VarDecl 0x55bfb4ae37a8 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55bfb4ae3828 prev 0x55bfb4ae37a8 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55bfb4ae3890 <col:27> 'int' 0
|-VarDecl 0x55bfb4ae38c8 <line:677:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x55bfb4ae3948 prev 0x55bfb4ae38c8 <line:678:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x55bfb4ae39b0 <col:27> 'int' 0
|-VarDecl 0x55bfb4ae39e0 <line:679:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55bfb4ae3a58 <line:680:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55bfb4ae3ad8 <line:681:1, col:5> col:5 used x 'int'
|-VarDecl 0x55bfb4ae3b58 prev 0x55bfb4ae3ad8 <line:682:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55bfb4ae3bc0 <col:9> 'int' 0
|-VarDecl 0x55bfb4ae3bf0 <line:683:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x55bfb4ae3c70 <line:684:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x55bfb4ae3ce8 <line:685:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x55bfb4ae3d60 <line:686:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x55bfb4ae3dd8 <line:687:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x55bfb4ae3e50 <line:688:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x55bfb4ae3f20 <line:689:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x55bfb4ae3f98 <line:690:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x55bfb4ae4010 <line:691:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x55bfb4ae4090 <line:692:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x55bfb4ae4110 <line:693:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x55bfb4ae4188 <line:694:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x55bfb4ae4208 <line:695:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x55bfb4ae4280 <line:696:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x55bfb4ae4300 <line:697:1, col:5> col:5 used y 'int'
|-VarDecl 0x55bfb4ae4380 prev 0x55bfb4ae4300 <line:698:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55bfb4ae43e8 <col:9> 'int' 0
|-VarDecl 0x55bfb4ae4418 <line:699:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55bfb4ae4490 <line:700:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55bfb4ae45a8 prev 0x55bfb4ae3110 <line:701:1, line:740:1> line:701:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55bfb4ae4510 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55bfb4ae8fa0 <line:702:1, line:740:1>
|   |-CallExpr 0x55bfb4ae46b8 <line:703:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bfb4ae46a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bfb4ae4650 <col:3> 'void ()' Function 0x55bfb4a8a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bfb4ae4718 <line:704:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55bfb4ae46d8 <col:3> 'int' lvalue Var 0x55bfb4ae3b58 'x' 'int'
|   | `-IntegerLiteral 0x55bfb4ae46f8 <col:7> 'int' 1
|   |-CallExpr 0x55bfb4ae4770 <line:705:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bfb4ae4758 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bfb4ae4738 <col:3> 'void ()' Function 0x55bfb4a8a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55bfb4ae47c8 <line:706:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bfb4ae47b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bfb4ae4790 <col:3> 'void ()' Function 0x55bfb4a8a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bfb4ae4ab0 <line:707:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55bfb4ae47e8 <col:3> 'int' lvalue Var 0x55bfb4ae3b58 'x' 'int'
|   | `-ConditionalOperator 0x55bfb4ae4a80 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55bfb4ae48a8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55bfb4ae4860 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55bfb4ae4848 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55bfb4ae4808 <col:7> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55bfb4ae4890 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55bfb4ae4878 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55bfb4ae4828 <col:25> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55bfb4ae4a68 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bfb4ae48c8 <col:42> 'int' lvalue Var 0x55bfb4ae4110 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55bfb4ae4a48 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55bfb4ae4a18 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55bfb4ae4988 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55bfb4ae4940 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55bfb4ae4928 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55bfb4ae48e8 <col:55> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55bfb4ae4970 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55bfb4ae4958 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55bfb4ae4908 <col:73> '_Bool' lvalue Var 0x55bfb4ae3f20 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55bfb4ae49e8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55bfb4ae49a8 <col:90> 'int' lvalue Var 0x55bfb4ae4208 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55bfb4ae4a00 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bfb4ae49c8 <col:102> 'int' lvalue Var 0x55bfb4ae3b58 'x' 'int'
|   |-BinaryOperator 0x55bfb4ae4cb8 <line:708:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4ae4ad0 <col:3> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55bfb4ae4ca0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bfb4ae4c70 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55bfb4ae4b90 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55bfb4ae4b48 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55bfb4ae4b30 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55bfb4ae4af0 <col:20> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55bfb4ae4b78 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55bfb4ae4b60 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55bfb4ae4b10 <col:38> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55bfb4ae4c28 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55bfb4ae4be0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55bfb4ae4bb0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55bfb4ae4c58 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55bfb4ae4c40 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bfb4ae4c08 <col:66> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55bfb4ae4fc0 <line:709:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4ae4cd8 <col:3> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55bfb4ae4fa8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bfb4ae4f78 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55bfb4ae4e78 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55bfb4ae4d98 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55bfb4ae4d50 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55bfb4ae4d38 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55bfb4ae4cf8 <col:20> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55bfb4ae4d80 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55bfb4ae4d68 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55bfb4ae4d18 <col:38> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55bfb4ae4e58 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55bfb4ae4e10 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55bfb4ae4df8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55bfb4ae4db8 <col:56> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55bfb4ae4e40 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55bfb4ae4e28 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55bfb4ae4dd8 <col:74> '_Bool' lvalue Var 0x55bfb4ae3f20 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55bfb4ae4f30 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55bfb4ae4ec8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55bfb4ae4e98 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55bfb4ae4f60 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55bfb4ae4f48 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bfb4ae4ef0 <col:102> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55bfb4ae51c8 <line:710:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4ae4fe0 <col:3> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55bfb4ae51b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bfb4ae5180 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55bfb4ae50a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55bfb4ae5058 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55bfb4ae5040 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55bfb4ae5000 <col:20> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55bfb4ae5088 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55bfb4ae5070 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55bfb4ae5020 <col:38> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55bfb4ae5138 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55bfb4ae50f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55bfb4ae50c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55bfb4ae5168 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55bfb4ae5150 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bfb4ae5118 <col:66> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55bfb4ae54b0 <line:711:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4ae51e8 <col:3> '_Bool' lvalue Var 0x55bfb4ae3f20 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55bfb4ae5498 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bfb4ae5468 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55bfb4ae5388 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55bfb4ae52a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55bfb4ae5260 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55bfb4ae5248 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55bfb4ae5208 <col:20> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55bfb4ae5290 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55bfb4ae5278 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55bfb4ae5228 <col:38> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55bfb4ae5368 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55bfb4ae5320 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55bfb4ae5308 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55bfb4ae52c8 <col:56> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55bfb4ae5350 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55bfb4ae5338 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55bfb4ae52e8 <col:74> '_Bool' lvalue Var 0x55bfb4ae3f20 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55bfb4ae5420 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55bfb4ae53d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55bfb4ae53a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55bfb4ae5450 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55bfb4ae5438 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bfb4ae5400 <col:102> '_Bool' lvalue Var 0x55bfb4ae3f20 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55bfb4ae5508 <line:712:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bfb4ae54f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bfb4ae54d0 <col:3> 'void ()' Function 0x55bfb4a8a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55bfb4ae5560 <line:713:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bfb4ae5548 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bfb4ae5528 <col:3> 'void ()' Function 0x55bfb4a8a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bfb4ae5628 <line:714:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4ae5580 <col:3> '_Bool' lvalue Var 0x55bfb4ae4418 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55bfb4ae5608 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55bfb4ae55f0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55bfb4ae55a0 <col:19> '_Bool (void)' Function 0x55bfb4a89c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55bfb4ae56c0 <line:715:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4ae5648 <col:3> '_Bool' lvalue Var 0x55bfb4ae4490 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55bfb4ae56a0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55bfb4ae5688 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55bfb4ae5668 <col:19> '_Bool (void)' Function 0x55bfb4a89c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55bfb4ae5738 <line:716:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4ae56e0 <col:3> '_Bool' lvalue Var 0x55bfb4ae3bf0 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55bfb4ae5720 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bfb4ae5700 <col:21> '_Bool' lvalue Var 0x55bfb4ae4490 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55bfb4ae57b0 <line:717:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55bfb4ae5758 <col:3> 'int' lvalue Var 0x55bfb4ae3c70 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55bfb4ae5798 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bfb4ae5778 <col:15> 'int' lvalue Var 0x55bfb4ae3b58 'x' 'int'
|   |-BinaryOperator 0x55bfb4ae5be8 <line:718:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55bfb4ae57d0 <col:3> 'int' lvalue Var 0x55bfb4ae3b58 'x' 'int'
|   | `-ConditionalOperator 0x55bfb4ae5bb8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55bfb4ae59e0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55bfb4ae5900 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55bfb4ae5828 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55bfb4ae5810 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55bfb4ae57f0 <col:8> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55bfb4ae58e0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55bfb4ae5878 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55bfb4ae5860 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55bfb4ae5840 <col:27> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x55bfb4ae58c8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55bfb4ae58b0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55bfb4ae5890 <col:46> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55bfb4ae59c0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55bfb4ae5958 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55bfb4ae5940 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55bfb4ae5920 <col:65> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x55bfb4ae59a8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55bfb4ae5990 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55bfb4ae5970 <col:84> '_Bool' lvalue Var 0x55bfb4ae3f20 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55bfb4ae5ba0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bfb4ae5a00 <col:101> 'int' lvalue Var 0x55bfb4ae3b58 'x' 'int'
|   |   `-ParenExpr 0x55bfb4ae5b80 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55bfb4ae5b50 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55bfb4ae5ac0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55bfb4ae5a78 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55bfb4ae5a60 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55bfb4ae5a20 <col:106> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55bfb4ae5aa8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55bfb4ae5a90 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55bfb4ae5a40 <col:124> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55bfb4ae5b20 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55bfb4ae5ae0 <col:141> 'int' lvalue Var 0x55bfb4ae4110 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55bfb4ae5b38 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bfb4ae5b00 <col:153> 'int' lvalue Var 0x55bfb4ae4208 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55bfb4ae6118 <line:719:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55bfb4ae5c08 <col:3> 'int' lvalue Var 0x55bfb4ae4110 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55bfb4ae60e8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55bfb4ae60b8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55bfb4ae60a0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55bfb4ae5c28 <col:15> '_Bool' lvalue Var 0x55bfb4ae4490 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55bfb4ae60d0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bfb4ae5c48 <col:31> 'int' lvalue Var 0x55bfb4ae4110 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55bfb4ae6080 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55bfb4ae6050 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55bfb4ae5e58 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55bfb4ae5d78 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55bfb4ae5ca0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55bfb4ae5c88 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55bfb4ae5c68 <col:45> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55bfb4ae5d58 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55bfb4ae5cf0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55bfb4ae5cd8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55bfb4ae5cb8 <col:64> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55bfb4ae5d40 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55bfb4ae5d28 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55bfb4ae5d08 <col:83> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55bfb4ae5e38 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55bfb4ae5dd0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55bfb4ae5db8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55bfb4ae5d98 <col:102> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55bfb4ae5e20 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55bfb4ae5e08 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55bfb4ae5de8 <col:121> '_Bool' lvalue Var 0x55bfb4ae3f20 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55bfb4ae6038 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55bfb4ae5e78 <col:138> 'int' lvalue Var 0x55bfb4ae4110 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55bfb4ae6018 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55bfb4ae5fe8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55bfb4ae5f58 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55bfb4ae5ef0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55bfb4ae5ed8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55bfb4ae5e98 <col:151> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55bfb4ae5f40 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55bfb4ae5f08 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55bfb4ae5eb8 <col:169> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55bfb4ae5fb8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55bfb4ae5f78 <col:186> 'int' lvalue Var 0x55bfb4ae4110 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55bfb4ae5fd0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55bfb4ae5f98 <col:198> 'int' lvalue Var 0x55bfb4ae4110 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55bfb4ae6628 <line:720:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55bfb4ae6138 <col:3> 'int' lvalue Var 0x55bfb4ae4208 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55bfb4ae65f8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55bfb4ae65c8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55bfb4ae65b0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55bfb4ae6158 <col:15> '_Bool' lvalue Var 0x55bfb4ae4490 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55bfb4ae65e0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bfb4ae6178 <col:31> 'int' lvalue Var 0x55bfb4ae4208 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55bfb4ae6590 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55bfb4ae6560 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55bfb4ae6388 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55bfb4ae62a8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55bfb4ae61d0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55bfb4ae61b8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55bfb4ae6198 <col:45> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55bfb4ae6288 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55bfb4ae6220 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55bfb4ae6208 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55bfb4ae61e8 <col:64> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55bfb4ae6270 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55bfb4ae6258 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55bfb4ae6238 <col:83> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55bfb4ae6368 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55bfb4ae6300 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55bfb4ae62e8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55bfb4ae62c8 <col:102> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55bfb4ae6350 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55bfb4ae6338 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55bfb4ae6318 <col:121> '_Bool' lvalue Var 0x55bfb4ae3f20 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55bfb4ae6548 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55bfb4ae63a8 <col:138> 'int' lvalue Var 0x55bfb4ae4208 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55bfb4ae6528 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55bfb4ae64f8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55bfb4ae6468 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55bfb4ae6420 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55bfb4ae6408 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55bfb4ae63c8 <col:151> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55bfb4ae6450 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55bfb4ae6438 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55bfb4ae63e8 <col:169> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55bfb4ae64c8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55bfb4ae6488 <col:186> 'int' lvalue Var 0x55bfb4ae4208 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55bfb4ae64e0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55bfb4ae64a8 <col:198> 'int' lvalue Var 0x55bfb4ae4208 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55bfb4ae6bd0 <line:721:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4ae6648 <col:3> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55bfb4ae6bb8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bfb4ae6b88 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55bfb4ae6b40 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bfb4ae6b28 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bfb4ae6668 <col:20> '_Bool' lvalue Var 0x55bfb4ae4490 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bfb4ae6b70 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bfb4ae6b58 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bfb4ae6688 <col:36> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55bfb4ae6b08 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55bfb4ae6ad8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55bfb4ae6898 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55bfb4ae67b8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55bfb4ae66e0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55bfb4ae66c8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55bfb4ae66a8 <col:55> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55bfb4ae6798 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55bfb4ae6730 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55bfb4ae6718 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55bfb4ae66f8 <col:74> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55bfb4ae6780 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55bfb4ae6768 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55bfb4ae6748 <col:93> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55bfb4ae6878 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55bfb4ae6810 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55bfb4ae67f8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55bfb4ae67d8 <col:112> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55bfb4ae6860 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55bfb4ae6848 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55bfb4ae6828 <col:131> '_Bool' lvalue Var 0x55bfb4ae3f20 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55bfb4ae6ac0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55bfb4ae6aa8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55bfb4ae68b8 <col:148> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55bfb4ae6a88 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55bfb4ae6a58 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55bfb4ae6978 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55bfb4ae6930 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55bfb4ae6918 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55bfb4ae68d8 <col:166> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55bfb4ae6960 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55bfb4ae6948 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55bfb4ae68f8 <col:184> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55bfb4ae6a10 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55bfb4ae69c8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55bfb4ae6998 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55bfb4ae6a40 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55bfb4ae6a28 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55bfb4ae69f0 <col:212> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55bfb4ae71a8 <line:722:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4ae6bf0 <col:3> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55bfb4ae7190 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bfb4ae7160 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55bfb4ae7118 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bfb4ae7100 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bfb4ae6c10 <col:20> '_Bool' lvalue Var 0x55bfb4ae4490 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bfb4ae7148 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bfb4ae7130 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bfb4ae6c30 <col:36> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55bfb4ae70e0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55bfb4ae70b0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55bfb4ae6e40 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55bfb4ae6d60 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55bfb4ae6c88 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55bfb4ae6c70 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55bfb4ae6c50 <col:55> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55bfb4ae6d40 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55bfb4ae6cd8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55bfb4ae6cc0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55bfb4ae6ca0 <col:74> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55bfb4ae6d28 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55bfb4ae6d10 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55bfb4ae6cf0 <col:93> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55bfb4ae6e20 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55bfb4ae6db8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55bfb4ae6da0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55bfb4ae6d80 <col:112> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55bfb4ae6e08 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55bfb4ae6df0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55bfb4ae6dd0 <col:131> '_Bool' lvalue Var 0x55bfb4ae3f20 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55bfb4ae7098 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55bfb4ae7080 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55bfb4ae6e60 <col:148> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55bfb4ae7060 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55bfb4ae7030 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55bfb4ae6f20 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55bfb4ae6ed8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55bfb4ae6ec0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55bfb4ae6e80 <col:166> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55bfb4ae6f08 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55bfb4ae6ef0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55bfb4ae6ea0 <col:184> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55bfb4ae7000 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55bfb4ae6f80 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55bfb4ae6f50 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55bfb4ae7018 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55bfb4ae6fd8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55bfb4ae6fa8 <col:219> 'int' 0
|   |-BinaryOperator 0x55bfb4ae7750 <line:723:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4ae71c8 <col:3> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55bfb4ae7738 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bfb4ae7708 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55bfb4ae76c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bfb4ae76a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bfb4ae71e8 <col:20> '_Bool' lvalue Var 0x55bfb4ae4490 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bfb4ae76f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bfb4ae76d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bfb4ae7208 <col:36> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55bfb4ae7688 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55bfb4ae7658 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55bfb4ae7418 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55bfb4ae7338 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55bfb4ae7260 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55bfb4ae7248 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55bfb4ae7228 <col:55> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55bfb4ae7318 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55bfb4ae72b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55bfb4ae7298 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55bfb4ae7278 <col:74> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55bfb4ae7300 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55bfb4ae72e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55bfb4ae72c8 <col:93> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55bfb4ae73f8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55bfb4ae7390 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55bfb4ae7378 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55bfb4ae7358 <col:112> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55bfb4ae73e0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55bfb4ae73c8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55bfb4ae73a8 <col:131> '_Bool' lvalue Var 0x55bfb4ae3f20 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55bfb4ae7640 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55bfb4ae7628 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55bfb4ae7438 <col:148> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55bfb4ae7608 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55bfb4ae75d8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55bfb4ae74f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55bfb4ae74b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55bfb4ae7498 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55bfb4ae7458 <col:166> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55bfb4ae74e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55bfb4ae74c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55bfb4ae7478 <col:184> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55bfb4ae7590 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55bfb4ae7548 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55bfb4ae7518 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55bfb4ae75c0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55bfb4ae75a8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55bfb4ae7570 <col:212> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55bfb4ae7d18 <line:724:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4ae7770 <col:3> '_Bool' lvalue Var 0x55bfb4ae3f20 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55bfb4ae7d00 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bfb4ae7cd0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55bfb4ae7c88 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bfb4ae7c70 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bfb4ae7790 <col:20> '_Bool' lvalue Var 0x55bfb4ae4490 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bfb4ae7cb8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bfb4ae7ca0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bfb4ae77b0 <col:36> '_Bool' lvalue Var 0x55bfb4ae3f20 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55bfb4ae7c50 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55bfb4ae7c20 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55bfb4ae79c0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55bfb4ae78e0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55bfb4ae7808 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55bfb4ae77f0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55bfb4ae77d0 <col:55> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55bfb4ae78c0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55bfb4ae7858 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55bfb4ae7840 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55bfb4ae7820 <col:74> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55bfb4ae78a8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55bfb4ae7890 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55bfb4ae7870 <col:93> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55bfb4ae79a0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55bfb4ae7938 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55bfb4ae7920 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55bfb4ae7900 <col:112> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55bfb4ae7988 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55bfb4ae7970 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55bfb4ae7950 <col:131> '_Bool' lvalue Var 0x55bfb4ae3f20 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55bfb4ae7c08 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55bfb4ae7bf0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55bfb4ae79e0 <col:148> '_Bool' lvalue Var 0x55bfb4ae3f20 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55bfb4ae7bd0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55bfb4ae7ba0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55bfb4ae7aa0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55bfb4ae7a58 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55bfb4ae7a40 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55bfb4ae7a00 <col:166> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55bfb4ae7a88 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55bfb4ae7a70 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55bfb4ae7a20 <col:184> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55bfb4ae7b70 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55bfb4ae7af0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55bfb4ae7ac0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55bfb4ae7b88 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55bfb4ae7b48 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55bfb4ae7b18 <col:219> 'int' 0
|   |-BinaryOperator 0x55bfb4ae7d90 <line:725:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55bfb4ae7d38 <col:3> 'int' lvalue Var 0x55bfb4ae3708 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55bfb4ae7d78 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bfb4ae7d58 <col:25> 'int' lvalue Var 0x55bfb4ae3b58 'x' 'int'
|   |-BinaryOperator 0x55bfb4ae7ec0 <line:726:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55bfb4ae7db0 <col:3> 'int' lvalue Var 0x55bfb4ae3b58 'x' 'int'
|   | `-ConditionalOperator 0x55bfb4ae7e90 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55bfb4ae7e48 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55bfb4ae7e30 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55bfb4ae7dd0 <col:7> '_Bool' lvalue Var 0x55bfb4ae3bf0 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55bfb4ae7e60 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bfb4ae7df0 <col:25> 'int' lvalue Var 0x55bfb4ae3c70 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55bfb4ae7e78 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55bfb4ae7e10 <col:37> 'int' lvalue Var 0x55bfb4ae3b58 'x' 'int'
|   |-BinaryOperator 0x55bfb4ae7f88 <line:727:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4ae7ee0 <col:3> '_Bool' lvalue Var 0x55bfb4ae3bf0 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55bfb4ae7f60 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55bfb4ae7f00 <col:28> 'int' 0
|   |-CallExpr 0x55bfb4ae7fe0 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bfb4ae7fc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bfb4ae7fa8 <col:3> 'void ()' Function 0x55bfb4a8a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55bfb4ae8038 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bfb4ae8020 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bfb4ae8000 <col:3> 'void ()' Function 0x55bfb4a8a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bfb4ae8320 <line:730:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55bfb4ae8058 <col:3> 'int' lvalue Var 0x55bfb4ae3b58 'x' 'int'
|   | `-ConditionalOperator 0x55bfb4ae82f0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55bfb4ae8118 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55bfb4ae80d0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55bfb4ae80b8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55bfb4ae8078 <col:7> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55bfb4ae8100 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55bfb4ae80e8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55bfb4ae8098 <col:25> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55bfb4ae82d8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bfb4ae8138 <col:42> 'int' lvalue Var 0x55bfb4ae4110 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55bfb4ae82b8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55bfb4ae8288 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55bfb4ae81f8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55bfb4ae81b0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55bfb4ae8198 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55bfb4ae8158 <col:55> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55bfb4ae81e0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55bfb4ae81c8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55bfb4ae8178 <col:73> '_Bool' lvalue Var 0x55bfb4ae3f20 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55bfb4ae8258 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55bfb4ae8218 <col:90> 'int' lvalue Var 0x55bfb4ae4208 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55bfb4ae8270 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bfb4ae8238 <col:102> 'int' lvalue Var 0x55bfb4ae3b58 'x' 'int'
|   |-BinaryOperator 0x55bfb4ae8528 <line:731:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4ae8340 <col:3> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55bfb4ae8510 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bfb4ae84e0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55bfb4ae8400 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55bfb4ae83b8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55bfb4ae83a0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55bfb4ae8360 <col:20> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55bfb4ae83e8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55bfb4ae83d0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55bfb4ae8380 <col:38> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55bfb4ae8498 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55bfb4ae8450 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55bfb4ae8420 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55bfb4ae84c8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55bfb4ae84b0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bfb4ae8478 <col:66> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55bfb4ae8810 <line:732:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4ae8548 <col:3> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55bfb4ae87f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bfb4ae87c8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55bfb4ae86e8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55bfb4ae8608 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55bfb4ae85c0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55bfb4ae85a8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55bfb4ae8568 <col:20> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55bfb4ae85f0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55bfb4ae85d8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55bfb4ae8588 <col:38> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55bfb4ae86c8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55bfb4ae8680 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55bfb4ae8668 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55bfb4ae8628 <col:56> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55bfb4ae86b0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55bfb4ae8698 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55bfb4ae8648 <col:74> '_Bool' lvalue Var 0x55bfb4ae3f20 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55bfb4ae8780 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55bfb4ae8738 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55bfb4ae8708 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55bfb4ae87b0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55bfb4ae8798 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bfb4ae8760 <col:102> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55bfb4ae8a18 <line:733:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4ae8830 <col:3> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55bfb4ae8a00 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bfb4ae89d0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55bfb4ae88f0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55bfb4ae88a8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55bfb4ae8890 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55bfb4ae8850 <col:20> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55bfb4ae88d8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55bfb4ae88c0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55bfb4ae8870 <col:38> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55bfb4ae8988 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55bfb4ae8940 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55bfb4ae8910 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55bfb4ae89b8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55bfb4ae89a0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bfb4ae8968 <col:66> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55bfb4ae8d00 <line:734:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4ae8a38 <col:3> '_Bool' lvalue Var 0x55bfb4ae3f20 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55bfb4ae8ce8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bfb4ae8cb8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55bfb4ae8bd8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55bfb4ae8af8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55bfb4ae8ab0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55bfb4ae8a98 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55bfb4ae8a58 <col:20> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55bfb4ae8ae0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55bfb4ae8ac8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55bfb4ae8a78 <col:38> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55bfb4ae8bb8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55bfb4ae8b70 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55bfb4ae8b58 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55bfb4ae8b18 <col:56> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55bfb4ae8ba0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55bfb4ae8b88 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55bfb4ae8b38 <col:74> '_Bool' lvalue Var 0x55bfb4ae3f20 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55bfb4ae8c70 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55bfb4ae8c28 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55bfb4ae8bf8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55bfb4ae8ca0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55bfb4ae8c88 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bfb4ae8c50 <col:102> '_Bool' lvalue Var 0x55bfb4ae3f20 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55bfb4ae8d58 <line:735:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bfb4ae8d40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bfb4ae8d20 <col:3> 'void ()' Function 0x55bfb4a8a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55bfb4ae8db0 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bfb4ae8d98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bfb4ae8d78 <col:3> 'void ()' Function 0x55bfb4a8a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bfb4ae8e68 <line:737:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55bfb4ae8dd0 <col:3> 'int' lvalue Var 0x55bfb4ae35e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55bfb4ae8e48 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55bfb4ae8e30 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bfb4ae8df0 <col:22> 'int' lvalue Var 0x55bfb4ae35e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55bfb4ae8e10 <col:41> 'int' 1
|   |-CallExpr 0x55bfb4ae8ec0 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bfb4ae8ea8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bfb4ae8e88 <col:3> 'void ()' Function 0x55bfb4a8a570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55bfb4ae8f90 <line:739:3, col:36>
|     `-CallExpr 0x55bfb4ae8f70 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55bfb4ae8f30 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55bfb4ae8ee0 <col:10> 'void *(void)' Function 0x55bfb4a89fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55bfb4ae9188 prev 0x55bfb4ae3268 <line:741:1, line:787:1> line:741:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55bfb4ae90f0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55bfb4aed4a0 <line:742:1, line:787:1>
|   |-CallExpr 0x55bfb4ae9268 <line:743:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bfb4ae9250 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bfb4ae9230 <col:3> 'void ()' Function 0x55bfb4a8a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bfb4ae92e0 <line:744:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55bfb4ae9288 <col:3> 'int' lvalue Var 0x55bfb4ae4208 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55bfb4ae92c8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bfb4ae92a8 <col:15> 'int' lvalue Var 0x55bfb4ae4110 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55bfb4ae9340 <line:745:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55bfb4ae9300 <col:3> 'int' lvalue Var 0x55bfb4ae4110 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x55bfb4ae9320 <col:15> 'int' 2
|   |-BinaryOperator 0x55bfb4ae93b8 <line:746:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4ae9360 <col:3> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55bfb4ae93a0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bfb4ae9380 <col:20> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55bfb4ae9450 <line:747:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4ae93d8 <col:3> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55bfb4ae9428 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55bfb4ae93f8 <col:27> 'int' 1
|   |-CallExpr 0x55bfb4ae95d8 <line:748:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55bfb4ae95c0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55bfb4ae9470 <col:3> 'void (int)' Function 0x55bfb4a8a238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55bfb4ae9570 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55bfb4ae9550 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55bfb4ae9530 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55bfb4ae94e8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55bfb4ae94d0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55bfb4ae9490 <col:23> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55bfb4ae9518 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55bfb4ae9500 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55bfb4ae94b0 <col:41> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55bfb4ae9658 <line:749:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4ae9600 <col:3> '_Bool' lvalue Var 0x55bfb4ae3e50 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55bfb4ae9640 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bfb4ae9620 <col:20> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55bfb4ae96d0 <line:750:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4ae9678 <col:3> '_Bool' lvalue Var 0x55bfb4ae3f20 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55bfb4ae96b8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bfb4ae9698 <col:20> '_Bool' lvalue Var 0x55bfb4ae3d60 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55bfb4ae9748 <line:751:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4ae96f0 <col:3> '_Bool' lvalue Var 0x55bfb4ae3f98 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55bfb4ae9730 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bfb4ae9710 <col:20> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55bfb4ae97e0 <line:752:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4ae9768 <col:3> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x55bfb4ae97b8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55bfb4ae9788 <col:27> 'int' 1
|   |-CallExpr 0x55bfb4ae9838 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bfb4ae9820 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bfb4ae9800 <col:3> 'void ()' Function 0x55bfb4a8a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55bfb4ae9890 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bfb4ae9878 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bfb4ae9858 <col:3> 'void ()' Function 0x55bfb4a8a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bfb4ae98f0 <line:755:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55bfb4ae98b0 <col:3> 'int' lvalue Var 0x55bfb4ae4380 'y' 'int'
|   | `-IntegerLiteral 0x55bfb4ae98d0 <col:7> 'int' 1
|   |-CallExpr 0x55bfb4ae9948 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bfb4ae9930 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bfb4ae9910 <col:3> 'void ()' Function 0x55bfb4a8a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55bfb4ae99a0 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bfb4ae9988 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bfb4ae9968 <col:3> 'void ()' Function 0x55bfb4a8a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bfb4ae9a18 <line:758:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55bfb4ae99c0 <col:3> 'int' lvalue Var 0x55bfb4ae3828 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55bfb4ae9a00 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bfb4ae99e0 <col:25> 'int' lvalue Var 0x55bfb4ae4380 'y' 'int'
|   |-CallExpr 0x55bfb4ae9a70 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bfb4ae9a58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bfb4ae9a38 <col:3> 'void ()' Function 0x55bfb4a8a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55bfb4ae9ac8 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bfb4ae9ab0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bfb4ae9a90 <col:3> 'void ()' Function 0x55bfb4a8a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bfb4ae9b60 <line:761:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4ae9ae8 <col:3> '_Bool' lvalue Var 0x55bfb4ae4418 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55bfb4ae9b40 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55bfb4ae9b28 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55bfb4ae9b08 <col:19> '_Bool (void)' Function 0x55bfb4a89c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55bfb4ae9bf8 <line:762:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4ae9b80 <col:3> '_Bool' lvalue Var 0x55bfb4ae4490 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55bfb4ae9bd8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55bfb4ae9bc0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55bfb4ae9ba0 <col:19> '_Bool (void)' Function 0x55bfb4a89c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55bfb4ae9c70 <line:763:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4ae9c18 <col:3> '_Bool' lvalue Var 0x55bfb4ae3bf0 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55bfb4ae9c58 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bfb4ae9c38 <col:21> '_Bool' lvalue Var 0x55bfb4ae4490 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55bfb4ae9ce8 <line:764:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55bfb4ae9c90 <col:3> 'int' lvalue Var 0x55bfb4ae3c70 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55bfb4ae9cd0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bfb4ae9cb0 <col:15> 'int' lvalue Var 0x55bfb4ae3b58 'x' 'int'
|   |-BinaryOperator 0x55bfb4aea148 <line:765:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55bfb4ae9d08 <col:3> 'int' lvalue Var 0x55bfb4ae3b58 'x' 'int'
|   | `-ConditionalOperator 0x55bfb4aea118 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55bfb4ae9f18 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55bfb4ae9e38 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55bfb4ae9d60 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55bfb4ae9d48 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55bfb4ae9d28 <col:8> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55bfb4ae9e18 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55bfb4ae9db0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55bfb4ae9d98 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55bfb4ae9d78 <col:27> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x55bfb4ae9e00 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55bfb4ae9de8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55bfb4ae9dc8 <col:46> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55bfb4ae9ef8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55bfb4ae9e90 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55bfb4ae9e78 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55bfb4ae9e58 <col:65> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x55bfb4ae9ee0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55bfb4ae9ec8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55bfb4ae9ea8 <col:84> '_Bool' lvalue Var 0x55bfb4ae3f98 'x$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55bfb4aea100 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bfb4ae9f38 <col:101> 'int' lvalue Var 0x55bfb4ae3b58 'x' 'int'
|   |   `-ParenExpr 0x55bfb4aea0e0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55bfb4aea0b0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55bfb4aea020 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55bfb4ae9fd8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55bfb4ae9fc0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55bfb4ae9f80 <col:106> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55bfb4aea008 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55bfb4ae9ff0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55bfb4ae9fa0 <col:124> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55bfb4aea080 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55bfb4aea040 <col:141> 'int' lvalue Var 0x55bfb4ae4110 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55bfb4aea098 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bfb4aea060 <col:153> 'int' lvalue Var 0x55bfb4ae4208 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55bfb4aea658 <line:766:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55bfb4aea168 <col:3> 'int' lvalue Var 0x55bfb4ae4110 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55bfb4aea628 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55bfb4aea5f8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55bfb4aea5e0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55bfb4aea188 <col:15> '_Bool' lvalue Var 0x55bfb4ae4490 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55bfb4aea610 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bfb4aea1a8 <col:31> 'int' lvalue Var 0x55bfb4ae4110 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55bfb4aea5c0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55bfb4aea590 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55bfb4aea3b8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55bfb4aea2d8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55bfb4aea200 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55bfb4aea1e8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55bfb4aea1c8 <col:45> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55bfb4aea2b8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55bfb4aea250 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55bfb4aea238 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55bfb4aea218 <col:64> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55bfb4aea2a0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55bfb4aea288 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55bfb4aea268 <col:83> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55bfb4aea398 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55bfb4aea330 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55bfb4aea318 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55bfb4aea2f8 <col:102> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55bfb4aea380 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55bfb4aea368 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55bfb4aea348 <col:121> '_Bool' lvalue Var 0x55bfb4ae3f98 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55bfb4aea578 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55bfb4aea3d8 <col:138> 'int' lvalue Var 0x55bfb4ae4110 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55bfb4aea558 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55bfb4aea528 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55bfb4aea498 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55bfb4aea450 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55bfb4aea438 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55bfb4aea3f8 <col:151> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55bfb4aea480 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55bfb4aea468 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55bfb4aea418 <col:169> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55bfb4aea4f8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55bfb4aea4b8 <col:186> 'int' lvalue Var 0x55bfb4ae4110 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55bfb4aea510 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55bfb4aea4d8 <col:198> 'int' lvalue Var 0x55bfb4ae4110 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55bfb4aeab68 <line:767:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55bfb4aea678 <col:3> 'int' lvalue Var 0x55bfb4ae4208 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55bfb4aeab38 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55bfb4aeab08 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55bfb4aeaaf0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55bfb4aea698 <col:15> '_Bool' lvalue Var 0x55bfb4ae4490 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55bfb4aeab20 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bfb4aea6b8 <col:31> 'int' lvalue Var 0x55bfb4ae4208 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55bfb4aeaad0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55bfb4aeaaa0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55bfb4aea8c8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55bfb4aea7e8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55bfb4aea710 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55bfb4aea6f8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55bfb4aea6d8 <col:45> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55bfb4aea7c8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55bfb4aea760 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55bfb4aea748 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55bfb4aea728 <col:64> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55bfb4aea7b0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55bfb4aea798 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55bfb4aea778 <col:83> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55bfb4aea8a8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55bfb4aea840 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55bfb4aea828 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55bfb4aea808 <col:102> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55bfb4aea890 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55bfb4aea878 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55bfb4aea858 <col:121> '_Bool' lvalue Var 0x55bfb4ae3f98 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55bfb4aeaa88 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55bfb4aea8e8 <col:138> 'int' lvalue Var 0x55bfb4ae4208 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55bfb4aeaa68 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55bfb4aeaa38 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55bfb4aea9a8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55bfb4aea960 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55bfb4aea948 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55bfb4aea908 <col:151> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55bfb4aea990 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55bfb4aea978 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55bfb4aea928 <col:169> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55bfb4aeaa08 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55bfb4aea9c8 <col:186> 'int' lvalue Var 0x55bfb4ae4208 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55bfb4aeaa20 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55bfb4aea9e8 <col:198> 'int' lvalue Var 0x55bfb4ae4208 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55bfb4aeb120 <line:768:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4aeab88 <col:3> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55bfb4aeb108 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bfb4aeb0d8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55bfb4aeb090 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bfb4aeb078 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bfb4aeaba8 <col:20> '_Bool' lvalue Var 0x55bfb4ae4490 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bfb4aeb0c0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bfb4aeb0a8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bfb4aeabc8 <col:36> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55bfb4aeb058 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55bfb4aeb028 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55bfb4aeadd8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55bfb4aeacf8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55bfb4aeac20 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55bfb4aeac08 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55bfb4aeabe8 <col:55> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55bfb4aeacd8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55bfb4aeac70 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55bfb4aeac58 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55bfb4aeac38 <col:74> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55bfb4aeacc0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55bfb4aeaca8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55bfb4aeac88 <col:93> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55bfb4aeadb8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55bfb4aead50 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55bfb4aead38 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55bfb4aead18 <col:112> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55bfb4aeada0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55bfb4aead88 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55bfb4aead68 <col:131> '_Bool' lvalue Var 0x55bfb4ae3f98 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55bfb4aeb010 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55bfb4aeaff8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55bfb4aeadf8 <col:148> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55bfb4aeafd8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55bfb4aeafa8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55bfb4aeaeb8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55bfb4aeae70 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55bfb4aeae58 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55bfb4aeae18 <col:166> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55bfb4aeaea0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55bfb4aeae88 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55bfb4aeae38 <col:184> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55bfb4aeaf50 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55bfb4aeaf08 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55bfb4aeaed8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55bfb4aeaf90 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55bfb4aeaf68 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55bfb4aeaf30 <col:212> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55bfb4aeb6e8 <line:769:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4aeb140 <col:3> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55bfb4aeb6d0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bfb4aeb6a0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55bfb4aeb658 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bfb4aeb640 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bfb4aeb160 <col:20> '_Bool' lvalue Var 0x55bfb4ae4490 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bfb4aeb688 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bfb4aeb670 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bfb4aeb180 <col:36> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55bfb4aeb620 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55bfb4aeb5f0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55bfb4aeb390 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55bfb4aeb2b0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55bfb4aeb1d8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55bfb4aeb1c0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55bfb4aeb1a0 <col:55> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55bfb4aeb290 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55bfb4aeb228 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55bfb4aeb210 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55bfb4aeb1f0 <col:74> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55bfb4aeb278 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55bfb4aeb260 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55bfb4aeb240 <col:93> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55bfb4aeb370 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55bfb4aeb308 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55bfb4aeb2f0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55bfb4aeb2d0 <col:112> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55bfb4aeb358 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55bfb4aeb340 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55bfb4aeb320 <col:131> '_Bool' lvalue Var 0x55bfb4ae3f98 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55bfb4aeb5d8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55bfb4aeb5c0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55bfb4aeb3b0 <col:148> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55bfb4aeb5a0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55bfb4aeb570 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55bfb4aeb470 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55bfb4aeb428 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55bfb4aeb410 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55bfb4aeb3d0 <col:166> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55bfb4aeb458 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55bfb4aeb440 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55bfb4aeb3f0 <col:184> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55bfb4aeb540 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55bfb4aeb4c0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55bfb4aeb490 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55bfb4aeb558 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55bfb4aeb518 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55bfb4aeb4e8 <col:219> 'int' 0
|   |-BinaryOperator 0x55bfb4aebc90 <line:770:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4aeb708 <col:3> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55bfb4aebc78 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bfb4aebc48 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55bfb4aebc00 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bfb4aebbe8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bfb4aeb728 <col:20> '_Bool' lvalue Var 0x55bfb4ae4490 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bfb4aebc30 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bfb4aebc18 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bfb4aeb748 <col:36> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55bfb4aebbc8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55bfb4aebb98 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55bfb4aeb958 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55bfb4aeb878 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55bfb4aeb7a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55bfb4aeb788 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55bfb4aeb768 <col:55> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55bfb4aeb858 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55bfb4aeb7f0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55bfb4aeb7d8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55bfb4aeb7b8 <col:74> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55bfb4aeb840 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55bfb4aeb828 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55bfb4aeb808 <col:93> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55bfb4aeb938 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55bfb4aeb8d0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55bfb4aeb8b8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55bfb4aeb898 <col:112> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55bfb4aeb920 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55bfb4aeb908 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55bfb4aeb8e8 <col:131> '_Bool' lvalue Var 0x55bfb4ae3f98 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55bfb4aebb80 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55bfb4aebb68 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55bfb4aeb978 <col:148> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55bfb4aebb48 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55bfb4aebb18 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55bfb4aeba38 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55bfb4aeb9f0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55bfb4aeb9d8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55bfb4aeb998 <col:166> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55bfb4aeba20 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55bfb4aeba08 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55bfb4aeb9b8 <col:184> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55bfb4aebad0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55bfb4aeba88 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55bfb4aeba58 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55bfb4aebb00 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55bfb4aebae8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55bfb4aebab0 <col:212> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55bfb4aec278 <line:771:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4aebcb0 <col:3> '_Bool' lvalue Var 0x55bfb4ae3f98 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55bfb4aec260 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bfb4aec230 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55bfb4aec1e8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bfb4aec1d0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bfb4aebcd0 <col:20> '_Bool' lvalue Var 0x55bfb4ae4490 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bfb4aec218 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bfb4aec200 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bfb4aebcf0 <col:36> '_Bool' lvalue Var 0x55bfb4ae3f98 'x$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x55bfb4aec1b0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55bfb4aec180 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55bfb4aebf00 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55bfb4aebe20 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55bfb4aebd48 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55bfb4aebd30 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55bfb4aebd10 <col:55> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55bfb4aebe00 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55bfb4aebd98 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55bfb4aebd80 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55bfb4aebd60 <col:74> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55bfb4aebde8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55bfb4aebdd0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55bfb4aebdb0 <col:93> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55bfb4aebee0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55bfb4aebe78 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55bfb4aebe60 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55bfb4aebe40 <col:112> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55bfb4aebec8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55bfb4aebeb0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55bfb4aebe90 <col:131> '_Bool' lvalue Var 0x55bfb4ae3f98 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55bfb4aec168 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55bfb4aec150 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55bfb4aebf20 <col:148> '_Bool' lvalue Var 0x55bfb4ae3f98 'x$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x55bfb4aec130 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55bfb4aec100 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55bfb4aec000 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55bfb4aebfb8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55bfb4aebfa0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55bfb4aebf40 <col:166> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55bfb4aebfe8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55bfb4aebfd0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55bfb4aebf60 <col:184> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55bfb4aec0d0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55bfb4aec050 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55bfb4aec020 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55bfb4aec0e8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55bfb4aec0a8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55bfb4aec078 <col:219> 'int' 0
|   |-BinaryOperator 0x55bfb4aec2f0 <line:772:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55bfb4aec298 <col:3> 'int' lvalue Var 0x55bfb4ae3948 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x55bfb4aec2d8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bfb4aec2b8 <col:25> 'int' lvalue Var 0x55bfb4ae3b58 'x' 'int'
|   |-BinaryOperator 0x55bfb4aec420 <line:773:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55bfb4aec310 <col:3> 'int' lvalue Var 0x55bfb4ae3b58 'x' 'int'
|   | `-ConditionalOperator 0x55bfb4aec3f0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55bfb4aec3a8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55bfb4aec390 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55bfb4aec330 <col:7> '_Bool' lvalue Var 0x55bfb4ae3bf0 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55bfb4aec3c0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bfb4aec350 <col:25> 'int' lvalue Var 0x55bfb4ae3c70 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55bfb4aec3d8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55bfb4aec370 <col:37> 'int' lvalue Var 0x55bfb4ae3b58 'x' 'int'
|   |-BinaryOperator 0x55bfb4aec4b8 <line:774:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4aec440 <col:3> '_Bool' lvalue Var 0x55bfb4ae3bf0 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55bfb4aec490 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55bfb4aec460 <col:28> 'int' 0
|   |-CallExpr 0x55bfb4aec510 <line:775:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bfb4aec4f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bfb4aec4d8 <col:3> 'void ()' Function 0x55bfb4a8a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55bfb4aec568 <line:776:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bfb4aec550 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bfb4aec530 <col:3> 'void ()' Function 0x55bfb4a8a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bfb4aec850 <line:777:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55bfb4aec588 <col:3> 'int' lvalue Var 0x55bfb4ae3b58 'x' 'int'
|   | `-ConditionalOperator 0x55bfb4aec820 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55bfb4aec648 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55bfb4aec600 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55bfb4aec5e8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55bfb4aec5a8 <col:7> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55bfb4aec630 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55bfb4aec618 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55bfb4aec5c8 <col:25> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55bfb4aec808 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bfb4aec668 <col:42> 'int' lvalue Var 0x55bfb4ae4110 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55bfb4aec7e8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55bfb4aec7b8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55bfb4aec728 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55bfb4aec6e0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55bfb4aec6c8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55bfb4aec688 <col:55> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55bfb4aec710 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55bfb4aec6f8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55bfb4aec6a8 <col:73> '_Bool' lvalue Var 0x55bfb4ae3f98 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55bfb4aec788 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55bfb4aec748 <col:90> 'int' lvalue Var 0x55bfb4ae4208 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55bfb4aec7a0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bfb4aec768 <col:102> 'int' lvalue Var 0x55bfb4ae3b58 'x' 'int'
|   |-BinaryOperator 0x55bfb4aeca58 <line:778:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4aec870 <col:3> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55bfb4aeca40 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bfb4aeca10 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55bfb4aec930 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55bfb4aec8e8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55bfb4aec8d0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55bfb4aec890 <col:20> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55bfb4aec918 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55bfb4aec900 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55bfb4aec8b0 <col:38> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bfb4aec9c8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55bfb4aec980 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55bfb4aec950 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55bfb4aec9f8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55bfb4aec9e0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bfb4aec9a8 <col:66> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55bfb4aecd40 <line:779:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4aeca78 <col:3> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55bfb4aecd28 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bfb4aeccf8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55bfb4aecc18 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55bfb4aecb38 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55bfb4aecaf0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55bfb4aecad8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55bfb4aeca98 <col:20> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55bfb4aecb20 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55bfb4aecb08 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55bfb4aecab8 <col:38> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55bfb4aecbf8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55bfb4aecbb0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55bfb4aecb98 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55bfb4aecb58 <col:56> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55bfb4aecbe0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55bfb4aecbc8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55bfb4aecb78 <col:74> '_Bool' lvalue Var 0x55bfb4ae3f98 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bfb4aeccb0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55bfb4aecc68 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55bfb4aecc38 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55bfb4aecce0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55bfb4aeccc8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bfb4aecc90 <col:102> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55bfb4aecf48 <line:780:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4aecd60 <col:3> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55bfb4aecf30 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bfb4aecf00 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55bfb4aece20 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55bfb4aecdd8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55bfb4aecdc0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55bfb4aecd80 <col:20> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55bfb4aece08 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55bfb4aecdf0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55bfb4aecda0 <col:38> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bfb4aeceb8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55bfb4aece70 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55bfb4aece40 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55bfb4aecee8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55bfb4aeced0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bfb4aece98 <col:66> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55bfb4aed258 <line:781:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55bfb4aecf68 <col:3> '_Bool' lvalue Var 0x55bfb4ae3f98 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55bfb4aed240 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bfb4aed210 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55bfb4aed130 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55bfb4aed050 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55bfb4aed008 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55bfb4aecff0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55bfb4aecfb0 <col:20> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55bfb4aed038 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55bfb4aed020 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55bfb4aecfd0 <col:38> '_Bool' lvalue Var 0x55bfb4ae3dd8 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55bfb4aed110 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55bfb4aed0c8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55bfb4aed0b0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55bfb4aed070 <col:56> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55bfb4aed0f8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55bfb4aed0e0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55bfb4aed090 <col:74> '_Bool' lvalue Var 0x55bfb4ae3f98 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bfb4aed1c8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55bfb4aed180 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55bfb4aed150 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55bfb4aed1f8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55bfb4aed1e0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bfb4aed1a8 <col:102> '_Bool' lvalue Var 0x55bfb4ae3f98 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55bfb4aed2b0 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bfb4aed298 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bfb4aed278 <col:3> 'void ()' Function 0x55bfb4a8a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55bfb4aed308 <line:783:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bfb4aed2f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bfb4aed2d0 <col:3> 'void ()' Function 0x55bfb4a8a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bfb4aed3c0 <line:784:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55bfb4aed328 <col:3> 'int' lvalue Var 0x55bfb4ae35e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55bfb4aed3a0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55bfb4aed388 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bfb4aed348 <col:22> 'int' lvalue Var 0x55bfb4ae35e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55bfb4aed368 <col:41> 'int' 1
|   |-CallExpr 0x55bfb4aed418 <line:785:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bfb4aed400 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bfb4aed3e0 <col:3> 'void ()' Function 0x55bfb4a8a570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55bfb4aed490 <line:786:3, col:36>
|     `-CallExpr 0x55bfb4aed470 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55bfb4aed458 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55bfb4aed438 <col:10> 'void *(void)' Function 0x55bfb4a89fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55bfb4aed630 prev 0x55bfb4ae3330 <line:788:1, line:790:1> line:788:6 fence 'void ()'
| `-CompoundStmt 0x55bfb4aed6d0 <line:789:1, line:790:1>
|-FunctionDecl 0x55bfb4aed700 prev 0x55bfb4ae33f0 <line:791:1, line:793:1> line:791:6 isync 'void ()'
| `-CompoundStmt 0x55bfb4aed7a0 <line:792:1, line:793:1>
|-FunctionDecl 0x55bfb4aed7d0 prev 0x55bfb4ae34b0 <line:794:1, line:796:1> line:794:6 lwfence 'void ()'
| `-CompoundStmt 0x55bfb4aed870 <line:795:1, line:796:1>
`-FunctionDecl 0x55bfb4aed8d8 <line:797:1, line:832:1> line:797:5 main 'int ()'
  `-CompoundStmt 0x55bfb4af1c70 <line:798:1, line:832:1>
    |-DeclStmt 0x55bfb4aed9f0 <line:799:3, col:18>
    | `-VarDecl 0x55bfb4aed988 <col:3, col:13> col:13 used t1621 'pthread_t':'unsigned long'
    |-CallExpr 0x55bfb4aedbf8 <line:800:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55bfb4aedbe0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55bfb4aeda08 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55bfb4aca9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55bfb4aeda48 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55bfb4aeda28 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55bfb4aed988 't1621' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55bfb4aedc38 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55bfb4aedac0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55bfb4aeda98 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55bfb4aeda60 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55bfb4aedc50 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55bfb4aedae0 <col:39> 'void *(void *)' Function 0x55bfb4ae45a8 'P0' 'void *(void *)'
    | `-ParenExpr 0x55bfb4aedb60 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55bfb4aedb38 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55bfb4aedb00 <col:52> 'int' 0
    |-DeclStmt 0x55bfb4aedce0 <line:801:3, col:18>
    | `-VarDecl 0x55bfb4aedc78 <col:3, col:13> col:13 used t1622 'pthread_t':'unsigned long'
    |-CallExpr 0x55bfb4aede88 <line:802:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55bfb4aede70 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55bfb4aedcf8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55bfb4aca9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55bfb4aedd38 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55bfb4aedd18 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55bfb4aedc78 't1622' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55bfb4aedec8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55bfb4aeddb0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55bfb4aedd88 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55bfb4aedd50 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55bfb4aedee0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55bfb4aeddd0 <col:39> 'void *(void *)' Function 0x55bfb4ae9188 'P1' 'void *(void *)'
    | `-ParenExpr 0x55bfb4aede50 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55bfb4aede28 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55bfb4aeddf0 <col:52> 'int' 0
    |-CallExpr 0x55bfb4aedf30 <line:803:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55bfb4aedf18 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55bfb4aedef8 <col:3> 'void ()' Function 0x55bfb4a8a4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55bfb4aee010 <line:804:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55bfb4aedf50 <col:3> '_Bool' lvalue Var 0x55bfb4ae39e0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55bfb4aedff8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55bfb4aedfd8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55bfb4aedfc0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55bfb4aedf70 <col:21> 'int' lvalue Var 0x55bfb4ae35e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55bfb4aedf90 <col:41> 'int' 2
    |-CallExpr 0x55bfb4aee068 <line:805:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55bfb4aee050 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55bfb4aee030 <col:3> 'void ()' Function 0x55bfb4a8a570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55bfb4aee0e0 <line:806:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55bfb4aee0c8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55bfb4aee088 <col:3> 'void (int)' Function 0x55bfb4a89e50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55bfb4aee120 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55bfb4aee108 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55bfb4aee0a8 <col:21> '_Bool' lvalue Var 0x55bfb4ae39e0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55bfb4aee170 <line:807:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55bfb4aee158 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55bfb4aee138 <col:3> 'void ()' Function 0x55bfb4a8a4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55bfb4aee458 <line:808:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55bfb4aee190 <col:3> 'int' lvalue Var 0x55bfb4ae3b58 'x' 'int'
    | `-ConditionalOperator 0x55bfb4aee428 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55bfb4aee250 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55bfb4aee208 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55bfb4aee1f0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55bfb4aee1b0 <col:7> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55bfb4aee238 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55bfb4aee220 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55bfb4aee1d0 <col:25> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55bfb4aee410 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55bfb4aee270 <col:42> 'int' lvalue Var 0x55bfb4ae4110 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55bfb4aee3f0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55bfb4aee3c0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55bfb4aee330 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55bfb4aee2e8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55bfb4aee2d0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55bfb4aee290 <col:55> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55bfb4aee318 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55bfb4aee300 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55bfb4aee2b0 <col:73> '_Bool' lvalue Var 0x55bfb4ae3e50 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55bfb4aee390 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55bfb4aee350 <col:90> 'int' lvalue Var 0x55bfb4ae4208 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55bfb4aee3a8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55bfb4aee370 <col:102> 'int' lvalue Var 0x55bfb4ae3b58 'x' 'int'
    |-BinaryOperator 0x55bfb4aee660 <line:809:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55bfb4aee478 <col:3> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55bfb4aee648 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55bfb4aee618 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55bfb4aee538 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55bfb4aee4f0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55bfb4aee4d8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55bfb4aee498 <col:20> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55bfb4aee520 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55bfb4aee508 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55bfb4aee4b8 <col:38> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55bfb4aee5d0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55bfb4aee588 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55bfb4aee558 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55bfb4aee600 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55bfb4aee5e8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55bfb4aee5b0 <col:66> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55bfb4aee948 <line:810:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55bfb4aee680 <col:3> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55bfb4aee930 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55bfb4aee900 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55bfb4aee820 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55bfb4aee740 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55bfb4aee6f8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55bfb4aee6e0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55bfb4aee6a0 <col:20> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55bfb4aee728 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55bfb4aee710 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55bfb4aee6c0 <col:38> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55bfb4aee800 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55bfb4aee7b8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55bfb4aee7a0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55bfb4aee760 <col:56> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55bfb4aee7e8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55bfb4aee7d0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55bfb4aee780 <col:74> '_Bool' lvalue Var 0x55bfb4ae3e50 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55bfb4aee8b8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55bfb4aee870 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55bfb4aee840 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55bfb4aee8e8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55bfb4aee8d0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55bfb4aee898 <col:102> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55bfb4aeeb50 <line:811:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55bfb4aee968 <col:3> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55bfb4aeeb38 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55bfb4aeeb08 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55bfb4aeea28 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55bfb4aee9e0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55bfb4aee9c8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55bfb4aee988 <col:20> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55bfb4aeea10 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55bfb4aee9f8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55bfb4aee9a8 <col:38> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55bfb4aeeac0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55bfb4aeea78 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55bfb4aeea48 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55bfb4aeeaf0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55bfb4aeead8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55bfb4aeeaa0 <col:66> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55bfb4aeee38 <line:812:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55bfb4aeeb70 <col:3> '_Bool' lvalue Var 0x55bfb4ae3e50 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55bfb4aeee20 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55bfb4aeedf0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55bfb4aeed10 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55bfb4aeec30 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55bfb4aeebe8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55bfb4aeebd0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55bfb4aeeb90 <col:20> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55bfb4aeec18 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55bfb4aeec00 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55bfb4aeebb0 <col:38> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55bfb4aeecf0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55bfb4aeeca8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55bfb4aeec90 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55bfb4aeec50 <col:56> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55bfb4aeecd8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55bfb4aeecc0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55bfb4aeec70 <col:74> '_Bool' lvalue Var 0x55bfb4ae3e50 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55bfb4aeeda8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55bfb4aeed60 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55bfb4aeed30 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55bfb4aeedd8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55bfb4aeedc0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55bfb4aeed88 <col:102> '_Bool' lvalue Var 0x55bfb4ae3e50 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55bfb4aeee90 <line:813:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55bfb4aeee78 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55bfb4aeee58 <col:3> 'void ()' Function 0x55bfb4a8a570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55bfb4aeeee8 <line:814:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55bfb4aeeed0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55bfb4aeeeb0 <col:3> 'void ()' Function 0x55bfb4a8a4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55bfb4aeef80 <line:815:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55bfb4aeef08 <col:3> '_Bool' lvalue Var 0x55bfb4ae4418 'weak$$choice0' '_Bool'
    | `-CallExpr 0x55bfb4aeef60 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55bfb4aeef48 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55bfb4aeef28 <col:19> '_Bool (void)' Function 0x55bfb4a89c80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55bfb4aef028 <line:816:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55bfb4aeefa0 <col:3> '_Bool' lvalue Var 0x55bfb4ae4490 'weak$$choice2' '_Bool'
    | `-CallExpr 0x55bfb4aef008 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55bfb4aeeff0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55bfb4aeefd0 <col:19> '_Bool (void)' Function 0x55bfb4a89c80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55bfb4aef0a0 <line:817:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x55bfb4aef048 <col:3> '_Bool' lvalue Var 0x55bfb4ae3bf0 'x$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x55bfb4aef088 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x55bfb4aef068 <col:21> '_Bool' lvalue Var 0x55bfb4ae4490 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x55bfb4aef118 <line:818:3, col:15> 'int' '='
    | |-DeclRefExpr 0x55bfb4aef0c0 <col:3> 'int' lvalue Var 0x55bfb4ae3c70 'x$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x55bfb4aef100 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55bfb4aef0e0 <col:15> 'int' lvalue Var 0x55bfb4ae3b58 'x' 'int'
    |-BinaryOperator 0x55bfb4aef550 <line:819:3, col:162> 'int' '='
    | |-DeclRefExpr 0x55bfb4aef138 <col:3> 'int' lvalue Var 0x55bfb4ae3b58 'x' 'int'
    | `-ConditionalOperator 0x55bfb4aef520 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x55bfb4aef348 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x55bfb4aef268 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x55bfb4aef190 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x55bfb4aef178 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x55bfb4aef158 <col:8> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x55bfb4aef248 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x55bfb4aef1e0 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x55bfb4aef1c8 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x55bfb4aef1a8 <col:27> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x55bfb4aef230 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x55bfb4aef218 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x55bfb4aef1f8 <col:46> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x55bfb4aef328 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x55bfb4aef2c0 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x55bfb4aef2a8 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55bfb4aef288 <col:65> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x55bfb4aef310 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x55bfb4aef2f8 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x55bfb4aef2d8 <col:84> '_Bool' lvalue Var 0x55bfb4ae3e50 'x$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55bfb4aef508 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55bfb4aef368 <col:101> 'int' lvalue Var 0x55bfb4ae3b58 'x' 'int'
    |   `-ParenExpr 0x55bfb4aef4e8 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x55bfb4aef4b8 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x55bfb4aef428 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55bfb4aef3e0 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55bfb4aef3c8 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55bfb4aef388 <col:106> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55bfb4aef410 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55bfb4aef3f8 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55bfb4aef3a8 <col:124> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55bfb4aef488 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55bfb4aef448 <col:141> 'int' lvalue Var 0x55bfb4ae4110 'x$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x55bfb4aef4a0 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55bfb4aef468 <col:153> 'int' lvalue Var 0x55bfb4ae4208 'x$w_buff1' 'int'
    |-BinaryOperator 0x55bfb4aefa60 <line:820:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55bfb4aef570 <col:3> 'int' lvalue Var 0x55bfb4ae4110 'x$w_buff0' 'int'
    | `-ConditionalOperator 0x55bfb4aefa30 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55bfb4aefa00 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55bfb4aef9e8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55bfb4aef590 <col:15> '_Bool' lvalue Var 0x55bfb4ae4490 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55bfb4aefa18 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55bfb4aef5b0 <col:31> 'int' lvalue Var 0x55bfb4ae4110 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55bfb4aef9c8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55bfb4aef998 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55bfb4aef7c0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55bfb4aef6e0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55bfb4aef608 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55bfb4aef5f0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55bfb4aef5d0 <col:45> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55bfb4aef6c0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55bfb4aef658 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55bfb4aef640 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55bfb4aef620 <col:64> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55bfb4aef6a8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55bfb4aef690 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55bfb4aef670 <col:83> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55bfb4aef7a0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55bfb4aef738 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55bfb4aef720 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55bfb4aef700 <col:102> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55bfb4aef788 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55bfb4aef770 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55bfb4aef750 <col:121> '_Bool' lvalue Var 0x55bfb4ae3e50 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55bfb4aef980 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55bfb4aef7e0 <col:138> 'int' lvalue Var 0x55bfb4ae4110 'x$w_buff0' 'int'
    |       `-ParenExpr 0x55bfb4aef960 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55bfb4aef930 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55bfb4aef8a0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55bfb4aef858 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55bfb4aef840 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55bfb4aef800 <col:151> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55bfb4aef888 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55bfb4aef870 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55bfb4aef820 <col:169> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55bfb4aef900 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55bfb4aef8c0 <col:186> 'int' lvalue Var 0x55bfb4ae4110 'x$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x55bfb4aef918 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55bfb4aef8e0 <col:198> 'int' lvalue Var 0x55bfb4ae4110 'x$w_buff0' 'int'
    |-BinaryOperator 0x55bfb4aeff70 <line:821:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55bfb4aefa80 <col:3> 'int' lvalue Var 0x55bfb4ae4208 'x$w_buff1' 'int'
    | `-ConditionalOperator 0x55bfb4aeff40 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55bfb4aeff10 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55bfb4aefef8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55bfb4aefaa0 <col:15> '_Bool' lvalue Var 0x55bfb4ae4490 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55bfb4aeff28 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55bfb4aefac0 <col:31> 'int' lvalue Var 0x55bfb4ae4208 'x$w_buff1' 'int'
    |   `-ParenExpr 0x55bfb4aefed8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55bfb4aefea8 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55bfb4aefcd0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55bfb4aefbf0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55bfb4aefb18 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55bfb4aefb00 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55bfb4aefae0 <col:45> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55bfb4aefbd0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55bfb4aefb68 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55bfb4aefb50 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55bfb4aefb30 <col:64> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55bfb4aefbb8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55bfb4aefba0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55bfb4aefb80 <col:83> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55bfb4aefcb0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55bfb4aefc48 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55bfb4aefc30 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55bfb4aefc10 <col:102> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55bfb4aefc98 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55bfb4aefc80 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55bfb4aefc60 <col:121> '_Bool' lvalue Var 0x55bfb4ae3e50 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55bfb4aefe90 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55bfb4aefcf0 <col:138> 'int' lvalue Var 0x55bfb4ae4208 'x$w_buff1' 'int'
    |       `-ParenExpr 0x55bfb4aefe70 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55bfb4aefe40 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55bfb4aefdb0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55bfb4aefd68 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55bfb4aefd50 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55bfb4aefd10 <col:151> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55bfb4aefd98 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55bfb4aefd80 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55bfb4aefd30 <col:169> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55bfb4aefe10 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55bfb4aefdd0 <col:186> 'int' lvalue Var 0x55bfb4ae4208 'x$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x55bfb4aefe28 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55bfb4aefdf0 <col:198> 'int' lvalue Var 0x55bfb4ae4208 'x$w_buff1' 'int'
    |-BinaryOperator 0x55bfb4af0528 <line:822:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55bfb4aeff90 <col:3> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55bfb4af0510 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55bfb4af04e0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55bfb4af0498 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55bfb4af0480 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55bfb4aeffb0 <col:20> '_Bool' lvalue Var 0x55bfb4ae4490 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55bfb4af04c8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55bfb4af04b0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55bfb4aeffe0 <col:36> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x55bfb4af0460 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55bfb4af0430 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55bfb4af01f0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55bfb4af0110 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55bfb4af0038 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55bfb4af0020 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55bfb4af0000 <col:55> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55bfb4af00f0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55bfb4af0088 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55bfb4af0070 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55bfb4af0050 <col:74> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55bfb4af00d8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55bfb4af00c0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55bfb4af00a0 <col:93> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55bfb4af01d0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55bfb4af0168 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55bfb4af0150 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55bfb4af0130 <col:112> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55bfb4af01b8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55bfb4af01a0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55bfb4af0180 <col:131> '_Bool' lvalue Var 0x55bfb4ae3e50 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55bfb4af0418 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55bfb4af0400 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55bfb4af0210 <col:148> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x55bfb4af03e0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55bfb4af03b0 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55bfb4af02d0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55bfb4af0288 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55bfb4af0270 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55bfb4af0230 <col:166> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55bfb4af02b8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55bfb4af02a0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55bfb4af0250 <col:184> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55bfb4af0368 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55bfb4af0320 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55bfb4af02f0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55bfb4af0398 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55bfb4af0380 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55bfb4af0348 <col:212> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55bfb4af0af0 <line:823:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55bfb4af0548 <col:3> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55bfb4af0ad8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55bfb4af0aa8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55bfb4af0a60 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55bfb4af0a48 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55bfb4af0568 <col:20> '_Bool' lvalue Var 0x55bfb4ae4490 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55bfb4af0a90 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55bfb4af0a78 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55bfb4af0588 <col:36> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x55bfb4af0a28 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55bfb4af09f8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55bfb4af0798 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55bfb4af06b8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55bfb4af05e0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55bfb4af05c8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55bfb4af05a8 <col:55> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55bfb4af0698 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55bfb4af0630 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55bfb4af0618 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55bfb4af05f8 <col:74> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55bfb4af0680 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55bfb4af0668 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55bfb4af0648 <col:93> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55bfb4af0778 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55bfb4af0710 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55bfb4af06f8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55bfb4af06d8 <col:112> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55bfb4af0760 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55bfb4af0748 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55bfb4af0728 <col:131> '_Bool' lvalue Var 0x55bfb4ae3e50 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55bfb4af09e0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55bfb4af09c8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55bfb4af07b8 <col:148> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x55bfb4af09a8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55bfb4af0978 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55bfb4af0878 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55bfb4af0830 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55bfb4af0818 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55bfb4af07d8 <col:166> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55bfb4af0860 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55bfb4af0848 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55bfb4af07f8 <col:184> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55bfb4af0948 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55bfb4af08c8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55bfb4af0898 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55bfb4af0960 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55bfb4af0920 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55bfb4af08f0 <col:219> 'int' 0
    |-BinaryOperator 0x55bfb4af10b8 <line:824:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55bfb4af0b10 <col:3> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55bfb4af10a0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55bfb4af1070 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55bfb4af1028 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55bfb4af1010 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55bfb4af0b30 <col:20> '_Bool' lvalue Var 0x55bfb4ae4490 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55bfb4af1058 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55bfb4af1040 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55bfb4af0b50 <col:36> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x55bfb4af0ff0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55bfb4af0fa0 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55bfb4af0d60 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55bfb4af0c80 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55bfb4af0ba8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55bfb4af0b90 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55bfb4af0b70 <col:55> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55bfb4af0c60 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55bfb4af0bf8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55bfb4af0be0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55bfb4af0bc0 <col:74> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55bfb4af0c48 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55bfb4af0c30 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55bfb4af0c10 <col:93> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55bfb4af0d40 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55bfb4af0cd8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55bfb4af0cc0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55bfb4af0ca0 <col:112> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55bfb4af0d28 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55bfb4af0d10 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55bfb4af0cf0 <col:131> '_Bool' lvalue Var 0x55bfb4ae3e50 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55bfb4af0f88 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55bfb4af0f70 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55bfb4af0d80 <col:148> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x55bfb4af0f50 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55bfb4af0f20 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55bfb4af0e40 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55bfb4af0df8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55bfb4af0de0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55bfb4af0da0 <col:166> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55bfb4af0e28 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55bfb4af0e10 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55bfb4af0dc0 <col:184> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55bfb4af0ed8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55bfb4af0e90 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55bfb4af0e60 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55bfb4af0f08 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55bfb4af0ef0 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55bfb4af0eb8 <col:212> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55bfb4af1680 <line:825:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55bfb4af10d8 <col:3> '_Bool' lvalue Var 0x55bfb4ae3e50 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55bfb4af1668 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55bfb4af1638 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55bfb4af15f0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55bfb4af15d8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55bfb4af10f8 <col:20> '_Bool' lvalue Var 0x55bfb4ae4490 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55bfb4af1620 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55bfb4af1608 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55bfb4af1118 <col:36> '_Bool' lvalue Var 0x55bfb4ae3e50 'x$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x55bfb4af15b8 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55bfb4af1588 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55bfb4af1328 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55bfb4af1248 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55bfb4af1170 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55bfb4af1158 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55bfb4af1138 <col:55> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55bfb4af1228 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55bfb4af11c0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55bfb4af11a8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55bfb4af1188 <col:74> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55bfb4af1210 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55bfb4af11f8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55bfb4af11d8 <col:93> '_Bool' lvalue Var 0x55bfb4ae4280 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55bfb4af1308 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55bfb4af12a0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55bfb4af1288 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55bfb4af1268 <col:112> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55bfb4af12f0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55bfb4af12d8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55bfb4af12b8 <col:131> '_Bool' lvalue Var 0x55bfb4ae3e50 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55bfb4af1570 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55bfb4af1558 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55bfb4af1348 <col:148> '_Bool' lvalue Var 0x55bfb4ae3e50 'x$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x55bfb4af1538 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55bfb4af1508 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55bfb4af1408 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55bfb4af13c0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55bfb4af13a8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55bfb4af1368 <col:166> '_Bool' lvalue Var 0x55bfb4ae4188 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55bfb4af13f0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55bfb4af13d8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55bfb4af1388 <col:184> '_Bool' lvalue Var 0x55bfb4ae3ce8 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55bfb4af14d8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55bfb4af1458 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55bfb4af1428 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55bfb4af14f0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55bfb4af14b0 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55bfb4af1480 <col:219> 'int' 0
    |-BinaryOperator 0x55bfb4af1950 <line:826:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x55bfb4af16a0 <col:3> '_Bool' lvalue Var 0x55bfb4ae3a58 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55bfb4af1938 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55bfb4af1920 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55bfb4af1900 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x55bfb4af18e0 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x55bfb4af1848 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x55bfb4af17b0 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x55bfb4af1718 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55bfb4af1700 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55bfb4af16c0 <col:23> 'int' lvalue Var 0x55bfb4ae3b58 'x' 'int'
    |         | | | `-IntegerLiteral 0x55bfb4af16e0 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x55bfb4af1790 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55bfb4af1778 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55bfb4af1738 <col:33> 'int' lvalue Var 0x55bfb4ae3708 '__unbuffered_p0_EAX' 'int'
    |         | |   `-IntegerLiteral 0x55bfb4af1758 <col:56> 'int' 1
    |         | `-BinaryOperator 0x55bfb4af1828 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55bfb4af1810 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55bfb4af17d0 <col:61> 'int' lvalue Var 0x55bfb4ae3828 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x55bfb4af17f0 <col:84> 'int' 1
    |         `-BinaryOperator 0x55bfb4af18c0 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x55bfb4af18a8 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55bfb4af1868 <col:89> 'int' lvalue Var 0x55bfb4ae3948 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x55bfb4af1888 <col:112> 'int' 0
    |-BinaryOperator 0x55bfb4af1a80 <line:827:3, col:37> 'int' '='
    | |-DeclRefExpr 0x55bfb4af1970 <col:3> 'int' lvalue Var 0x55bfb4ae3b58 'x' 'int'
    | `-ConditionalOperator 0x55bfb4af1a50 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x55bfb4af1a08 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55bfb4af19f0 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55bfb4af1990 <col:7> '_Bool' lvalue Var 0x55bfb4ae3bf0 'x$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x55bfb4af1a20 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55bfb4af19b0 <col:25> 'int' lvalue Var 0x55bfb4ae3c70 'x$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x55bfb4af1a38 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55bfb4af19d0 <col:37> 'int' lvalue Var 0x55bfb4ae3b58 'x' 'int'
    |-BinaryOperator 0x55bfb4af1b18 <line:828:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x55bfb4af1aa0 <col:3> '_Bool' lvalue Var 0x55bfb4ae3bf0 'x$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x55bfb4af1af0 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x55bfb4af1ac0 <col:28> 'int' 0
    |-CallExpr 0x55bfb4af1b70 <line:829:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55bfb4af1b58 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55bfb4af1b38 <col:3> 'void ()' Function 0x55bfb4a8a570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55bfb4af1be8 <line:830:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55bfb4af1bd0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55bfb4af1b90 <col:3> 'void (int)' Function 0x55bfb4a8a238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55bfb4af1c28 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55bfb4af1c10 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55bfb4af1bb0 <col:21> '_Bool' lvalue Var 0x55bfb4ae3a58 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55bfb4af1c60 <line:831:3, col:10>
      `-IntegerLiteral 0x55bfb4af1c40 <col:10> 'int' 0
