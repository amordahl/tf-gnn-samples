TranslationUnitDecl 0x5636cc732dd8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5636cc733698 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5636cc733370 '__int128'
|-TypedefDecl 0x5636cc733708 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5636cc733390 'unsigned __int128'
|-TypedefDecl 0x5636cc733a10 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5636cc7337e0 'struct __NSConstantString_tag'
|   `-Record 0x5636cc733760 '__NSConstantString_tag'
|-TypedefDecl 0x5636cc733ab8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5636cc733a70 'char *'
|   `-BuiltinType 0x5636cc732e70 'char'
|-TypedefDecl 0x5636cc772d40 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5636cc733d50 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5636cc733b90 'struct __va_list_tag'
|     `-Record 0x5636cc733b10 '__va_list_tag'
|-FunctionDecl 0x5636cc772e20 <array-examples/standard_init8_false-unreach-call_ground.i:1:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5636cc772ff0 <line:2:1, col:79> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5636cc772f20 <col:24, col:28> col:28 used cond 'int'
| `-CompoundStmt 0x5636cc773230 <col:34, col:79>
|   `-IfStmt 0x5636cc773218 <col:36, col:77>
|     |-UnaryOperator 0x5636cc7730f0 <col:39, col:45> 'int' prefix '!' cannot overflow
|     | `-ImplicitCastExpr 0x5636cc7730d8 <col:40, col:45> 'int' <LValueToRValue>
|     |   `-ParenExpr 0x5636cc7730b8 <col:40, col:45> 'int' lvalue
|     |     `-DeclRefExpr 0x5636cc773098 <col:41> 'int' lvalue ParmVar 0x5636cc772f20 'cond' 'int'
|     `-CompoundStmt 0x5636cc773200 <col:48, col:77>
|       `-LabelStmt 0x5636cc7731e8 <col:50, col:74> 'ERROR'
|         `-CallExpr 0x5636cc773178 <col:57, col:74> 'void'
|           `-ImplicitCastExpr 0x5636cc773160 <col:57> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|             `-DeclRefExpr 0x5636cc773108 <col:57> 'void () __attribute__((noreturn))' Function 0x5636cc772e20 '__VERIFIER_error' 'void () __attribute__((noreturn))'
`-FunctionDecl 0x5636cc7732a8 <line:3:1, line:50:1> line:3:5 main 'int ()'
  `-CompoundStmt 0x5636cc798f40 <col:14, line:50:1>
    |-DeclStmt 0x5636cc773450 <line:4:3, col:17>
    | `-VarDecl 0x5636cc7733e8 <col:3, col:16> col:7 used a 'int [100000]'
    |-DeclStmt 0x5636cc773508 <line:5:3, col:12>
    | `-VarDecl 0x5636cc773480 <col:3, col:11> col:7 used i 'int' cinit
    |   `-IntegerLiteral 0x5636cc7734e8 <col:11> 'int' 0
    |-WhileStmt 0x5636cc773778 <line:6:3, line:9:3>
    | |-BinaryOperator 0x5636cc773578 <line:6:11, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x5636cc773560 <col:11> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x5636cc773520 <col:11> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    | | `-IntegerLiteral 0x5636cc773540 <col:15> 'int' 100000
    | `-CompoundStmt 0x5636cc773758 <col:24, line:9:3>
    |   |-BinaryOperator 0x5636cc773680 <line:7:5, col:12> 'int' '='
    |   | |-ArraySubscriptExpr 0x5636cc773640 <col:5, col:8> 'int' lvalue
    |   | | |-ImplicitCastExpr 0x5636cc773610 <col:5> 'int *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x5636cc773598 <col:5> 'int [100000]' lvalue Var 0x5636cc7733e8 'a' 'int [100000]'
    |   | | `-ImplicitCastExpr 0x5636cc773628 <col:7> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5636cc7735b8 <col:7> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    |   | `-IntegerLiteral 0x5636cc773660 <col:12> 'int' 42
    |   `-BinaryOperator 0x5636cc773738 <line:8:5, col:13> 'int' '='
    |     |-DeclRefExpr 0x5636cc7736a0 <col:5> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    |     `-BinaryOperator 0x5636cc773718 <col:9, col:13> 'int' '+'
    |       |-ImplicitCastExpr 0x5636cc773700 <col:9> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5636cc7736c0 <col:9> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    |       `-IntegerLiteral 0x5636cc7736e0 <col:13> 'int' 1
    |-BinaryOperator 0x5636cc7737d0 <line:10:3, col:7> 'int' '='
    | |-DeclRefExpr 0x5636cc773790 <col:3> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    | `-IntegerLiteral 0x5636cc7737b0 <col:7> 'int' 0
    |-WhileStmt 0x5636cc773a10 <line:11:3, line:14:3>
    | |-BinaryOperator 0x5636cc773848 <line:11:11, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x5636cc773830 <col:11> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x5636cc7737f0 <col:11> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    | | `-IntegerLiteral 0x5636cc773810 <col:15> 'int' 100000
    | `-CompoundStmt 0x5636cc7739f0 <col:24, line:14:3>
    |   |-BinaryOperator 0x5636cc773918 <line:12:5, col:12> 'int' '='
    |   | |-ArraySubscriptExpr 0x5636cc7738d8 <col:5, col:8> 'int' lvalue
    |   | | |-ImplicitCastExpr 0x5636cc7738a8 <col:5> 'int *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x5636cc773868 <col:5> 'int [100000]' lvalue Var 0x5636cc7733e8 'a' 'int [100000]'
    |   | | `-ImplicitCastExpr 0x5636cc7738c0 <col:7> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5636cc773888 <col:7> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    |   | `-IntegerLiteral 0x5636cc7738f8 <col:12> 'int' 43
    |   `-BinaryOperator 0x5636cc7739d0 <line:13:5, col:13> 'int' '='
    |     |-DeclRefExpr 0x5636cc773938 <col:5> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    |     `-BinaryOperator 0x5636cc7739b0 <col:9, col:13> 'int' '+'
    |       |-ImplicitCastExpr 0x5636cc773998 <col:9> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5636cc773958 <col:9> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    |       `-IntegerLiteral 0x5636cc773978 <col:13> 'int' 1
    |-BinaryOperator 0x5636cc773a68 <line:15:3, col:7> 'int' '='
    | |-DeclRefExpr 0x5636cc773a28 <col:3> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    | `-IntegerLiteral 0x5636cc773a48 <col:7> 'int' 0
    |-WhileStmt 0x5636cc773ca8 <line:16:3, line:19:3>
    | |-BinaryOperator 0x5636cc773ae0 <line:16:11, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x5636cc773ac8 <col:11> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x5636cc773a88 <col:11> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    | | `-IntegerLiteral 0x5636cc773aa8 <col:15> 'int' 100000
    | `-CompoundStmt 0x5636cc773c88 <col:24, line:19:3>
    |   |-BinaryOperator 0x5636cc773bb0 <line:17:5, col:12> 'int' '='
    |   | |-ArraySubscriptExpr 0x5636cc773b70 <col:5, col:8> 'int' lvalue
    |   | | |-ImplicitCastExpr 0x5636cc773b40 <col:5> 'int *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x5636cc773b00 <col:5> 'int [100000]' lvalue Var 0x5636cc7733e8 'a' 'int [100000]'
    |   | | `-ImplicitCastExpr 0x5636cc773b58 <col:7> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5636cc773b20 <col:7> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    |   | `-IntegerLiteral 0x5636cc773b90 <col:12> 'int' 44
    |   `-BinaryOperator 0x5636cc773c68 <line:18:5, col:13> 'int' '='
    |     |-DeclRefExpr 0x5636cc773bd0 <col:5> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    |     `-BinaryOperator 0x5636cc773c48 <col:9, col:13> 'int' '+'
    |       |-ImplicitCastExpr 0x5636cc773c30 <col:9> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5636cc773bf0 <col:9> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    |       `-IntegerLiteral 0x5636cc773c10 <col:13> 'int' 1
    |-BinaryOperator 0x5636cc773d00 <line:20:3, col:7> 'int' '='
    | |-DeclRefExpr 0x5636cc773cc0 <col:3> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    | `-IntegerLiteral 0x5636cc773ce0 <col:7> 'int' 0
    |-WhileStmt 0x5636cc798100 <line:21:3, line:24:3>
    | |-BinaryOperator 0x5636cc797f38 <line:21:11, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x5636cc797f20 <col:11> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x5636cc773d20 <col:11> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    | | `-IntegerLiteral 0x5636cc797f00 <col:15> 'int' 100000
    | `-CompoundStmt 0x5636cc7980e0 <col:24, line:24:3>
    |   |-BinaryOperator 0x5636cc798008 <line:22:5, col:12> 'int' '='
    |   | |-ArraySubscriptExpr 0x5636cc797fc8 <col:5, col:8> 'int' lvalue
    |   | | |-ImplicitCastExpr 0x5636cc797f98 <col:5> 'int *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x5636cc797f58 <col:5> 'int [100000]' lvalue Var 0x5636cc7733e8 'a' 'int [100000]'
    |   | | `-ImplicitCastExpr 0x5636cc797fb0 <col:7> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5636cc797f78 <col:7> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    |   | `-IntegerLiteral 0x5636cc797fe8 <col:12> 'int' 45
    |   `-BinaryOperator 0x5636cc7980c0 <line:23:5, col:13> 'int' '='
    |     |-DeclRefExpr 0x5636cc798028 <col:5> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    |     `-BinaryOperator 0x5636cc7980a0 <col:9, col:13> 'int' '+'
    |       |-ImplicitCastExpr 0x5636cc798088 <col:9> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5636cc798048 <col:9> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    |       `-IntegerLiteral 0x5636cc798068 <col:13> 'int' 1
    |-BinaryOperator 0x5636cc798158 <line:25:3, col:7> 'int' '='
    | |-DeclRefExpr 0x5636cc798118 <col:3> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    | `-IntegerLiteral 0x5636cc798138 <col:7> 'int' 0
    |-WhileStmt 0x5636cc798398 <line:26:3, line:29:3>
    | |-BinaryOperator 0x5636cc7981d0 <line:26:11, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x5636cc7981b8 <col:11> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x5636cc798178 <col:11> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    | | `-IntegerLiteral 0x5636cc798198 <col:15> 'int' 100000
    | `-CompoundStmt 0x5636cc798378 <col:24, line:29:3>
    |   |-BinaryOperator 0x5636cc7982a0 <line:27:5, col:12> 'int' '='
    |   | |-ArraySubscriptExpr 0x5636cc798260 <col:5, col:8> 'int' lvalue
    |   | | |-ImplicitCastExpr 0x5636cc798230 <col:5> 'int *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x5636cc7981f0 <col:5> 'int [100000]' lvalue Var 0x5636cc7733e8 'a' 'int [100000]'
    |   | | `-ImplicitCastExpr 0x5636cc798248 <col:7> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5636cc798210 <col:7> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    |   | `-IntegerLiteral 0x5636cc798280 <col:12> 'int' 46
    |   `-BinaryOperator 0x5636cc798358 <line:28:5, col:13> 'int' '='
    |     |-DeclRefExpr 0x5636cc7982c0 <col:5> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    |     `-BinaryOperator 0x5636cc798338 <col:9, col:13> 'int' '+'
    |       |-ImplicitCastExpr 0x5636cc798320 <col:9> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5636cc7982e0 <col:9> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    |       `-IntegerLiteral 0x5636cc798300 <col:13> 'int' 1
    |-BinaryOperator 0x5636cc7983f0 <line:30:3, col:7> 'int' '='
    | |-DeclRefExpr 0x5636cc7983b0 <col:3> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    | `-IntegerLiteral 0x5636cc7983d0 <col:7> 'int' 0
    |-WhileStmt 0x5636cc798630 <line:31:3, line:34:3>
    | |-BinaryOperator 0x5636cc798468 <line:31:11, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x5636cc798450 <col:11> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x5636cc798410 <col:11> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    | | `-IntegerLiteral 0x5636cc798430 <col:15> 'int' 100000
    | `-CompoundStmt 0x5636cc798610 <col:24, line:34:3>
    |   |-BinaryOperator 0x5636cc798538 <line:32:5, col:12> 'int' '='
    |   | |-ArraySubscriptExpr 0x5636cc7984f8 <col:5, col:8> 'int' lvalue
    |   | | |-ImplicitCastExpr 0x5636cc7984c8 <col:5> 'int *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x5636cc798488 <col:5> 'int [100000]' lvalue Var 0x5636cc7733e8 'a' 'int [100000]'
    |   | | `-ImplicitCastExpr 0x5636cc7984e0 <col:7> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5636cc7984a8 <col:7> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    |   | `-IntegerLiteral 0x5636cc798518 <col:12> 'int' 47
    |   `-BinaryOperator 0x5636cc7985f0 <line:33:5, col:13> 'int' '='
    |     |-DeclRefExpr 0x5636cc798558 <col:5> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    |     `-BinaryOperator 0x5636cc7985d0 <col:9, col:13> 'int' '+'
    |       |-ImplicitCastExpr 0x5636cc7985b8 <col:9> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5636cc798578 <col:9> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    |       `-IntegerLiteral 0x5636cc798598 <col:13> 'int' 1
    |-BinaryOperator 0x5636cc798688 <line:35:3, col:7> 'int' '='
    | |-DeclRefExpr 0x5636cc798648 <col:3> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    | `-IntegerLiteral 0x5636cc798668 <col:7> 'int' 0
    |-WhileStmt 0x5636cc7988c8 <line:36:3, line:39:3>
    | |-BinaryOperator 0x5636cc798700 <line:36:11, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x5636cc7986e8 <col:11> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x5636cc7986a8 <col:11> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    | | `-IntegerLiteral 0x5636cc7986c8 <col:15> 'int' 100000
    | `-CompoundStmt 0x5636cc7988a8 <col:24, line:39:3>
    |   |-BinaryOperator 0x5636cc7987d0 <line:37:5, col:12> 'int' '='
    |   | |-ArraySubscriptExpr 0x5636cc798790 <col:5, col:8> 'int' lvalue
    |   | | |-ImplicitCastExpr 0x5636cc798760 <col:5> 'int *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x5636cc798720 <col:5> 'int [100000]' lvalue Var 0x5636cc7733e8 'a' 'int [100000]'
    |   | | `-ImplicitCastExpr 0x5636cc798778 <col:7> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5636cc798740 <col:7> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    |   | `-IntegerLiteral 0x5636cc7987b0 <col:12> 'int' 48
    |   `-BinaryOperator 0x5636cc798888 <line:38:5, col:13> 'int' '='
    |     |-DeclRefExpr 0x5636cc7987f0 <col:5> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    |     `-BinaryOperator 0x5636cc798868 <col:9, col:13> 'int' '+'
    |       |-ImplicitCastExpr 0x5636cc798850 <col:9> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5636cc798810 <col:9> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    |       `-IntegerLiteral 0x5636cc798830 <col:13> 'int' 1
    |-BinaryOperator 0x5636cc798920 <line:40:3, col:7> 'int' '='
    | |-DeclRefExpr 0x5636cc7988e0 <col:3> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    | `-IntegerLiteral 0x5636cc798900 <col:7> 'int' 0
    |-WhileStmt 0x5636cc798b60 <line:41:3, line:44:3>
    | |-BinaryOperator 0x5636cc798998 <line:41:11, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x5636cc798980 <col:11> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x5636cc798940 <col:11> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    | | `-IntegerLiteral 0x5636cc798960 <col:15> 'int' 100000
    | `-CompoundStmt 0x5636cc798b40 <col:24, line:44:3>
    |   |-BinaryOperator 0x5636cc798a68 <line:42:5, col:12> 'int' '='
    |   | |-ArraySubscriptExpr 0x5636cc798a28 <col:5, col:8> 'int' lvalue
    |   | | |-ImplicitCastExpr 0x5636cc7989f8 <col:5> 'int *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x5636cc7989b8 <col:5> 'int [100000]' lvalue Var 0x5636cc7733e8 'a' 'int [100000]'
    |   | | `-ImplicitCastExpr 0x5636cc798a10 <col:7> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5636cc7989d8 <col:7> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    |   | `-IntegerLiteral 0x5636cc798a48 <col:12> 'int' 49
    |   `-BinaryOperator 0x5636cc798b20 <line:43:5, col:13> 'int' '='
    |     |-DeclRefExpr 0x5636cc798a88 <col:5> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    |     `-BinaryOperator 0x5636cc798b00 <col:9, col:13> 'int' '+'
    |       |-ImplicitCastExpr 0x5636cc798ae8 <col:9> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5636cc798aa8 <col:9> 'int' lvalue Var 0x5636cc773480 'i' 'int'
    |       `-IntegerLiteral 0x5636cc798ac8 <col:13> 'int' 1
    |-DeclStmt 0x5636cc798bf8 <line:45:3, col:8>
    | `-VarDecl 0x5636cc798b90 <col:3, col:7> col:7 used x 'int'
    |-ForStmt 0x5636cc798eb8 <line:46:3, line:48:3>
    | |-BinaryOperator 0x5636cc798c50 <line:46:9, col:13> 'int' '='
    | | |-DeclRefExpr 0x5636cc798c10 <col:9> 'int' lvalue Var 0x5636cc798b90 'x' 'int'
    | | `-IntegerLiteral 0x5636cc798c30 <col:13> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x5636cc798cc8 <col:17, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x5636cc798cb0 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x5636cc798c70 <col:17> 'int' lvalue Var 0x5636cc798b90 'x' 'int'
    | | `-IntegerLiteral 0x5636cc798c90 <col:21> 'int' 100000
    | |-UnaryOperator 0x5636cc798d08 <col:30, col:31> 'int' postfix '++'
    | | `-DeclRefExpr 0x5636cc798ce8 <col:30> 'int' lvalue Var 0x5636cc798b90 'x' 'int'
    | `-CompoundStmt 0x5636cc798ea0 <col:36, line:48:3>
    |   `-CallExpr 0x5636cc798e78 <line:47:5, col:35> 'void'
    |     |-ImplicitCastExpr 0x5636cc798e60 <col:5> 'void (*)(int)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x5636cc798d20 <col:5> 'void (int)' Function 0x5636cc772ff0 '__VERIFIER_assert' 'void (int)'
    |     `-BinaryOperator 0x5636cc798e08 <col:24, col:32> 'int' '=='
    |       |-ImplicitCastExpr 0x5636cc798df0 <col:24, col:27> 'int' <LValueToRValue>
    |       | `-ArraySubscriptExpr 0x5636cc798db0 <col:24, col:27> 'int' lvalue
    |       |   |-ImplicitCastExpr 0x5636cc798d80 <col:24> 'int *' <ArrayToPointerDecay>
    |       |   | `-DeclRefExpr 0x5636cc798d40 <col:24> 'int [100000]' lvalue Var 0x5636cc7733e8 'a' 'int [100000]'
    |       |   `-ImplicitCastExpr 0x5636cc798d98 <col:26> 'int' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5636cc798d60 <col:26> 'int' lvalue Var 0x5636cc798b90 'x' 'int'
    |       `-IntegerLiteral 0x5636cc798dd0 <col:32> 'int' 48
    `-ReturnStmt 0x5636cc798f30 <line:49:3, col:10>
      `-IntegerLiteral 0x5636cc798f10 <col:10> 'int' 0
