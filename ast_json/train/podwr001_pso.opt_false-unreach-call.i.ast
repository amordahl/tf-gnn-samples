TranslationUnitDecl 0x5568b8326f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5568b8327848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5568b8327520 '__int128'
|-TypedefDecl 0x5568b83278b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5568b8327540 'unsigned __int128'
|-TypedefDecl 0x5568b8327bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5568b8327990 'struct __NSConstantString_tag'
|   `-Record 0x5568b8327910 '__NSConstantString_tag'
|-TypedefDecl 0x5568b8327c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5568b8327c20 'char *'
|   `-BuiltinType 0x5568b8327020 'char'
|-TypedefDecl 0x5568b8366b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5568b8327f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5568b8327d40 'struct __va_list_tag'
|     `-Record 0x5568b8327cc0 '__va_list_tag'
|-FunctionDecl 0x5568b8366ca0 <pthread-wmm/podwr001_pso.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5568b8366bd0 <col:31> col:34 'int'
|-FunctionDecl 0x5568b8366e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5568b8366f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5568b83670d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5568b8367048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5568b8367308 <col:40, col:99>
|   |-IfStmt 0x5568b83672d8 <col:42, col:88>
|   | |-UnaryOperator 0x5568b83671b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5568b83671a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5568b8367180 <col:47> 'int' lvalue ParmVar 0x5568b8367048 'expression' 'int'
|   | `-CompoundStmt 0x5568b83672c0 <col:59, col:88>
|   |   `-LabelStmt 0x5568b83672a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5568b8367238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5568b8367220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5568b83671d0 <col:68> 'void () __attribute__((noreturn))' Function 0x5568b8366f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5568b83672f0 <col:89>
|   `-ReturnStmt 0x5568b83672f8 <col:91>
|-FunctionDecl 0x5568b8367350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5568b8367410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5568b8367790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5568b83674c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5568b8367548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5568b83675c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5568b8367648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5568b8367850 <line:10:22>
|-FunctionDecl 0x5568b838d8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5568b83678c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5568b8367940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5568b83679c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5568b8367a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5568b838d960 <line:13:22>
|-FunctionDecl 0x5568b838dc10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5568b838d9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5568b838da50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5568b838dad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5568b838dcc8 <line:15:22>
|-TypedefDecl 0x5568b838dd38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5568b83270e0 'unsigned char'
|-TypedefDecl 0x5568b838dda8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5568b8327100 'unsigned short'
|-TypedefDecl 0x5568b838de18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5568b8327120 'unsigned int'
|-TypedefDecl 0x5568b838de88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5568b8327140 'unsigned long'
|-TypedefDecl 0x5568b838def8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5568b8327040 'signed char'
|-TypedefDecl 0x5568b838df68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5568b83270e0 'unsigned char'
|-TypedefDecl 0x5568b838dfd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5568b8327060 'short'
|-TypedefDecl 0x5568b838e048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5568b8327100 'unsigned short'
|-TypedefDecl 0x5568b838e0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5568b8327080 'int'
|-TypedefDecl 0x5568b838e128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5568b8327120 'unsigned int'
|-TypedefDecl 0x5568b838e198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5568b83270a0 'long'
|-TypedefDecl 0x5568b838e208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5568b8327140 'unsigned long'
|-TypedefDecl 0x5568b838e278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5568b83270a0 'long'
|-TypedefDecl 0x5568b838e2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5568b8327140 'unsigned long'
|-TypedefDecl 0x5568b838e358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5568b8327140 'unsigned long'
|-TypedefDecl 0x5568b838e3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5568b8327120 'unsigned int'
|-TypedefDecl 0x5568b838e438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5568b8327120 'unsigned int'
|-TypedefDecl 0x5568b838e4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5568b8327140 'unsigned long'
|-TypedefDecl 0x5568b838e518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5568b8327140 'unsigned long'
|-TypedefDecl 0x5568b838e588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5568b8327120 'unsigned int'
|-TypedefDecl 0x5568b838e5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5568b8327140 'unsigned long'
|-TypedefDecl 0x5568b838e668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5568b83270a0 'long'
|-TypedefDecl 0x5568b838e6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5568b83270a0 'long'
|-TypedefDecl 0x5568b838e748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5568b8327080 'int'
|-RecordDecl 0x5568b838e7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5568b838e918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5568b838e9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5568b838e970 'struct __fsid_t' sugar
|   `-RecordType 0x5568b838e820 '__fsid_t'
|     `-Record 0x5568b838e7a0 ''
|-TypedefDecl 0x5568b838ea58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5568b83270a0 'long'
|-TypedefDecl 0x5568b838eac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5568b8327140 'unsigned long'
|-TypedefDecl 0x5568b838eb38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5568b8327140 'unsigned long'
|-TypedefDecl 0x5568b838eba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5568b8327120 'unsigned int'
|-TypedefDecl 0x5568b838ec18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5568b83270a0 'long'
|-TypedefDecl 0x5568b838ec88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5568b8327120 'unsigned int'
|-TypedefDecl 0x5568b838ecf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5568b83270a0 'long'
|-TypedefDecl 0x5568b838ed68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5568b8327080 'int'
|-TypedefDecl 0x5568b838edd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5568b8327080 'int'
|-TypedefDecl 0x5568b838ee48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5568b8327080 'int'
|-TypedefDecl 0x5568b838eeb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5568b83277a0 'void *'
|   `-BuiltinType 0x5568b8326fe0 'void'
|-TypedefDecl 0x5568b838ef28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5568b83270a0 'long'
|-TypedefDecl 0x5568b838ef98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5568b83270a0 'long'
|-TypedefDecl 0x5568b838f008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5568b83270a0 'long'
|-TypedefDecl 0x5568b838f078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5568b8327140 'unsigned long'
|-TypedefDecl 0x5568b838f0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5568b8327140 'unsigned long'
|-TypedefDecl 0x5568b838f158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5568b8327140 'unsigned long'
|-TypedefDecl 0x5568b838f1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5568b8327140 'unsigned long'
|-TypedefDecl 0x5568b838f238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5568b83270a0 'long'
|-TypedefDecl 0x5568b838f2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5568b83270a0 'long'
|-TypedefDecl 0x5568b838f318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5568b83270a0 'long'
|-TypedefDecl 0x5568b838f388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5568b8327140 'unsigned long'
|-TypedefDecl 0x5568b838f418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5568b838f3e0 '__off64_t' sugar
|   |-Typedef 0x5568b838e6d8 '__off64_t'
|   `-BuiltinType 0x5568b83270a0 'long'
|-TypedefDecl 0x5568b838f510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5568b838f4d0 '__quad_t *'
|   `-TypedefType 0x5568b838f470 '__quad_t' sugar
|     |-Typedef 0x5568b838e278 '__quad_t'
|     `-BuiltinType 0x5568b83270a0 'long'
|-TypedefDecl 0x5568b838f580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5568b8327c20 'char *'
|   `-BuiltinType 0x5568b8327020 'char'
|-TypedefDecl 0x5568b838f5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5568b83270a0 'long'
|-TypedefDecl 0x5568b838f660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5568b8327120 'unsigned int'
|-FunctionDecl 0x5568b838f7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5568b838f6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5568b838fae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5568b838fad8 <line:72:3, col:34>
|     `-CallExpr 0x5568b838fa98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5568b838fa80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5568b838fa10 <col:10> '<builtin fn type>' Function 0x5568b838f880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5568b838fac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5568b838fa30 <col:29> 'unsigned int' lvalue ParmVar 0x5568b838f6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5568b838f880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5568b838f920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5568b838f990 <col:10> Implicit
| `-ConstAttr 0x5568b838f9e8 <col:10> Implicit
|-FunctionDecl 0x5568b838fc40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5568b838fb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5568b838ff58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5568b838ff48 <line:77:3, col:34>
|     `-CallExpr 0x5568b838ff08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5568b838fef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5568b838fe78 <col:10> '<builtin fn type>' Function 0x5568b838fce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5568b838ff30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5568b838fe98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5568b838fb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5568b838fce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5568b838fd88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5568b838fdf8 <col:10> Implicit
| `-ConstAttr 0x5568b838fe50 <col:10> Implicit
|-TypedefDecl 0x5568b838ff88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5568b8327140 'unsigned long'
|-TypedefDecl 0x5568b8390018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5568b838ffe0 '__time_t' sugar
|   |-Typedef 0x5568b838ec18 '__time_t'
|   `-BuiltinType 0x5568b83270a0 'long'
|-RecordDecl 0x5568b8390070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5568b8390128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5568b83901b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5568b8390248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5568b8390210 '__pid_t' sugar
|   |-Typedef 0x5568b838e748 '__pid_t'
|   `-BuiltinType 0x5568b8327080 'int'
|-RecordDecl 0x5568b83902a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5568b8390360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5568b83903b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5568b8390470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5568b83904d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5568b8327140 'unsigned long'
|-RecordDecl 0x5568b8390530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5568b83907c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5568b83928b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5568b8390810 'struct cpu_set_t' sugar
|   `-RecordType 0x5568b83905b0 'cpu_set_t'
|     `-Record 0x5568b8390530 ''
|-FunctionDecl 0x5568b8392b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5568b8392958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5568b8392a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5568b8392c38 <line:107:19>
|-FunctionDecl 0x5568b8392e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5568b8392ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5568b8392eb8 <col:69>
|-FunctionDecl 0x5568b8393030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5568b8392f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5568b83930d8 <col:64>
|-FunctionDecl 0x5568b8393398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5568b8393140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5568b8393278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5568b8393448 <line:113:22>
|-FunctionDecl 0x5568b83936c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5568b83934b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5568b83935a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5568b8393778 <col:88>
|-FunctionDecl 0x5568b8393a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5568b83937e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5568b83938c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5568b8393950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5568b8393b50 <col:62>
|-FunctionDecl 0x5568b8393cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5568b8393bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5568b8393d70 <col:63>
|-FunctionDecl 0x5568b8393e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5568b8393f38 <col:47>
|-FunctionDecl 0x5568b8394040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5568b8393fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5568b83940e8 <col:69>
|-FunctionDecl 0x5568b83941f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5568b8394158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5568b8394298 <col:69>
|-FunctionDecl 0x5568b8394558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5568b8394300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5568b8394438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5568b8394608 <col:88>
|-TypedefDecl 0x5568b8394698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5568b8394660 '__clock_t' sugar
|   |-Typedef 0x5568b838ea58 '__clock_t'
|   `-BuiltinType 0x5568b83270a0 'long'
|-TypedefDecl 0x5568b8394728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5568b83946f0 '__clockid_t' sugar
|   |-Typedef 0x5568b838ee48 '__clockid_t'
|   `-BuiltinType 0x5568b8327080 'int'
|-TypedefDecl 0x5568b83947b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5568b8394780 '__timer_t' sugar
|   |-Typedef 0x5568b838eeb8 '__timer_t'
|   `-PointerType 0x5568b83277a0 'void *'
|     `-BuiltinType 0x5568b8326fe0 'void'
|-RecordDecl 0x5568b8394810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5568b83948e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5568b8394950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5568b83949b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5568b8394a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5568b8394a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5568b8394af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5568b8394b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5568b8394bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5568b8394c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5568b8394c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5568b8394cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5568b8394d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5568b8394e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5568b8394e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5568b8394f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5568b8395100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5568b83951a0 <col:45>
|-FunctionDecl 0x5568b8395380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5568b8395270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5568b8395428 <col:54>
|-FunctionDecl 0x5568b8395628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5568b8395490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5568b8395508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5568b83956d8 <line:157:22>
| `-ConstAttr 0x5568b8395730 <col:63>
|-FunctionDecl 0x5568b8396560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5568b8395828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5568b8396608 <col:56>
|-FunctionDecl 0x5568b83969b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5568b8396678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5568b83966f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5568b8396770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5568b8396868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5568b8396a70 <col:54>
|-RecordDecl 0x5568b8396ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5568b8396b78 parent 0x5568b8326f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5568b8396dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5568b8396e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5568b8396ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5568b8396f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5568b8397038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5568b8397158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5568b8397100 'struct __locale_struct *'
|   `-ElaboratedType 0x5568b8397090 'struct __locale_struct' sugar
|     `-RecordType 0x5568b8396b50 'struct __locale_struct'
|       `-Record 0x5568b8396ac8 '__locale_struct'
|-TypedefDecl 0x5568b8397208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5568b83971d0 '__locale_t' sugar
|   |-Typedef 0x5568b8397158 '__locale_t'
|   `-PointerType 0x5568b8397100 'struct __locale_struct *'
|     `-ElaboratedType 0x5568b8397090 'struct __locale_struct' sugar
|       `-RecordType 0x5568b8396b50 'struct __locale_struct'
|         `-Record 0x5568b8396ac8 '__locale_struct'
|-FunctionDecl 0x5568b8397610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5568b8397278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5568b83972f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5568b8397370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5568b8397400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5568b8397478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5568b83976d8 <col:40>
|-FunctionDecl 0x5568b83978c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5568b83977a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5568b8397970 <col:66>
|-FunctionDecl 0x5568b8397a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5568b83979d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5568b8397b28 <col:69>
|-FunctionDecl 0x5568b8397d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5568b8397b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5568b8397c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5568b8397e08 <col:52>
|-FunctionDecl 0x5568b8397fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5568b8397e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5568b8397f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5568b8398060 <col:55>
|-FunctionDecl 0x5568b83981f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5568b83980e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5568b83982a0 <col:62>
|-FunctionDecl 0x5568b8398418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5568b8398308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5568b83984c0 <col:60>
|-FunctionDecl 0x5568b8398718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5568b8398578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5568b83985f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5568b83987c8 <col:44>
|-FunctionDecl 0x5568b83989d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5568b8398830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5568b83988b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5568b8398a88 <col:49>
|-VarDecl 0x5568b8398b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5568b8398c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5568b8398c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5568b8398d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5568b8398e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5568b8398f20 <col:42>
|-VarDecl 0x5568b8398f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5568b8399010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5568b8399198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5568b8399088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5568b8399240 <col:57>
|-FunctionDecl 0x5568b8399350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5568b83992c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5568b83993f8 <col:56>
|-FunctionDecl 0x5568b839a540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5568b8399478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5568b839a5e8 <col:59>
|-FunctionDecl 0x5568b839a6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5568b839a658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5568b839a798 <col:48>
| `-ConstAttr 0x5568b839a7f0 <col:89>
|-FunctionDecl 0x5568b839aa58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5568b839a8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5568b839a938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5568b839acb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5568b839ab48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5568b839abd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5568b839ad68 <col:88>
|-FunctionDecl 0x5568b839af00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5568b839add0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5568b839ae60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5568b839afb0 <col:88>
|-FunctionDecl 0x5568b839b1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5568b839b018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5568b839b0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5568b839b278 <line:208:22>
|-FunctionDecl 0x5568b839b5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5568b839b2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5568b839b360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5568b839b3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5568b839b480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5568b839b8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5568b839b6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5568b839b7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5568b839b998 <col:85>
|-FunctionDecl 0x5568b839bd88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5568b839ba00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5568b839bb38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5568b839bc40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5568b839be40 <col:52>
|-FunctionDecl 0x5568b839bfb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5568b839bea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5568b839c060 <col:61>
|-FunctionDecl 0x5568b839c560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5568b839c0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5568b839c148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5568b839c278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5568b839c368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5568b839c620 <col:62>
|-FunctionDecl 0x5568b839c838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5568b839c688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5568b839c718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5568b839c8e8 <line:221:22>
|-FunctionDecl 0x5568b839c9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5568b839c950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5568b839ca90 <col:65>
|-TypedefDecl 0x5568b839cb00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5568b8327140 'unsigned long'
|-RecordDecl 0x5568b839cb58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5568b839cca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5568b839cd08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5568b839cdb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5568b839cd60 'union pthread_attr_t' sugar
|   `-RecordType 0x5568b839cbe0 'union pthread_attr_t'
|     `-Record 0x5568b839cb58 'pthread_attr_t'
|-RecordDecl 0x5568b839ce10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5568b839cf88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5568b839d000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5568b839d0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5568b839d050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5568b839ce90 'struct __pthread_internal_list'
|     `-Record 0x5568b839ce10 '__pthread_internal_list'
|-RecordDecl 0x5568b839d120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5568b839d1c8 parent 0x5568b8326f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5568b839d2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5568b839d308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5568b839d370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5568b839d3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5568b839d440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5568b839d4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5568b83a1580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5568b83a1630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5568b83a1720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5568b83a1788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5568b83a1910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5568b83a18b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5568b839d1a0 'pthread_mutex_t'
|     `-Record 0x5568b839d120 ''
|-RecordDecl 0x5568b83a1980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5568b83a1ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5568b83a1b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5568b83a1be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5568b83a1b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5568b83a1a00 'pthread_mutexattr_t'
|     `-Record 0x5568b83a1980 ''
|-RecordDecl 0x5568b83a1c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5568b83a1cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5568b83a1dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5568b83a1e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5568b83a1e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5568b83a1ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5568b83a1f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5568b83a1fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5568b83a2030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5568b83a2098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5568b83a2150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/podwr001_pso.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/podwr001_pso.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5568b83a2240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5568b83a22a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5568b83a23e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5568b83a2380 'union pthread_cond_t' sugar
|   `-RecordType 0x5568b83a1cd0 'pthread_cond_t'
|     `-Record 0x5568b83a1c50 ''
|-RecordDecl 0x5568b83a2450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5568b83a2590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5568b83a25f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5568b83a26b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5568b83a2650 'union pthread_condattr_t' sugar
|   `-RecordType 0x5568b83a24d0 'pthread_condattr_t'
|     `-Record 0x5568b83a2450 ''
|-TypedefDecl 0x5568b83a2738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5568b8327120 'unsigned int'
|-TypedefDecl 0x5568b83a27a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5568b8327080 'int'
|-RecordDecl 0x5568b83a2800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5568b83a28a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5568b83a2970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5568b83a29d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5568b83a2a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5568b83a2aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5568b83a2b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5568b83a2b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5568b83a2be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5568b83a2c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5568b83a2cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5568b83a2d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5568b83a2d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5568b83a2e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/podwr001_pso.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/podwr001_pso.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5568b83a2ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5568b83a2f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5568b83a3090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5568b83a3030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5568b83a2880 'pthread_rwlock_t'
|     `-Record 0x5568b83a2800 ''
|-RecordDecl 0x5568b83a3100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5568b83a3240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5568b83a32a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5568b83a3360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5568b83a3300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5568b83a3180 'pthread_rwlockattr_t'
|     `-Record 0x5568b83a3100 ''
|-TypedefDecl 0x5568b83a33e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5568b8327084 'volatile int' volatile
|   `-BuiltinType 0x5568b8327080 'int'
|-RecordDecl 0x5568b83a3440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5568b83a55b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5568b83a5618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5568b83a56d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5568b83a5670 'union pthread_barrier_t' sugar
|   `-RecordType 0x5568b83a34c0 'pthread_barrier_t'
|     `-Record 0x5568b83a3440 ''
|-RecordDecl 0x5568b83a5740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5568b83a5840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5568b83a58a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5568b83a5960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5568b83a5900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5568b83a57c0 'pthread_barrierattr_t'
|     `-Record 0x5568b83a5740 ''
|-TypedefDecl 0x5568b83a5a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5568b83a5a10 'long [8]' 8 
|   `-BuiltinType 0x5568b83270a0 'long'
|-EnumDecl 0x5568b83a5ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5568b83a5b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5568b83a5be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5568b83a5c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5568b83a5d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5568b83a5d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5568b83a5da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5568b83a5df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5568b83a5e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5568b83a5e68 <col:26> 'int'
| |   `-DeclRefExpr 0x5568b83a5e48 <col:26> 'int' EnumConstant 0x5568b83a5d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5568b83a5f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5568b83a5ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x5568b83a5ed0 <col:29> 'int' EnumConstant 0x5568b83a5d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5568b83a5f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5568b83a5f78 <col:30> 'int'
| |   `-DeclRefExpr 0x5568b83a5f58 <col:30> 'int' EnumConstant 0x5568b83a5da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5568b83a6018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5568b83a6000 <col:27> 'int'
|     `-DeclRefExpr 0x5568b83a5fe0 <col:27> 'int' EnumConstant 0x5568b83a5e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5568b83a6068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5568b83a6138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5568b83a61c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5568b83a61a8 <col:30> 'int'
| |   `-DeclRefExpr 0x5568b83a6188 <col:30> 'int' EnumConstant 0x5568b83a6138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5568b83a6210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5568b83a6298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5568b83a6280 <col:29> 'int'
|     `-DeclRefExpr 0x5568b83a6260 <col:29> 'int' EnumConstant 0x5568b83a6210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5568b83a62e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5568b83a63b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5568b83a6408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5568b83a6458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5568b83a64a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5568b83a65c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5568b83a6610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5568b83a6660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5568b83a66e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5568b83a66d0 <col:31> 'int'
|     `-DeclRefExpr 0x5568b83a66b0 <col:31> 'int' EnumConstant 0x5568b83a65c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5568b83a6738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5568b83a6808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5568b83a6858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5568b83a68a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5568b83a6978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5568b83a69c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5568b83a6a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5568b83a6ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5568b83a6b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5568b83a6b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5568b83a6dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5568b83a6e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5568b83a6e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5568b83a6fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5568b83a7008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5568b83a70d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5568b83a7128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5568b83a7178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5568b83a7248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5568b83a7298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5568b83a78f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5568b83a7390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5568b83a74a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5568b83a76e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5568b83a7760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5568b83a79b8 <col:47>
| |-NonNullAttr 0x5568b83a7a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x5568b83a7a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5568b83a7b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5568b83a7aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5568b83a7dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5568b83a7c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5568b83a7ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5568b83a7f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5568b83a7e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5568b83a8040 <col:60>
|-FunctionDecl 0x5568b83a8190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5568b83a8230 <col:54>
| `-ConstAttr 0x5568b83a8288 <col:95>
|-FunctionDecl 0x5568b83a8458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5568b83a82c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5568b83a8338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5568b83a8508 <line:394:19>
| `-ConstAttr 0x5568b83a8560 <col:60>
|-FunctionDecl 0x5568b83a8f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5568b83a8e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5568b83a9010 <col:71>
| `-NonNullAttr 0x5568b83a9068 <col:112, col:126> 1
|-FunctionDecl 0x5568b83a9170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5568b83a90b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5568b83a9218 <line:397:22>
| `-NonNullAttr 0x5568b83a9270 <col:63, col:77> 1
|-FunctionDecl 0x5568b83a9498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5568b83a92b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5568b83a9338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5568b83a9548 <line:400:22>
| `-NonNullAttr 0x5568b83a95a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5568b83a97a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5568b83a95e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5568b83a9668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5568b83a9858 <line:403:22>
| `-NonNullAttr 0x5568b83a98b0 <col:63, col:77> 1
|-FunctionDecl 0x5568b83a9b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5568b83a98f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5568b83a99a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5568b83a9bb8 <line:406:22>
| `-NonNullAttr 0x5568b83a9c10 <col:63, col:80> 1 2
|-FunctionDecl 0x5568b83aae48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5568b83a9c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5568b83a9cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5568b83aaef8 <line:409:22>
| `-NonNullAttr 0x5568b83aaf50 <col:63, col:77> 1
|-FunctionDecl 0x5568b83ab188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5568b83aaf98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5568b83ab028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5568b83ab238 <line:412:22>
| `-NonNullAttr 0x5568b83ab290 <col:63, col:80> 1 2
|-FunctionDecl 0x5568b83ab4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5568b83ab2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5568b83ab368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5568b83ab578 <col:37>
| `-NonNullAttr 0x5568b83ab5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x5568b83ab7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5568b83ab618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5568b83ab698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5568b83ab868 <line:418:22>
| `-NonNullAttr 0x5568b83ab8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5568b83aba48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5568b83ab908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5568b83ab988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5568b83abaf8 <line:420:22>
| `-NonNullAttr 0x5568b83abb50 <col:63, col:77> 1
|-FunctionDecl 0x5568b83abcf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5568b83abb98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5568b83abc18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5568b83abda8 <line:423:22>
| `-NonNullAttr 0x5568b83ace30 <col:63, col:80> 1 2
|-FunctionDecl 0x5568b83acfb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5568b83ace78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5568b83acef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5568b83ad068 <line:426:22>
| `-NonNullAttr 0x5568b83ad0c0 <col:63, col:77> 1
|-FunctionDecl 0x5568b83ad268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5568b83ad108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5568b83ad188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5568b83ad318 <line:429:22>
| `-NonNullAttr 0x5568b83ad370 <col:63, col:80> 1 2
|-FunctionDecl 0x5568b83ad4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5568b83ad3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5568b83ad438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5568b83ad5a8 <line:431:22>
| `-NonNullAttr 0x5568b83ad600 <col:63, col:77> 1
|-FunctionDecl 0x5568b83ad828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5568b83ad648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5568b83ad6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5568b83ad8d8 <line:434:22>
| |-NonNullAttr 0x5568b83ad930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5568b83ad968 <col:100> "" ""
|-FunctionDecl 0x5568b83adb78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5568b83ad9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5568b83ada38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5568b83adc28 <line:437:22>
| |-NonNullAttr 0x5568b83adc80 <col:63, col:77> 1
| `-DeprecatedAttr 0x5568b83adcb8 <col:97> "" ""
|-FunctionDecl 0x5568b83adeb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5568b83add08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5568b83add80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5568b83adf68 <line:440:22>
| `-NonNullAttr 0x5568b83adfc0 <col:63, col:80> 1 2
|-FunctionDecl 0x5568b83ae140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5568b83ae008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5568b83ae080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5568b83ae1f0 <line:443:22>
| `-NonNullAttr 0x5568b83ae248 <col:63, col:77> 1
|-FunctionDecl 0x5568b83ae538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5568b83ae298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5568b83ae318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5568b83ae390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5568b83ae5f0 <line:447:22>
| `-NonNullAttr 0x5568b83ae648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5568b83ae8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5568b83ae6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5568b83ae720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5568b83ae798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5568b83ae9b0 <col:43>
| `-NonNullAttr 0x5568b83aea08 <col:84, col:98> 1
|-FunctionDecl 0x5568b83aecc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5568b83aea58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5568b83aead8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5568b83aeb68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5568b83aed80 <line:452:22>
| `-NonNullAttr 0x5568b83aedd8 <col:63, col:77> 3
|-FunctionDecl 0x5568b83af0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5568b83aee50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5568b83aeed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5568b83aef60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5568b83af1a0 <line:456:22>
| `-NonNullAttr 0x5568b83af1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x5568b83af3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5568b83af248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5568b83af2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5568b83af498 <line:458:22>
|-FunctionDecl 0x5568b83af868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5568b83af560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5568b83af700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5568b83af918 <col:52, col:69> 1 2
|-FunctionDecl 0x5568b83afac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5568b83af9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5568b83afa20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5568b83afca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5568b83afb88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5568b83afc08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5568b83afe60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5568b83afd68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5568b83affa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5568b83b0040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5568b83b00e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5568b83b01d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5568b83b0240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5568b83b0410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/podwr001_pso.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5568b83b0508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5568b83b05c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5568b83b0560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5568b83b00c0 '__pthread_unwind_buf_t'
| |   `-Record 0x5568b83b0040 ''
| `-AlignedAttr 0x5568b83b0618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5568b83b0690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5568b83b07f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5568b83b0858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5568b83b08c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5568b83b0928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5568b83b0b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5568b83b0a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5568b83b0c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5568b83b0be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5568b83b0e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5568b83b0d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5568b83b0f18 <line:487:22>
|-RecordDecl 0x5568b83b0f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5568b83b1288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5568b83b10e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5568b83b1168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5568b83b1338 <col:86>
| `-ReturnsTwiceAttr 0x5568b83b1390 <col:12> Implicit
|-FunctionDecl 0x5568b83b16b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5568b83b1460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5568b83b1570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5568b83b1768 <line:493:22>
| `-NonNullAttr 0x5568b83b17c0 <col:63, col:77> 1
|-FunctionDecl 0x5568b83b1938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5568b83b1808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5568b83b19e0 <line:495:22>
| `-NonNullAttr 0x5568b83b1a38 <col:63, col:77> 1
|-FunctionDecl 0x5568b83b1b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5568b83b1a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5568b83b1be8 <line:497:22>
| `-NonNullAttr 0x5568b83b1c40 <col:52, col:66> 1
|-FunctionDecl 0x5568b83b1d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5568b83b1c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5568b83b1de8 <line:499:22>
| `-NonNullAttr 0x5568b83b1e40 <col:52, col:66> 1
|-FunctionDecl 0x5568b83b2088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5568b83b1e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5568b83b1f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5568b83b2138 <col:36>
| `-NonNullAttr 0x5568b83b2190 <col:66, col:83> 1 2
|-FunctionDecl 0x5568b83b2290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5568b83b21d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5568b83b2338 <line:504:22>
| `-NonNullAttr 0x5568b83b2390 <col:52, col:66> 1
|-FunctionDecl 0x5568b83b2628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5568b83b2440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5568b83b24c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5568b83b26d8 <line:508:22>
| `-NonNullAttr 0x5568b83b2730 <col:63, col:80> 1 2
|-FunctionDecl 0x5568b83b29f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5568b83b2778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5568b83b27f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5568b83b2878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5568b83b2ab0 <line:512:22>
| `-NonNullAttr 0x5568b83b2b08 <col:63, col:80> 1 3
|-FunctionDecl 0x5568b83b2c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5568b83b2b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5568b83b2cb8 <line:514:22>
| `-NonNullAttr 0x5568b83b2d10 <col:63, col:77> 1
|-FunctionDecl 0x5568b83b2f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5568b83b2dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5568b83b2fe0 <line:516:22>
| `-NonNullAttr 0x5568b83b3038 <col:63, col:77> 1
|-FunctionDecl 0x5568b83b3140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5568b83b3088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5568b83b31e8 <line:518:22>
| `-NonNullAttr 0x5568b83b3240 <col:63, col:77> 1
|-FunctionDecl 0x5568b83b3468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5568b83b3288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5568b83b3308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5568b83b3518 <line:522:22>
| `-NonNullAttr 0x5568b83b3570 <col:63, col:80> 1 2
|-FunctionDecl 0x5568b83b3778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5568b83b35b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5568b83b3638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5568b83b3828 <line:525:22>
| `-NonNullAttr 0x5568b83b3880 <col:63, col:77> 1
|-FunctionDecl 0x5568b83b3a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5568b83b38c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5568b83b3948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5568b83b3ad8 <line:528:22>
| `-NonNullAttr 0x5568b83b3b30 <col:63, col:80> 1 2
|-FunctionDecl 0x5568b83b3cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5568b83b3b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5568b83b3bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5568b83b3d68 <line:530:22>
| `-NonNullAttr 0x5568b83b3dc0 <col:63, col:77> 1
|-FunctionDecl 0x5568b83b4f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5568b83b3e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5568b83b4eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5568b83b5040 <line:534:22>
| `-NonNullAttr 0x5568b83b5098 <col:63, col:80> 1 2
|-FunctionDecl 0x5568b83b5228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5568b83b50e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5568b83b5168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5568b83b52d8 <line:537:22>
| `-NonNullAttr 0x5568b83b5330 <col:63, col:77> 1
|-FunctionDecl 0x5568b83b54d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5568b83b5378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5568b83b53f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5568b83b5588 <line:541:22>
| `-NonNullAttr 0x5568b83b55e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5568b83b5768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5568b83b5628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5568b83b56a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5568b83b5818 <line:544:22>
| `-NonNullAttr 0x5568b83b5870 <col:63, col:77> 1
|-FunctionDecl 0x5568b83b5a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5568b83b58b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5568b83b5938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5568b83b5b08 <line:547:22>
| `-NonNullAttr 0x5568b83b5b60 <col:63, col:80> 1 2
|-FunctionDecl 0x5568b83b5ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5568b83b5ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5568b83b5c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5568b83b5d98 <line:550:22>
| `-NonNullAttr 0x5568b83b5df0 <col:63, col:77> 1
|-FunctionDecl 0x5568b83b7168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5568b83b6f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5568b83b7020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5568b83b7218 <col:29>
| `-NonNullAttr 0x5568b83b7270 <col:70, col:84> 1
|-FunctionDecl 0x5568b83b73e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5568b83b72b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5568b83b7490 <line:555:22>
| `-NonNullAttr 0x5568b83b74e8 <col:63, col:77> 1
|-FunctionDecl 0x5568b83b75f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5568b83b7538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5568b83b7698 <line:557:22>
| `-NonNullAttr 0x5568b83b76f0 <col:52, col:66> 1
|-FunctionDecl 0x5568b83b77f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5568b83b7738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5568b83b7898 <line:559:19>
| `-NonNullAttr 0x5568b83b78f0 <col:49, col:63> 1
|-FunctionDecl 0x5568b83b7b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5568b83b7938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5568b83b79c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5568b83b7bd8 <col:39>
| `-NonNullAttr 0x5568b83b7c30 <col:69, col:86> 1 2
|-FunctionDecl 0x5568b83b7d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5568b83b7c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5568b83b7dd8 <line:564:22>
| `-NonNullAttr 0x5568b83b7e30 <col:52, col:66> 1
|-FunctionDecl 0x5568b83b7f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5568b83b7ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5568b83b8040 <line:566:22>
| `-NonNullAttr 0x5568b83b8098 <col:52, col:66> 1
|-FunctionDecl 0x5568b83b8258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5568b83b80e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5568b83b8178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5568b83b8308 <col:39>
| `-NonNullAttr 0x5568b83b8360 <col:69, col:86> 1 2
|-FunctionDecl 0x5568b83b8460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5568b83b83a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5568b83b8508 <line:571:22>
| `-NonNullAttr 0x5568b83b8560 <col:52, col:66> 1
|-FunctionDecl 0x5568b83b8748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5568b83b8610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5568b83b87f0 <line:573:22>
| `-NonNullAttr 0x5568b83b8848 <col:63, col:77> 1
|-FunctionDecl 0x5568b83b8950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5568b83b8898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5568b83b89f8 <line:575:22>
| `-NonNullAttr 0x5568b83b8a50 <col:63, col:77> 1
|-FunctionDecl 0x5568b83b8c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5568b83b8a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5568b83b8b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5568b83b8d28 <line:579:22>
| `-NonNullAttr 0x5568b83b8d80 <col:63, col:80> 1 2
|-FunctionDecl 0x5568b83b8fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5568b83b8dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5568b83b8e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5568b83b9058 <line:582:22>
| `-NonNullAttr 0x5568b83b90b0 <col:63, col:77> 1
|-FunctionDecl 0x5568b83b9258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5568b83b90f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5568b83b9178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5568b83b9308 <line:586:22>
| `-NonNullAttr 0x5568b83b9360 <col:63, col:80> 1 2
|-FunctionDecl 0x5568b83b94e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5568b83b93a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5568b83b9428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5568b83b9598 <col:36>
| `-NonNullAttr 0x5568b83b95f0 <col:77, col:91> 1
|-FunctionDecl 0x5568b83b9928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5568b83b96d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5568b83b97e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5568b83b99d8 <line:591:22>
| `-NonNullAttr 0x5568b83b9a30 <col:63, col:77> 1
|-FunctionDecl 0x5568b83b9ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5568b83b9a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5568b83b9c50 <line:593:22>
| `-NonNullAttr 0x5568b83b9ca8 <col:63, col:77> 1
|-FunctionDecl 0x5568b83b9db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5568b83b9cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5568b83b9e58 <line:595:22>
| `-NonNullAttr 0x5568b83b9eb0 <col:52, col:66> 1
|-FunctionDecl 0x5568b83b9fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5568b83b9f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5568b83ba070 <line:597:22>
| `-NonNullAttr 0x5568b83ba0c8 <col:52, col:66> 1
|-FunctionDecl 0x5568b83ba2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5568b83ba118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5568b83ba190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5568b83ba3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5568b83ba6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5568b83ba428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5568b83ba4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5568b83ba530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5568b83ba790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5568b83ba9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5568b83ba870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5568b83baa50 <line:606:22>
| `-NonNullAttr 0x5568b83baaa8 <col:63, col:77> 1
|-FunctionDecl 0x5568b83babb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5568b83baaf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5568b83bac58 <line:608:22>
| `-NonNullAttr 0x5568b83bacb0 <col:63, col:77> 1
|-FunctionDecl 0x5568b83baf10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5568b83bacf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5568b83bad78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5568b83bafc0 <line:612:22>
| `-NonNullAttr 0x5568b83bb018 <col:63, col:80> 1 2
|-FunctionDecl 0x5568b83bb228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5568b83bb068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5568b83bb0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5568b83bb2d8 <col:37>
| `-NonNullAttr 0x5568b83bb330 <col:78, col:92> 1
|-FunctionDecl 0x5568b83bb548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5568b83bb378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5568b83bb420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5568b83bb5f8 <line:618:22>
| `-NonNullAttr 0x5568b83bb650 <col:63, col:80> 1 2
|-FunctionDecl 0x5568b83bb818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5568b83bb698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5568b83bb710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5568b83bb8c8 <line:621:22>
| `-NonNullAttr 0x5568b83bb920 <col:63, col:77> 1
|-FunctionDecl 0x5568b83bbbc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5568b83bba00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5568b83bba80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5568b83bbc78 <line:623:22>
| `-NonNullAttr 0x5568b83bbcd0 <col:63, col:77> 1
|-FunctionDecl 0x5568b83bbe48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5568b83bbd18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5568b83bbf20 <line:625:22>
| `-NonNullAttr 0x5568b83bbf78 <col:63, col:77> 1
|-FunctionDecl 0x5568b83bc080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5568b83bbfc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5568b83bc128 <line:627:22>
| `-NonNullAttr 0x5568b83bc180 <col:52, col:66> 1
|-FunctionDecl 0x5568b83bc280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5568b83bc1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5568b83bc328 <line:629:22>
| `-NonNullAttr 0x5568b83bc380 <col:52, col:66> 1
|-FunctionDecl 0x5568b83bc480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5568b83bc3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5568b83bc528 <line:631:22>
| `-NonNullAttr 0x5568b83bc580 <col:52, col:66> 1
|-FunctionDecl 0x5568b83bc958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5568b83bc660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5568b83bc770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5568b83bc7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5568b83bca10 <line:635:22>
| `-NonNullAttr 0x5568b83bca68 <col:63, col:77> 1
|-FunctionDecl 0x5568b83bcbe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5568b83bcab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5568b83bcc90 <line:637:22>
| `-NonNullAttr 0x5568b83bcce8 <col:63, col:77> 1
|-FunctionDecl 0x5568b83bcdf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5568b83bcd38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5568b83bce98 <line:639:22>
| `-NonNullAttr 0x5568b83bcef0 <col:52, col:66> 1
|-FunctionDecl 0x5568b83bd0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5568b83bcfb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5568b83bd190 <line:641:22>
| `-NonNullAttr 0x5568b83bd1e8 <col:63, col:77> 1
|-FunctionDecl 0x5568b83bd2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5568b83bd238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5568b83bd398 <line:643:22>
| `-NonNullAttr 0x5568b83bd3f0 <col:63, col:77> 1
|-FunctionDecl 0x5568b83bd618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5568b83bd438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5568b83bd4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5568b83bd6c8 <line:647:22>
| `-NonNullAttr 0x5568b83bd720 <col:63, col:80> 1 2
|-FunctionDecl 0x5568b83bd928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5568b83bd768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5568b83bd7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5568b83bd9d8 <line:650:22>
| `-NonNullAttr 0x5568b83bda30 <col:63, col:77> 1
|-FunctionDecl 0x5568b83bdd78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5568b83bdb10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5568b83bdc30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5568b83bde28 <line:653:22>
| `-NonNullAttr 0x5568b83bde80 <col:63, col:77> 1
|-FunctionDecl 0x5568b83bdfe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5568b83bdec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5568b83be090 <col:69>
|-FunctionDecl 0x5568b83be208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5568b83be0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5568b83be2b0 <col:72>
|-FunctionDecl 0x5568b83be4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5568b83be318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5568b83be3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5568b83be598 <col:44>
|-FunctionDecl 0x5568b83be7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5568b83be600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5568b83be678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5568b83be868 <line:660:22>
| `-NonNullAttr 0x5568b83be8c0 <col:63, col:77> 2
|-FunctionDecl 0x5568b83bed08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5568b83be9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5568b83beab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5568b83bebc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5568b83bedc0 <col:47>
|-FunctionDecl 0x5568b83bff60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5568b83bee30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5568b83c00b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5568b83c0020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5568b83c0210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5568b83c0178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5568b83c02d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5568b83c0398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5568b83c0458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5568b83c0510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5568b83c0590 prev 0x5568b83c0510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5568b83c05f8 <col:24> 'int' 0
|-VarDecl 0x5568b83c0630 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5568b83c06b0 prev 0x5568b83c0630 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x5568b83c0718 <col:27> 'int' 0
|-VarDecl 0x5568b83c0750 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5568b83c07d0 prev 0x5568b83c0750 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5568b83c0838 <col:27> 'int' 0
|-VarDecl 0x5568b83c0870 <line:677:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5568b83c08f0 prev 0x5568b83c0870 <line:678:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5568b83c0958 <col:27> 'int' 0
|-VarDecl 0x5568b83c0988 <line:679:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5568b83c0a00 <line:680:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5568b83c0a80 <line:681:1, col:5> col:5 used x 'int'
|-VarDecl 0x5568b83c0b00 prev 0x5568b83c0a80 <line:682:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5568b83c0b68 <col:9> 'int' 0
|-VarDecl 0x5568b83c0ba0 <line:683:1, col:5> col:5 used y 'int'
|-VarDecl 0x5568b83c0c20 prev 0x5568b83c0ba0 <line:684:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5568b83c0c88 <col:9> 'int' 0
|-VarDecl 0x5568b83c0cc0 <line:685:1, col:5> col:5 used z 'int'
|-VarDecl 0x5568b83c0d40 prev 0x5568b83c0cc0 <line:686:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5568b83c0da8 <col:9> 'int' 0
|-VarDecl 0x5568b83c0dd8 <line:687:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x5568b83c0e58 <line:688:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x5568b83c0ed0 <line:689:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x5568b83c0f70 <line:690:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x5568b83c0fe8 <line:691:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x5568b83c1060 <line:692:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x5568b83c10d8 <line:693:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x5568b83c1150 <line:694:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x5568b83c11c8 <line:695:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x5568b83c1240 <line:696:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x5568b83c12b8 <line:697:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x5568b83c1338 <line:698:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x5568b83c13b8 <line:699:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x5568b83c1430 <line:700:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x5568b83c14b0 <line:701:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x5568b83c1528 <line:702:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x5568b83c15a0 <line:703:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5568b83c1618 <line:704:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5568b83c1730 prev 0x5568b83bff60 <line:705:1, line:733:1> line:705:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5568b83c1698 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5568b83c2f90 <line:706:1, line:733:1>
|   |-CallExpr 0x5568b83c1848 <line:707:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5568b83c1830 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568b83c17d8 <col:3> 'void ()' Function 0x5568b8367350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5568b83c18c0 <line:708:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5568b83c1868 <col:3> 'int' lvalue Var 0x5568b83c14b0 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5568b83c18a8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5568b83c1888 <col:15> 'int' lvalue Var 0x5568b83c13b8 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5568b83c1920 <line:709:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5568b83c18e0 <col:3> 'int' lvalue Var 0x5568b83c13b8 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x5568b83c1900 <col:15> 'int' 1
|   |-BinaryOperator 0x5568b83c1998 <line:710:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5568b83c1940 <col:3> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5568b83c1980 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5568b83c1960 <col:20> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5568b83c1a30 <line:711:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5568b83c19b8 <col:3> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5568b83c1a08 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5568b83c19d8 <col:27> 'int' 1
|   |-CallExpr 0x5568b83c1bb8 <line:712:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5568b83c1ba0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5568b83c1a50 <col:3> 'void (int)' Function 0x5568b83670d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5568b83c1b50 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5568b83c1b30 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5568b83c1b10 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5568b83c1ac8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5568b83c1ab0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5568b83c1a70 <col:23> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5568b83c1af8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5568b83c1ae0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5568b83c1a90 <col:41> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5568b83c1c38 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5568b83c1be0 <col:3> '_Bool' lvalue Var 0x5568b83c10d8 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5568b83c1c20 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5568b83c1c00 <col:20> '_Bool' lvalue Var 0x5568b83c0ed0 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5568b83c1cb0 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5568b83c1c58 <col:3> '_Bool' lvalue Var 0x5568b83c1150 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5568b83c1c98 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5568b83c1c78 <col:20> '_Bool' lvalue Var 0x5568b83c0f70 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5568b83c1d28 <line:715:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5568b83c1cd0 <col:3> '_Bool' lvalue Var 0x5568b83c11c8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5568b83c1d10 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5568b83c1cf0 <col:20> '_Bool' lvalue Var 0x5568b83c0fe8 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5568b83c1da0 <line:716:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5568b83c1d48 <col:3> '_Bool' lvalue Var 0x5568b83c1240 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5568b83c1d88 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5568b83c1d68 <col:20> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5568b83c1e38 <line:717:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5568b83c1dc0 <col:3> '_Bool' lvalue Var 0x5568b83c0f70 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x5568b83c1e10 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5568b83c1de0 <col:27> 'int' 1
|   |-CallExpr 0x5568b83c1e90 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5568b83c1e78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568b83c1e58 <col:3> 'void ()' Function 0x5568b8367410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5568b83c1ee8 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5568b83c1ed0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568b83c1eb0 <col:3> 'void ()' Function 0x5568b8367350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5568b83c1f80 <line:720:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5568b83c1f08 <col:3> 'int' lvalue Var 0x5568b83c06b0 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5568b83c1f48 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5568b83c1f28 <col:25> 'int' lvalue Var 0x5568b83c0b00 'x' 'int'
|   |-CallExpr 0x5568b83c1fd8 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5568b83c1fc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568b83c1fa0 <col:3> 'void ()' Function 0x5568b8367410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5568b83c2030 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5568b83c2018 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568b83c1ff8 <col:3> 'void ()' Function 0x5568b8367350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5568b83c2318 <line:723:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5568b83c2050 <col:3> 'int' lvalue Var 0x5568b83c0d40 'z' 'int'
|   | `-ConditionalOperator 0x5568b83c22e8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5568b83c2110 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5568b83c20c8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5568b83c20b0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5568b83c2070 <col:7> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5568b83c20f8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5568b83c20e0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5568b83c2090 <col:25> '_Bool' lvalue Var 0x5568b83c0f70 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5568b83c22d0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5568b83c2130 <col:42> 'int' lvalue Var 0x5568b83c13b8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5568b83c22b0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5568b83c2280 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5568b83c21f0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5568b83c21a8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5568b83c2190 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5568b83c2150 <col:55> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5568b83c21d8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5568b83c21c0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5568b83c2170 <col:73> '_Bool' lvalue Var 0x5568b83c1150 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5568b83c2250 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5568b83c2210 <col:90> 'int' lvalue Var 0x5568b83c14b0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5568b83c2268 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568b83c2230 <col:102> 'int' lvalue Var 0x5568b83c0d40 'z' 'int'
|   |-BinaryOperator 0x5568b83c2520 <line:724:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5568b83c2338 <col:3> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5568b83c2508 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568b83c24d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5568b83c23f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5568b83c23b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5568b83c2398 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5568b83c2358 <col:20> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5568b83c23e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5568b83c23c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5568b83c2378 <col:38> '_Bool' lvalue Var 0x5568b83c0f70 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5568b83c2490 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5568b83c2448 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5568b83c2418 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5568b83c24c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5568b83c24a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568b83c2470 <col:66> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5568b83c2808 <line:725:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5568b83c2540 <col:3> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5568b83c27f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568b83c27c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5568b83c26e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5568b83c2600 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5568b83c25b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5568b83c25a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5568b83c2560 <col:20> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5568b83c25e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5568b83c25d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5568b83c2580 <col:38> '_Bool' lvalue Var 0x5568b83c0f70 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5568b83c26c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5568b83c2678 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5568b83c2660 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5568b83c2620 <col:56> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5568b83c26a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5568b83c2690 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5568b83c2640 <col:74> '_Bool' lvalue Var 0x5568b83c1150 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5568b83c2778 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5568b83c2730 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5568b83c2700 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5568b83c27a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5568b83c2790 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568b83c2758 <col:102> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5568b83c2a10 <line:726:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5568b83c2828 <col:3> '_Bool' lvalue Var 0x5568b83c0f70 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5568b83c29f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568b83c29c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5568b83c28e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5568b83c28a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5568b83c2888 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5568b83c2848 <col:20> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5568b83c28d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5568b83c28b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5568b83c2868 <col:38> '_Bool' lvalue Var 0x5568b83c0f70 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5568b83c2980 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5568b83c2938 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5568b83c2908 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5568b83c29b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5568b83c2998 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568b83c2960 <col:66> '_Bool' lvalue Var 0x5568b83c0f70 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5568b83c2cf8 <line:727:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5568b83c2a30 <col:3> '_Bool' lvalue Var 0x5568b83c1150 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5568b83c2ce0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568b83c2cb0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5568b83c2bd0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5568b83c2af0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5568b83c2aa8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5568b83c2a90 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5568b83c2a50 <col:20> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5568b83c2ad8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5568b83c2ac0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5568b83c2a70 <col:38> '_Bool' lvalue Var 0x5568b83c0f70 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5568b83c2bb0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5568b83c2b68 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5568b83c2b50 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5568b83c2b10 <col:56> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5568b83c2b98 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5568b83c2b80 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5568b83c2b30 <col:74> '_Bool' lvalue Var 0x5568b83c1150 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5568b83c2c68 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5568b83c2c20 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5568b83c2bf0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5568b83c2c98 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5568b83c2c80 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568b83c2c48 <col:102> '_Bool' lvalue Var 0x5568b83c1150 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x5568b83c2d50 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5568b83c2d38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568b83c2d18 <col:3> 'void ()' Function 0x5568b8367410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5568b83c2da8 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5568b83c2d90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568b83c2d70 <col:3> 'void ()' Function 0x5568b8367350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5568b83c2e60 <line:730:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5568b83c2dc8 <col:3> 'int' lvalue Var 0x5568b83c0590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5568b83c2e40 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5568b83c2e28 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5568b83c2de8 <col:22> 'int' lvalue Var 0x5568b83c0590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5568b83c2e08 <col:41> 'int' 1
|   |-CallExpr 0x5568b83c2eb8 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5568b83c2ea0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568b83c2e80 <col:3> 'void ()' Function 0x5568b8367410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5568b83c2f68 <line:732:3, col:36>
|     `-CallExpr 0x5568b83c2f48 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5568b83c2f30 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5568b83c2ed8 <col:10> 'void *(void)' Function 0x5568b8366e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5568b83c3120 prev 0x5568b83c00b8 <line:734:1, line:753:1> line:734:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5568b83c3088 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5568b83c4360 <line:735:1, line:753:1>
|   |-CallExpr 0x5568b83c3200 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5568b83c31e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568b83c31c8 <col:3> 'void ()' Function 0x5568b8367350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5568b83c3260 <line:737:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5568b83c3220 <col:3> 'int' lvalue Var 0x5568b83c0b00 'x' 'int'
|   | `-IntegerLiteral 0x5568b83c3240 <col:7> 'int' 1
|   |-CallExpr 0x5568b83c32b8 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5568b83c32a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568b83c3280 <col:3> 'void ()' Function 0x5568b8367410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5568b83c3310 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5568b83c32f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568b83c32d8 <col:3> 'void ()' Function 0x5568b8367350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5568b83c3388 <line:740:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5568b83c3330 <col:3> 'int' lvalue Var 0x5568b83c07d0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5568b83c3370 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5568b83c3350 <col:25> 'int' lvalue Var 0x5568b83c0c20 'y' 'int'
|   |-CallExpr 0x5568b83c33e0 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5568b83c33c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568b83c33a8 <col:3> 'void ()' Function 0x5568b8367410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5568b83c3438 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5568b83c3420 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568b83c3400 <col:3> 'void ()' Function 0x5568b8367350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5568b83c3720 <line:743:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5568b83c3458 <col:3> 'int' lvalue Var 0x5568b83c0d40 'z' 'int'
|   | `-ConditionalOperator 0x5568b83c36f0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5568b83c3518 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5568b83c34d0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5568b83c34b8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5568b83c3478 <col:7> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5568b83c3500 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5568b83c34e8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5568b83c3498 <col:25> '_Bool' lvalue Var 0x5568b83c0fe8 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5568b83c36d8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5568b83c3538 <col:42> 'int' lvalue Var 0x5568b83c13b8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5568b83c36b8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5568b83c3688 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5568b83c35f8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5568b83c35b0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5568b83c3598 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5568b83c3558 <col:55> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5568b83c35e0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5568b83c35c8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5568b83c3578 <col:73> '_Bool' lvalue Var 0x5568b83c11c8 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5568b83c3658 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5568b83c3618 <col:90> 'int' lvalue Var 0x5568b83c14b0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5568b83c3670 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568b83c3638 <col:102> 'int' lvalue Var 0x5568b83c0d40 'z' 'int'
|   |-BinaryOperator 0x5568b83c3928 <line:744:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5568b83c3740 <col:3> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5568b83c3910 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568b83c38e0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5568b83c3800 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5568b83c37b8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5568b83c37a0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5568b83c3760 <col:20> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5568b83c37e8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5568b83c37d0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5568b83c3780 <col:38> '_Bool' lvalue Var 0x5568b83c0fe8 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5568b83c3898 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5568b83c3850 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5568b83c3820 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5568b83c38c8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5568b83c38b0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568b83c3878 <col:66> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5568b83c3c10 <line:745:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5568b83c3948 <col:3> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5568b83c3bf8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568b83c3bc8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5568b83c3ae8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5568b83c3a08 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5568b83c39c0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5568b83c39a8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5568b83c3968 <col:20> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5568b83c39f0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5568b83c39d8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5568b83c3988 <col:38> '_Bool' lvalue Var 0x5568b83c0fe8 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5568b83c3ac8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5568b83c3a80 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5568b83c3a68 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5568b83c3a28 <col:56> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5568b83c3ab0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5568b83c3a98 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5568b83c3a48 <col:74> '_Bool' lvalue Var 0x5568b83c11c8 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5568b83c3b80 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5568b83c3b38 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5568b83c3b08 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5568b83c3bb0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5568b83c3b98 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568b83c3b60 <col:102> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5568b83c3e18 <line:746:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5568b83c3c30 <col:3> '_Bool' lvalue Var 0x5568b83c0fe8 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5568b83c3e00 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568b83c3dd0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5568b83c3cf0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5568b83c3ca8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5568b83c3c90 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5568b83c3c50 <col:20> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5568b83c3cd8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5568b83c3cc0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5568b83c3c70 <col:38> '_Bool' lvalue Var 0x5568b83c0fe8 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5568b83c3d88 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5568b83c3d40 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5568b83c3d10 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5568b83c3db8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5568b83c3da0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568b83c3d68 <col:66> '_Bool' lvalue Var 0x5568b83c0fe8 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5568b83c4118 <line:747:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5568b83c3e38 <col:3> '_Bool' lvalue Var 0x5568b83c11c8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5568b83c4100 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568b83c40d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5568b83c3ff0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5568b83c3ef8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5568b83c3eb0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5568b83c3e98 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5568b83c3e58 <col:20> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5568b83c3ee0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5568b83c3ec8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5568b83c3e78 <col:38> '_Bool' lvalue Var 0x5568b83c0fe8 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5568b83c3fd0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5568b83c3f70 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5568b83c3f58 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5568b83c3f18 <col:56> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5568b83c3fb8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5568b83c3fa0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5568b83c3f38 <col:74> '_Bool' lvalue Var 0x5568b83c11c8 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5568b83c4088 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5568b83c4040 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5568b83c4010 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5568b83c40b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5568b83c40a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568b83c4068 <col:102> '_Bool' lvalue Var 0x5568b83c11c8 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5568b83c4170 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5568b83c4158 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568b83c4138 <col:3> 'void ()' Function 0x5568b8367410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5568b83c41c8 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5568b83c41b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568b83c4190 <col:3> 'void ()' Function 0x5568b8367350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5568b83c4280 <line:750:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5568b83c41e8 <col:3> 'int' lvalue Var 0x5568b83c0590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5568b83c4260 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5568b83c4248 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5568b83c4208 <col:22> 'int' lvalue Var 0x5568b83c0590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5568b83c4228 <col:41> 'int' 1
|   |-CallExpr 0x5568b83c42d8 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5568b83c42c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568b83c42a0 <col:3> 'void ()' Function 0x5568b8367410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5568b83c4350 <line:752:3, col:36>
|     `-CallExpr 0x5568b83c4330 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5568b83c4318 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5568b83c42f8 <col:10> 'void *(void)' Function 0x5568b8366e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5568b83c44a8 prev 0x5568b83c0210 <line:754:1, line:786:1> line:754:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5568b83c4410 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5568b83c80a0 <line:755:1, line:786:1>
|   |-CallExpr 0x5568b83c4588 <line:756:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5568b83c4570 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568b83c4550 <col:3> 'void ()' Function 0x5568b8367350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5568b83c45e8 <line:757:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5568b83c45a8 <col:3> 'int' lvalue Var 0x5568b83c0c20 'y' 'int'
|   | `-IntegerLiteral 0x5568b83c45c8 <col:7> 'int' 1
|   |-CallExpr 0x5568b83c4640 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5568b83c4628 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568b83c4608 <col:3> 'void ()' Function 0x5568b8367410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5568b83c4698 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5568b83c4680 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568b83c4660 <col:3> 'void ()' Function 0x5568b8367350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5568b83c4748 <line:760:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5568b83c46b8 <col:3> '_Bool' lvalue Var 0x5568b83c15a0 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5568b83c4730 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5568b83c4710 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5568b83c46f8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5568b83c46d8 <col:19> 'void *(void)' Function 0x5568b8366e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5568b83c47f8 <line:761:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5568b83c4768 <col:3> '_Bool' lvalue Var 0x5568b83c1618 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5568b83c47e0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5568b83c47c0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5568b83c47a8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5568b83c4788 <col:19> 'void *(void)' Function 0x5568b8366e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5568b83c4870 <line:762:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5568b83c4818 <col:3> '_Bool' lvalue Var 0x5568b83c0dd8 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5568b83c4858 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5568b83c4838 <col:21> '_Bool' lvalue Var 0x5568b83c1618 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5568b83c48e8 <line:763:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5568b83c4890 <col:3> 'int' lvalue Var 0x5568b83c0e58 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5568b83c48d0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5568b83c48b0 <col:15> 'int' lvalue Var 0x5568b83c0d40 'z' 'int'
|   |-BinaryOperator 0x5568b83c4d20 <line:764:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5568b83c4908 <col:3> 'int' lvalue Var 0x5568b83c0d40 'z' 'int'
|   | `-ConditionalOperator 0x5568b83c4cf0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5568b83c4b18 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5568b83c4a38 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5568b83c4960 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5568b83c4948 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5568b83c4928 <col:8> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5568b83c4a18 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5568b83c49b0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5568b83c4998 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5568b83c4978 <col:27> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x5568b83c4a00 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5568b83c49e8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5568b83c49c8 <col:46> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5568b83c4af8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5568b83c4a90 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5568b83c4a78 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5568b83c4a58 <col:65> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x5568b83c4ae0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5568b83c4ac8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5568b83c4aa8 <col:84> '_Bool' lvalue Var 0x5568b83c1240 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5568b83c4cd8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5568b83c4b38 <col:101> 'int' lvalue Var 0x5568b83c0d40 'z' 'int'
|   |   `-ParenExpr 0x5568b83c4cb8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5568b83c4c88 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5568b83c4bf8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5568b83c4bb0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5568b83c4b98 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5568b83c4b58 <col:106> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5568b83c4be0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5568b83c4bc8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5568b83c4b78 <col:124> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5568b83c4c58 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5568b83c4c18 <col:141> 'int' lvalue Var 0x5568b83c13b8 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5568b83c4c70 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568b83c4c38 <col:153> 'int' lvalue Var 0x5568b83c14b0 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5568b83c5250 <line:765:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5568b83c4d40 <col:3> 'int' lvalue Var 0x5568b83c13b8 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x5568b83c5220 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5568b83c51f0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5568b83c51d8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5568b83c4d60 <col:15> '_Bool' lvalue Var 0x5568b83c1618 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5568b83c5208 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5568b83c4d80 <col:31> 'int' lvalue Var 0x5568b83c13b8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5568b83c51b8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5568b83c5188 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5568b83c4fb0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5568b83c4eb0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5568b83c4dd8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5568b83c4dc0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5568b83c4da0 <col:45> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5568b83c4e90 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5568b83c4e28 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5568b83c4e10 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5568b83c4df0 <col:64> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5568b83c4e78 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5568b83c4e60 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5568b83c4e40 <col:83> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5568b83c4f70 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5568b83c4f08 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5568b83c4ef0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5568b83c4ed0 <col:102> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5568b83c4f58 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5568b83c4f40 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5568b83c4f20 <col:121> '_Bool' lvalue Var 0x5568b83c1240 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5568b83c5170 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5568b83c4fd0 <col:138> 'int' lvalue Var 0x5568b83c13b8 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x5568b83c5150 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5568b83c5120 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5568b83c5090 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5568b83c5048 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5568b83c5030 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5568b83c4ff0 <col:151> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5568b83c5078 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5568b83c5060 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5568b83c5010 <col:169> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5568b83c50f0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5568b83c50b0 <col:186> 'int' lvalue Var 0x5568b83c13b8 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5568b83c5108 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5568b83c50d0 <col:198> 'int' lvalue Var 0x5568b83c13b8 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5568b83c5760 <line:766:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5568b83c5270 <col:3> 'int' lvalue Var 0x5568b83c14b0 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x5568b83c5730 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5568b83c5700 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5568b83c56e8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5568b83c5290 <col:15> '_Bool' lvalue Var 0x5568b83c1618 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5568b83c5718 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5568b83c52b0 <col:31> 'int' lvalue Var 0x5568b83c14b0 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x5568b83c56c8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5568b83c5698 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5568b83c54c0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5568b83c53e0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5568b83c5308 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5568b83c52f0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5568b83c52d0 <col:45> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5568b83c53c0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5568b83c5358 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5568b83c5340 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5568b83c5320 <col:64> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5568b83c53a8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5568b83c5390 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5568b83c5370 <col:83> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5568b83c54a0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5568b83c5438 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5568b83c5420 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5568b83c5400 <col:102> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5568b83c5488 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5568b83c5470 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5568b83c5450 <col:121> '_Bool' lvalue Var 0x5568b83c1240 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5568b83c5680 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5568b83c54e0 <col:138> 'int' lvalue Var 0x5568b83c14b0 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x5568b83c5660 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5568b83c5630 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5568b83c55a0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5568b83c5558 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5568b83c5540 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5568b83c5500 <col:151> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5568b83c5588 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5568b83c5570 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5568b83c5520 <col:169> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5568b83c5600 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5568b83c55c0 <col:186> 'int' lvalue Var 0x5568b83c14b0 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5568b83c5618 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5568b83c55e0 <col:198> 'int' lvalue Var 0x5568b83c14b0 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5568b83c5d08 <line:767:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5568b83c5780 <col:3> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5568b83c5cf0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568b83c5cc0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5568b83c5c78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5568b83c5c60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5568b83c57a0 <col:20> '_Bool' lvalue Var 0x5568b83c1618 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5568b83c5ca8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5568b83c5c90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5568b83c57c0 <col:36> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5568b83c5c40 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5568b83c5c10 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5568b83c59d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5568b83c58f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5568b83c5818 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5568b83c5800 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5568b83c57e0 <col:55> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5568b83c58d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5568b83c5868 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5568b83c5850 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5568b83c5830 <col:74> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5568b83c58b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5568b83c58a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5568b83c5880 <col:93> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5568b83c59b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5568b83c5948 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5568b83c5930 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5568b83c5910 <col:112> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5568b83c5998 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5568b83c5980 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5568b83c5960 <col:131> '_Bool' lvalue Var 0x5568b83c1240 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5568b83c5bf8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5568b83c5be0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5568b83c59f0 <col:148> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5568b83c5bc0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5568b83c5b90 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5568b83c5ab0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5568b83c5a68 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5568b83c5a50 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5568b83c5a10 <col:166> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5568b83c5a98 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5568b83c5a80 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5568b83c5a30 <col:184> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5568b83c5b48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5568b83c5b00 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5568b83c5ad0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5568b83c5b78 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5568b83c5b60 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5568b83c5b28 <col:212> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5568b83c62f8 <line:768:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5568b83c5d28 <col:3> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5568b83c62e0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568b83c62b0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5568b83c6268 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5568b83c6250 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5568b83c5d48 <col:20> '_Bool' lvalue Var 0x5568b83c1618 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5568b83c6298 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5568b83c6280 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5568b83c5d68 <col:36> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5568b83c6230 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5568b83c6200 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5568b83c5f78 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5568b83c5e98 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5568b83c5dc0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5568b83c5da8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5568b83c5d88 <col:55> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5568b83c5e78 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5568b83c5e10 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5568b83c5df8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5568b83c5dd8 <col:74> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5568b83c5e60 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5568b83c5e48 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5568b83c5e28 <col:93> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5568b83c5f58 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5568b83c5ef0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5568b83c5ed8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5568b83c5eb8 <col:112> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5568b83c5f40 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5568b83c5f28 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5568b83c5f08 <col:131> '_Bool' lvalue Var 0x5568b83c1240 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5568b83c61e8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5568b83c61d0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5568b83c5fc0 <col:148> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5568b83c61b0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5568b83c6180 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5568b83c6080 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5568b83c6038 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5568b83c6020 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5568b83c5fe0 <col:166> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5568b83c6068 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5568b83c6050 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5568b83c6000 <col:184> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5568b83c6150 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5568b83c60d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5568b83c60a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5568b83c6168 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5568b83c6128 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5568b83c60f8 <col:219> 'int' 0
|   |-BinaryOperator 0x5568b83c68a0 <line:769:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5568b83c6318 <col:3> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5568b83c6888 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568b83c6858 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5568b83c6810 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5568b83c67f8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5568b83c6338 <col:20> '_Bool' lvalue Var 0x5568b83c1618 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5568b83c6840 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5568b83c6828 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5568b83c6358 <col:36> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x5568b83c67d8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5568b83c67a8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5568b83c6568 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5568b83c6488 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5568b83c63b0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5568b83c6398 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5568b83c6378 <col:55> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5568b83c6468 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5568b83c6400 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5568b83c63e8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5568b83c63c8 <col:74> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5568b83c6450 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5568b83c6438 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5568b83c6418 <col:93> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5568b83c6548 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5568b83c64e0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5568b83c64c8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5568b83c64a8 <col:112> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5568b83c6530 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5568b83c6518 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5568b83c64f8 <col:131> '_Bool' lvalue Var 0x5568b83c1240 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5568b83c6790 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5568b83c6778 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5568b83c6588 <col:148> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x5568b83c6758 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5568b83c6728 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5568b83c6648 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5568b83c6600 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5568b83c65e8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5568b83c65a8 <col:166> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5568b83c6630 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5568b83c6618 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5568b83c65c8 <col:184> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5568b83c66e0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5568b83c6698 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5568b83c6668 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5568b83c6710 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5568b83c66f8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5568b83c66c0 <col:212> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5568b83c6e68 <line:770:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5568b83c68c0 <col:3> '_Bool' lvalue Var 0x5568b83c1240 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5568b83c6e50 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568b83c6e20 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5568b83c6dd8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5568b83c6dc0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5568b83c68e0 <col:20> '_Bool' lvalue Var 0x5568b83c1618 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5568b83c6e08 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5568b83c6df0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5568b83c6900 <col:36> '_Bool' lvalue Var 0x5568b83c1240 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x5568b83c6da0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5568b83c6d70 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5568b83c6b10 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5568b83c6a30 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5568b83c6958 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5568b83c6940 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5568b83c6920 <col:55> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5568b83c6a10 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5568b83c69a8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5568b83c6990 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5568b83c6970 <col:74> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5568b83c69f8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5568b83c69e0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5568b83c69c0 <col:93> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5568b83c6af0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5568b83c6a88 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5568b83c6a70 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5568b83c6a50 <col:112> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5568b83c6ad8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5568b83c6ac0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5568b83c6aa0 <col:131> '_Bool' lvalue Var 0x5568b83c1240 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5568b83c6d58 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5568b83c6d40 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5568b83c6b30 <col:148> '_Bool' lvalue Var 0x5568b83c1240 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x5568b83c6d20 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5568b83c6cf0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5568b83c6bf0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5568b83c6ba8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5568b83c6b90 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5568b83c6b50 <col:166> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5568b83c6bd8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5568b83c6bc0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5568b83c6b70 <col:184> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5568b83c6cc0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5568b83c6c40 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5568b83c6c10 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5568b83c6cd8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5568b83c6c98 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5568b83c6c68 <col:219> 'int' 0
|   |-BinaryOperator 0x5568b83c6ee0 <line:771:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5568b83c6e88 <col:3> 'int' lvalue Var 0x5568b83c08f0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x5568b83c6ec8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5568b83c6ea8 <col:25> 'int' lvalue Var 0x5568b83c0d40 'z' 'int'
|   |-BinaryOperator 0x5568b83c7030 <line:772:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5568b83c6f00 <col:3> 'int' lvalue Var 0x5568b83c0d40 'z' 'int'
|   | `-ConditionalOperator 0x5568b83c7000 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5568b83c6f98 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5568b83c6f80 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5568b83c6f20 <col:7> '_Bool' lvalue Var 0x5568b83c0dd8 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5568b83c6fd0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5568b83c6f40 <col:25> 'int' lvalue Var 0x5568b83c0e58 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5568b83c6fe8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5568b83c6f60 <col:37> 'int' lvalue Var 0x5568b83c0d40 'z' 'int'
|   |-BinaryOperator 0x5568b83c70c8 <line:773:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5568b83c7050 <col:3> '_Bool' lvalue Var 0x5568b83c0dd8 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5568b83c70a0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5568b83c7070 <col:28> 'int' 0
|   |-CallExpr 0x5568b83c7120 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5568b83c7108 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568b83c70e8 <col:3> 'void ()' Function 0x5568b8367410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5568b83c7178 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5568b83c7160 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568b83c7140 <col:3> 'void ()' Function 0x5568b8367350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5568b83c7460 <line:776:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5568b83c7198 <col:3> 'int' lvalue Var 0x5568b83c0d40 'z' 'int'
|   | `-ConditionalOperator 0x5568b83c7430 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5568b83c7258 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5568b83c7210 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5568b83c71f8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5568b83c71b8 <col:7> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5568b83c7240 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5568b83c7228 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5568b83c71d8 <col:25> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5568b83c7418 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5568b83c7278 <col:42> 'int' lvalue Var 0x5568b83c13b8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5568b83c73f8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5568b83c73c8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5568b83c7338 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5568b83c72f0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5568b83c72d8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5568b83c7298 <col:55> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5568b83c7320 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5568b83c7308 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5568b83c72b8 <col:73> '_Bool' lvalue Var 0x5568b83c1240 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5568b83c7398 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5568b83c7358 <col:90> 'int' lvalue Var 0x5568b83c14b0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5568b83c73b0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568b83c7378 <col:102> 'int' lvalue Var 0x5568b83c0d40 'z' 'int'
|   |-BinaryOperator 0x5568b83c7668 <line:777:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5568b83c7480 <col:3> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5568b83c7650 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568b83c7620 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5568b83c7540 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5568b83c74f8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5568b83c74e0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5568b83c74a0 <col:20> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5568b83c7528 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5568b83c7510 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5568b83c74c0 <col:38> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5568b83c75d8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5568b83c7590 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5568b83c7560 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5568b83c7608 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5568b83c75f0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568b83c75b8 <col:66> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5568b83c7950 <line:778:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5568b83c7688 <col:3> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5568b83c7938 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568b83c7908 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5568b83c7828 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5568b83c7748 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5568b83c7700 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5568b83c76e8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5568b83c76a8 <col:20> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5568b83c7730 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5568b83c7718 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5568b83c76c8 <col:38> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5568b83c7808 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5568b83c77c0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5568b83c77a8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5568b83c7768 <col:56> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5568b83c77f0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5568b83c77d8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5568b83c7788 <col:74> '_Bool' lvalue Var 0x5568b83c1240 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5568b83c78c0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5568b83c7878 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5568b83c7848 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5568b83c78f0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5568b83c78d8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568b83c78a0 <col:102> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5568b83c7b58 <line:779:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5568b83c7970 <col:3> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5568b83c7b40 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568b83c7b10 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5568b83c7a30 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5568b83c79e8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5568b83c79d0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5568b83c7990 <col:20> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5568b83c7a18 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5568b83c7a00 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5568b83c79b0 <col:38> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5568b83c7ac8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5568b83c7a80 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5568b83c7a50 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5568b83c7af8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5568b83c7ae0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568b83c7aa8 <col:66> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5568b83c7e40 <line:780:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5568b83c7b78 <col:3> '_Bool' lvalue Var 0x5568b83c1240 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5568b83c7e28 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568b83c7df8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5568b83c7d18 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5568b83c7c38 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5568b83c7bf0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5568b83c7bd8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5568b83c7b98 <col:20> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5568b83c7c20 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5568b83c7c08 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5568b83c7bb8 <col:38> '_Bool' lvalue Var 0x5568b83c1060 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5568b83c7cf8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5568b83c7cb0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5568b83c7c98 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5568b83c7c58 <col:56> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5568b83c7ce0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5568b83c7cc8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5568b83c7c78 <col:74> '_Bool' lvalue Var 0x5568b83c1240 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5568b83c7db0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5568b83c7d68 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5568b83c7d38 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5568b83c7de0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5568b83c7dc8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568b83c7d90 <col:102> '_Bool' lvalue Var 0x5568b83c1240 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5568b83c7e98 <line:781:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5568b83c7e80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568b83c7e60 <col:3> 'void ()' Function 0x5568b8367410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5568b83c7ef0 <line:782:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5568b83c7ed8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568b83c7eb8 <col:3> 'void ()' Function 0x5568b8367350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5568b83c7fa8 <line:783:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5568b83c7f10 <col:3> 'int' lvalue Var 0x5568b83c0590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5568b83c7f88 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5568b83c7f70 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5568b83c7f30 <col:22> 'int' lvalue Var 0x5568b83c0590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5568b83c7f50 <col:41> 'int' 1
|   |-CallExpr 0x5568b83c8018 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5568b83c8000 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568b83c7fe0 <col:3> 'void ()' Function 0x5568b8367410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5568b83c8090 <line:785:3, col:36>
|     `-CallExpr 0x5568b83c8070 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5568b83c8058 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5568b83c8038 <col:10> 'void *(void)' Function 0x5568b8366e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5568b83c81c0 prev 0x5568b83c02d8 <line:787:1, line:789:1> line:787:6 fence 'void ()'
| `-CompoundStmt 0x5568b83c8260 <line:788:1, line:789:1>
|-FunctionDecl 0x5568b83c8290 prev 0x5568b83c0398 <line:790:1, line:792:1> line:790:6 isync 'void ()'
| `-CompoundStmt 0x5568b83c8330 <line:791:1, line:792:1>
|-FunctionDecl 0x5568b83c8360 prev 0x5568b83c0458 <line:793:1, line:795:1> line:793:6 lwfence 'void ()'
| `-CompoundStmt 0x5568b83c8400 <line:794:1, line:795:1>
`-FunctionDecl 0x5568b83c8468 <line:796:1, line:820:1> line:796:5 main 'int ()'
  `-CompoundStmt 0x5568b83ca0c0 <line:797:1, line:820:1>
    |-DeclStmt 0x5568b83c8580 <line:798:3, col:18>
    | `-VarDecl 0x5568b83c8518 <col:3, col:13> col:13 used t1572 'pthread_t':'unsigned long'
    |-CallExpr 0x5568b83c8788 <line:799:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5568b83c8770 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5568b83c8598 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5568b83a78f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5568b83c85d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5568b83c85b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5568b83c8518 't1572' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5568b83c87c8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5568b83c8650 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5568b83c8628 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5568b83c85f0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5568b83c87e0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5568b83c8670 <col:39> 'void *(void *)' Function 0x5568b83c1730 'P0' 'void *(void *)'
    | `-ParenExpr 0x5568b83c86f0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5568b83c86c8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5568b83c8690 <col:52> 'int' 0
    |-DeclStmt 0x5568b83c8870 <line:800:3, col:18>
    | `-VarDecl 0x5568b83c8808 <col:3, col:13> col:13 used t1573 'pthread_t':'unsigned long'
    |-CallExpr 0x5568b83c8a18 <line:801:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5568b83c8a00 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5568b83c8888 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5568b83a78f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5568b83c88c8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5568b83c88a8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5568b83c8808 't1573' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5568b83c8a58 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5568b83c8940 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5568b83c8918 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5568b83c88e0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5568b83c8a70 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5568b83c8960 <col:39> 'void *(void *)' Function 0x5568b83c3120 'P1' 'void *(void *)'
    | `-ParenExpr 0x5568b83c89e0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5568b83c89b8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5568b83c8980 <col:52> 'int' 0
    |-DeclStmt 0x5568b83c8b00 <line:802:3, col:18>
    | `-VarDecl 0x5568b83c8a98 <col:3, col:13> col:13 used t1574 'pthread_t':'unsigned long'
    |-CallExpr 0x5568b83c8ca8 <line:803:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5568b83c8c90 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5568b83c8b18 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5568b83a78f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5568b83c8b58 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5568b83c8b38 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5568b83c8a98 't1574' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5568b83c8ce8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5568b83c8bd0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5568b83c8ba8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5568b83c8b70 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5568b83c8d00 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5568b83c8bf0 <col:39> 'void *(void *)' Function 0x5568b83c44a8 'P2' 'void *(void *)'
    | `-ParenExpr 0x5568b83c8c70 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5568b83c8c48 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5568b83c8c10 <col:52> 'int' 0
    |-CallExpr 0x5568b83c8d50 <line:804:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5568b83c8d38 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5568b83c8d18 <col:3> 'void ()' Function 0x5568b8367350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5568b83c8e20 <line:805:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5568b83c8d70 <col:3> '_Bool' lvalue Var 0x5568b83c0988 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5568b83c8e08 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5568b83c8de8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5568b83c8dd0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5568b83c8d90 <col:21> 'int' lvalue Var 0x5568b83c0590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5568b83c8db0 <col:41> 'int' 3
    |-CallExpr 0x5568b83c8e78 <line:806:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5568b83c8e60 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5568b83c8e40 <col:3> 'void ()' Function 0x5568b8367410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5568b83c8ef0 <line:807:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5568b83c8ed8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5568b83c8e98 <col:3> 'void (int)' Function 0x5568b8366ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5568b83c8f30 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5568b83c8f18 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5568b83c8eb8 <col:21> '_Bool' lvalue Var 0x5568b83c0988 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5568b83c8f80 <line:808:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5568b83c8f68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5568b83c8f48 <col:3> 'void ()' Function 0x5568b8367350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5568b83c9278 <line:809:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5568b83c8fa0 <col:3> 'int' lvalue Var 0x5568b83c0d40 'z' 'int'
    | `-ConditionalOperator 0x5568b83c9248 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5568b83c9070 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5568b83c9028 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5568b83c9010 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5568b83c8fc0 <col:7> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5568b83c9058 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5568b83c9040 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5568b83c8ff0 <col:25> '_Bool' lvalue Var 0x5568b83c0ed0 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5568b83c9230 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5568b83c9090 <col:42> 'int' lvalue Var 0x5568b83c13b8 'z$w_buff0' 'int'
    |   `-ParenExpr 0x5568b83c9210 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5568b83c91e0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5568b83c9150 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5568b83c9108 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5568b83c90f0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5568b83c90b0 <col:55> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5568b83c9138 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5568b83c9120 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5568b83c90d0 <col:73> '_Bool' lvalue Var 0x5568b83c10d8 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5568b83c91b0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5568b83c9170 <col:90> 'int' lvalue Var 0x5568b83c14b0 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5568b83c91c8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5568b83c9190 <col:102> 'int' lvalue Var 0x5568b83c0d40 'z' 'int'
    |-BinaryOperator 0x5568b83c9480 <line:810:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5568b83c9298 <col:3> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5568b83c9468 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5568b83c9438 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5568b83c9358 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5568b83c9310 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5568b83c92f8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5568b83c92b8 <col:20> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5568b83c9340 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5568b83c9328 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5568b83c92d8 <col:38> '_Bool' lvalue Var 0x5568b83c0ed0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5568b83c93f0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5568b83c93a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5568b83c9378 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5568b83c9420 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5568b83c9408 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5568b83c93d0 <col:66> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5568b83c9768 <line:811:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5568b83c94a0 <col:3> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5568b83c9750 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5568b83c9720 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5568b83c9640 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5568b83c9560 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5568b83c9518 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5568b83c9500 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5568b83c94c0 <col:20> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5568b83c9548 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5568b83c9530 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5568b83c94e0 <col:38> '_Bool' lvalue Var 0x5568b83c0ed0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5568b83c9620 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5568b83c95d8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5568b83c95c0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5568b83c9580 <col:56> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5568b83c9608 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5568b83c95f0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5568b83c95a0 <col:74> '_Bool' lvalue Var 0x5568b83c10d8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5568b83c96d8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5568b83c9690 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5568b83c9660 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5568b83c9708 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5568b83c96f0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5568b83c96b8 <col:102> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5568b83c9970 <line:812:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5568b83c9788 <col:3> '_Bool' lvalue Var 0x5568b83c0ed0 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5568b83c9958 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5568b83c9928 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5568b83c9848 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5568b83c9800 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5568b83c97e8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5568b83c97a8 <col:20> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5568b83c9830 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5568b83c9818 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5568b83c97c8 <col:38> '_Bool' lvalue Var 0x5568b83c0ed0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5568b83c98e0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5568b83c9898 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5568b83c9868 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5568b83c9910 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5568b83c98f8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5568b83c98c0 <col:66> '_Bool' lvalue Var 0x5568b83c0ed0 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5568b83c9c58 <line:813:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5568b83c9990 <col:3> '_Bool' lvalue Var 0x5568b83c10d8 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5568b83c9c40 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5568b83c9c10 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5568b83c9b30 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5568b83c9a50 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5568b83c9a08 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5568b83c99f0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5568b83c99b0 <col:20> '_Bool' lvalue Var 0x5568b83c1430 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5568b83c9a38 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5568b83c9a20 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5568b83c99d0 <col:38> '_Bool' lvalue Var 0x5568b83c0ed0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5568b83c9b10 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5568b83c9ac8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5568b83c9ab0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5568b83c9a70 <col:56> '_Bool' lvalue Var 0x5568b83c1528 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5568b83c9af8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5568b83c9ae0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5568b83c9a90 <col:74> '_Bool' lvalue Var 0x5568b83c10d8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5568b83c9bc8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5568b83c9b80 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5568b83c9b50 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5568b83c9bf8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5568b83c9be0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5568b83c9ba8 <col:102> '_Bool' lvalue Var 0x5568b83c10d8 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5568b83c9cb0 <line:814:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5568b83c9c98 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5568b83c9c78 <col:3> 'void ()' Function 0x5568b8367410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5568b83c9d08 <line:815:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5568b83c9cf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5568b83c9cd0 <col:3> 'void ()' Function 0x5568b8367350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5568b83c9f40 <line:816:3, col:103> '_Bool' '='
    | |-DeclRefExpr 0x5568b83c9d28 <col:3> '_Bool' lvalue Var 0x5568b83c0a00 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5568b83c9f28 <col:21, col:103> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5568b83c9f10 <col:21, col:103> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5568b83c9ef0 <col:22, col:103> 'int'
    |       `-BinaryOperator 0x5568b83c9ed0 <col:23, col:102> 'int' '&&'
    |         |-BinaryOperator 0x5568b83c9e38 <col:23, col:74> 'int' '&&'
    |         | |-BinaryOperator 0x5568b83c9da0 <col:23, col:46> 'int' '=='
    |         | | |-ImplicitCastExpr 0x5568b83c9d88 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x5568b83c9d48 <col:23> 'int' lvalue Var 0x5568b83c06b0 '__unbuffered_p0_EAX' 'int'
    |         | | `-IntegerLiteral 0x5568b83c9d68 <col:46> 'int' 0
    |         | `-BinaryOperator 0x5568b83c9e18 <col:51, col:74> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5568b83c9e00 <col:51> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5568b83c9dc0 <col:51> 'int' lvalue Var 0x5568b83c07d0 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x5568b83c9de0 <col:74> 'int' 0
    |         `-BinaryOperator 0x5568b83c9eb0 <col:79, col:102> 'int' '=='
    |           |-ImplicitCastExpr 0x5568b83c9e98 <col:79> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5568b83c9e58 <col:79> 'int' lvalue Var 0x5568b83c08f0 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x5568b83c9e78 <col:102> 'int' 0
    |-CallExpr 0x5568b83c9f98 <line:817:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5568b83c9f80 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5568b83c9f60 <col:3> 'void ()' Function 0x5568b8367410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5568b83ca038 <line:818:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5568b83ca020 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5568b83c9fb8 <col:3> 'void (int)' Function 0x5568b83670d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5568b83ca078 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5568b83ca060 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5568b83ca000 <col:21> '_Bool' lvalue Var 0x5568b83c0a00 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5568b83ca0b0 <line:819:3, col:10>
      `-IntegerLiteral 0x5568b83ca090 <col:10> 'int' 0
