TranslationUnitDecl 0x560f87a4e538 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x560f87a4edf8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x560f87a4ead0 '__int128'
|-TypedefDecl 0x560f87a4ee68 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x560f87a4eaf0 'unsigned __int128'
|-TypedefDecl 0x560f87a4f170 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x560f87a4ef40 'struct __NSConstantString_tag'
|   `-Record 0x560f87a4eec0 '__NSConstantString_tag'
|-TypedefDecl 0x560f87a4f218 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x560f87a4f1d0 'char *'
|   `-BuiltinType 0x560f87a4e5d0 'char'
|-TypedefDecl 0x560f87a8e330 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x560f87a4f4b0 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x560f87a4f2f0 'struct __va_list_tag'
|     `-Record 0x560f87a4f270 '__va_list_tag'
|-EnumDecl 0x560f87a8e388 <termination-crafted-lit/NoriSharma-FSE2013-Fig7_false-no-overflow.c:10:9, col:26> col:9
| |-EnumConstantDecl 0x560f87a8e458 <col:15> col:15 false 'int'
| `-EnumConstantDecl 0x560f87a8e4a8 <col:22> col:22 true 'int'
|-TypedefDecl 0x560f87a8e560 <col:1, col:28> col:28 bool 'enum bool':'bool'
| `-ElaboratedType 0x560f87a8e500 'enum bool' sugar
|   `-EnumType 0x560f87a8e430 'bool'
|     `-Enum 0x560f87a8e388 ''
|-FunctionDecl 0x560f87a8e6a8 <line:12:1, col:38> col:12 used __VERIFIER_nondet_int 'int (void)' extern
`-FunctionDecl 0x560f87a8e7e8 <line:14:1, line:29:1> line:14:5 main 'int ()'
  `-CompoundStmt 0x560f87ab2578 <col:12, line:29:1>
    |-DeclStmt 0x560f87a8ec48 <line:15:2, col:25>
    | |-VarDecl 0x560f87a8e8a0 <col:2, col:6> col:6 used a 'int'
    | |-VarDecl 0x560f87a8e920 <col:2, col:9> col:9 used b 'int'
    | |-VarDecl 0x560f87a8e9a0 <col:2, col:12> col:12 used c 'int'
    | |-VarDecl 0x560f87a8ea20 <col:2, col:15> col:15 used i 'int'
    | |-VarDecl 0x560f87a8eaa0 <col:2, col:18> col:18 used j 'int'
    | |-VarDecl 0x560f87a8eb20 <col:2, col:21> col:21 used M 'int'
    | `-VarDecl 0x560f87a8eba0 <col:2, col:24> col:24 used N 'int'
    |-BinaryOperator 0x560f87a8ed08 <line:16:2, col:28> 'int' '='
    | |-DeclRefExpr 0x560f87a8ec60 <col:2> 'int' lvalue Var 0x560f87a8ea20 'i' 'int'
    | `-CallExpr 0x560f87a8ece8 <col:6, col:28> 'int'
    |   `-ImplicitCastExpr 0x560f87a8ecd0 <col:6> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x560f87a8ec80 <col:6> 'int (void)' Function 0x560f87a8e6a8 '__VERIFIER_nondet_int' 'int (void)'
    |-BinaryOperator 0x560f87a8eda0 <line:17:2, col:28> 'int' '='
    | |-DeclRefExpr 0x560f87a8ed28 <col:2> 'int' lvalue Var 0x560f87a8eaa0 'j' 'int'
    | `-CallExpr 0x560f87a8ed80 <col:6, col:28> 'int'
    |   `-ImplicitCastExpr 0x560f87a8ed68 <col:6> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x560f87a8ed48 <col:6> 'int (void)' Function 0x560f87a8e6a8 '__VERIFIER_nondet_int' 'int (void)'
    |-BinaryOperator 0x560f87a8ee38 <line:18:2, col:28> 'int' '='
    | |-DeclRefExpr 0x560f87a8edc0 <col:2> 'int' lvalue Var 0x560f87a8eb20 'M' 'int'
    | `-CallExpr 0x560f87a8ee18 <col:6, col:28> 'int'
    |   `-ImplicitCastExpr 0x560f87a8ee00 <col:6> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x560f87a8ede0 <col:6> 'int (void)' Function 0x560f87a8e6a8 '__VERIFIER_nondet_int' 'int (void)'
    |-BinaryOperator 0x560f87a8eed0 <line:19:2, col:28> 'int' '='
    | |-DeclRefExpr 0x560f87a8ee58 <col:2> 'int' lvalue Var 0x560f87a8eba0 'N' 'int'
    | `-CallExpr 0x560f87a8eeb0 <col:6, col:28> 'int'
    |   `-ImplicitCastExpr 0x560f87a8ee98 <col:6> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x560f87a8ee78 <col:6> 'int (void)' Function 0x560f87a8e6a8 '__VERIFIER_nondet_int' 'int (void)'
    |-BinaryOperator 0x560f87a8ef48 <line:20:5, col:9> 'int' '='
    | |-DeclRefExpr 0x560f87a8eef0 <col:5> 'int' lvalue Var 0x560f87a8e8a0 'a' 'int'
    | `-ImplicitCastExpr 0x560f87a8ef30 <col:9> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x560f87a8ef10 <col:9> 'int' lvalue Var 0x560f87a8ea20 'i' 'int'
    |-BinaryOperator 0x560f87a8efc0 <line:21:5, col:9> 'int' '='
    | |-DeclRefExpr 0x560f87a8ef68 <col:5> 'int' lvalue Var 0x560f87a8e920 'b' 'int'
    | `-ImplicitCastExpr 0x560f87a8efa8 <col:9> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x560f87a8ef88 <col:9> 'int' lvalue Var 0x560f87a8eaa0 'j' 'int'
    |-BinaryOperator 0x560f87a8f020 <line:22:5, col:9> 'int' '='
    | |-DeclRefExpr 0x560f87a8efe0 <col:5> 'int' lvalue Var 0x560f87a8e9a0 'c' 'int'
    | `-IntegerLiteral 0x560f87a8f000 <col:9> 'int' 0
    |-WhileStmt 0x560f87ab2530 <line:23:5, line:27:5>
    | |-BinaryOperator 0x560f87a8f160 <line:23:12, col:21> 'int' '||'
    | | |-BinaryOperator 0x560f87a8f0b0 <col:12, col:14> 'int' '<'
    | | | |-ImplicitCastExpr 0x560f87a8f080 <col:12> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x560f87a8f040 <col:12> 'int' lvalue Var 0x560f87a8ea20 'i' 'int'
    | | | `-ImplicitCastExpr 0x560f87a8f098 <col:14> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x560f87a8f060 <col:14> 'int' lvalue Var 0x560f87a8eb20 'M' 'int'
    | | `-BinaryOperator 0x560f87a8f140 <col:19, col:21> 'int' '<'
    | |   |-ImplicitCastExpr 0x560f87a8f110 <col:19> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x560f87a8f0d0 <col:19> 'int' lvalue Var 0x560f87a8eaa0 'j' 'int'
    | |   `-ImplicitCastExpr 0x560f87a8f128 <col:21> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x560f87a8f0f0 <col:21> 'int' lvalue Var 0x560f87a8eba0 'N' 'int'
    | `-CompoundStmt 0x560f87ab2508 <col:24, line:27:5>
    |   |-BinaryOperator 0x560f87a8f218 <line:24:6, col:14> 'int' '='
    |   | |-DeclRefExpr 0x560f87a8f180 <col:6> 'int' lvalue Var 0x560f87a8ea20 'i' 'int'
    |   | `-BinaryOperator 0x560f87a8f1f8 <col:10, col:14> 'int' '+'
    |   |   |-ImplicitCastExpr 0x560f87a8f1e0 <col:10> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x560f87a8f1a0 <col:10> 'int' lvalue Var 0x560f87a8ea20 'i' 'int'
    |   |   `-IntegerLiteral 0x560f87a8f1c0 <col:14> 'int' 1
    |   |-BinaryOperator 0x560f87a8f2d0 <line:25:6, col:14> 'int' '='
    |   | |-DeclRefExpr 0x560f87a8f238 <col:6> 'int' lvalue Var 0x560f87a8eaa0 'j' 'int'
    |   | `-BinaryOperator 0x560f87a8f2b0 <col:10, col:14> 'int' '+'
    |   |   |-ImplicitCastExpr 0x560f87a8f298 <col:10> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x560f87a8f258 <col:10> 'int' lvalue Var 0x560f87a8eaa0 'j' 'int'
    |   |   `-IntegerLiteral 0x560f87a8f278 <col:14> 'int' 1
    |   `-BinaryOperator 0x560f87ab24e8 <line:26:6, col:14> 'int' '='
    |     |-DeclRefExpr 0x560f87a8f2f0 <col:6> 'int' lvalue Var 0x560f87a8e9a0 'c' 'int'
    |     `-BinaryOperator 0x560f87ab24c8 <col:10, col:14> 'int' '+'
    |       |-ImplicitCastExpr 0x560f87ab24b0 <col:10> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560f87a8f310 <col:10> 'int' lvalue Var 0x560f87a8e9a0 'c' 'int'
    |       `-IntegerLiteral 0x560f87ab2490 <col:14> 'int' 1
    `-ReturnStmt 0x560f87ab2568 <line:28:5, col:12>
      `-IntegerLiteral 0x560f87ab2548 <col:12> 'int' 0
