TranslationUnitDecl 0x559a32b1ff88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x559a32b20848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x559a32b20520 '__int128'
|-TypedefDecl 0x559a32b208b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x559a32b20540 'unsigned __int128'
|-TypedefDecl 0x559a32b20bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x559a32b20990 'struct __NSConstantString_tag'
|   `-Record 0x559a32b20910 '__NSConstantString_tag'
|-TypedefDecl 0x559a32b20c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x559a32b20c20 'char *'
|   `-BuiltinType 0x559a32b20020 'char'
|-TypedefDecl 0x559a32b5fb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x559a32b20f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x559a32b20d40 'struct __va_list_tag'
|     `-Record 0x559a32b20cc0 '__va_list_tag'
|-FunctionDecl 0x559a32b5fc80 <pthread-wmm/rfi002_power.oepc_true-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x559a32b5fe50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x559a32b5fd80 <col:31> col:34 'int'
|-FunctionDecl 0x559a32b5ffc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x559a32b600f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x559a32b60238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x559a32b601a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x559a32b60468 <col:40, col:99>
|   |-IfStmt 0x559a32b60438 <col:42, col:88>
|   | |-UnaryOperator 0x559a32b60318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x559a32b60300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x559a32b602e0 <col:47> 'int' lvalue ParmVar 0x559a32b601a8 'expression' 'int'
|   | `-CompoundStmt 0x559a32b60420 <col:59, col:88>
|   |   `-LabelStmt 0x559a32b60408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x559a32b60398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x559a32b60380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x559a32b60330 <col:68> 'void () __attribute__((noreturn))' Function 0x559a32b600f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x559a32b60450 <col:89>
|   `-ReturnStmt 0x559a32b60458 <col:91>
|-FunctionDecl 0x559a32b604b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x559a32b60570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x559a32b608f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559a32b60628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x559a32b606a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x559a32b60728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x559a32b607a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x559a32b609b0 <line:11:22>
|-FunctionDecl 0x559a32b85f10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559a32b60a20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x559a32b60aa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x559a32b85d40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x559a32b85dc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x559a32b85fd0 <line:14:22>
|-FunctionDecl 0x559a32b86280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559a32b86040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x559a32b860c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x559a32b86140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x559a32b86338 <line:16:22>
|-TypedefDecl 0x559a32b863a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x559a32b200e0 'unsigned char'
|-TypedefDecl 0x559a32b86418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x559a32b20100 'unsigned short'
|-TypedefDecl 0x559a32b86488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x559a32b20120 'unsigned int'
|-TypedefDecl 0x559a32b864f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x559a32b20140 'unsigned long'
|-TypedefDecl 0x559a32b86568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x559a32b20040 'signed char'
|-TypedefDecl 0x559a32b865d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x559a32b200e0 'unsigned char'
|-TypedefDecl 0x559a32b86648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x559a32b20060 'short'
|-TypedefDecl 0x559a32b866b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x559a32b20100 'unsigned short'
|-TypedefDecl 0x559a32b86728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x559a32b20080 'int'
|-TypedefDecl 0x559a32b86798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x559a32b20120 'unsigned int'
|-TypedefDecl 0x559a32b86808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x559a32b200a0 'long'
|-TypedefDecl 0x559a32b86878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x559a32b20140 'unsigned long'
|-TypedefDecl 0x559a32b868e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x559a32b200a0 'long'
|-TypedefDecl 0x559a32b86958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x559a32b20140 'unsigned long'
|-TypedefDecl 0x559a32b869c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x559a32b20140 'unsigned long'
|-TypedefDecl 0x559a32b86a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x559a32b20120 'unsigned int'
|-TypedefDecl 0x559a32b86aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x559a32b20120 'unsigned int'
|-TypedefDecl 0x559a32b86b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x559a32b20140 'unsigned long'
|-TypedefDecl 0x559a32b86b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x559a32b20140 'unsigned long'
|-TypedefDecl 0x559a32b86bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x559a32b20120 'unsigned int'
|-TypedefDecl 0x559a32b86c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x559a32b20140 'unsigned long'
|-TypedefDecl 0x559a32b86cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x559a32b200a0 'long'
|-TypedefDecl 0x559a32b86d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x559a32b200a0 'long'
|-TypedefDecl 0x559a32b86dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x559a32b20080 'int'
|-RecordDecl 0x559a32b86e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x559a32b86f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x559a32b87030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x559a32b86fd0 'struct __fsid_t' sugar
|   `-RecordType 0x559a32b86eb0 '__fsid_t'
|     `-Record 0x559a32b86e30 ''
|-TypedefDecl 0x559a32b870b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x559a32b200a0 'long'
|-TypedefDecl 0x559a32b87128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x559a32b20140 'unsigned long'
|-TypedefDecl 0x559a32b87198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x559a32b20140 'unsigned long'
|-TypedefDecl 0x559a32b87208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x559a32b20120 'unsigned int'
|-TypedefDecl 0x559a32b87278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x559a32b200a0 'long'
|-TypedefDecl 0x559a32b872e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x559a32b20120 'unsigned int'
|-TypedefDecl 0x559a32b87358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x559a32b200a0 'long'
|-TypedefDecl 0x559a32b873c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x559a32b20080 'int'
|-TypedefDecl 0x559a32b87438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x559a32b20080 'int'
|-TypedefDecl 0x559a32b874a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x559a32b20080 'int'
|-TypedefDecl 0x559a32b87518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x559a32b207a0 'void *'
|   `-BuiltinType 0x559a32b1ffe0 'void'
|-TypedefDecl 0x559a32b87588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x559a32b200a0 'long'
|-TypedefDecl 0x559a32b875f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x559a32b200a0 'long'
|-TypedefDecl 0x559a32b87668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x559a32b200a0 'long'
|-TypedefDecl 0x559a32b876d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x559a32b20140 'unsigned long'
|-TypedefDecl 0x559a32b87748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x559a32b20140 'unsigned long'
|-TypedefDecl 0x559a32b877b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x559a32b20140 'unsigned long'
|-TypedefDecl 0x559a32b87828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x559a32b20140 'unsigned long'
|-TypedefDecl 0x559a32b87898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x559a32b200a0 'long'
|-TypedefDecl 0x559a32b87908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x559a32b200a0 'long'
|-TypedefDecl 0x559a32b87978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x559a32b200a0 'long'
|-TypedefDecl 0x559a32b879e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x559a32b20140 'unsigned long'
|-TypedefDecl 0x559a32b87a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x559a32b87a40 '__off64_t' sugar
|   |-Typedef 0x559a32b86d68 '__off64_t'
|   `-BuiltinType 0x559a32b200a0 'long'
|-TypedefDecl 0x559a32b87b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x559a32b87b30 '__quad_t *'
|   `-TypedefType 0x559a32b87ad0 '__quad_t' sugar
|     |-Typedef 0x559a32b868e8 '__quad_t'
|     `-BuiltinType 0x559a32b200a0 'long'
|-TypedefDecl 0x559a32b87be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x559a32b20c20 'char *'
|   `-BuiltinType 0x559a32b20020 'char'
|-TypedefDecl 0x559a32b87c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x559a32b200a0 'long'
|-TypedefDecl 0x559a32b87cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x559a32b20120 'unsigned int'
|-FunctionDecl 0x559a32b87e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x559a32b87d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x559a32b88148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x559a32b88138 <line:73:3, col:34>
|     `-CallExpr 0x559a32b880f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x559a32b880e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x559a32b88070 <col:10> '<builtin fn type>' Function 0x559a32b87ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x559a32b88120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x559a32b88090 <col:29> 'unsigned int' lvalue ParmVar 0x559a32b87d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x559a32b87ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x559a32b87f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x559a32b87ff0 <col:10> Implicit
| `-ConstAttr 0x559a32b88048 <col:10> Implicit
|-FunctionDecl 0x559a32b882a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x559a32b88198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x559a32b885b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x559a32b885a8 <line:78:3, col:34>
|     `-CallExpr 0x559a32b88568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x559a32b88550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x559a32b884d8 <col:10> '<builtin fn type>' Function 0x559a32b88348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x559a32b88590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x559a32b884f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x559a32b88198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x559a32b88348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x559a32b883e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x559a32b88458 <col:10> Implicit
| `-ConstAttr 0x559a32b884b0 <col:10> Implicit
|-TypedefDecl 0x559a32b885e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x559a32b20140 'unsigned long'
|-TypedefDecl 0x559a32b88678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x559a32b88640 '__time_t' sugar
|   |-Typedef 0x559a32b87278 '__time_t'
|   `-BuiltinType 0x559a32b200a0 'long'
|-RecordDecl 0x559a32b886d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x559a32b88788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x559a32b88818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x559a32b888a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x559a32b88870 '__pid_t' sugar
|   |-Typedef 0x559a32b86dd8 '__pid_t'
|   `-BuiltinType 0x559a32b20080 'int'
|-RecordDecl 0x559a32b88900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x559a32b889c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x559a32b88a10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x559a32b88ad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x559a32b88b38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x559a32b20140 'unsigned long'
|-RecordDecl 0x559a32b88b90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x559a32b8ae70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x559a32b8af20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x559a32b8aec0 'struct cpu_set_t' sugar
|   `-RecordType 0x559a32b88c10 'cpu_set_t'
|     `-Record 0x559a32b88b90 ''
|-FunctionDecl 0x559a32b8b1f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x559a32b8afc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559a32b8b0d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x559a32b8b2a8 <line:108:19>
|-FunctionDecl 0x559a32b8b480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x559a32b8b310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x559a32b8b528 <col:69>
|-FunctionDecl 0x559a32b8b6a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x559a32b8b590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x559a32b8b748 <col:64>
|-FunctionDecl 0x559a32b8ba08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x559a32b8b7b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559a32b8b8e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x559a32b8bab8 <line:114:22>
|-FunctionDecl 0x559a32b8be60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x559a32b8bb20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559a32b8bc18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x559a32b8bf10 <col:88>
|-FunctionDecl 0x559a32b8c1c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x559a32b8bf78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559a32b8bff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x559a32b8c088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x559a32b8c280 <col:62>
|-FunctionDecl 0x559a32b8c3f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x559a32b8c2e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x559a32b8c4a0 <col:63>
|-FunctionDecl 0x559a32b8c5c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x559a32b8c668 <col:47>
|-FunctionDecl 0x559a32b8c770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x559a32b8c6d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x559a32b8c818 <col:69>
|-FunctionDecl 0x559a32b8c920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x559a32b8c888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x559a32b8c9c8 <col:69>
|-FunctionDecl 0x559a32b8cc88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559a32b8ca30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559a32b8cb68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x559a32b8cd38 <col:88>
|-TypedefDecl 0x559a32b8cdc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x559a32b8cd90 '__clock_t' sugar
|   |-Typedef 0x559a32b870b8 '__clock_t'
|   `-BuiltinType 0x559a32b200a0 'long'
|-TypedefDecl 0x559a32b8d7e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x559a32b8ce20 '__clockid_t' sugar
|   |-Typedef 0x559a32b874a8 '__clockid_t'
|   `-BuiltinType 0x559a32b20080 'int'
|-TypedefDecl 0x559a32b8d878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x559a32b8d840 '__timer_t' sugar
|   |-Typedef 0x559a32b87518 '__timer_t'
|   `-PointerType 0x559a32b207a0 'void *'
|     `-BuiltinType 0x559a32b1ffe0 'void'
|-RecordDecl 0x559a32b8d8d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x559a32b8d990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x559a32b8d9f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x559a32b8da60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x559a32b8dac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x559a32b8db30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x559a32b8db98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x559a32b8dc00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x559a32b8dc68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x559a32b8dcd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x559a32b8dd38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x559a32b8dda0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x559a32b8ddf0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x559a32b8deb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x559a32b8df28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x559a32b8dfd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x559a32b8e1a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x559a32b8e240 <col:45>
|-FunctionDecl 0x559a32b8e420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x559a32b8e310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x559a32b8e4c8 <col:54>
|-FunctionDecl 0x559a32b8e6c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x559a32b8e530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x559a32b8e5a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x559a32b8e778 <line:158:22>
| `-ConstAttr 0x559a32b8f410 <col:63>
|-FunctionDecl 0x559a32b8f610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559a32b8f508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x559a32b8f6b8 <col:56>
|-FunctionDecl 0x559a32b8fa60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x559a32b8f728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x559a32b8f7a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559a32b8f820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x559a32b8f918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x559a32b8fb20 <col:54>
|-RecordDecl 0x559a32b8fb78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x559a32b8fc28 parent 0x559a32b1ff88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x559a32b8fe88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x559a32b8ff28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x559a32b8ff90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x559a32b8fff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x559a32b900e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x559a32b90208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x559a32b901b0 'struct __locale_struct *'
|   `-ElaboratedType 0x559a32b90140 'struct __locale_struct' sugar
|     `-RecordType 0x559a32b8fc00 'struct __locale_struct'
|       `-Record 0x559a32b8fb78 '__locale_struct'
|-TypedefDecl 0x559a32b902b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x559a32b90280 '__locale_t' sugar
|   |-Typedef 0x559a32b90208 '__locale_t'
|   `-PointerType 0x559a32b901b0 'struct __locale_struct *'
|     `-ElaboratedType 0x559a32b90140 'struct __locale_struct' sugar
|       `-RecordType 0x559a32b8fc00 'struct __locale_struct'
|         `-Record 0x559a32b8fb78 '__locale_struct'
|-FunctionDecl 0x559a32b906b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x559a32b90328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x559a32b903a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559a32b90438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x559a32b904c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x559a32b90540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x559a32b90778 <col:40>
|-FunctionDecl 0x559a32b90968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x559a32b90840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x559a32b90a10 <col:66>
|-FunctionDecl 0x559a32b90b20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x559a32b90a78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x559a32b90bc8 <col:69>
|-FunctionDecl 0x559a32b90df8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x559a32b90c30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559a32b90cc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x559a32b90ea8 <col:52>
|-FunctionDecl 0x559a32b91050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x559a32b90f10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559a32b90fa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x559a32b91100 <col:55>
|-FunctionDecl 0x559a32b91298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x559a32b91180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x559a32b91340 <col:62>
|-FunctionDecl 0x559a32b91578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x559a32b913a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x559a32b91620 <col:60>
|-FunctionDecl 0x559a32b91848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x559a32b916a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x559a32b91720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x559a32b918f8 <col:44>
|-FunctionDecl 0x559a32b91b08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x559a32b91960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559a32b919e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x559a32b91bb8 <col:49>
|-VarDecl 0x559a32b91cb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x559a32b91d38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x559a32b91db8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x559a32b91e80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x559a32b91fb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x559a32b92050 <col:42>
|-VarDecl 0x559a32b920c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x559a32b92140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x559a32b922c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x559a32b921b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x559a32b92370 <col:57>
|-FunctionDecl 0x559a32b934f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559a32b923f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x559a32b93598 <col:56>
|-FunctionDecl 0x559a32b936a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559a32b93618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x559a32b93750 <col:59>
|-FunctionDecl 0x559a32b93858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x559a32b937c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x559a32b93900 <col:48>
| `-ConstAttr 0x559a32b93958 <col:89>
|-FunctionDecl 0x559a32b93bb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x559a32b93a08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x559a32b93a98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x559a32b93e18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559a32b93ca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559a32b93d38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x559a32b93ec8 <col:88>
|-FunctionDecl 0x559a32b94060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559a32b93f30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559a32b93fc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x559a32b94110 <col:88>
|-FunctionDecl 0x559a32b94328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x559a32b94178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559a32b94208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x559a32b943d8 <line:209:22>
|-FunctionDecl 0x559a32b94778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x559a32b94440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559a32b94500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x559a32b94590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x559a32b94620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x559a32b94a78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x559a32b94878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x559a32b94950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x559a32b94b28 <col:85>
|-FunctionDecl 0x559a32b94f18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x559a32b94b90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559a32b94cc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x559a32b94dd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x559a32b94fd0 <col:52>
|-FunctionDecl 0x559a32b95148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x559a32b95038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x559a32b951f0 <col:61>
|-FunctionDecl 0x559a32b95668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x559a32b95258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x559a32b952d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x559a32b95408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x559a32b95510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x559a32b95728 <col:62>
|-FunctionDecl 0x559a32b95948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x559a32b95790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x559a32b95820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x559a32b959f8 <line:222:22>
|-FunctionDecl 0x559a32b95af8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x559a32b95a60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x559a32b95ba0 <col:65>
|-TypedefDecl 0x559a32b95c10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x559a32b20140 'unsigned long'
|-RecordDecl 0x559a32b95c68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x559a32b95db0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x559a32b95e18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559a32b95ec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x559a32b95e70 'union pthread_attr_t' sugar
|   `-RecordType 0x559a32b95cf0 'union pthread_attr_t'
|     `-Record 0x559a32b95c68 'pthread_attr_t'
|-RecordDecl 0x559a32b95f20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x559a32b96098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x559a32b96110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x559a32b961c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x559a32b96160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x559a32b95fa0 'struct __pthread_internal_list'
|     `-Record 0x559a32b95f20 '__pthread_internal_list'
|-RecordDecl 0x559a32b96230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x559a32b962d8 parent 0x559a32b1ff88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x559a32b963b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559a32b96418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x559a32b96480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x559a32b9a530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x559a32b9a598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x559a32b9a600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x559a32b9a688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x559a32b9a740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x559a32b9a830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x559a32b9a898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559a32b9aa20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x559a32b9a9c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x559a32b962b0 'pthread_mutex_t'
|     `-Record 0x559a32b96230 ''
|-RecordDecl 0x559a32b9aa90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x559a32b9abd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559a32b9ac38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559a32b9acf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x559a32b9ac90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x559a32b9ab10 'pthread_mutexattr_t'
|     `-Record 0x559a32b9aa90 ''
|-RecordDecl 0x559a32b9ad60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x559a32b9ae08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x559a32b9aed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559a32b9af38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x559a32b9afa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x559a32b9b008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x559a32b9b070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x559a32b9b0d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x559a32b9b140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x559a32b9b1a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x559a32b9b260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi002_power.oepc_true-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/rfi002_power.oepc_true-unreach-call.i:259:3)'
| |-FieldDecl 0x559a32b9b350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x559a32b9b3b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x559a32b9b540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x559a32b9b490 'union pthread_cond_t' sugar
|   `-RecordType 0x559a32b9ade0 'pthread_cond_t'
|     `-Record 0x559a32b9ad60 ''
|-RecordDecl 0x559a32b9b5b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x559a32b9b6b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559a32b9b718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559a32b9b7d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x559a32b9b770 'union pthread_condattr_t' sugar
|   `-RecordType 0x559a32b9b630 'pthread_condattr_t'
|     `-Record 0x559a32b9b5b0 ''
|-TypedefDecl 0x559a32b9b858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x559a32b20120 'unsigned int'
|-TypedefDecl 0x559a32b9b8c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x559a32b20080 'int'
|-RecordDecl 0x559a32b9b920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x559a32b9b9c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x559a32b9ba90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559a32b9baf8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x559a32b9bb60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x559a32b9bbc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x559a32b9bc30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x559a32b9bc98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x559a32b9bd00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x559a32b9bd68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x559a32b9bdd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x559a32b9be38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x559a32b9bea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x559a32b9bf50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi002_power.oepc_true-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/rfi002_power.oepc_true-unreach-call.i:282:3)'
| |-FieldDecl 0x559a32b9bff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x559a32b9c060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559a32b9c1b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x559a32b9c150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x559a32b9b9a0 'pthread_rwlock_t'
|     `-Record 0x559a32b9b920 ''
|-RecordDecl 0x559a32b9c220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x559a32b9c360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x559a32b9c3c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559a32b9c480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x559a32b9c420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x559a32b9c2a0 'pthread_rwlockattr_t'
|     `-Record 0x559a32b9c220 ''
|-TypedefDecl 0x559a32b9e560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x559a32b20084 'volatile int' volatile
|   `-BuiltinType 0x559a32b20080 'int'
|-RecordDecl 0x559a32b9e5b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x559a32b9e700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x559a32b9e768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559a32b9e820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x559a32b9e7c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x559a32b9e640 'pthread_barrier_t'
|     `-Record 0x559a32b9e5b8 ''
|-RecordDecl 0x559a32b9e890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x559a32b9e990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559a32b9e9f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559a32b9eab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x559a32b9ea50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x559a32b9e910 'pthread_barrierattr_t'
|     `-Record 0x559a32b9e890 ''
|-TypedefDecl 0x559a32b9ebc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x559a32b9eb60 'long [8]' 8 
|   `-BuiltinType 0x559a32b200a0 'long'
|-EnumDecl 0x559a32b9ec20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x559a32b9ece8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x559a32b9ed38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x559a32b9ed88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x559a32b9ee58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x559a32b9eea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x559a32b9eef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x559a32b9ef48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x559a32b9efd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x559a32b9efb8 <col:26> 'int'
| |   `-DeclRefExpr 0x559a32b9ef98 <col:26> 'int' EnumConstant 0x559a32b9ee58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x559a32b9f058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x559a32b9f040 <col:29> 'int'
| |   `-DeclRefExpr 0x559a32b9f020 <col:29> 'int' EnumConstant 0x559a32b9eea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x559a32b9f0e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x559a32b9f0c8 <col:30> 'int'
| |   `-DeclRefExpr 0x559a32b9f0a8 <col:30> 'int' EnumConstant 0x559a32b9eef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x559a32b9f168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x559a32b9f150 <col:27> 'int'
|     `-DeclRefExpr 0x559a32b9f130 <col:27> 'int' EnumConstant 0x559a32b9efd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x559a32b9f1b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x559a32b9f288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x559a32b9f310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x559a32b9f2f8 <col:30> 'int'
| |   `-DeclRefExpr 0x559a32b9f2d8 <col:30> 'int' EnumConstant 0x559a32b9f288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x559a32b9f360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x559a32b9f3e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x559a32b9f3d0 <col:29> 'int'
|     `-DeclRefExpr 0x559a32b9f3b0 <col:29> 'int' EnumConstant 0x559a32b9f360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x559a32b9f438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x559a32b9f508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x559a32b9f570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x559a32b9f5c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x559a32b9f610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x559a32b9f6d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x559a32b9f728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x559a32b9f778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x559a32b9f800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x559a32b9f7e8 <col:31> 'int'
|     `-DeclRefExpr 0x559a32b9f7c8 <col:31> 'int' EnumConstant 0x559a32b9f6d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x559a32b9f850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x559a32b9f918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x559a32b9f968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x559a32b9f9b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x559a32b9fa88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x559a32b9fad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x559a32b9fb28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x559a32b9fbf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x559a32b9fc48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x559a32b9fc98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x559a32b9fed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x559a32b9ff40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x559a32b9ffa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x559a32ba00c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x559a32ba0118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x559a32ba01e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x559a32ba0238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x559a32ba0288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x559a32ba0358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x559a32ba03a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x559a32ba09d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x559a32ba04a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x559a32ba05c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559a32ba07c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x559a32ba0840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x559a32ba0a98 <col:47>
| |-NonNullAttr 0x559a32ba0af0 <col:77, col:94> 1 3
| `-CallbackAttr 0x559a32ba0b28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x559a32ba0c50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x559a32ba0b80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x559a32ba0ea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x559a32ba0d08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x559a32ba0d88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x559a32ba1078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x559a32ba0f68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x559a32ba1120 <col:60>
|-FunctionDecl 0x559a32ba1270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x559a32ba1310 <col:54>
| `-ConstAttr 0x559a32ba1368 <col:95>
|-FunctionDecl 0x559a32ba1da0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x559a32ba13a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559a32ba1418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x559a32ba1e50 <line:395:19>
| `-ConstAttr 0x559a32ba1ea8 <col:60>
|-FunctionDecl 0x559a32ba2078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x559a32ba1f40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x559a32ba2120 <col:71>
| `-NonNullAttr 0x559a32ba2178 <col:112, col:126> 1
|-FunctionDecl 0x559a32ba2280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x559a32ba21c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x559a32ba2328 <line:398:22>
| `-NonNullAttr 0x559a32ba2380 <col:63, col:77> 1
|-FunctionDecl 0x559a32ba25a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x559a32ba23c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x559a32ba2448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x559a32ba2658 <line:401:22>
| `-NonNullAttr 0x559a32ba26b0 <col:63, col:80> 1 2
|-FunctionDecl 0x559a32ba28b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559a32ba26f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559a32ba2778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x559a32ba2968 <line:404:22>
| `-NonNullAttr 0x559a32ba29c0 <col:63, col:77> 1
|-FunctionDecl 0x559a32ba2c18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x559a32ba2a08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x559a32ba2ab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x559a32ba2cc8 <line:407:22>
| `-NonNullAttr 0x559a32ba2d20 <col:63, col:80> 1 2
|-FunctionDecl 0x559a32ba3f78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x559a32ba3dc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559a32ba3e38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559a32ba4028 <line:410:22>
| `-NonNullAttr 0x559a32ba4080 <col:63, col:77> 1
|-FunctionDecl 0x559a32ba42b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559a32ba40c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559a32ba4158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x559a32ba4368 <line:413:22>
| `-NonNullAttr 0x559a32ba43c0 <col:63, col:80> 1 2
|-FunctionDecl 0x559a32ba45f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559a32ba4408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x559a32ba4498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x559a32ba46a8 <col:37>
| `-NonNullAttr 0x559a32ba4700 <col:78, col:95> 1 2
|-FunctionDecl 0x559a32ba48e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559a32ba4748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559a32ba47c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x559a32ba4998 <line:419:22>
| `-NonNullAttr 0x559a32ba49f0 <col:63, col:80> 1 2
|-FunctionDecl 0x559a32ba4b78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559a32ba4a38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559a32ba4ab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x559a32ba4c28 <line:421:22>
| `-NonNullAttr 0x559a32ba4c80 <col:63, col:77> 1
|-FunctionDecl 0x559a32ba5e58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559a32ba4cc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559a32ba4d48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x559a32ba5f08 <line:424:22>
| `-NonNullAttr 0x559a32ba5f60 <col:63, col:80> 1 2
|-FunctionDecl 0x559a32ba60e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559a32ba5fa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559a32ba6028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x559a32ba6198 <line:427:22>
| `-NonNullAttr 0x559a32ba61f0 <col:63, col:77> 1
|-FunctionDecl 0x559a32ba6398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559a32ba6238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559a32ba62b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x559a32ba6448 <line:430:22>
| `-NonNullAttr 0x559a32ba64a0 <col:63, col:80> 1 2
|-FunctionDecl 0x559a32ba6628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559a32ba64e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559a32ba6568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x559a32ba66d8 <line:432:22>
| `-NonNullAttr 0x559a32ba6730 <col:63, col:77> 1
|-FunctionDecl 0x559a32ba6958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x559a32ba6778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559a32ba67f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x559a32ba6a08 <line:435:22>
| |-NonNullAttr 0x559a32ba6a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x559a32ba6a98 <col:100> "" ""
|-FunctionDecl 0x559a32ba6ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x559a32ba6ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559a32ba6b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x559a32ba6d58 <line:438:22>
| |-NonNullAttr 0x559a32ba6db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x559a32ba6df8 <col:97> "" ""
|-FunctionDecl 0x559a32ba6fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x559a32ba6e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559a32ba6ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x559a32ba7098 <line:441:22>
| `-NonNullAttr 0x559a32ba70f0 <col:63, col:80> 1 2
|-FunctionDecl 0x559a32ba7270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x559a32ba7138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559a32ba71b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559a32ba7320 <line:444:22>
| `-NonNullAttr 0x559a32ba7378 <col:63, col:77> 1
|-FunctionDecl 0x559a32ba7668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x559a32ba73c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559a32ba7448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x559a32ba74c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x559a32ba7720 <line:448:22>
| `-NonNullAttr 0x559a32ba7778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x559a32ba7a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x559a32ba77d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559a32ba7850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x559a32ba78c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559a32ba7ae0 <col:43>
| `-NonNullAttr 0x559a32ba7b38 <col:84, col:98> 1
|-FunctionDecl 0x559a32ba7e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x559a32ba7b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559a32ba7c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x559a32ba7c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x559a32ba7ef8 <line:453:22>
| `-NonNullAttr 0x559a32ba7f50 <col:63, col:77> 3
|-FunctionDecl 0x559a32ba8228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559a32ba7f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559a32ba8018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x559a32ba80a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x559a32ba82e0 <line:457:22>
| `-NonNullAttr 0x559a32ba8338 <col:63, col:80> 2 3
|-FunctionDecl 0x559a32ba8528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x559a32ba8388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559a32ba8408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x559a32ba85d8 <line:459:22>
|-FunctionDecl 0x559a32ba89a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x559a32ba86a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x559a32ba8840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x559a32ba8a58 <col:52, col:69> 1 2
|-FunctionDecl 0x559a32ba8c00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x559a32ba8ae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x559a32ba8b60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x559a32ba8e10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x559a32ba8cc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x559a32ba8d48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x559a32ba8f68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x559a32ba8ed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x559a32ba90a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x559a32ba9148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x559a32ba91f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x559a32ba92e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x559a32ba9350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x559a32ba9520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/rfi002_power.oepc_true-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x559a32ba9618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x559a32ba96d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x559a32ba9670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x559a32ba91d0 '__pthread_unwind_buf_t'
| |   `-Record 0x559a32ba9148 ''
| `-AlignedAttr 0x559a32ba9728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x559a32ba97a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x559a32ba9900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x559a32ba9968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x559a32ba99d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x559a32ba9a38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x559a32ba9c40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x559a32ba9b30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x559a32ba9e20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x559a32ba9cf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x559a32ba9fe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559a32ba9ed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x559a32baa088 <line:488:22>
|-RecordDecl 0x559a32baa0e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x559a32baa3f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x559a32baa258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x559a32baa2d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x559a32baa4a8 <col:86>
| `-ReturnsTwiceAttr 0x559a32baa500 <col:12> Implicit
|-FunctionDecl 0x559a32baa828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559a32baa5d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x559a32baa6e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x559a32baa8d8 <line:494:22>
| `-NonNullAttr 0x559a32baa930 <col:63, col:77> 1
|-FunctionDecl 0x559a32baaaa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559a32baa978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559a32baab50 <line:496:22>
| `-NonNullAttr 0x559a32baaba8 <col:63, col:77> 1
|-FunctionDecl 0x559a32baacb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559a32baabf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559a32baad58 <line:498:22>
| `-NonNullAttr 0x559a32baadb0 <col:52, col:66> 1
|-FunctionDecl 0x559a32baaee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559a32baae30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559a32baaf90 <line:500:22>
| `-NonNullAttr 0x559a32baafe8 <col:52, col:66> 1
|-FunctionDecl 0x559a32bab228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559a32bab038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559a32bab0c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559a32bab2d8 <col:36>
| `-NonNullAttr 0x559a32bab330 <col:66, col:83> 1 2
|-FunctionDecl 0x559a32bab430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559a32bab378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559a32bab4d8 <line:505:22>
| `-NonNullAttr 0x559a32bab530 <col:52, col:66> 1
|-FunctionDecl 0x559a32bab7c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559a32bab5e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559a32bab660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x559a32bab878 <line:509:22>
| `-NonNullAttr 0x559a32bab8d0 <col:63, col:80> 1 2
|-FunctionDecl 0x559a32babb98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x559a32bab918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559a32bab998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x559a32baba18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x559a32babc50 <line:513:22>
| `-NonNullAttr 0x559a32babca8 <col:63, col:80> 1 3
|-FunctionDecl 0x559a32babe40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559a32babcf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559a32babee8 <line:515:22>
| `-NonNullAttr 0x559a32babf40 <col:63, col:77> 1
|-FunctionDecl 0x559a32bac128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559a32babff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x559a32bac1d0 <line:517:22>
| `-NonNullAttr 0x559a32bac228 <col:63, col:77> 1
|-FunctionDecl 0x559a32bac330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559a32bac278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x559a32bac3d8 <line:519:22>
| `-NonNullAttr 0x559a32bac430 <col:63, col:77> 1
|-FunctionDecl 0x559a32bac658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559a32bac478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559a32bac4f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x559a32bac708 <line:523:22>
| `-NonNullAttr 0x559a32bac760 <col:63, col:80> 1 2
|-FunctionDecl 0x559a32bac968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559a32bac7a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559a32bac828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x559a32baca18 <line:526:22>
| `-NonNullAttr 0x559a32baca70 <col:63, col:77> 1
|-FunctionDecl 0x559a32bacc18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559a32bacab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559a32bacb38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x559a32baccc8 <line:529:22>
| `-NonNullAttr 0x559a32bacd20 <col:63, col:80> 1 2
|-FunctionDecl 0x559a32badf20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559a32bacd68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559a32bade60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x559a32badfd0 <line:531:22>
| `-NonNullAttr 0x559a32bae028 <col:63, col:77> 1
|-FunctionDecl 0x559a32bae1d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559a32bae078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559a32bae0f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x559a32bae288 <line:535:22>
| `-NonNullAttr 0x559a32bae2e0 <col:63, col:80> 1 2
|-FunctionDecl 0x559a32bae468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559a32bae328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559a32bae3a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x559a32bae518 <line:538:22>
| `-NonNullAttr 0x559a32bae570 <col:63, col:77> 1
|-FunctionDecl 0x559a32bae718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559a32bae5b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559a32bae638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x559a32bae7c8 <line:542:22>
| `-NonNullAttr 0x559a32bae820 <col:63, col:80> 1 2
|-FunctionDecl 0x559a32bae9a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559a32bae868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559a32bae8e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x559a32baea58 <line:545:22>
| `-NonNullAttr 0x559a32baeab0 <col:63, col:77> 1
|-FunctionDecl 0x559a32baec98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x559a32baeaf8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x559a32baeb78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x559a32baed48 <line:548:22>
| `-NonNullAttr 0x559a32baeda0 <col:63, col:80> 1 2
|-FunctionDecl 0x559a32baff58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559a32baede8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559a32bafe98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x559a32bb0008 <line:551:22>
| `-NonNullAttr 0x559a32bb0060 <col:63, col:77> 1
|-FunctionDecl 0x559a32bb0398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x559a32bb0140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559a32bb0250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x559a32bb0448 <col:29>
| `-NonNullAttr 0x559a32bb04a0 <col:70, col:84> 1
|-FunctionDecl 0x559a32bb0618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559a32bb04e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559a32bb06c0 <line:556:22>
| `-NonNullAttr 0x559a32bb0718 <col:63, col:77> 1
|-FunctionDecl 0x559a32bb0820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559a32bb0768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559a32bb08c8 <line:558:22>
| `-NonNullAttr 0x559a32bb0920 <col:52, col:66> 1
|-FunctionDecl 0x559a32bb0a20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559a32bb0968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559a32bb0ac8 <line:560:19>
| `-NonNullAttr 0x559a32bb0b20 <col:49, col:63> 1
|-FunctionDecl 0x559a32bb0d58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559a32bb0b68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559a32bb0bf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559a32bb0e08 <col:39>
| `-NonNullAttr 0x559a32bb0e90 <col:69, col:86> 1 2
|-FunctionDecl 0x559a32bb0f90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559a32bb0ed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559a32bb1038 <line:565:22>
| `-NonNullAttr 0x559a32bb1090 <col:52, col:66> 1
|-FunctionDecl 0x559a32bb1190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559a32bb10d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559a32bb1238 <line:567:22>
| `-NonNullAttr 0x559a32bb1290 <col:52, col:66> 1
|-FunctionDecl 0x559a32bb1448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559a32bb12d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559a32bb1368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559a32bb14f8 <col:39>
| `-NonNullAttr 0x559a32bb1550 <col:69, col:86> 1 2
|-FunctionDecl 0x559a32bb1650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559a32bb1598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559a32bb16f8 <line:572:22>
| `-NonNullAttr 0x559a32bb1750 <col:52, col:66> 1
|-FunctionDecl 0x559a32bb1938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x559a32bb1800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x559a32bb19e0 <line:574:22>
| `-NonNullAttr 0x559a32bb1a38 <col:63, col:77> 1
|-FunctionDecl 0x559a32bb1b40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x559a32bb1a88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x559a32bb1be8 <line:576:22>
| `-NonNullAttr 0x559a32bb1c40 <col:63, col:77> 1
|-FunctionDecl 0x559a32bb1ea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559a32bb1c88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x559a32bb1d08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x559a32bb1f50 <line:580:22>
| `-NonNullAttr 0x559a32bb1fa8 <col:63, col:80> 1 2
|-FunctionDecl 0x559a32bb21b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x559a32bb1ff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x559a32bb2078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x559a32bb2268 <line:583:22>
| `-NonNullAttr 0x559a32bb22c0 <col:63, col:77> 1
|-FunctionDecl 0x559a32bb2468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559a32bb2308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x559a32bb2388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x559a32bb2518 <line:587:22>
| `-NonNullAttr 0x559a32bb2570 <col:63, col:80> 1 2
|-FunctionDecl 0x559a32bb26f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x559a32bb25b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x559a32bb2638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x559a32bb27a8 <col:36>
| `-NonNullAttr 0x559a32bb2800 <col:77, col:91> 1
|-FunctionDecl 0x559a32bb2b38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x559a32bb28e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559a32bb29f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x559a32bb2be8 <line:592:22>
| `-NonNullAttr 0x559a32bb2c40 <col:63, col:77> 1
|-FunctionDecl 0x559a32bb2db8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559a32bb2c88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559a32bb2e60 <line:594:22>
| `-NonNullAttr 0x559a32bb2ee0 <col:63, col:77> 1
|-FunctionDecl 0x559a32bb2fe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559a32bb2f28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559a32bb3088 <line:596:22>
| `-NonNullAttr 0x559a32bb30e0 <col:52, col:66> 1
|-FunctionDecl 0x559a32bb31e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559a32bb3128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559a32bb3288 <line:598:22>
| `-NonNullAttr 0x559a32bb32e0 <col:52, col:66> 1
|-FunctionDecl 0x559a32bb3508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x559a32bb3328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559a32bb33a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x559a32bb35b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x559a32bb38e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559a32bb3638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559a32bb36b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559a32bb3740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x559a32bb39a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x559a32bb3bb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x559a32bb3a80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x559a32bb3c60 <line:607:22>
| `-NonNullAttr 0x559a32bb3cb8 <col:63, col:77> 1
|-FunctionDecl 0x559a32bb3dc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x559a32bb3d08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x559a32bb3e68 <line:609:22>
| `-NonNullAttr 0x559a32bb3ef0 <col:63, col:77> 1
|-FunctionDecl 0x559a32bb4118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559a32bb3f38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x559a32bb3fb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x559a32bb41c8 <line:613:22>
| `-NonNullAttr 0x559a32bb4220 <col:63, col:80> 1 2
|-FunctionDecl 0x559a32bb4428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x559a32bb4268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x559a32bb42e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x559a32bb44d8 <col:37>
| `-NonNullAttr 0x559a32bb4530 <col:78, col:92> 1
|-FunctionDecl 0x559a32bb4748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x559a32bb4578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x559a32bb4620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x559a32bb47f8 <line:619:22>
| `-NonNullAttr 0x559a32bb4850 <col:63, col:80> 1 2
|-FunctionDecl 0x559a32bb4a18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x559a32bb4898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x559a32bb4910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x559a32bb4ac8 <line:622:22>
| `-NonNullAttr 0x559a32bb4b20 <col:63, col:77> 1
|-FunctionDecl 0x559a32bb4dc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x559a32bb4c00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x559a32bb4c80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x559a32bb4e78 <line:624:22>
| `-NonNullAttr 0x559a32bb4f00 <col:63, col:77> 1
|-FunctionDecl 0x559a32bb5078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559a32bb4f48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559a32bb5120 <line:626:22>
| `-NonNullAttr 0x559a32bb5178 <col:63, col:77> 1
|-FunctionDecl 0x559a32bb5280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559a32bb51c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559a32bb5328 <line:628:22>
| `-NonNullAttr 0x559a32bb5380 <col:52, col:66> 1
|-FunctionDecl 0x559a32bb5480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559a32bb53c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559a32bb5528 <line:630:22>
| `-NonNullAttr 0x559a32bb5580 <col:52, col:66> 1
|-FunctionDecl 0x559a32bb5680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559a32bb55c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559a32bb5728 <line:632:22>
| `-NonNullAttr 0x559a32bb5780 <col:52, col:66> 1
|-FunctionDecl 0x559a32bb5b58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x559a32bb5860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x559a32bb5970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x559a32bb59f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x559a32bb5c10 <line:636:22>
| `-NonNullAttr 0x559a32bb5c68 <col:63, col:77> 1
|-FunctionDecl 0x559a32bb5de8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x559a32bb5cb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x559a32bb5e90 <line:638:22>
| `-NonNullAttr 0x559a32bb5f10 <col:63, col:77> 1
|-FunctionDecl 0x559a32bb6010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x559a32bb5f58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x559a32bb60b8 <line:640:22>
| `-NonNullAttr 0x559a32bb6110 <col:52, col:66> 1
|-FunctionDecl 0x559a32bb62f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x559a32bb61c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x559a32bb63a0 <line:642:22>
| `-NonNullAttr 0x559a32bb63f8 <col:63, col:77> 1
|-FunctionDecl 0x559a32bb6500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x559a32bb6448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x559a32bb65a8 <line:644:22>
| `-NonNullAttr 0x559a32bb6600 <col:63, col:77> 1
|-FunctionDecl 0x559a32bb6828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559a32bb6648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x559a32bb66c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x559a32bb68d8 <line:648:22>
| `-NonNullAttr 0x559a32bb6930 <col:63, col:80> 1 2
|-FunctionDecl 0x559a32bb6b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x559a32bb6978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x559a32bb69f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x559a32bb6be8 <line:651:22>
| `-NonNullAttr 0x559a32bb6c40 <col:63, col:77> 1
|-FunctionDecl 0x559a32bb6fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x559a32bb6d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x559a32bb6e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x559a32bb7058 <line:654:22>
| `-NonNullAttr 0x559a32bb70b0 <col:63, col:77> 1
|-FunctionDecl 0x559a32bb7208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x559a32bb70f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x559a32bb72b0 <col:69>
|-FunctionDecl 0x559a32bb7428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x559a32bb7318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x559a32bb74d0 <col:72>
|-FunctionDecl 0x559a32bb7708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x559a32bb7538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x559a32bb75e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x559a32bb77b8 <col:44>
|-FunctionDecl 0x559a32bb79d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x559a32bb7820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559a32bb7898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x559a32bb7a88 <line:661:22>
| `-NonNullAttr 0x559a32bb7ae0 <col:63, col:77> 2
|-FunctionDecl 0x559a32bb8f50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x559a32bb7bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x559a32bb7cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x559a32bb7de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x559a32bb9008 <col:47>
|-FunctionDecl 0x559a32bb9110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x559a32bb9078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559a32bb9268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x559a32bb91d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559a32bb9330 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x559a32bb93f0 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x559a32bb94b0 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x559a32bb9568 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x559a32bb95e8 prev 0x559a32bb9568 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x559a32bb9650 <col:24> 'int' 0
|-VarDecl 0x559a32bb9688 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x559a32bb9708 prev 0x559a32bb9688 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x559a32bb9770 <col:27> 'int' 0
|-VarDecl 0x559a32bb97a8 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x559a32bb9828 prev 0x559a32bb97a8 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x559a32bb9890 <col:27> 'int' 0
|-VarDecl 0x559a32bb98c8 <line:677:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x559a32bb9948 prev 0x559a32bb98c8 <line:678:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x559a32bb99b0 <col:27> 'int' 0
|-VarDecl 0x559a32bb99e0 <line:679:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x559a32bb9a58 <line:680:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x559a32bb9ad8 <line:681:1, col:5> col:5 used x 'int'
|-VarDecl 0x559a32bb9b58 prev 0x559a32bb9ad8 <line:682:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x559a32bb9bc0 <col:9> 'int' 0
|-VarDecl 0x559a32bb9bf0 <line:683:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x559a32bb9c70 <line:684:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x559a32bb9ce8 <line:685:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x559a32bb9d60 <line:686:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x559a32bb9dd8 <line:687:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x559a32bb9e50 <line:688:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x559a32bb9f20 <line:689:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x559a32bb9f98 <line:690:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x559a32bba010 <line:691:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x559a32bba090 <line:692:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x559a32bba110 <line:693:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x559a32bba188 <line:694:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x559a32bba208 <line:695:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x559a32bba280 <line:696:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x559a32bba300 <line:697:1, col:5> col:5 used y 'int'
|-VarDecl 0x559a32bba380 prev 0x559a32bba300 <line:698:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x559a32bba3e8 <col:9> 'int' 0
|-VarDecl 0x559a32bba418 <line:699:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x559a32bba490 <line:700:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x559a32bba5a8 prev 0x559a32bb9110 <line:701:1, line:740:1> line:701:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x559a32bba510 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559a32bbefa0 <line:702:1, line:740:1>
|   |-CallExpr 0x559a32bba6b8 <line:703:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559a32bba6a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559a32bba650 <col:3> 'void ()' Function 0x559a32b604b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559a32bba718 <line:704:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559a32bba6d8 <col:3> 'int' lvalue Var 0x559a32bb9b58 'x' 'int'
|   | `-IntegerLiteral 0x559a32bba6f8 <col:7> 'int' 1
|   |-CallExpr 0x559a32bba770 <line:705:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559a32bba758 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559a32bba738 <col:3> 'void ()' Function 0x559a32b60570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559a32bba7c8 <line:706:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559a32bba7b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559a32bba790 <col:3> 'void ()' Function 0x559a32b604b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559a32bbaab0 <line:707:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559a32bba7e8 <col:3> 'int' lvalue Var 0x559a32bb9b58 'x' 'int'
|   | `-ConditionalOperator 0x559a32bbaa80 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559a32bba8a8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559a32bba860 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559a32bba848 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559a32bba808 <col:7> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559a32bba890 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559a32bba878 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559a32bba828 <col:25> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x559a32bbaa68 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559a32bba8c8 <col:42> 'int' lvalue Var 0x559a32bba110 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x559a32bbaa48 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559a32bbaa18 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559a32bba988 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559a32bba940 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559a32bba928 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559a32bba8e8 <col:55> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559a32bba970 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559a32bba958 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559a32bba908 <col:73> '_Bool' lvalue Var 0x559a32bb9f20 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x559a32bba9e8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559a32bba9a8 <col:90> 'int' lvalue Var 0x559a32bba208 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559a32bbaa00 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559a32bba9c8 <col:102> 'int' lvalue Var 0x559a32bb9b58 'x' 'int'
|   |-BinaryOperator 0x559a32bbacb8 <line:708:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bbaad0 <col:3> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559a32bbaca0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559a32bbac70 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559a32bbab90 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559a32bbab48 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559a32bbab30 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559a32bbaaf0 <col:20> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559a32bbab78 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559a32bbab60 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559a32bbab10 <col:38> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559a32bbac28 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559a32bbabe0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559a32bbabb0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559a32bbac58 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559a32bbac40 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559a32bbac08 <col:66> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559a32bbafc0 <line:709:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bbacd8 <col:3> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559a32bbafa8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559a32bbaf78 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559a32bbae78 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559a32bbad98 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559a32bbad50 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559a32bbad38 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559a32bbacf8 <col:20> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559a32bbad80 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559a32bbad68 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559a32bbad18 <col:38> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x559a32bbae58 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559a32bbae10 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559a32bbadf8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559a32bbadb8 <col:56> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559a32bbae40 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559a32bbae28 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559a32bbadd8 <col:74> '_Bool' lvalue Var 0x559a32bb9f20 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559a32bbaf30 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559a32bbaec8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559a32bbae98 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559a32bbaf60 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559a32bbaf48 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559a32bbaef0 <col:102> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559a32bbb1c8 <line:710:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bbafe0 <col:3> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559a32bbb1b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559a32bbb180 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559a32bbb0a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559a32bbb058 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559a32bbb040 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559a32bbb000 <col:20> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559a32bbb088 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559a32bbb070 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559a32bbb020 <col:38> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559a32bbb138 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559a32bbb0f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559a32bbb0c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559a32bbb168 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559a32bbb150 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559a32bbb118 <col:66> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x559a32bbb4b0 <line:711:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bbb1e8 <col:3> '_Bool' lvalue Var 0x559a32bb9f20 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559a32bbb498 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559a32bbb468 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559a32bbb388 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559a32bbb2a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559a32bbb260 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559a32bbb248 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559a32bbb208 <col:20> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559a32bbb290 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559a32bbb278 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559a32bbb228 <col:38> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x559a32bbb368 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559a32bbb320 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559a32bbb308 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559a32bbb2c8 <col:56> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559a32bbb350 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559a32bbb338 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559a32bbb2e8 <col:74> '_Bool' lvalue Var 0x559a32bb9f20 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559a32bbb420 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559a32bbb3d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559a32bbb3a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559a32bbb450 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559a32bbb438 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559a32bbb400 <col:102> '_Bool' lvalue Var 0x559a32bb9f20 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x559a32bbb508 <line:712:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559a32bbb4f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559a32bbb4d0 <col:3> 'void ()' Function 0x559a32b60570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559a32bbb560 <line:713:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559a32bbb548 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559a32bbb528 <col:3> 'void ()' Function 0x559a32b604b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559a32bbb628 <line:714:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bbb580 <col:3> '_Bool' lvalue Var 0x559a32bba418 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x559a32bbb608 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x559a32bbb5f0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x559a32bbb5a0 <col:19> '_Bool (void)' Function 0x559a32b5fc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x559a32bbb6c0 <line:715:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bbb648 <col:3> '_Bool' lvalue Var 0x559a32bba490 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x559a32bbb6a0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x559a32bbb688 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x559a32bbb668 <col:19> '_Bool (void)' Function 0x559a32b5fc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x559a32bbb738 <line:716:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bbb6e0 <col:3> '_Bool' lvalue Var 0x559a32bb9bf0 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x559a32bbb720 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559a32bbb700 <col:21> '_Bool' lvalue Var 0x559a32bba490 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x559a32bbb7b0 <line:717:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559a32bbb758 <col:3> 'int' lvalue Var 0x559a32bb9c70 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x559a32bbb798 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559a32bbb778 <col:15> 'int' lvalue Var 0x559a32bb9b58 'x' 'int'
|   |-BinaryOperator 0x559a32bbbbe8 <line:718:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x559a32bbb7d0 <col:3> 'int' lvalue Var 0x559a32bb9b58 'x' 'int'
|   | `-ConditionalOperator 0x559a32bbbbb8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x559a32bbb9e0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x559a32bbb900 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x559a32bbb828 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x559a32bbb810 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x559a32bbb7f0 <col:8> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x559a32bbb8e0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x559a32bbb878 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x559a32bbb860 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x559a32bbb840 <col:27> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x559a32bbb8c8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x559a32bbb8b0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x559a32bbb890 <col:46> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x559a32bbb9c0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x559a32bbb958 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x559a32bbb940 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x559a32bbb920 <col:65> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x559a32bbb9a8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x559a32bbb990 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x559a32bbb970 <col:84> '_Bool' lvalue Var 0x559a32bb9f20 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x559a32bbbba0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559a32bbba00 <col:101> 'int' lvalue Var 0x559a32bb9b58 'x' 'int'
|   |   `-ParenExpr 0x559a32bbbb80 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x559a32bbbb50 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x559a32bbbac0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559a32bbba78 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559a32bbba60 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559a32bbba20 <col:106> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559a32bbbaa8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559a32bbba90 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559a32bbba40 <col:124> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x559a32bbbb20 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559a32bbbae0 <col:141> 'int' lvalue Var 0x559a32bba110 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x559a32bbbb38 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559a32bbbb00 <col:153> 'int' lvalue Var 0x559a32bba208 'x$w_buff1' 'int'
|   |-BinaryOperator 0x559a32bbc118 <line:719:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559a32bbbc08 <col:3> 'int' lvalue Var 0x559a32bba110 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x559a32bbc0e8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559a32bbc0b8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559a32bbc0a0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559a32bbbc28 <col:15> '_Bool' lvalue Var 0x559a32bba490 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559a32bbc0d0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559a32bbbc48 <col:31> 'int' lvalue Var 0x559a32bba110 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x559a32bbc080 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559a32bbc050 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559a32bbbe58 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559a32bbbd78 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559a32bbbca0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559a32bbbc88 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559a32bbbc68 <col:45> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559a32bbbd58 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559a32bbbcf0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559a32bbbcd8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559a32bbbcb8 <col:64> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x559a32bbbd40 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559a32bbbd28 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559a32bbbd08 <col:83> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559a32bbbe38 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559a32bbbdd0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559a32bbbdb8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559a32bbbd98 <col:102> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x559a32bbbe20 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559a32bbbe08 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559a32bbbde8 <col:121> '_Bool' lvalue Var 0x559a32bb9f20 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x559a32bbc038 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559a32bbbe78 <col:138> 'int' lvalue Var 0x559a32bba110 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x559a32bbc018 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559a32bbbfe8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559a32bbbf58 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559a32bbbef0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559a32bbbed8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559a32bbbe98 <col:151> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559a32bbbf40 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559a32bbbf08 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559a32bbbeb8 <col:169> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x559a32bbbfb8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559a32bbbf78 <col:186> 'int' lvalue Var 0x559a32bba110 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x559a32bbbfd0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559a32bbbf98 <col:198> 'int' lvalue Var 0x559a32bba110 'x$w_buff0' 'int'
|   |-BinaryOperator 0x559a32bbc628 <line:720:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559a32bbc138 <col:3> 'int' lvalue Var 0x559a32bba208 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x559a32bbc5f8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559a32bbc5c8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559a32bbc5b0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559a32bbc158 <col:15> '_Bool' lvalue Var 0x559a32bba490 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559a32bbc5e0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559a32bbc178 <col:31> 'int' lvalue Var 0x559a32bba208 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x559a32bbc590 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559a32bbc560 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559a32bbc388 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559a32bbc2a8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559a32bbc1d0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559a32bbc1b8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559a32bbc198 <col:45> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559a32bbc288 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559a32bbc220 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559a32bbc208 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559a32bbc1e8 <col:64> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x559a32bbc270 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559a32bbc258 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559a32bbc238 <col:83> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559a32bbc368 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559a32bbc300 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559a32bbc2e8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559a32bbc2c8 <col:102> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x559a32bbc350 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559a32bbc338 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559a32bbc318 <col:121> '_Bool' lvalue Var 0x559a32bb9f20 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x559a32bbc548 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559a32bbc3a8 <col:138> 'int' lvalue Var 0x559a32bba208 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x559a32bbc528 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559a32bbc4f8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559a32bbc468 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559a32bbc420 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559a32bbc408 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559a32bbc3c8 <col:151> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559a32bbc450 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559a32bbc438 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559a32bbc3e8 <col:169> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x559a32bbc4c8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559a32bbc488 <col:186> 'int' lvalue Var 0x559a32bba208 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x559a32bbc4e0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559a32bbc4a8 <col:198> 'int' lvalue Var 0x559a32bba208 'x$w_buff1' 'int'
|   |-BinaryOperator 0x559a32bbcbd0 <line:721:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bbc648 <col:3> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559a32bbcbb8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559a32bbcb88 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559a32bbcb40 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559a32bbcb28 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559a32bbc668 <col:20> '_Bool' lvalue Var 0x559a32bba490 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559a32bbcb70 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559a32bbcb58 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559a32bbc688 <col:36> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x559a32bbcb08 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559a32bbcad8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559a32bbc898 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559a32bbc7b8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559a32bbc6e0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559a32bbc6c8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559a32bbc6a8 <col:55> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559a32bbc798 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559a32bbc730 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559a32bbc718 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559a32bbc6f8 <col:74> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x559a32bbc780 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559a32bbc768 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559a32bbc748 <col:93> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559a32bbc878 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559a32bbc810 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559a32bbc7f8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559a32bbc7d8 <col:112> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x559a32bbc860 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559a32bbc848 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559a32bbc828 <col:131> '_Bool' lvalue Var 0x559a32bb9f20 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x559a32bbcac0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559a32bbcaa8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559a32bbc8b8 <col:148> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x559a32bbca88 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559a32bbca58 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559a32bbc978 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559a32bbc930 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559a32bbc918 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559a32bbc8d8 <col:166> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559a32bbc960 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559a32bbc948 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559a32bbc8f8 <col:184> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x559a32bbca10 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559a32bbc9c8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559a32bbc998 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559a32bbca40 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559a32bbca28 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559a32bbc9f0 <col:212> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559a32bbd1a8 <line:722:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bbcbf0 <col:3> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559a32bbd190 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559a32bbd160 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559a32bbd118 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559a32bbd100 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559a32bbcc10 <col:20> '_Bool' lvalue Var 0x559a32bba490 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559a32bbd148 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559a32bbd130 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559a32bbcc30 <col:36> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x559a32bbd0e0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559a32bbd0b0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559a32bbce40 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559a32bbcd60 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559a32bbcc88 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559a32bbcc70 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559a32bbcc50 <col:55> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559a32bbcd40 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559a32bbccd8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559a32bbccc0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559a32bbcca0 <col:74> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x559a32bbcd28 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559a32bbcd10 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559a32bbccf0 <col:93> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559a32bbce20 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559a32bbcdb8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559a32bbcda0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559a32bbcd80 <col:112> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x559a32bbce08 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559a32bbcdf0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559a32bbcdd0 <col:131> '_Bool' lvalue Var 0x559a32bb9f20 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x559a32bbd098 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559a32bbd080 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559a32bbce60 <col:148> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x559a32bbd060 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559a32bbd030 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559a32bbcf20 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559a32bbced8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559a32bbcec0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559a32bbce80 <col:166> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559a32bbcf08 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559a32bbcef0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559a32bbcea0 <col:184> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x559a32bbd000 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559a32bbcf80 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559a32bbcf50 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559a32bbd018 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559a32bbcfd8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559a32bbcfa8 <col:219> 'int' 0
|   |-BinaryOperator 0x559a32bbd750 <line:723:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bbd1c8 <col:3> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559a32bbd738 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559a32bbd708 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559a32bbd6c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559a32bbd6a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559a32bbd1e8 <col:20> '_Bool' lvalue Var 0x559a32bba490 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559a32bbd6f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559a32bbd6d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559a32bbd208 <col:36> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x559a32bbd688 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559a32bbd658 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559a32bbd418 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559a32bbd338 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559a32bbd260 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559a32bbd248 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559a32bbd228 <col:55> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559a32bbd318 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559a32bbd2b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559a32bbd298 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559a32bbd278 <col:74> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x559a32bbd300 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559a32bbd2e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559a32bbd2c8 <col:93> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559a32bbd3f8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559a32bbd390 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559a32bbd378 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559a32bbd358 <col:112> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x559a32bbd3e0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559a32bbd3c8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559a32bbd3a8 <col:131> '_Bool' lvalue Var 0x559a32bb9f20 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x559a32bbd640 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559a32bbd628 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559a32bbd438 <col:148> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x559a32bbd608 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559a32bbd5d8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559a32bbd4f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559a32bbd4b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559a32bbd498 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559a32bbd458 <col:166> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559a32bbd4e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559a32bbd4c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559a32bbd478 <col:184> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x559a32bbd590 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559a32bbd548 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559a32bbd518 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559a32bbd5c0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559a32bbd5a8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559a32bbd570 <col:212> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x559a32bbdd18 <line:724:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bbd770 <col:3> '_Bool' lvalue Var 0x559a32bb9f20 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559a32bbdd00 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559a32bbdcd0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559a32bbdc88 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559a32bbdc70 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559a32bbd790 <col:20> '_Bool' lvalue Var 0x559a32bba490 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559a32bbdcb8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559a32bbdca0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559a32bbd7b0 <col:36> '_Bool' lvalue Var 0x559a32bb9f20 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x559a32bbdc50 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559a32bbdc20 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559a32bbd9c0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559a32bbd8e0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559a32bbd808 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559a32bbd7f0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559a32bbd7d0 <col:55> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559a32bbd8c0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559a32bbd858 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559a32bbd840 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559a32bbd820 <col:74> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x559a32bbd8a8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559a32bbd890 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559a32bbd870 <col:93> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559a32bbd9a0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559a32bbd938 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559a32bbd920 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559a32bbd900 <col:112> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x559a32bbd988 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559a32bbd970 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559a32bbd950 <col:131> '_Bool' lvalue Var 0x559a32bb9f20 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x559a32bbdc08 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559a32bbdbf0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559a32bbd9e0 <col:148> '_Bool' lvalue Var 0x559a32bb9f20 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x559a32bbdbd0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559a32bbdba0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559a32bbdaa0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559a32bbda58 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559a32bbda40 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559a32bbda00 <col:166> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559a32bbda88 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559a32bbda70 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559a32bbda20 <col:184> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x559a32bbdb70 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559a32bbdaf0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559a32bbdac0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559a32bbdb88 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559a32bbdb48 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559a32bbdb18 <col:219> 'int' 0
|   |-BinaryOperator 0x559a32bbdd90 <line:725:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559a32bbdd38 <col:3> 'int' lvalue Var 0x559a32bb9708 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x559a32bbdd78 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559a32bbdd58 <col:25> 'int' lvalue Var 0x559a32bb9b58 'x' 'int'
|   |-BinaryOperator 0x559a32bbdec0 <line:726:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x559a32bbddb0 <col:3> 'int' lvalue Var 0x559a32bb9b58 'x' 'int'
|   | `-ConditionalOperator 0x559a32bbde90 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x559a32bbde48 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559a32bbde30 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559a32bbddd0 <col:7> '_Bool' lvalue Var 0x559a32bb9bf0 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x559a32bbde60 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559a32bbddf0 <col:25> 'int' lvalue Var 0x559a32bb9c70 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x559a32bbde78 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x559a32bbde10 <col:37> 'int' lvalue Var 0x559a32bb9b58 'x' 'int'
|   |-BinaryOperator 0x559a32bbdf88 <line:727:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bbdee0 <col:3> '_Bool' lvalue Var 0x559a32bb9bf0 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x559a32bbdf60 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559a32bbdf00 <col:28> 'int' 0
|   |-CallExpr 0x559a32bbdfe0 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559a32bbdfc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559a32bbdfa8 <col:3> 'void ()' Function 0x559a32b60570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559a32bbe038 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559a32bbe020 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559a32bbe000 <col:3> 'void ()' Function 0x559a32b604b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559a32bbe320 <line:730:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559a32bbe058 <col:3> 'int' lvalue Var 0x559a32bb9b58 'x' 'int'
|   | `-ConditionalOperator 0x559a32bbe2f0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559a32bbe118 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559a32bbe0d0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559a32bbe0b8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559a32bbe078 <col:7> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559a32bbe100 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559a32bbe0e8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559a32bbe098 <col:25> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x559a32bbe2d8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559a32bbe138 <col:42> 'int' lvalue Var 0x559a32bba110 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x559a32bbe2b8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559a32bbe288 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559a32bbe1f8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559a32bbe1b0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559a32bbe198 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559a32bbe158 <col:55> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559a32bbe1e0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559a32bbe1c8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559a32bbe178 <col:73> '_Bool' lvalue Var 0x559a32bb9f20 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x559a32bbe258 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559a32bbe218 <col:90> 'int' lvalue Var 0x559a32bba208 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559a32bbe270 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559a32bbe238 <col:102> 'int' lvalue Var 0x559a32bb9b58 'x' 'int'
|   |-BinaryOperator 0x559a32bbe528 <line:731:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bbe340 <col:3> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559a32bbe510 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559a32bbe4e0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559a32bbe400 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559a32bbe3b8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559a32bbe3a0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559a32bbe360 <col:20> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559a32bbe3e8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559a32bbe3d0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559a32bbe380 <col:38> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559a32bbe498 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559a32bbe450 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559a32bbe420 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559a32bbe4c8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559a32bbe4b0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559a32bbe478 <col:66> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559a32bbe810 <line:732:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bbe548 <col:3> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559a32bbe7f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559a32bbe7c8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559a32bbe6e8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559a32bbe608 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559a32bbe5c0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559a32bbe5a8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559a32bbe568 <col:20> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559a32bbe5f0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559a32bbe5d8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559a32bbe588 <col:38> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x559a32bbe6c8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559a32bbe680 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559a32bbe668 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559a32bbe628 <col:56> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559a32bbe6b0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559a32bbe698 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559a32bbe648 <col:74> '_Bool' lvalue Var 0x559a32bb9f20 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559a32bbe780 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559a32bbe738 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559a32bbe708 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559a32bbe7b0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559a32bbe798 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559a32bbe760 <col:102> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559a32bbea18 <line:733:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bbe830 <col:3> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559a32bbea00 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559a32bbe9d0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559a32bbe8f0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559a32bbe8a8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559a32bbe890 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559a32bbe850 <col:20> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559a32bbe8d8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559a32bbe8c0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559a32bbe870 <col:38> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559a32bbe988 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559a32bbe940 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559a32bbe910 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559a32bbe9b8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559a32bbe9a0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559a32bbe968 <col:66> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x559a32bbed00 <line:734:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bbea38 <col:3> '_Bool' lvalue Var 0x559a32bb9f20 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559a32bbece8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559a32bbecb8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559a32bbebd8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559a32bbeaf8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559a32bbeab0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559a32bbea98 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559a32bbea58 <col:20> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559a32bbeae0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559a32bbeac8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559a32bbea78 <col:38> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x559a32bbebb8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559a32bbeb70 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559a32bbeb58 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559a32bbeb18 <col:56> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559a32bbeba0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559a32bbeb88 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559a32bbeb38 <col:74> '_Bool' lvalue Var 0x559a32bb9f20 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559a32bbec70 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559a32bbec28 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559a32bbebf8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559a32bbeca0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559a32bbec88 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559a32bbec50 <col:102> '_Bool' lvalue Var 0x559a32bb9f20 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x559a32bbed58 <line:735:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559a32bbed40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559a32bbed20 <col:3> 'void ()' Function 0x559a32b60570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559a32bbedb0 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559a32bbed98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559a32bbed78 <col:3> 'void ()' Function 0x559a32b604b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559a32bbee68 <line:737:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559a32bbedd0 <col:3> 'int' lvalue Var 0x559a32bb95e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559a32bbee48 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559a32bbee30 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559a32bbedf0 <col:22> 'int' lvalue Var 0x559a32bb95e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559a32bbee10 <col:41> 'int' 1
|   |-CallExpr 0x559a32bbeec0 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559a32bbeea8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559a32bbee88 <col:3> 'void ()' Function 0x559a32b60570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559a32bbef90 <line:739:3, col:36>
|     `-CallExpr 0x559a32bbef70 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559a32bbef30 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559a32bbeee0 <col:10> 'void *(void)' Function 0x559a32b5ffc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559a32bbf188 prev 0x559a32bb9268 <line:741:1, line:787:1> line:741:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x559a32bbf0f0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559a32bc34a0 <line:742:1, line:787:1>
|   |-CallExpr 0x559a32bbf268 <line:743:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559a32bbf250 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559a32bbf230 <col:3> 'void ()' Function 0x559a32b604b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559a32bbf2e0 <line:744:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559a32bbf288 <col:3> 'int' lvalue Var 0x559a32bba208 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x559a32bbf2c8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559a32bbf2a8 <col:15> 'int' lvalue Var 0x559a32bba110 'x$w_buff0' 'int'
|   |-BinaryOperator 0x559a32bbf340 <line:745:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559a32bbf300 <col:3> 'int' lvalue Var 0x559a32bba110 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x559a32bbf320 <col:15> 'int' 2
|   |-BinaryOperator 0x559a32bbf3b8 <line:746:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bbf360 <col:3> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559a32bbf3a0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559a32bbf380 <col:20> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559a32bbf450 <line:747:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bbf3d8 <col:3> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x559a32bbf428 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559a32bbf3f8 <col:27> 'int' 1
|   |-CallExpr 0x559a32bbf5d8 <line:748:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x559a32bbf5c0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x559a32bbf470 <col:3> 'void (int)' Function 0x559a32b60238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x559a32bbf570 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x559a32bbf550 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x559a32bbf530 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x559a32bbf4e8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x559a32bbf4d0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x559a32bbf490 <col:23> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x559a32bbf518 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x559a32bbf500 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x559a32bbf4b0 <col:41> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559a32bbf658 <line:749:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bbf600 <col:3> '_Bool' lvalue Var 0x559a32bb9e50 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x559a32bbf640 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559a32bbf620 <col:20> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x559a32bbf6d0 <line:750:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bbf678 <col:3> '_Bool' lvalue Var 0x559a32bb9f20 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559a32bbf6b8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559a32bbf698 <col:20> '_Bool' lvalue Var 0x559a32bb9d60 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x559a32bbf748 <line:751:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bbf6f0 <col:3> '_Bool' lvalue Var 0x559a32bb9f98 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559a32bbf730 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559a32bbf710 <col:20> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x559a32bbf7e0 <line:752:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bbf768 <col:3> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x559a32bbf7b8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559a32bbf788 <col:27> 'int' 1
|   |-CallExpr 0x559a32bbf838 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559a32bbf820 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559a32bbf800 <col:3> 'void ()' Function 0x559a32b60570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559a32bbf890 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559a32bbf878 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559a32bbf858 <col:3> 'void ()' Function 0x559a32b604b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559a32bbf8f0 <line:755:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559a32bbf8b0 <col:3> 'int' lvalue Var 0x559a32bba380 'y' 'int'
|   | `-IntegerLiteral 0x559a32bbf8d0 <col:7> 'int' 1
|   |-CallExpr 0x559a32bbf948 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559a32bbf930 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559a32bbf910 <col:3> 'void ()' Function 0x559a32b60570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559a32bbf9a0 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559a32bbf988 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559a32bbf968 <col:3> 'void ()' Function 0x559a32b604b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559a32bbfa18 <line:758:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559a32bbf9c0 <col:3> 'int' lvalue Var 0x559a32bb9828 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x559a32bbfa00 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559a32bbf9e0 <col:25> 'int' lvalue Var 0x559a32bba380 'y' 'int'
|   |-CallExpr 0x559a32bbfa70 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559a32bbfa58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559a32bbfa38 <col:3> 'void ()' Function 0x559a32b60570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559a32bbfac8 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559a32bbfab0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559a32bbfa90 <col:3> 'void ()' Function 0x559a32b604b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559a32bbfb60 <line:761:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bbfae8 <col:3> '_Bool' lvalue Var 0x559a32bba418 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x559a32bbfb40 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x559a32bbfb28 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x559a32bbfb08 <col:19> '_Bool (void)' Function 0x559a32b5fc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x559a32bbfbf8 <line:762:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bbfb80 <col:3> '_Bool' lvalue Var 0x559a32bba490 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x559a32bbfbd8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x559a32bbfbc0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x559a32bbfba0 <col:19> '_Bool (void)' Function 0x559a32b5fc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x559a32bbfc70 <line:763:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bbfc18 <col:3> '_Bool' lvalue Var 0x559a32bb9bf0 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x559a32bbfc58 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559a32bbfc38 <col:21> '_Bool' lvalue Var 0x559a32bba490 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x559a32bbfce8 <line:764:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559a32bbfc90 <col:3> 'int' lvalue Var 0x559a32bb9c70 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x559a32bbfcd0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559a32bbfcb0 <col:15> 'int' lvalue Var 0x559a32bb9b58 'x' 'int'
|   |-BinaryOperator 0x559a32bc0148 <line:765:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x559a32bbfd08 <col:3> 'int' lvalue Var 0x559a32bb9b58 'x' 'int'
|   | `-ConditionalOperator 0x559a32bc0118 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x559a32bbff18 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x559a32bbfe38 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x559a32bbfd60 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x559a32bbfd48 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x559a32bbfd28 <col:8> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x559a32bbfe18 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x559a32bbfdb0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x559a32bbfd98 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x559a32bbfd78 <col:27> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x559a32bbfe00 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x559a32bbfde8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x559a32bbfdc8 <col:46> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x559a32bbfef8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x559a32bbfe90 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x559a32bbfe78 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x559a32bbfe58 <col:65> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x559a32bbfee0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x559a32bbfec8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x559a32bbfea8 <col:84> '_Bool' lvalue Var 0x559a32bb9f98 'x$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x559a32bc0100 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559a32bbff38 <col:101> 'int' lvalue Var 0x559a32bb9b58 'x' 'int'
|   |   `-ParenExpr 0x559a32bc00e0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x559a32bc00b0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x559a32bc0020 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559a32bbffd8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559a32bbffc0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559a32bbff80 <col:106> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559a32bc0008 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559a32bbfff0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559a32bbffa0 <col:124> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x559a32bc0080 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559a32bc0040 <col:141> 'int' lvalue Var 0x559a32bba110 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x559a32bc0098 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559a32bc0060 <col:153> 'int' lvalue Var 0x559a32bba208 'x$w_buff1' 'int'
|   |-BinaryOperator 0x559a32bc0658 <line:766:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559a32bc0168 <col:3> 'int' lvalue Var 0x559a32bba110 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x559a32bc0628 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559a32bc05f8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559a32bc05e0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559a32bc0188 <col:15> '_Bool' lvalue Var 0x559a32bba490 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559a32bc0610 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559a32bc01a8 <col:31> 'int' lvalue Var 0x559a32bba110 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x559a32bc05c0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559a32bc0590 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559a32bc03b8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559a32bc02d8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559a32bc0200 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559a32bc01e8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559a32bc01c8 <col:45> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559a32bc02b8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559a32bc0250 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559a32bc0238 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559a32bc0218 <col:64> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x559a32bc02a0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559a32bc0288 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559a32bc0268 <col:83> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559a32bc0398 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559a32bc0330 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559a32bc0318 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559a32bc02f8 <col:102> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x559a32bc0380 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559a32bc0368 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559a32bc0348 <col:121> '_Bool' lvalue Var 0x559a32bb9f98 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x559a32bc0578 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559a32bc03d8 <col:138> 'int' lvalue Var 0x559a32bba110 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x559a32bc0558 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559a32bc0528 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559a32bc0498 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559a32bc0450 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559a32bc0438 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559a32bc03f8 <col:151> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559a32bc0480 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559a32bc0468 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559a32bc0418 <col:169> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x559a32bc04f8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559a32bc04b8 <col:186> 'int' lvalue Var 0x559a32bba110 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x559a32bc0510 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559a32bc04d8 <col:198> 'int' lvalue Var 0x559a32bba110 'x$w_buff0' 'int'
|   |-BinaryOperator 0x559a32bc0b68 <line:767:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559a32bc0678 <col:3> 'int' lvalue Var 0x559a32bba208 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x559a32bc0b38 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559a32bc0b08 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559a32bc0af0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559a32bc0698 <col:15> '_Bool' lvalue Var 0x559a32bba490 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559a32bc0b20 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559a32bc06b8 <col:31> 'int' lvalue Var 0x559a32bba208 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x559a32bc0ad0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559a32bc0aa0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559a32bc08c8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559a32bc07e8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559a32bc0710 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559a32bc06f8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559a32bc06d8 <col:45> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559a32bc07c8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559a32bc0760 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559a32bc0748 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559a32bc0728 <col:64> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x559a32bc07b0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559a32bc0798 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559a32bc0778 <col:83> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559a32bc08a8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559a32bc0840 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559a32bc0828 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559a32bc0808 <col:102> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x559a32bc0890 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559a32bc0878 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559a32bc0858 <col:121> '_Bool' lvalue Var 0x559a32bb9f98 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x559a32bc0a88 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559a32bc08e8 <col:138> 'int' lvalue Var 0x559a32bba208 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x559a32bc0a68 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559a32bc0a38 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559a32bc09a8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559a32bc0960 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559a32bc0948 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559a32bc0908 <col:151> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559a32bc0990 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559a32bc0978 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559a32bc0928 <col:169> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x559a32bc0a08 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559a32bc09c8 <col:186> 'int' lvalue Var 0x559a32bba208 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x559a32bc0a20 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559a32bc09e8 <col:198> 'int' lvalue Var 0x559a32bba208 'x$w_buff1' 'int'
|   |-BinaryOperator 0x559a32bc1120 <line:768:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bc0b88 <col:3> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559a32bc1108 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559a32bc10d8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559a32bc1090 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559a32bc1078 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559a32bc0ba8 <col:20> '_Bool' lvalue Var 0x559a32bba490 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559a32bc10c0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559a32bc10a8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559a32bc0bc8 <col:36> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x559a32bc1058 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559a32bc1028 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559a32bc0dd8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559a32bc0cf8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559a32bc0c20 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559a32bc0c08 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559a32bc0be8 <col:55> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559a32bc0cd8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559a32bc0c70 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559a32bc0c58 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559a32bc0c38 <col:74> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x559a32bc0cc0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559a32bc0ca8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559a32bc0c88 <col:93> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559a32bc0db8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559a32bc0d50 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559a32bc0d38 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559a32bc0d18 <col:112> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x559a32bc0da0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559a32bc0d88 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559a32bc0d68 <col:131> '_Bool' lvalue Var 0x559a32bb9f98 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x559a32bc1010 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559a32bc0ff8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559a32bc0df8 <col:148> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x559a32bc0fd8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559a32bc0fa8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559a32bc0eb8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559a32bc0e70 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559a32bc0e58 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559a32bc0e18 <col:166> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559a32bc0ea0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559a32bc0e88 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559a32bc0e38 <col:184> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x559a32bc0f50 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559a32bc0f08 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559a32bc0ed8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559a32bc0f90 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559a32bc0f68 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559a32bc0f30 <col:212> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559a32bc16e8 <line:769:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bc1140 <col:3> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559a32bc16d0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559a32bc16a0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559a32bc1658 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559a32bc1640 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559a32bc1160 <col:20> '_Bool' lvalue Var 0x559a32bba490 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559a32bc1688 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559a32bc1670 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559a32bc1180 <col:36> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x559a32bc1620 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559a32bc15f0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559a32bc1390 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559a32bc12b0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559a32bc11d8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559a32bc11c0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559a32bc11a0 <col:55> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559a32bc1290 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559a32bc1228 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559a32bc1210 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559a32bc11f0 <col:74> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x559a32bc1278 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559a32bc1260 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559a32bc1240 <col:93> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559a32bc1370 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559a32bc1308 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559a32bc12f0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559a32bc12d0 <col:112> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x559a32bc1358 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559a32bc1340 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559a32bc1320 <col:131> '_Bool' lvalue Var 0x559a32bb9f98 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x559a32bc15d8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559a32bc15c0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559a32bc13b0 <col:148> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x559a32bc15a0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559a32bc1570 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559a32bc1470 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559a32bc1428 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559a32bc1410 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559a32bc13d0 <col:166> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559a32bc1458 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559a32bc1440 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559a32bc13f0 <col:184> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x559a32bc1540 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559a32bc14c0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559a32bc1490 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559a32bc1558 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559a32bc1518 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559a32bc14e8 <col:219> 'int' 0
|   |-BinaryOperator 0x559a32bc1c90 <line:770:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bc1708 <col:3> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559a32bc1c78 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559a32bc1c48 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559a32bc1c00 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559a32bc1be8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559a32bc1728 <col:20> '_Bool' lvalue Var 0x559a32bba490 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559a32bc1c30 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559a32bc1c18 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559a32bc1748 <col:36> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x559a32bc1bc8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559a32bc1b98 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559a32bc1958 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559a32bc1878 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559a32bc17a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559a32bc1788 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559a32bc1768 <col:55> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559a32bc1858 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559a32bc17f0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559a32bc17d8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559a32bc17b8 <col:74> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x559a32bc1840 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559a32bc1828 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559a32bc1808 <col:93> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559a32bc1938 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559a32bc18d0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559a32bc18b8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559a32bc1898 <col:112> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x559a32bc1920 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559a32bc1908 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559a32bc18e8 <col:131> '_Bool' lvalue Var 0x559a32bb9f98 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x559a32bc1b80 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559a32bc1b68 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559a32bc1978 <col:148> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x559a32bc1b48 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559a32bc1b18 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559a32bc1a38 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559a32bc19f0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559a32bc19d8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559a32bc1998 <col:166> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559a32bc1a20 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559a32bc1a08 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559a32bc19b8 <col:184> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x559a32bc1ad0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559a32bc1a88 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559a32bc1a58 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559a32bc1b00 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559a32bc1ae8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559a32bc1ab0 <col:212> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x559a32bc2278 <line:771:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bc1cb0 <col:3> '_Bool' lvalue Var 0x559a32bb9f98 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559a32bc2260 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559a32bc2230 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559a32bc21e8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559a32bc21d0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559a32bc1cd0 <col:20> '_Bool' lvalue Var 0x559a32bba490 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559a32bc2218 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559a32bc2200 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559a32bc1cf0 <col:36> '_Bool' lvalue Var 0x559a32bb9f98 'x$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x559a32bc21b0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559a32bc2180 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559a32bc1f00 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559a32bc1e20 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559a32bc1d48 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559a32bc1d30 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559a32bc1d10 <col:55> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559a32bc1e00 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559a32bc1d98 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559a32bc1d80 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559a32bc1d60 <col:74> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x559a32bc1de8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559a32bc1dd0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559a32bc1db0 <col:93> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559a32bc1ee0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559a32bc1e78 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559a32bc1e60 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559a32bc1e40 <col:112> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x559a32bc1ec8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559a32bc1eb0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559a32bc1e90 <col:131> '_Bool' lvalue Var 0x559a32bb9f98 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x559a32bc2168 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559a32bc2150 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559a32bc1f20 <col:148> '_Bool' lvalue Var 0x559a32bb9f98 'x$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x559a32bc2130 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559a32bc2100 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559a32bc2000 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559a32bc1fb8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559a32bc1fa0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559a32bc1f40 <col:166> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559a32bc1fe8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559a32bc1fd0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559a32bc1f60 <col:184> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x559a32bc20d0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559a32bc2050 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559a32bc2020 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559a32bc20e8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559a32bc20a8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559a32bc2078 <col:219> 'int' 0
|   |-BinaryOperator 0x559a32bc22f0 <line:772:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559a32bc2298 <col:3> 'int' lvalue Var 0x559a32bb9948 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x559a32bc22d8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559a32bc22b8 <col:25> 'int' lvalue Var 0x559a32bb9b58 'x' 'int'
|   |-BinaryOperator 0x559a32bc2420 <line:773:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x559a32bc2310 <col:3> 'int' lvalue Var 0x559a32bb9b58 'x' 'int'
|   | `-ConditionalOperator 0x559a32bc23f0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x559a32bc23a8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559a32bc2390 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559a32bc2330 <col:7> '_Bool' lvalue Var 0x559a32bb9bf0 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x559a32bc23c0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559a32bc2350 <col:25> 'int' lvalue Var 0x559a32bb9c70 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x559a32bc23d8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x559a32bc2370 <col:37> 'int' lvalue Var 0x559a32bb9b58 'x' 'int'
|   |-BinaryOperator 0x559a32bc24b8 <line:774:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bc2440 <col:3> '_Bool' lvalue Var 0x559a32bb9bf0 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x559a32bc2490 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559a32bc2460 <col:28> 'int' 0
|   |-CallExpr 0x559a32bc2510 <line:775:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559a32bc24f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559a32bc24d8 <col:3> 'void ()' Function 0x559a32b60570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559a32bc2568 <line:776:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559a32bc2550 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559a32bc2530 <col:3> 'void ()' Function 0x559a32b604b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559a32bc2850 <line:777:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559a32bc2588 <col:3> 'int' lvalue Var 0x559a32bb9b58 'x' 'int'
|   | `-ConditionalOperator 0x559a32bc2820 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559a32bc2648 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559a32bc2600 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559a32bc25e8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559a32bc25a8 <col:7> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559a32bc2630 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559a32bc2618 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559a32bc25c8 <col:25> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x559a32bc2808 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559a32bc2668 <col:42> 'int' lvalue Var 0x559a32bba110 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x559a32bc27e8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559a32bc27b8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559a32bc2728 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559a32bc26e0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559a32bc26c8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559a32bc2688 <col:55> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559a32bc2710 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559a32bc26f8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559a32bc26a8 <col:73> '_Bool' lvalue Var 0x559a32bb9f98 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x559a32bc2788 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559a32bc2748 <col:90> 'int' lvalue Var 0x559a32bba208 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559a32bc27a0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559a32bc2768 <col:102> 'int' lvalue Var 0x559a32bb9b58 'x' 'int'
|   |-BinaryOperator 0x559a32bc2a58 <line:778:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bc2870 <col:3> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559a32bc2a40 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559a32bc2a10 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559a32bc2930 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559a32bc28e8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559a32bc28d0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559a32bc2890 <col:20> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559a32bc2918 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559a32bc2900 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559a32bc28b0 <col:38> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559a32bc29c8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559a32bc2980 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559a32bc2950 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559a32bc29f8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559a32bc29e0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559a32bc29a8 <col:66> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559a32bc2d40 <line:779:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bc2a78 <col:3> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559a32bc2d28 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559a32bc2cf8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559a32bc2c18 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559a32bc2b38 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559a32bc2af0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559a32bc2ad8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559a32bc2a98 <col:20> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559a32bc2b20 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559a32bc2b08 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559a32bc2ab8 <col:38> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x559a32bc2bf8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559a32bc2bb0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559a32bc2b98 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559a32bc2b58 <col:56> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559a32bc2be0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559a32bc2bc8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559a32bc2b78 <col:74> '_Bool' lvalue Var 0x559a32bb9f98 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559a32bc2cb0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559a32bc2c68 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559a32bc2c38 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559a32bc2ce0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559a32bc2cc8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559a32bc2c90 <col:102> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559a32bc2f48 <line:780:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bc2d60 <col:3> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559a32bc2f30 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559a32bc2f00 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559a32bc2e20 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559a32bc2dd8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559a32bc2dc0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559a32bc2d80 <col:20> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559a32bc2e08 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559a32bc2df0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559a32bc2da0 <col:38> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559a32bc2eb8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559a32bc2e70 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559a32bc2e40 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559a32bc2ee8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559a32bc2ed0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559a32bc2e98 <col:66> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x559a32bc3258 <line:781:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559a32bc2f68 <col:3> '_Bool' lvalue Var 0x559a32bb9f98 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559a32bc3240 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559a32bc3210 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559a32bc3130 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559a32bc3050 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559a32bc3008 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559a32bc2ff0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559a32bc2fb0 <col:20> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559a32bc3038 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559a32bc3020 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559a32bc2fd0 <col:38> '_Bool' lvalue Var 0x559a32bb9dd8 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x559a32bc3110 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559a32bc30c8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559a32bc30b0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559a32bc3070 <col:56> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559a32bc30f8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559a32bc30e0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559a32bc3090 <col:74> '_Bool' lvalue Var 0x559a32bb9f98 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559a32bc31c8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559a32bc3180 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559a32bc3150 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559a32bc31f8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559a32bc31e0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559a32bc31a8 <col:102> '_Bool' lvalue Var 0x559a32bb9f98 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x559a32bc32b0 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559a32bc3298 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559a32bc3278 <col:3> 'void ()' Function 0x559a32b60570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559a32bc3308 <line:783:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559a32bc32f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559a32bc32d0 <col:3> 'void ()' Function 0x559a32b604b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559a32bc33c0 <line:784:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559a32bc3328 <col:3> 'int' lvalue Var 0x559a32bb95e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559a32bc33a0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559a32bc3388 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559a32bc3348 <col:22> 'int' lvalue Var 0x559a32bb95e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559a32bc3368 <col:41> 'int' 1
|   |-CallExpr 0x559a32bc3418 <line:785:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559a32bc3400 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559a32bc33e0 <col:3> 'void ()' Function 0x559a32b60570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559a32bc3490 <line:786:3, col:36>
|     `-CallExpr 0x559a32bc3470 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559a32bc3458 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559a32bc3438 <col:10> 'void *(void)' Function 0x559a32b5ffc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559a32bc3630 prev 0x559a32bb9330 <line:788:1, line:790:1> line:788:6 fence 'void ()'
| `-CompoundStmt 0x559a32bc36d0 <line:789:1, line:790:1>
|-FunctionDecl 0x559a32bc3700 prev 0x559a32bb93f0 <line:791:1, line:793:1> line:791:6 isync 'void ()'
| `-CompoundStmt 0x559a32bc37a0 <line:792:1, line:793:1>
|-FunctionDecl 0x559a32bc37d0 prev 0x559a32bb94b0 <line:794:1, line:796:1> line:794:6 lwfence 'void ()'
| `-CompoundStmt 0x559a32bc3870 <line:795:1, line:796:1>
`-FunctionDecl 0x559a32bc38d8 <line:797:1, line:832:1> line:797:5 main 'int ()'
  `-CompoundStmt 0x559a32bc7c70 <line:798:1, line:832:1>
    |-DeclStmt 0x559a32bc39f0 <line:799:3, col:18>
    | `-VarDecl 0x559a32bc3988 <col:3, col:13> col:13 used t1619 'pthread_t':'unsigned long'
    |-CallExpr 0x559a32bc3bf8 <line:800:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559a32bc3be0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559a32bc3a08 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559a32ba09d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559a32bc3a48 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559a32bc3a28 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559a32bc3988 't1619' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559a32bc3c38 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559a32bc3ac0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559a32bc3a98 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559a32bc3a60 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559a32bc3c50 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559a32bc3ae0 <col:39> 'void *(void *)' Function 0x559a32bba5a8 'P0' 'void *(void *)'
    | `-ParenExpr 0x559a32bc3b60 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559a32bc3b38 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559a32bc3b00 <col:52> 'int' 0
    |-DeclStmt 0x559a32bc3ce0 <line:801:3, col:18>
    | `-VarDecl 0x559a32bc3c78 <col:3, col:13> col:13 used t1620 'pthread_t':'unsigned long'
    |-CallExpr 0x559a32bc3e88 <line:802:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559a32bc3e70 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559a32bc3cf8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559a32ba09d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559a32bc3d38 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559a32bc3d18 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559a32bc3c78 't1620' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559a32bc3ec8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559a32bc3db0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559a32bc3d88 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559a32bc3d50 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559a32bc3ee0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559a32bc3dd0 <col:39> 'void *(void *)' Function 0x559a32bbf188 'P1' 'void *(void *)'
    | `-ParenExpr 0x559a32bc3e50 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559a32bc3e28 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559a32bc3df0 <col:52> 'int' 0
    |-CallExpr 0x559a32bc3f30 <line:803:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559a32bc3f18 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559a32bc3ef8 <col:3> 'void ()' Function 0x559a32b604b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559a32bc4010 <line:804:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x559a32bc3f50 <col:3> '_Bool' lvalue Var 0x559a32bb99e0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x559a32bc3ff8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x559a32bc3fd8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x559a32bc3fc0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x559a32bc3f70 <col:21> 'int' lvalue Var 0x559a32bb95e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x559a32bc3f90 <col:41> 'int' 2
    |-CallExpr 0x559a32bc4068 <line:805:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559a32bc4050 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559a32bc4030 <col:3> 'void ()' Function 0x559a32b60570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559a32bc40e0 <line:806:3, col:36> 'void'
    | |-ImplicitCastExpr 0x559a32bc40c8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559a32bc4088 <col:3> 'void (int)' Function 0x559a32b5fe50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x559a32bc4120 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x559a32bc4108 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x559a32bc40a8 <col:21> '_Bool' lvalue Var 0x559a32bb99e0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x559a32bc4170 <line:807:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559a32bc4158 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559a32bc4138 <col:3> 'void ()' Function 0x559a32b604b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559a32bc4458 <line:808:3, col:103> 'int' '='
    | |-DeclRefExpr 0x559a32bc4190 <col:3> 'int' lvalue Var 0x559a32bb9b58 'x' 'int'
    | `-ConditionalOperator 0x559a32bc4428 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x559a32bc4250 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x559a32bc4208 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x559a32bc41f0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x559a32bc41b0 <col:7> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x559a32bc4238 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x559a32bc4220 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x559a32bc41d0 <col:25> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x559a32bc4410 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x559a32bc4270 <col:42> 'int' lvalue Var 0x559a32bba110 'x$w_buff0' 'int'
    |   `-ParenExpr 0x559a32bc43f0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x559a32bc43c0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x559a32bc4330 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x559a32bc42e8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x559a32bc42d0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x559a32bc4290 <col:55> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x559a32bc4318 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x559a32bc4300 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x559a32bc42b0 <col:73> '_Bool' lvalue Var 0x559a32bb9e50 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x559a32bc4390 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x559a32bc4350 <col:90> 'int' lvalue Var 0x559a32bba208 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x559a32bc43a8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x559a32bc4370 <col:102> 'int' lvalue Var 0x559a32bb9b58 'x' 'int'
    |-BinaryOperator 0x559a32bc4660 <line:809:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x559a32bc4478 <col:3> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x559a32bc4648 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559a32bc4618 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x559a32bc4538 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x559a32bc44f0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x559a32bc44d8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x559a32bc4498 <col:20> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x559a32bc4520 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x559a32bc4508 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x559a32bc44b8 <col:38> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559a32bc45d0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559a32bc4588 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559a32bc4558 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x559a32bc4600 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559a32bc45e8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559a32bc45b0 <col:66> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x559a32bc4948 <line:810:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x559a32bc4680 <col:3> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x559a32bc4930 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559a32bc4900 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x559a32bc4820 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x559a32bc4740 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x559a32bc46f8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x559a32bc46e0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x559a32bc46a0 <col:20> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x559a32bc4728 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x559a32bc4710 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x559a32bc46c0 <col:38> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x559a32bc4800 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x559a32bc47b8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x559a32bc47a0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x559a32bc4760 <col:56> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x559a32bc47e8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x559a32bc47d0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x559a32bc4780 <col:74> '_Bool' lvalue Var 0x559a32bb9e50 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559a32bc48b8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559a32bc4870 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559a32bc4840 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x559a32bc48e8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559a32bc48d0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559a32bc4898 <col:102> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x559a32bc4b50 <line:811:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x559a32bc4968 <col:3> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559a32bc4b38 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559a32bc4b08 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x559a32bc4a28 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x559a32bc49e0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x559a32bc49c8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x559a32bc4988 <col:20> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x559a32bc4a10 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x559a32bc49f8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x559a32bc49a8 <col:38> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559a32bc4ac0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559a32bc4a78 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559a32bc4a48 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x559a32bc4af0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559a32bc4ad8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559a32bc4aa0 <col:66> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x559a32bc4e38 <line:812:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x559a32bc4b70 <col:3> '_Bool' lvalue Var 0x559a32bb9e50 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559a32bc4e20 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559a32bc4df0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x559a32bc4d10 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x559a32bc4c30 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x559a32bc4be8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x559a32bc4bd0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x559a32bc4b90 <col:20> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x559a32bc4c18 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x559a32bc4c00 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x559a32bc4bb0 <col:38> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x559a32bc4cf0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x559a32bc4ca8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x559a32bc4c90 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x559a32bc4c50 <col:56> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x559a32bc4cd8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x559a32bc4cc0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x559a32bc4c70 <col:74> '_Bool' lvalue Var 0x559a32bb9e50 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559a32bc4da8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559a32bc4d60 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559a32bc4d30 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x559a32bc4dd8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559a32bc4dc0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559a32bc4d88 <col:102> '_Bool' lvalue Var 0x559a32bb9e50 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x559a32bc4e90 <line:813:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559a32bc4e78 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559a32bc4e58 <col:3> 'void ()' Function 0x559a32b60570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559a32bc4ee8 <line:814:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559a32bc4ed0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559a32bc4eb0 <col:3> 'void ()' Function 0x559a32b604b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559a32bc4f80 <line:815:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x559a32bc4f08 <col:3> '_Bool' lvalue Var 0x559a32bba418 'weak$$choice0' '_Bool'
    | `-CallExpr 0x559a32bc4f60 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x559a32bc4f48 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x559a32bc4f28 <col:19> '_Bool (void)' Function 0x559a32b5fc80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x559a32bc5028 <line:816:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x559a32bc4fa0 <col:3> '_Bool' lvalue Var 0x559a32bba490 'weak$$choice2' '_Bool'
    | `-CallExpr 0x559a32bc5008 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x559a32bc4ff0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x559a32bc4fd0 <col:19> '_Bool (void)' Function 0x559a32b5fc80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x559a32bc50a0 <line:817:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x559a32bc5048 <col:3> '_Bool' lvalue Var 0x559a32bb9bf0 'x$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x559a32bc5088 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x559a32bc5068 <col:21> '_Bool' lvalue Var 0x559a32bba490 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x559a32bc5118 <line:818:3, col:15> 'int' '='
    | |-DeclRefExpr 0x559a32bc50c0 <col:3> 'int' lvalue Var 0x559a32bb9c70 'x$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x559a32bc5100 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x559a32bc50e0 <col:15> 'int' lvalue Var 0x559a32bb9b58 'x' 'int'
    |-BinaryOperator 0x559a32bc5550 <line:819:3, col:162> 'int' '='
    | |-DeclRefExpr 0x559a32bc5138 <col:3> 'int' lvalue Var 0x559a32bb9b58 'x' 'int'
    | `-ConditionalOperator 0x559a32bc5520 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x559a32bc5348 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x559a32bc5268 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x559a32bc5190 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x559a32bc5178 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x559a32bc5158 <col:8> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x559a32bc5248 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x559a32bc51e0 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x559a32bc51c8 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x559a32bc51a8 <col:27> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x559a32bc5230 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x559a32bc5218 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x559a32bc51f8 <col:46> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x559a32bc5328 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x559a32bc52c0 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x559a32bc52a8 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x559a32bc5288 <col:65> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x559a32bc5310 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x559a32bc52f8 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x559a32bc52d8 <col:84> '_Bool' lvalue Var 0x559a32bb9e50 'x$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x559a32bc5508 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x559a32bc5368 <col:101> 'int' lvalue Var 0x559a32bb9b58 'x' 'int'
    |   `-ParenExpr 0x559a32bc54e8 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x559a32bc54b8 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x559a32bc5428 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x559a32bc53e0 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x559a32bc53c8 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x559a32bc5388 <col:106> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x559a32bc5410 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x559a32bc53f8 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x559a32bc53a8 <col:124> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x559a32bc5488 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x559a32bc5448 <col:141> 'int' lvalue Var 0x559a32bba110 'x$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x559a32bc54a0 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x559a32bc5468 <col:153> 'int' lvalue Var 0x559a32bba208 'x$w_buff1' 'int'
    |-BinaryOperator 0x559a32bc5a60 <line:820:3, col:208> 'int' '='
    | |-DeclRefExpr 0x559a32bc5570 <col:3> 'int' lvalue Var 0x559a32bba110 'x$w_buff0' 'int'
    | `-ConditionalOperator 0x559a32bc5a30 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x559a32bc5a00 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x559a32bc59e8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x559a32bc5590 <col:15> '_Bool' lvalue Var 0x559a32bba490 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x559a32bc5a18 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x559a32bc55b0 <col:31> 'int' lvalue Var 0x559a32bba110 'x$w_buff0' 'int'
    |   `-ParenExpr 0x559a32bc59c8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x559a32bc5998 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x559a32bc57c0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x559a32bc56e0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x559a32bc5608 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x559a32bc55f0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x559a32bc55d0 <col:45> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x559a32bc56c0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x559a32bc5658 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x559a32bc5640 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x559a32bc5620 <col:64> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x559a32bc56a8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x559a32bc5690 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x559a32bc5670 <col:83> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x559a32bc57a0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x559a32bc5738 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x559a32bc5720 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x559a32bc5700 <col:102> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x559a32bc5788 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x559a32bc5770 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x559a32bc5750 <col:121> '_Bool' lvalue Var 0x559a32bb9e50 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x559a32bc5980 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x559a32bc57e0 <col:138> 'int' lvalue Var 0x559a32bba110 'x$w_buff0' 'int'
    |       `-ParenExpr 0x559a32bc5960 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x559a32bc5930 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x559a32bc58a0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x559a32bc5858 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x559a32bc5840 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x559a32bc5800 <col:151> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x559a32bc5888 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x559a32bc5870 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x559a32bc5820 <col:169> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x559a32bc5900 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x559a32bc58c0 <col:186> 'int' lvalue Var 0x559a32bba110 'x$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x559a32bc5918 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x559a32bc58e0 <col:198> 'int' lvalue Var 0x559a32bba110 'x$w_buff0' 'int'
    |-BinaryOperator 0x559a32bc5f70 <line:821:3, col:208> 'int' '='
    | |-DeclRefExpr 0x559a32bc5a80 <col:3> 'int' lvalue Var 0x559a32bba208 'x$w_buff1' 'int'
    | `-ConditionalOperator 0x559a32bc5f40 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x559a32bc5f10 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x559a32bc5ef8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x559a32bc5aa0 <col:15> '_Bool' lvalue Var 0x559a32bba490 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x559a32bc5f28 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x559a32bc5ac0 <col:31> 'int' lvalue Var 0x559a32bba208 'x$w_buff1' 'int'
    |   `-ParenExpr 0x559a32bc5ed8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x559a32bc5ea8 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x559a32bc5cd0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x559a32bc5bf0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x559a32bc5b18 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x559a32bc5b00 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x559a32bc5ae0 <col:45> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x559a32bc5bd0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x559a32bc5b68 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x559a32bc5b50 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x559a32bc5b30 <col:64> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x559a32bc5bb8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x559a32bc5ba0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x559a32bc5b80 <col:83> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x559a32bc5cb0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x559a32bc5c48 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x559a32bc5c30 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x559a32bc5c10 <col:102> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x559a32bc5c98 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x559a32bc5c80 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x559a32bc5c60 <col:121> '_Bool' lvalue Var 0x559a32bb9e50 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x559a32bc5e90 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x559a32bc5cf0 <col:138> 'int' lvalue Var 0x559a32bba208 'x$w_buff1' 'int'
    |       `-ParenExpr 0x559a32bc5e70 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x559a32bc5e40 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x559a32bc5db0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x559a32bc5d68 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x559a32bc5d50 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x559a32bc5d10 <col:151> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x559a32bc5d98 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x559a32bc5d80 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x559a32bc5d30 <col:169> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x559a32bc5e10 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x559a32bc5dd0 <col:186> 'int' lvalue Var 0x559a32bba208 'x$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x559a32bc5e28 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x559a32bc5df0 <col:198> 'int' lvalue Var 0x559a32bba208 'x$w_buff1' 'int'
    |-BinaryOperator 0x559a32bc6528 <line:822:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x559a32bc5f90 <col:3> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x559a32bc6510 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559a32bc64e0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x559a32bc6498 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x559a32bc6480 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x559a32bc5fb0 <col:20> '_Bool' lvalue Var 0x559a32bba490 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x559a32bc64c8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x559a32bc64b0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x559a32bc5fe0 <col:36> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x559a32bc6460 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x559a32bc6430 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x559a32bc61f0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x559a32bc6110 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x559a32bc6038 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x559a32bc6020 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x559a32bc6000 <col:55> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x559a32bc60f0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x559a32bc6088 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x559a32bc6070 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x559a32bc6050 <col:74> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x559a32bc60d8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x559a32bc60c0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x559a32bc60a0 <col:93> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x559a32bc61d0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x559a32bc6168 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x559a32bc6150 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x559a32bc6130 <col:112> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x559a32bc61b8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x559a32bc61a0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x559a32bc6180 <col:131> '_Bool' lvalue Var 0x559a32bb9e50 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x559a32bc6418 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x559a32bc6400 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x559a32bc6210 <col:148> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x559a32bc63e0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x559a32bc63b0 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x559a32bc62d0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x559a32bc6288 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x559a32bc6270 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x559a32bc6230 <col:166> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x559a32bc62b8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x559a32bc62a0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x559a32bc6250 <col:184> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x559a32bc6368 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x559a32bc6320 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x559a32bc62f0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x559a32bc6398 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x559a32bc6380 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x559a32bc6348 <col:212> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x559a32bc6af0 <line:823:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x559a32bc6548 <col:3> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x559a32bc6ad8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559a32bc6aa8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x559a32bc6a60 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x559a32bc6a48 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x559a32bc6568 <col:20> '_Bool' lvalue Var 0x559a32bba490 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x559a32bc6a90 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x559a32bc6a78 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x559a32bc6588 <col:36> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x559a32bc6a28 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x559a32bc69f8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x559a32bc6798 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x559a32bc66b8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x559a32bc65e0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x559a32bc65c8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x559a32bc65a8 <col:55> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x559a32bc6698 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x559a32bc6630 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x559a32bc6618 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x559a32bc65f8 <col:74> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x559a32bc6680 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x559a32bc6668 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x559a32bc6648 <col:93> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x559a32bc6778 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x559a32bc6710 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x559a32bc66f8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x559a32bc66d8 <col:112> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x559a32bc6760 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x559a32bc6748 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x559a32bc6728 <col:131> '_Bool' lvalue Var 0x559a32bb9e50 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x559a32bc69e0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x559a32bc69c8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x559a32bc67b8 <col:148> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x559a32bc69a8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x559a32bc6978 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x559a32bc6878 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x559a32bc6830 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x559a32bc6818 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x559a32bc67d8 <col:166> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x559a32bc6860 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x559a32bc6848 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x559a32bc67f8 <col:184> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x559a32bc6948 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x559a32bc68c8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x559a32bc6898 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x559a32bc6960 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x559a32bc6920 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x559a32bc68f0 <col:219> 'int' 0
    |-BinaryOperator 0x559a32bc70b8 <line:824:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x559a32bc6b10 <col:3> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559a32bc70a0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559a32bc7070 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x559a32bc7028 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x559a32bc7010 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x559a32bc6b30 <col:20> '_Bool' lvalue Var 0x559a32bba490 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x559a32bc7058 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x559a32bc7040 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x559a32bc6b50 <col:36> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x559a32bc6ff0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x559a32bc6fa0 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x559a32bc6d60 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x559a32bc6c80 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x559a32bc6ba8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x559a32bc6b90 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x559a32bc6b70 <col:55> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x559a32bc6c60 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x559a32bc6bf8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x559a32bc6be0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x559a32bc6bc0 <col:74> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x559a32bc6c48 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x559a32bc6c30 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x559a32bc6c10 <col:93> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x559a32bc6d40 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x559a32bc6cd8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x559a32bc6cc0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x559a32bc6ca0 <col:112> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x559a32bc6d28 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x559a32bc6d10 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x559a32bc6cf0 <col:131> '_Bool' lvalue Var 0x559a32bb9e50 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x559a32bc6f88 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x559a32bc6f70 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x559a32bc6d80 <col:148> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x559a32bc6f50 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x559a32bc6f20 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x559a32bc6e40 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x559a32bc6df8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x559a32bc6de0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x559a32bc6da0 <col:166> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x559a32bc6e28 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x559a32bc6e10 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x559a32bc6dc0 <col:184> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x559a32bc6ed8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x559a32bc6e90 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x559a32bc6e60 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x559a32bc6f08 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x559a32bc6ef0 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x559a32bc6eb8 <col:212> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x559a32bc7680 <line:825:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x559a32bc70d8 <col:3> '_Bool' lvalue Var 0x559a32bb9e50 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559a32bc7668 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559a32bc7638 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x559a32bc75f0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x559a32bc75d8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x559a32bc70f8 <col:20> '_Bool' lvalue Var 0x559a32bba490 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x559a32bc7620 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x559a32bc7608 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x559a32bc7118 <col:36> '_Bool' lvalue Var 0x559a32bb9e50 'x$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x559a32bc75b8 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x559a32bc7588 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x559a32bc7328 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x559a32bc7248 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x559a32bc7170 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x559a32bc7158 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x559a32bc7138 <col:55> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x559a32bc7228 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x559a32bc71c0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x559a32bc71a8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x559a32bc7188 <col:74> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x559a32bc7210 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x559a32bc71f8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x559a32bc71d8 <col:93> '_Bool' lvalue Var 0x559a32bba280 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x559a32bc7308 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x559a32bc72a0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x559a32bc7288 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x559a32bc7268 <col:112> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x559a32bc72f0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x559a32bc72d8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x559a32bc72b8 <col:131> '_Bool' lvalue Var 0x559a32bb9e50 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x559a32bc7570 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x559a32bc7558 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x559a32bc7348 <col:148> '_Bool' lvalue Var 0x559a32bb9e50 'x$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x559a32bc7538 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x559a32bc7508 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x559a32bc7408 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x559a32bc73c0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x559a32bc73a8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x559a32bc7368 <col:166> '_Bool' lvalue Var 0x559a32bba188 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x559a32bc73f0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x559a32bc73d8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x559a32bc7388 <col:184> '_Bool' lvalue Var 0x559a32bb9ce8 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x559a32bc74d8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x559a32bc7458 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x559a32bc7428 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x559a32bc74f0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x559a32bc74b0 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x559a32bc7480 <col:219> 'int' 0
    |-BinaryOperator 0x559a32bc7950 <line:826:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x559a32bc76a0 <col:3> '_Bool' lvalue Var 0x559a32bb9a58 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x559a32bc7938 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x559a32bc7920 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x559a32bc7900 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x559a32bc78e0 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x559a32bc7848 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x559a32bc77b0 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x559a32bc7718 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x559a32bc7700 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x559a32bc76c0 <col:23> 'int' lvalue Var 0x559a32bb9b58 'x' 'int'
    |         | | | `-IntegerLiteral 0x559a32bc76e0 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x559a32bc7790 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x559a32bc7778 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x559a32bc7738 <col:33> 'int' lvalue Var 0x559a32bb9708 '__unbuffered_p0_EAX' 'int'
    |         | |   `-IntegerLiteral 0x559a32bc7758 <col:56> 'int' 1
    |         | `-BinaryOperator 0x559a32bc7828 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x559a32bc7810 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x559a32bc77d0 <col:61> 'int' lvalue Var 0x559a32bb9828 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x559a32bc77f0 <col:84> 'int' 1
    |         `-BinaryOperator 0x559a32bc78c0 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x559a32bc78a8 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x559a32bc7868 <col:89> 'int' lvalue Var 0x559a32bb9948 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x559a32bc7888 <col:112> 'int' 0
    |-BinaryOperator 0x559a32bc7a80 <line:827:3, col:37> 'int' '='
    | |-DeclRefExpr 0x559a32bc7970 <col:3> 'int' lvalue Var 0x559a32bb9b58 'x' 'int'
    | `-ConditionalOperator 0x559a32bc7a50 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x559a32bc7a08 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x559a32bc79f0 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x559a32bc7990 <col:7> '_Bool' lvalue Var 0x559a32bb9bf0 'x$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x559a32bc7a20 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x559a32bc79b0 <col:25> 'int' lvalue Var 0x559a32bb9c70 'x$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x559a32bc7a38 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x559a32bc79d0 <col:37> 'int' lvalue Var 0x559a32bb9b58 'x' 'int'
    |-BinaryOperator 0x559a32bc7b18 <line:828:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x559a32bc7aa0 <col:3> '_Bool' lvalue Var 0x559a32bb9bf0 'x$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x559a32bc7af0 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x559a32bc7ac0 <col:28> 'int' 0
    |-CallExpr 0x559a32bc7b70 <line:829:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559a32bc7b58 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559a32bc7b38 <col:3> 'void ()' Function 0x559a32b60570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559a32bc7be8 <line:830:3, col:36> 'void'
    | |-ImplicitCastExpr 0x559a32bc7bd0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559a32bc7b90 <col:3> 'void (int)' Function 0x559a32b60238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x559a32bc7c28 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x559a32bc7c10 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x559a32bc7bb0 <col:21> '_Bool' lvalue Var 0x559a32bb9a58 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x559a32bc7c60 <line:831:3, col:10>
      `-IntegerLiteral 0x559a32bc7c40 <col:10> 'int' 0
