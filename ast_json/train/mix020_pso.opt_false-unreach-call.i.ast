TranslationUnitDecl 0x562715584f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x562715585848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x562715585520 '__int128'
|-TypedefDecl 0x5627155858b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x562715585540 'unsigned __int128'
|-TypedefDecl 0x562715585bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x562715585990 'struct __NSConstantString_tag'
|   `-Record 0x562715585910 '__NSConstantString_tag'
|-TypedefDecl 0x562715585c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x562715585c20 'char *'
|   `-BuiltinType 0x562715585020 'char'
|-TypedefDecl 0x5627155c4b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x562715585f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x562715585d40 'struct __va_list_tag'
|     `-Record 0x562715585cc0 '__va_list_tag'
|-FunctionDecl 0x5627155c4ca0 <pthread-wmm/mix020_pso.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5627155c4bd0 <col:31> col:34 'int'
|-FunctionDecl 0x5627155c4e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5627155c4f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5627155c50d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5627155c5048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5627155c5308 <col:40, col:99>
|   |-IfStmt 0x5627155c52d8 <col:42, col:88>
|   | |-UnaryOperator 0x5627155c51b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5627155c51a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5627155c5180 <col:47> 'int' lvalue ParmVar 0x5627155c5048 'expression' 'int'
|   | `-CompoundStmt 0x5627155c52c0 <col:59, col:88>
|   |   `-LabelStmt 0x5627155c52a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5627155c5238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5627155c5220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5627155c51d0 <col:68> 'void () __attribute__((noreturn))' Function 0x5627155c4f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5627155c52f0 <col:89>
|   `-ReturnStmt 0x5627155c52f8 <col:91>
|-FunctionDecl 0x5627155c5350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5627155c5410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5627155c5790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5627155c54c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5627155c5548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5627155c55c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5627155c5648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5627155c5850 <line:10:22>
|-FunctionDecl 0x5627155eb8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5627155c58c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5627155c5940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5627155c59c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5627155c5a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5627155eb960 <line:13:22>
|-FunctionDecl 0x5627155ebc10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5627155eb9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5627155eba50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5627155ebad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5627155ebcc8 <line:15:22>
|-TypedefDecl 0x5627155ebd38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5627155850e0 'unsigned char'
|-TypedefDecl 0x5627155ebda8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x562715585100 'unsigned short'
|-TypedefDecl 0x5627155ebe18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x562715585120 'unsigned int'
|-TypedefDecl 0x5627155ebe88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x562715585140 'unsigned long'
|-TypedefDecl 0x5627155ebef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x562715585040 'signed char'
|-TypedefDecl 0x5627155ebf68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5627155850e0 'unsigned char'
|-TypedefDecl 0x5627155ebfd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x562715585060 'short'
|-TypedefDecl 0x5627155ec048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x562715585100 'unsigned short'
|-TypedefDecl 0x5627155ec0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x562715585080 'int'
|-TypedefDecl 0x5627155ec128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x562715585120 'unsigned int'
|-TypedefDecl 0x5627155ec198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5627155850a0 'long'
|-TypedefDecl 0x5627155ec208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x562715585140 'unsigned long'
|-TypedefDecl 0x5627155ec278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5627155850a0 'long'
|-TypedefDecl 0x5627155ec2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x562715585140 'unsigned long'
|-TypedefDecl 0x5627155ec358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x562715585140 'unsigned long'
|-TypedefDecl 0x5627155ec3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x562715585120 'unsigned int'
|-TypedefDecl 0x5627155ec438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x562715585120 'unsigned int'
|-TypedefDecl 0x5627155ec4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x562715585140 'unsigned long'
|-TypedefDecl 0x5627155ec518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x562715585140 'unsigned long'
|-TypedefDecl 0x5627155ec588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x562715585120 'unsigned int'
|-TypedefDecl 0x5627155ec5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x562715585140 'unsigned long'
|-TypedefDecl 0x5627155ec668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5627155850a0 'long'
|-TypedefDecl 0x5627155ec6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5627155850a0 'long'
|-TypedefDecl 0x5627155ec748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x562715585080 'int'
|-RecordDecl 0x5627155ec7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5627155ec918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5627155ec9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5627155ec970 'struct __fsid_t' sugar
|   `-RecordType 0x5627155ec820 '__fsid_t'
|     `-Record 0x5627155ec7a0 ''
|-TypedefDecl 0x5627155eca58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5627155850a0 'long'
|-TypedefDecl 0x5627155ecac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x562715585140 'unsigned long'
|-TypedefDecl 0x5627155ecb38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x562715585140 'unsigned long'
|-TypedefDecl 0x5627155ecba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x562715585120 'unsigned int'
|-TypedefDecl 0x5627155ecc18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5627155850a0 'long'
|-TypedefDecl 0x5627155ecc88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x562715585120 'unsigned int'
|-TypedefDecl 0x5627155eccf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5627155850a0 'long'
|-TypedefDecl 0x5627155ecd68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x562715585080 'int'
|-TypedefDecl 0x5627155ecdd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x562715585080 'int'
|-TypedefDecl 0x5627155ece48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x562715585080 'int'
|-TypedefDecl 0x5627155eceb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5627155857a0 'void *'
|   `-BuiltinType 0x562715584fe0 'void'
|-TypedefDecl 0x5627155ecf28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5627155850a0 'long'
|-TypedefDecl 0x5627155ecf98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5627155850a0 'long'
|-TypedefDecl 0x5627155ed008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5627155850a0 'long'
|-TypedefDecl 0x5627155ed078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x562715585140 'unsigned long'
|-TypedefDecl 0x5627155ed0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x562715585140 'unsigned long'
|-TypedefDecl 0x5627155ed158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x562715585140 'unsigned long'
|-TypedefDecl 0x5627155ed1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x562715585140 'unsigned long'
|-TypedefDecl 0x5627155ed238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5627155850a0 'long'
|-TypedefDecl 0x5627155ed2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5627155850a0 'long'
|-TypedefDecl 0x5627155ed318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5627155850a0 'long'
|-TypedefDecl 0x5627155ed388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x562715585140 'unsigned long'
|-TypedefDecl 0x5627155ed418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5627155ed3e0 '__off64_t' sugar
|   |-Typedef 0x5627155ec6d8 '__off64_t'
|   `-BuiltinType 0x5627155850a0 'long'
|-TypedefDecl 0x5627155ed510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5627155ed4d0 '__quad_t *'
|   `-TypedefType 0x5627155ed470 '__quad_t' sugar
|     |-Typedef 0x5627155ec278 '__quad_t'
|     `-BuiltinType 0x5627155850a0 'long'
|-TypedefDecl 0x5627155ed580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x562715585c20 'char *'
|   `-BuiltinType 0x562715585020 'char'
|-TypedefDecl 0x5627155ed5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5627155850a0 'long'
|-TypedefDecl 0x5627155ed660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x562715585120 'unsigned int'
|-FunctionDecl 0x5627155ed7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5627155ed6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5627155edae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5627155edad8 <line:72:3, col:34>
|     `-CallExpr 0x5627155eda98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5627155eda80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5627155eda10 <col:10> '<builtin fn type>' Function 0x5627155ed880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5627155edac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5627155eda30 <col:29> 'unsigned int' lvalue ParmVar 0x5627155ed6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5627155ed880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5627155ed920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5627155ed990 <col:10> Implicit
| `-ConstAttr 0x5627155ed9e8 <col:10> Implicit
|-FunctionDecl 0x5627155edc40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5627155edb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5627155edf58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5627155edf48 <line:77:3, col:34>
|     `-CallExpr 0x5627155edf08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5627155edef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5627155ede78 <col:10> '<builtin fn type>' Function 0x5627155edce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5627155edf30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5627155ede98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5627155edb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5627155edce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5627155edd88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5627155eddf8 <col:10> Implicit
| `-ConstAttr 0x5627155ede50 <col:10> Implicit
|-TypedefDecl 0x5627155edf88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x562715585140 'unsigned long'
|-TypedefDecl 0x5627155ee018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5627155edfe0 '__time_t' sugar
|   |-Typedef 0x5627155ecc18 '__time_t'
|   `-BuiltinType 0x5627155850a0 'long'
|-RecordDecl 0x5627155ee070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5627155ee128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5627155ee1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5627155ee248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5627155ee210 '__pid_t' sugar
|   |-Typedef 0x5627155ec748 '__pid_t'
|   `-BuiltinType 0x562715585080 'int'
|-RecordDecl 0x5627155ee2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5627155ee360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5627155ee3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5627155ee470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5627155ee4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x562715585140 'unsigned long'
|-RecordDecl 0x5627155ee530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5627155ee7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5627155f08b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5627155ee810 'struct cpu_set_t' sugar
|   `-RecordType 0x5627155ee5b0 'cpu_set_t'
|     `-Record 0x5627155ee530 ''
|-FunctionDecl 0x5627155f0b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5627155f0958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5627155f0a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5627155f0c38 <line:107:19>
|-FunctionDecl 0x5627155f0e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5627155f0ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5627155f0eb8 <col:69>
|-FunctionDecl 0x5627155f1030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5627155f0f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5627155f10d8 <col:64>
|-FunctionDecl 0x5627155f1398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5627155f1140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5627155f1278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5627155f1448 <line:113:22>
|-FunctionDecl 0x5627155f16c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5627155f14b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5627155f15a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5627155f1778 <col:88>
|-FunctionDecl 0x5627155f1a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5627155f17e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5627155f18c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5627155f1950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5627155f1b50 <col:62>
|-FunctionDecl 0x5627155f1cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5627155f1bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5627155f1d70 <col:63>
|-FunctionDecl 0x5627155f1e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5627155f1f38 <col:47>
|-FunctionDecl 0x5627155f2040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5627155f1fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5627155f20e8 <col:69>
|-FunctionDecl 0x5627155f21f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5627155f2158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5627155f2298 <col:69>
|-FunctionDecl 0x5627155f2558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5627155f2300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5627155f2438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5627155f2608 <col:88>
|-TypedefDecl 0x5627155f2698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5627155f2660 '__clock_t' sugar
|   |-Typedef 0x5627155eca58 '__clock_t'
|   `-BuiltinType 0x5627155850a0 'long'
|-TypedefDecl 0x5627155f2728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5627155f26f0 '__clockid_t' sugar
|   |-Typedef 0x5627155ece48 '__clockid_t'
|   `-BuiltinType 0x562715585080 'int'
|-TypedefDecl 0x5627155f27b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5627155f2780 '__timer_t' sugar
|   |-Typedef 0x5627155eceb8 '__timer_t'
|   `-PointerType 0x5627155857a0 'void *'
|     `-BuiltinType 0x562715584fe0 'void'
|-RecordDecl 0x5627155f2810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5627155f28e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5627155f2950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5627155f29b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5627155f2a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5627155f2a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5627155f2af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5627155f2b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5627155f2bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5627155f2c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5627155f2c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5627155f2cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5627155f2d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5627155f2e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5627155f2e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5627155f2f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5627155f3100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5627155f31a0 <col:45>
|-FunctionDecl 0x5627155f3380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5627155f3270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5627155f3428 <col:54>
|-FunctionDecl 0x5627155f3628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5627155f3490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5627155f3508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5627155f36d8 <line:157:22>
| `-ConstAttr 0x5627155f3730 <col:63>
|-FunctionDecl 0x5627155f4560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5627155f3828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5627155f4608 <col:56>
|-FunctionDecl 0x5627155f49b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5627155f4678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5627155f46f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5627155f4770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5627155f4868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5627155f4a70 <col:54>
|-RecordDecl 0x5627155f4ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5627155f4b78 parent 0x562715584f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5627155f4dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5627155f4e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5627155f4ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5627155f4f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5627155f5038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5627155f5158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5627155f5100 'struct __locale_struct *'
|   `-ElaboratedType 0x5627155f5090 'struct __locale_struct' sugar
|     `-RecordType 0x5627155f4b50 'struct __locale_struct'
|       `-Record 0x5627155f4ac8 '__locale_struct'
|-TypedefDecl 0x5627155f5208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5627155f51d0 '__locale_t' sugar
|   |-Typedef 0x5627155f5158 '__locale_t'
|   `-PointerType 0x5627155f5100 'struct __locale_struct *'
|     `-ElaboratedType 0x5627155f5090 'struct __locale_struct' sugar
|       `-RecordType 0x5627155f4b50 'struct __locale_struct'
|         `-Record 0x5627155f4ac8 '__locale_struct'
|-FunctionDecl 0x5627155f5610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5627155f5278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5627155f52f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5627155f5370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5627155f5400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5627155f5478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5627155f56d8 <col:40>
|-FunctionDecl 0x5627155f58c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5627155f57a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5627155f5970 <col:66>
|-FunctionDecl 0x5627155f5a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5627155f59d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5627155f5b28 <col:69>
|-FunctionDecl 0x5627155f5d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5627155f5b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5627155f5c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5627155f5e08 <col:52>
|-FunctionDecl 0x5627155f5fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5627155f5e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5627155f5f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5627155f6060 <col:55>
|-FunctionDecl 0x5627155f61f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5627155f60e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5627155f62a0 <col:62>
|-FunctionDecl 0x5627155f6418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5627155f6308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5627155f64c0 <col:60>
|-FunctionDecl 0x5627155f6718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5627155f6578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5627155f65f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5627155f67c8 <col:44>
|-FunctionDecl 0x5627155f69d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5627155f6830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5627155f68b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5627155f6a88 <col:49>
|-VarDecl 0x5627155f6b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5627155f6c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5627155f6c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5627155f6d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5627155f6e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5627155f6f20 <col:42>
|-VarDecl 0x5627155f6f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5627155f7010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5627155f7198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5627155f7088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5627155f7240 <col:57>
|-FunctionDecl 0x5627155f7350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5627155f72c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5627155f73f8 <col:56>
|-FunctionDecl 0x5627155f8540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5627155f7478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5627155f85e8 <col:59>
|-FunctionDecl 0x5627155f86f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5627155f8658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5627155f8798 <col:48>
| `-ConstAttr 0x5627155f87f0 <col:89>
|-FunctionDecl 0x5627155f8a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5627155f88a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5627155f8938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5627155f8cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5627155f8b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5627155f8bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5627155f8d68 <col:88>
|-FunctionDecl 0x5627155f8f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5627155f8dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5627155f8e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5627155f8fb0 <col:88>
|-FunctionDecl 0x5627155f91c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5627155f9018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5627155f90a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5627155f9278 <line:208:22>
|-FunctionDecl 0x5627155f95e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5627155f92e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5627155f9360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5627155f93f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5627155f9480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5627155f98e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5627155f96e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5627155f97c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5627155f9998 <col:85>
|-FunctionDecl 0x5627155f9d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5627155f9a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5627155f9b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5627155f9c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5627155f9e40 <col:52>
|-FunctionDecl 0x5627155f9fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5627155f9ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5627155fa060 <col:61>
|-FunctionDecl 0x5627155fa560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5627155fa0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5627155fa148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5627155fa278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5627155fa368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5627155fa620 <col:62>
|-FunctionDecl 0x5627155fa838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5627155fa688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5627155fa718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5627155fa8e8 <line:221:22>
|-FunctionDecl 0x5627155fa9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5627155fa950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5627155faa90 <col:65>
|-TypedefDecl 0x5627155fab00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x562715585140 'unsigned long'
|-RecordDecl 0x5627155fab58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5627155faca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5627155fad08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5627155fadb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5627155fad60 'union pthread_attr_t' sugar
|   `-RecordType 0x5627155fabe0 'union pthread_attr_t'
|     `-Record 0x5627155fab58 'pthread_attr_t'
|-RecordDecl 0x5627155fae10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5627155faf88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5627155fb000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5627155fb0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5627155fb050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5627155fae90 'struct __pthread_internal_list'
|     `-Record 0x5627155fae10 '__pthread_internal_list'
|-RecordDecl 0x5627155fb120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5627155fb1c8 parent 0x562715584f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5627155fb2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5627155fb308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5627155fb370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5627155fb3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5627155fb440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5627155fb4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5627155ff580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5627155ff630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5627155ff720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5627155ff788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5627155ff910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5627155ff8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5627155fb1a0 'pthread_mutex_t'
|     `-Record 0x5627155fb120 ''
|-RecordDecl 0x5627155ff980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5627155ffac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5627155ffb28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5627155ffbe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5627155ffb80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5627155ffa00 'pthread_mutexattr_t'
|     `-Record 0x5627155ff980 ''
|-RecordDecl 0x5627155ffc50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5627155ffcf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5627155ffdc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5627155ffe28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5627155ffe90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5627155ffef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5627155fff60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5627155fffc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x562715600030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x562715600098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x562715600150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix020_pso.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix020_pso.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x562715600240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5627156002a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5627156003e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x562715600380 'union pthread_cond_t' sugar
|   `-RecordType 0x5627155ffcd0 'pthread_cond_t'
|     `-Record 0x5627155ffc50 ''
|-RecordDecl 0x562715600450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x562715600590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5627156005f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5627156006b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x562715600650 'union pthread_condattr_t' sugar
|   `-RecordType 0x5627156004d0 'pthread_condattr_t'
|     `-Record 0x562715600450 ''
|-TypedefDecl 0x562715600738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x562715585120 'unsigned int'
|-TypedefDecl 0x5627156007a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x562715585080 'int'
|-RecordDecl 0x562715600800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5627156008a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x562715600970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5627156009d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x562715600a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x562715600aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x562715600b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x562715600b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x562715600be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x562715600c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x562715600cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x562715600d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x562715600d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x562715600e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix020_pso.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix020_pso.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x562715600ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x562715600f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562715601090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x562715601030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x562715600880 'pthread_rwlock_t'
|     `-Record 0x562715600800 ''
|-RecordDecl 0x562715601100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x562715601240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5627156012a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562715601360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x562715601300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x562715601180 'pthread_rwlockattr_t'
|     `-Record 0x562715601100 ''
|-TypedefDecl 0x5627156013e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x562715585084 'volatile int' volatile
|   `-BuiltinType 0x562715585080 'int'
|-RecordDecl 0x562715601440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5627156035b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x562715603618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5627156036d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x562715603670 'union pthread_barrier_t' sugar
|   `-RecordType 0x5627156014c0 'pthread_barrier_t'
|     `-Record 0x562715601440 ''
|-RecordDecl 0x562715603740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x562715603840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5627156038a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562715603960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x562715603900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5627156037c0 'pthread_barrierattr_t'
|     `-Record 0x562715603740 ''
|-TypedefDecl 0x562715603a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x562715603a10 'long [8]' 8 
|   `-BuiltinType 0x5627155850a0 'long'
|-EnumDecl 0x562715603ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x562715603b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x562715603be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x562715603c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x562715603d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x562715603d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x562715603da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x562715603df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x562715603e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x562715603e68 <col:26> 'int'
| |   `-DeclRefExpr 0x562715603e48 <col:26> 'int' EnumConstant 0x562715603d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x562715603f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x562715603ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x562715603ed0 <col:29> 'int' EnumConstant 0x562715603d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x562715603f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x562715603f78 <col:30> 'int'
| |   `-DeclRefExpr 0x562715603f58 <col:30> 'int' EnumConstant 0x562715603da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x562715604018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x562715604000 <col:27> 'int'
|     `-DeclRefExpr 0x562715603fe0 <col:27> 'int' EnumConstant 0x562715603e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x562715604068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x562715604138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5627156041c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5627156041a8 <col:30> 'int'
| |   `-DeclRefExpr 0x562715604188 <col:30> 'int' EnumConstant 0x562715604138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x562715604210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x562715604298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x562715604280 <col:29> 'int'
|     `-DeclRefExpr 0x562715604260 <col:29> 'int' EnumConstant 0x562715604210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5627156042e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5627156043b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x562715604408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x562715604458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5627156044a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5627156045c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x562715604610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x562715604660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5627156046e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5627156046d0 <col:31> 'int'
|     `-DeclRefExpr 0x5627156046b0 <col:31> 'int' EnumConstant 0x5627156045c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x562715604738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x562715604808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x562715604858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5627156048a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x562715604978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5627156049c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x562715604a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x562715604ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x562715604b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x562715604b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x562715604dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x562715604e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x562715604e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x562715604fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x562715605008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5627156050d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x562715605128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x562715605178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x562715605248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x562715605298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5627156058f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x562715605390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5627156054a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5627156056e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x562715605760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5627156059b8 <col:47>
| |-NonNullAttr 0x562715605a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x562715605a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x562715605b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x562715605aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x562715605dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x562715605c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x562715605ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x562715605f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x562715605e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x562715606040 <col:60>
|-FunctionDecl 0x562715606190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x562715606230 <col:54>
| `-ConstAttr 0x562715606288 <col:95>
|-FunctionDecl 0x562715606458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5627156062c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562715606338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x562715606508 <line:394:19>
| `-ConstAttr 0x562715606560 <col:60>
|-FunctionDecl 0x562715606f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x562715606e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x562715607010 <col:71>
| `-NonNullAttr 0x562715607068 <col:112, col:126> 1
|-FunctionDecl 0x562715607170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5627156070b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x562715607218 <line:397:22>
| `-NonNullAttr 0x562715607270 <col:63, col:77> 1
|-FunctionDecl 0x562715607498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5627156072b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x562715607338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x562715607548 <line:400:22>
| `-NonNullAttr 0x5627156075a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5627156077a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5627156075e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562715607668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x562715607858 <line:403:22>
| `-NonNullAttr 0x5627156078b0 <col:63, col:77> 1
|-FunctionDecl 0x562715607b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5627156078f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5627156079a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x562715607bb8 <line:406:22>
| `-NonNullAttr 0x562715607c10 <col:63, col:80> 1 2
|-FunctionDecl 0x562715608e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x562715607c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562715607cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562715608ef8 <line:409:22>
| `-NonNullAttr 0x562715608f50 <col:63, col:77> 1
|-FunctionDecl 0x562715609188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562715608f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562715609028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x562715609238 <line:412:22>
| `-NonNullAttr 0x562715609290 <col:63, col:80> 1 2
|-FunctionDecl 0x5627156094c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5627156092d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x562715609368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x562715609578 <col:37>
| `-NonNullAttr 0x5627156095d0 <col:78, col:95> 1 2
|-FunctionDecl 0x5627156097b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562715609618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562715609698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x562715609868 <line:418:22>
| `-NonNullAttr 0x5627156098c0 <col:63, col:80> 1 2
|-FunctionDecl 0x562715609a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562715609908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562715609988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x562715609af8 <line:420:22>
| `-NonNullAttr 0x562715609b50 <col:63, col:77> 1
|-FunctionDecl 0x562715609cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562715609b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562715609c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x562715609da8 <line:423:22>
| `-NonNullAttr 0x56271560ae30 <col:63, col:80> 1 2
|-FunctionDecl 0x56271560afb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56271560ae78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56271560aef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x56271560b068 <line:426:22>
| `-NonNullAttr 0x56271560b0c0 <col:63, col:77> 1
|-FunctionDecl 0x56271560b268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56271560b108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56271560b188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x56271560b318 <line:429:22>
| `-NonNullAttr 0x56271560b370 <col:63, col:80> 1 2
|-FunctionDecl 0x56271560b4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56271560b3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56271560b438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x56271560b5a8 <line:431:22>
| `-NonNullAttr 0x56271560b600 <col:63, col:77> 1
|-FunctionDecl 0x56271560b828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x56271560b648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56271560b6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x56271560b8d8 <line:434:22>
| |-NonNullAttr 0x56271560b930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x56271560b968 <col:100> "" ""
|-FunctionDecl 0x56271560bb78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x56271560b9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56271560ba38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x56271560bc28 <line:437:22>
| |-NonNullAttr 0x56271560bc80 <col:63, col:77> 1
| `-DeprecatedAttr 0x56271560bcb8 <col:97> "" ""
|-FunctionDecl 0x56271560beb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56271560bd08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56271560bd80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56271560bf68 <line:440:22>
| `-NonNullAttr 0x56271560bfc0 <col:63, col:80> 1 2
|-FunctionDecl 0x56271560c140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56271560c008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56271560c080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56271560c1f0 <line:443:22>
| `-NonNullAttr 0x56271560c248 <col:63, col:77> 1
|-FunctionDecl 0x56271560c538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56271560c298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56271560c318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x56271560c390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56271560c5f0 <line:447:22>
| `-NonNullAttr 0x56271560c648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x56271560c8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x56271560c6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56271560c720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x56271560c798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56271560c9b0 <col:43>
| `-NonNullAttr 0x56271560ca08 <col:84, col:98> 1
|-FunctionDecl 0x56271560ccc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56271560ca58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56271560cad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x56271560cb68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x56271560cd80 <line:452:22>
| `-NonNullAttr 0x56271560cdd8 <col:63, col:77> 3
|-FunctionDecl 0x56271560d0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56271560ce50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56271560ced0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x56271560cf60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56271560d1a0 <line:456:22>
| `-NonNullAttr 0x56271560d1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x56271560d3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x56271560d248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56271560d2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x56271560d498 <line:458:22>
|-FunctionDecl 0x56271560d868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x56271560d560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x56271560d700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x56271560d918 <col:52, col:69> 1 2
|-FunctionDecl 0x56271560dac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x56271560d9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x56271560da20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x56271560dca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x56271560db88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x56271560dc08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x56271560de60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x56271560dd68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x56271560dfa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x56271560e040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x56271560e0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x56271560e1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x56271560e240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x56271560e410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix020_pso.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x56271560e508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x56271560e5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x56271560e560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x56271560e0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x56271560e040 ''
| `-AlignedAttr 0x56271560e618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x56271560e690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x56271560e7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x56271560e858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x56271560e8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x56271560e928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x56271560eb30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56271560ea20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56271560ec78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56271560ebe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56271560ee70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56271560ed30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x56271560ef18 <line:487:22>
|-RecordDecl 0x56271560ef70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x56271560f288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x56271560f0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x56271560f168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x56271560f338 <col:86>
| `-ReturnsTwiceAttr 0x56271560f390 <col:12> Implicit
|-FunctionDecl 0x56271560f6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56271560f460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x56271560f570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x56271560f768 <line:493:22>
| `-NonNullAttr 0x56271560f7c0 <col:63, col:77> 1
|-FunctionDecl 0x56271560f938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56271560f808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56271560f9e0 <line:495:22>
| `-NonNullAttr 0x56271560fa38 <col:63, col:77> 1
|-FunctionDecl 0x56271560fb40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56271560fa88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56271560fbe8 <line:497:22>
| `-NonNullAttr 0x56271560fc40 <col:52, col:66> 1
|-FunctionDecl 0x56271560fd40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56271560fc88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56271560fde8 <line:499:22>
| `-NonNullAttr 0x56271560fe40 <col:52, col:66> 1
|-FunctionDecl 0x562715610088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56271560fe98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56271560ff28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562715610138 <col:36>
| `-NonNullAttr 0x562715610190 <col:66, col:83> 1 2
|-FunctionDecl 0x562715610290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5627156101d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562715610338 <line:504:22>
| `-NonNullAttr 0x562715610390 <col:52, col:66> 1
|-FunctionDecl 0x562715610628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562715610440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5627156104c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5627156106d8 <line:508:22>
| `-NonNullAttr 0x562715610730 <col:63, col:80> 1 2
|-FunctionDecl 0x5627156109f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x562715610778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5627156107f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x562715610878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x562715610ab0 <line:512:22>
| `-NonNullAttr 0x562715610b08 <col:63, col:80> 1 3
|-FunctionDecl 0x562715610c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562715610b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562715610cb8 <line:514:22>
| `-NonNullAttr 0x562715610d10 <col:63, col:77> 1
|-FunctionDecl 0x562715610f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562715610dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x562715610fe0 <line:516:22>
| `-NonNullAttr 0x562715611038 <col:63, col:77> 1
|-FunctionDecl 0x562715611140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562715611088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5627156111e8 <line:518:22>
| `-NonNullAttr 0x562715611240 <col:63, col:77> 1
|-FunctionDecl 0x562715611468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562715611288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562715611308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x562715611518 <line:522:22>
| `-NonNullAttr 0x562715611570 <col:63, col:80> 1 2
|-FunctionDecl 0x562715611778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5627156115b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562715611638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x562715611828 <line:525:22>
| `-NonNullAttr 0x562715611880 <col:63, col:77> 1
|-FunctionDecl 0x562715611a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5627156118c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562715611948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x562715611ad8 <line:528:22>
| `-NonNullAttr 0x562715611b30 <col:63, col:80> 1 2
|-FunctionDecl 0x562715611cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562715611b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562715611bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x562715611d68 <line:530:22>
| `-NonNullAttr 0x562715611dc0 <col:63, col:77> 1
|-FunctionDecl 0x562715612f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562715611e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562715612eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x562715613040 <line:534:22>
| `-NonNullAttr 0x562715613098 <col:63, col:80> 1 2
|-FunctionDecl 0x562715613228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5627156130e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562715613168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5627156132d8 <line:537:22>
| `-NonNullAttr 0x562715613330 <col:63, col:77> 1
|-FunctionDecl 0x5627156134d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562715613378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5627156133f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x562715613588 <line:541:22>
| `-NonNullAttr 0x5627156135e0 <col:63, col:80> 1 2
|-FunctionDecl 0x562715613768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562715613628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5627156136a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x562715613818 <line:544:22>
| `-NonNullAttr 0x562715613870 <col:63, col:77> 1
|-FunctionDecl 0x562715613a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5627156138b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x562715613938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x562715613b08 <line:547:22>
| `-NonNullAttr 0x562715613b60 <col:63, col:80> 1 2
|-FunctionDecl 0x562715613ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562715613ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562715613c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x562715613d98 <line:550:22>
| `-NonNullAttr 0x562715613df0 <col:63, col:77> 1
|-FunctionDecl 0x562715615168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x562715614f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562715615020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x562715615218 <col:29>
| `-NonNullAttr 0x562715615270 <col:70, col:84> 1
|-FunctionDecl 0x5627156153e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5627156152b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562715615490 <line:555:22>
| `-NonNullAttr 0x5627156154e8 <col:63, col:77> 1
|-FunctionDecl 0x5627156155f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562715615538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562715615698 <line:557:22>
| `-NonNullAttr 0x5627156156f0 <col:52, col:66> 1
|-FunctionDecl 0x5627156157f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562715615738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562715615898 <line:559:19>
| `-NonNullAttr 0x5627156158f0 <col:49, col:63> 1
|-FunctionDecl 0x562715615b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562715615938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5627156159c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562715615bd8 <col:39>
| `-NonNullAttr 0x562715615c30 <col:69, col:86> 1 2
|-FunctionDecl 0x562715615d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562715615c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562715615dd8 <line:564:22>
| `-NonNullAttr 0x562715615e30 <col:52, col:66> 1
|-FunctionDecl 0x562715615f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562715615ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562715616040 <line:566:22>
| `-NonNullAttr 0x562715616098 <col:52, col:66> 1
|-FunctionDecl 0x562715616258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5627156160e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562715616178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562715616308 <col:39>
| `-NonNullAttr 0x562715616360 <col:69, col:86> 1 2
|-FunctionDecl 0x562715616460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5627156163a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562715616508 <line:571:22>
| `-NonNullAttr 0x562715616560 <col:52, col:66> 1
|-FunctionDecl 0x562715616748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x562715616610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5627156167f0 <line:573:22>
| `-NonNullAttr 0x562715616848 <col:63, col:77> 1
|-FunctionDecl 0x562715616950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x562715616898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5627156169f8 <line:575:22>
| `-NonNullAttr 0x562715616a50 <col:63, col:77> 1
|-FunctionDecl 0x562715616c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562715616a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x562715616b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x562715616d28 <line:579:22>
| `-NonNullAttr 0x562715616d80 <col:63, col:80> 1 2
|-FunctionDecl 0x562715616fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x562715616dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x562715616e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x562715617058 <line:582:22>
| `-NonNullAttr 0x5627156170b0 <col:63, col:77> 1
|-FunctionDecl 0x562715617258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5627156170f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x562715617178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x562715617308 <line:586:22>
| `-NonNullAttr 0x562715617360 <col:63, col:80> 1 2
|-FunctionDecl 0x5627156174e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5627156173a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x562715617428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x562715617598 <col:36>
| `-NonNullAttr 0x5627156175f0 <col:77, col:91> 1
|-FunctionDecl 0x562715617928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5627156176d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5627156177e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5627156179d8 <line:591:22>
| `-NonNullAttr 0x562715617a30 <col:63, col:77> 1
|-FunctionDecl 0x562715617ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562715617a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562715617c50 <line:593:22>
| `-NonNullAttr 0x562715617ca8 <col:63, col:77> 1
|-FunctionDecl 0x562715617db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562715617cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562715617e58 <line:595:22>
| `-NonNullAttr 0x562715617eb0 <col:52, col:66> 1
|-FunctionDecl 0x562715617fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562715617f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562715618070 <line:597:22>
| `-NonNullAttr 0x5627156180c8 <col:52, col:66> 1
|-FunctionDecl 0x5627156182f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x562715618118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562715618190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5627156183a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5627156186d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562715618428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5627156184a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562715618530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x562715618790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5627156189a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x562715618870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x562715618a50 <line:606:22>
| `-NonNullAttr 0x562715618aa8 <col:63, col:77> 1
|-FunctionDecl 0x562715618bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x562715618af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x562715618c58 <line:608:22>
| `-NonNullAttr 0x562715618cb0 <col:63, col:77> 1
|-FunctionDecl 0x562715618f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562715618cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x562715618d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x562715618fc0 <line:612:22>
| `-NonNullAttr 0x562715619018 <col:63, col:80> 1 2
|-FunctionDecl 0x562715619228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x562715619068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5627156190e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5627156192d8 <col:37>
| `-NonNullAttr 0x562715619330 <col:78, col:92> 1
|-FunctionDecl 0x562715619548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x562715619378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x562715619420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5627156195f8 <line:618:22>
| `-NonNullAttr 0x562715619650 <col:63, col:80> 1 2
|-FunctionDecl 0x562715619818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x562715619698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x562715619710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5627156198c8 <line:621:22>
| `-NonNullAttr 0x562715619920 <col:63, col:77> 1
|-FunctionDecl 0x562715619bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x562715619a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x562715619a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x562715619c78 <line:623:22>
| `-NonNullAttr 0x562715619cd0 <col:63, col:77> 1
|-FunctionDecl 0x562715619e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562715619d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562715619f20 <line:625:22>
| `-NonNullAttr 0x562715619f78 <col:63, col:77> 1
|-FunctionDecl 0x56271561a080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562715619fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56271561a128 <line:627:22>
| `-NonNullAttr 0x56271561a180 <col:52, col:66> 1
|-FunctionDecl 0x56271561a280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56271561a1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56271561a328 <line:629:22>
| `-NonNullAttr 0x56271561a380 <col:52, col:66> 1
|-FunctionDecl 0x56271561a480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56271561a3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56271561a528 <line:631:22>
| `-NonNullAttr 0x56271561a580 <col:52, col:66> 1
|-FunctionDecl 0x56271561a958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x56271561a660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x56271561a770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56271561a7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x56271561aa10 <line:635:22>
| `-NonNullAttr 0x56271561aa68 <col:63, col:77> 1
|-FunctionDecl 0x56271561abe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56271561aab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56271561ac90 <line:637:22>
| `-NonNullAttr 0x56271561ace8 <col:63, col:77> 1
|-FunctionDecl 0x56271561adf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56271561ad38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56271561ae98 <line:639:22>
| `-NonNullAttr 0x56271561aef0 <col:52, col:66> 1
|-FunctionDecl 0x56271561b0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56271561afb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56271561b190 <line:641:22>
| `-NonNullAttr 0x56271561b1e8 <col:63, col:77> 1
|-FunctionDecl 0x56271561b2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56271561b238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56271561b398 <line:643:22>
| `-NonNullAttr 0x56271561b3f0 <col:63, col:77> 1
|-FunctionDecl 0x56271561b618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56271561b438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56271561b4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x56271561b6c8 <line:647:22>
| `-NonNullAttr 0x56271561b720 <col:63, col:80> 1 2
|-FunctionDecl 0x56271561b928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x56271561b768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x56271561b7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x56271561b9d8 <line:650:22>
| `-NonNullAttr 0x56271561ba30 <col:63, col:77> 1
|-FunctionDecl 0x56271561bd78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x56271561bb10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x56271561bc30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x56271561be28 <line:653:22>
| `-NonNullAttr 0x56271561be80 <col:63, col:77> 1
|-FunctionDecl 0x56271561bfe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x56271561bec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56271561c090 <col:69>
|-FunctionDecl 0x56271561c208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x56271561c0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56271561c2b0 <col:72>
|-FunctionDecl 0x56271561c4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x56271561c318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x56271561c3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x56271561c598 <col:44>
|-FunctionDecl 0x56271561c7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x56271561c600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56271561c678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x56271561c868 <line:660:22>
| `-NonNullAttr 0x56271561c8c0 <col:63, col:77> 2
|-FunctionDecl 0x56271561cd08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x56271561c9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x56271561cab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x56271561cbc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x56271561cdc0 <col:47>
|-FunctionDecl 0x56271561df60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x56271561ce30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56271561e0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x56271561e020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56271561e210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x56271561e178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56271561e368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x56271561e2d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56271561e430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x56271561e4f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x56271561e5b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x56271561e668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x56271561e6e8 prev 0x56271561e668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x56271561e750 <col:24> 'int' 0
|-VarDecl 0x56271561e788 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x56271561e808 prev 0x56271561e788 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x56271561e870 <col:27> 'int' 0
|-VarDecl 0x56271561e8a8 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x56271561e928 prev 0x56271561e8a8 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x56271561e990 <col:27> 'int' 0
|-VarDecl 0x56271561e9c8 <line:678:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x56271561ea48 prev 0x56271561e9c8 <line:679:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x56271561eab0 <col:27> 'int' 0
|-VarDecl 0x56271561eae8 <line:680:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x56271561eb68 prev 0x56271561eae8 <line:681:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x56271561ebd0 <col:27> 'int' 0
|-VarDecl 0x56271561ec08 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x56271561ec88 prev 0x56271561ec08 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x56271561ecf0 <col:9> 'int' 0
|-VarDecl 0x56271561ed20 <line:684:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x56271561ed98 <line:685:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x56271561ee18 <line:686:1, col:5> col:5 used x 'int'
|-VarDecl 0x56271561ee98 prev 0x56271561ee18 <line:687:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x56271561ef00 <col:9> 'int' 0
|-VarDecl 0x56271561ef70 <line:688:1, col:5> col:5 used y 'int'
|-VarDecl 0x56271561eff0 prev 0x56271561ef70 <line:689:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x56271561f058 <col:9> 'int' 0
|-VarDecl 0x56271561f090 <line:690:1, col:5> col:5 used z 'int'
|-VarDecl 0x56271561f110 prev 0x56271561f090 <line:691:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x56271561f178 <col:9> 'int' 0
|-VarDecl 0x56271561f1a8 <line:692:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x56271561f228 <line:693:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x56271561f2a0 <line:694:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x56271561f318 <line:695:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x56271561f390 <line:696:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x56271561f408 <line:697:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x56271561f480 <line:698:1, col:7> col:7 used z$r_buff0_thd4 '_Bool'
|-VarDecl 0x56271561f4f8 <line:699:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x56271561f570 <line:700:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x56271561f5e8 <line:701:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x56271561f660 <line:702:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x56271561f6d8 <line:703:1, col:7> col:7 used z$r_buff1_thd4 '_Bool'
|-VarDecl 0x56271561f750 <line:704:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x56271561f7d0 <line:705:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x56271561f850 <line:706:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x56271561f8c8 <line:707:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x56271561f948 <line:708:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x56271561f9c0 <line:709:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x56271561fa38 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x56271561fab0 <line:711:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x56271561fbc8 prev 0x56271561df60 <line:712:1, line:726:1> line:712:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x56271561fb30 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5627156201a8 <line:713:1, line:726:1>
|   |-CallExpr 0x56271561fcd8 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56271561fcc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56271561fc70 <col:3> 'void ()' Function 0x5627155c5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56271561fd38 <line:715:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56271561fcf8 <col:3> 'int' lvalue Var 0x56271561ec88 'a' 'int'
|   | `-IntegerLiteral 0x56271561fd18 <col:7> 'int' 1
|   |-CallExpr 0x56271561fd90 <line:716:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56271561fd78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56271561fd58 <col:3> 'void ()' Function 0x5627155c5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56271561fde8 <line:717:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56271561fdd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56271561fdb0 <col:3> 'void ()' Function 0x5627155c5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56271561fe60 <line:718:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56271561fe08 <col:3> 'int' lvalue Var 0x56271561e808 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x56271561fe48 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56271561fe28 <col:25> 'int' lvalue Var 0x56271561ee98 'x' 'int'
|   |-CallExpr 0x56271561feb8 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56271561fea0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56271561fe80 <col:3> 'void ()' Function 0x5627155c5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56271561ff10 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56271561fef8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56271561fed8 <col:3> 'void ()' Function 0x5627155c5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x56271561ff80 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56271561ff50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56271561ff30 <col:3> 'void ()' Function 0x5627155c5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56271561ffd8 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56271561ffc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56271561ffa0 <col:3> 'void ()' Function 0x5627155c5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562715620090 <line:723:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56271561fff8 <col:3> 'int' lvalue Var 0x56271561e6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562715620070 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562715620058 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562715620018 <col:22> 'int' lvalue Var 0x56271561e6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562715620038 <col:41> 'int' 1
|   |-CallExpr 0x5627156200e8 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5627156200d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5627156200b0 <col:3> 'void ()' Function 0x5627155c5410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562715620198 <line:725:3, col:36>
|     `-CallExpr 0x562715620178 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562715620160 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562715620108 <col:10> 'void *(void)' Function 0x5627155c4e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5627156202c8 prev 0x56271561e0b8 <line:727:1, line:741:1> line:727:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x562715620230 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562715620810 <line:728:1, line:741:1>
|   |-CallExpr 0x5627156203a8 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562715620390 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562715620370 <col:3> 'void ()' Function 0x5627155c5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562715620408 <line:730:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5627156203c8 <col:3> 'int' lvalue Var 0x56271561ee98 'x' 'int'
|   | `-IntegerLiteral 0x5627156203e8 <col:7> 'int' 1
|   |-CallExpr 0x562715620460 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562715620448 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562715620428 <col:3> 'void ()' Function 0x5627155c5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5627156204b8 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5627156204a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562715620480 <col:3> 'void ()' Function 0x5627155c5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562715620518 <line:733:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5627156204d8 <col:3> 'int' lvalue Var 0x56271561eff0 'y' 'int'
|   | `-IntegerLiteral 0x5627156204f8 <col:7> 'int' 1
|   |-CallExpr 0x562715620570 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562715620558 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562715620538 <col:3> 'void ()' Function 0x5627155c5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5627156205c8 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5627156205b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562715620590 <col:3> 'void ()' Function 0x5627155c5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x562715620620 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562715620608 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5627156205e8 <col:3> 'void ()' Function 0x5627155c5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562715620678 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562715620660 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562715620640 <col:3> 'void ()' Function 0x5627155c5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562715620730 <line:738:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562715620698 <col:3> 'int' lvalue Var 0x56271561e6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562715620710 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5627156206f8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5627156206b8 <col:22> 'int' lvalue Var 0x56271561e6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5627156206d8 <col:41> 'int' 1
|   |-CallExpr 0x562715620788 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562715620770 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562715620750 <col:3> 'void ()' Function 0x5627155c5410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562715620800 <line:740:3, col:36>
|     `-CallExpr 0x5627156207e0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5627156207c8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5627156207a8 <col:10> 'void *(void)' Function 0x5627155c4e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562715620930 prev 0x56271561e210 <line:742:1, line:769:1> line:742:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x562715620898 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562715623840 <line:743:1, line:769:1>
|   |-CallExpr 0x562715620a10 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5627156209f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5627156209d8 <col:3> 'void ()' Function 0x5627155c5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562715620a70 <line:745:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562715620a30 <col:3> 'int' lvalue Var 0x56271561eff0 'y' 'int'
|   | `-IntegerLiteral 0x562715620a50 <col:7> 'int' 2
|   |-CallExpr 0x562715620ac8 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562715620ab0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562715620a90 <col:3> 'void ()' Function 0x5627155c5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562715620b20 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562715620b08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562715620ae8 <col:3> 'void ()' Function 0x5627155c5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562715620bd0 <line:748:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x562715620b40 <col:3> '_Bool' lvalue Var 0x56271561fa38 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x562715620bb8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x562715620b98 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x562715620b80 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x562715620b60 <col:19> 'void *(void)' Function 0x5627155c4e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x562715620c80 <line:749:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x562715620bf0 <col:3> '_Bool' lvalue Var 0x56271561fab0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x562715620c68 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x562715620c48 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x562715620c30 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x562715620c10 <col:19> 'void *(void)' Function 0x5627155c4e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x562715620cf8 <line:750:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x562715620ca0 <col:3> '_Bool' lvalue Var 0x56271561f1a8 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x562715620ce0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562715620cc0 <col:21> '_Bool' lvalue Var 0x56271561fab0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x562715620d70 <line:751:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562715620d18 <col:3> 'int' lvalue Var 0x56271561f228 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x562715620d58 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562715620d38 <col:15> 'int' lvalue Var 0x56271561f110 'z' 'int'
|   |-BinaryOperator 0x5627156211b8 <line:752:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x562715620d90 <col:3> 'int' lvalue Var 0x56271561f110 'z' 'int'
|   | `-ConditionalOperator 0x562715621188 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x562715620fb0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x562715620ec0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x562715620de8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x562715620dd0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x562715620db0 <col:8> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x562715620ea0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x562715620e38 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x562715620e20 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x562715620e00 <col:27> '_Bool' lvalue Var 0x56271561f408 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x562715620e88 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x562715620e70 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x562715620e50 <col:46> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x562715620f90 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x562715620f18 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x562715620f00 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x562715620ee0 <col:65> '_Bool' lvalue Var 0x56271561f408 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x562715620f68 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x562715620f50 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x562715620f30 <col:84> '_Bool' lvalue Var 0x56271561f660 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x562715621170 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562715620fd0 <col:101> 'int' lvalue Var 0x56271561f110 'z' 'int'
|   |   `-ParenExpr 0x562715621150 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x562715621120 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x562715621090 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562715621048 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562715621030 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562715620ff0 <col:106> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562715621078 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562715621060 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562715621010 <col:124> '_Bool' lvalue Var 0x56271561f408 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5627156210f0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5627156210b0 <col:141> 'int' lvalue Var 0x56271561f850 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x562715621108 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5627156210d0 <col:153> 'int' lvalue Var 0x56271561f948 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5627156216c8 <line:753:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5627156211d8 <col:3> 'int' lvalue Var 0x56271561f850 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x562715621698 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562715621668 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562715621650 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5627156211f8 <col:15> '_Bool' lvalue Var 0x56271561fab0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562715621680 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562715621218 <col:31> 'int' lvalue Var 0x56271561f850 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x562715621630 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x562715621600 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562715621428 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x562715621348 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562715621270 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562715621258 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x562715621238 <col:45> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x562715621328 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5627156212c0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5627156212a8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562715621288 <col:64> '_Bool' lvalue Var 0x56271561f408 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x562715621310 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5627156212f8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5627156212d8 <col:83> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x562715621408 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5627156213a0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562715621388 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562715621368 <col:102> '_Bool' lvalue Var 0x56271561f408 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5627156213f0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5627156213d8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5627156213b8 <col:121> '_Bool' lvalue Var 0x56271561f660 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5627156215e8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562715621448 <col:138> 'int' lvalue Var 0x56271561f850 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x5627156215c8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562715621598 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x562715621508 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5627156214c0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5627156214a8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562715621468 <col:151> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5627156214f0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5627156214d8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562715621488 <col:169> '_Bool' lvalue Var 0x56271561f408 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x562715621568 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x562715621528 <col:186> 'int' lvalue Var 0x56271561f850 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x562715621580 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562715621548 <col:198> 'int' lvalue Var 0x56271561f850 'z$w_buff0' 'int'
|   |-BinaryOperator 0x562715621bd8 <line:754:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5627156216e8 <col:3> 'int' lvalue Var 0x56271561f948 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x562715621ba8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562715621b78 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562715621b60 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562715621708 <col:15> '_Bool' lvalue Var 0x56271561fab0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562715621b90 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562715621728 <col:31> 'int' lvalue Var 0x56271561f948 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x562715621b40 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x562715621b10 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562715621938 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x562715621858 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562715621780 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562715621768 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x562715621748 <col:45> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x562715621838 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5627156217d0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5627156217b8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562715621798 <col:64> '_Bool' lvalue Var 0x56271561f408 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x562715621820 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x562715621808 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5627156217e8 <col:83> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x562715621918 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5627156218b0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562715621898 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562715621878 <col:102> '_Bool' lvalue Var 0x56271561f408 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x562715621900 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5627156218e8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5627156218c8 <col:121> '_Bool' lvalue Var 0x56271561f660 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x562715621af8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562715621958 <col:138> 'int' lvalue Var 0x56271561f948 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x562715621ad8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562715621aa8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x562715621a18 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5627156219d0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5627156219b8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562715621978 <col:151> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x562715621a00 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5627156219e8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562715621998 <col:169> '_Bool' lvalue Var 0x56271561f408 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x562715621a78 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x562715621a38 <col:186> 'int' lvalue Var 0x56271561f948 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x562715621a90 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562715621a58 <col:198> 'int' lvalue Var 0x56271561f948 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5627156221a8 <line:755:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x562715621bf8 <col:3> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562715622190 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562715622160 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x562715622118 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562715622100 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562715621c18 <col:20> '_Bool' lvalue Var 0x56271561fab0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562715622148 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562715622130 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562715621c38 <col:36> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5627156220e0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5627156220b0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x562715621e48 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562715621d68 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562715621c90 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562715621c78 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562715621c58 <col:55> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562715621d48 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562715621ce0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562715621cc8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562715621ca8 <col:74> '_Bool' lvalue Var 0x56271561f408 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x562715621d30 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562715621d18 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562715621cf8 <col:93> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562715621e28 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562715621dc0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562715621da8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562715621d88 <col:112> '_Bool' lvalue Var 0x56271561f408 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x562715621e10 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562715621df8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562715621dd8 <col:131> '_Bool' lvalue Var 0x56271561f660 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x562715622098 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562715622080 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562715621e68 <col:148> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x562715622060 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x562715622030 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x562715621f28 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562715621ee0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562715621ec8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562715621e88 <col:166> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562715621f10 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562715621ef8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562715621ea8 <col:184> '_Bool' lvalue Var 0x56271561f408 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x562715621fe8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562715621fa0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562715621f48 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562715622018 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562715622000 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562715621fc8 <col:212> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562715622770 <line:756:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5627156221c8 <col:3> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562715622758 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562715622728 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5627156226e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5627156226c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5627156221e8 <col:20> '_Bool' lvalue Var 0x56271561fab0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562715622710 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5627156226f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562715622208 <col:36> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5627156226a8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562715622678 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x562715622418 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562715622338 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562715622260 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562715622248 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562715622228 <col:55> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562715622318 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5627156222b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562715622298 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562715622278 <col:74> '_Bool' lvalue Var 0x56271561f408 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x562715622300 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5627156222e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5627156222c8 <col:93> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5627156223f8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562715622390 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562715622378 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562715622358 <col:112> '_Bool' lvalue Var 0x56271561f408 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5627156223e0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5627156223c8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5627156223a8 <col:131> '_Bool' lvalue Var 0x56271561f660 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x562715622660 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562715622648 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562715622438 <col:148> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x562715622628 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5627156225f8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5627156224f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5627156224b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562715622498 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562715622458 <col:166> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5627156224e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5627156224c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562715622478 <col:184> '_Bool' lvalue Var 0x56271561f408 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5627156225c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562715622548 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562715622518 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5627156225e0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5627156225a0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562715622570 <col:219> 'int' 0
|   |-BinaryOperator 0x562715622d18 <line:757:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x562715622790 <col:3> '_Bool' lvalue Var 0x56271561f408 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562715622d00 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562715622cd0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x562715622c88 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562715622c70 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5627156227b0 <col:20> '_Bool' lvalue Var 0x56271561fab0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562715622cb8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562715622ca0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5627156227d0 <col:36> '_Bool' lvalue Var 0x56271561f408 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x562715622c50 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x562715622c20 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5627156229e0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562715622900 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562715622828 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562715622810 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5627156227f0 <col:55> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5627156228e0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562715622878 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562715622860 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562715622840 <col:74> '_Bool' lvalue Var 0x56271561f408 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5627156228c8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5627156228b0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562715622890 <col:93> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5627156229c0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562715622958 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562715622940 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562715622920 <col:112> '_Bool' lvalue Var 0x56271561f408 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5627156229a8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562715622990 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562715622970 <col:131> '_Bool' lvalue Var 0x56271561f660 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x562715622c08 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562715622bf0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562715622a00 <col:148> '_Bool' lvalue Var 0x56271561f408 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x562715622bd0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x562715622ba0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x562715622ac0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562715622a78 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562715622a60 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562715622a20 <col:166> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562715622aa8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562715622a90 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562715622a40 <col:184> '_Bool' lvalue Var 0x56271561f408 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x562715622b58 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562715622b10 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562715622ae0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562715622b88 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562715622b70 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562715622b38 <col:212> '_Bool' lvalue Var 0x56271561f408 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x562715623308 <line:758:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x562715622d38 <col:3> '_Bool' lvalue Var 0x56271561f660 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5627156232f0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5627156232c0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x562715623278 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562715623260 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562715622d58 <col:20> '_Bool' lvalue Var 0x56271561fab0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5627156232a8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562715623290 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562715622d78 <col:36> '_Bool' lvalue Var 0x56271561f660 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x562715623240 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562715623210 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x562715622fb0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562715622ea8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562715622dd0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562715622db8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562715622d98 <col:55> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562715622e88 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562715622e20 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562715622e08 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562715622de8 <col:74> '_Bool' lvalue Var 0x56271561f408 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x562715622e70 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562715622e58 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562715622e38 <col:93> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562715622f68 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562715622f00 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562715622ee8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562715622ec8 <col:112> '_Bool' lvalue Var 0x56271561f408 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x562715622f50 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562715622f38 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562715622f18 <col:131> '_Bool' lvalue Var 0x56271561f660 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5627156231f8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5627156231e0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562715622fd0 <col:148> '_Bool' lvalue Var 0x56271561f660 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x5627156231c0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x562715623190 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x562715623090 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562715623048 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562715623030 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562715622ff0 <col:166> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562715623078 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562715623060 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562715623010 <col:184> '_Bool' lvalue Var 0x56271561f408 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x562715623160 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5627156230e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5627156230b0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562715623178 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x562715623138 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562715623108 <col:219> 'int' 0
|   |-BinaryOperator 0x562715623380 <line:759:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562715623328 <col:3> 'int' lvalue Var 0x56271561e928 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x562715623368 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562715623348 <col:25> 'int' lvalue Var 0x56271561f110 'z' 'int'
|   |-BinaryOperator 0x5627156234b0 <line:760:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5627156233a0 <col:3> 'int' lvalue Var 0x56271561f110 'z' 'int'
|   | `-ConditionalOperator 0x562715623480 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x562715623438 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562715623420 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5627156233c0 <col:7> '_Bool' lvalue Var 0x56271561f1a8 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x562715623450 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5627156233e0 <col:25> 'int' lvalue Var 0x56271561f228 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x562715623468 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x562715623400 <col:37> 'int' lvalue Var 0x56271561f110 'z' 'int'
|   |-BinaryOperator 0x562715623548 <line:761:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5627156234d0 <col:3> '_Bool' lvalue Var 0x56271561f1a8 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x562715623520 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5627156234f0 <col:28> 'int' 0
|   |-CallExpr 0x5627156235a0 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562715623588 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562715623568 <col:3> 'void ()' Function 0x5627155c5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5627156235f8 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5627156235e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5627156235c0 <col:3> 'void ()' Function 0x5627155c5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x562715623650 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562715623638 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562715623618 <col:3> 'void ()' Function 0x5627155c5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5627156236a8 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562715623690 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562715623670 <col:3> 'void ()' Function 0x5627155c5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562715623760 <line:766:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5627156236c8 <col:3> 'int' lvalue Var 0x56271561e6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562715623740 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562715623728 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5627156236e8 <col:22> 'int' lvalue Var 0x56271561e6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562715623708 <col:41> 'int' 1
|   |-CallExpr 0x5627156237b8 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5627156237a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562715623780 <col:3> 'void ()' Function 0x5627155c5410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562715623830 <line:768:3, col:36>
|     `-CallExpr 0x562715623810 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5627156237f8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5627156237d8 <col:10> 'void *(void)' Function 0x5627155c4e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5627156239c8 prev 0x56271561e368 <line:770:1, line:815:1> line:770:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x562715623930 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562715627cc8 <line:771:1, line:815:1>
|   |-CallExpr 0x562715623aa8 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562715623a90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562715623a70 <col:3> 'void ()' Function 0x5627155c5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562715623b20 <line:773:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562715623ac8 <col:3> 'int' lvalue Var 0x56271561f948 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x562715623b08 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562715623ae8 <col:15> 'int' lvalue Var 0x56271561f850 'z$w_buff0' 'int'
|   |-BinaryOperator 0x562715623b80 <line:774:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562715623b40 <col:3> 'int' lvalue Var 0x56271561f850 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x562715623b60 <col:15> 'int' 1
|   |-BinaryOperator 0x562715623bf8 <line:775:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562715623ba0 <col:3> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562715623be0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562715623bc0 <col:20> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562715623c90 <line:776:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x562715623c18 <col:3> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x562715623c68 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562715623c38 <col:27> 'int' 1
|   |-CallExpr 0x562715623e18 <line:777:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x562715623e00 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x562715623cb0 <col:3> 'void (int)' Function 0x5627155c50d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x562715623db0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x562715623d90 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x562715623d70 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x562715623d28 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x562715623d10 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x562715623cd0 <col:23> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x562715623d58 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x562715623d40 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x562715623cf0 <col:41> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562715623e98 <line:778:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562715623e40 <col:3> '_Bool' lvalue Var 0x56271561f4f8 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x562715623e80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562715623e60 <col:20> '_Bool' lvalue Var 0x56271561f2a0 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x562715623f10 <line:779:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562715623eb8 <col:3> '_Bool' lvalue Var 0x56271561f570 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562715623ef8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562715623ed8 <col:20> '_Bool' lvalue Var 0x56271561f318 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x562715623f88 <line:780:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562715623f30 <col:3> '_Bool' lvalue Var 0x56271561f5e8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562715623f70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562715623f50 <col:20> '_Bool' lvalue Var 0x56271561f390 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x562715624018 <line:781:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562715623fc0 <col:3> '_Bool' lvalue Var 0x56271561f660 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562715624000 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562715623fe0 <col:20> '_Bool' lvalue Var 0x56271561f408 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x562715624090 <line:782:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562715624038 <col:3> '_Bool' lvalue Var 0x56271561f6d8 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x562715624078 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562715624058 <col:20> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x562715624128 <line:783:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5627156240b0 <col:3> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   | `-CStyleCastExpr 0x562715624100 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5627156240d0 <col:27> 'int' 1
|   |-CallExpr 0x562715624180 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562715624168 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562715624148 <col:3> 'void ()' Function 0x5627155c5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5627156241d8 <line:785:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5627156241c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5627156241a0 <col:3> 'void ()' Function 0x5627155c5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562715624288 <line:786:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5627156241f8 <col:3> '_Bool' lvalue Var 0x56271561fa38 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x562715624270 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x562715624250 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x562715624238 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x562715624218 <col:19> 'void *(void)' Function 0x5627155c4e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x562715624338 <line:787:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5627156242a8 <col:3> '_Bool' lvalue Var 0x56271561fab0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x562715624320 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x562715624300 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5627156242e8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5627156242c8 <col:19> 'void *(void)' Function 0x5627155c4e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5627156243b0 <line:788:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x562715624358 <col:3> '_Bool' lvalue Var 0x56271561f1a8 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x562715624398 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562715624378 <col:21> '_Bool' lvalue Var 0x56271561fab0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x562715624428 <line:789:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5627156243d0 <col:3> 'int' lvalue Var 0x56271561f228 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x562715624410 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5627156243f0 <col:15> 'int' lvalue Var 0x56271561f110 'z' 'int'
|   |-BinaryOperator 0x562715624860 <line:790:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x562715624448 <col:3> 'int' lvalue Var 0x56271561f110 'z' 'int'
|   | `-ConditionalOperator 0x562715624830 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x562715624658 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x562715624578 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5627156244a0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x562715624488 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x562715624468 <col:8> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x562715624558 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5627156244f0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5627156244d8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5627156244b8 <col:27> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x562715624540 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x562715624528 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x562715624508 <col:46> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x562715624638 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5627156245d0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5627156245b8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x562715624598 <col:65> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x562715624620 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x562715624608 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5627156245e8 <col:84> '_Bool' lvalue Var 0x56271561f6d8 'z$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x562715624818 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562715624678 <col:101> 'int' lvalue Var 0x56271561f110 'z' 'int'
|   |   `-ParenExpr 0x5627156247f8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5627156247c8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x562715624738 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5627156246f0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5627156246d8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562715624698 <col:106> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562715624720 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562715624708 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5627156246b8 <col:124> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x562715624798 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562715624758 <col:141> 'int' lvalue Var 0x56271561f850 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5627156247b0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562715624778 <col:153> 'int' lvalue Var 0x56271561f948 'z$w_buff1' 'int'
|   |-BinaryOperator 0x562715624d70 <line:791:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x562715624880 <col:3> 'int' lvalue Var 0x56271561f850 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x562715624d40 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562715624d10 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562715624cf8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5627156248a0 <col:15> '_Bool' lvalue Var 0x56271561fab0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562715624d28 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5627156248c0 <col:31> 'int' lvalue Var 0x56271561f850 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x562715624cd8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x562715624ca8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562715624ad0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5627156249f0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562715624918 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562715624900 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5627156248e0 <col:45> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5627156249d0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x562715624968 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x562715624950 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562715624930 <col:64> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x5627156249b8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5627156249a0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x562715624980 <col:83> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x562715624ab0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x562715624a48 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562715624a30 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562715624a10 <col:102> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x562715624a98 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x562715624a80 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x562715624a60 <col:121> '_Bool' lvalue Var 0x56271561f6d8 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x562715624c90 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562715624af0 <col:138> 'int' lvalue Var 0x56271561f850 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x562715624c70 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562715624c40 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x562715624bb0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x562715624b68 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x562715624b50 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562715624b10 <col:151> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x562715624b98 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x562715624b80 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562715624b30 <col:169> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x562715624c10 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x562715624bd0 <col:186> 'int' lvalue Var 0x56271561f850 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x562715624c28 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562715624bf0 <col:198> 'int' lvalue Var 0x56271561f850 'z$w_buff0' 'int'
|   |-BinaryOperator 0x562715625290 <line:792:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x562715624d90 <col:3> 'int' lvalue Var 0x56271561f948 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x562715625260 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562715625230 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562715625218 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562715624db0 <col:15> '_Bool' lvalue Var 0x56271561fab0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562715625248 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562715624dd0 <col:31> 'int' lvalue Var 0x56271561f948 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x5627156251f8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5627156251c8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562715624ff0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x562715624f00 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562715624e28 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562715624e10 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x562715624df0 <col:45> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x562715624ee0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x562715624e78 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x562715624e60 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562715624e40 <col:64> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x562715624ec8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x562715624eb0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x562715624e90 <col:83> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x562715624fd0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x562715624f58 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562715624f40 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562715624f20 <col:102> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x562715624fa8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x562715624f90 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x562715624f70 <col:121> '_Bool' lvalue Var 0x56271561f6d8 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5627156251b0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562715625010 <col:138> 'int' lvalue Var 0x56271561f948 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x562715625190 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562715625160 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5627156250d0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x562715625088 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x562715625070 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562715625030 <col:151> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5627156250b8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5627156250a0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562715625050 <col:169> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x562715625130 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5627156250f0 <col:186> 'int' lvalue Var 0x56271561f948 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x562715625148 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562715625110 <col:198> 'int' lvalue Var 0x56271561f948 'z$w_buff1' 'int'
|   |-BinaryOperator 0x562715625838 <line:793:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5627156252b0 <col:3> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562715625820 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5627156257f0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5627156257a8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562715625790 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5627156252d0 <col:20> '_Bool' lvalue Var 0x56271561fab0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5627156257d8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5627156257c0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5627156252f0 <col:36> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x562715625770 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x562715625740 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x562715625500 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562715625420 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562715625348 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562715625330 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562715625310 <col:55> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562715625400 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562715625398 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562715625380 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562715625360 <col:74> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5627156253e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5627156253d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5627156253b0 <col:93> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5627156254e0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562715625478 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562715625460 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562715625440 <col:112> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5627156254c8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5627156254b0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562715625490 <col:131> '_Bool' lvalue Var 0x56271561f6d8 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x562715625728 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562715625710 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562715625520 <col:148> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5627156256f0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5627156256c0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5627156255e0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562715625598 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562715625580 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562715625540 <col:166> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5627156255c8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5627156255b0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562715625560 <col:184> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x562715625678 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562715625630 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562715625600 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5627156256a8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562715625690 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562715625658 <col:212> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562715625e00 <line:794:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x562715625858 <col:3> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562715625de8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562715625db8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x562715625d70 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562715625d58 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562715625878 <col:20> '_Bool' lvalue Var 0x56271561fab0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562715625da0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562715625d88 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562715625898 <col:36> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x562715625d38 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562715625d08 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x562715625aa8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5627156259c8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5627156258f0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5627156258d8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5627156258b8 <col:55> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5627156259a8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562715625940 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562715625928 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562715625908 <col:74> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x562715625990 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562715625978 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562715625958 <col:93> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562715625a88 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562715625a20 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562715625a08 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5627156259e8 <col:112> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x562715625a70 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562715625a58 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562715625a38 <col:131> '_Bool' lvalue Var 0x56271561f6d8 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x562715625cf0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562715625cd8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562715625ac8 <col:148> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x562715625cb8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x562715625c88 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x562715625b88 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562715625b40 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562715625b28 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562715625ae8 <col:166> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562715625b70 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562715625b58 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562715625b08 <col:184> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x562715625c58 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562715625bd8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562715625ba8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562715625c70 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x562715625c30 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562715625c00 <col:219> 'int' 0
|   |-BinaryOperator 0x5627156263b8 <line:795:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x562715625e20 <col:3> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5627156263a0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562715626370 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x562715626328 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562715626310 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562715625e40 <col:20> '_Bool' lvalue Var 0x56271561fab0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562715626358 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562715626340 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562715625e60 <col:36> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x5627156262f0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5627156262c0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x562715626080 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562715625f90 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562715625eb8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562715625ea0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562715625e80 <col:55> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562715625f70 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562715625f08 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562715625ef0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562715625ed0 <col:74> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x562715625f58 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562715625f40 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562715625f20 <col:93> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562715626060 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562715625ff8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562715625fe0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562715625fb0 <col:112> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x562715626048 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562715626030 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562715626010 <col:131> '_Bool' lvalue Var 0x56271561f6d8 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5627156262a8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562715626290 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5627156260a0 <col:148> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x562715626270 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x562715626240 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x562715626160 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562715626118 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562715626100 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5627156260c0 <col:166> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562715626148 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562715626130 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5627156260e0 <col:184> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5627156261f8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5627156261b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562715626180 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562715626228 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562715626210 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5627156261d8 <col:212> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x562715626980 <line:796:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5627156263d8 <col:3> '_Bool' lvalue Var 0x56271561f6d8 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x562715626968 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562715626938 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5627156268f0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5627156268d8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5627156263f8 <col:20> '_Bool' lvalue Var 0x56271561fab0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562715626920 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562715626908 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562715626418 <col:36> '_Bool' lvalue Var 0x56271561f6d8 'z$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x5627156268b8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562715626888 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x562715626628 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562715626548 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562715626470 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562715626458 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562715626438 <col:55> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562715626528 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5627156264c0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5627156264a8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562715626488 <col:74> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x562715626510 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5627156264f8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5627156264d8 <col:93> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562715626608 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5627156265a0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562715626588 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562715626568 <col:112> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5627156265f0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5627156265d8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5627156265b8 <col:131> '_Bool' lvalue Var 0x56271561f6d8 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x562715626870 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562715626858 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562715626648 <col:148> '_Bool' lvalue Var 0x56271561f6d8 'z$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x562715626838 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x562715626808 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x562715626708 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5627156266c0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5627156266a8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562715626668 <col:166> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5627156266f0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5627156266d8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562715626688 <col:184> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5627156267d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562715626758 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562715626728 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5627156267f0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5627156267b0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562715626780 <col:219> 'int' 0
|   |-BinaryOperator 0x5627156269f8 <line:797:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5627156269a0 <col:3> 'int' lvalue Var 0x56271561ea48 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x5627156269e0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5627156269c0 <col:25> 'int' lvalue Var 0x56271561f110 'z' 'int'
|   |-BinaryOperator 0x562715626b28 <line:798:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x562715626a18 <col:3> 'int' lvalue Var 0x56271561f110 'z' 'int'
|   | `-ConditionalOperator 0x562715626af8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x562715626ab0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562715626a98 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562715626a38 <col:7> '_Bool' lvalue Var 0x56271561f1a8 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x562715626ac8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562715626a58 <col:25> 'int' lvalue Var 0x56271561f228 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x562715626ae0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x562715626a78 <col:37> 'int' lvalue Var 0x56271561f110 'z' 'int'
|   |-BinaryOperator 0x562715626bc0 <line:799:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x562715626b48 <col:3> '_Bool' lvalue Var 0x56271561f1a8 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x562715626b98 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562715626b68 <col:28> 'int' 0
|   |-CallExpr 0x562715626c18 <line:800:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562715626c00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562715626be0 <col:3> 'void ()' Function 0x5627155c5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562715626c70 <line:801:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562715626c58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562715626c38 <col:3> 'void ()' Function 0x5627155c5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562715626ce8 <line:802:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562715626c90 <col:3> 'int' lvalue Var 0x56271561eb68 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x562715626cd0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562715626cb0 <col:25> 'int' lvalue Var 0x56271561ec88 'a' 'int'
|   |-CallExpr 0x562715626d40 <line:803:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562715626d28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562715626d08 <col:3> 'void ()' Function 0x5627155c5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562715626d98 <line:804:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562715626d80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562715626d60 <col:3> 'void ()' Function 0x5627155c5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5627156270a0 <line:805:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562715626db8 <col:3> 'int' lvalue Var 0x56271561f110 'z' 'int'
|   | `-ConditionalOperator 0x562715627070 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562715626e78 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562715626e30 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562715626e18 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562715626dd8 <col:7> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562715626e60 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562715626e48 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562715626df8 <col:25> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x562715627058 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562715626e98 <col:42> 'int' lvalue Var 0x56271561f850 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x562715627038 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562715627008 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562715626f58 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562715626f10 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562715626ef8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562715626eb8 <col:55> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562715626f40 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562715626f28 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562715626ed8 <col:73> '_Bool' lvalue Var 0x56271561f6d8 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x562715626fb8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562715626f78 <col:90> 'int' lvalue Var 0x56271561f948 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562715626ff0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562715626f98 <col:102> 'int' lvalue Var 0x56271561f110 'z' 'int'
|   |-BinaryOperator 0x5627156272a8 <line:806:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5627156270c0 <col:3> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562715627290 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562715627260 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562715627180 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562715627138 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562715627120 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5627156270e0 <col:20> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562715627168 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562715627150 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562715627100 <col:38> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x562715627218 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5627156271d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5627156271a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562715627248 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562715627230 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5627156271f8 <col:66> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562715627590 <line:807:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5627156272c8 <col:3> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562715627578 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562715627548 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562715627468 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562715627388 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562715627340 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562715627328 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5627156272e8 <col:20> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562715627370 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562715627358 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562715627308 <col:38> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x562715627448 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562715627400 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5627156273e8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5627156273a8 <col:56> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562715627430 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562715627418 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5627156273c8 <col:74> '_Bool' lvalue Var 0x56271561f6d8 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x562715627500 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5627156274b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562715627488 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562715627530 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562715627518 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5627156274e0 <col:102> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562715627798 <line:808:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5627156275b0 <col:3> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x562715627780 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562715627750 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562715627670 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562715627628 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562715627610 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5627156275d0 <col:20> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562715627658 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562715627640 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5627156275f0 <col:38> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x562715627708 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5627156276c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562715627690 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562715627738 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562715627720 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5627156276e8 <col:66> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x562715627a80 <line:809:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5627156277b8 <col:3> '_Bool' lvalue Var 0x56271561f6d8 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x562715627a68 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562715627a38 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562715627958 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562715627878 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562715627830 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562715627818 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5627156277d8 <col:20> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562715627860 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562715627848 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5627156277f8 <col:38> '_Bool' lvalue Var 0x56271561f480 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x562715627938 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5627156278f0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5627156278d8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562715627898 <col:56> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562715627920 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562715627908 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5627156278b8 <col:74> '_Bool' lvalue Var 0x56271561f6d8 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5627156279f0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5627156279a8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562715627978 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562715627a20 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562715627a08 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5627156279d0 <col:102> '_Bool' lvalue Var 0x56271561f6d8 'z$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x562715627ad8 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562715627ac0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562715627aa0 <col:3> 'void ()' Function 0x5627155c5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562715627b30 <line:811:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562715627b18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562715627af8 <col:3> 'void ()' Function 0x5627155c5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562715627be8 <line:812:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562715627b50 <col:3> 'int' lvalue Var 0x56271561e6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562715627bc8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562715627bb0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562715627b70 <col:22> 'int' lvalue Var 0x56271561e6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562715627b90 <col:41> 'int' 1
|   |-CallExpr 0x562715627c40 <line:813:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562715627c28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562715627c08 <col:3> 'void ()' Function 0x5627155c5410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562715627cb8 <line:814:3, col:36>
|     `-CallExpr 0x562715627c98 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562715627c80 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562715627c60 <col:10> 'void *(void)' Function 0x5627155c4e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562715627e50 prev 0x56271561e430 <line:816:1, line:818:1> line:816:6 fence 'void ()'
| `-CompoundStmt 0x562715627ef0 <line:817:1, line:818:1>
|-FunctionDecl 0x562715627f20 prev 0x56271561e4f0 <line:819:1, line:821:1> line:819:6 isync 'void ()'
| `-CompoundStmt 0x562715627fc0 <line:820:1, line:821:1>
|-FunctionDecl 0x562715628000 prev 0x56271561e5b0 <line:822:1, line:824:1> line:822:6 lwfence 'void ()'
| `-CompoundStmt 0x5627156280a0 <line:823:1, line:824:1>
`-FunctionDecl 0x562715628108 <line:825:1, line:851:1> line:825:5 main 'int ()'
  `-CompoundStmt 0x56271562a120 <line:826:1, line:851:1>
    |-DeclStmt 0x562715628220 <line:827:3, col:17>
    | `-VarDecl 0x5627156281b8 <col:3, col:13> col:13 used t535 'pthread_t':'unsigned long'
    |-CallExpr 0x562715628428 <line:828:3, col:53> 'int'
    | |-ImplicitCastExpr 0x562715628410 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562715628238 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5627156058f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562715628278 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562715628258 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5627156281b8 't535' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562715628468 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5627156282f0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5627156282c8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562715628290 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x562715628480 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562715628310 <col:38> 'void *(void *)' Function 0x56271561fbc8 'P0' 'void *(void *)'
    | `-ParenExpr 0x562715628390 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x562715628368 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562715628330 <col:51> 'int' 0
    |-DeclStmt 0x562715628510 <line:829:3, col:17>
    | `-VarDecl 0x5627156284a8 <col:3, col:13> col:13 used t536 'pthread_t':'unsigned long'
    |-CallExpr 0x5627156286b8 <line:830:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5627156286a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562715628528 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5627156058f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562715628568 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562715628548 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5627156284a8 't536' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5627156286f8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5627156285e0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5627156285b8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562715628580 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x562715628710 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562715628600 <col:38> 'void *(void *)' Function 0x5627156202c8 'P1' 'void *(void *)'
    | `-ParenExpr 0x562715628680 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x562715628658 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562715628620 <col:51> 'int' 0
    |-DeclStmt 0x5627156287a0 <line:831:3, col:17>
    | `-VarDecl 0x562715628738 <col:3, col:13> col:13 used t537 'pthread_t':'unsigned long'
    |-CallExpr 0x562715628948 <line:832:3, col:53> 'int'
    | |-ImplicitCastExpr 0x562715628930 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5627156287b8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5627156058f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5627156287f8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5627156287d8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562715628738 't537' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562715628988 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562715628870 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x562715628848 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562715628810 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5627156289a0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562715628890 <col:38> 'void *(void *)' Function 0x562715620930 'P2' 'void *(void *)'
    | `-ParenExpr 0x562715628910 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5627156288e8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5627156288b0 <col:51> 'int' 0
    |-DeclStmt 0x562715628a30 <line:833:3, col:17>
    | `-VarDecl 0x5627156289c8 <col:3, col:13> col:13 used t538 'pthread_t':'unsigned long'
    |-CallExpr 0x562715628bd8 <line:834:3, col:53> 'int'
    | |-ImplicitCastExpr 0x562715628bc0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562715628a48 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5627156058f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562715628a88 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562715628a68 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5627156289c8 't538' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562715628c18 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562715628b00 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x562715628ad8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562715628aa0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x562715628c30 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562715628b20 <col:38> 'void *(void *)' Function 0x5627156239c8 'P3' 'void *(void *)'
    | `-ParenExpr 0x562715628ba0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x562715628b78 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562715628b40 <col:51> 'int' 0
    |-CallExpr 0x562715628c80 <line:835:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562715628c68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562715628c48 <col:3> 'void ()' Function 0x5627155c5350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562715628d50 <line:836:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x562715628ca0 <col:3> '_Bool' lvalue Var 0x56271561ed20 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x562715628d38 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x562715628d18 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x562715628d00 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x562715628cc0 <col:21> 'int' lvalue Var 0x56271561e6e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x562715628ce0 <col:41> 'int' 4
    |-CallExpr 0x562715628da8 <line:837:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562715628d90 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562715628d70 <col:3> 'void ()' Function 0x5627155c5410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562715628e20 <line:838:3, col:36> 'void'
    | |-ImplicitCastExpr 0x562715628e08 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562715628dc8 <col:3> 'void (int)' Function 0x5627155c4ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x562715628e60 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x562715628e48 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x562715628de8 <col:21> '_Bool' lvalue Var 0x56271561ed20 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x562715628eb0 <line:839:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562715628e98 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562715628e78 <col:3> 'void ()' Function 0x5627155c5350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5627156291b8 <line:840:3, col:103> 'int' '='
    | |-DeclRefExpr 0x562715628ed0 <col:3> 'int' lvalue Var 0x56271561f110 'z' 'int'
    | `-ConditionalOperator 0x562715629188 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x562715628f90 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x562715628f48 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x562715628f30 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x562715628ef0 <col:7> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x562715628f78 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x562715628f60 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x562715628f10 <col:25> '_Bool' lvalue Var 0x56271561f2a0 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x562715629170 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x562715628fb0 <col:42> 'int' lvalue Var 0x56271561f850 'z$w_buff0' 'int'
    |   `-ParenExpr 0x562715629150 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x562715629120 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x562715629090 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x562715629048 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x562715629030 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x562715628fd0 <col:55> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x562715629078 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x562715629060 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x562715629010 <col:73> '_Bool' lvalue Var 0x56271561f4f8 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5627156290f0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5627156290b0 <col:90> 'int' lvalue Var 0x56271561f948 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x562715629108 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5627156290d0 <col:102> 'int' lvalue Var 0x56271561f110 'z' 'int'
    |-BinaryOperator 0x5627156293c0 <line:841:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5627156291d8 <col:3> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5627156293a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562715629378 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x562715629298 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x562715629250 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x562715629238 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5627156291f8 <col:20> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x562715629280 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x562715629268 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x562715629218 <col:38> '_Bool' lvalue Var 0x56271561f2a0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562715629330 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5627156292e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5627156292b8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x562715629360 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562715629348 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562715629310 <col:66> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5627156296a8 <line:842:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5627156293e0 <col:3> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x562715629690 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562715629660 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x562715629580 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5627156294a0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x562715629458 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x562715629440 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x562715629400 <col:20> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x562715629488 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x562715629470 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x562715629420 <col:38> '_Bool' lvalue Var 0x56271561f2a0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x562715629560 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x562715629518 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x562715629500 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5627156294c0 <col:56> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x562715629548 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x562715629530 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5627156294e0 <col:74> '_Bool' lvalue Var 0x56271561f4f8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562715629618 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5627156295d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5627156295a0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x562715629648 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562715629630 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5627156295f8 <col:102> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5627156298b0 <line:843:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5627156296c8 <col:3> '_Bool' lvalue Var 0x56271561f2a0 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562715629898 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562715629868 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x562715629788 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x562715629740 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x562715629728 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5627156296e8 <col:20> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x562715629770 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x562715629758 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x562715629708 <col:38> '_Bool' lvalue Var 0x56271561f2a0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562715629820 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5627156297d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5627156297a8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x562715629850 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562715629838 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562715629800 <col:66> '_Bool' lvalue Var 0x56271561f2a0 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x562715629b98 <line:844:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5627156298d0 <col:3> '_Bool' lvalue Var 0x56271561f4f8 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562715629b80 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562715629b50 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x562715629a70 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x562715629990 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x562715629948 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x562715629930 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5627156298f0 <col:20> '_Bool' lvalue Var 0x56271561f8c8 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x562715629978 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x562715629960 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x562715629910 <col:38> '_Bool' lvalue Var 0x56271561f2a0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x562715629a50 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x562715629a08 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5627156299f0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5627156299b0 <col:56> '_Bool' lvalue Var 0x56271561f9c0 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x562715629a38 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x562715629a20 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5627156299d0 <col:74> '_Bool' lvalue Var 0x56271561f4f8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562715629b08 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562715629ac0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562715629a90 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x562715629b38 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562715629b20 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562715629ae8 <col:102> '_Bool' lvalue Var 0x56271561f4f8 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x562715629bf0 <line:845:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562715629bd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562715629bb8 <col:3> 'void ()' Function 0x5627155c5410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562715629c48 <line:846:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562715629c30 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562715629c10 <col:3> 'void ()' Function 0x5627155c5350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562715629fb0 <line:847:3, col:141> '_Bool' '='
    | |-DeclRefExpr 0x562715629c68 <col:3> '_Bool' lvalue Var 0x56271561ed98 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x562715629f98 <col:21, col:141> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x562715629f80 <col:21, col:141> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x562715629f60 <col:22, col:141> 'int'
    |       `-BinaryOperator 0x562715629f40 <col:23, col:140> 'int' '&&'
    |         |-BinaryOperator 0x562715629ea8 <col:23, col:112> 'int' '&&'
    |         | |-BinaryOperator 0x562715629e10 <col:23, col:84> 'int' '&&'
    |         | | |-BinaryOperator 0x562715629d78 <col:23, col:56> 'int' '&&'
    |         | | | |-BinaryOperator 0x562715629ce0 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x562715629cc8 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x562715629c88 <col:23> 'int' lvalue Var 0x56271561eff0 'y' 'int'
    |         | | | | `-IntegerLiteral 0x562715629ca8 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x562715629d58 <col:33, col:56> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x562715629d40 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x562715629d00 <col:33> 'int' lvalue Var 0x56271561e808 '__unbuffered_p0_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x562715629d20 <col:56> 'int' 0
    |         | | `-BinaryOperator 0x562715629df0 <col:61, col:84> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x562715629dd8 <col:61> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x562715629d98 <col:61> 'int' lvalue Var 0x56271561e928 '__unbuffered_p2_EAX' 'int'
    |         | |   `-IntegerLiteral 0x562715629db8 <col:84> 'int' 0
    |         | `-BinaryOperator 0x562715629e88 <col:89, col:112> 'int' '=='
    |         |   |-ImplicitCastExpr 0x562715629e70 <col:89> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x562715629e30 <col:89> 'int' lvalue Var 0x56271561ea48 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x562715629e50 <col:112> 'int' 1
    |         `-BinaryOperator 0x562715629f20 <col:117, col:140> 'int' '=='
    |           |-ImplicitCastExpr 0x562715629f08 <col:117> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x562715629ec8 <col:117> 'int' lvalue Var 0x56271561eb68 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x562715629ee8 <col:140> 'int' 0
    |-CallExpr 0x56271562a020 <line:848:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562715629ff0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562715629fd0 <col:3> 'void ()' Function 0x5627155c5410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56271562a098 <line:849:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56271562a080 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56271562a040 <col:3> 'void (int)' Function 0x5627155c50d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x56271562a0d8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56271562a0c0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56271562a060 <col:21> '_Bool' lvalue Var 0x56271561ed98 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x56271562a110 <line:850:3, col:10>
      `-IntegerLiteral 0x56271562a0f0 <col:10> 'int' 0
