TranslationUnitDecl 0x55d39e629f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55d39e62a848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55d39e62a520 '__int128'
|-TypedefDecl 0x55d39e62a8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55d39e62a540 'unsigned __int128'
|-TypedefDecl 0x55d39e62abc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55d39e62a990 'struct __NSConstantString_tag'
|   `-Record 0x55d39e62a910 '__NSConstantString_tag'
|-TypedefDecl 0x55d39e62ac68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55d39e62ac20 'char *'
|   `-BuiltinType 0x55d39e62a020 'char'
|-TypedefDecl 0x55d39e669b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55d39e62af00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55d39e62ad40 'struct __va_list_tag'
|     `-Record 0x55d39e62acc0 '__va_list_tag'
|-FunctionDecl 0x55d39e669c80 <pthread-wmm/rfi009_pso.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55d39e669e50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55d39e669d80 <col:31> col:34 'int'
|-FunctionDecl 0x55d39e669fc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55d39e66a0f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55d39e66a238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55d39e66a1a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55d39e66a468 <col:40, col:99>
|   |-IfStmt 0x55d39e66a438 <col:42, col:88>
|   | |-UnaryOperator 0x55d39e66a318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55d39e66a300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55d39e66a2e0 <col:47> 'int' lvalue ParmVar 0x55d39e66a1a8 'expression' 'int'
|   | `-CompoundStmt 0x55d39e66a420 <col:59, col:88>
|   |   `-LabelStmt 0x55d39e66a408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55d39e66a398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55d39e66a380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55d39e66a330 <col:68> 'void () __attribute__((noreturn))' Function 0x55d39e66a0f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55d39e66a450 <col:89>
|   `-ReturnStmt 0x55d39e66a458 <col:91>
|-FunctionDecl 0x55d39e66a4b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55d39e66a570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55d39e66a8f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55d39e66a628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55d39e66a6a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55d39e66a728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55d39e66a7a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55d39e66a9b0 <line:11:22>
|-FunctionDecl 0x55d39e68ff10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55d39e66aa20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55d39e66aaa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55d39e68fd40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55d39e68fdc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55d39e68ffd0 <line:14:22>
|-FunctionDecl 0x55d39e690280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55d39e690040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55d39e6900c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55d39e690140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55d39e690338 <line:16:22>
|-TypedefDecl 0x55d39e6903a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55d39e62a0e0 'unsigned char'
|-TypedefDecl 0x55d39e690418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55d39e62a100 'unsigned short'
|-TypedefDecl 0x55d39e690488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55d39e62a120 'unsigned int'
|-TypedefDecl 0x55d39e6904f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55d39e62a140 'unsigned long'
|-TypedefDecl 0x55d39e690568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55d39e62a040 'signed char'
|-TypedefDecl 0x55d39e6905d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55d39e62a0e0 'unsigned char'
|-TypedefDecl 0x55d39e690648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55d39e62a060 'short'
|-TypedefDecl 0x55d39e6906b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55d39e62a100 'unsigned short'
|-TypedefDecl 0x55d39e690728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55d39e62a080 'int'
|-TypedefDecl 0x55d39e690798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55d39e62a120 'unsigned int'
|-TypedefDecl 0x55d39e690808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55d39e62a0a0 'long'
|-TypedefDecl 0x55d39e690878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55d39e62a140 'unsigned long'
|-TypedefDecl 0x55d39e6908e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55d39e62a0a0 'long'
|-TypedefDecl 0x55d39e690958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55d39e62a140 'unsigned long'
|-TypedefDecl 0x55d39e6909c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55d39e62a140 'unsigned long'
|-TypedefDecl 0x55d39e690a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55d39e62a120 'unsigned int'
|-TypedefDecl 0x55d39e690aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55d39e62a120 'unsigned int'
|-TypedefDecl 0x55d39e690b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55d39e62a140 'unsigned long'
|-TypedefDecl 0x55d39e690b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55d39e62a140 'unsigned long'
|-TypedefDecl 0x55d39e690bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55d39e62a120 'unsigned int'
|-TypedefDecl 0x55d39e690c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55d39e62a140 'unsigned long'
|-TypedefDecl 0x55d39e690cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55d39e62a0a0 'long'
|-TypedefDecl 0x55d39e690d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55d39e62a0a0 'long'
|-TypedefDecl 0x55d39e690dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55d39e62a080 'int'
|-RecordDecl 0x55d39e690e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55d39e690f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55d39e691030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55d39e690fd0 'struct __fsid_t' sugar
|   `-RecordType 0x55d39e690eb0 '__fsid_t'
|     `-Record 0x55d39e690e30 ''
|-TypedefDecl 0x55d39e6910b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55d39e62a0a0 'long'
|-TypedefDecl 0x55d39e691128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55d39e62a140 'unsigned long'
|-TypedefDecl 0x55d39e691198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55d39e62a140 'unsigned long'
|-TypedefDecl 0x55d39e691208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55d39e62a120 'unsigned int'
|-TypedefDecl 0x55d39e691278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55d39e62a0a0 'long'
|-TypedefDecl 0x55d39e6912e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55d39e62a120 'unsigned int'
|-TypedefDecl 0x55d39e691358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55d39e62a0a0 'long'
|-TypedefDecl 0x55d39e6913c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55d39e62a080 'int'
|-TypedefDecl 0x55d39e691438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55d39e62a080 'int'
|-TypedefDecl 0x55d39e6914a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55d39e62a080 'int'
|-TypedefDecl 0x55d39e691518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55d39e62a7a0 'void *'
|   `-BuiltinType 0x55d39e629fe0 'void'
|-TypedefDecl 0x55d39e691588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55d39e62a0a0 'long'
|-TypedefDecl 0x55d39e6915f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55d39e62a0a0 'long'
|-TypedefDecl 0x55d39e691668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55d39e62a0a0 'long'
|-TypedefDecl 0x55d39e6916d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55d39e62a140 'unsigned long'
|-TypedefDecl 0x55d39e691748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55d39e62a140 'unsigned long'
|-TypedefDecl 0x55d39e6917b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55d39e62a140 'unsigned long'
|-TypedefDecl 0x55d39e691828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55d39e62a140 'unsigned long'
|-TypedefDecl 0x55d39e691898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55d39e62a0a0 'long'
|-TypedefDecl 0x55d39e691908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55d39e62a0a0 'long'
|-TypedefDecl 0x55d39e691978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55d39e62a0a0 'long'
|-TypedefDecl 0x55d39e6919e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55d39e62a140 'unsigned long'
|-TypedefDecl 0x55d39e691a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55d39e691a40 '__off64_t' sugar
|   |-Typedef 0x55d39e690d68 '__off64_t'
|   `-BuiltinType 0x55d39e62a0a0 'long'
|-TypedefDecl 0x55d39e691b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55d39e691b30 '__quad_t *'
|   `-TypedefType 0x55d39e691ad0 '__quad_t' sugar
|     |-Typedef 0x55d39e6908e8 '__quad_t'
|     `-BuiltinType 0x55d39e62a0a0 'long'
|-TypedefDecl 0x55d39e691be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55d39e62ac20 'char *'
|   `-BuiltinType 0x55d39e62a020 'char'
|-TypedefDecl 0x55d39e691c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55d39e62a0a0 'long'
|-TypedefDecl 0x55d39e691cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55d39e62a120 'unsigned int'
|-FunctionDecl 0x55d39e691e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55d39e691d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55d39e692148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55d39e692138 <line:73:3, col:34>
|     `-CallExpr 0x55d39e6920f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55d39e6920e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55d39e692070 <col:10> '<builtin fn type>' Function 0x55d39e691ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55d39e692120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55d39e692090 <col:29> 'unsigned int' lvalue ParmVar 0x55d39e691d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x55d39e691ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55d39e691f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55d39e691ff0 <col:10> Implicit
| `-ConstAttr 0x55d39e692048 <col:10> Implicit
|-FunctionDecl 0x55d39e6922a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55d39e692198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55d39e6925b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55d39e6925a8 <line:78:3, col:34>
|     `-CallExpr 0x55d39e692568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55d39e692550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55d39e6924d8 <col:10> '<builtin fn type>' Function 0x55d39e692348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55d39e692590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55d39e6924f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55d39e692198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55d39e692348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55d39e6923e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55d39e692458 <col:10> Implicit
| `-ConstAttr 0x55d39e6924b0 <col:10> Implicit
|-TypedefDecl 0x55d39e6925e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55d39e62a140 'unsigned long'
|-TypedefDecl 0x55d39e692678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55d39e692640 '__time_t' sugar
|   |-Typedef 0x55d39e691278 '__time_t'
|   `-BuiltinType 0x55d39e62a0a0 'long'
|-RecordDecl 0x55d39e6926d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55d39e692788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55d39e692818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55d39e6928a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55d39e692870 '__pid_t' sugar
|   |-Typedef 0x55d39e690dd8 '__pid_t'
|   `-BuiltinType 0x55d39e62a080 'int'
|-RecordDecl 0x55d39e692900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55d39e6929c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55d39e692a10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55d39e692ad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55d39e692b38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55d39e62a140 'unsigned long'
|-RecordDecl 0x55d39e692b90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55d39e694e70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55d39e694f20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55d39e694ec0 'struct cpu_set_t' sugar
|   `-RecordType 0x55d39e692c10 'cpu_set_t'
|     `-Record 0x55d39e692b90 ''
|-FunctionDecl 0x55d39e6951f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55d39e694fc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55d39e6950d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55d39e6952a8 <line:108:19>
|-FunctionDecl 0x55d39e695480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55d39e695310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55d39e695528 <col:69>
|-FunctionDecl 0x55d39e6956a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55d39e695590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55d39e695748 <col:64>
|-FunctionDecl 0x55d39e695a08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55d39e6957b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55d39e6958e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55d39e695ab8 <line:114:22>
|-FunctionDecl 0x55d39e695e60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55d39e695b20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55d39e695c18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55d39e695f10 <col:88>
|-FunctionDecl 0x55d39e6961c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55d39e695f78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55d39e695ff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55d39e696088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55d39e696280 <col:62>
|-FunctionDecl 0x55d39e6963f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55d39e6962e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55d39e6964a0 <col:63>
|-FunctionDecl 0x55d39e6965c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55d39e696668 <col:47>
|-FunctionDecl 0x55d39e696770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55d39e6966d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55d39e696818 <col:69>
|-FunctionDecl 0x55d39e696920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55d39e696888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55d39e6969c8 <col:69>
|-FunctionDecl 0x55d39e696c88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55d39e696a30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55d39e696b68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55d39e696d38 <col:88>
|-TypedefDecl 0x55d39e696dc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55d39e696d90 '__clock_t' sugar
|   |-Typedef 0x55d39e6910b8 '__clock_t'
|   `-BuiltinType 0x55d39e62a0a0 'long'
|-TypedefDecl 0x55d39e6977e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55d39e696e20 '__clockid_t' sugar
|   |-Typedef 0x55d39e6914a8 '__clockid_t'
|   `-BuiltinType 0x55d39e62a080 'int'
|-TypedefDecl 0x55d39e697878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55d39e697840 '__timer_t' sugar
|   |-Typedef 0x55d39e691518 '__timer_t'
|   `-PointerType 0x55d39e62a7a0 'void *'
|     `-BuiltinType 0x55d39e629fe0 'void'
|-RecordDecl 0x55d39e6978d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55d39e697990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55d39e6979f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55d39e697a60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55d39e697ac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55d39e697b30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55d39e697b98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55d39e697c00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55d39e697c68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55d39e697cd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55d39e697d38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55d39e697da0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55d39e697df0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55d39e697eb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55d39e697f28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55d39e697fd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55d39e6981a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55d39e698240 <col:45>
|-FunctionDecl 0x55d39e698420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55d39e698310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55d39e6984c8 <col:54>
|-FunctionDecl 0x55d39e6986c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55d39e698530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55d39e6985a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55d39e698778 <line:158:22>
| `-ConstAttr 0x55d39e699410 <col:63>
|-FunctionDecl 0x55d39e699610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55d39e699508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55d39e6996b8 <col:56>
|-FunctionDecl 0x55d39e699a60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55d39e699728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55d39e6997a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55d39e699820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55d39e699918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55d39e699b20 <col:54>
|-RecordDecl 0x55d39e699b78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55d39e699c28 parent 0x55d39e629f88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55d39e699e88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55d39e699f28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55d39e699f90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55d39e699ff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55d39e69a0e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55d39e69a208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55d39e69a1b0 'struct __locale_struct *'
|   `-ElaboratedType 0x55d39e69a140 'struct __locale_struct' sugar
|     `-RecordType 0x55d39e699c00 'struct __locale_struct'
|       `-Record 0x55d39e699b78 '__locale_struct'
|-TypedefDecl 0x55d39e69a2b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55d39e69a280 '__locale_t' sugar
|   |-Typedef 0x55d39e69a208 '__locale_t'
|   `-PointerType 0x55d39e69a1b0 'struct __locale_struct *'
|     `-ElaboratedType 0x55d39e69a140 'struct __locale_struct' sugar
|       `-RecordType 0x55d39e699c00 'struct __locale_struct'
|         `-Record 0x55d39e699b78 '__locale_struct'
|-FunctionDecl 0x55d39e69a6b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55d39e69a328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55d39e69a3a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55d39e69a438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55d39e69a4c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55d39e69a540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55d39e69a778 <col:40>
|-FunctionDecl 0x55d39e69a968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55d39e69a840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55d39e69aa10 <col:66>
|-FunctionDecl 0x55d39e69ab20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55d39e69aa78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55d39e69abc8 <col:69>
|-FunctionDecl 0x55d39e69adf8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55d39e69ac30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55d39e69acc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55d39e69aea8 <col:52>
|-FunctionDecl 0x55d39e69b050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55d39e69af10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55d39e69afa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55d39e69b100 <col:55>
|-FunctionDecl 0x55d39e69b298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55d39e69b180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55d39e69b340 <col:62>
|-FunctionDecl 0x55d39e69b578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55d39e69b3a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55d39e69b620 <col:60>
|-FunctionDecl 0x55d39e69b848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55d39e69b6a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55d39e69b720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55d39e69b8f8 <col:44>
|-FunctionDecl 0x55d39e69bb08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55d39e69b960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55d39e69b9e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55d39e69bbb8 <col:49>
|-VarDecl 0x55d39e69bcb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55d39e69bd38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55d39e69bdb8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55d39e69be80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55d39e69bfb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55d39e69c050 <col:42>
|-VarDecl 0x55d39e69c0c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55d39e69c140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55d39e69c2c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55d39e69c1b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55d39e69c370 <col:57>
|-FunctionDecl 0x55d39e69d4f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55d39e69c3f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55d39e69d598 <col:56>
|-FunctionDecl 0x55d39e69d6a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55d39e69d618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55d39e69d750 <col:59>
|-FunctionDecl 0x55d39e69d858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55d39e69d7c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55d39e69d900 <col:48>
| `-ConstAttr 0x55d39e69d958 <col:89>
|-FunctionDecl 0x55d39e69dbb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55d39e69da08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55d39e69da98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55d39e69de18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55d39e69dca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55d39e69dd38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55d39e69dec8 <col:88>
|-FunctionDecl 0x55d39e69e060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55d39e69df30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55d39e69dfc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55d39e69e110 <col:88>
|-FunctionDecl 0x55d39e69e328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55d39e69e178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55d39e69e208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55d39e69e3d8 <line:209:22>
|-FunctionDecl 0x55d39e69e778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55d39e69e440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55d39e69e500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55d39e69e590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55d39e69e620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55d39e69ea78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55d39e69e878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55d39e69e950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55d39e69eb28 <col:85>
|-FunctionDecl 0x55d39e69ef18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55d39e69eb90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55d39e69ecc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55d39e69edd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55d39e69efd0 <col:52>
|-FunctionDecl 0x55d39e69f148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55d39e69f038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55d39e69f1f0 <col:61>
|-FunctionDecl 0x55d39e69f668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55d39e69f258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55d39e69f2d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55d39e69f408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55d39e69f510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55d39e69f728 <col:62>
|-FunctionDecl 0x55d39e69f948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55d39e69f790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55d39e69f820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55d39e69f9f8 <line:222:22>
|-FunctionDecl 0x55d39e69faf8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55d39e69fa60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55d39e69fba0 <col:65>
|-TypedefDecl 0x55d39e69fc10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55d39e62a140 'unsigned long'
|-RecordDecl 0x55d39e69fc68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55d39e69fdb0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55d39e69fe18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55d39e69fec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55d39e69fe70 'union pthread_attr_t' sugar
|   `-RecordType 0x55d39e69fcf0 'union pthread_attr_t'
|     `-Record 0x55d39e69fc68 'pthread_attr_t'
|-RecordDecl 0x55d39e69ff20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55d39e6a0098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55d39e6a0110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55d39e6a01c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55d39e6a0160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55d39e69ffa0 'struct __pthread_internal_list'
|     `-Record 0x55d39e69ff20 '__pthread_internal_list'
|-RecordDecl 0x55d39e6a0230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55d39e6a02d8 parent 0x55d39e629f88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55d39e6a03b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55d39e6a0418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55d39e6a0480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55d39e6a4530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55d39e6a4598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55d39e6a4600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55d39e6a4688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55d39e6a4740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55d39e6a4830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55d39e6a4898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55d39e6a4a20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55d39e6a49c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55d39e6a02b0 'pthread_mutex_t'
|     `-Record 0x55d39e6a0230 ''
|-RecordDecl 0x55d39e6a4a90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55d39e6a4bd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55d39e6a4c38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55d39e6a4cf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55d39e6a4c90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55d39e6a4b10 'pthread_mutexattr_t'
|     `-Record 0x55d39e6a4a90 ''
|-RecordDecl 0x55d39e6a4d60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55d39e6a4e08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55d39e6a4ed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55d39e6a4f38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55d39e6a4fa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55d39e6a5008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55d39e6a5070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55d39e6a50d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55d39e6a5140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55d39e6a51a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55d39e6a5260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi009_pso.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/rfi009_pso.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55d39e6a5350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55d39e6a53b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55d39e6a5540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55d39e6a5490 'union pthread_cond_t' sugar
|   `-RecordType 0x55d39e6a4de0 'pthread_cond_t'
|     `-Record 0x55d39e6a4d60 ''
|-RecordDecl 0x55d39e6a55b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55d39e6a56b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55d39e6a5718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55d39e6a57d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55d39e6a5770 'union pthread_condattr_t' sugar
|   `-RecordType 0x55d39e6a5630 'pthread_condattr_t'
|     `-Record 0x55d39e6a55b0 ''
|-TypedefDecl 0x55d39e6a5858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55d39e62a120 'unsigned int'
|-TypedefDecl 0x55d39e6a58c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55d39e62a080 'int'
|-RecordDecl 0x55d39e6a5920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55d39e6a59c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55d39e6a5a90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55d39e6a5af8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55d39e6a5b60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55d39e6a5bc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55d39e6a5c30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55d39e6a5c98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55d39e6a5d00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55d39e6a5d68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55d39e6a5dd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55d39e6a5e38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55d39e6a5ea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55d39e6a5f50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi009_pso.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/rfi009_pso.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x55d39e6a5ff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55d39e6a6060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55d39e6a61b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55d39e6a6150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55d39e6a59a0 'pthread_rwlock_t'
|     `-Record 0x55d39e6a5920 ''
|-RecordDecl 0x55d39e6a6220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55d39e6a6360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55d39e6a63c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55d39e6a6480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55d39e6a6420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55d39e6a62a0 'pthread_rwlockattr_t'
|     `-Record 0x55d39e6a6220 ''
|-TypedefDecl 0x55d39e6a8560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55d39e62a084 'volatile int' volatile
|   `-BuiltinType 0x55d39e62a080 'int'
|-RecordDecl 0x55d39e6a85b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55d39e6a8700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55d39e6a8768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55d39e6a8820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55d39e6a87c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55d39e6a8640 'pthread_barrier_t'
|     `-Record 0x55d39e6a85b8 ''
|-RecordDecl 0x55d39e6a8890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55d39e6a8990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55d39e6a89f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55d39e6a8ab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55d39e6a8a50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55d39e6a8910 'pthread_barrierattr_t'
|     `-Record 0x55d39e6a8890 ''
|-TypedefDecl 0x55d39e6a8bc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55d39e6a8b60 'long [8]' 8 
|   `-BuiltinType 0x55d39e62a0a0 'long'
|-EnumDecl 0x55d39e6a8c20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55d39e6a8ce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55d39e6a8d38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55d39e6a8d88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55d39e6a8e58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55d39e6a8ea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55d39e6a8ef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55d39e6a8f48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55d39e6a8fd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55d39e6a8fb8 <col:26> 'int'
| |   `-DeclRefExpr 0x55d39e6a8f98 <col:26> 'int' EnumConstant 0x55d39e6a8e58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55d39e6a9058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55d39e6a9040 <col:29> 'int'
| |   `-DeclRefExpr 0x55d39e6a9020 <col:29> 'int' EnumConstant 0x55d39e6a8ea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55d39e6a90e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55d39e6a90c8 <col:30> 'int'
| |   `-DeclRefExpr 0x55d39e6a90a8 <col:30> 'int' EnumConstant 0x55d39e6a8ef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55d39e6a9168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55d39e6a9150 <col:27> 'int'
|     `-DeclRefExpr 0x55d39e6a9130 <col:27> 'int' EnumConstant 0x55d39e6a8fd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55d39e6a91b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55d39e6a9288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55d39e6a9310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55d39e6a92f8 <col:30> 'int'
| |   `-DeclRefExpr 0x55d39e6a92d8 <col:30> 'int' EnumConstant 0x55d39e6a9288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55d39e6a9360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55d39e6a93e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55d39e6a93d0 <col:29> 'int'
|     `-DeclRefExpr 0x55d39e6a93b0 <col:29> 'int' EnumConstant 0x55d39e6a9360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55d39e6a9438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55d39e6a9508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55d39e6a9570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55d39e6a95c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55d39e6a9610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55d39e6a96d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55d39e6a9728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55d39e6a9778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55d39e6a9800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55d39e6a97e8 <col:31> 'int'
|     `-DeclRefExpr 0x55d39e6a97c8 <col:31> 'int' EnumConstant 0x55d39e6a96d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55d39e6a9850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55d39e6a9918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55d39e6a9968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55d39e6a99b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55d39e6a9a88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55d39e6a9ad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55d39e6a9b28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55d39e6a9bf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55d39e6a9c48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55d39e6a9c98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55d39e6a9ed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55d39e6a9f40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55d39e6a9fa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55d39e6aa0c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55d39e6aa118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55d39e6aa1e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55d39e6aa238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55d39e6aa288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55d39e6aa358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55d39e6aa3a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55d39e6aa9d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55d39e6aa4a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55d39e6aa5c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d39e6aa7c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55d39e6aa840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55d39e6aaa98 <col:47>
| |-NonNullAttr 0x55d39e6aaaf0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55d39e6aab28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55d39e6aac50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55d39e6aab80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55d39e6aaea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55d39e6aad08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55d39e6aad88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55d39e6ab078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55d39e6aaf68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55d39e6ab120 <col:60>
|-FunctionDecl 0x55d39e6ab270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55d39e6ab310 <col:54>
| `-ConstAttr 0x55d39e6ab368 <col:95>
|-FunctionDecl 0x55d39e6abda0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55d39e6ab3a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55d39e6ab418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55d39e6abe50 <line:395:19>
| `-ConstAttr 0x55d39e6abea8 <col:60>
|-FunctionDecl 0x55d39e6ac078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55d39e6abf40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55d39e6ac120 <col:71>
| `-NonNullAttr 0x55d39e6ac178 <col:112, col:126> 1
|-FunctionDecl 0x55d39e6ac280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55d39e6ac1c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55d39e6ac328 <line:398:22>
| `-NonNullAttr 0x55d39e6ac380 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6ac5a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55d39e6ac3c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55d39e6ac448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55d39e6ac658 <line:401:22>
| `-NonNullAttr 0x55d39e6ac6b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d39e6ac8b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55d39e6ac6f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d39e6ac778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55d39e6ac968 <line:404:22>
| `-NonNullAttr 0x55d39e6ac9c0 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6acc18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55d39e6aca08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55d39e6acab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55d39e6accc8 <line:407:22>
| `-NonNullAttr 0x55d39e6acd20 <col:63, col:80> 1 2
|-FunctionDecl 0x55d39e6adf78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55d39e6addc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d39e6ade38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55d39e6ae028 <line:410:22>
| `-NonNullAttr 0x55d39e6ae080 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6ae2b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55d39e6ae0c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d39e6ae158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55d39e6ae368 <line:413:22>
| `-NonNullAttr 0x55d39e6ae3c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d39e6ae5f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55d39e6ae408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d39e6ae498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55d39e6ae6a8 <col:37>
| `-NonNullAttr 0x55d39e6ae700 <col:78, col:95> 1 2
|-FunctionDecl 0x55d39e6ae8e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d39e6ae748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d39e6ae7c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55d39e6ae998 <line:419:22>
| `-NonNullAttr 0x55d39e6ae9f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d39e6aeb78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55d39e6aea38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d39e6aeab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55d39e6aec28 <line:421:22>
| `-NonNullAttr 0x55d39e6aec80 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6afe58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d39e6aecc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d39e6aed48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55d39e6aff08 <line:424:22>
| `-NonNullAttr 0x55d39e6aff60 <col:63, col:80> 1 2
|-FunctionDecl 0x55d39e6b00e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55d39e6affa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d39e6b0028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55d39e6b0198 <line:427:22>
| `-NonNullAttr 0x55d39e6b01f0 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6b0398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d39e6b0238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d39e6b02b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55d39e6b0448 <line:430:22>
| `-NonNullAttr 0x55d39e6b04a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d39e6b0628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55d39e6b04e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d39e6b0568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55d39e6b06d8 <line:432:22>
| `-NonNullAttr 0x55d39e6b0730 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6b0958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55d39e6b0778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d39e6b07f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55d39e6b0a08 <line:435:22>
| |-NonNullAttr 0x55d39e6b0a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55d39e6b0a98 <col:100> "" ""
|-FunctionDecl 0x55d39e6b0ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55d39e6b0ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d39e6b0b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55d39e6b0d58 <line:438:22>
| |-NonNullAttr 0x55d39e6b0db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x55d39e6b0df8 <col:97> "" ""
|-FunctionDecl 0x55d39e6b0fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55d39e6b0e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d39e6b0ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55d39e6b1098 <line:441:22>
| `-NonNullAttr 0x55d39e6b10f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d39e6b1270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55d39e6b1138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d39e6b11b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55d39e6b1320 <line:444:22>
| `-NonNullAttr 0x55d39e6b1378 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6b1668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55d39e6b13c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d39e6b1448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55d39e6b14c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55d39e6b1720 <line:448:22>
| `-NonNullAttr 0x55d39e6b1778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55d39e6b1a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55d39e6b17d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d39e6b1850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55d39e6b18c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55d39e6b1ae0 <col:43>
| `-NonNullAttr 0x55d39e6b1b38 <col:84, col:98> 1
|-FunctionDecl 0x55d39e6b1e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55d39e6b1b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55d39e6b1c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55d39e6b1c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55d39e6b1ef8 <line:453:22>
| `-NonNullAttr 0x55d39e6b1f50 <col:63, col:77> 3
|-FunctionDecl 0x55d39e6b2228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55d39e6b1f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55d39e6b2018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55d39e6b20a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55d39e6b22e0 <line:457:22>
| `-NonNullAttr 0x55d39e6b2338 <col:63, col:80> 2 3
|-FunctionDecl 0x55d39e6b2528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55d39e6b2388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55d39e6b2408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55d39e6b25d8 <line:459:22>
|-FunctionDecl 0x55d39e6b29a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55d39e6b26a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55d39e6b2840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55d39e6b2a58 <col:52, col:69> 1 2
|-FunctionDecl 0x55d39e6b2c00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55d39e6b2ae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55d39e6b2b60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55d39e6b2e10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55d39e6b2cc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55d39e6b2d48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55d39e6b2f68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55d39e6b2ed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55d39e6b30a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55d39e6b3148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55d39e6b31f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55d39e6b32e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55d39e6b3350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55d39e6b3520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/rfi009_pso.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55d39e6b3618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55d39e6b36d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55d39e6b3670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55d39e6b31d0 '__pthread_unwind_buf_t'
| |   `-Record 0x55d39e6b3148 ''
| `-AlignedAttr 0x55d39e6b3728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55d39e6b37a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55d39e6b3900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55d39e6b3968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55d39e6b39d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55d39e6b3a38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55d39e6b3c40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55d39e6b3b30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55d39e6b3e20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55d39e6b3cf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55d39e6b3fe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55d39e6b3ed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55d39e6b4088 <line:488:22>
|-RecordDecl 0x55d39e6b40e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55d39e6b43f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55d39e6b4258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55d39e6b42d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55d39e6b44a8 <col:86>
| `-ReturnsTwiceAttr 0x55d39e6b4500 <col:12> Implicit
|-FunctionDecl 0x55d39e6b4828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55d39e6b45d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55d39e6b46e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55d39e6b48d8 <line:494:22>
| `-NonNullAttr 0x55d39e6b4930 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6b4aa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55d39e6b4978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55d39e6b4b50 <line:496:22>
| `-NonNullAttr 0x55d39e6b4ba8 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6b4cb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55d39e6b4bf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55d39e6b4d58 <line:498:22>
| `-NonNullAttr 0x55d39e6b4db0 <col:52, col:66> 1
|-FunctionDecl 0x55d39e6b4ee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55d39e6b4e30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55d39e6b4f90 <line:500:22>
| `-NonNullAttr 0x55d39e6b4fe8 <col:52, col:66> 1
|-FunctionDecl 0x55d39e6b5228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55d39e6b5038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55d39e6b50c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55d39e6b52d8 <col:36>
| `-NonNullAttr 0x55d39e6b5330 <col:66, col:83> 1 2
|-FunctionDecl 0x55d39e6b5430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55d39e6b5378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55d39e6b54d8 <line:505:22>
| `-NonNullAttr 0x55d39e6b5530 <col:52, col:66> 1
|-FunctionDecl 0x55d39e6b57c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d39e6b55e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55d39e6b5660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55d39e6b5878 <line:509:22>
| `-NonNullAttr 0x55d39e6b58d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d39e6b5b98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55d39e6b5918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55d39e6b5998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55d39e6b5a18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55d39e6b5c50 <line:513:22>
| `-NonNullAttr 0x55d39e6b5ca8 <col:63, col:80> 1 3
|-FunctionDecl 0x55d39e6b5e40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55d39e6b5cf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55d39e6b5ee8 <line:515:22>
| `-NonNullAttr 0x55d39e6b5f40 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6b6128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55d39e6b5ff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55d39e6b61d0 <line:517:22>
| `-NonNullAttr 0x55d39e6b6228 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6b6330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55d39e6b6278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55d39e6b63d8 <line:519:22>
| `-NonNullAttr 0x55d39e6b6430 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6b6658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d39e6b6478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55d39e6b64f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55d39e6b6708 <line:523:22>
| `-NonNullAttr 0x55d39e6b6760 <col:63, col:80> 1 2
|-FunctionDecl 0x55d39e6b6968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55d39e6b67a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d39e6b6828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55d39e6b6a18 <line:526:22>
| `-NonNullAttr 0x55d39e6b6a70 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6b6c18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d39e6b6ab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55d39e6b6b38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55d39e6b6cc8 <line:529:22>
| `-NonNullAttr 0x55d39e6b6d20 <col:63, col:80> 1 2
|-FunctionDecl 0x55d39e6b7f20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55d39e6b6d68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d39e6b7e60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55d39e6b7fd0 <line:531:22>
| `-NonNullAttr 0x55d39e6b8028 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6b81d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d39e6b8078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55d39e6b80f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55d39e6b8288 <line:535:22>
| `-NonNullAttr 0x55d39e6b82e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d39e6b8468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55d39e6b8328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d39e6b83a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55d39e6b8518 <line:538:22>
| `-NonNullAttr 0x55d39e6b8570 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6b8718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d39e6b85b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55d39e6b8638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55d39e6b87c8 <line:542:22>
| `-NonNullAttr 0x55d39e6b8820 <col:63, col:80> 1 2
|-FunctionDecl 0x55d39e6b89a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55d39e6b8868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d39e6b88e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55d39e6b8a58 <line:545:22>
| `-NonNullAttr 0x55d39e6b8ab0 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6b8c98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55d39e6b8af8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d39e6b8b78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55d39e6b8d48 <line:548:22>
| `-NonNullAttr 0x55d39e6b8da0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d39e6b9f58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55d39e6b8de8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d39e6b9e98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55d39e6ba008 <line:551:22>
| `-NonNullAttr 0x55d39e6ba060 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6ba398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55d39e6ba140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55d39e6ba250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55d39e6ba448 <col:29>
| `-NonNullAttr 0x55d39e6ba4a0 <col:70, col:84> 1
|-FunctionDecl 0x55d39e6ba618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d39e6ba4e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d39e6ba6c0 <line:556:22>
| `-NonNullAttr 0x55d39e6ba718 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6ba820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d39e6ba768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d39e6ba8c8 <line:558:22>
| `-NonNullAttr 0x55d39e6ba920 <col:52, col:66> 1
|-FunctionDecl 0x55d39e6baa20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d39e6ba968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d39e6baac8 <line:560:19>
| `-NonNullAttr 0x55d39e6bab20 <col:49, col:63> 1
|-FunctionDecl 0x55d39e6bad58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55d39e6bab68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55d39e6babf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55d39e6bae08 <col:39>
| `-NonNullAttr 0x55d39e6bae90 <col:69, col:86> 1 2
|-FunctionDecl 0x55d39e6baf90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d39e6baed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d39e6bb038 <line:565:22>
| `-NonNullAttr 0x55d39e6bb090 <col:52, col:66> 1
|-FunctionDecl 0x55d39e6bb190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d39e6bb0d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d39e6bb238 <line:567:22>
| `-NonNullAttr 0x55d39e6bb290 <col:52, col:66> 1
|-FunctionDecl 0x55d39e6bb448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55d39e6bb2d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55d39e6bb368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55d39e6bb4f8 <col:39>
| `-NonNullAttr 0x55d39e6bb550 <col:69, col:86> 1 2
|-FunctionDecl 0x55d39e6bb650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d39e6bb598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d39e6bb6f8 <line:572:22>
| `-NonNullAttr 0x55d39e6bb750 <col:52, col:66> 1
|-FunctionDecl 0x55d39e6bb938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55d39e6bb800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55d39e6bb9e0 <line:574:22>
| `-NonNullAttr 0x55d39e6bba38 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6bbb40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55d39e6bba88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55d39e6bbbe8 <line:576:22>
| `-NonNullAttr 0x55d39e6bbc40 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6bbea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d39e6bbc88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55d39e6bbd08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55d39e6bbf50 <line:580:22>
| `-NonNullAttr 0x55d39e6bbfa8 <col:63, col:80> 1 2
|-FunctionDecl 0x55d39e6bc1b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55d39e6bbff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55d39e6bc078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55d39e6bc268 <line:583:22>
| `-NonNullAttr 0x55d39e6bc2c0 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6bc468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d39e6bc308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55d39e6bc388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55d39e6bc518 <line:587:22>
| `-NonNullAttr 0x55d39e6bc570 <col:63, col:80> 1 2
|-FunctionDecl 0x55d39e6bc6f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55d39e6bc5b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55d39e6bc638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55d39e6bc7a8 <col:36>
| `-NonNullAttr 0x55d39e6bc800 <col:77, col:91> 1
|-FunctionDecl 0x55d39e6bcb38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55d39e6bc8e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55d39e6bc9f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55d39e6bcbe8 <line:592:22>
| `-NonNullAttr 0x55d39e6bcc40 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6bcdb8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55d39e6bcc88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55d39e6bce60 <line:594:22>
| `-NonNullAttr 0x55d39e6bcee0 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6bcfe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55d39e6bcf28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55d39e6bd088 <line:596:22>
| `-NonNullAttr 0x55d39e6bd0e0 <col:52, col:66> 1
|-FunctionDecl 0x55d39e6bd1e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55d39e6bd128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55d39e6bd288 <line:598:22>
| `-NonNullAttr 0x55d39e6bd2e0 <col:52, col:66> 1
|-FunctionDecl 0x55d39e6bd508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55d39e6bd328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55d39e6bd3a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55d39e6bd5b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55d39e6bd8e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55d39e6bd638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55d39e6bd6b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55d39e6bd740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55d39e6bd9a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55d39e6bdbb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55d39e6bda80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55d39e6bdc60 <line:607:22>
| `-NonNullAttr 0x55d39e6bdcb8 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6bddc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55d39e6bdd08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55d39e6bde68 <line:609:22>
| `-NonNullAttr 0x55d39e6bdef0 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6be118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d39e6bdf38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55d39e6bdfb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55d39e6be1c8 <line:613:22>
| `-NonNullAttr 0x55d39e6be220 <col:63, col:80> 1 2
|-FunctionDecl 0x55d39e6be428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55d39e6be268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55d39e6be2e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55d39e6be4d8 <col:37>
| `-NonNullAttr 0x55d39e6be530 <col:78, col:92> 1
|-FunctionDecl 0x55d39e6be748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55d39e6be578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55d39e6be620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55d39e6be7f8 <line:619:22>
| `-NonNullAttr 0x55d39e6be850 <col:63, col:80> 1 2
|-FunctionDecl 0x55d39e6bea18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55d39e6be898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55d39e6be910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55d39e6beac8 <line:622:22>
| `-NonNullAttr 0x55d39e6beb20 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6bedc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55d39e6bec00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55d39e6bec80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55d39e6bee78 <line:624:22>
| `-NonNullAttr 0x55d39e6bef00 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6bf078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55d39e6bef48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55d39e6bf120 <line:626:22>
| `-NonNullAttr 0x55d39e6bf178 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6bf280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55d39e6bf1c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55d39e6bf328 <line:628:22>
| `-NonNullAttr 0x55d39e6bf380 <col:52, col:66> 1
|-FunctionDecl 0x55d39e6bf480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55d39e6bf3c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55d39e6bf528 <line:630:22>
| `-NonNullAttr 0x55d39e6bf580 <col:52, col:66> 1
|-FunctionDecl 0x55d39e6bf680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55d39e6bf5c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55d39e6bf728 <line:632:22>
| `-NonNullAttr 0x55d39e6bf780 <col:52, col:66> 1
|-FunctionDecl 0x55d39e6bfb58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55d39e6bf860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55d39e6bf970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55d39e6bf9f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55d39e6bfc10 <line:636:22>
| `-NonNullAttr 0x55d39e6bfc68 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6bfde8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55d39e6bfcb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55d39e6bfe90 <line:638:22>
| `-NonNullAttr 0x55d39e6bff10 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6c0010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55d39e6bff58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55d39e6c00b8 <line:640:22>
| `-NonNullAttr 0x55d39e6c0110 <col:52, col:66> 1
|-FunctionDecl 0x55d39e6c02f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55d39e6c01c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55d39e6c03a0 <line:642:22>
| `-NonNullAttr 0x55d39e6c03f8 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6c0500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55d39e6c0448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55d39e6c05a8 <line:644:22>
| `-NonNullAttr 0x55d39e6c0600 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6c0828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d39e6c0648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55d39e6c06c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55d39e6c08d8 <line:648:22>
| `-NonNullAttr 0x55d39e6c0930 <col:63, col:80> 1 2
|-FunctionDecl 0x55d39e6c0b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55d39e6c0978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55d39e6c09f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55d39e6c0be8 <line:651:22>
| `-NonNullAttr 0x55d39e6c0c40 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6c0fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55d39e6c0d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55d39e6c0e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55d39e6c1058 <line:654:22>
| `-NonNullAttr 0x55d39e6c10b0 <col:63, col:77> 1
|-FunctionDecl 0x55d39e6c1208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55d39e6c10f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55d39e6c12b0 <col:69>
|-FunctionDecl 0x55d39e6c1428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55d39e6c1318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55d39e6c14d0 <col:72>
|-FunctionDecl 0x55d39e6c1708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55d39e6c1538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55d39e6c15e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55d39e6c17b8 <col:44>
|-FunctionDecl 0x55d39e6c19d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55d39e6c1820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55d39e6c1898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55d39e6c1a88 <line:661:22>
| `-NonNullAttr 0x55d39e6c1ae0 <col:63, col:77> 2
|-FunctionDecl 0x55d39e6c2f50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55d39e6c1bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55d39e6c1cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55d39e6c1de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55d39e6c3008 <col:47>
|-FunctionDecl 0x55d39e6c3110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55d39e6c3078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55d39e6c3268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55d39e6c31d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55d39e6c33c0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55d39e6c3328 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55d39e6c3488 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55d39e6c3548 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55d39e6c3608 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55d39e6c36c0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55d39e6c3740 prev 0x55d39e6c36c0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55d39e6c37a8 <col:24> 'int' 0
|-VarDecl 0x55d39e6c37e0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55d39e6c3860 prev 0x55d39e6c37e0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55d39e6c38c8 <col:27> 'int' 0
|-VarDecl 0x55d39e6c3900 <line:676:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x55d39e6c3980 prev 0x55d39e6c3900 <line:677:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x55d39e6c39e8 <col:27> 'int' 0
|-VarDecl 0x55d39e6c3a20 <line:678:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55d39e6c3aa0 prev 0x55d39e6c3a20 <line:679:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55d39e6c3b08 <col:27> 'int' 0
|-VarDecl 0x55d39e6c3b40 <line:680:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x55d39e6c3bc0 prev 0x55d39e6c3b40 <line:681:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x55d39e6c3c28 <col:27> 'int' 0
|-VarDecl 0x55d39e6c3c58 <line:682:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55d39e6c3cd0 <line:683:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55d39e6c3d50 <line:684:1, col:5> col:5 used x 'int'
|-VarDecl 0x55d39e6c3dd0 prev 0x55d39e6c3d50 <line:685:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55d39e6c3e38 <col:9> 'int' 0
|-VarDecl 0x55d39e6c3e70 <line:686:1, col:5> col:5 used y 'int'
|-VarDecl 0x55d39e6c3f20 prev 0x55d39e6c3e70 <line:687:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55d39e6c3f88 <col:9> 'int' 0
|-VarDecl 0x55d39e6c3fb8 <line:688:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x55d39e6c4038 <line:689:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x55d39e6c40b0 <line:690:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x55d39e6c4128 <line:691:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x55d39e6c41a0 <line:692:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x55d39e6c4218 <line:693:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x55d39e6c4290 <line:694:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x55d39e6c4308 <line:695:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x55d39e6c4380 <line:696:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x55d39e6c43f8 <line:697:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x55d39e6c4470 <line:698:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x55d39e6c44f0 <line:699:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x55d39e6c4570 <line:700:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x55d39e6c45e8 <line:701:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x55d39e6c4668 <line:702:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x55d39e6c46e0 <line:703:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x55d39e6c4758 <line:704:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55d39e6c47d0 <line:705:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55d39e6c48e8 prev 0x55d39e6c3110 <line:706:1, line:733:1> line:706:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55d39e6c4850 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55d39e6c7848 <line:707:1, line:733:1>
|   |-CallExpr 0x55d39e6c49f8 <line:708:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d39e6c49e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d39e6c4990 <col:3> 'void ()' Function 0x55d39e66a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d39e6c4a70 <line:709:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55d39e6c4a18 <col:3> 'int' lvalue Var 0x55d39e6c3860 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55d39e6c4a58 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d39e6c4a38 <col:25> 'int' lvalue Var 0x55d39e6c3dd0 'x' 'int'
|   |-CallExpr 0x55d39e6c4ac8 <line:710:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d39e6c4ab0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d39e6c4a90 <col:3> 'void ()' Function 0x55d39e66a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d39e6c4b20 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d39e6c4b08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d39e6c4ae8 <col:3> 'void ()' Function 0x55d39e66a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d39e6c4be8 <line:712:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6c4b40 <col:3> '_Bool' lvalue Var 0x55d39e6c4758 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55d39e6c4bc8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55d39e6c4bb0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55d39e6c4b60 <col:19> '_Bool (void)' Function 0x55d39e669c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55d39e6c4c80 <line:713:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6c4c08 <col:3> '_Bool' lvalue Var 0x55d39e6c47d0 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55d39e6c4c60 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55d39e6c4c48 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55d39e6c4c28 <col:19> '_Bool (void)' Function 0x55d39e669c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55d39e6c4cf8 <line:714:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6c4ca0 <col:3> '_Bool' lvalue Var 0x55d39e6c3fb8 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55d39e6c4ce0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d39e6c4cc0 <col:21> '_Bool' lvalue Var 0x55d39e6c47d0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55d39e6c4d70 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55d39e6c4d18 <col:3> 'int' lvalue Var 0x55d39e6c4038 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55d39e6c4d58 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d39e6c4d38 <col:15> 'int' lvalue Var 0x55d39e6c3f20 'y' 'int'
|   |-BinaryOperator 0x55d39e6c51c0 <line:716:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55d39e6c4d90 <col:3> 'int' lvalue Var 0x55d39e6c3f20 'y' 'int'
|   | `-ConditionalOperator 0x55d39e6c5190 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55d39e6c4fb8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55d39e6c4ec0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55d39e6c4de8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55d39e6c4dd0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55d39e6c4db0 <col:8> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55d39e6c4ea0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55d39e6c4e38 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55d39e6c4e20 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55d39e6c4e00 <col:27> '_Bool' lvalue Var 0x55d39e6c4128 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x55d39e6c4e88 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55d39e6c4e70 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55d39e6c4e50 <col:46> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55d39e6c4f98 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55d39e6c4f30 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55d39e6c4f00 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55d39e6c4ee0 <col:65> '_Bool' lvalue Var 0x55d39e6c4128 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x55d39e6c4f80 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55d39e6c4f68 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55d39e6c4f48 <col:84> '_Bool' lvalue Var 0x55d39e6c4308 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55d39e6c5178 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d39e6c4fd8 <col:101> 'int' lvalue Var 0x55d39e6c3f20 'y' 'int'
|   |   `-ParenExpr 0x55d39e6c5158 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55d39e6c5128 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55d39e6c5098 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55d39e6c5050 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55d39e6c5038 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55d39e6c4ff8 <col:106> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55d39e6c5080 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55d39e6c5068 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55d39e6c5018 <col:124> '_Bool' lvalue Var 0x55d39e6c4128 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55d39e6c50f8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d39e6c50b8 <col:141> 'int' lvalue Var 0x55d39e6c4570 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55d39e6c5110 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d39e6c50d8 <col:153> 'int' lvalue Var 0x55d39e6c4668 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55d39e6c56d0 <line:717:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55d39e6c51e0 <col:3> 'int' lvalue Var 0x55d39e6c4570 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55d39e6c56a0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55d39e6c5670 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55d39e6c5658 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55d39e6c5200 <col:15> '_Bool' lvalue Var 0x55d39e6c47d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55d39e6c5688 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d39e6c5220 <col:31> 'int' lvalue Var 0x55d39e6c4570 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55d39e6c5638 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55d39e6c5608 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55d39e6c5430 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55d39e6c5350 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55d39e6c5278 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55d39e6c5260 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55d39e6c5240 <col:45> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55d39e6c5330 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55d39e6c52c8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55d39e6c52b0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55d39e6c5290 <col:64> '_Bool' lvalue Var 0x55d39e6c4128 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55d39e6c5318 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55d39e6c5300 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55d39e6c52e0 <col:83> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55d39e6c5410 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55d39e6c53a8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55d39e6c5390 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55d39e6c5370 <col:102> '_Bool' lvalue Var 0x55d39e6c4128 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55d39e6c53f8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55d39e6c53e0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55d39e6c53c0 <col:121> '_Bool' lvalue Var 0x55d39e6c4308 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55d39e6c55f0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d39e6c5450 <col:138> 'int' lvalue Var 0x55d39e6c4570 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55d39e6c55d0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55d39e6c55a0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55d39e6c5510 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55d39e6c54c8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55d39e6c54b0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55d39e6c5470 <col:151> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55d39e6c54f8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55d39e6c54e0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55d39e6c5490 <col:169> '_Bool' lvalue Var 0x55d39e6c4128 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55d39e6c5570 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55d39e6c5530 <col:186> 'int' lvalue Var 0x55d39e6c4570 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55d39e6c5588 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55d39e6c5550 <col:198> 'int' lvalue Var 0x55d39e6c4570 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55d39e6c5be0 <line:718:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55d39e6c56f0 <col:3> 'int' lvalue Var 0x55d39e6c4668 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55d39e6c5bb0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55d39e6c5b80 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55d39e6c5b68 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55d39e6c5710 <col:15> '_Bool' lvalue Var 0x55d39e6c47d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55d39e6c5b98 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d39e6c5730 <col:31> 'int' lvalue Var 0x55d39e6c4668 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55d39e6c5b48 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55d39e6c5b18 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55d39e6c5940 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55d39e6c5860 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55d39e6c5788 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55d39e6c5770 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55d39e6c5750 <col:45> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55d39e6c5840 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55d39e6c57d8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55d39e6c57c0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55d39e6c57a0 <col:64> '_Bool' lvalue Var 0x55d39e6c4128 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55d39e6c5828 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55d39e6c5810 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55d39e6c57f0 <col:83> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55d39e6c5920 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55d39e6c58b8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55d39e6c58a0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55d39e6c5880 <col:102> '_Bool' lvalue Var 0x55d39e6c4128 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55d39e6c5908 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55d39e6c58f0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55d39e6c58d0 <col:121> '_Bool' lvalue Var 0x55d39e6c4308 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55d39e6c5b00 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d39e6c5960 <col:138> 'int' lvalue Var 0x55d39e6c4668 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55d39e6c5ae0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55d39e6c5ab0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55d39e6c5a20 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55d39e6c59d8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55d39e6c59c0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55d39e6c5980 <col:151> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55d39e6c5a08 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55d39e6c59f0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55d39e6c59a0 <col:169> '_Bool' lvalue Var 0x55d39e6c4128 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55d39e6c5a80 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55d39e6c5a40 <col:186> 'int' lvalue Var 0x55d39e6c4668 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55d39e6c5a98 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55d39e6c5a60 <col:198> 'int' lvalue Var 0x55d39e6c4668 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55d39e6c6198 <line:719:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6c5c00 <col:3> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d39e6c6180 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d39e6c6150 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55d39e6c6108 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d39e6c60f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d39e6c5c20 <col:20> '_Bool' lvalue Var 0x55d39e6c47d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d39e6c6138 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d39e6c6120 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d39e6c5c40 <col:36> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55d39e6c60d0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55d39e6c60a0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55d39e6c5e50 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d39e6c5d70 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d39e6c5c98 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d39e6c5c80 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d39e6c5c60 <col:55> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d39e6c5d50 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d39e6c5ce8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d39e6c5cd0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d39e6c5cb0 <col:74> '_Bool' lvalue Var 0x55d39e6c4128 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55d39e6c5d38 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d39e6c5d20 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d39e6c5d00 <col:93> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d39e6c5e30 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d39e6c5dc8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d39e6c5db0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d39e6c5d90 <col:112> '_Bool' lvalue Var 0x55d39e6c4128 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55d39e6c5e18 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d39e6c5e00 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d39e6c5de0 <col:131> '_Bool' lvalue Var 0x55d39e6c4308 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55d39e6c6088 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d39e6c6070 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d39e6c5e70 <col:148> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55d39e6c6050 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55d39e6c6020 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55d39e6c5f40 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d39e6c5ee8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d39e6c5ed0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d39e6c5e90 <col:166> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d39e6c5f18 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d39e6c5f00 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d39e6c5eb0 <col:184> '_Bool' lvalue Var 0x55d39e6c4128 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55d39e6c5fd8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d39e6c5f90 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d39e6c5f60 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d39e6c6008 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55d39e6c5ff0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55d39e6c5fb8 <col:212> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d39e6c6760 <line:720:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6c61b8 <col:3> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d39e6c6748 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d39e6c6718 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55d39e6c66d0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d39e6c66b8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d39e6c61d8 <col:20> '_Bool' lvalue Var 0x55d39e6c47d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d39e6c6700 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d39e6c66e8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d39e6c61f8 <col:36> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55d39e6c6698 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55d39e6c6668 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55d39e6c6408 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d39e6c6328 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d39e6c6250 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d39e6c6238 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d39e6c6218 <col:55> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d39e6c6308 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d39e6c62a0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d39e6c6288 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d39e6c6268 <col:74> '_Bool' lvalue Var 0x55d39e6c4128 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55d39e6c62f0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d39e6c62d8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d39e6c62b8 <col:93> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d39e6c63e8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d39e6c6380 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d39e6c6368 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d39e6c6348 <col:112> '_Bool' lvalue Var 0x55d39e6c4128 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55d39e6c63d0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d39e6c63b8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d39e6c6398 <col:131> '_Bool' lvalue Var 0x55d39e6c4308 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55d39e6c6650 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d39e6c6638 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d39e6c6428 <col:148> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55d39e6c6618 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55d39e6c65e8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55d39e6c64e8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d39e6c64a0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d39e6c6488 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d39e6c6448 <col:166> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d39e6c64d0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d39e6c64b8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d39e6c6468 <col:184> '_Bool' lvalue Var 0x55d39e6c4128 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55d39e6c65b8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d39e6c6538 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d39e6c6508 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d39e6c65d0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55d39e6c6590 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55d39e6c6560 <col:219> 'int' 0
|   |-BinaryOperator 0x55d39e6c6d08 <line:721:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6c6780 <col:3> '_Bool' lvalue Var 0x55d39e6c4128 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55d39e6c6cf0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d39e6c6cc0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55d39e6c6c78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d39e6c6c60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d39e6c67a0 <col:20> '_Bool' lvalue Var 0x55d39e6c47d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d39e6c6ca8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d39e6c6c90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d39e6c67c0 <col:36> '_Bool' lvalue Var 0x55d39e6c4128 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55d39e6c6c40 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55d39e6c6c10 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55d39e6c69d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d39e6c68f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d39e6c6818 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d39e6c6800 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d39e6c67e0 <col:55> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d39e6c68d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d39e6c6868 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d39e6c6850 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d39e6c6830 <col:74> '_Bool' lvalue Var 0x55d39e6c4128 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55d39e6c68b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d39e6c68a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d39e6c6880 <col:93> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d39e6c69b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d39e6c6948 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d39e6c6930 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d39e6c6910 <col:112> '_Bool' lvalue Var 0x55d39e6c4128 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55d39e6c6998 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d39e6c6980 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d39e6c6960 <col:131> '_Bool' lvalue Var 0x55d39e6c4308 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55d39e6c6bf8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d39e6c6be0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d39e6c69f0 <col:148> '_Bool' lvalue Var 0x55d39e6c4128 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55d39e6c6bc0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55d39e6c6b90 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55d39e6c6ab0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d39e6c6a68 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d39e6c6a50 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d39e6c6a10 <col:166> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d39e6c6a98 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d39e6c6a80 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d39e6c6a30 <col:184> '_Bool' lvalue Var 0x55d39e6c4128 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55d39e6c6b48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d39e6c6b00 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d39e6c6ad0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d39e6c6b78 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55d39e6c6b60 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55d39e6c6b28 <col:212> '_Bool' lvalue Var 0x55d39e6c4128 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55d39e6c72e0 <line:722:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6c6d28 <col:3> '_Bool' lvalue Var 0x55d39e6c4308 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55d39e6c72c8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d39e6c7298 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55d39e6c7250 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d39e6c7238 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d39e6c6d48 <col:20> '_Bool' lvalue Var 0x55d39e6c47d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d39e6c7280 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d39e6c7268 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d39e6c6d68 <col:36> '_Bool' lvalue Var 0x55d39e6c4308 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55d39e6c7218 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55d39e6c71e8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55d39e6c6f88 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d39e6c6e98 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d39e6c6dc0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d39e6c6da8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d39e6c6d88 <col:55> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d39e6c6e78 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d39e6c6e10 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d39e6c6df8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d39e6c6dd8 <col:74> '_Bool' lvalue Var 0x55d39e6c4128 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55d39e6c6e60 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d39e6c6e48 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d39e6c6e28 <col:93> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d39e6c6f68 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d39e6c6ef0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d39e6c6ed8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d39e6c6eb8 <col:112> '_Bool' lvalue Var 0x55d39e6c4128 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55d39e6c6f50 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d39e6c6f28 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d39e6c6f08 <col:131> '_Bool' lvalue Var 0x55d39e6c4308 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55d39e6c71d0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d39e6c71b8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d39e6c6fa8 <col:148> '_Bool' lvalue Var 0x55d39e6c4308 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55d39e6c7198 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55d39e6c7168 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55d39e6c7068 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d39e6c7020 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d39e6c7008 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d39e6c6fc8 <col:166> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d39e6c7050 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d39e6c7038 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d39e6c6fe8 <col:184> '_Bool' lvalue Var 0x55d39e6c4128 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55d39e6c7138 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d39e6c70b8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d39e6c7088 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d39e6c7150 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55d39e6c7110 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55d39e6c70e0 <col:219> 'int' 0
|   |-BinaryOperator 0x55d39e6c7358 <line:723:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55d39e6c7300 <col:3> 'int' lvalue Var 0x55d39e6c3980 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x55d39e6c7340 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d39e6c7320 <col:25> 'int' lvalue Var 0x55d39e6c3f20 'y' 'int'
|   |-BinaryOperator 0x55d39e6c7488 <line:724:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55d39e6c7378 <col:3> 'int' lvalue Var 0x55d39e6c3f20 'y' 'int'
|   | `-ConditionalOperator 0x55d39e6c7458 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55d39e6c7410 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55d39e6c73f8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55d39e6c7398 <col:7> '_Bool' lvalue Var 0x55d39e6c3fb8 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55d39e6c7428 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d39e6c73b8 <col:25> 'int' lvalue Var 0x55d39e6c4038 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55d39e6c7440 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55d39e6c73d8 <col:37> 'int' lvalue Var 0x55d39e6c3f20 'y' 'int'
|   |-BinaryOperator 0x55d39e6c7520 <line:725:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6c74a8 <col:3> '_Bool' lvalue Var 0x55d39e6c3fb8 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55d39e6c74f8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55d39e6c74c8 <col:28> 'int' 0
|   |-CallExpr 0x55d39e6c7578 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d39e6c7560 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d39e6c7540 <col:3> 'void ()' Function 0x55d39e66a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d39e6c75d0 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d39e6c75b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d39e6c7598 <col:3> 'void ()' Function 0x55d39e66a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55d39e6c7628 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d39e6c7610 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d39e6c75f0 <col:3> 'void ()' Function 0x55d39e66a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d39e6c7680 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d39e6c7668 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d39e6c7648 <col:3> 'void ()' Function 0x55d39e66a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d39e6c7738 <line:730:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55d39e6c76a0 <col:3> 'int' lvalue Var 0x55d39e6c3740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55d39e6c7718 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55d39e6c7700 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d39e6c76c0 <col:22> 'int' lvalue Var 0x55d39e6c3740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55d39e6c76e0 <col:41> 'int' 1
|   |-CallExpr 0x55d39e6c7790 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d39e6c7778 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d39e6c7758 <col:3> 'void ()' Function 0x55d39e66a570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55d39e6c7838 <line:732:3, col:36>
|     `-CallExpr 0x55d39e6c7818 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55d39e6c7800 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55d39e6c77b0 <col:10> 'void *(void)' Function 0x55d39e669fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55d39e6c79d0 prev 0x55d39e6c3268 <line:734:1, line:778:1> line:734:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55d39e6c7938 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55d39e6cbc50 <line:735:1, line:778:1>
|   |-CallExpr 0x55d39e6c7ab0 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d39e6c7a98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d39e6c7a78 <col:3> 'void ()' Function 0x55d39e66a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d39e6c7b28 <line:737:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55d39e6c7ad0 <col:3> 'int' lvalue Var 0x55d39e6c4668 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55d39e6c7b10 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d39e6c7af0 <col:15> 'int' lvalue Var 0x55d39e6c4570 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55d39e6c7b88 <line:738:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55d39e6c7b48 <col:3> 'int' lvalue Var 0x55d39e6c4570 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x55d39e6c7b68 <col:15> 'int' 1
|   |-BinaryOperator 0x55d39e6c7c00 <line:739:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6c7ba8 <col:3> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d39e6c7be8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d39e6c7bc8 <col:20> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d39e6c7c98 <line:740:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6c7c20 <col:3> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55d39e6c7c70 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55d39e6c7c40 <col:27> 'int' 1
|   |-CallExpr 0x55d39e6c7e18 <line:741:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55d39e6c7e00 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55d39e6c7cb8 <col:3> 'void (int)' Function 0x55d39e66a238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55d39e6c7db8 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55d39e6c7d98 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55d39e6c7d78 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55d39e6c7d30 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55d39e6c7d18 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55d39e6c7cd8 <col:23> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55d39e6c7d60 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55d39e6c7d48 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55d39e6c7cf8 <col:41> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d39e6c7e98 <line:742:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6c7e40 <col:3> '_Bool' lvalue Var 0x55d39e6c4290 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55d39e6c7e80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d39e6c7e60 <col:20> '_Bool' lvalue Var 0x55d39e6c40b0 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55d39e6c7f10 <line:743:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6c7eb8 <col:3> '_Bool' lvalue Var 0x55d39e6c4308 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55d39e6c7ef8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d39e6c7ed8 <col:20> '_Bool' lvalue Var 0x55d39e6c4128 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55d39e6c7f98 <line:744:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6c7f30 <col:3> '_Bool' lvalue Var 0x55d39e6c4380 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55d39e6c7f80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d39e6c7f60 <col:20> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55d39e6c8010 <line:745:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6c7fb8 <col:3> '_Bool' lvalue Var 0x55d39e6c43f8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55d39e6c7ff8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d39e6c7fd8 <col:20> '_Bool' lvalue Var 0x55d39e6c4218 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55d39e6c80a8 <line:746:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6c8030 <col:3> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x55d39e6c8080 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55d39e6c8050 <col:27> 'int' 1
|   |-CallExpr 0x55d39e6c8100 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d39e6c80e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d39e6c80c8 <col:3> 'void ()' Function 0x55d39e66a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d39e6c8158 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d39e6c8140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d39e6c8120 <col:3> 'void ()' Function 0x55d39e66a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d39e6c81f0 <line:749:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6c8178 <col:3> '_Bool' lvalue Var 0x55d39e6c4758 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55d39e6c81d0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55d39e6c81b8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55d39e6c8198 <col:19> '_Bool (void)' Function 0x55d39e669c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55d39e6c8288 <line:750:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6c8210 <col:3> '_Bool' lvalue Var 0x55d39e6c47d0 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55d39e6c8268 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55d39e6c8250 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55d39e6c8230 <col:19> '_Bool (void)' Function 0x55d39e669c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55d39e6c8300 <line:751:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6c82a8 <col:3> '_Bool' lvalue Var 0x55d39e6c3fb8 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55d39e6c82e8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d39e6c82c8 <col:21> '_Bool' lvalue Var 0x55d39e6c47d0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55d39e6c8378 <line:752:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55d39e6c8320 <col:3> 'int' lvalue Var 0x55d39e6c4038 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55d39e6c8360 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d39e6c8340 <col:15> 'int' lvalue Var 0x55d39e6c3f20 'y' 'int'
|   |-BinaryOperator 0x55d39e6c87b0 <line:753:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55d39e6c8398 <col:3> 'int' lvalue Var 0x55d39e6c3f20 'y' 'int'
|   | `-ConditionalOperator 0x55d39e6c8780 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55d39e6c85a8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55d39e6c84c8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55d39e6c83f0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55d39e6c83d8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55d39e6c83b8 <col:8> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55d39e6c84a8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55d39e6c8440 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55d39e6c8428 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55d39e6c8408 <col:27> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x55d39e6c8490 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55d39e6c8478 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55d39e6c8458 <col:46> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55d39e6c8588 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55d39e6c8520 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55d39e6c8508 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55d39e6c84e8 <col:65> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x55d39e6c8570 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55d39e6c8558 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55d39e6c8538 <col:84> '_Bool' lvalue Var 0x55d39e6c4380 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55d39e6c8768 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d39e6c85c8 <col:101> 'int' lvalue Var 0x55d39e6c3f20 'y' 'int'
|   |   `-ParenExpr 0x55d39e6c8748 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55d39e6c8718 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55d39e6c8688 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55d39e6c8640 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55d39e6c8628 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55d39e6c85e8 <col:106> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55d39e6c8670 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55d39e6c8658 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55d39e6c8608 <col:124> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55d39e6c86e8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d39e6c86a8 <col:141> 'int' lvalue Var 0x55d39e6c4570 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55d39e6c8700 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d39e6c86c8 <col:153> 'int' lvalue Var 0x55d39e6c4668 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55d39e6c8cc0 <line:754:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55d39e6c87d0 <col:3> 'int' lvalue Var 0x55d39e6c4570 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55d39e6c8c90 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55d39e6c8c60 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55d39e6c8c48 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55d39e6c87f0 <col:15> '_Bool' lvalue Var 0x55d39e6c47d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55d39e6c8c78 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d39e6c8810 <col:31> 'int' lvalue Var 0x55d39e6c4570 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55d39e6c8c28 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55d39e6c8bf8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55d39e6c8a20 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55d39e6c8940 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55d39e6c8868 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55d39e6c8850 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55d39e6c8830 <col:45> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55d39e6c8920 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55d39e6c88b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55d39e6c88a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55d39e6c8880 <col:64> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55d39e6c8908 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55d39e6c88f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55d39e6c88d0 <col:83> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55d39e6c8a00 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55d39e6c8998 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55d39e6c8980 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55d39e6c8960 <col:102> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55d39e6c89e8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55d39e6c89d0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55d39e6c89b0 <col:121> '_Bool' lvalue Var 0x55d39e6c4380 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55d39e6c8be0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d39e6c8a40 <col:138> 'int' lvalue Var 0x55d39e6c4570 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55d39e6c8bc0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55d39e6c8b90 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55d39e6c8b00 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55d39e6c8ab8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55d39e6c8aa0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55d39e6c8a60 <col:151> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55d39e6c8ae8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55d39e6c8ad0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55d39e6c8a80 <col:169> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55d39e6c8b60 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55d39e6c8b20 <col:186> 'int' lvalue Var 0x55d39e6c4570 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55d39e6c8b78 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55d39e6c8b40 <col:198> 'int' lvalue Var 0x55d39e6c4570 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55d39e6c91f0 <line:755:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55d39e6c8ce0 <col:3> 'int' lvalue Var 0x55d39e6c4668 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55d39e6c91c0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55d39e6c9190 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55d39e6c9178 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55d39e6c8d00 <col:15> '_Bool' lvalue Var 0x55d39e6c47d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55d39e6c91a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d39e6c8d20 <col:31> 'int' lvalue Var 0x55d39e6c4668 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55d39e6c9158 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55d39e6c9128 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55d39e6c8f30 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55d39e6c8e50 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55d39e6c8d78 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55d39e6c8d60 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55d39e6c8d40 <col:45> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55d39e6c8e30 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55d39e6c8dc8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55d39e6c8db0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55d39e6c8d90 <col:64> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55d39e6c8e18 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55d39e6c8e00 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55d39e6c8de0 <col:83> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55d39e6c8f10 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55d39e6c8ea8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55d39e6c8e90 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55d39e6c8e70 <col:102> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55d39e6c8ef8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55d39e6c8ee0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55d39e6c8ec0 <col:121> '_Bool' lvalue Var 0x55d39e6c4380 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55d39e6c9110 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d39e6c8f70 <col:138> 'int' lvalue Var 0x55d39e6c4668 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55d39e6c90f0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55d39e6c90c0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55d39e6c9030 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55d39e6c8fe8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55d39e6c8fd0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55d39e6c8f90 <col:151> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55d39e6c9018 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55d39e6c9000 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55d39e6c8fb0 <col:169> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55d39e6c9090 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55d39e6c9050 <col:186> 'int' lvalue Var 0x55d39e6c4668 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55d39e6c90a8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55d39e6c9070 <col:198> 'int' lvalue Var 0x55d39e6c4668 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55d39e6c9798 <line:756:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6c9210 <col:3> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d39e6c9780 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d39e6c9750 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55d39e6c9708 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d39e6c96f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d39e6c9230 <col:20> '_Bool' lvalue Var 0x55d39e6c47d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d39e6c9738 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d39e6c9720 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d39e6c9250 <col:36> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55d39e6c96d0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55d39e6c96a0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55d39e6c9460 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d39e6c9380 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d39e6c92a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d39e6c9290 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d39e6c9270 <col:55> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d39e6c9360 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d39e6c92f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d39e6c92e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d39e6c92c0 <col:74> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55d39e6c9348 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d39e6c9330 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d39e6c9310 <col:93> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d39e6c9440 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d39e6c93d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d39e6c93c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d39e6c93a0 <col:112> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55d39e6c9428 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d39e6c9410 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d39e6c93f0 <col:131> '_Bool' lvalue Var 0x55d39e6c4380 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55d39e6c9688 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d39e6c9670 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d39e6c9480 <col:148> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55d39e6c9650 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55d39e6c9620 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55d39e6c9540 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d39e6c94f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d39e6c94e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d39e6c94a0 <col:166> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d39e6c9528 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d39e6c9510 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d39e6c94c0 <col:184> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55d39e6c95d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d39e6c9590 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d39e6c9560 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d39e6c9608 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55d39e6c95f0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55d39e6c95b8 <col:212> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d39e6c9d60 <line:757:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6c97b8 <col:3> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d39e6c9d48 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d39e6c9d18 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55d39e6c9cd0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d39e6c9cb8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d39e6c97d8 <col:20> '_Bool' lvalue Var 0x55d39e6c47d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d39e6c9d00 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d39e6c9ce8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d39e6c97f8 <col:36> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55d39e6c9c98 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55d39e6c9c68 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55d39e6c9a08 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d39e6c9928 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d39e6c9850 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d39e6c9838 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d39e6c9818 <col:55> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d39e6c9908 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d39e6c98a0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d39e6c9888 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d39e6c9868 <col:74> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55d39e6c98f0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d39e6c98d8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d39e6c98b8 <col:93> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d39e6c99e8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d39e6c9980 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d39e6c9968 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d39e6c9948 <col:112> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55d39e6c99d0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d39e6c99b8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d39e6c9998 <col:131> '_Bool' lvalue Var 0x55d39e6c4380 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55d39e6c9c50 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d39e6c9c38 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d39e6c9a28 <col:148> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55d39e6c9c18 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55d39e6c9be8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55d39e6c9ae8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d39e6c9aa0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d39e6c9a88 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d39e6c9a48 <col:166> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d39e6c9ad0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d39e6c9ab8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d39e6c9a68 <col:184> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55d39e6c9bb8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d39e6c9b38 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d39e6c9b08 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d39e6c9bd0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55d39e6c9b90 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55d39e6c9b60 <col:219> 'int' 0
|   |-BinaryOperator 0x55d39e6ca328 <line:758:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6c9d80 <col:3> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55d39e6ca310 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d39e6ca2e0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55d39e6ca298 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d39e6ca280 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d39e6c9da0 <col:20> '_Bool' lvalue Var 0x55d39e6c47d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d39e6ca2c8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d39e6ca2b0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d39e6c9dc0 <col:36> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55d39e6ca260 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55d39e6ca230 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55d39e6c9ff0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d39e6c9ef0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d39e6c9e18 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d39e6c9e00 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d39e6c9de0 <col:55> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d39e6c9ed0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d39e6c9e68 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d39e6c9e50 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d39e6c9e30 <col:74> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55d39e6c9eb8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d39e6c9ea0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d39e6c9e80 <col:93> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d39e6c9fd0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d39e6c9f48 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d39e6c9f30 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d39e6c9f10 <col:112> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55d39e6c9fb8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d39e6c9fa0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d39e6c9f80 <col:131> '_Bool' lvalue Var 0x55d39e6c4380 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55d39e6ca218 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d39e6ca200 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d39e6ca010 <col:148> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55d39e6ca1e0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55d39e6ca1b0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55d39e6ca0d0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d39e6ca088 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d39e6ca070 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d39e6ca030 <col:166> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d39e6ca0b8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d39e6ca0a0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d39e6ca050 <col:184> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55d39e6ca168 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d39e6ca120 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d39e6ca0f0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d39e6ca198 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55d39e6ca180 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55d39e6ca148 <col:212> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55d39e6ca8f0 <line:759:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6ca348 <col:3> '_Bool' lvalue Var 0x55d39e6c4380 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55d39e6ca8d8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d39e6ca8a8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55d39e6ca860 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d39e6ca848 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d39e6ca368 <col:20> '_Bool' lvalue Var 0x55d39e6c47d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d39e6ca890 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d39e6ca878 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d39e6ca388 <col:36> '_Bool' lvalue Var 0x55d39e6c4380 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x55d39e6ca828 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55d39e6ca7f8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55d39e6ca598 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d39e6ca4b8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d39e6ca3e0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d39e6ca3c8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d39e6ca3a8 <col:55> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d39e6ca498 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d39e6ca430 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d39e6ca418 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d39e6ca3f8 <col:74> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55d39e6ca480 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d39e6ca468 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d39e6ca448 <col:93> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d39e6ca578 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d39e6ca510 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d39e6ca4f8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d39e6ca4d8 <col:112> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55d39e6ca560 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d39e6ca548 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d39e6ca528 <col:131> '_Bool' lvalue Var 0x55d39e6c4380 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55d39e6ca7e0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d39e6ca7c8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d39e6ca5b8 <col:148> '_Bool' lvalue Var 0x55d39e6c4380 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x55d39e6ca7a8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55d39e6ca778 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55d39e6ca678 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d39e6ca630 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d39e6ca618 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d39e6ca5d8 <col:166> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d39e6ca660 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d39e6ca648 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d39e6ca5f8 <col:184> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55d39e6ca748 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d39e6ca6c8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d39e6ca698 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d39e6ca760 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55d39e6ca720 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55d39e6ca6f0 <col:219> 'int' 0
|   |-BinaryOperator 0x55d39e6ca968 <line:760:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55d39e6ca910 <col:3> 'int' lvalue Var 0x55d39e6c3aa0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55d39e6ca950 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d39e6ca930 <col:25> 'int' lvalue Var 0x55d39e6c3f20 'y' 'int'
|   |-BinaryOperator 0x55d39e6caa98 <line:761:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55d39e6ca988 <col:3> 'int' lvalue Var 0x55d39e6c3f20 'y' 'int'
|   | `-ConditionalOperator 0x55d39e6caa68 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55d39e6caa20 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55d39e6caa08 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55d39e6ca9a8 <col:7> '_Bool' lvalue Var 0x55d39e6c3fb8 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55d39e6caa38 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d39e6ca9c8 <col:25> 'int' lvalue Var 0x55d39e6c4038 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55d39e6caa50 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55d39e6ca9e8 <col:37> 'int' lvalue Var 0x55d39e6c3f20 'y' 'int'
|   |-BinaryOperator 0x55d39e6cab30 <line:762:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6caab8 <col:3> '_Bool' lvalue Var 0x55d39e6c3fb8 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55d39e6cab08 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55d39e6caad8 <col:28> 'int' 0
|   |-CallExpr 0x55d39e6cab88 <line:763:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d39e6cab70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d39e6cab50 <col:3> 'void ()' Function 0x55d39e66a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d39e6cabe0 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d39e6cabc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d39e6caba8 <col:3> 'void ()' Function 0x55d39e66a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d39e6cac58 <line:765:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55d39e6cac00 <col:3> 'int' lvalue Var 0x55d39e6c3bc0 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x55d39e6cac40 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d39e6cac20 <col:25> 'int' lvalue Var 0x55d39e6c3dd0 'x' 'int'
|   |-CallExpr 0x55d39e6cacb0 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d39e6cac98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d39e6cac78 <col:3> 'void ()' Function 0x55d39e66a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d39e6cad08 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d39e6cacf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d39e6cacd0 <col:3> 'void ()' Function 0x55d39e66a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d39e6cb028 <line:768:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55d39e6cad28 <col:3> 'int' lvalue Var 0x55d39e6c3f20 'y' 'int'
|   | `-ConditionalOperator 0x55d39e6caff8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55d39e6cade8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55d39e6cada0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55d39e6cad88 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55d39e6cad48 <col:7> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55d39e6cadd0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55d39e6cadb8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55d39e6cad68 <col:25> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55d39e6cafe0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d39e6cae08 <col:42> 'int' lvalue Var 0x55d39e6c4570 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55d39e6cafc0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55d39e6caf90 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55d39e6caec8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55d39e6cae80 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55d39e6cae68 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55d39e6cae28 <col:55> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55d39e6caeb0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55d39e6cae98 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55d39e6cae48 <col:73> '_Bool' lvalue Var 0x55d39e6c4380 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55d39e6caf28 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d39e6caee8 <col:90> 'int' lvalue Var 0x55d39e6c4668 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55d39e6caf40 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d39e6caf08 <col:102> 'int' lvalue Var 0x55d39e6c3f20 'y' 'int'
|   |-BinaryOperator 0x55d39e6cb230 <line:769:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6cb048 <col:3> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d39e6cb218 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d39e6cb1e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55d39e6cb108 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55d39e6cb0c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55d39e6cb0a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55d39e6cb068 <col:20> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55d39e6cb0f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55d39e6cb0d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55d39e6cb088 <col:38> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d39e6cb1a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d39e6cb158 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d39e6cb128 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55d39e6cb1d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d39e6cb1b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d39e6cb180 <col:66> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d39e6cb518 <line:770:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6cb250 <col:3> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d39e6cb500 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d39e6cb4d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55d39e6cb3f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55d39e6cb310 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55d39e6cb2c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55d39e6cb2b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55d39e6cb270 <col:20> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55d39e6cb2f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55d39e6cb2e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55d39e6cb290 <col:38> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55d39e6cb3d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55d39e6cb388 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55d39e6cb370 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55d39e6cb330 <col:56> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55d39e6cb3b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55d39e6cb3a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55d39e6cb350 <col:74> '_Bool' lvalue Var 0x55d39e6c4380 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d39e6cb488 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d39e6cb440 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d39e6cb410 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55d39e6cb4b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d39e6cb4a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d39e6cb468 <col:102> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55d39e6cb720 <line:771:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6cb538 <col:3> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55d39e6cb708 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d39e6cb6d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55d39e6cb5f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55d39e6cb5b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55d39e6cb598 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55d39e6cb558 <col:20> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55d39e6cb5e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55d39e6cb5c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55d39e6cb578 <col:38> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d39e6cb690 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d39e6cb648 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d39e6cb618 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55d39e6cb6c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d39e6cb6a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d39e6cb670 <col:66> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55d39e6cba08 <line:772:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6cb740 <col:3> '_Bool' lvalue Var 0x55d39e6c4380 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55d39e6cb9f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d39e6cb9c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55d39e6cb8e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55d39e6cb800 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55d39e6cb7b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55d39e6cb7a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55d39e6cb760 <col:20> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55d39e6cb7e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55d39e6cb7d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55d39e6cb780 <col:38> '_Bool' lvalue Var 0x55d39e6c41a0 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55d39e6cb8c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55d39e6cb878 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55d39e6cb860 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55d39e6cb820 <col:56> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55d39e6cb8a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55d39e6cb890 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55d39e6cb840 <col:74> '_Bool' lvalue Var 0x55d39e6c4380 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d39e6cb978 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d39e6cb930 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d39e6cb900 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55d39e6cb9a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d39e6cb990 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d39e6cb958 <col:102> '_Bool' lvalue Var 0x55d39e6c4380 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55d39e6cba60 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d39e6cba48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d39e6cba28 <col:3> 'void ()' Function 0x55d39e66a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d39e6cbab8 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d39e6cbaa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d39e6cba80 <col:3> 'void ()' Function 0x55d39e66a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d39e6cbb70 <line:775:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55d39e6cbad8 <col:3> 'int' lvalue Var 0x55d39e6c3740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55d39e6cbb50 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55d39e6cbb38 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d39e6cbaf8 <col:22> 'int' lvalue Var 0x55d39e6c3740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55d39e6cbb18 <col:41> 'int' 1
|   |-CallExpr 0x55d39e6cbbc8 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d39e6cbbb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d39e6cbb90 <col:3> 'void ()' Function 0x55d39e66a570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55d39e6cbc40 <line:777:3, col:36>
|     `-CallExpr 0x55d39e6cbc20 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55d39e6cbc08 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55d39e6cbbe8 <col:10> 'void *(void)' Function 0x55d39e669fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55d39e6cbe60 prev 0x55d39e6c33c0 <line:779:1, line:795:1> line:779:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55d39e6cbdc8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55d39e6ccfb0 <line:780:1, line:795:1>
|   |-CallExpr 0x55d39e6cbf40 <line:781:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d39e6cbf28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d39e6cbf08 <col:3> 'void ()' Function 0x55d39e66a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d39e6cbfc0 <line:782:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55d39e6cbf60 <col:3> 'int' lvalue Var 0x55d39e6c3dd0 'x' 'int'
|   | `-IntegerLiteral 0x55d39e6cbfa0 <col:7> 'int' 1
|   |-CallExpr 0x55d39e6cc018 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d39e6cc000 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d39e6cbfe0 <col:3> 'void ()' Function 0x55d39e66a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d39e6cc070 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d39e6cc058 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d39e6cc038 <col:3> 'void ()' Function 0x55d39e66a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d39e6cc358 <line:785:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55d39e6cc090 <col:3> 'int' lvalue Var 0x55d39e6c3f20 'y' 'int'
|   | `-ConditionalOperator 0x55d39e6cc328 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55d39e6cc150 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55d39e6cc108 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55d39e6cc0f0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55d39e6cc0b0 <col:7> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55d39e6cc138 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55d39e6cc120 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55d39e6cc0d0 <col:25> '_Bool' lvalue Var 0x55d39e6c4218 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55d39e6cc310 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d39e6cc170 <col:42> 'int' lvalue Var 0x55d39e6c4570 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55d39e6cc2f0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55d39e6cc2c0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55d39e6cc230 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55d39e6cc1e8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55d39e6cc1d0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55d39e6cc190 <col:55> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55d39e6cc218 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55d39e6cc200 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55d39e6cc1b0 <col:73> '_Bool' lvalue Var 0x55d39e6c43f8 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55d39e6cc290 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d39e6cc250 <col:90> 'int' lvalue Var 0x55d39e6c4668 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55d39e6cc2a8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d39e6cc270 <col:102> 'int' lvalue Var 0x55d39e6c3f20 'y' 'int'
|   |-BinaryOperator 0x55d39e6cc560 <line:786:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6cc378 <col:3> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d39e6cc548 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d39e6cc518 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55d39e6cc438 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55d39e6cc3f0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55d39e6cc3d8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55d39e6cc398 <col:20> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55d39e6cc420 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55d39e6cc408 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55d39e6cc3b8 <col:38> '_Bool' lvalue Var 0x55d39e6c4218 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55d39e6cc4d0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d39e6cc488 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d39e6cc458 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55d39e6cc500 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d39e6cc4e8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d39e6cc4b0 <col:66> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d39e6cc848 <line:787:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6cc580 <col:3> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d39e6cc830 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d39e6cc800 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55d39e6cc720 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55d39e6cc640 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55d39e6cc5f8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55d39e6cc5e0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55d39e6cc5a0 <col:20> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55d39e6cc628 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55d39e6cc610 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55d39e6cc5c0 <col:38> '_Bool' lvalue Var 0x55d39e6c4218 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55d39e6cc700 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55d39e6cc6b8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55d39e6cc6a0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55d39e6cc660 <col:56> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55d39e6cc6e8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55d39e6cc6d0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55d39e6cc680 <col:74> '_Bool' lvalue Var 0x55d39e6c43f8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55d39e6cc7b8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d39e6cc770 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d39e6cc740 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55d39e6cc7e8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d39e6cc7d0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d39e6cc798 <col:102> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55d39e6cca50 <line:788:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6cc868 <col:3> '_Bool' lvalue Var 0x55d39e6c4218 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55d39e6cca38 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d39e6cca08 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55d39e6cc928 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55d39e6cc8e0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55d39e6cc8c8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55d39e6cc888 <col:20> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55d39e6cc910 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55d39e6cc8f8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55d39e6cc8a8 <col:38> '_Bool' lvalue Var 0x55d39e6c4218 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55d39e6cc9c0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d39e6cc978 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d39e6cc948 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55d39e6cc9f0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d39e6cc9d8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d39e6cc9a0 <col:66> '_Bool' lvalue Var 0x55d39e6c4218 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55d39e6ccd38 <line:789:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55d39e6cca70 <col:3> '_Bool' lvalue Var 0x55d39e6c43f8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55d39e6ccd20 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d39e6cccf0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55d39e6ccc10 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55d39e6ccb30 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55d39e6ccae8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55d39e6ccad0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55d39e6cca90 <col:20> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55d39e6ccb18 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55d39e6ccb00 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55d39e6ccab0 <col:38> '_Bool' lvalue Var 0x55d39e6c4218 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55d39e6ccbf0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55d39e6ccba8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55d39e6ccb90 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55d39e6ccb50 <col:56> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55d39e6ccbd8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55d39e6ccbc0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55d39e6ccb70 <col:74> '_Bool' lvalue Var 0x55d39e6c43f8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55d39e6ccca8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d39e6ccc60 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d39e6ccc30 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55d39e6cccd8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d39e6cccc0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d39e6ccc88 <col:102> '_Bool' lvalue Var 0x55d39e6c43f8 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55d39e6ccd90 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d39e6ccd78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d39e6ccd58 <col:3> 'void ()' Function 0x55d39e66a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d39e6ccde8 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d39e6ccdd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d39e6ccdb0 <col:3> 'void ()' Function 0x55d39e66a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d39e6ccea0 <line:792:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55d39e6cce08 <col:3> 'int' lvalue Var 0x55d39e6c3740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55d39e6cce80 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55d39e6cce68 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d39e6cce28 <col:22> 'int' lvalue Var 0x55d39e6c3740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55d39e6cce48 <col:41> 'int' 1
|   |-CallExpr 0x55d39e6ccef8 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d39e6ccee0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d39e6ccec0 <col:3> 'void ()' Function 0x55d39e66a570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55d39e6ccf70 <line:794:3, col:36>
|     `-CallExpr 0x55d39e6ccf50 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55d39e6ccf38 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55d39e6ccf18 <col:10> 'void *(void)' Function 0x55d39e669fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55d39e6cd050 prev 0x55d39e6c3488 <line:796:1, line:798:1> line:796:6 fence 'void ()'
| `-CompoundStmt 0x55d39e6cd0f0 <line:797:1, line:798:1>
|-FunctionDecl 0x55d39e6cd120 prev 0x55d39e6c3548 <line:799:1, line:801:1> line:799:6 isync 'void ()'
| `-CompoundStmt 0x55d39e6cd1c0 <line:800:1, line:801:1>
|-FunctionDecl 0x55d39e6cd1f0 prev 0x55d39e6c3608 <line:802:1, line:804:1> line:802:6 lwfence 'void ()'
| `-CompoundStmt 0x55d39e6cd290 <line:803:1, line:804:1>
`-FunctionDecl 0x55d39e6cd2f8 <line:805:1, line:829:1> line:805:5 main 'int ()'
  `-CompoundStmt 0x55d39e6cefe0 <line:806:1, line:829:1>
    |-DeclStmt 0x55d39e6cd410 <line:807:3, col:18>
    | `-VarDecl 0x55d39e6cd3a8 <col:3, col:13> col:13 used t1745 'pthread_t':'unsigned long'
    |-CallExpr 0x55d39e6cd618 <line:808:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55d39e6cd600 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d39e6cd428 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55d39e6aa9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55d39e6cd468 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55d39e6cd448 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55d39e6cd3a8 't1745' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55d39e6cd658 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55d39e6cd4e0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55d39e6cd4b8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55d39e6cd480 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55d39e6cd670 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d39e6cd500 <col:39> 'void *(void *)' Function 0x55d39e6c48e8 'P0' 'void *(void *)'
    | `-ParenExpr 0x55d39e6cd580 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55d39e6cd558 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55d39e6cd520 <col:52> 'int' 0
    |-DeclStmt 0x55d39e6cd700 <line:809:3, col:18>
    | `-VarDecl 0x55d39e6cd698 <col:3, col:13> col:13 used t1746 'pthread_t':'unsigned long'
    |-CallExpr 0x55d39e6cd8a8 <line:810:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55d39e6cd890 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d39e6cd718 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55d39e6aa9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55d39e6cd758 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55d39e6cd738 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55d39e6cd698 't1746' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55d39e6cd8e8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55d39e6cd7d0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55d39e6cd7a8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55d39e6cd770 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55d39e6cd900 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d39e6cd7f0 <col:39> 'void *(void *)' Function 0x55d39e6c79d0 'P1' 'void *(void *)'
    | `-ParenExpr 0x55d39e6cd870 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55d39e6cd848 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55d39e6cd810 <col:52> 'int' 0
    |-DeclStmt 0x55d39e6cd990 <line:811:3, col:18>
    | `-VarDecl 0x55d39e6cd928 <col:3, col:13> col:13 used t1747 'pthread_t':'unsigned long'
    |-CallExpr 0x55d39e6cdb38 <line:812:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55d39e6cdb20 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d39e6cd9a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55d39e6aa9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55d39e6cd9e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55d39e6cd9c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55d39e6cd928 't1747' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55d39e6cdb78 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55d39e6cda60 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55d39e6cda38 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55d39e6cda00 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55d39e6cdb90 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d39e6cda80 <col:39> 'void *(void *)' Function 0x55d39e6cbe60 'P2' 'void *(void *)'
    | `-ParenExpr 0x55d39e6cdb00 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55d39e6cdad8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55d39e6cdaa0 <col:52> 'int' 0
    |-CallExpr 0x55d39e6cdbe0 <line:813:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55d39e6cdbc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d39e6cdba8 <col:3> 'void ()' Function 0x55d39e66a4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55d39e6cdcb0 <line:814:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55d39e6cdc00 <col:3> '_Bool' lvalue Var 0x55d39e6c3c58 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55d39e6cdc98 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55d39e6cdc78 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55d39e6cdc60 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55d39e6cdc20 <col:21> 'int' lvalue Var 0x55d39e6c3740 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55d39e6cdc40 <col:41> 'int' 3
    |-CallExpr 0x55d39e6cdd08 <line:815:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55d39e6cdcf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d39e6cdcd0 <col:3> 'void ()' Function 0x55d39e66a570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55d39e6cdd80 <line:816:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55d39e6cdd68 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d39e6cdd28 <col:3> 'void (int)' Function 0x55d39e669e50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55d39e6cddc0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55d39e6cdda8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55d39e6cdd48 <col:21> '_Bool' lvalue Var 0x55d39e6c3c58 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55d39e6cde10 <line:817:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55d39e6cddf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d39e6cddd8 <col:3> 'void ()' Function 0x55d39e66a4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55d39e6ce118 <line:818:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55d39e6cde30 <col:3> 'int' lvalue Var 0x55d39e6c3f20 'y' 'int'
    | `-ConditionalOperator 0x55d39e6ce0e8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55d39e6cdef0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55d39e6cdea8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55d39e6cde90 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55d39e6cde50 <col:7> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55d39e6cded8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55d39e6cdec0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55d39e6cde70 <col:25> '_Bool' lvalue Var 0x55d39e6c40b0 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55d39e6ce0d0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55d39e6cdf10 <col:42> 'int' lvalue Var 0x55d39e6c4570 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55d39e6ce0b0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55d39e6ce080 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55d39e6cdff0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55d39e6cdf88 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55d39e6cdf70 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55d39e6cdf30 <col:55> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55d39e6cdfd8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55d39e6cdfc0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55d39e6cdf50 <col:73> '_Bool' lvalue Var 0x55d39e6c4290 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55d39e6ce050 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55d39e6ce010 <col:90> 'int' lvalue Var 0x55d39e6c4668 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55d39e6ce068 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55d39e6ce030 <col:102> 'int' lvalue Var 0x55d39e6c3f20 'y' 'int'
    |-BinaryOperator 0x55d39e6ce320 <line:819:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55d39e6ce138 <col:3> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55d39e6ce308 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55d39e6ce2d8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55d39e6ce1f8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55d39e6ce1b0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55d39e6ce198 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55d39e6ce158 <col:20> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55d39e6ce1e0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55d39e6ce1c8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55d39e6ce178 <col:38> '_Bool' lvalue Var 0x55d39e6c40b0 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55d39e6ce290 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55d39e6ce248 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55d39e6ce218 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55d39e6ce2c0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55d39e6ce2a8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55d39e6ce270 <col:66> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55d39e6ce608 <line:820:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55d39e6ce340 <col:3> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55d39e6ce5f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55d39e6ce5c0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55d39e6ce4e0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55d39e6ce400 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55d39e6ce3b8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55d39e6ce3a0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55d39e6ce360 <col:20> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55d39e6ce3e8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55d39e6ce3d0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55d39e6ce380 <col:38> '_Bool' lvalue Var 0x55d39e6c40b0 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55d39e6ce4c0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55d39e6ce478 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55d39e6ce460 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55d39e6ce420 <col:56> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55d39e6ce4a8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55d39e6ce490 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55d39e6ce440 <col:74> '_Bool' lvalue Var 0x55d39e6c4290 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55d39e6ce578 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55d39e6ce530 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55d39e6ce500 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55d39e6ce5a8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55d39e6ce590 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55d39e6ce558 <col:102> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55d39e6ce810 <line:821:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55d39e6ce628 <col:3> '_Bool' lvalue Var 0x55d39e6c40b0 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55d39e6ce7f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55d39e6ce7c8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55d39e6ce6e8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55d39e6ce6a0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55d39e6ce688 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55d39e6ce648 <col:20> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55d39e6ce6d0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55d39e6ce6b8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55d39e6ce668 <col:38> '_Bool' lvalue Var 0x55d39e6c40b0 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55d39e6ce780 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55d39e6ce738 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55d39e6ce708 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55d39e6ce7b0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55d39e6ce798 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55d39e6ce760 <col:66> '_Bool' lvalue Var 0x55d39e6c40b0 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55d39e6ceaf8 <line:822:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55d39e6ce830 <col:3> '_Bool' lvalue Var 0x55d39e6c4290 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55d39e6ceae0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55d39e6ceab0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55d39e6ce9d0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55d39e6ce8f0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55d39e6ce8a8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55d39e6ce890 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55d39e6ce850 <col:20> '_Bool' lvalue Var 0x55d39e6c45e8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55d39e6ce8d8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55d39e6ce8c0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55d39e6ce870 <col:38> '_Bool' lvalue Var 0x55d39e6c40b0 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55d39e6ce9b0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55d39e6ce968 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55d39e6ce950 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55d39e6ce910 <col:56> '_Bool' lvalue Var 0x55d39e6c46e0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55d39e6ce998 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55d39e6ce980 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55d39e6ce930 <col:74> '_Bool' lvalue Var 0x55d39e6c4290 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55d39e6cea68 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55d39e6cea20 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55d39e6ce9f0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55d39e6cea98 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55d39e6cea80 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55d39e6cea48 <col:102> '_Bool' lvalue Var 0x55d39e6c4290 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55d39e6ceb50 <line:823:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55d39e6ceb38 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d39e6ceb18 <col:3> 'void ()' Function 0x55d39e66a570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55d39e6ceba8 <line:824:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55d39e6ceb90 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d39e6ceb70 <col:3> 'void ()' Function 0x55d39e66a4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55d39e6cee78 <line:825:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x55d39e6cebc8 <col:3> '_Bool' lvalue Var 0x55d39e6c3cd0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55d39e6cee60 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55d39e6cee48 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55d39e6cee28 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x55d39e6cee08 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x55d39e6ced70 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x55d39e6cecd8 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x55d39e6cec40 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55d39e6cec28 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55d39e6cebe8 <col:23> 'int' lvalue Var 0x55d39e6c3860 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x55d39e6cec08 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x55d39e6cecb8 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55d39e6ceca0 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55d39e6cec60 <col:51> 'int' lvalue Var 0x55d39e6c3980 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x55d39e6cec80 <col:74> 'int' 0
    |         | `-BinaryOperator 0x55d39e6ced50 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55d39e6ced38 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55d39e6cecf8 <col:79> 'int' lvalue Var 0x55d39e6c3aa0 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x55d39e6ced18 <col:102> 'int' 1
    |         `-BinaryOperator 0x55d39e6cede8 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x55d39e6cedd0 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55d39e6ced90 <col:107> 'int' lvalue Var 0x55d39e6c3bc0 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x55d39e6cedb0 <col:130> 'int' 0
    |-CallExpr 0x55d39e6ceed0 <line:826:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55d39e6ceeb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d39e6cee98 <col:3> 'void ()' Function 0x55d39e66a570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55d39e6cef48 <line:827:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55d39e6cef30 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d39e6ceef0 <col:3> 'void (int)' Function 0x55d39e66a238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55d39e6cef88 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55d39e6cef70 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55d39e6cef10 <col:21> '_Bool' lvalue Var 0x55d39e6c3cd0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55d39e6cefd0 <line:828:3, col:10>
      `-IntegerLiteral 0x55d39e6cefa0 <col:10> 'int' 0
