TranslationUnitDecl 0x55a8c572ef88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55a8c572f848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55a8c572f520 '__int128'
|-TypedefDecl 0x55a8c572f8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55a8c572f540 'unsigned __int128'
|-TypedefDecl 0x55a8c572fbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55a8c572f990 'struct __NSConstantString_tag'
|   `-Record 0x55a8c572f910 '__NSConstantString_tag'
|-TypedefDecl 0x55a8c572fc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55a8c572fc20 'char *'
|   `-BuiltinType 0x55a8c572f020 'char'
|-TypedefDecl 0x55a8c576eb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55a8c572ff00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55a8c572fd40 'struct __va_list_tag'
|     `-Record 0x55a8c572fcc0 '__va_list_tag'
|-FunctionDecl 0x55a8c576eca0 <pthread-wmm/rfi000_tso.opt_true-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55a8c576ebd0 <col:31> col:34 'int'
|-FunctionDecl 0x55a8c576ee68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55a8c576ef90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55a8c576f0d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55a8c576f048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55a8c576f308 <col:40, col:99>
|   |-IfStmt 0x55a8c576f2d8 <col:42, col:88>
|   | |-UnaryOperator 0x55a8c576f1b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55a8c576f1a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55a8c576f180 <col:47> 'int' lvalue ParmVar 0x55a8c576f048 'expression' 'int'
|   | `-CompoundStmt 0x55a8c576f2c0 <col:59, col:88>
|   |   `-LabelStmt 0x55a8c576f2a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55a8c576f238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55a8c576f220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55a8c576f1d0 <col:68> 'void () __attribute__((noreturn))' Function 0x55a8c576ef90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55a8c576f2f0 <col:89>
|   `-ReturnStmt 0x55a8c576f2f8 <col:91>
|-FunctionDecl 0x55a8c576f350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55a8c576f410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55a8c576f790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55a8c576f4c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55a8c576f548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55a8c576f5c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55a8c576f648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55a8c576f850 <line:10:22>
|-FunctionDecl 0x55a8c57958a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55a8c576f8c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55a8c576f940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55a8c576f9c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55a8c576fa40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55a8c5795960 <line:13:22>
|-FunctionDecl 0x55a8c5795c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55a8c57959d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55a8c5795a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55a8c5795ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55a8c5795cc8 <line:15:22>
|-TypedefDecl 0x55a8c5795d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55a8c572f0e0 'unsigned char'
|-TypedefDecl 0x55a8c5795da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55a8c572f100 'unsigned short'
|-TypedefDecl 0x55a8c5795e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55a8c572f120 'unsigned int'
|-TypedefDecl 0x55a8c5795e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55a8c572f140 'unsigned long'
|-TypedefDecl 0x55a8c5795ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55a8c572f040 'signed char'
|-TypedefDecl 0x55a8c5795f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55a8c572f0e0 'unsigned char'
|-TypedefDecl 0x55a8c5795fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55a8c572f060 'short'
|-TypedefDecl 0x55a8c5796048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55a8c572f100 'unsigned short'
|-TypedefDecl 0x55a8c57960b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55a8c572f080 'int'
|-TypedefDecl 0x55a8c5796128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55a8c572f120 'unsigned int'
|-TypedefDecl 0x55a8c5796198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55a8c572f0a0 'long'
|-TypedefDecl 0x55a8c5796208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55a8c572f140 'unsigned long'
|-TypedefDecl 0x55a8c5796278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55a8c572f0a0 'long'
|-TypedefDecl 0x55a8c57962e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55a8c572f140 'unsigned long'
|-TypedefDecl 0x55a8c5796358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55a8c572f140 'unsigned long'
|-TypedefDecl 0x55a8c57963c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55a8c572f120 'unsigned int'
|-TypedefDecl 0x55a8c5796438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55a8c572f120 'unsigned int'
|-TypedefDecl 0x55a8c57964a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55a8c572f140 'unsigned long'
|-TypedefDecl 0x55a8c5796518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55a8c572f140 'unsigned long'
|-TypedefDecl 0x55a8c5796588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55a8c572f120 'unsigned int'
|-TypedefDecl 0x55a8c57965f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55a8c572f140 'unsigned long'
|-TypedefDecl 0x55a8c5796668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55a8c572f0a0 'long'
|-TypedefDecl 0x55a8c57966d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55a8c572f0a0 'long'
|-TypedefDecl 0x55a8c5796748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55a8c572f080 'int'
|-RecordDecl 0x55a8c57967a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55a8c5796918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55a8c57969d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55a8c5796970 'struct __fsid_t' sugar
|   `-RecordType 0x55a8c5796820 '__fsid_t'
|     `-Record 0x55a8c57967a0 ''
|-TypedefDecl 0x55a8c5796a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55a8c572f0a0 'long'
|-TypedefDecl 0x55a8c5796ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55a8c572f140 'unsigned long'
|-TypedefDecl 0x55a8c5796b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55a8c572f140 'unsigned long'
|-TypedefDecl 0x55a8c5796ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55a8c572f120 'unsigned int'
|-TypedefDecl 0x55a8c5796c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55a8c572f0a0 'long'
|-TypedefDecl 0x55a8c5796c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55a8c572f120 'unsigned int'
|-TypedefDecl 0x55a8c5796cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55a8c572f0a0 'long'
|-TypedefDecl 0x55a8c5796d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55a8c572f080 'int'
|-TypedefDecl 0x55a8c5796dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55a8c572f080 'int'
|-TypedefDecl 0x55a8c5796e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55a8c572f080 'int'
|-TypedefDecl 0x55a8c5796eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55a8c572f7a0 'void *'
|   `-BuiltinType 0x55a8c572efe0 'void'
|-TypedefDecl 0x55a8c5796f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55a8c572f0a0 'long'
|-TypedefDecl 0x55a8c5796f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55a8c572f0a0 'long'
|-TypedefDecl 0x55a8c5797008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55a8c572f0a0 'long'
|-TypedefDecl 0x55a8c5797078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55a8c572f140 'unsigned long'
|-TypedefDecl 0x55a8c57970e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55a8c572f140 'unsigned long'
|-TypedefDecl 0x55a8c5797158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55a8c572f140 'unsigned long'
|-TypedefDecl 0x55a8c57971c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55a8c572f140 'unsigned long'
|-TypedefDecl 0x55a8c5797238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55a8c572f0a0 'long'
|-TypedefDecl 0x55a8c57972a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55a8c572f0a0 'long'
|-TypedefDecl 0x55a8c5797318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55a8c572f0a0 'long'
|-TypedefDecl 0x55a8c5797388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55a8c572f140 'unsigned long'
|-TypedefDecl 0x55a8c5797418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55a8c57973e0 '__off64_t' sugar
|   |-Typedef 0x55a8c57966d8 '__off64_t'
|   `-BuiltinType 0x55a8c572f0a0 'long'
|-TypedefDecl 0x55a8c5797510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55a8c57974d0 '__quad_t *'
|   `-TypedefType 0x55a8c5797470 '__quad_t' sugar
|     |-Typedef 0x55a8c5796278 '__quad_t'
|     `-BuiltinType 0x55a8c572f0a0 'long'
|-TypedefDecl 0x55a8c5797580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55a8c572fc20 'char *'
|   `-BuiltinType 0x55a8c572f020 'char'
|-TypedefDecl 0x55a8c57975f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55a8c572f0a0 'long'
|-TypedefDecl 0x55a8c5797660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55a8c572f120 'unsigned int'
|-FunctionDecl 0x55a8c57977a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55a8c57976d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55a8c5797ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55a8c5797ad8 <line:72:3, col:34>
|     `-CallExpr 0x55a8c5797a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55a8c5797a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55a8c5797a10 <col:10> '<builtin fn type>' Function 0x55a8c5797880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55a8c5797ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55a8c5797a30 <col:29> 'unsigned int' lvalue ParmVar 0x55a8c57976d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55a8c5797880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55a8c5797920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55a8c5797990 <col:10> Implicit
| `-ConstAttr 0x55a8c57979e8 <col:10> Implicit
|-FunctionDecl 0x55a8c5797c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55a8c5797b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55a8c5797f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55a8c5797f48 <line:77:3, col:34>
|     `-CallExpr 0x55a8c5797f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55a8c5797ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55a8c5797e78 <col:10> '<builtin fn type>' Function 0x55a8c5797ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55a8c5797f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55a8c5797e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55a8c5797b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55a8c5797ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55a8c5797d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55a8c5797df8 <col:10> Implicit
| `-ConstAttr 0x55a8c5797e50 <col:10> Implicit
|-TypedefDecl 0x55a8c5797f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55a8c572f140 'unsigned long'
|-TypedefDecl 0x55a8c5798018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55a8c5797fe0 '__time_t' sugar
|   |-Typedef 0x55a8c5796c18 '__time_t'
|   `-BuiltinType 0x55a8c572f0a0 'long'
|-RecordDecl 0x55a8c5798070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55a8c5798128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55a8c57981b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55a8c5798248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55a8c5798210 '__pid_t' sugar
|   |-Typedef 0x55a8c5796748 '__pid_t'
|   `-BuiltinType 0x55a8c572f080 'int'
|-RecordDecl 0x55a8c57982a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55a8c5798360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55a8c57983b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55a8c5798470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55a8c57984d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55a8c572f140 'unsigned long'
|-RecordDecl 0x55a8c5798530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55a8c57987c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55a8c579a8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55a8c5798810 'struct cpu_set_t' sugar
|   `-RecordType 0x55a8c57985b0 'cpu_set_t'
|     `-Record 0x55a8c5798530 ''
|-FunctionDecl 0x55a8c579ab88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55a8c579a958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55a8c579aa60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55a8c579ac38 <line:107:19>
|-FunctionDecl 0x55a8c579ae10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55a8c579aca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55a8c579aeb8 <col:69>
|-FunctionDecl 0x55a8c579b030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55a8c579af20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55a8c579b0d8 <col:64>
|-FunctionDecl 0x55a8c579b398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55a8c579b140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55a8c579b278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55a8c579b448 <line:113:22>
|-FunctionDecl 0x55a8c579b6c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55a8c579b4b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55a8c579b5a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55a8c579b778 <col:88>
|-FunctionDecl 0x55a8c579ba98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55a8c579b7e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55a8c579b8c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55a8c579b950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55a8c579bb50 <col:62>
|-FunctionDecl 0x55a8c579bcc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55a8c579bbb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55a8c579bd70 <col:63>
|-FunctionDecl 0x55a8c579be98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55a8c579bf38 <col:47>
|-FunctionDecl 0x55a8c579c040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55a8c579bfa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55a8c579c0e8 <col:69>
|-FunctionDecl 0x55a8c579c1f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55a8c579c158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55a8c579c298 <col:69>
|-FunctionDecl 0x55a8c579c558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55a8c579c300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55a8c579c438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55a8c579c608 <col:88>
|-TypedefDecl 0x55a8c579c698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55a8c579c660 '__clock_t' sugar
|   |-Typedef 0x55a8c5796a58 '__clock_t'
|   `-BuiltinType 0x55a8c572f0a0 'long'
|-TypedefDecl 0x55a8c579c728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55a8c579c6f0 '__clockid_t' sugar
|   |-Typedef 0x55a8c5796e48 '__clockid_t'
|   `-BuiltinType 0x55a8c572f080 'int'
|-TypedefDecl 0x55a8c579c7b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55a8c579c780 '__timer_t' sugar
|   |-Typedef 0x55a8c5796eb8 '__timer_t'
|   `-PointerType 0x55a8c572f7a0 'void *'
|     `-BuiltinType 0x55a8c572efe0 'void'
|-RecordDecl 0x55a8c579c810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55a8c579c8e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55a8c579c950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55a8c579c9b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55a8c579ca20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55a8c579ca88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55a8c579caf0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55a8c579cb58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55a8c579cbc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55a8c579cc28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55a8c579cc90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55a8c579ccf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55a8c579cd48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55a8c579ce18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55a8c579ce88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55a8c579cf30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55a8c579d100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55a8c579d1a0 <col:45>
|-FunctionDecl 0x55a8c579d380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55a8c579d270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55a8c579d428 <col:54>
|-FunctionDecl 0x55a8c579d628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55a8c579d490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55a8c579d508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55a8c579d6d8 <line:157:22>
| `-ConstAttr 0x55a8c579d730 <col:63>
|-FunctionDecl 0x55a8c579e560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55a8c579d828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55a8c579e608 <col:56>
|-FunctionDecl 0x55a8c579e9b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55a8c579e678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55a8c579e6f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55a8c579e770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55a8c579e868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55a8c579ea70 <col:54>
|-RecordDecl 0x55a8c579eac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55a8c579eb78 parent 0x55a8c572ef88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55a8c579edd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55a8c579ee78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55a8c579eee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55a8c579ef48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55a8c579f038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55a8c579f158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55a8c579f100 'struct __locale_struct *'
|   `-ElaboratedType 0x55a8c579f090 'struct __locale_struct' sugar
|     `-RecordType 0x55a8c579eb50 'struct __locale_struct'
|       `-Record 0x55a8c579eac8 '__locale_struct'
|-TypedefDecl 0x55a8c579f208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55a8c579f1d0 '__locale_t' sugar
|   |-Typedef 0x55a8c579f158 '__locale_t'
|   `-PointerType 0x55a8c579f100 'struct __locale_struct *'
|     `-ElaboratedType 0x55a8c579f090 'struct __locale_struct' sugar
|       `-RecordType 0x55a8c579eb50 'struct __locale_struct'
|         `-Record 0x55a8c579eac8 '__locale_struct'
|-FunctionDecl 0x55a8c579f610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55a8c579f278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55a8c579f2f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55a8c579f370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55a8c579f400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55a8c579f478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55a8c579f6d8 <col:40>
|-FunctionDecl 0x55a8c579f8c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55a8c579f7a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55a8c579f970 <col:66>
|-FunctionDecl 0x55a8c579fa80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55a8c579f9d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55a8c579fb28 <col:69>
|-FunctionDecl 0x55a8c579fd58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55a8c579fb90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55a8c579fc20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55a8c579fe08 <col:52>
|-FunctionDecl 0x55a8c579ffb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55a8c579fe70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55a8c579ff00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55a8c57a0060 <col:55>
|-FunctionDecl 0x55a8c57a01f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55a8c57a00e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55a8c57a02a0 <col:62>
|-FunctionDecl 0x55a8c57a0418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55a8c57a0308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55a8c57a04c0 <col:60>
|-FunctionDecl 0x55a8c57a0718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55a8c57a0578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55a8c57a05f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55a8c57a07c8 <col:44>
|-FunctionDecl 0x55a8c57a09d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55a8c57a0830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55a8c57a08b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55a8c57a0a88 <col:49>
|-VarDecl 0x55a8c57a0b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55a8c57a0c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55a8c57a0c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55a8c57a0d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55a8c57a0e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55a8c57a0f20 <col:42>
|-VarDecl 0x55a8c57a0f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55a8c57a1010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55a8c57a1198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55a8c57a1088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55a8c57a1240 <col:57>
|-FunctionDecl 0x55a8c57a1350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55a8c57a12c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55a8c57a13f8 <col:56>
|-FunctionDecl 0x55a8c57a2540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55a8c57a1478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55a8c57a25e8 <col:59>
|-FunctionDecl 0x55a8c57a26f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55a8c57a2658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55a8c57a2798 <col:48>
| `-ConstAttr 0x55a8c57a27f0 <col:89>
|-FunctionDecl 0x55a8c57a2a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55a8c57a28a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55a8c57a2938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55a8c57a2cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55a8c57a2b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a8c57a2bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55a8c57a2d68 <col:88>
|-FunctionDecl 0x55a8c57a2f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55a8c57a2dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a8c57a2e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55a8c57a2fb0 <col:88>
|-FunctionDecl 0x55a8c57a31c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55a8c57a3018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a8c57a30a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55a8c57a3278 <line:208:22>
|-FunctionDecl 0x55a8c57a35e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55a8c57a32e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a8c57a3360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55a8c57a33f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55a8c57a3480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55a8c57a38e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55a8c57a36e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55a8c57a37c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55a8c57a3998 <col:85>
|-FunctionDecl 0x55a8c57a3d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55a8c57a3a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a8c57a3b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55a8c57a3c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55a8c57a3e40 <col:52>
|-FunctionDecl 0x55a8c57a3fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55a8c57a3ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55a8c57a4060 <col:61>
|-FunctionDecl 0x55a8c57a4560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55a8c57a40c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55a8c57a4148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55a8c57a4278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55a8c57a4368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55a8c57a4620 <col:62>
|-FunctionDecl 0x55a8c57a4838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55a8c57a4688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55a8c57a4718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55a8c57a48e8 <line:221:22>
|-FunctionDecl 0x55a8c57a49e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55a8c57a4950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55a8c57a4a90 <col:65>
|-TypedefDecl 0x55a8c57a4b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55a8c572f140 'unsigned long'
|-RecordDecl 0x55a8c57a4b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55a8c57a4ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55a8c57a4d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a8c57a4db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55a8c57a4d60 'union pthread_attr_t' sugar
|   `-RecordType 0x55a8c57a4be0 'union pthread_attr_t'
|     `-Record 0x55a8c57a4b58 'pthread_attr_t'
|-RecordDecl 0x55a8c57a4e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55a8c57a4f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55a8c57a5000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55a8c57a50b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55a8c57a5050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55a8c57a4e90 'struct __pthread_internal_list'
|     `-Record 0x55a8c57a4e10 '__pthread_internal_list'
|-RecordDecl 0x55a8c57a5120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55a8c57a51c8 parent 0x55a8c572ef88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55a8c57a52a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55a8c57a5308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55a8c57a5370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55a8c57a53d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55a8c57a5440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55a8c57a54a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55a8c57a9580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55a8c57a9630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55a8c57a9720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55a8c57a9788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a8c57a9910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55a8c57a98b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55a8c57a51a0 'pthread_mutex_t'
|     `-Record 0x55a8c57a5120 ''
|-RecordDecl 0x55a8c57a9980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55a8c57a9ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55a8c57a9b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55a8c57a9be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55a8c57a9b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55a8c57a9a00 'pthread_mutexattr_t'
|     `-Record 0x55a8c57a9980 ''
|-RecordDecl 0x55a8c57a9c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55a8c57a9cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55a8c57a9dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55a8c57a9e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55a8c57a9e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55a8c57a9ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55a8c57a9f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55a8c57a9fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55a8c57aa030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55a8c57aa098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55a8c57aa150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi000_tso.opt_true-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/rfi000_tso.opt_true-unreach-call.i:258:3)'
| |-FieldDecl 0x55a8c57aa240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55a8c57aa2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55a8c57aa3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55a8c57aa380 'union pthread_cond_t' sugar
|   `-RecordType 0x55a8c57a9cd0 'pthread_cond_t'
|     `-Record 0x55a8c57a9c50 ''
|-RecordDecl 0x55a8c57aa450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55a8c57aa590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55a8c57aa5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55a8c57aa6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55a8c57aa650 'union pthread_condattr_t' sugar
|   `-RecordType 0x55a8c57aa4d0 'pthread_condattr_t'
|     `-Record 0x55a8c57aa450 ''
|-TypedefDecl 0x55a8c57aa738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55a8c572f120 'unsigned int'
|-TypedefDecl 0x55a8c57aa7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55a8c572f080 'int'
|-RecordDecl 0x55a8c57aa800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55a8c57aa8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55a8c57aa970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55a8c57aa9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55a8c57aaa40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55a8c57aaaa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55a8c57aab10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55a8c57aab78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55a8c57aabe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55a8c57aac48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55a8c57aacb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55a8c57aad18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55a8c57aad80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55a8c57aae30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi000_tso.opt_true-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/rfi000_tso.opt_true-unreach-call.i:281:3)'
| |-FieldDecl 0x55a8c57aaed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55a8c57aaf40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a8c57ab090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55a8c57ab030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55a8c57aa880 'pthread_rwlock_t'
|     `-Record 0x55a8c57aa800 ''
|-RecordDecl 0x55a8c57ab100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55a8c57ab240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55a8c57ab2a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a8c57ab360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55a8c57ab300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55a8c57ab180 'pthread_rwlockattr_t'
|     `-Record 0x55a8c57ab100 ''
|-TypedefDecl 0x55a8c57ab3e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55a8c572f084 'volatile int' volatile
|   `-BuiltinType 0x55a8c572f080 'int'
|-RecordDecl 0x55a8c57ab440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55a8c57ad5b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55a8c57ad618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a8c57ad6d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55a8c57ad670 'union pthread_barrier_t' sugar
|   `-RecordType 0x55a8c57ab4c0 'pthread_barrier_t'
|     `-Record 0x55a8c57ab440 ''
|-RecordDecl 0x55a8c57ad740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55a8c57ad840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55a8c57ad8a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55a8c57ad960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55a8c57ad900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55a8c57ad7c0 'pthread_barrierattr_t'
|     `-Record 0x55a8c57ad740 ''
|-TypedefDecl 0x55a8c57ada78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55a8c57ada10 'long [8]' 8 
|   `-BuiltinType 0x55a8c572f0a0 'long'
|-EnumDecl 0x55a8c57adad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55a8c57adb98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55a8c57adbe8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55a8c57adc38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55a8c57add08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55a8c57add58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55a8c57adda8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55a8c57addf8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55a8c57ade80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55a8c57ade68 <col:26> 'int'
| |   `-DeclRefExpr 0x55a8c57ade48 <col:26> 'int' EnumConstant 0x55a8c57add08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55a8c57adf08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55a8c57adef0 <col:29> 'int'
| |   `-DeclRefExpr 0x55a8c57aded0 <col:29> 'int' EnumConstant 0x55a8c57add58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55a8c57adf90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55a8c57adf78 <col:30> 'int'
| |   `-DeclRefExpr 0x55a8c57adf58 <col:30> 'int' EnumConstant 0x55a8c57adda8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55a8c57ae018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55a8c57ae000 <col:27> 'int'
|     `-DeclRefExpr 0x55a8c57adfe0 <col:27> 'int' EnumConstant 0x55a8c57ade80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55a8c57ae068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55a8c57ae138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55a8c57ae1c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55a8c57ae1a8 <col:30> 'int'
| |   `-DeclRefExpr 0x55a8c57ae188 <col:30> 'int' EnumConstant 0x55a8c57ae138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55a8c57ae210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55a8c57ae298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55a8c57ae280 <col:29> 'int'
|     `-DeclRefExpr 0x55a8c57ae260 <col:29> 'int' EnumConstant 0x55a8c57ae210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55a8c57ae2e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55a8c57ae3b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55a8c57ae408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55a8c57ae458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55a8c57ae4a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55a8c57ae5c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55a8c57ae610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55a8c57ae660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55a8c57ae6e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55a8c57ae6d0 <col:31> 'int'
|     `-DeclRefExpr 0x55a8c57ae6b0 <col:31> 'int' EnumConstant 0x55a8c57ae5c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55a8c57ae738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55a8c57ae808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55a8c57ae858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55a8c57ae8a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55a8c57ae978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55a8c57ae9c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55a8c57aea18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55a8c57aeae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55a8c57aeb38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55a8c57aeb88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55a8c57aedc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55a8c57aee30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55a8c57aee98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55a8c57aefb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55a8c57af008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55a8c57af0d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55a8c57af128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55a8c57af178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55a8c57af248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55a8c57af298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55a8c57af8f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55a8c57af390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55a8c57af4a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a8c57af6e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55a8c57af760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55a8c57af9b8 <col:47>
| |-NonNullAttr 0x55a8c57afa10 <col:77, col:94> 1 3
| `-CallbackAttr 0x55a8c57afa48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55a8c57afb70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55a8c57afaa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55a8c57afdc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55a8c57afc28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55a8c57afca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55a8c57aff98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55a8c57afe88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55a8c57b0040 <col:60>
|-FunctionDecl 0x55a8c57b0190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55a8c57b0230 <col:54>
| `-ConstAttr 0x55a8c57b0288 <col:95>
|-FunctionDecl 0x55a8c57b0458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55a8c57b02c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a8c57b0338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55a8c57b0508 <line:394:19>
| `-ConstAttr 0x55a8c57b0560 <col:60>
|-FunctionDecl 0x55a8c57b0f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55a8c57b0e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55a8c57b1010 <col:71>
| `-NonNullAttr 0x55a8c57b1068 <col:112, col:126> 1
|-FunctionDecl 0x55a8c57b1170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55a8c57b10b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55a8c57b1218 <line:397:22>
| `-NonNullAttr 0x55a8c57b1270 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57b1498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55a8c57b12b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55a8c57b1338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55a8c57b1548 <line:400:22>
| `-NonNullAttr 0x55a8c57b15a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a8c57b17a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55a8c57b15e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a8c57b1668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55a8c57b1858 <line:403:22>
| `-NonNullAttr 0x55a8c57b18b0 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57b1b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55a8c57b18f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55a8c57b19a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55a8c57b1bb8 <line:406:22>
| `-NonNullAttr 0x55a8c57b1c10 <col:63, col:80> 1 2
|-FunctionDecl 0x55a8c57b2e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55a8c57b1c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a8c57b1cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55a8c57b2ef8 <line:409:22>
| `-NonNullAttr 0x55a8c57b2f50 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57b3188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55a8c57b2f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a8c57b3028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55a8c57b3238 <line:412:22>
| `-NonNullAttr 0x55a8c57b3290 <col:63, col:80> 1 2
|-FunctionDecl 0x55a8c57b34c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55a8c57b32d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a8c57b3368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55a8c57b3578 <col:37>
| `-NonNullAttr 0x55a8c57b35d0 <col:78, col:95> 1 2
|-FunctionDecl 0x55a8c57b37b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a8c57b3618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a8c57b3698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55a8c57b3868 <line:418:22>
| `-NonNullAttr 0x55a8c57b38c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a8c57b3a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55a8c57b3908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a8c57b3988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55a8c57b3af8 <line:420:22>
| `-NonNullAttr 0x55a8c57b3b50 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57b3cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a8c57b3b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a8c57b3c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55a8c57b3da8 <line:423:22>
| `-NonNullAttr 0x55a8c57b4e30 <col:63, col:80> 1 2
|-FunctionDecl 0x55a8c57b4fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55a8c57b4e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a8c57b4ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55a8c57b5068 <line:426:22>
| `-NonNullAttr 0x55a8c57b50c0 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57b5268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a8c57b5108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a8c57b5188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55a8c57b5318 <line:429:22>
| `-NonNullAttr 0x55a8c57b5370 <col:63, col:80> 1 2
|-FunctionDecl 0x55a8c57b54f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55a8c57b53b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a8c57b5438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55a8c57b55a8 <line:431:22>
| `-NonNullAttr 0x55a8c57b5600 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57b5828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55a8c57b5648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a8c57b56c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55a8c57b58d8 <line:434:22>
| |-NonNullAttr 0x55a8c57b5930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55a8c57b5968 <col:100> "" ""
|-FunctionDecl 0x55a8c57b5b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55a8c57b59b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a8c57b5a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55a8c57b5c28 <line:437:22>
| |-NonNullAttr 0x55a8c57b5c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x55a8c57b5cb8 <col:97> "" ""
|-FunctionDecl 0x55a8c57b5eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55a8c57b5d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a8c57b5d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55a8c57b5f68 <line:440:22>
| `-NonNullAttr 0x55a8c57b5fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a8c57b6140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55a8c57b6008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a8c57b6080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55a8c57b61f0 <line:443:22>
| `-NonNullAttr 0x55a8c57b6248 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57b6538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55a8c57b6298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a8c57b6318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55a8c57b6390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55a8c57b65f0 <line:447:22>
| `-NonNullAttr 0x55a8c57b6648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55a8c57b68f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55a8c57b66a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a8c57b6720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55a8c57b6798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55a8c57b69b0 <col:43>
| `-NonNullAttr 0x55a8c57b6a08 <col:84, col:98> 1
|-FunctionDecl 0x55a8c57b6cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55a8c57b6a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a8c57b6ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55a8c57b6b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55a8c57b6d80 <line:452:22>
| `-NonNullAttr 0x55a8c57b6dd8 <col:63, col:77> 3
|-FunctionDecl 0x55a8c57b70e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55a8c57b6e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a8c57b6ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55a8c57b6f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55a8c57b71a0 <line:456:22>
| `-NonNullAttr 0x55a8c57b71f8 <col:63, col:80> 2 3
|-FunctionDecl 0x55a8c57b73e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55a8c57b7248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a8c57b72c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55a8c57b7498 <line:458:22>
|-FunctionDecl 0x55a8c57b7868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55a8c57b7560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55a8c57b7700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55a8c57b7918 <col:52, col:69> 1 2
|-FunctionDecl 0x55a8c57b7ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55a8c57b79a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55a8c57b7a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55a8c57b7ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55a8c57b7b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55a8c57b7c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55a8c57b7e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55a8c57b7d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55a8c57b7fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55a8c57b8040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55a8c57b80e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55a8c57b81d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55a8c57b8240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55a8c57b8410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/rfi000_tso.opt_true-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55a8c57b8508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55a8c57b85c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55a8c57b8560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55a8c57b80c0 '__pthread_unwind_buf_t'
| |   `-Record 0x55a8c57b8040 ''
| `-AlignedAttr 0x55a8c57b8618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55a8c57b8690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55a8c57b87f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55a8c57b8858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55a8c57b88c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55a8c57b8928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55a8c57b8b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55a8c57b8a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55a8c57b8c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55a8c57b8be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55a8c57b8e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55a8c57b8d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55a8c57b8f18 <line:487:22>
|-RecordDecl 0x55a8c57b8f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55a8c57b9288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55a8c57b90e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55a8c57b9168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55a8c57b9338 <col:86>
| `-ReturnsTwiceAttr 0x55a8c57b9390 <col:12> Implicit
|-FunctionDecl 0x55a8c57b96b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55a8c57b9460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55a8c57b9570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55a8c57b9768 <line:493:22>
| `-NonNullAttr 0x55a8c57b97c0 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57b9938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a8c57b9808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a8c57b99e0 <line:495:22>
| `-NonNullAttr 0x55a8c57b9a38 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57b9b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a8c57b9a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a8c57b9be8 <line:497:22>
| `-NonNullAttr 0x55a8c57b9c40 <col:52, col:66> 1
|-FunctionDecl 0x55a8c57b9d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a8c57b9c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a8c57b9de8 <line:499:22>
| `-NonNullAttr 0x55a8c57b9e40 <col:52, col:66> 1
|-FunctionDecl 0x55a8c57ba088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55a8c57b9e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55a8c57b9f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55a8c57ba138 <col:36>
| `-NonNullAttr 0x55a8c57ba190 <col:66, col:83> 1 2
|-FunctionDecl 0x55a8c57ba290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a8c57ba1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a8c57ba338 <line:504:22>
| `-NonNullAttr 0x55a8c57ba390 <col:52, col:66> 1
|-FunctionDecl 0x55a8c57ba628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a8c57ba440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55a8c57ba4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55a8c57ba6d8 <line:508:22>
| `-NonNullAttr 0x55a8c57ba730 <col:63, col:80> 1 2
|-FunctionDecl 0x55a8c57ba9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55a8c57ba778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55a8c57ba7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55a8c57ba878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55a8c57baab0 <line:512:22>
| `-NonNullAttr 0x55a8c57bab08 <col:63, col:80> 1 3
|-FunctionDecl 0x55a8c57bac10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a8c57bab58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a8c57bacb8 <line:514:22>
| `-NonNullAttr 0x55a8c57bad10 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57baf38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55a8c57badc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55a8c57bafe0 <line:516:22>
| `-NonNullAttr 0x55a8c57bb038 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57bb140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55a8c57bb088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55a8c57bb1e8 <line:518:22>
| `-NonNullAttr 0x55a8c57bb240 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57bb468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a8c57bb288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55a8c57bb308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55a8c57bb518 <line:522:22>
| `-NonNullAttr 0x55a8c57bb570 <col:63, col:80> 1 2
|-FunctionDecl 0x55a8c57bb778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a8c57bb5b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a8c57bb638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55a8c57bb828 <line:525:22>
| `-NonNullAttr 0x55a8c57bb880 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57bba28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a8c57bb8c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55a8c57bb948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55a8c57bbad8 <line:528:22>
| `-NonNullAttr 0x55a8c57bbb30 <col:63, col:80> 1 2
|-FunctionDecl 0x55a8c57bbcb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a8c57bbb78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a8c57bbbf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55a8c57bbd68 <line:530:22>
| `-NonNullAttr 0x55a8c57bbdc0 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57bcf90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a8c57bbe08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55a8c57bceb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55a8c57bd040 <line:534:22>
| `-NonNullAttr 0x55a8c57bd098 <col:63, col:80> 1 2
|-FunctionDecl 0x55a8c57bd228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a8c57bd0e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a8c57bd168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55a8c57bd2d8 <line:537:22>
| `-NonNullAttr 0x55a8c57bd330 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57bd4d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a8c57bd378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55a8c57bd3f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55a8c57bd588 <line:541:22>
| `-NonNullAttr 0x55a8c57bd5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a8c57bd768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a8c57bd628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a8c57bd6a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55a8c57bd818 <line:544:22>
| `-NonNullAttr 0x55a8c57bd870 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57bda58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55a8c57bd8b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a8c57bd938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55a8c57bdb08 <line:547:22>
| `-NonNullAttr 0x55a8c57bdb60 <col:63, col:80> 1 2
|-FunctionDecl 0x55a8c57bdce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a8c57bdba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a8c57bdc28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55a8c57bdd98 <line:550:22>
| `-NonNullAttr 0x55a8c57bddf0 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57bf168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55a8c57bef10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55a8c57bf020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55a8c57bf218 <col:29>
| `-NonNullAttr 0x55a8c57bf270 <col:70, col:84> 1
|-FunctionDecl 0x55a8c57bf3e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a8c57bf2b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a8c57bf490 <line:555:22>
| `-NonNullAttr 0x55a8c57bf4e8 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57bf5f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a8c57bf538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a8c57bf698 <line:557:22>
| `-NonNullAttr 0x55a8c57bf6f0 <col:52, col:66> 1
|-FunctionDecl 0x55a8c57bf7f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a8c57bf738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a8c57bf898 <line:559:19>
| `-NonNullAttr 0x55a8c57bf8f0 <col:49, col:63> 1
|-FunctionDecl 0x55a8c57bfb28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55a8c57bf938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55a8c57bf9c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55a8c57bfbd8 <col:39>
| `-NonNullAttr 0x55a8c57bfc30 <col:69, col:86> 1 2
|-FunctionDecl 0x55a8c57bfd30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a8c57bfc78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a8c57bfdd8 <line:564:22>
| `-NonNullAttr 0x55a8c57bfe30 <col:52, col:66> 1
|-FunctionDecl 0x55a8c57bff98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a8c57bfee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a8c57c0040 <line:566:22>
| `-NonNullAttr 0x55a8c57c0098 <col:52, col:66> 1
|-FunctionDecl 0x55a8c57c0258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55a8c57c00e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55a8c57c0178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55a8c57c0308 <col:39>
| `-NonNullAttr 0x55a8c57c0360 <col:69, col:86> 1 2
|-FunctionDecl 0x55a8c57c0460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a8c57c03a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a8c57c0508 <line:571:22>
| `-NonNullAttr 0x55a8c57c0560 <col:52, col:66> 1
|-FunctionDecl 0x55a8c57c0748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55a8c57c0610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55a8c57c07f0 <line:573:22>
| `-NonNullAttr 0x55a8c57c0848 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57c0950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55a8c57c0898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55a8c57c09f8 <line:575:22>
| `-NonNullAttr 0x55a8c57c0a50 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57c0c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a8c57c0a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55a8c57c0b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55a8c57c0d28 <line:579:22>
| `-NonNullAttr 0x55a8c57c0d80 <col:63, col:80> 1 2
|-FunctionDecl 0x55a8c57c0fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55a8c57c0dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55a8c57c0e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55a8c57c1058 <line:582:22>
| `-NonNullAttr 0x55a8c57c10b0 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57c1258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a8c57c10f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55a8c57c1178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55a8c57c1308 <line:586:22>
| `-NonNullAttr 0x55a8c57c1360 <col:63, col:80> 1 2
|-FunctionDecl 0x55a8c57c14e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55a8c57c13a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55a8c57c1428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55a8c57c1598 <col:36>
| `-NonNullAttr 0x55a8c57c15f0 <col:77, col:91> 1
|-FunctionDecl 0x55a8c57c1928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55a8c57c16d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55a8c57c17e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55a8c57c19d8 <line:591:22>
| `-NonNullAttr 0x55a8c57c1a30 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57c1ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55a8c57c1a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55a8c57c1c50 <line:593:22>
| `-NonNullAttr 0x55a8c57c1ca8 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57c1db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55a8c57c1cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55a8c57c1e58 <line:595:22>
| `-NonNullAttr 0x55a8c57c1eb0 <col:52, col:66> 1
|-FunctionDecl 0x55a8c57c1fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55a8c57c1f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55a8c57c2070 <line:597:22>
| `-NonNullAttr 0x55a8c57c20c8 <col:52, col:66> 1
|-FunctionDecl 0x55a8c57c22f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55a8c57c2118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55a8c57c2190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55a8c57c23a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55a8c57c26d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55a8c57c2428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55a8c57c24a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55a8c57c2530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55a8c57c2790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55a8c57c29a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55a8c57c2870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55a8c57c2a50 <line:606:22>
| `-NonNullAttr 0x55a8c57c2aa8 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57c2bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55a8c57c2af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55a8c57c2c58 <line:608:22>
| `-NonNullAttr 0x55a8c57c2cb0 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57c2f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a8c57c2cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55a8c57c2d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55a8c57c2fc0 <line:612:22>
| `-NonNullAttr 0x55a8c57c3018 <col:63, col:80> 1 2
|-FunctionDecl 0x55a8c57c3228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55a8c57c3068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55a8c57c30e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55a8c57c32d8 <col:37>
| `-NonNullAttr 0x55a8c57c3330 <col:78, col:92> 1
|-FunctionDecl 0x55a8c57c3548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55a8c57c3378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55a8c57c3420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55a8c57c35f8 <line:618:22>
| `-NonNullAttr 0x55a8c57c3650 <col:63, col:80> 1 2
|-FunctionDecl 0x55a8c57c3818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55a8c57c3698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55a8c57c3710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55a8c57c38c8 <line:621:22>
| `-NonNullAttr 0x55a8c57c3920 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57c3bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55a8c57c3a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55a8c57c3a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55a8c57c3c78 <line:623:22>
| `-NonNullAttr 0x55a8c57c3cd0 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57c3e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55a8c57c3d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55a8c57c3f20 <line:625:22>
| `-NonNullAttr 0x55a8c57c3f78 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57c4080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55a8c57c3fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55a8c57c4128 <line:627:22>
| `-NonNullAttr 0x55a8c57c4180 <col:52, col:66> 1
|-FunctionDecl 0x55a8c57c4280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55a8c57c41c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55a8c57c4328 <line:629:22>
| `-NonNullAttr 0x55a8c57c4380 <col:52, col:66> 1
|-FunctionDecl 0x55a8c57c4480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55a8c57c43c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55a8c57c4528 <line:631:22>
| `-NonNullAttr 0x55a8c57c4580 <col:52, col:66> 1
|-FunctionDecl 0x55a8c57c4958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55a8c57c4660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55a8c57c4770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55a8c57c47f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55a8c57c4a10 <line:635:22>
| `-NonNullAttr 0x55a8c57c4a68 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57c4be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55a8c57c4ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55a8c57c4c90 <line:637:22>
| `-NonNullAttr 0x55a8c57c4ce8 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57c4df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55a8c57c4d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55a8c57c4e98 <line:639:22>
| `-NonNullAttr 0x55a8c57c4ef0 <col:52, col:66> 1
|-FunctionDecl 0x55a8c57c50e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55a8c57c4fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55a8c57c5190 <line:641:22>
| `-NonNullAttr 0x55a8c57c51e8 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57c52f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55a8c57c5238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55a8c57c5398 <line:643:22>
| `-NonNullAttr 0x55a8c57c53f0 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57c5618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a8c57c5438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55a8c57c54b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55a8c57c56c8 <line:647:22>
| `-NonNullAttr 0x55a8c57c5720 <col:63, col:80> 1 2
|-FunctionDecl 0x55a8c57c5928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55a8c57c5768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55a8c57c57e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55a8c57c59d8 <line:650:22>
| `-NonNullAttr 0x55a8c57c5a30 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57c5d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55a8c57c5b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55a8c57c5c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55a8c57c5e28 <line:653:22>
| `-NonNullAttr 0x55a8c57c5e80 <col:63, col:77> 1
|-FunctionDecl 0x55a8c57c5fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55a8c57c5ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55a8c57c6090 <col:69>
|-FunctionDecl 0x55a8c57c6208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55a8c57c60f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55a8c57c62b0 <col:72>
|-FunctionDecl 0x55a8c57c64e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55a8c57c6318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55a8c57c63c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55a8c57c6598 <col:44>
|-FunctionDecl 0x55a8c57c67b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55a8c57c6600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a8c57c6678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55a8c57c6868 <line:660:22>
| `-NonNullAttr 0x55a8c57c68c0 <col:63, col:77> 2
|-FunctionDecl 0x55a8c57c6d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55a8c57c69a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55a8c57c6ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55a8c57c6bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55a8c57c6dc0 <col:47>
|-FunctionDecl 0x55a8c57c7f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55a8c57c6e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55a8c57c80b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55a8c57c8020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55a8c57c8180 <line:667:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55a8c57c8240 <line:668:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55a8c57c8300 <line:669:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55a8c57c83b8 <line:670:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55a8c57c8438 prev 0x55a8c57c83b8 <line:671:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55a8c57c84a0 <col:24> 'int' 0
|-VarDecl 0x55a8c57c84d8 <line:672:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55a8c57c8558 prev 0x55a8c57c84d8 <line:673:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55a8c57c85c0 <col:27> 'int' 0
|-VarDecl 0x55a8c57c85f8 <line:674:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x55a8c57c8678 prev 0x55a8c57c85f8 <line:675:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x55a8c57c86e0 <col:27> 'int' 0
|-VarDecl 0x55a8c57c8710 <line:676:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55a8c57c8788 <line:677:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55a8c57c8808 <line:678:1, col:5> col:5 used x 'int'
|-VarDecl 0x55a8c57c8888 prev 0x55a8c57c8808 <line:679:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55a8c57c88f0 <col:9> 'int' 0
|-VarDecl 0x55a8c57c8928 <line:680:1, col:5> col:5 used y 'int'
|-VarDecl 0x55a8c57c89a8 prev 0x55a8c57c8928 <line:681:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55a8c57c8a10 <col:9> 'int' 0
|-VarDecl 0x55a8c57c8a40 <line:682:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x55a8c57c8ac0 <line:683:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x55a8c57c8b38 <line:684:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x55a8c57c8bb0 <line:685:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x55a8c57c8c28 <line:686:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x55a8c57c8ca0 <line:687:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x55a8c57c8d18 <line:688:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x55a8c57c8d90 <line:689:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x55a8c57c8e08 <line:690:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x55a8c57c8e88 <line:691:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x55a8c57c8f70 <line:692:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x55a8c57c8fe8 <line:693:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x55a8c57c9068 <line:694:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x55a8c57c90e0 <line:695:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x55a8c57c9158 <line:696:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55a8c57c91d0 <line:697:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55a8c57c92e8 prev 0x55a8c57c7f60 <line:698:1, line:717:1> line:698:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55a8c57c9250 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55a8c57ca578 <line:699:1, line:717:1>
|   |-CallExpr 0x55a8c57c93f8 <line:700:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a8c57c93e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a8c57c9390 <col:3> 'void ()' Function 0x55a8c576f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a8c57c9458 <line:701:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55a8c57c9418 <col:3> 'int' lvalue Var 0x55a8c57c89a8 'y' 'int'
|   | `-IntegerLiteral 0x55a8c57c9438 <col:7> 'int' 2
|   |-CallExpr 0x55a8c57c94b0 <line:702:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a8c57c9498 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a8c57c9478 <col:3> 'void ()' Function 0x55a8c576f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a8c57c9508 <line:703:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a8c57c94f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a8c57c94d0 <col:3> 'void ()' Function 0x55a8c576f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a8c57c9568 <line:704:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55a8c57c9528 <col:3> 'int' lvalue Var 0x55a8c57c8888 'x' 'int'
|   | `-IntegerLiteral 0x55a8c57c9548 <col:7> 'int' 1
|   |-CallExpr 0x55a8c57c95c0 <line:705:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a8c57c95a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a8c57c9588 <col:3> 'void ()' Function 0x55a8c576f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a8c57c9618 <line:706:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a8c57c9600 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a8c57c95e0 <col:3> 'void ()' Function 0x55a8c576f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a8c57c9900 <line:707:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55a8c57c9638 <col:3> 'int' lvalue Var 0x55a8c57c89a8 'y' 'int'
|   | `-ConditionalOperator 0x55a8c57c98d0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55a8c57c96f8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55a8c57c96b0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55a8c57c9698 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55a8c57c9658 <col:7> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55a8c57c96e0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55a8c57c96c8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55a8c57c9678 <col:25> '_Bool' lvalue Var 0x55a8c57c8bb0 'y$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55a8c57c98b8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a8c57c9718 <col:42> 'int' lvalue Var 0x55a8c57c8f70 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55a8c57c9898 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55a8c57c9868 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55a8c57c97d8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55a8c57c9790 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55a8c57c9778 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55a8c57c9738 <col:55> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55a8c57c97c0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55a8c57c97a8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55a8c57c9758 <col:73> '_Bool' lvalue Var 0x55a8c57c8d18 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55a8c57c9838 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a8c57c97f8 <col:90> 'int' lvalue Var 0x55a8c57c9068 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55a8c57c9850 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a8c57c9818 <col:102> 'int' lvalue Var 0x55a8c57c89a8 'y' 'int'
|   |-BinaryOperator 0x55a8c57c9b08 <line:708:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57c9920 <col:3> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a8c57c9af0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a8c57c9ac0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a8c57c99e0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a8c57c9998 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a8c57c9980 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a8c57c9940 <col:20> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a8c57c99c8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a8c57c99b0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a8c57c9960 <col:38> '_Bool' lvalue Var 0x55a8c57c8bb0 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55a8c57c9a78 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a8c57c9a30 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a8c57c9a00 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a8c57c9aa8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a8c57c9a90 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a8c57c9a58 <col:66> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a8c57c9df0 <line:709:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57c9b28 <col:3> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a8c57c9dd8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a8c57c9da8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a8c57c9cc8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a8c57c9be8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a8c57c9ba0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a8c57c9b88 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a8c57c9b48 <col:20> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a8c57c9bd0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a8c57c9bb8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a8c57c9b68 <col:38> '_Bool' lvalue Var 0x55a8c57c8bb0 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55a8c57c9ca8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a8c57c9c60 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a8c57c9c48 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a8c57c9c08 <col:56> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a8c57c9c90 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a8c57c9c78 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a8c57c9c28 <col:74> '_Bool' lvalue Var 0x55a8c57c8d18 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55a8c57c9d60 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a8c57c9d18 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a8c57c9ce8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a8c57c9d90 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a8c57c9d78 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a8c57c9d40 <col:102> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55a8c57ca010 <line:710:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57c9e10 <col:3> '_Bool' lvalue Var 0x55a8c57c8bb0 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55a8c57c9ff8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a8c57c9fc8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a8c57c9ed0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a8c57c9e88 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a8c57c9e70 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a8c57c9e30 <col:20> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a8c57c9eb8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a8c57c9ea0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a8c57c9e50 <col:38> '_Bool' lvalue Var 0x55a8c57c8bb0 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55a8c57c9f80 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a8c57c9f20 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a8c57c9ef0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a8c57c9fb0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a8c57c9f98 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a8c57c9f48 <col:66> '_Bool' lvalue Var 0x55a8c57c8bb0 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55a8c57ca2f8 <line:711:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57ca030 <col:3> '_Bool' lvalue Var 0x55a8c57c8d18 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55a8c57ca2e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a8c57ca2b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a8c57ca1d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a8c57ca0f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a8c57ca0a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a8c57ca090 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a8c57ca050 <col:20> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a8c57ca0d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a8c57ca0c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a8c57ca070 <col:38> '_Bool' lvalue Var 0x55a8c57c8bb0 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55a8c57ca1b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a8c57ca168 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a8c57ca150 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a8c57ca110 <col:56> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a8c57ca198 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a8c57ca180 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a8c57ca130 <col:74> '_Bool' lvalue Var 0x55a8c57c8d18 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55a8c57ca268 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a8c57ca220 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a8c57ca1f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a8c57ca298 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a8c57ca280 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a8c57ca248 <col:102> '_Bool' lvalue Var 0x55a8c57c8d18 'y$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55a8c57ca350 <line:712:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a8c57ca338 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a8c57ca318 <col:3> 'void ()' Function 0x55a8c576f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a8c57ca3a8 <line:713:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a8c57ca390 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a8c57ca370 <col:3> 'void ()' Function 0x55a8c576f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a8c57ca460 <line:714:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55a8c57ca3c8 <col:3> 'int' lvalue Var 0x55a8c57c8438 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55a8c57ca440 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55a8c57ca428 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a8c57ca3e8 <col:22> 'int' lvalue Var 0x55a8c57c8438 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55a8c57ca408 <col:41> 'int' 1
|   |-CallExpr 0x55a8c57ca4b8 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a8c57ca4a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a8c57ca480 <col:3> 'void ()' Function 0x55a8c576f410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55a8c57ca568 <line:716:3, col:36>
|     `-CallExpr 0x55a8c57ca548 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55a8c57ca530 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55a8c57ca4d8 <col:10> 'void *(void)' Function 0x55a8c576ee68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55a8c57ca6c0 prev 0x55a8c57c80b8 <line:718:1, line:777:1> line:718:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55a8c57ca628 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55a8c57d1380 <line:719:1, line:777:1>
|   |-CallExpr 0x55a8c57ca7a0 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a8c57ca788 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a8c57ca768 <col:3> 'void ()' Function 0x55a8c576f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a8c57ca800 <line:721:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55a8c57ca7c0 <col:3> 'int' lvalue Var 0x55a8c57c8888 'x' 'int'
|   | `-IntegerLiteral 0x55a8c57ca7e0 <col:7> 'int' 2
|   |-CallExpr 0x55a8c57ca858 <line:722:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a8c57ca840 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a8c57ca820 <col:3> 'void ()' Function 0x55a8c576f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a8c57ca8b0 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a8c57ca898 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a8c57ca878 <col:3> 'void ()' Function 0x55a8c576f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a8c57ca928 <line:724:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55a8c57ca8d0 <col:3> 'int' lvalue Var 0x55a8c57c9068 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55a8c57ca910 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a8c57ca8f0 <col:15> 'int' lvalue Var 0x55a8c57c8f70 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55a8c57ca988 <line:725:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55a8c57ca948 <col:3> 'int' lvalue Var 0x55a8c57c8f70 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x55a8c57ca968 <col:15> 'int' 1
|   |-BinaryOperator 0x55a8c57caa00 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57ca9a8 <col:3> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a8c57ca9e8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a8c57ca9c8 <col:20> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a8c57caa98 <line:727:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57caa20 <col:3> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55a8c57caa70 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55a8c57caa40 <col:27> 'int' 1
|   |-CallExpr 0x55a8c57cac18 <line:728:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55a8c57cac00 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55a8c57caab8 <col:3> 'void (int)' Function 0x55a8c576f0d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55a8c57cabb8 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55a8c57cab98 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55a8c57cab78 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55a8c57cab30 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55a8c57cab18 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55a8c57caad8 <col:23> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55a8c57cab60 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55a8c57cab48 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55a8c57caaf8 <col:41> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a8c57cac98 <line:729:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57cac40 <col:3> '_Bool' lvalue Var 0x55a8c57c8ca0 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55a8c57cac80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a8c57cac60 <col:20> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55a8c57cad10 <line:730:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57cacb8 <col:3> '_Bool' lvalue Var 0x55a8c57c8d18 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55a8c57cacf8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a8c57cacd8 <col:20> '_Bool' lvalue Var 0x55a8c57c8bb0 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55a8c57cad88 <line:731:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57cad30 <col:3> '_Bool' lvalue Var 0x55a8c57c8d90 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55a8c57cad70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a8c57cad50 <col:20> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55a8c57cae20 <line:732:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57cada8 <col:3> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x55a8c57cadf8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55a8c57cadc8 <col:27> 'int' 1
|   |-CallExpr 0x55a8c57cae78 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a8c57cae60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a8c57cae40 <col:3> 'void ()' Function 0x55a8c576f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a8c57caed0 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a8c57caeb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a8c57cae98 <col:3> 'void ()' Function 0x55a8c576f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a8c57caf90 <line:735:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57caef0 <col:3> '_Bool' lvalue Var 0x55a8c57c9158 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55a8c57caf68 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55a8c57caf48 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55a8c57caf30 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55a8c57caf10 <col:19> 'void *(void)' Function 0x55a8c576ee68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55a8c57cb040 <line:736:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57cafb0 <col:3> '_Bool' lvalue Var 0x55a8c57c91d0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55a8c57cb028 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55a8c57cb008 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55a8c57caff0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55a8c57cafd0 <col:19> 'void *(void)' Function 0x55a8c576ee68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55a8c57cb0b8 <line:737:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57cb060 <col:3> '_Bool' lvalue Var 0x55a8c57c8a40 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55a8c57cb0a0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a8c57cb080 <col:21> '_Bool' lvalue Var 0x55a8c57c91d0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55a8c57cb130 <line:738:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55a8c57cb0d8 <col:3> 'int' lvalue Var 0x55a8c57c8ac0 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55a8c57cb118 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a8c57cb0f8 <col:15> 'int' lvalue Var 0x55a8c57c89a8 'y' 'int'
|   |-BinaryOperator 0x55a8c57cb568 <line:739:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55a8c57cb150 <col:3> 'int' lvalue Var 0x55a8c57c89a8 'y' 'int'
|   | `-ConditionalOperator 0x55a8c57cb538 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55a8c57cb360 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55a8c57cb280 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55a8c57cb1a8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55a8c57cb190 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55a8c57cb170 <col:8> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55a8c57cb260 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55a8c57cb1f8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55a8c57cb1e0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55a8c57cb1c0 <col:27> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x55a8c57cb248 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55a8c57cb230 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55a8c57cb210 <col:46> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55a8c57cb340 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55a8c57cb2d8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55a8c57cb2c0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55a8c57cb2a0 <col:65> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x55a8c57cb328 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55a8c57cb310 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55a8c57cb2f0 <col:84> '_Bool' lvalue Var 0x55a8c57c8d90 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55a8c57cb520 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a8c57cb380 <col:101> 'int' lvalue Var 0x55a8c57c89a8 'y' 'int'
|   |   `-ParenExpr 0x55a8c57cb500 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55a8c57cb4d0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55a8c57cb440 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55a8c57cb3f8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55a8c57cb3e0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55a8c57cb3a0 <col:106> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55a8c57cb428 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55a8c57cb410 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55a8c57cb3c0 <col:124> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55a8c57cb4a0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a8c57cb460 <col:141> 'int' lvalue Var 0x55a8c57c8f70 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55a8c57cb4b8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a8c57cb480 <col:153> 'int' lvalue Var 0x55a8c57c9068 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55a8c57cba78 <line:740:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55a8c57cb588 <col:3> 'int' lvalue Var 0x55a8c57c8f70 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55a8c57cba48 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55a8c57cba18 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55a8c57cba00 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55a8c57cb5a8 <col:15> '_Bool' lvalue Var 0x55a8c57c91d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55a8c57cba30 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a8c57cb5c8 <col:31> 'int' lvalue Var 0x55a8c57c8f70 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55a8c57cb9e0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55a8c57cb9b0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55a8c57cb7d8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55a8c57cb6f8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55a8c57cb620 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55a8c57cb608 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55a8c57cb5e8 <col:45> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55a8c57cb6d8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55a8c57cb670 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55a8c57cb658 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55a8c57cb638 <col:64> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55a8c57cb6c0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55a8c57cb6a8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55a8c57cb688 <col:83> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55a8c57cb7b8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55a8c57cb750 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55a8c57cb738 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55a8c57cb718 <col:102> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55a8c57cb7a0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55a8c57cb788 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55a8c57cb768 <col:121> '_Bool' lvalue Var 0x55a8c57c8d90 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55a8c57cb998 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a8c57cb7f8 <col:138> 'int' lvalue Var 0x55a8c57c8f70 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55a8c57cb978 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55a8c57cb948 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55a8c57cb8b8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55a8c57cb870 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55a8c57cb858 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55a8c57cb818 <col:151> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55a8c57cb8a0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55a8c57cb888 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55a8c57cb838 <col:169> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55a8c57cb918 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55a8c57cb8d8 <col:186> 'int' lvalue Var 0x55a8c57c8f70 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55a8c57cb930 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55a8c57cb8f8 <col:198> 'int' lvalue Var 0x55a8c57c8f70 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55a8c57cbfa0 <line:741:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55a8c57cba98 <col:3> 'int' lvalue Var 0x55a8c57c9068 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55a8c57cbf58 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55a8c57cbf28 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55a8c57cbf10 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55a8c57cbab8 <col:15> '_Bool' lvalue Var 0x55a8c57c91d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55a8c57cbf40 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a8c57cbad8 <col:31> 'int' lvalue Var 0x55a8c57c9068 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55a8c57cbef0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55a8c57cbec0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55a8c57cbce8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55a8c57cbc08 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55a8c57cbb30 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55a8c57cbb18 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55a8c57cbaf8 <col:45> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55a8c57cbbe8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55a8c57cbb80 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55a8c57cbb68 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55a8c57cbb48 <col:64> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55a8c57cbbd0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55a8c57cbbb8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55a8c57cbb98 <col:83> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55a8c57cbcc8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55a8c57cbc60 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55a8c57cbc48 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55a8c57cbc28 <col:102> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55a8c57cbcb0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55a8c57cbc98 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55a8c57cbc78 <col:121> '_Bool' lvalue Var 0x55a8c57c8d90 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55a8c57cbea8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a8c57cbd08 <col:138> 'int' lvalue Var 0x55a8c57c9068 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55a8c57cbe88 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55a8c57cbe58 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55a8c57cbdc8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55a8c57cbd80 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55a8c57cbd68 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55a8c57cbd28 <col:151> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55a8c57cbdb0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55a8c57cbd98 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55a8c57cbd48 <col:169> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55a8c57cbe28 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55a8c57cbde8 <col:186> 'int' lvalue Var 0x55a8c57c9068 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55a8c57cbe40 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55a8c57cbe08 <col:198> 'int' lvalue Var 0x55a8c57c9068 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55a8c57cc548 <line:742:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57cbfc0 <col:3> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a8c57cc530 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a8c57cc500 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55a8c57cc4b8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a8c57cc4a0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a8c57cbfe0 <col:20> '_Bool' lvalue Var 0x55a8c57c91d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a8c57cc4e8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a8c57cc4d0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a8c57cc000 <col:36> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55a8c57cc480 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55a8c57cc450 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55a8c57cc210 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55a8c57cc130 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55a8c57cc058 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55a8c57cc040 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55a8c57cc020 <col:55> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55a8c57cc110 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55a8c57cc0a8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55a8c57cc090 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55a8c57cc070 <col:74> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55a8c57cc0f8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55a8c57cc0e0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55a8c57cc0c0 <col:93> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55a8c57cc1f0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55a8c57cc188 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55a8c57cc170 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55a8c57cc150 <col:112> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55a8c57cc1d8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55a8c57cc1c0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55a8c57cc1a0 <col:131> '_Bool' lvalue Var 0x55a8c57c8d90 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55a8c57cc438 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55a8c57cc420 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a8c57cc230 <col:148> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55a8c57cc400 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55a8c57cc3d0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55a8c57cc2f0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55a8c57cc2a8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55a8c57cc290 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55a8c57cc250 <col:166> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55a8c57cc2d8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55a8c57cc2c0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55a8c57cc270 <col:184> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55a8c57cc388 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55a8c57cc340 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55a8c57cc310 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55a8c57cc3b8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55a8c57cc3a0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55a8c57cc368 <col:212> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a8c57ccb10 <line:743:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57cc568 <col:3> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a8c57ccaf8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a8c57ccac8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55a8c57cca80 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a8c57cca68 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a8c57cc588 <col:20> '_Bool' lvalue Var 0x55a8c57c91d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a8c57ccab0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a8c57cca98 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a8c57cc5a8 <col:36> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55a8c57cca48 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55a8c57cca18 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55a8c57cc7b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55a8c57cc6d8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55a8c57cc600 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55a8c57cc5e8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55a8c57cc5c8 <col:55> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55a8c57cc6b8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55a8c57cc650 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55a8c57cc638 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55a8c57cc618 <col:74> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55a8c57cc6a0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55a8c57cc688 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55a8c57cc668 <col:93> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55a8c57cc798 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55a8c57cc730 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55a8c57cc718 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55a8c57cc6f8 <col:112> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55a8c57cc780 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55a8c57cc768 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55a8c57cc748 <col:131> '_Bool' lvalue Var 0x55a8c57c8d90 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55a8c57cca00 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55a8c57cc9e8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a8c57cc7d8 <col:148> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55a8c57cc9c8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55a8c57cc998 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55a8c57cc898 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55a8c57cc850 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55a8c57cc838 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55a8c57cc7f8 <col:166> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55a8c57cc880 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55a8c57cc868 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55a8c57cc818 <col:184> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55a8c57cc968 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55a8c57cc8e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55a8c57cc8b8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55a8c57cc980 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55a8c57cc940 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55a8c57cc910 <col:219> 'int' 0
|   |-BinaryOperator 0x55a8c57cd0d8 <line:744:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57ccb30 <col:3> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55a8c57cd0c0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a8c57cd090 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55a8c57cd048 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a8c57cd030 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a8c57ccb50 <col:20> '_Bool' lvalue Var 0x55a8c57c91d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a8c57cd078 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a8c57cd060 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a8c57ccb70 <col:36> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55a8c57cd010 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55a8c57ccfe0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55a8c57ccd80 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55a8c57ccca0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55a8c57ccbc8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55a8c57ccbb0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55a8c57ccb90 <col:55> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55a8c57ccc80 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55a8c57ccc18 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55a8c57ccc00 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55a8c57ccbe0 <col:74> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55a8c57ccc68 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55a8c57ccc50 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55a8c57ccc30 <col:93> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55a8c57ccd60 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55a8c57cccf8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55a8c57ccce0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55a8c57cccc0 <col:112> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55a8c57ccd48 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55a8c57ccd30 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55a8c57ccd10 <col:131> '_Bool' lvalue Var 0x55a8c57c8d90 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55a8c57ccfc8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55a8c57ccfb0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a8c57ccda0 <col:148> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55a8c57ccf70 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55a8c57ccf40 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55a8c57cce60 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55a8c57cce18 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55a8c57cce00 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55a8c57ccdc0 <col:166> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55a8c57cce48 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55a8c57cce30 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55a8c57ccde0 <col:184> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55a8c57ccef8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55a8c57cceb0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55a8c57cce80 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55a8c57ccf28 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55a8c57ccf10 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55a8c57cced8 <col:212> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55a8c57cd6a0 <line:745:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57cd0f8 <col:3> '_Bool' lvalue Var 0x55a8c57c8d90 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55a8c57cd688 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a8c57cd658 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55a8c57cd610 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a8c57cd5f8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a8c57cd118 <col:20> '_Bool' lvalue Var 0x55a8c57c91d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a8c57cd640 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a8c57cd628 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a8c57cd138 <col:36> '_Bool' lvalue Var 0x55a8c57c8d90 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x55a8c57cd5d8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55a8c57cd5a8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55a8c57cd348 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55a8c57cd268 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55a8c57cd190 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55a8c57cd178 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55a8c57cd158 <col:55> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55a8c57cd248 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55a8c57cd1e0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55a8c57cd1c8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55a8c57cd1a8 <col:74> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55a8c57cd230 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55a8c57cd218 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55a8c57cd1f8 <col:93> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55a8c57cd328 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55a8c57cd2c0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55a8c57cd2a8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55a8c57cd288 <col:112> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55a8c57cd310 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55a8c57cd2f8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55a8c57cd2d8 <col:131> '_Bool' lvalue Var 0x55a8c57c8d90 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55a8c57cd590 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55a8c57cd578 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a8c57cd368 <col:148> '_Bool' lvalue Var 0x55a8c57c8d90 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x55a8c57cd558 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55a8c57cd528 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55a8c57cd428 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55a8c57cd3e0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55a8c57cd3c8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55a8c57cd388 <col:166> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55a8c57cd410 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55a8c57cd3f8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55a8c57cd3a8 <col:184> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55a8c57cd4f8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55a8c57cd478 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55a8c57cd448 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55a8c57cd510 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55a8c57cd4d0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55a8c57cd4a0 <col:219> 'int' 0
|   |-BinaryOperator 0x55a8c57cd718 <line:746:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55a8c57cd6c0 <col:3> 'int' lvalue Var 0x55a8c57c8558 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55a8c57cd700 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a8c57cd6e0 <col:25> 'int' lvalue Var 0x55a8c57c89a8 'y' 'int'
|   |-BinaryOperator 0x55a8c57cd848 <line:747:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55a8c57cd738 <col:3> 'int' lvalue Var 0x55a8c57c89a8 'y' 'int'
|   | `-ConditionalOperator 0x55a8c57cd818 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55a8c57cd7d0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55a8c57cd7b8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55a8c57cd758 <col:7> '_Bool' lvalue Var 0x55a8c57c8a40 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55a8c57cd7e8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a8c57cd778 <col:25> 'int' lvalue Var 0x55a8c57c8ac0 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55a8c57cd800 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55a8c57cd798 <col:37> 'int' lvalue Var 0x55a8c57c89a8 'y' 'int'
|   |-BinaryOperator 0x55a8c57cd8e0 <line:748:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57cd868 <col:3> '_Bool' lvalue Var 0x55a8c57c8a40 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55a8c57cd8b8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55a8c57cd888 <col:28> 'int' 0
|   |-CallExpr 0x55a8c57cd938 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a8c57cd920 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a8c57cd900 <col:3> 'void ()' Function 0x55a8c576f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a8c57cd990 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a8c57cd978 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a8c57cd958 <col:3> 'void ()' Function 0x55a8c576f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a8c57cda40 <line:751:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57cd9b0 <col:3> '_Bool' lvalue Var 0x55a8c57c9158 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55a8c57cda28 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55a8c57cda08 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55a8c57cd9f0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55a8c57cd9d0 <col:19> 'void *(void)' Function 0x55a8c576ee68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55a8c57cdaf0 <line:752:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57cda60 <col:3> '_Bool' lvalue Var 0x55a8c57c91d0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55a8c57cdad8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55a8c57cdab8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55a8c57cdaa0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55a8c57cda80 <col:19> 'void *(void)' Function 0x55a8c576ee68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55a8c57cdb68 <line:753:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57cdb10 <col:3> '_Bool' lvalue Var 0x55a8c57c8a40 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55a8c57cdb50 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a8c57cdb30 <col:21> '_Bool' lvalue Var 0x55a8c57c91d0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55a8c57cdbe0 <line:754:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55a8c57cdb88 <col:3> 'int' lvalue Var 0x55a8c57c8ac0 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55a8c57cdbc8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a8c57cdba8 <col:15> 'int' lvalue Var 0x55a8c57c89a8 'y' 'int'
|   |-BinaryOperator 0x55a8c57ce028 <line:755:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55a8c57cdc00 <col:3> 'int' lvalue Var 0x55a8c57c89a8 'y' 'int'
|   | `-ConditionalOperator 0x55a8c57cdff8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55a8c57cde10 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55a8c57cdd30 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55a8c57cdc58 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55a8c57cdc40 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55a8c57cdc20 <col:8> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55a8c57cdd10 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55a8c57cdca8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55a8c57cdc90 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55a8c57cdc70 <col:27> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x55a8c57cdcf8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55a8c57cdce0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55a8c57cdcc0 <col:46> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55a8c57cddf0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55a8c57cdd88 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55a8c57cdd70 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55a8c57cdd50 <col:65> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x55a8c57cddd8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55a8c57cddc0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55a8c57cdda0 <col:84> '_Bool' lvalue Var 0x55a8c57c8d90 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55a8c57cdfe0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a8c57cde30 <col:101> 'int' lvalue Var 0x55a8c57c89a8 'y' 'int'
|   |   `-ParenExpr 0x55a8c57cdfc0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55a8c57cdf80 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55a8c57cdef0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55a8c57cdea8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55a8c57cde90 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55a8c57cde50 <col:106> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55a8c57cded8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55a8c57cdec0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55a8c57cde70 <col:124> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55a8c57cdf50 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a8c57cdf10 <col:141> 'int' lvalue Var 0x55a8c57c8f70 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55a8c57cdf68 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a8c57cdf30 <col:153> 'int' lvalue Var 0x55a8c57c9068 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55a8c57ce538 <line:756:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55a8c57ce048 <col:3> 'int' lvalue Var 0x55a8c57c8f70 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55a8c57ce508 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55a8c57ce4d8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55a8c57ce4c0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55a8c57ce068 <col:15> '_Bool' lvalue Var 0x55a8c57c91d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55a8c57ce4f0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a8c57ce088 <col:31> 'int' lvalue Var 0x55a8c57c8f70 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55a8c57ce4a0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55a8c57ce470 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55a8c57ce298 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55a8c57ce1b8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55a8c57ce0e0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55a8c57ce0c8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55a8c57ce0a8 <col:45> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55a8c57ce198 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55a8c57ce130 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55a8c57ce118 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55a8c57ce0f8 <col:64> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55a8c57ce180 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55a8c57ce168 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55a8c57ce148 <col:83> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55a8c57ce278 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55a8c57ce210 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55a8c57ce1f8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55a8c57ce1d8 <col:102> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55a8c57ce260 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55a8c57ce248 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55a8c57ce228 <col:121> '_Bool' lvalue Var 0x55a8c57c8d90 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55a8c57ce458 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a8c57ce2b8 <col:138> 'int' lvalue Var 0x55a8c57c8f70 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55a8c57ce438 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55a8c57ce408 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55a8c57ce378 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55a8c57ce330 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55a8c57ce318 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55a8c57ce2d8 <col:151> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55a8c57ce360 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55a8c57ce348 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55a8c57ce2f8 <col:169> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55a8c57ce3d8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55a8c57ce398 <col:186> 'int' lvalue Var 0x55a8c57c8f70 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55a8c57ce3f0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55a8c57ce3b8 <col:198> 'int' lvalue Var 0x55a8c57c8f70 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55a8c57cea48 <line:757:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55a8c57ce558 <col:3> 'int' lvalue Var 0x55a8c57c9068 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55a8c57cea18 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55a8c57ce9e8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55a8c57ce9d0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55a8c57ce578 <col:15> '_Bool' lvalue Var 0x55a8c57c91d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55a8c57cea00 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a8c57ce598 <col:31> 'int' lvalue Var 0x55a8c57c9068 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55a8c57ce9b0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55a8c57ce980 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55a8c57ce7a8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55a8c57ce6c8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55a8c57ce5f0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55a8c57ce5d8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55a8c57ce5b8 <col:45> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55a8c57ce6a8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55a8c57ce640 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55a8c57ce628 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55a8c57ce608 <col:64> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55a8c57ce690 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55a8c57ce678 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55a8c57ce658 <col:83> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55a8c57ce788 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55a8c57ce720 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55a8c57ce708 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55a8c57ce6e8 <col:102> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55a8c57ce770 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55a8c57ce758 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55a8c57ce738 <col:121> '_Bool' lvalue Var 0x55a8c57c8d90 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55a8c57ce968 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a8c57ce7c8 <col:138> 'int' lvalue Var 0x55a8c57c9068 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55a8c57ce948 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55a8c57ce918 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55a8c57ce888 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55a8c57ce840 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55a8c57ce828 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55a8c57ce7e8 <col:151> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55a8c57ce870 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55a8c57ce858 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55a8c57ce808 <col:169> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55a8c57ce8e8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55a8c57ce8a8 <col:186> 'int' lvalue Var 0x55a8c57c9068 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55a8c57ce900 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55a8c57ce8c8 <col:198> 'int' lvalue Var 0x55a8c57c9068 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55a8c57cf018 <line:758:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57cea68 <col:3> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a8c57cf000 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a8c57cefd0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55a8c57cef60 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a8c57cef48 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a8c57cea88 <col:20> '_Bool' lvalue Var 0x55a8c57c91d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a8c57cef90 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a8c57cef78 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a8c57ceaa8 <col:36> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55a8c57cef28 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55a8c57ceef8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55a8c57cecb8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55a8c57cebd8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55a8c57ceb00 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55a8c57ceae8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55a8c57ceac8 <col:55> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55a8c57cebb8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55a8c57ceb50 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55a8c57ceb38 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55a8c57ceb18 <col:74> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55a8c57ceba0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55a8c57ceb88 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55a8c57ceb68 <col:93> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55a8c57cec98 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55a8c57cec30 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55a8c57cec18 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55a8c57cebf8 <col:112> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55a8c57cec80 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55a8c57cec68 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55a8c57cec48 <col:131> '_Bool' lvalue Var 0x55a8c57c8d90 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55a8c57ceee0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55a8c57ceec8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a8c57cecd8 <col:148> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55a8c57ceea8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55a8c57cee78 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55a8c57ced98 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55a8c57ced50 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55a8c57ced38 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55a8c57cecf8 <col:166> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55a8c57ced80 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55a8c57ced68 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55a8c57ced18 <col:184> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55a8c57cee30 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55a8c57cede8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55a8c57cedb8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55a8c57cee60 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55a8c57cee48 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55a8c57cee10 <col:212> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a8c57cf5e0 <line:759:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57cf038 <col:3> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a8c57cf5c8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a8c57cf598 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55a8c57cf550 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a8c57cf538 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a8c57cf058 <col:20> '_Bool' lvalue Var 0x55a8c57c91d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a8c57cf580 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a8c57cf568 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a8c57cf078 <col:36> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55a8c57cf518 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55a8c57cf4e8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55a8c57cf288 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55a8c57cf1a8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55a8c57cf0d0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55a8c57cf0b8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55a8c57cf098 <col:55> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55a8c57cf188 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55a8c57cf120 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55a8c57cf108 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55a8c57cf0e8 <col:74> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55a8c57cf170 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55a8c57cf158 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55a8c57cf138 <col:93> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55a8c57cf268 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55a8c57cf200 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55a8c57cf1e8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55a8c57cf1c8 <col:112> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55a8c57cf250 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55a8c57cf238 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55a8c57cf218 <col:131> '_Bool' lvalue Var 0x55a8c57c8d90 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55a8c57cf4d0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55a8c57cf4b8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a8c57cf2a8 <col:148> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55a8c57cf498 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55a8c57cf468 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55a8c57cf368 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55a8c57cf320 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55a8c57cf308 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55a8c57cf2c8 <col:166> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55a8c57cf350 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55a8c57cf338 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55a8c57cf2e8 <col:184> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55a8c57cf438 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55a8c57cf3b8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55a8c57cf388 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55a8c57cf450 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55a8c57cf410 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55a8c57cf3e0 <col:219> 'int' 0
|   |-BinaryOperator 0x55a8c57cfb88 <line:760:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57cf600 <col:3> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55a8c57cfb70 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a8c57cfb40 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55a8c57cfaf8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a8c57cfae0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a8c57cf620 <col:20> '_Bool' lvalue Var 0x55a8c57c91d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a8c57cfb28 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a8c57cfb10 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a8c57cf640 <col:36> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55a8c57cfac0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55a8c57cfa90 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55a8c57cf850 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55a8c57cf770 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55a8c57cf698 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55a8c57cf680 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55a8c57cf660 <col:55> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55a8c57cf750 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55a8c57cf6e8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55a8c57cf6d0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55a8c57cf6b0 <col:74> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55a8c57cf738 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55a8c57cf720 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55a8c57cf700 <col:93> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55a8c57cf830 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55a8c57cf7c8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55a8c57cf7b0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55a8c57cf790 <col:112> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55a8c57cf818 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55a8c57cf800 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55a8c57cf7e0 <col:131> '_Bool' lvalue Var 0x55a8c57c8d90 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55a8c57cfa78 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55a8c57cfa60 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a8c57cf870 <col:148> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55a8c57cfa40 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55a8c57cfa10 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55a8c57cf930 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55a8c57cf8e8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55a8c57cf8d0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55a8c57cf890 <col:166> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55a8c57cf918 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55a8c57cf900 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55a8c57cf8b0 <col:184> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55a8c57cf9c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55a8c57cf980 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55a8c57cf950 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55a8c57cf9f8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55a8c57cf9e0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55a8c57cf9a8 <col:212> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55a8c57d0170 <line:761:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57cfba8 <col:3> '_Bool' lvalue Var 0x55a8c57c8d90 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55a8c57d0158 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a8c57d0128 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55a8c57d00e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a8c57d00c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a8c57cfbc8 <col:20> '_Bool' lvalue Var 0x55a8c57c91d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a8c57d0110 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a8c57d00f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a8c57cfbe8 <col:36> '_Bool' lvalue Var 0x55a8c57c8d90 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x55a8c57d00a8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55a8c57d0078 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55a8c57cfdf8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55a8c57cfd18 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55a8c57cfc40 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55a8c57cfc28 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55a8c57cfc08 <col:55> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55a8c57cfcf8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55a8c57cfc90 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55a8c57cfc78 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55a8c57cfc58 <col:74> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55a8c57cfce0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55a8c57cfcc8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55a8c57cfca8 <col:93> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55a8c57cfdd8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55a8c57cfd70 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55a8c57cfd58 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55a8c57cfd38 <col:112> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55a8c57cfdc0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55a8c57cfda8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55a8c57cfd88 <col:131> '_Bool' lvalue Var 0x55a8c57c8d90 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55a8c57d0060 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55a8c57d0048 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a8c57cfe18 <col:148> '_Bool' lvalue Var 0x55a8c57c8d90 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x55a8c57d0028 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55a8c57cfff8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55a8c57cfed8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55a8c57cfe90 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55a8c57cfe78 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55a8c57cfe38 <col:166> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55a8c57cfec0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55a8c57cfea8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55a8c57cfe58 <col:184> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55a8c57cffa8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55a8c57cff28 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55a8c57cfef8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55a8c57cffe0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55a8c57cff80 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55a8c57cff50 <col:219> 'int' 0
|   |-BinaryOperator 0x55a8c57d01e8 <line:762:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55a8c57d0190 <col:3> 'int' lvalue Var 0x55a8c57c8678 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x55a8c57d01d0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a8c57d01b0 <col:25> 'int' lvalue Var 0x55a8c57c89a8 'y' 'int'
|   |-BinaryOperator 0x55a8c57d0318 <line:763:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55a8c57d0208 <col:3> 'int' lvalue Var 0x55a8c57c89a8 'y' 'int'
|   | `-ConditionalOperator 0x55a8c57d02e8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55a8c57d02a0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55a8c57d0288 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55a8c57d0228 <col:7> '_Bool' lvalue Var 0x55a8c57c8a40 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55a8c57d02b8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a8c57d0248 <col:25> 'int' lvalue Var 0x55a8c57c8ac0 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55a8c57d02d0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55a8c57d0268 <col:37> 'int' lvalue Var 0x55a8c57c89a8 'y' 'int'
|   |-BinaryOperator 0x55a8c57d03b0 <line:764:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57d0338 <col:3> '_Bool' lvalue Var 0x55a8c57c8a40 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55a8c57d0388 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55a8c57d0358 <col:28> 'int' 0
|   |-CallExpr 0x55a8c57d0408 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a8c57d03f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a8c57d03d0 <col:3> 'void ()' Function 0x55a8c576f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a8c57d0460 <line:766:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a8c57d0448 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a8c57d0428 <col:3> 'void ()' Function 0x55a8c576f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a8c57d0748 <line:767:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55a8c57d0480 <col:3> 'int' lvalue Var 0x55a8c57c89a8 'y' 'int'
|   | `-ConditionalOperator 0x55a8c57d0718 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55a8c57d0540 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55a8c57d04f8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55a8c57d04e0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55a8c57d04a0 <col:7> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55a8c57d0528 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55a8c57d0510 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55a8c57d04c0 <col:25> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55a8c57d0700 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a8c57d0560 <col:42> 'int' lvalue Var 0x55a8c57c8f70 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55a8c57d06e0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55a8c57d06b0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55a8c57d0620 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55a8c57d05d8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55a8c57d05c0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55a8c57d0580 <col:55> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55a8c57d0608 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55a8c57d05f0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55a8c57d05a0 <col:73> '_Bool' lvalue Var 0x55a8c57c8d90 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55a8c57d0680 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a8c57d0640 <col:90> 'int' lvalue Var 0x55a8c57c9068 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55a8c57d0698 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a8c57d0660 <col:102> 'int' lvalue Var 0x55a8c57c89a8 'y' 'int'
|   |-BinaryOperator 0x55a8c57d0950 <line:768:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57d0768 <col:3> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a8c57d0938 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a8c57d0908 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a8c57d0828 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a8c57d07e0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a8c57d07c8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a8c57d0788 <col:20> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a8c57d0810 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a8c57d07f8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a8c57d07a8 <col:38> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a8c57d08c0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a8c57d0878 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a8c57d0848 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a8c57d08f0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a8c57d08d8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a8c57d08a0 <col:66> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a8c57d0c38 <line:769:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57d0970 <col:3> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a8c57d0c20 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a8c57d0bf0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a8c57d0b10 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a8c57d0a30 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a8c57d09e8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a8c57d09d0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a8c57d0990 <col:20> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a8c57d0a18 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a8c57d0a00 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a8c57d09b0 <col:38> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55a8c57d0af0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a8c57d0aa8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a8c57d0a90 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a8c57d0a50 <col:56> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a8c57d0ad8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a8c57d0ac0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a8c57d0a70 <col:74> '_Bool' lvalue Var 0x55a8c57c8d90 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a8c57d0ba8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a8c57d0b60 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a8c57d0b30 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a8c57d0bd8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a8c57d0bc0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a8c57d0b88 <col:102> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55a8c57d0e40 <line:770:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57d0c58 <col:3> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55a8c57d0e28 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a8c57d0df8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a8c57d0d18 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a8c57d0cd0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a8c57d0cb8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a8c57d0c78 <col:20> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a8c57d0d00 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a8c57d0ce8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a8c57d0c98 <col:38> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a8c57d0db0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a8c57d0d68 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a8c57d0d38 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a8c57d0de0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a8c57d0dc8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a8c57d0d90 <col:66> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55a8c57d1138 <line:771:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a8c57d0e60 <col:3> '_Bool' lvalue Var 0x55a8c57c8d90 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55a8c57d1120 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a8c57d10f0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a8c57d1010 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a8c57d0f20 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a8c57d0ed8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a8c57d0ec0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a8c57d0e80 <col:20> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a8c57d0f08 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a8c57d0ef0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a8c57d0ea0 <col:38> '_Bool' lvalue Var 0x55a8c57c8c28 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55a8c57d0ff0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a8c57d0f98 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a8c57d0f80 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a8c57d0f40 <col:56> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a8c57d0fc8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a8c57d0fb0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a8c57d0f60 <col:74> '_Bool' lvalue Var 0x55a8c57c8d90 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a8c57d10a8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a8c57d1060 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a8c57d1030 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a8c57d10d8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a8c57d10c0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a8c57d1088 <col:102> '_Bool' lvalue Var 0x55a8c57c8d90 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55a8c57d1190 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a8c57d1178 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a8c57d1158 <col:3> 'void ()' Function 0x55a8c576f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a8c57d11e8 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a8c57d11d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a8c57d11b0 <col:3> 'void ()' Function 0x55a8c576f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a8c57d12a0 <line:774:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55a8c57d1208 <col:3> 'int' lvalue Var 0x55a8c57c8438 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55a8c57d1280 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55a8c57d1268 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a8c57d1228 <col:22> 'int' lvalue Var 0x55a8c57c8438 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55a8c57d1248 <col:41> 'int' 1
|   |-CallExpr 0x55a8c57d12f8 <line:775:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a8c57d12e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a8c57d12c0 <col:3> 'void ()' Function 0x55a8c576f410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55a8c57d1370 <line:776:3, col:36>
|     `-CallExpr 0x55a8c57d1350 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55a8c57d1338 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55a8c57d1318 <col:10> 'void *(void)' Function 0x55a8c576ee68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55a8c57d1578 prev 0x55a8c57c8180 <line:778:1, line:780:1> line:778:6 fence 'void ()'
| `-CompoundStmt 0x55a8c57d1618 <line:779:1, line:780:1>
|-FunctionDecl 0x55a8c57d1648 prev 0x55a8c57c8240 <line:781:1, line:783:1> line:781:6 isync 'void ()'
| `-CompoundStmt 0x55a8c57d16e8 <line:782:1, line:783:1>
|-FunctionDecl 0x55a8c57d1718 prev 0x55a8c57c8300 <line:784:1, line:786:1> line:784:6 lwfence 'void ()'
| `-CompoundStmt 0x55a8c57d17b8 <line:785:1, line:786:1>
`-FunctionDecl 0x55a8c57d1828 <line:787:1, line:822:1> line:787:5 main 'int ()'
  `-CompoundStmt 0x55a8c57d5c00 <line:788:1, line:822:1>
    |-DeclStmt 0x55a8c57d1940 <line:789:3, col:18>
    | `-VarDecl 0x55a8c57d18d8 <col:3, col:13> col:13 used t1601 'pthread_t':'unsigned long'
    |-CallExpr 0x55a8c57d1b48 <line:790:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55a8c57d1b30 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a8c57d1958 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55a8c57af8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55a8c57d1998 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55a8c57d1978 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55a8c57d18d8 't1601' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55a8c57d1b88 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55a8c57d1a10 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55a8c57d19e8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55a8c57d19b0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55a8c57d1ba0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a8c57d1a30 <col:39> 'void *(void *)' Function 0x55a8c57c92e8 'P0' 'void *(void *)'
    | `-ParenExpr 0x55a8c57d1ab0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55a8c57d1a88 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55a8c57d1a50 <col:52> 'int' 0
    |-DeclStmt 0x55a8c57d1c30 <line:791:3, col:18>
    | `-VarDecl 0x55a8c57d1bc8 <col:3, col:13> col:13 used t1602 'pthread_t':'unsigned long'
    |-CallExpr 0x55a8c57d1dd8 <line:792:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55a8c57d1dc0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a8c57d1c48 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55a8c57af8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55a8c57d1c88 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55a8c57d1c68 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55a8c57d1bc8 't1602' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55a8c57d1e18 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55a8c57d1d00 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55a8c57d1cd8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55a8c57d1ca0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55a8c57d1e30 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a8c57d1d20 <col:39> 'void *(void *)' Function 0x55a8c57ca6c0 'P1' 'void *(void *)'
    | `-ParenExpr 0x55a8c57d1da0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55a8c57d1d78 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55a8c57d1d40 <col:52> 'int' 0
    |-CallExpr 0x55a8c57d1e80 <line:793:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55a8c57d1e68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a8c57d1e48 <col:3> 'void ()' Function 0x55a8c576f350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55a8c57d1f50 <line:794:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55a8c57d1ea0 <col:3> '_Bool' lvalue Var 0x55a8c57c8710 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55a8c57d1f38 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55a8c57d1f18 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55a8c57d1f00 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55a8c57d1ec0 <col:21> 'int' lvalue Var 0x55a8c57c8438 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55a8c57d1ee0 <col:41> 'int' 2
    |-CallExpr 0x55a8c57d1fa8 <line:795:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55a8c57d1f90 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a8c57d1f70 <col:3> 'void ()' Function 0x55a8c576f410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55a8c57d2038 <line:796:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55a8c57d2020 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a8c57d1fc8 <col:3> 'void (int)' Function 0x55a8c576eca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55a8c57d2078 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55a8c57d2060 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55a8c57d2000 <col:21> '_Bool' lvalue Var 0x55a8c57c8710 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55a8c57d20c8 <line:797:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55a8c57d20b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a8c57d2090 <col:3> 'void ()' Function 0x55a8c576f350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55a8c57d23b0 <line:798:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55a8c57d20e8 <col:3> 'int' lvalue Var 0x55a8c57c89a8 'y' 'int'
    | `-ConditionalOperator 0x55a8c57d2380 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55a8c57d21a8 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55a8c57d2160 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55a8c57d2148 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55a8c57d2108 <col:7> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55a8c57d2190 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55a8c57d2178 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55a8c57d2128 <col:25> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55a8c57d2368 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55a8c57d21c8 <col:42> 'int' lvalue Var 0x55a8c57c8f70 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55a8c57d2348 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55a8c57d2318 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55a8c57d2288 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55a8c57d2240 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55a8c57d2228 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55a8c57d21e8 <col:55> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55a8c57d2270 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55a8c57d2258 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55a8c57d2208 <col:73> '_Bool' lvalue Var 0x55a8c57c8ca0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55a8c57d22e8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55a8c57d22a8 <col:90> 'int' lvalue Var 0x55a8c57c9068 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55a8c57d2300 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55a8c57d22c8 <col:102> 'int' lvalue Var 0x55a8c57c89a8 'y' 'int'
    |-BinaryOperator 0x55a8c57d25b8 <line:799:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55a8c57d23d0 <col:3> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55a8c57d25a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a8c57d2570 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55a8c57d2490 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55a8c57d2448 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55a8c57d2430 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55a8c57d23f0 <col:20> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55a8c57d2478 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55a8c57d2460 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55a8c57d2410 <col:38> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55a8c57d2528 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55a8c57d24e0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55a8c57d24b0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55a8c57d2558 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55a8c57d2540 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55a8c57d2508 <col:66> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55a8c57d28a0 <line:800:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55a8c57d25d8 <col:3> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55a8c57d2888 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a8c57d2858 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55a8c57d2778 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55a8c57d2698 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55a8c57d2650 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55a8c57d2638 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55a8c57d25f8 <col:20> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55a8c57d2680 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55a8c57d2668 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55a8c57d2618 <col:38> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55a8c57d2758 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55a8c57d2710 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55a8c57d26f8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55a8c57d26b8 <col:56> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55a8c57d2740 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55a8c57d2728 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55a8c57d26d8 <col:74> '_Bool' lvalue Var 0x55a8c57c8ca0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55a8c57d2810 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55a8c57d27c8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55a8c57d2798 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55a8c57d2840 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55a8c57d2828 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55a8c57d27f0 <col:102> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55a8c57d2aa8 <line:801:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55a8c57d28c0 <col:3> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55a8c57d2a90 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a8c57d2a60 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55a8c57d2980 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55a8c57d2938 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55a8c57d2920 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55a8c57d28e0 <col:20> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55a8c57d2968 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55a8c57d2950 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55a8c57d2900 <col:38> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55a8c57d2a18 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55a8c57d29d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55a8c57d29a0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55a8c57d2a48 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55a8c57d2a30 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55a8c57d29f8 <col:66> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55a8c57d2d90 <line:802:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55a8c57d2ac8 <col:3> '_Bool' lvalue Var 0x55a8c57c8ca0 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55a8c57d2d78 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a8c57d2d48 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55a8c57d2c68 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55a8c57d2b88 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55a8c57d2b40 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55a8c57d2b28 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55a8c57d2ae8 <col:20> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55a8c57d2b70 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55a8c57d2b58 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55a8c57d2b08 <col:38> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55a8c57d2c48 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55a8c57d2c00 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55a8c57d2be8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55a8c57d2ba8 <col:56> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55a8c57d2c30 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55a8c57d2c18 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55a8c57d2bc8 <col:74> '_Bool' lvalue Var 0x55a8c57c8ca0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55a8c57d2d00 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55a8c57d2cb8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55a8c57d2c88 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55a8c57d2d30 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55a8c57d2d18 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55a8c57d2ce0 <col:102> '_Bool' lvalue Var 0x55a8c57c8ca0 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55a8c57d2de8 <line:803:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55a8c57d2dd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a8c57d2db0 <col:3> 'void ()' Function 0x55a8c576f410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55a8c57d2e40 <line:804:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55a8c57d2e28 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a8c57d2e08 <col:3> 'void ()' Function 0x55a8c576f350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55a8c57d2ef0 <line:805:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x55a8c57d2e60 <col:3> '_Bool' lvalue Var 0x55a8c57c9158 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x55a8c57d2ed8 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x55a8c57d2eb8 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x55a8c57d2ea0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55a8c57d2e80 <col:19> 'void *(void)' Function 0x55a8c576ee68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x55a8c57d2fa0 <line:806:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x55a8c57d2f10 <col:3> '_Bool' lvalue Var 0x55a8c57c91d0 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x55a8c57d2f88 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x55a8c57d2f68 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x55a8c57d2f50 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55a8c57d2f30 <col:19> 'void *(void)' Function 0x55a8c576ee68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x55a8c57d3028 <line:807:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x55a8c57d2fc0 <col:3> '_Bool' lvalue Var 0x55a8c57c8a40 'y$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x55a8c57d3010 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x55a8c57d2fe0 <col:21> '_Bool' lvalue Var 0x55a8c57c91d0 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x55a8c57d30a0 <line:808:3, col:15> 'int' '='
    | |-DeclRefExpr 0x55a8c57d3048 <col:3> 'int' lvalue Var 0x55a8c57c8ac0 'y$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x55a8c57d3088 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55a8c57d3068 <col:15> 'int' lvalue Var 0x55a8c57c89a8 'y' 'int'
    |-BinaryOperator 0x55a8c57d34d8 <line:809:3, col:162> 'int' '='
    | |-DeclRefExpr 0x55a8c57d30c0 <col:3> 'int' lvalue Var 0x55a8c57c89a8 'y' 'int'
    | `-ConditionalOperator 0x55a8c57d34a8 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x55a8c57d32d0 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x55a8c57d31f0 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x55a8c57d3118 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x55a8c57d3100 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x55a8c57d30e0 <col:8> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x55a8c57d31d0 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x55a8c57d3168 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x55a8c57d3150 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x55a8c57d3130 <col:27> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x55a8c57d31b8 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x55a8c57d31a0 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x55a8c57d3180 <col:46> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x55a8c57d32b0 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x55a8c57d3248 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x55a8c57d3230 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55a8c57d3210 <col:65> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x55a8c57d3298 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x55a8c57d3280 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x55a8c57d3260 <col:84> '_Bool' lvalue Var 0x55a8c57c8ca0 'y$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55a8c57d3490 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55a8c57d32f0 <col:101> 'int' lvalue Var 0x55a8c57c89a8 'y' 'int'
    |   `-ParenExpr 0x55a8c57d3470 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x55a8c57d3440 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x55a8c57d33b0 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55a8c57d3368 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55a8c57d3350 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55a8c57d3310 <col:106> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55a8c57d3398 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55a8c57d3380 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55a8c57d3330 <col:124> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55a8c57d3410 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55a8c57d33d0 <col:141> 'int' lvalue Var 0x55a8c57c8f70 'y$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x55a8c57d3428 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55a8c57d33f0 <col:153> 'int' lvalue Var 0x55a8c57c9068 'y$w_buff1' 'int'
    |-BinaryOperator 0x55a8c57d39e8 <line:810:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55a8c57d34f8 <col:3> 'int' lvalue Var 0x55a8c57c8f70 'y$w_buff0' 'int'
    | `-ConditionalOperator 0x55a8c57d39b8 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55a8c57d3988 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55a8c57d3970 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55a8c57d3518 <col:15> '_Bool' lvalue Var 0x55a8c57c91d0 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55a8c57d39a0 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55a8c57d3538 <col:31> 'int' lvalue Var 0x55a8c57c8f70 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55a8c57d3950 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55a8c57d3920 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55a8c57d3748 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55a8c57d3668 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55a8c57d3590 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55a8c57d3578 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55a8c57d3558 <col:45> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55a8c57d3648 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55a8c57d35e0 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55a8c57d35c8 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55a8c57d35a8 <col:64> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55a8c57d3630 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55a8c57d3618 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55a8c57d35f8 <col:83> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55a8c57d3728 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55a8c57d36c0 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55a8c57d36a8 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55a8c57d3688 <col:102> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55a8c57d3710 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55a8c57d36f8 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55a8c57d36d8 <col:121> '_Bool' lvalue Var 0x55a8c57c8ca0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55a8c57d3908 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55a8c57d3768 <col:138> 'int' lvalue Var 0x55a8c57c8f70 'y$w_buff0' 'int'
    |       `-ParenExpr 0x55a8c57d38e8 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55a8c57d38b8 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55a8c57d3828 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55a8c57d37e0 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55a8c57d37c8 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55a8c57d3788 <col:151> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55a8c57d3810 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55a8c57d37f8 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55a8c57d37a8 <col:169> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55a8c57d3888 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55a8c57d3848 <col:186> 'int' lvalue Var 0x55a8c57c8f70 'y$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x55a8c57d38a0 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55a8c57d3868 <col:198> 'int' lvalue Var 0x55a8c57c8f70 'y$w_buff0' 'int'
    |-BinaryOperator 0x55a8c57d3ef8 <line:811:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55a8c57d3a08 <col:3> 'int' lvalue Var 0x55a8c57c9068 'y$w_buff1' 'int'
    | `-ConditionalOperator 0x55a8c57d3ec8 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55a8c57d3e98 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55a8c57d3e80 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55a8c57d3a28 <col:15> '_Bool' lvalue Var 0x55a8c57c91d0 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55a8c57d3eb0 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55a8c57d3a48 <col:31> 'int' lvalue Var 0x55a8c57c9068 'y$w_buff1' 'int'
    |   `-ParenExpr 0x55a8c57d3e60 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55a8c57d3e30 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55a8c57d3c58 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55a8c57d3b78 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55a8c57d3aa0 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55a8c57d3a88 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55a8c57d3a68 <col:45> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55a8c57d3b58 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55a8c57d3af0 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55a8c57d3ad8 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55a8c57d3ab8 <col:64> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55a8c57d3b40 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55a8c57d3b28 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55a8c57d3b08 <col:83> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55a8c57d3c38 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55a8c57d3bd0 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55a8c57d3bb8 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55a8c57d3b98 <col:102> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55a8c57d3c20 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55a8c57d3c08 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55a8c57d3be8 <col:121> '_Bool' lvalue Var 0x55a8c57c8ca0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55a8c57d3e18 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55a8c57d3c78 <col:138> 'int' lvalue Var 0x55a8c57c9068 'y$w_buff1' 'int'
    |       `-ParenExpr 0x55a8c57d3df8 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55a8c57d3dc8 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55a8c57d3d38 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55a8c57d3cf0 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55a8c57d3cd8 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55a8c57d3c98 <col:151> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55a8c57d3d20 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55a8c57d3d08 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55a8c57d3cb8 <col:169> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55a8c57d3d98 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55a8c57d3d58 <col:186> 'int' lvalue Var 0x55a8c57c9068 'y$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x55a8c57d3db0 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55a8c57d3d78 <col:198> 'int' lvalue Var 0x55a8c57c9068 'y$w_buff1' 'int'
    |-BinaryOperator 0x55a8c57d44c0 <line:812:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55a8c57d3f18 <col:3> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55a8c57d44a8 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a8c57d4478 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55a8c57d4430 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55a8c57d4418 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55a8c57d3f38 <col:20> '_Bool' lvalue Var 0x55a8c57c91d0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55a8c57d4460 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55a8c57d4448 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55a8c57d3f58 <col:36> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x55a8c57d43f8 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55a8c57d43c8 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55a8c57d4188 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55a8c57d40a8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55a8c57d3fb0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55a8c57d3f98 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55a8c57d3f78 <col:55> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55a8c57d4088 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55a8c57d4020 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55a8c57d3fe8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55a8c57d3fc8 <col:74> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55a8c57d4070 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55a8c57d4058 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55a8c57d4038 <col:93> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55a8c57d4168 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55a8c57d4100 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55a8c57d40e8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55a8c57d40c8 <col:112> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55a8c57d4150 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55a8c57d4138 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55a8c57d4118 <col:131> '_Bool' lvalue Var 0x55a8c57c8ca0 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55a8c57d43b0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55a8c57d4398 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55a8c57d41a8 <col:148> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x55a8c57d4378 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55a8c57d4348 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55a8c57d4268 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55a8c57d4220 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55a8c57d4208 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55a8c57d41c8 <col:166> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55a8c57d4250 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55a8c57d4238 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55a8c57d41e8 <col:184> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55a8c57d4300 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55a8c57d42b8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55a8c57d4288 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55a8c57d4330 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55a8c57d4318 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55a8c57d42e0 <col:212> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55a8c57d4a88 <line:813:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55a8c57d44e0 <col:3> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55a8c57d4a70 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a8c57d4a40 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55a8c57d49f8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55a8c57d49e0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55a8c57d4500 <col:20> '_Bool' lvalue Var 0x55a8c57c91d0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55a8c57d4a28 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55a8c57d4a10 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55a8c57d4520 <col:36> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x55a8c57d49c0 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55a8c57d4990 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55a8c57d4730 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55a8c57d4650 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55a8c57d4578 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55a8c57d4560 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55a8c57d4540 <col:55> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55a8c57d4630 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55a8c57d45c8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55a8c57d45b0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55a8c57d4590 <col:74> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55a8c57d4618 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55a8c57d4600 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55a8c57d45e0 <col:93> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55a8c57d4710 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55a8c57d46a8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55a8c57d4690 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55a8c57d4670 <col:112> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55a8c57d46f8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55a8c57d46e0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55a8c57d46c0 <col:131> '_Bool' lvalue Var 0x55a8c57c8ca0 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55a8c57d4978 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55a8c57d4960 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55a8c57d4750 <col:148> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x55a8c57d4940 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55a8c57d4910 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55a8c57d4810 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55a8c57d47c8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55a8c57d47b0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55a8c57d4770 <col:166> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55a8c57d47f8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55a8c57d47e0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55a8c57d4790 <col:184> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55a8c57d48e0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55a8c57d4860 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55a8c57d4830 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55a8c57d48f8 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55a8c57d48b8 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55a8c57d4888 <col:219> 'int' 0
    |-BinaryOperator 0x55a8c57d5048 <line:814:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55a8c57d4aa8 <col:3> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55a8c57d5030 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a8c57d4fe8 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55a8c57d4fa0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55a8c57d4f88 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55a8c57d4ac8 <col:20> '_Bool' lvalue Var 0x55a8c57c91d0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55a8c57d4fd0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55a8c57d4fb8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55a8c57d4ae8 <col:36> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x55a8c57d4f68 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55a8c57d4f38 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55a8c57d4cf8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55a8c57d4c18 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55a8c57d4b40 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55a8c57d4b28 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55a8c57d4b08 <col:55> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55a8c57d4bf8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55a8c57d4b90 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55a8c57d4b78 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55a8c57d4b58 <col:74> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55a8c57d4be0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55a8c57d4bc8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55a8c57d4ba8 <col:93> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55a8c57d4cd8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55a8c57d4c70 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55a8c57d4c58 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55a8c57d4c38 <col:112> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55a8c57d4cc0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55a8c57d4ca8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55a8c57d4c88 <col:131> '_Bool' lvalue Var 0x55a8c57c8ca0 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55a8c57d4f20 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55a8c57d4f08 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55a8c57d4d18 <col:148> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x55a8c57d4ee8 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55a8c57d4eb8 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55a8c57d4dd8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55a8c57d4d90 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55a8c57d4d78 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55a8c57d4d38 <col:166> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55a8c57d4dc0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55a8c57d4da8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55a8c57d4d58 <col:184> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55a8c57d4e70 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55a8c57d4e28 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55a8c57d4df8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55a8c57d4ea0 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55a8c57d4e88 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55a8c57d4e50 <col:212> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55a8c57d5610 <line:815:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55a8c57d5068 <col:3> '_Bool' lvalue Var 0x55a8c57c8ca0 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55a8c57d55f8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a8c57d55c8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55a8c57d5580 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55a8c57d5568 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55a8c57d5088 <col:20> '_Bool' lvalue Var 0x55a8c57c91d0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55a8c57d55b0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55a8c57d5598 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55a8c57d50a8 <col:36> '_Bool' lvalue Var 0x55a8c57c8ca0 'y$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x55a8c57d5548 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55a8c57d5518 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55a8c57d52b8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55a8c57d51d8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55a8c57d5100 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55a8c57d50e8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55a8c57d50c8 <col:55> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55a8c57d51b8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55a8c57d5150 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55a8c57d5138 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55a8c57d5118 <col:74> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55a8c57d51a0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55a8c57d5188 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55a8c57d5168 <col:93> '_Bool' lvalue Var 0x55a8c57c90e0 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55a8c57d5298 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55a8c57d5230 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55a8c57d5218 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55a8c57d51f8 <col:112> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55a8c57d5280 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55a8c57d5268 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55a8c57d5248 <col:131> '_Bool' lvalue Var 0x55a8c57c8ca0 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55a8c57d5500 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55a8c57d54e8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55a8c57d52d8 <col:148> '_Bool' lvalue Var 0x55a8c57c8ca0 'y$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x55a8c57d54c8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55a8c57d5498 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55a8c57d5398 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55a8c57d5350 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55a8c57d5338 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55a8c57d52f8 <col:166> '_Bool' lvalue Var 0x55a8c57c8fe8 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55a8c57d5380 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55a8c57d5368 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55a8c57d5318 <col:184> '_Bool' lvalue Var 0x55a8c57c8b38 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55a8c57d5468 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55a8c57d53e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55a8c57d53b8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55a8c57d5480 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55a8c57d5440 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55a8c57d5410 <col:219> 'int' 0
    |-BinaryOperator 0x55a8c57d58e0 <line:816:3, col:95> '_Bool' '='
    | |-DeclRefExpr 0x55a8c57d5630 <col:3> '_Bool' lvalue Var 0x55a8c57c8788 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55a8c57d58c8 <col:21, col:95> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55a8c57d58b0 <col:21, col:95> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55a8c57d5890 <col:22, col:95> 'int'
    |       `-BinaryOperator 0x55a8c57d5870 <col:23, col:94> 'int' '&&'
    |         |-BinaryOperator 0x55a8c57d57d8 <col:23, col:66> 'int' '&&'
    |         | |-BinaryOperator 0x55a8c57d5740 <col:23, col:38> 'int' '&&'
    |         | | |-BinaryOperator 0x55a8c57d56a8 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55a8c57d5690 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55a8c57d5650 <col:23> 'int' lvalue Var 0x55a8c57c8888 'x' 'int'
    |         | | | `-IntegerLiteral 0x55a8c57d5670 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x55a8c57d5720 <col:33, col:38> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55a8c57d5708 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55a8c57d56c8 <col:33> 'int' lvalue Var 0x55a8c57c89a8 'y' 'int'
    |         | |   `-IntegerLiteral 0x55a8c57d56e8 <col:38> 'int' 2
    |         | `-BinaryOperator 0x55a8c57d57b8 <col:43, col:66> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55a8c57d57a0 <col:43> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55a8c57d5760 <col:43> 'int' lvalue Var 0x55a8c57c8558 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x55a8c57d5780 <col:66> 'int' 1
    |         `-BinaryOperator 0x55a8c57d5850 <col:71, col:94> 'int' '=='
    |           |-ImplicitCastExpr 0x55a8c57d5838 <col:71> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55a8c57d57f8 <col:71> 'int' lvalue Var 0x55a8c57c8678 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x55a8c57d5818 <col:94> 'int' 1
    |-BinaryOperator 0x55a8c57d5a10 <line:817:3, col:37> 'int' '='
    | |-DeclRefExpr 0x55a8c57d5900 <col:3> 'int' lvalue Var 0x55a8c57c89a8 'y' 'int'
    | `-ConditionalOperator 0x55a8c57d59e0 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x55a8c57d5998 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55a8c57d5980 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55a8c57d5920 <col:7> '_Bool' lvalue Var 0x55a8c57c8a40 'y$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x55a8c57d59b0 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55a8c57d5940 <col:25> 'int' lvalue Var 0x55a8c57c8ac0 'y$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x55a8c57d59c8 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55a8c57d5960 <col:37> 'int' lvalue Var 0x55a8c57c89a8 'y' 'int'
    |-BinaryOperator 0x55a8c57d5aa8 <line:818:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x55a8c57d5a30 <col:3> '_Bool' lvalue Var 0x55a8c57c8a40 'y$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x55a8c57d5a80 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x55a8c57d5a50 <col:28> 'int' 0
    |-CallExpr 0x55a8c57d5b00 <line:819:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55a8c57d5ae8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a8c57d5ac8 <col:3> 'void ()' Function 0x55a8c576f410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55a8c57d5b78 <line:820:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55a8c57d5b60 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a8c57d5b20 <col:3> 'void (int)' Function 0x55a8c576f0d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55a8c57d5bb8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55a8c57d5ba0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55a8c57d5b40 <col:21> '_Bool' lvalue Var 0x55a8c57c8788 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55a8c57d5bf0 <line:821:3, col:10>
      `-IntegerLiteral 0x55a8c57d5bd0 <col:10> 'int' 0
