TranslationUnitDecl 0x563dfbb97f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x563dfbb98848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x563dfbb98520 '__int128'
|-TypedefDecl 0x563dfbb988b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x563dfbb98540 'unsigned __int128'
|-TypedefDecl 0x563dfbb98bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x563dfbb98990 'struct __NSConstantString_tag'
|   `-Record 0x563dfbb98910 '__NSConstantString_tag'
|-TypedefDecl 0x563dfbb98c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x563dfbb98c20 'char *'
|   `-BuiltinType 0x563dfbb98020 'char'
|-TypedefDecl 0x563dfbbd7b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x563dfbb98f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x563dfbb98d40 'struct __va_list_tag'
|     `-Record 0x563dfbb98cc0 '__va_list_tag'
|-FunctionDecl 0x563dfbbd7ca0 <pthread-wmm/safe021_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x563dfbbd7bd0 <col:31> col:34 'int'
|-FunctionDecl 0x563dfbbd7e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x563dfbbd7f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x563dfbbd80d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x563dfbbd8048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x563dfbbd8308 <col:40, col:99>
|   |-IfStmt 0x563dfbbd82d8 <col:42, col:88>
|   | |-UnaryOperator 0x563dfbbd81b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x563dfbbd81a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x563dfbbd8180 <col:47> 'int' lvalue ParmVar 0x563dfbbd8048 'expression' 'int'
|   | `-CompoundStmt 0x563dfbbd82c0 <col:59, col:88>
|   |   `-LabelStmt 0x563dfbbd82a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x563dfbbd8238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x563dfbbd8220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x563dfbbd81d0 <col:68> 'void () __attribute__((noreturn))' Function 0x563dfbbd7f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x563dfbbd82f0 <col:89>
|   `-ReturnStmt 0x563dfbbd82f8 <col:91>
|-FunctionDecl 0x563dfbbd8350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x563dfbbd8410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x563dfbbd8790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563dfbbd84c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x563dfbbd8548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x563dfbbd85c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x563dfbbd8648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x563dfbbd8850 <line:10:22>
|-FunctionDecl 0x563dfbbfe8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563dfbbd88c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x563dfbbd8940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x563dfbbd89c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x563dfbbd8a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x563dfbbfe960 <line:13:22>
|-FunctionDecl 0x563dfbbfec10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563dfbbfe9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x563dfbbfea50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x563dfbbfead0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x563dfbbfecc8 <line:15:22>
|-TypedefDecl 0x563dfbbfed38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x563dfbb980e0 'unsigned char'
|-TypedefDecl 0x563dfbbfeda8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x563dfbb98100 'unsigned short'
|-TypedefDecl 0x563dfbbfee18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x563dfbb98120 'unsigned int'
|-TypedefDecl 0x563dfbbfee88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x563dfbb98140 'unsigned long'
|-TypedefDecl 0x563dfbbfeef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x563dfbb98040 'signed char'
|-TypedefDecl 0x563dfbbfef68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x563dfbb980e0 'unsigned char'
|-TypedefDecl 0x563dfbbfefd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x563dfbb98060 'short'
|-TypedefDecl 0x563dfbbff048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x563dfbb98100 'unsigned short'
|-TypedefDecl 0x563dfbbff0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x563dfbb98080 'int'
|-TypedefDecl 0x563dfbbff128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x563dfbb98120 'unsigned int'
|-TypedefDecl 0x563dfbbff198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x563dfbb980a0 'long'
|-TypedefDecl 0x563dfbbff208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x563dfbb98140 'unsigned long'
|-TypedefDecl 0x563dfbbff278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x563dfbb980a0 'long'
|-TypedefDecl 0x563dfbbff2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x563dfbb98140 'unsigned long'
|-TypedefDecl 0x563dfbbff358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x563dfbb98140 'unsigned long'
|-TypedefDecl 0x563dfbbff3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x563dfbb98120 'unsigned int'
|-TypedefDecl 0x563dfbbff438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x563dfbb98120 'unsigned int'
|-TypedefDecl 0x563dfbbff4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x563dfbb98140 'unsigned long'
|-TypedefDecl 0x563dfbbff518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x563dfbb98140 'unsigned long'
|-TypedefDecl 0x563dfbbff588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x563dfbb98120 'unsigned int'
|-TypedefDecl 0x563dfbbff5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x563dfbb98140 'unsigned long'
|-TypedefDecl 0x563dfbbff668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x563dfbb980a0 'long'
|-TypedefDecl 0x563dfbbff6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x563dfbb980a0 'long'
|-TypedefDecl 0x563dfbbff748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x563dfbb98080 'int'
|-RecordDecl 0x563dfbbff7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x563dfbbff918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x563dfbbff9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x563dfbbff970 'struct __fsid_t' sugar
|   `-RecordType 0x563dfbbff820 '__fsid_t'
|     `-Record 0x563dfbbff7a0 ''
|-TypedefDecl 0x563dfbbffa58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x563dfbb980a0 'long'
|-TypedefDecl 0x563dfbbffac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x563dfbb98140 'unsigned long'
|-TypedefDecl 0x563dfbbffb38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x563dfbb98140 'unsigned long'
|-TypedefDecl 0x563dfbbffba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x563dfbb98120 'unsigned int'
|-TypedefDecl 0x563dfbbffc18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x563dfbb980a0 'long'
|-TypedefDecl 0x563dfbbffc88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x563dfbb98120 'unsigned int'
|-TypedefDecl 0x563dfbbffcf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x563dfbb980a0 'long'
|-TypedefDecl 0x563dfbbffd68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x563dfbb98080 'int'
|-TypedefDecl 0x563dfbbffdd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x563dfbb98080 'int'
|-TypedefDecl 0x563dfbbffe48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x563dfbb98080 'int'
|-TypedefDecl 0x563dfbbffeb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x563dfbb987a0 'void *'
|   `-BuiltinType 0x563dfbb97fe0 'void'
|-TypedefDecl 0x563dfbbfff28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x563dfbb980a0 'long'
|-TypedefDecl 0x563dfbbfff98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x563dfbb980a0 'long'
|-TypedefDecl 0x563dfbc00008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x563dfbb980a0 'long'
|-TypedefDecl 0x563dfbc00078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x563dfbb98140 'unsigned long'
|-TypedefDecl 0x563dfbc000e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x563dfbb98140 'unsigned long'
|-TypedefDecl 0x563dfbc00158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x563dfbb98140 'unsigned long'
|-TypedefDecl 0x563dfbc001c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x563dfbb98140 'unsigned long'
|-TypedefDecl 0x563dfbc00238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x563dfbb980a0 'long'
|-TypedefDecl 0x563dfbc002a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x563dfbb980a0 'long'
|-TypedefDecl 0x563dfbc00318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x563dfbb980a0 'long'
|-TypedefDecl 0x563dfbc00388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x563dfbb98140 'unsigned long'
|-TypedefDecl 0x563dfbc00418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x563dfbc003e0 '__off64_t' sugar
|   |-Typedef 0x563dfbbff6d8 '__off64_t'
|   `-BuiltinType 0x563dfbb980a0 'long'
|-TypedefDecl 0x563dfbc00510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x563dfbc004d0 '__quad_t *'
|   `-TypedefType 0x563dfbc00470 '__quad_t' sugar
|     |-Typedef 0x563dfbbff278 '__quad_t'
|     `-BuiltinType 0x563dfbb980a0 'long'
|-TypedefDecl 0x563dfbc00580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x563dfbb98c20 'char *'
|   `-BuiltinType 0x563dfbb98020 'char'
|-TypedefDecl 0x563dfbc005f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x563dfbb980a0 'long'
|-TypedefDecl 0x563dfbc00660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x563dfbb98120 'unsigned int'
|-FunctionDecl 0x563dfbc007a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x563dfbc006d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x563dfbc00ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x563dfbc00ad8 <line:72:3, col:34>
|     `-CallExpr 0x563dfbc00a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x563dfbc00a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x563dfbc00a10 <col:10> '<builtin fn type>' Function 0x563dfbc00880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x563dfbc00ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x563dfbc00a30 <col:29> 'unsigned int' lvalue ParmVar 0x563dfbc006d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x563dfbc00880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x563dfbc00920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x563dfbc00990 <col:10> Implicit
| `-ConstAttr 0x563dfbc009e8 <col:10> Implicit
|-FunctionDecl 0x563dfbc00c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x563dfbc00b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x563dfbc00f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x563dfbc00f48 <line:77:3, col:34>
|     `-CallExpr 0x563dfbc00f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x563dfbc00ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x563dfbc00e78 <col:10> '<builtin fn type>' Function 0x563dfbc00ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x563dfbc00f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x563dfbc00e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x563dfbc00b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x563dfbc00ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x563dfbc00d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x563dfbc00df8 <col:10> Implicit
| `-ConstAttr 0x563dfbc00e50 <col:10> Implicit
|-TypedefDecl 0x563dfbc00f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x563dfbb98140 'unsigned long'
|-TypedefDecl 0x563dfbc01018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x563dfbc00fe0 '__time_t' sugar
|   |-Typedef 0x563dfbbffc18 '__time_t'
|   `-BuiltinType 0x563dfbb980a0 'long'
|-RecordDecl 0x563dfbc01070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x563dfbc01128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x563dfbc011b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x563dfbc01248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x563dfbc01210 '__pid_t' sugar
|   |-Typedef 0x563dfbbff748 '__pid_t'
|   `-BuiltinType 0x563dfbb98080 'int'
|-RecordDecl 0x563dfbc012a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x563dfbc01360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x563dfbc013b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x563dfbc01470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x563dfbc014d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x563dfbb98140 'unsigned long'
|-RecordDecl 0x563dfbc01530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x563dfbc017c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x563dfbc038b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x563dfbc01810 'struct cpu_set_t' sugar
|   `-RecordType 0x563dfbc015b0 'cpu_set_t'
|     `-Record 0x563dfbc01530 ''
|-FunctionDecl 0x563dfbc03b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x563dfbc03958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x563dfbc03a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x563dfbc03c38 <line:107:19>
|-FunctionDecl 0x563dfbc03e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x563dfbc03ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x563dfbc03eb8 <col:69>
|-FunctionDecl 0x563dfbc04030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x563dfbc03f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x563dfbc040d8 <col:64>
|-FunctionDecl 0x563dfbc04398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x563dfbc04140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563dfbc04278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x563dfbc04448 <line:113:22>
|-FunctionDecl 0x563dfbc046c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x563dfbc044b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563dfbc045a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x563dfbc04778 <col:88>
|-FunctionDecl 0x563dfbc04a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x563dfbc047e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563dfbc048c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x563dfbc04950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x563dfbc04b50 <col:62>
|-FunctionDecl 0x563dfbc04cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x563dfbc04bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x563dfbc04d70 <col:63>
|-FunctionDecl 0x563dfbc04e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x563dfbc04f38 <col:47>
|-FunctionDecl 0x563dfbc05040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x563dfbc04fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x563dfbc050e8 <col:69>
|-FunctionDecl 0x563dfbc051f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x563dfbc05158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x563dfbc05298 <col:69>
|-FunctionDecl 0x563dfbc05558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x563dfbc05300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563dfbc05438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x563dfbc05608 <col:88>
|-TypedefDecl 0x563dfbc05698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x563dfbc05660 '__clock_t' sugar
|   |-Typedef 0x563dfbbffa58 '__clock_t'
|   `-BuiltinType 0x563dfbb980a0 'long'
|-TypedefDecl 0x563dfbc05728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x563dfbc056f0 '__clockid_t' sugar
|   |-Typedef 0x563dfbbffe48 '__clockid_t'
|   `-BuiltinType 0x563dfbb98080 'int'
|-TypedefDecl 0x563dfbc057b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x563dfbc05780 '__timer_t' sugar
|   |-Typedef 0x563dfbbffeb8 '__timer_t'
|   `-PointerType 0x563dfbb987a0 'void *'
|     `-BuiltinType 0x563dfbb97fe0 'void'
|-RecordDecl 0x563dfbc05810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x563dfbc058e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x563dfbc05950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x563dfbc059b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x563dfbc05a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x563dfbc05a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x563dfbc05af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x563dfbc05b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x563dfbc05bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x563dfbc05c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x563dfbc05c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x563dfbc05cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x563dfbc05d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x563dfbc05e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x563dfbc05e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x563dfbc05f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x563dfbc06100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x563dfbc061a0 <col:45>
|-FunctionDecl 0x563dfbc06380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x563dfbc06270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x563dfbc06428 <col:54>
|-FunctionDecl 0x563dfbc06628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x563dfbc06490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x563dfbc06508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x563dfbc066d8 <line:157:22>
| `-ConstAttr 0x563dfbc06730 <col:63>
|-FunctionDecl 0x563dfbc07560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x563dfbc06828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x563dfbc07608 <col:56>
|-FunctionDecl 0x563dfbc079b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x563dfbc07678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x563dfbc076f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x563dfbc07770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x563dfbc07868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x563dfbc07a70 <col:54>
|-RecordDecl 0x563dfbc07ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x563dfbc07b78 parent 0x563dfbb97f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x563dfbc07dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x563dfbc07e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x563dfbc07ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x563dfbc07f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x563dfbc08038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x563dfbc08158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x563dfbc08100 'struct __locale_struct *'
|   `-ElaboratedType 0x563dfbc08090 'struct __locale_struct' sugar
|     `-RecordType 0x563dfbc07b50 'struct __locale_struct'
|       `-Record 0x563dfbc07ac8 '__locale_struct'
|-TypedefDecl 0x563dfbc08208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x563dfbc081d0 '__locale_t' sugar
|   |-Typedef 0x563dfbc08158 '__locale_t'
|   `-PointerType 0x563dfbc08100 'struct __locale_struct *'
|     `-ElaboratedType 0x563dfbc08090 'struct __locale_struct' sugar
|       `-RecordType 0x563dfbc07b50 'struct __locale_struct'
|         `-Record 0x563dfbc07ac8 '__locale_struct'
|-FunctionDecl 0x563dfbc08610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x563dfbc08278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x563dfbc082f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x563dfbc08370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x563dfbc08400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x563dfbc08478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x563dfbc086d8 <col:40>
|-FunctionDecl 0x563dfbc088c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x563dfbc087a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x563dfbc08970 <col:66>
|-FunctionDecl 0x563dfbc08a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x563dfbc089d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x563dfbc08b28 <col:69>
|-FunctionDecl 0x563dfbc08d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x563dfbc08b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x563dfbc08c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x563dfbc08e08 <col:52>
|-FunctionDecl 0x563dfbc08fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x563dfbc08e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x563dfbc08f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x563dfbc09060 <col:55>
|-FunctionDecl 0x563dfbc091f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x563dfbc090e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x563dfbc092a0 <col:62>
|-FunctionDecl 0x563dfbc09418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x563dfbc09308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x563dfbc094c0 <col:60>
|-FunctionDecl 0x563dfbc09718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x563dfbc09578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x563dfbc095f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x563dfbc097c8 <col:44>
|-FunctionDecl 0x563dfbc099d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x563dfbc09830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x563dfbc098b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x563dfbc09a88 <col:49>
|-VarDecl 0x563dfbc09b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x563dfbc09c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x563dfbc09c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x563dfbc09d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x563dfbc09e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x563dfbc09f20 <col:42>
|-VarDecl 0x563dfbc09f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x563dfbc0a010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x563dfbc0a198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x563dfbc0a088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x563dfbc0a240 <col:57>
|-FunctionDecl 0x563dfbc0a350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x563dfbc0a2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x563dfbc0a3f8 <col:56>
|-FunctionDecl 0x563dfbc0b540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x563dfbc0a478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x563dfbc0b5e8 <col:59>
|-FunctionDecl 0x563dfbc0b6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x563dfbc0b658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x563dfbc0b798 <col:48>
| `-ConstAttr 0x563dfbc0b7f0 <col:89>
|-FunctionDecl 0x563dfbc0ba58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x563dfbc0b8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x563dfbc0b938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x563dfbc0bcb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x563dfbc0bb48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563dfbc0bbd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x563dfbc0bd68 <col:88>
|-FunctionDecl 0x563dfbc0bf00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x563dfbc0bdd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563dfbc0be60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x563dfbc0bfb0 <col:88>
|-FunctionDecl 0x563dfbc0c1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x563dfbc0c018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563dfbc0c0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x563dfbc0c278 <line:208:22>
|-FunctionDecl 0x563dfbc0c5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x563dfbc0c2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563dfbc0c360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x563dfbc0c3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x563dfbc0c480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x563dfbc0c8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x563dfbc0c6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x563dfbc0c7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x563dfbc0c998 <col:85>
|-FunctionDecl 0x563dfbc0cd88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x563dfbc0ca00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563dfbc0cb38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x563dfbc0cc40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x563dfbc0ce40 <col:52>
|-FunctionDecl 0x563dfbc0cfb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x563dfbc0cea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x563dfbc0d060 <col:61>
|-FunctionDecl 0x563dfbc0d560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x563dfbc0d0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x563dfbc0d148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x563dfbc0d278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x563dfbc0d368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x563dfbc0d620 <col:62>
|-FunctionDecl 0x563dfbc0d838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x563dfbc0d688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x563dfbc0d718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x563dfbc0d8e8 <line:221:22>
|-FunctionDecl 0x563dfbc0d9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x563dfbc0d950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x563dfbc0da90 <col:65>
|-TypedefDecl 0x563dfbc0db00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x563dfbb98140 'unsigned long'
|-RecordDecl 0x563dfbc0db58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x563dfbc0dca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x563dfbc0dd08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563dfbc0ddb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x563dfbc0dd60 'union pthread_attr_t' sugar
|   `-RecordType 0x563dfbc0dbe0 'union pthread_attr_t'
|     `-Record 0x563dfbc0db58 'pthread_attr_t'
|-RecordDecl 0x563dfbc0de10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x563dfbc0df88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x563dfbc0e000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x563dfbc0e0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x563dfbc0e050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x563dfbc0de90 'struct __pthread_internal_list'
|     `-Record 0x563dfbc0de10 '__pthread_internal_list'
|-RecordDecl 0x563dfbc0e120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x563dfbc0e1c8 parent 0x563dfbb97f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x563dfbc0e2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x563dfbc0e308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x563dfbc0e370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x563dfbc0e3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x563dfbc0e440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x563dfbc0e4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x563dfbc12580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x563dfbc12630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x563dfbc12720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x563dfbc12788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563dfbc12910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x563dfbc128b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x563dfbc0e1a0 'pthread_mutex_t'
|     `-Record 0x563dfbc0e120 ''
|-RecordDecl 0x563dfbc12980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x563dfbc12ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x563dfbc12b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x563dfbc12be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x563dfbc12b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x563dfbc12a00 'pthread_mutexattr_t'
|     `-Record 0x563dfbc12980 ''
|-RecordDecl 0x563dfbc12c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x563dfbc12cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x563dfbc12dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x563dfbc12e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x563dfbc12e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x563dfbc12ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x563dfbc12f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x563dfbc12fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x563dfbc13030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x563dfbc13098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x563dfbc13150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe021_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe021_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x563dfbc13240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x563dfbc132a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x563dfbc133e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x563dfbc13380 'union pthread_cond_t' sugar
|   `-RecordType 0x563dfbc12cd0 'pthread_cond_t'
|     `-Record 0x563dfbc12c50 ''
|-RecordDecl 0x563dfbc13450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x563dfbc13590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x563dfbc135f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x563dfbc136b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x563dfbc13650 'union pthread_condattr_t' sugar
|   `-RecordType 0x563dfbc134d0 'pthread_condattr_t'
|     `-Record 0x563dfbc13450 ''
|-TypedefDecl 0x563dfbc13738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x563dfbb98120 'unsigned int'
|-TypedefDecl 0x563dfbc137a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x563dfbb98080 'int'
|-RecordDecl 0x563dfbc13800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x563dfbc138a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x563dfbc13970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x563dfbc139d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x563dfbc13a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x563dfbc13aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x563dfbc13b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x563dfbc13b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x563dfbc13be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x563dfbc13c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x563dfbc13cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x563dfbc13d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x563dfbc13d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x563dfbc13e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe021_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe021_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x563dfbc13ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x563dfbc13f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563dfbc14090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x563dfbc14030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x563dfbc13880 'pthread_rwlock_t'
|     `-Record 0x563dfbc13800 ''
|-RecordDecl 0x563dfbc14100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x563dfbc14240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x563dfbc142a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563dfbc14360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x563dfbc14300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x563dfbc14180 'pthread_rwlockattr_t'
|     `-Record 0x563dfbc14100 ''
|-TypedefDecl 0x563dfbc143e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x563dfbb98084 'volatile int' volatile
|   `-BuiltinType 0x563dfbb98080 'int'
|-RecordDecl 0x563dfbc14440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x563dfbc165b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x563dfbc16618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563dfbc166d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x563dfbc16670 'union pthread_barrier_t' sugar
|   `-RecordType 0x563dfbc144c0 'pthread_barrier_t'
|     `-Record 0x563dfbc14440 ''
|-RecordDecl 0x563dfbc16740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x563dfbc16840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x563dfbc168a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x563dfbc16960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x563dfbc16900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x563dfbc167c0 'pthread_barrierattr_t'
|     `-Record 0x563dfbc16740 ''
|-TypedefDecl 0x563dfbc16a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x563dfbc16a10 'long [8]' 8 
|   `-BuiltinType 0x563dfbb980a0 'long'
|-EnumDecl 0x563dfbc16ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x563dfbc16b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x563dfbc16be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x563dfbc16c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x563dfbc16d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x563dfbc16d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x563dfbc16da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x563dfbc16df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x563dfbc16e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x563dfbc16e68 <col:26> 'int'
| |   `-DeclRefExpr 0x563dfbc16e48 <col:26> 'int' EnumConstant 0x563dfbc16d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x563dfbc16f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x563dfbc16ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x563dfbc16ed0 <col:29> 'int' EnumConstant 0x563dfbc16d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x563dfbc16f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x563dfbc16f78 <col:30> 'int'
| |   `-DeclRefExpr 0x563dfbc16f58 <col:30> 'int' EnumConstant 0x563dfbc16da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x563dfbc17018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x563dfbc17000 <col:27> 'int'
|     `-DeclRefExpr 0x563dfbc16fe0 <col:27> 'int' EnumConstant 0x563dfbc16e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x563dfbc17068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x563dfbc17138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x563dfbc171c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x563dfbc171a8 <col:30> 'int'
| |   `-DeclRefExpr 0x563dfbc17188 <col:30> 'int' EnumConstant 0x563dfbc17138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x563dfbc17210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x563dfbc17298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x563dfbc17280 <col:29> 'int'
|     `-DeclRefExpr 0x563dfbc17260 <col:29> 'int' EnumConstant 0x563dfbc17210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x563dfbc172e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x563dfbc173b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x563dfbc17408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x563dfbc17458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x563dfbc174a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x563dfbc175c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x563dfbc17610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x563dfbc17660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x563dfbc176e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x563dfbc176d0 <col:31> 'int'
|     `-DeclRefExpr 0x563dfbc176b0 <col:31> 'int' EnumConstant 0x563dfbc175c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x563dfbc17738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x563dfbc17808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x563dfbc17858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x563dfbc178a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x563dfbc17978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x563dfbc179c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x563dfbc17a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x563dfbc17ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x563dfbc17b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x563dfbc17b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x563dfbc17dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x563dfbc17e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x563dfbc17e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x563dfbc17fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x563dfbc18008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x563dfbc180d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x563dfbc18128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x563dfbc18178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x563dfbc18248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x563dfbc18298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x563dfbc188f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x563dfbc18390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x563dfbc184a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563dfbc186e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x563dfbc18760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x563dfbc189b8 <col:47>
| |-NonNullAttr 0x563dfbc18a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x563dfbc18a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x563dfbc18b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x563dfbc18aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x563dfbc18dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x563dfbc18c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x563dfbc18ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x563dfbc18f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x563dfbc18e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x563dfbc19040 <col:60>
|-FunctionDecl 0x563dfbc19190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x563dfbc19230 <col:54>
| `-ConstAttr 0x563dfbc19288 <col:95>
|-FunctionDecl 0x563dfbc19458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x563dfbc192c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563dfbc19338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x563dfbc19508 <line:394:19>
| `-ConstAttr 0x563dfbc19560 <col:60>
|-FunctionDecl 0x563dfbc19f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x563dfbc19e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x563dfbc1a010 <col:71>
| `-NonNullAttr 0x563dfbc1a068 <col:112, col:126> 1
|-FunctionDecl 0x563dfbc1a170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x563dfbc1a0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x563dfbc1a218 <line:397:22>
| `-NonNullAttr 0x563dfbc1a270 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc1a498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x563dfbc1a2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x563dfbc1a338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x563dfbc1a548 <line:400:22>
| `-NonNullAttr 0x563dfbc1a5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x563dfbc1a7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563dfbc1a5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563dfbc1a668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x563dfbc1a858 <line:403:22>
| `-NonNullAttr 0x563dfbc1a8b0 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc1ab08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x563dfbc1a8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x563dfbc1a9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x563dfbc1abb8 <line:406:22>
| `-NonNullAttr 0x563dfbc1ac10 <col:63, col:80> 1 2
|-FunctionDecl 0x563dfbc1be48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x563dfbc1ac58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563dfbc1acd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x563dfbc1bef8 <line:409:22>
| `-NonNullAttr 0x563dfbc1bf50 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc1c188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x563dfbc1bf98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563dfbc1c028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x563dfbc1c238 <line:412:22>
| `-NonNullAttr 0x563dfbc1c290 <col:63, col:80> 1 2
|-FunctionDecl 0x563dfbc1c4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x563dfbc1c2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x563dfbc1c368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x563dfbc1c578 <col:37>
| `-NonNullAttr 0x563dfbc1c5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x563dfbc1c7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563dfbc1c618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563dfbc1c698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x563dfbc1c868 <line:418:22>
| `-NonNullAttr 0x563dfbc1c8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x563dfbc1ca48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563dfbc1c908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563dfbc1c988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x563dfbc1caf8 <line:420:22>
| `-NonNullAttr 0x563dfbc1cb50 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc1ccf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563dfbc1cb98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563dfbc1cc18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x563dfbc1cda8 <line:423:22>
| `-NonNullAttr 0x563dfbc1de30 <col:63, col:80> 1 2
|-FunctionDecl 0x563dfbc1dfb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563dfbc1de78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563dfbc1def8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x563dfbc1e068 <line:426:22>
| `-NonNullAttr 0x563dfbc1e0c0 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc1e268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563dfbc1e108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563dfbc1e188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x563dfbc1e318 <line:429:22>
| `-NonNullAttr 0x563dfbc1e370 <col:63, col:80> 1 2
|-FunctionDecl 0x563dfbc1e4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563dfbc1e3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563dfbc1e438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x563dfbc1e5a8 <line:431:22>
| `-NonNullAttr 0x563dfbc1e600 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc1e828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x563dfbc1e648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563dfbc1e6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x563dfbc1e8d8 <line:434:22>
| |-NonNullAttr 0x563dfbc1e930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x563dfbc1e968 <col:100> "" ""
|-FunctionDecl 0x563dfbc1eb78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x563dfbc1e9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563dfbc1ea38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x563dfbc1ec28 <line:437:22>
| |-NonNullAttr 0x563dfbc1ec80 <col:63, col:77> 1
| `-DeprecatedAttr 0x563dfbc1ecb8 <col:97> "" ""
|-FunctionDecl 0x563dfbc1eeb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x563dfbc1ed08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563dfbc1ed80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x563dfbc1ef68 <line:440:22>
| `-NonNullAttr 0x563dfbc1efc0 <col:63, col:80> 1 2
|-FunctionDecl 0x563dfbc1f140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x563dfbc1f008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563dfbc1f080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x563dfbc1f1f0 <line:443:22>
| `-NonNullAttr 0x563dfbc1f248 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc1f538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x563dfbc1f298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563dfbc1f318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x563dfbc1f390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x563dfbc1f5f0 <line:447:22>
| `-NonNullAttr 0x563dfbc1f648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x563dfbc1f8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x563dfbc1f6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563dfbc1f720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x563dfbc1f798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x563dfbc1f9b0 <col:43>
| `-NonNullAttr 0x563dfbc1fa08 <col:84, col:98> 1
|-FunctionDecl 0x563dfbc1fcc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x563dfbc1fa58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563dfbc1fad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x563dfbc1fb68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x563dfbc1fd80 <line:452:22>
| `-NonNullAttr 0x563dfbc1fdd8 <col:63, col:77> 3
|-FunctionDecl 0x563dfbc200e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x563dfbc1fe50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563dfbc1fed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x563dfbc1ff60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x563dfbc201a0 <line:456:22>
| `-NonNullAttr 0x563dfbc201f8 <col:63, col:80> 2 3
|-FunctionDecl 0x563dfbc203e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x563dfbc20248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563dfbc202c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x563dfbc20498 <line:458:22>
|-FunctionDecl 0x563dfbc20868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x563dfbc20560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x563dfbc20700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x563dfbc20918 <col:52, col:69> 1 2
|-FunctionDecl 0x563dfbc20ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x563dfbc209a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x563dfbc20a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x563dfbc20ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x563dfbc20b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x563dfbc20c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x563dfbc20e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x563dfbc20d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x563dfbc20fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x563dfbc21040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x563dfbc210e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x563dfbc211d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x563dfbc21240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x563dfbc21410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe021_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x563dfbc21508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x563dfbc215c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x563dfbc21560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x563dfbc210c0 '__pthread_unwind_buf_t'
| |   `-Record 0x563dfbc21040 ''
| `-AlignedAttr 0x563dfbc21618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x563dfbc21690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x563dfbc217f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x563dfbc21858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x563dfbc218c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x563dfbc21928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x563dfbc21b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x563dfbc21a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x563dfbc21c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x563dfbc21be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x563dfbc21e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563dfbc21d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x563dfbc21f18 <line:487:22>
|-RecordDecl 0x563dfbc21f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x563dfbc22288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x563dfbc220e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x563dfbc22168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x563dfbc22338 <col:86>
| `-ReturnsTwiceAttr 0x563dfbc22390 <col:12> Implicit
|-FunctionDecl 0x563dfbc226b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x563dfbc22460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x563dfbc22570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x563dfbc22768 <line:493:22>
| `-NonNullAttr 0x563dfbc227c0 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc22938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563dfbc22808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563dfbc229e0 <line:495:22>
| `-NonNullAttr 0x563dfbc22a38 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc22b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563dfbc22a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563dfbc22be8 <line:497:22>
| `-NonNullAttr 0x563dfbc22c40 <col:52, col:66> 1
|-FunctionDecl 0x563dfbc22d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563dfbc22c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563dfbc22de8 <line:499:22>
| `-NonNullAttr 0x563dfbc22e40 <col:52, col:66> 1
|-FunctionDecl 0x563dfbc23088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563dfbc22e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563dfbc22f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x563dfbc23138 <col:36>
| `-NonNullAttr 0x563dfbc23190 <col:66, col:83> 1 2
|-FunctionDecl 0x563dfbc23290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563dfbc231d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563dfbc23338 <line:504:22>
| `-NonNullAttr 0x563dfbc23390 <col:52, col:66> 1
|-FunctionDecl 0x563dfbc23628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563dfbc23440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563dfbc234c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x563dfbc236d8 <line:508:22>
| `-NonNullAttr 0x563dfbc23730 <col:63, col:80> 1 2
|-FunctionDecl 0x563dfbc239f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x563dfbc23778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563dfbc237f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x563dfbc23878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x563dfbc23ab0 <line:512:22>
| `-NonNullAttr 0x563dfbc23b08 <col:63, col:80> 1 3
|-FunctionDecl 0x563dfbc23c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563dfbc23b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563dfbc23cb8 <line:514:22>
| `-NonNullAttr 0x563dfbc23d10 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc23f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x563dfbc23dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x563dfbc23fe0 <line:516:22>
| `-NonNullAttr 0x563dfbc24038 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc24140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x563dfbc24088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x563dfbc241e8 <line:518:22>
| `-NonNullAttr 0x563dfbc24240 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc24468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563dfbc24288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563dfbc24308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x563dfbc24518 <line:522:22>
| `-NonNullAttr 0x563dfbc24570 <col:63, col:80> 1 2
|-FunctionDecl 0x563dfbc24778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563dfbc245b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563dfbc24638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x563dfbc24828 <line:525:22>
| `-NonNullAttr 0x563dfbc24880 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc24a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563dfbc248c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563dfbc24948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x563dfbc24ad8 <line:528:22>
| `-NonNullAttr 0x563dfbc24b30 <col:63, col:80> 1 2
|-FunctionDecl 0x563dfbc24cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563dfbc24b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563dfbc24bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x563dfbc24d68 <line:530:22>
| `-NonNullAttr 0x563dfbc24dc0 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc25f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563dfbc24e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563dfbc25eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x563dfbc26040 <line:534:22>
| `-NonNullAttr 0x563dfbc26098 <col:63, col:80> 1 2
|-FunctionDecl 0x563dfbc26228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563dfbc260e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563dfbc26168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x563dfbc262d8 <line:537:22>
| `-NonNullAttr 0x563dfbc26330 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc264d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563dfbc26378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563dfbc263f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x563dfbc26588 <line:541:22>
| `-NonNullAttr 0x563dfbc265e0 <col:63, col:80> 1 2
|-FunctionDecl 0x563dfbc26768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563dfbc26628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563dfbc266a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x563dfbc26818 <line:544:22>
| `-NonNullAttr 0x563dfbc26870 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc26a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x563dfbc268b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x563dfbc26938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x563dfbc26b08 <line:547:22>
| `-NonNullAttr 0x563dfbc26b60 <col:63, col:80> 1 2
|-FunctionDecl 0x563dfbc26ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563dfbc26ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563dfbc26c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x563dfbc26d98 <line:550:22>
| `-NonNullAttr 0x563dfbc26df0 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc28168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x563dfbc27f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x563dfbc28020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x563dfbc28218 <col:29>
| `-NonNullAttr 0x563dfbc28270 <col:70, col:84> 1
|-FunctionDecl 0x563dfbc283e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563dfbc282b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563dfbc28490 <line:555:22>
| `-NonNullAttr 0x563dfbc284e8 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc285f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563dfbc28538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563dfbc28698 <line:557:22>
| `-NonNullAttr 0x563dfbc286f0 <col:52, col:66> 1
|-FunctionDecl 0x563dfbc287f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563dfbc28738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563dfbc28898 <line:559:19>
| `-NonNullAttr 0x563dfbc288f0 <col:49, col:63> 1
|-FunctionDecl 0x563dfbc28b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563dfbc28938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x563dfbc289c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x563dfbc28bd8 <col:39>
| `-NonNullAttr 0x563dfbc28c30 <col:69, col:86> 1 2
|-FunctionDecl 0x563dfbc28d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563dfbc28c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563dfbc28dd8 <line:564:22>
| `-NonNullAttr 0x563dfbc28e30 <col:52, col:66> 1
|-FunctionDecl 0x563dfbc28f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563dfbc28ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563dfbc29040 <line:566:22>
| `-NonNullAttr 0x563dfbc29098 <col:52, col:66> 1
|-FunctionDecl 0x563dfbc29258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563dfbc290e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x563dfbc29178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x563dfbc29308 <col:39>
| `-NonNullAttr 0x563dfbc29360 <col:69, col:86> 1 2
|-FunctionDecl 0x563dfbc29460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563dfbc293a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563dfbc29508 <line:571:22>
| `-NonNullAttr 0x563dfbc29560 <col:52, col:66> 1
|-FunctionDecl 0x563dfbc29748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x563dfbc29610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x563dfbc297f0 <line:573:22>
| `-NonNullAttr 0x563dfbc29848 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc29950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x563dfbc29898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x563dfbc299f8 <line:575:22>
| `-NonNullAttr 0x563dfbc29a50 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc29c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563dfbc29a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x563dfbc29b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x563dfbc29d28 <line:579:22>
| `-NonNullAttr 0x563dfbc29d80 <col:63, col:80> 1 2
|-FunctionDecl 0x563dfbc29fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x563dfbc29dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x563dfbc29e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x563dfbc2a058 <line:582:22>
| `-NonNullAttr 0x563dfbc2a0b0 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc2a258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563dfbc2a0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x563dfbc2a178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x563dfbc2a308 <line:586:22>
| `-NonNullAttr 0x563dfbc2a360 <col:63, col:80> 1 2
|-FunctionDecl 0x563dfbc2a4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x563dfbc2a3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x563dfbc2a428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x563dfbc2a598 <col:36>
| `-NonNullAttr 0x563dfbc2a5f0 <col:77, col:91> 1
|-FunctionDecl 0x563dfbc2a928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x563dfbc2a6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x563dfbc2a7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x563dfbc2a9d8 <line:591:22>
| `-NonNullAttr 0x563dfbc2aa30 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc2aba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563dfbc2aa78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563dfbc2ac50 <line:593:22>
| `-NonNullAttr 0x563dfbc2aca8 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc2adb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563dfbc2acf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563dfbc2ae58 <line:595:22>
| `-NonNullAttr 0x563dfbc2aeb0 <col:52, col:66> 1
|-FunctionDecl 0x563dfbc2afc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563dfbc2af10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563dfbc2b070 <line:597:22>
| `-NonNullAttr 0x563dfbc2b0c8 <col:52, col:66> 1
|-FunctionDecl 0x563dfbc2b2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x563dfbc2b118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x563dfbc2b190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x563dfbc2b3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x563dfbc2b6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563dfbc2b428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x563dfbc2b4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563dfbc2b530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x563dfbc2b790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x563dfbc2b9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x563dfbc2b870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x563dfbc2ba50 <line:606:22>
| `-NonNullAttr 0x563dfbc2baa8 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc2bbb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x563dfbc2baf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x563dfbc2bc58 <line:608:22>
| `-NonNullAttr 0x563dfbc2bcb0 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc2bf10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563dfbc2bcf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x563dfbc2bd78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x563dfbc2bfc0 <line:612:22>
| `-NonNullAttr 0x563dfbc2c018 <col:63, col:80> 1 2
|-FunctionDecl 0x563dfbc2c228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x563dfbc2c068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x563dfbc2c0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x563dfbc2c2d8 <col:37>
| `-NonNullAttr 0x563dfbc2c330 <col:78, col:92> 1
|-FunctionDecl 0x563dfbc2c548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x563dfbc2c378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x563dfbc2c420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x563dfbc2c5f8 <line:618:22>
| `-NonNullAttr 0x563dfbc2c650 <col:63, col:80> 1 2
|-FunctionDecl 0x563dfbc2c818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x563dfbc2c698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x563dfbc2c710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x563dfbc2c8c8 <line:621:22>
| `-NonNullAttr 0x563dfbc2c920 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc2cbc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x563dfbc2ca00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x563dfbc2ca80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x563dfbc2cc78 <line:623:22>
| `-NonNullAttr 0x563dfbc2ccd0 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc2ce48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563dfbc2cd18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563dfbc2cf20 <line:625:22>
| `-NonNullAttr 0x563dfbc2cf78 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc2d080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563dfbc2cfc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563dfbc2d128 <line:627:22>
| `-NonNullAttr 0x563dfbc2d180 <col:52, col:66> 1
|-FunctionDecl 0x563dfbc2d280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563dfbc2d1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563dfbc2d328 <line:629:22>
| `-NonNullAttr 0x563dfbc2d380 <col:52, col:66> 1
|-FunctionDecl 0x563dfbc2d480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563dfbc2d3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563dfbc2d528 <line:631:22>
| `-NonNullAttr 0x563dfbc2d580 <col:52, col:66> 1
|-FunctionDecl 0x563dfbc2d958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x563dfbc2d660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x563dfbc2d770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x563dfbc2d7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x563dfbc2da10 <line:635:22>
| `-NonNullAttr 0x563dfbc2da68 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc2dbe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x563dfbc2dab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x563dfbc2dc90 <line:637:22>
| `-NonNullAttr 0x563dfbc2dce8 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc2ddf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x563dfbc2dd38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x563dfbc2de98 <line:639:22>
| `-NonNullAttr 0x563dfbc2def0 <col:52, col:66> 1
|-FunctionDecl 0x563dfbc2e0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x563dfbc2dfb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x563dfbc2e190 <line:641:22>
| `-NonNullAttr 0x563dfbc2e1e8 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc2e2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x563dfbc2e238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x563dfbc2e398 <line:643:22>
| `-NonNullAttr 0x563dfbc2e3f0 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc2e618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563dfbc2e438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x563dfbc2e4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x563dfbc2e6c8 <line:647:22>
| `-NonNullAttr 0x563dfbc2e720 <col:63, col:80> 1 2
|-FunctionDecl 0x563dfbc2e928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x563dfbc2e768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x563dfbc2e7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x563dfbc2e9d8 <line:650:22>
| `-NonNullAttr 0x563dfbc2ea30 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc2ed78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x563dfbc2eb10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x563dfbc2ec30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x563dfbc2ee28 <line:653:22>
| `-NonNullAttr 0x563dfbc2ee80 <col:63, col:77> 1
|-FunctionDecl 0x563dfbc2efe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x563dfbc2eec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x563dfbc2f090 <col:69>
|-FunctionDecl 0x563dfbc2f208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x563dfbc2f0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x563dfbc2f2b0 <col:72>
|-FunctionDecl 0x563dfbc2f4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x563dfbc2f318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x563dfbc2f3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x563dfbc2f598 <col:44>
|-FunctionDecl 0x563dfbc2f7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x563dfbc2f600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563dfbc2f678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x563dfbc2f868 <line:660:22>
| `-NonNullAttr 0x563dfbc2f8c0 <col:63, col:77> 2
|-FunctionDecl 0x563dfbc2fd08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x563dfbc2f9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x563dfbc2fab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x563dfbc2fbc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x563dfbc2fdc0 <col:47>
|-FunctionDecl 0x563dfbc30f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x563dfbc2fe30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x563dfbc310b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x563dfbc31020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x563dfbc31210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x563dfbc31178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x563dfbc312d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x563dfbc31398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x563dfbc31458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x563dfbc31510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x563dfbc31590 prev 0x563dfbc31510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x563dfbc315f8 <col:24> 'int' 0
|-VarDecl 0x563dfbc31630 <line:673:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x563dfbc316b0 prev 0x563dfbc31630 <line:674:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x563dfbc31718 <col:27> 'int' 0
|-VarDecl 0x563dfbc31750 <line:675:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x563dfbc317d0 prev 0x563dfbc31750 <line:676:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x563dfbc31838 <col:27> 'int' 0
|-VarDecl 0x563dfbc31868 <line:677:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x563dfbc318e0 <line:678:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x563dfbc31960 <line:679:1, col:5> col:5 used x 'int'
|-VarDecl 0x563dfbc319e0 prev 0x563dfbc31960 <line:680:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x563dfbc31a48 <col:9> 'int' 0
|-VarDecl 0x563dfbc31a80 <line:681:1, col:5> col:5 used y 'int'
|-VarDecl 0x563dfbc31b00 prev 0x563dfbc31a80 <line:682:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x563dfbc31b68 <col:9> 'int' 0
|-VarDecl 0x563dfbc31ba0 <line:683:1, col:5> col:5 used z 'int'
|-VarDecl 0x563dfbc31c20 prev 0x563dfbc31ba0 <line:684:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x563dfbc31c88 <col:9> 'int' 0
|-VarDecl 0x563dfbc31cb8 <line:685:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x563dfbc31d38 <line:686:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x563dfbc31db0 <line:687:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x563dfbc31e28 <line:688:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x563dfbc31ea0 <line:689:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x563dfbc31f70 <line:690:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x563dfbc31fe8 <line:691:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x563dfbc32060 <line:692:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x563dfbc320d8 <line:693:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x563dfbc32150 <line:694:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x563dfbc321c8 <line:695:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x563dfbc32248 <line:696:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x563dfbc322c8 <line:697:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x563dfbc32340 <line:698:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x563dfbc323c0 <line:699:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x563dfbc32438 <line:700:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x563dfbc324b0 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x563dfbc32528 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x563dfbc32640 prev 0x563dfbc30f60 <line:703:1, line:731:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x563dfbc325a8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x563dfbc33e68 <line:704:1, line:731:1>
|   |-CallExpr 0x563dfbc32758 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563dfbc32740 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563dfbc326e8 <col:3> 'void ()' Function 0x563dfbbd8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563dfbc327d0 <line:706:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563dfbc32778 <col:3> 'int' lvalue Var 0x563dfbc323c0 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x563dfbc327b8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563dfbc32798 <col:15> 'int' lvalue Var 0x563dfbc322c8 'z$w_buff0' 'int'
|   |-BinaryOperator 0x563dfbc32830 <line:707:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563dfbc327f0 <col:3> 'int' lvalue Var 0x563dfbc322c8 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x563dfbc32810 <col:15> 'int' 1
|   |-BinaryOperator 0x563dfbc328a8 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563dfbc32850 <col:3> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563dfbc32890 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563dfbc32870 <col:20> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563dfbc32940 <line:709:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x563dfbc328c8 <col:3> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x563dfbc32918 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563dfbc328e8 <col:27> 'int' 1
|   |-CallExpr 0x563dfbc32ac8 <line:710:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x563dfbc32ab0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x563dfbc32960 <col:3> 'void (int)' Function 0x563dfbbd80d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x563dfbc32a60 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x563dfbc32a40 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x563dfbc32a20 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x563dfbc329d8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x563dfbc329c0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x563dfbc32980 <col:23> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x563dfbc32a08 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x563dfbc329f0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x563dfbc329a0 <col:41> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563dfbc32b48 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563dfbc32af0 <col:3> '_Bool' lvalue Var 0x563dfbc31fe8 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x563dfbc32b30 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563dfbc32b10 <col:20> '_Bool' lvalue Var 0x563dfbc31db0 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x563dfbc32bc0 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563dfbc32b68 <col:3> '_Bool' lvalue Var 0x563dfbc32060 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563dfbc32ba8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563dfbc32b88 <col:20> '_Bool' lvalue Var 0x563dfbc31e28 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x563dfbc32c38 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563dfbc32be0 <col:3> '_Bool' lvalue Var 0x563dfbc320d8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563dfbc32c20 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563dfbc32c00 <col:20> '_Bool' lvalue Var 0x563dfbc31ea0 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x563dfbc32cb0 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563dfbc32c58 <col:3> '_Bool' lvalue Var 0x563dfbc32150 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x563dfbc32c98 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563dfbc32c78 <col:20> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x563dfbc32d48 <line:715:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x563dfbc32cd0 <col:3> '_Bool' lvalue Var 0x563dfbc31e28 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x563dfbc32d20 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563dfbc32cf0 <col:27> 'int' 1
|   |-CallExpr 0x563dfbc32da0 <line:716:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563dfbc32d88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563dfbc32d68 <col:3> 'void ()' Function 0x563dfbbd8410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563dfbc32df8 <line:717:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563dfbc32de0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563dfbc32dc0 <col:3> 'void ()' Function 0x563dfbbd8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563dfbc32e58 <line:718:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x563dfbc32e18 <col:3> 'int' lvalue Var 0x563dfbc319e0 'x' 'int'
|   | `-IntegerLiteral 0x563dfbc32e38 <col:7> 'int' 1
|   |-CallExpr 0x563dfbc32eb0 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563dfbc32e98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563dfbc32e78 <col:3> 'void ()' Function 0x563dfbbd8410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563dfbc32f08 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563dfbc32ef0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563dfbc32ed0 <col:3> 'void ()' Function 0x563dfbbd8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563dfbc33208 <line:721:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x563dfbc32f28 <col:3> 'int' lvalue Var 0x563dfbc31c20 'z' 'int'
|   | `-ConditionalOperator 0x563dfbc331d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x563dfbc33000 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x563dfbc32fb8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x563dfbc32fa0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x563dfbc32f48 <col:7> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x563dfbc32fe8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x563dfbc32fd0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x563dfbc32f80 <col:25> '_Bool' lvalue Var 0x563dfbc31e28 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x563dfbc331c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563dfbc33020 <col:42> 'int' lvalue Var 0x563dfbc322c8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x563dfbc331a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x563dfbc33170 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x563dfbc330e0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563dfbc33098 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563dfbc33080 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563dfbc33040 <col:55> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563dfbc330c8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563dfbc330b0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563dfbc33060 <col:73> '_Bool' lvalue Var 0x563dfbc32060 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x563dfbc33140 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563dfbc33100 <col:90> 'int' lvalue Var 0x563dfbc323c0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x563dfbc33158 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563dfbc33120 <col:102> 'int' lvalue Var 0x563dfbc31c20 'z' 'int'
|   |-BinaryOperator 0x563dfbc33410 <line:722:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563dfbc33228 <col:3> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563dfbc333f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563dfbc333c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563dfbc332e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563dfbc332a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563dfbc33288 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563dfbc33248 <col:20> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563dfbc332d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563dfbc332b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563dfbc33268 <col:38> '_Bool' lvalue Var 0x563dfbc31e28 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x563dfbc33380 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563dfbc33338 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563dfbc33308 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563dfbc333b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563dfbc33398 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563dfbc33360 <col:66> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563dfbc336f8 <line:723:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563dfbc33430 <col:3> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563dfbc336e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563dfbc336b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563dfbc335d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563dfbc334f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563dfbc334a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563dfbc33490 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563dfbc33450 <col:20> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563dfbc334d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563dfbc334c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563dfbc33470 <col:38> '_Bool' lvalue Var 0x563dfbc31e28 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x563dfbc335b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563dfbc33568 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563dfbc33550 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563dfbc33510 <col:56> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563dfbc33598 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563dfbc33580 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563dfbc33530 <col:74> '_Bool' lvalue Var 0x563dfbc32060 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x563dfbc33668 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563dfbc33620 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563dfbc335f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563dfbc33698 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563dfbc33680 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563dfbc33648 <col:102> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x563dfbc33900 <line:724:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563dfbc33718 <col:3> '_Bool' lvalue Var 0x563dfbc31e28 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563dfbc338e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563dfbc338b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563dfbc337d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563dfbc33790 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563dfbc33778 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563dfbc33738 <col:20> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563dfbc337c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563dfbc337a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563dfbc33758 <col:38> '_Bool' lvalue Var 0x563dfbc31e28 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x563dfbc33870 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563dfbc33828 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563dfbc337f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563dfbc338a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563dfbc33888 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563dfbc33850 <col:66> '_Bool' lvalue Var 0x563dfbc31e28 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x563dfbc33be8 <line:725:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563dfbc33920 <col:3> '_Bool' lvalue Var 0x563dfbc32060 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563dfbc33bd0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563dfbc33ba0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563dfbc33ac0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563dfbc339e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563dfbc33998 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563dfbc33980 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563dfbc33940 <col:20> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563dfbc339c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563dfbc339b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563dfbc33960 <col:38> '_Bool' lvalue Var 0x563dfbc31e28 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x563dfbc33aa0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563dfbc33a58 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563dfbc33a40 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563dfbc33a00 <col:56> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563dfbc33a88 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563dfbc33a70 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563dfbc33a20 <col:74> '_Bool' lvalue Var 0x563dfbc32060 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x563dfbc33b58 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563dfbc33b10 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563dfbc33ae0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563dfbc33b88 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563dfbc33b70 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563dfbc33b38 <col:102> '_Bool' lvalue Var 0x563dfbc32060 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x563dfbc33c40 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563dfbc33c28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563dfbc33c08 <col:3> 'void ()' Function 0x563dfbbd8410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563dfbc33c98 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563dfbc33c80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563dfbc33c60 <col:3> 'void ()' Function 0x563dfbbd8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563dfbc33d50 <line:728:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x563dfbc33cb8 <col:3> 'int' lvalue Var 0x563dfbc31590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x563dfbc33d30 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x563dfbc33d18 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563dfbc33cd8 <col:22> 'int' lvalue Var 0x563dfbc31590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x563dfbc33cf8 <col:41> 'int' 1
|   |-CallExpr 0x563dfbc33da8 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563dfbc33d90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563dfbc33d70 <col:3> 'void ()' Function 0x563dfbbd8410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x563dfbc33e58 <line:730:3, col:36>
|     `-CallExpr 0x563dfbc33e38 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x563dfbc33e20 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x563dfbc33dc8 <col:10> 'void *(void)' Function 0x563dfbbd7e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x563dfbc34028 prev 0x563dfbc310b8 <line:732:1, line:751:1> line:732:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x563dfbc33f90 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x563dfbc35248 <line:733:1, line:751:1>
|   |-CallExpr 0x563dfbc34108 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563dfbc340f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563dfbc340d0 <col:3> 'void ()' Function 0x563dfbbd8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563dfbc34168 <line:735:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x563dfbc34128 <col:3> 'int' lvalue Var 0x563dfbc319e0 'x' 'int'
|   | `-IntegerLiteral 0x563dfbc34148 <col:7> 'int' 2
|   |-CallExpr 0x563dfbc341c0 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563dfbc341a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563dfbc34188 <col:3> 'void ()' Function 0x563dfbbd8410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563dfbc34218 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563dfbc34200 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563dfbc341e0 <col:3> 'void ()' Function 0x563dfbbd8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563dfbc34278 <line:738:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x563dfbc34238 <col:3> 'int' lvalue Var 0x563dfbc31b00 'y' 'int'
|   | `-IntegerLiteral 0x563dfbc34258 <col:7> 'int' 1
|   |-CallExpr 0x563dfbc342d0 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563dfbc342b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563dfbc34298 <col:3> 'void ()' Function 0x563dfbbd8410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563dfbc34328 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563dfbc34310 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563dfbc342f0 <col:3> 'void ()' Function 0x563dfbbd8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563dfbc34610 <line:741:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x563dfbc34348 <col:3> 'int' lvalue Var 0x563dfbc31c20 'z' 'int'
|   | `-ConditionalOperator 0x563dfbc345e0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x563dfbc34408 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x563dfbc343c0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x563dfbc343a8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x563dfbc34368 <col:7> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x563dfbc343f0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x563dfbc343d8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x563dfbc34388 <col:25> '_Bool' lvalue Var 0x563dfbc31ea0 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x563dfbc345c8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563dfbc34428 <col:42> 'int' lvalue Var 0x563dfbc322c8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x563dfbc345a8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x563dfbc34578 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x563dfbc344e8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563dfbc344a0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563dfbc34488 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563dfbc34448 <col:55> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563dfbc344d0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563dfbc344b8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563dfbc34468 <col:73> '_Bool' lvalue Var 0x563dfbc320d8 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x563dfbc34548 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563dfbc34508 <col:90> 'int' lvalue Var 0x563dfbc323c0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x563dfbc34560 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563dfbc34528 <col:102> 'int' lvalue Var 0x563dfbc31c20 'z' 'int'
|   |-BinaryOperator 0x563dfbc34818 <line:742:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563dfbc34630 <col:3> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563dfbc34800 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563dfbc347d0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563dfbc346f0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563dfbc346a8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563dfbc34690 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563dfbc34650 <col:20> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563dfbc346d8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563dfbc346c0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563dfbc34670 <col:38> '_Bool' lvalue Var 0x563dfbc31ea0 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563dfbc34788 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563dfbc34740 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563dfbc34710 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563dfbc347b8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563dfbc347a0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563dfbc34768 <col:66> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563dfbc34b00 <line:743:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563dfbc34838 <col:3> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563dfbc34ae8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563dfbc34ab8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563dfbc349d8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563dfbc348f8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563dfbc348b0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563dfbc34898 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563dfbc34858 <col:20> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563dfbc348e0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563dfbc348c8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563dfbc34878 <col:38> '_Bool' lvalue Var 0x563dfbc31ea0 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x563dfbc349b8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563dfbc34970 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563dfbc34958 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563dfbc34918 <col:56> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563dfbc349a0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563dfbc34988 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563dfbc34938 <col:74> '_Bool' lvalue Var 0x563dfbc320d8 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563dfbc34a70 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563dfbc34a28 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563dfbc349f8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563dfbc34aa0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563dfbc34a88 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563dfbc34a50 <col:102> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x563dfbc34d08 <line:744:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563dfbc34b20 <col:3> '_Bool' lvalue Var 0x563dfbc31ea0 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563dfbc34cf0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563dfbc34cc0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563dfbc34be0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563dfbc34b98 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563dfbc34b80 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563dfbc34b40 <col:20> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563dfbc34bc8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563dfbc34bb0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563dfbc34b60 <col:38> '_Bool' lvalue Var 0x563dfbc31ea0 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563dfbc34c78 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563dfbc34c30 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563dfbc34c00 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563dfbc34ca8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563dfbc34c90 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563dfbc34c58 <col:66> '_Bool' lvalue Var 0x563dfbc31ea0 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x563dfbc35000 <line:745:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563dfbc34d28 <col:3> '_Bool' lvalue Var 0x563dfbc320d8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563dfbc34fe8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563dfbc34fb8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563dfbc34ec8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563dfbc34de8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563dfbc34da0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563dfbc34d88 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563dfbc34d48 <col:20> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563dfbc34dd0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563dfbc34db8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563dfbc34d68 <col:38> '_Bool' lvalue Var 0x563dfbc31ea0 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x563dfbc34ea8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563dfbc34e60 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563dfbc34e48 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563dfbc34e08 <col:56> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563dfbc34e90 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563dfbc34e78 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563dfbc34e28 <col:74> '_Bool' lvalue Var 0x563dfbc320d8 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563dfbc34f60 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563dfbc34f18 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563dfbc34ee8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563dfbc34fa0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563dfbc34f78 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563dfbc34f40 <col:102> '_Bool' lvalue Var 0x563dfbc320d8 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x563dfbc35058 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563dfbc35040 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563dfbc35020 <col:3> 'void ()' Function 0x563dfbbd8410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563dfbc350b0 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563dfbc35098 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563dfbc35078 <col:3> 'void ()' Function 0x563dfbbd8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563dfbc35168 <line:748:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x563dfbc350d0 <col:3> 'int' lvalue Var 0x563dfbc31590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x563dfbc35148 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x563dfbc35130 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563dfbc350f0 <col:22> 'int' lvalue Var 0x563dfbc31590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x563dfbc35110 <col:41> 'int' 1
|   |-CallExpr 0x563dfbc351c0 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563dfbc351a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563dfbc35188 <col:3> 'void ()' Function 0x563dfbbd8410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x563dfbc35238 <line:750:3, col:36>
|     `-CallExpr 0x563dfbc35218 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x563dfbc35200 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x563dfbc351e0 <col:10> 'void *(void)' Function 0x563dfbbd7e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x563dfbc35390 prev 0x563dfbc31210 <line:752:1, line:784:1> line:752:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x563dfbc352f8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x563dfbc38fe0 <line:753:1, line:784:1>
|   |-CallExpr 0x563dfbc35470 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563dfbc35458 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563dfbc35438 <col:3> 'void ()' Function 0x563dfbbd8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563dfbc354e8 <line:755:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563dfbc35490 <col:3> 'int' lvalue Var 0x563dfbc316b0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x563dfbc354d0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563dfbc354b0 <col:25> 'int' lvalue Var 0x563dfbc31b00 'y' 'int'
|   |-CallExpr 0x563dfbc35540 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563dfbc35528 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563dfbc35508 <col:3> 'void ()' Function 0x563dfbbd8410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563dfbc35598 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563dfbc35580 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563dfbc35560 <col:3> 'void ()' Function 0x563dfbbd8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563dfbc35648 <line:758:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x563dfbc355b8 <col:3> '_Bool' lvalue Var 0x563dfbc324b0 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x563dfbc35630 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x563dfbc35610 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x563dfbc355f8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x563dfbc355d8 <col:19> 'void *(void)' Function 0x563dfbbd7e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x563dfbc356f8 <line:759:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x563dfbc35668 <col:3> '_Bool' lvalue Var 0x563dfbc32528 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x563dfbc356e0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x563dfbc356c0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x563dfbc356a8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x563dfbc35688 <col:19> 'void *(void)' Function 0x563dfbbd7e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x563dfbc35770 <line:760:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x563dfbc35718 <col:3> '_Bool' lvalue Var 0x563dfbc31cb8 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x563dfbc35758 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563dfbc35738 <col:21> '_Bool' lvalue Var 0x563dfbc32528 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x563dfbc357e8 <line:761:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563dfbc35790 <col:3> 'int' lvalue Var 0x563dfbc31d38 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x563dfbc357d0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563dfbc357b0 <col:15> 'int' lvalue Var 0x563dfbc31c20 'z' 'int'
|   |-BinaryOperator 0x563dfbc35c20 <line:762:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x563dfbc35808 <col:3> 'int' lvalue Var 0x563dfbc31c20 'z' 'int'
|   | `-ConditionalOperator 0x563dfbc35bf0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x563dfbc35a18 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x563dfbc35938 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x563dfbc35860 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x563dfbc35848 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x563dfbc35828 <col:8> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x563dfbc35918 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x563dfbc358b0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x563dfbc35898 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x563dfbc35878 <col:27> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x563dfbc35900 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x563dfbc358e8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x563dfbc358c8 <col:46> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x563dfbc359f8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x563dfbc35990 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x563dfbc35978 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x563dfbc35958 <col:65> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x563dfbc359e0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x563dfbc359c8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x563dfbc359a8 <col:84> '_Bool' lvalue Var 0x563dfbc32150 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x563dfbc35bd8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563dfbc35a38 <col:101> 'int' lvalue Var 0x563dfbc31c20 'z' 'int'
|   |   `-ParenExpr 0x563dfbc35bb8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x563dfbc35b88 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x563dfbc35af8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563dfbc35ab0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563dfbc35a98 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563dfbc35a58 <col:106> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563dfbc35ae0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563dfbc35ac8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563dfbc35a78 <col:124> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x563dfbc35b58 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563dfbc35b18 <col:141> 'int' lvalue Var 0x563dfbc322c8 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x563dfbc35b70 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563dfbc35b38 <col:153> 'int' lvalue Var 0x563dfbc323c0 'z$w_buff1' 'int'
|   |-BinaryOperator 0x563dfbc36150 <line:763:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x563dfbc35c40 <col:3> 'int' lvalue Var 0x563dfbc322c8 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x563dfbc36120 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x563dfbc360f0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563dfbc360d8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563dfbc35c60 <col:15> '_Bool' lvalue Var 0x563dfbc32528 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x563dfbc36108 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563dfbc35c80 <col:31> 'int' lvalue Var 0x563dfbc322c8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x563dfbc360b8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x563dfbc36088 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x563dfbc35e90 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x563dfbc35db0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x563dfbc35cd8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x563dfbc35cc0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x563dfbc35ca0 <col:45> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x563dfbc35d90 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x563dfbc35d28 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x563dfbc35d10 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x563dfbc35cf0 <col:64> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x563dfbc35d78 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x563dfbc35d60 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x563dfbc35d40 <col:83> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x563dfbc35e70 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x563dfbc35e08 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x563dfbc35df0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x563dfbc35dd0 <col:102> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x563dfbc35e58 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x563dfbc35e40 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x563dfbc35e20 <col:121> '_Bool' lvalue Var 0x563dfbc32150 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x563dfbc36070 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563dfbc35eb0 <col:138> 'int' lvalue Var 0x563dfbc322c8 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x563dfbc36050 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x563dfbc36020 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x563dfbc35f70 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x563dfbc35f28 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x563dfbc35f10 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x563dfbc35ed0 <col:151> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x563dfbc35f58 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x563dfbc35f40 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x563dfbc35ef0 <col:169> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x563dfbc35ff0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x563dfbc35fb0 <col:186> 'int' lvalue Var 0x563dfbc322c8 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x563dfbc36008 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x563dfbc35fd0 <col:198> 'int' lvalue Var 0x563dfbc322c8 'z$w_buff0' 'int'
|   |-BinaryOperator 0x563dfbc36660 <line:764:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x563dfbc36170 <col:3> 'int' lvalue Var 0x563dfbc323c0 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x563dfbc36630 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x563dfbc36600 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563dfbc365e8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563dfbc36190 <col:15> '_Bool' lvalue Var 0x563dfbc32528 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x563dfbc36618 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563dfbc361b0 <col:31> 'int' lvalue Var 0x563dfbc323c0 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x563dfbc365c8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x563dfbc36598 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x563dfbc363c0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x563dfbc362e0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x563dfbc36208 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x563dfbc361f0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x563dfbc361d0 <col:45> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x563dfbc362c0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x563dfbc36258 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x563dfbc36240 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x563dfbc36220 <col:64> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x563dfbc362a8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x563dfbc36290 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x563dfbc36270 <col:83> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x563dfbc363a0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x563dfbc36338 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x563dfbc36320 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x563dfbc36300 <col:102> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x563dfbc36388 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x563dfbc36370 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x563dfbc36350 <col:121> '_Bool' lvalue Var 0x563dfbc32150 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x563dfbc36580 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563dfbc363e0 <col:138> 'int' lvalue Var 0x563dfbc323c0 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x563dfbc36560 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x563dfbc36530 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x563dfbc364a0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x563dfbc36458 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x563dfbc36440 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x563dfbc36400 <col:151> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x563dfbc36488 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x563dfbc36470 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x563dfbc36420 <col:169> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x563dfbc36500 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x563dfbc364c0 <col:186> 'int' lvalue Var 0x563dfbc323c0 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x563dfbc36518 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x563dfbc364e0 <col:198> 'int' lvalue Var 0x563dfbc323c0 'z$w_buff1' 'int'
|   |-BinaryOperator 0x563dfbc36c08 <line:765:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x563dfbc36680 <col:3> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563dfbc36bf0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563dfbc36bc0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x563dfbc36b78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563dfbc36b60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563dfbc366a0 <col:20> '_Bool' lvalue Var 0x563dfbc32528 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563dfbc36ba8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563dfbc36b90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563dfbc366c0 <col:36> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x563dfbc36b40 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x563dfbc36b10 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x563dfbc368d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563dfbc367f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563dfbc36718 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563dfbc36700 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563dfbc366e0 <col:55> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563dfbc367d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563dfbc36768 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563dfbc36750 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563dfbc36730 <col:74> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x563dfbc367b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563dfbc367a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563dfbc36780 <col:93> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563dfbc368b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563dfbc36848 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563dfbc36830 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563dfbc36810 <col:112> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x563dfbc36898 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563dfbc36880 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563dfbc36860 <col:131> '_Bool' lvalue Var 0x563dfbc32150 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x563dfbc36af8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563dfbc36ae0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563dfbc368f0 <col:148> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x563dfbc36ac0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x563dfbc36a90 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x563dfbc369b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563dfbc36968 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563dfbc36950 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563dfbc36910 <col:166> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563dfbc36998 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563dfbc36980 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563dfbc36930 <col:184> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x563dfbc36a48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563dfbc36a00 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563dfbc369d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563dfbc36a78 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x563dfbc36a60 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x563dfbc36a28 <col:212> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563dfbc371e8 <line:766:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x563dfbc36c28 <col:3> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563dfbc371d0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563dfbc371a0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x563dfbc37158 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563dfbc37140 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563dfbc36c48 <col:20> '_Bool' lvalue Var 0x563dfbc32528 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563dfbc37188 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563dfbc37170 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563dfbc36c68 <col:36> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x563dfbc37120 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x563dfbc370f0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x563dfbc36e78 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563dfbc36d98 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563dfbc36cc0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563dfbc36ca8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563dfbc36c88 <col:55> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563dfbc36d78 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563dfbc36d10 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563dfbc36cf8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563dfbc36cd8 <col:74> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x563dfbc36d60 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563dfbc36d48 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563dfbc36d28 <col:93> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563dfbc36e58 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563dfbc36df0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563dfbc36dd8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563dfbc36db8 <col:112> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x563dfbc36e40 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563dfbc36e28 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563dfbc36e08 <col:131> '_Bool' lvalue Var 0x563dfbc32150 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x563dfbc370d8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563dfbc370c0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563dfbc36e98 <col:148> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x563dfbc370a0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x563dfbc37070 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x563dfbc36f58 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563dfbc36f10 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563dfbc36ef8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563dfbc36eb8 <col:166> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563dfbc36f40 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563dfbc36f28 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563dfbc36ed8 <col:184> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x563dfbc37040 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563dfbc36fc0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563dfbc36f78 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563dfbc37058 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x563dfbc37018 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x563dfbc36fe8 <col:219> 'int' 0
|   |-BinaryOperator 0x563dfbc37790 <line:767:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x563dfbc37208 <col:3> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x563dfbc37778 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563dfbc37748 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x563dfbc37700 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563dfbc376e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563dfbc37228 <col:20> '_Bool' lvalue Var 0x563dfbc32528 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563dfbc37730 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563dfbc37718 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563dfbc37248 <col:36> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x563dfbc376c8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x563dfbc37698 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x563dfbc37458 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563dfbc37378 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563dfbc372a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563dfbc37288 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563dfbc37268 <col:55> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563dfbc37358 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563dfbc372f0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563dfbc372d8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563dfbc372b8 <col:74> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x563dfbc37340 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563dfbc37328 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563dfbc37308 <col:93> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563dfbc37438 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563dfbc373d0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563dfbc373b8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563dfbc37398 <col:112> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x563dfbc37420 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563dfbc37408 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563dfbc373e8 <col:131> '_Bool' lvalue Var 0x563dfbc32150 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x563dfbc37680 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563dfbc37668 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563dfbc37478 <col:148> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x563dfbc37648 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x563dfbc37618 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x563dfbc37538 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563dfbc374f0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563dfbc374d8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563dfbc37498 <col:166> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563dfbc37520 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563dfbc37508 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563dfbc374b8 <col:184> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x563dfbc375d0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563dfbc37588 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563dfbc37558 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563dfbc37600 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x563dfbc375e8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x563dfbc375b0 <col:212> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x563dfbc37d58 <line:768:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x563dfbc377b0 <col:3> '_Bool' lvalue Var 0x563dfbc32150 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x563dfbc37d40 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563dfbc37d10 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x563dfbc37cc8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563dfbc37cb0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563dfbc377d0 <col:20> '_Bool' lvalue Var 0x563dfbc32528 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563dfbc37cf8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563dfbc37ce0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563dfbc377f0 <col:36> '_Bool' lvalue Var 0x563dfbc32150 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x563dfbc37c90 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x563dfbc37c60 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x563dfbc37a00 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563dfbc37920 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563dfbc37848 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563dfbc37830 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563dfbc37810 <col:55> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563dfbc37900 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563dfbc37898 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563dfbc37880 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563dfbc37860 <col:74> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x563dfbc378e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563dfbc378d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563dfbc378b0 <col:93> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563dfbc379e0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563dfbc37978 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563dfbc37960 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563dfbc37940 <col:112> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x563dfbc379c8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563dfbc379b0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563dfbc37990 <col:131> '_Bool' lvalue Var 0x563dfbc32150 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x563dfbc37c48 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563dfbc37c30 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563dfbc37a20 <col:148> '_Bool' lvalue Var 0x563dfbc32150 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x563dfbc37c10 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x563dfbc37be0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x563dfbc37ae0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563dfbc37a98 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563dfbc37a80 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563dfbc37a40 <col:166> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563dfbc37ac8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563dfbc37ab0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563dfbc37a60 <col:184> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x563dfbc37bb0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563dfbc37b30 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563dfbc37b00 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563dfbc37bc8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x563dfbc37b88 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x563dfbc37b58 <col:219> 'int' 0
|   |-BinaryOperator 0x563dfbc37dd0 <line:769:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563dfbc37d78 <col:3> 'int' lvalue Var 0x563dfbc317d0 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x563dfbc37db8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563dfbc37d98 <col:25> 'int' lvalue Var 0x563dfbc31c20 'z' 'int'
|   |-BinaryOperator 0x563dfbc37f00 <line:770:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x563dfbc37df0 <col:3> 'int' lvalue Var 0x563dfbc31c20 'z' 'int'
|   | `-ConditionalOperator 0x563dfbc37ed0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x563dfbc37e88 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563dfbc37e70 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563dfbc37e10 <col:7> '_Bool' lvalue Var 0x563dfbc31cb8 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x563dfbc37ea0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563dfbc37e30 <col:25> 'int' lvalue Var 0x563dfbc31d38 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x563dfbc37eb8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x563dfbc37e50 <col:37> 'int' lvalue Var 0x563dfbc31c20 'z' 'int'
|   |-BinaryOperator 0x563dfbc37f98 <line:771:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x563dfbc37f20 <col:3> '_Bool' lvalue Var 0x563dfbc31cb8 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x563dfbc37f70 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563dfbc37f40 <col:28> 'int' 0
|   |-CallExpr 0x563dfbc38008 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563dfbc37ff0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563dfbc37fd0 <col:3> 'void ()' Function 0x563dfbbd8410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563dfbc38060 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563dfbc38048 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563dfbc38028 <col:3> 'void ()' Function 0x563dfbbd8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563dfbc38348 <line:774:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x563dfbc38080 <col:3> 'int' lvalue Var 0x563dfbc31c20 'z' 'int'
|   | `-ConditionalOperator 0x563dfbc38318 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x563dfbc38140 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x563dfbc380f8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x563dfbc380e0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x563dfbc380a0 <col:7> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x563dfbc38128 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x563dfbc38110 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x563dfbc380c0 <col:25> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x563dfbc38300 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563dfbc38160 <col:42> 'int' lvalue Var 0x563dfbc322c8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x563dfbc382e0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x563dfbc382b0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x563dfbc38220 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563dfbc381d8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563dfbc381c0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563dfbc38180 <col:55> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563dfbc38208 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563dfbc381f0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563dfbc381a0 <col:73> '_Bool' lvalue Var 0x563dfbc32150 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x563dfbc38280 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563dfbc38240 <col:90> 'int' lvalue Var 0x563dfbc323c0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x563dfbc38298 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563dfbc38260 <col:102> 'int' lvalue Var 0x563dfbc31c20 'z' 'int'
|   |-BinaryOperator 0x563dfbc38550 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563dfbc38368 <col:3> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563dfbc38538 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563dfbc38508 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563dfbc38428 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563dfbc383e0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563dfbc383c8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563dfbc38388 <col:20> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563dfbc38410 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563dfbc383f8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563dfbc383a8 <col:38> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x563dfbc384c0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563dfbc38478 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563dfbc38448 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563dfbc384f0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563dfbc384d8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563dfbc384a0 <col:66> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563dfbc38838 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563dfbc38570 <col:3> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563dfbc38820 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563dfbc387f0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563dfbc38710 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563dfbc38630 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563dfbc385e8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563dfbc385d0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563dfbc38590 <col:20> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563dfbc38618 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563dfbc38600 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563dfbc385b0 <col:38> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x563dfbc386f0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563dfbc386a8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563dfbc38690 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563dfbc38650 <col:56> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563dfbc386d8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563dfbc386c0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563dfbc38670 <col:74> '_Bool' lvalue Var 0x563dfbc32150 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x563dfbc387a8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563dfbc38760 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563dfbc38730 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563dfbc387d8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563dfbc387c0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563dfbc38788 <col:102> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x563dfbc38a40 <line:777:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563dfbc38858 <col:3> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x563dfbc38a28 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563dfbc389f8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563dfbc38918 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563dfbc388d0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563dfbc388b8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563dfbc38878 <col:20> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563dfbc38900 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563dfbc388e8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563dfbc38898 <col:38> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x563dfbc389b0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563dfbc38968 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563dfbc38938 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563dfbc389e0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563dfbc389c8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563dfbc38990 <col:66> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x563dfbc38d28 <line:778:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563dfbc38a60 <col:3> '_Bool' lvalue Var 0x563dfbc32150 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x563dfbc38d10 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563dfbc38ce0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563dfbc38c00 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563dfbc38b20 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563dfbc38ad8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563dfbc38ac0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563dfbc38a80 <col:20> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563dfbc38b08 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563dfbc38af0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563dfbc38aa0 <col:38> '_Bool' lvalue Var 0x563dfbc31f70 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x563dfbc38be0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563dfbc38b98 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563dfbc38b80 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563dfbc38b40 <col:56> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563dfbc38bc8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563dfbc38bb0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563dfbc38b60 <col:74> '_Bool' lvalue Var 0x563dfbc32150 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x563dfbc38c98 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563dfbc38c50 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563dfbc38c20 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563dfbc38cc8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563dfbc38cb0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563dfbc38c78 <col:102> '_Bool' lvalue Var 0x563dfbc32150 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x563dfbc38d80 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563dfbc38d68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563dfbc38d48 <col:3> 'void ()' Function 0x563dfbbd8410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563dfbc38dd8 <line:780:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563dfbc38dc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563dfbc38da0 <col:3> 'void ()' Function 0x563dfbbd8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563dfbc38e90 <line:781:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x563dfbc38df8 <col:3> 'int' lvalue Var 0x563dfbc31590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x563dfbc38e70 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x563dfbc38e58 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563dfbc38e18 <col:22> 'int' lvalue Var 0x563dfbc31590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x563dfbc38e38 <col:41> 'int' 1
|   |-CallExpr 0x563dfbc38ee8 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563dfbc38ed0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563dfbc38eb0 <col:3> 'void ()' Function 0x563dfbbd8410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x563dfbc38f60 <line:783:3, col:36>
|     `-CallExpr 0x563dfbc38f40 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x563dfbc38f28 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x563dfbc38f08 <col:10> 'void *(void)' Function 0x563dfbbd7e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x563dfbc39100 prev 0x563dfbc312d8 <line:785:1, line:787:1> line:785:6 fence 'void ()'
| `-CompoundStmt 0x563dfbc391a0 <line:786:1, line:787:1>
|-FunctionDecl 0x563dfbc391d0 prev 0x563dfbc31398 <line:788:1, line:790:1> line:788:6 isync 'void ()'
| `-CompoundStmt 0x563dfbc39270 <line:789:1, line:790:1>
|-FunctionDecl 0x563dfbc392a0 prev 0x563dfbc31458 <line:791:1, line:793:1> line:791:6 lwfence 'void ()'
| `-CompoundStmt 0x563dfbc39340 <line:792:1, line:793:1>
`-FunctionDecl 0x563dfbc393a8 <line:794:1, line:818:1> line:794:5 main 'int ()'
  `-CompoundStmt 0x563dfbc3b000 <line:795:1, line:818:1>
    |-DeclStmt 0x563dfbc394c0 <line:796:3, col:18>
    | `-VarDecl 0x563dfbc39458 <col:3, col:13> col:13 used t2295 'pthread_t':'unsigned long'
    |-CallExpr 0x563dfbc396c8 <line:797:3, col:54> 'int'
    | |-ImplicitCastExpr 0x563dfbc396b0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563dfbc394d8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x563dfbc188f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x563dfbc39518 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x563dfbc394f8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x563dfbc39458 't2295' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x563dfbc39708 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x563dfbc39590 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x563dfbc39568 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x563dfbc39530 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x563dfbc39720 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563dfbc395b0 <col:39> 'void *(void *)' Function 0x563dfbc32640 'P0' 'void *(void *)'
    | `-ParenExpr 0x563dfbc39630 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x563dfbc39608 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x563dfbc395d0 <col:52> 'int' 0
    |-DeclStmt 0x563dfbc397b0 <line:798:3, col:18>
    | `-VarDecl 0x563dfbc39748 <col:3, col:13> col:13 used t2296 'pthread_t':'unsigned long'
    |-CallExpr 0x563dfbc39958 <line:799:3, col:54> 'int'
    | |-ImplicitCastExpr 0x563dfbc39940 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563dfbc397c8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x563dfbc188f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x563dfbc39808 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x563dfbc397e8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x563dfbc39748 't2296' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x563dfbc39998 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x563dfbc39880 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x563dfbc39858 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x563dfbc39820 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x563dfbc399b0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563dfbc398a0 <col:39> 'void *(void *)' Function 0x563dfbc34028 'P1' 'void *(void *)'
    | `-ParenExpr 0x563dfbc39920 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x563dfbc398f8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x563dfbc398c0 <col:52> 'int' 0
    |-DeclStmt 0x563dfbc39a40 <line:800:3, col:18>
    | `-VarDecl 0x563dfbc399d8 <col:3, col:13> col:13 used t2297 'pthread_t':'unsigned long'
    |-CallExpr 0x563dfbc39be8 <line:801:3, col:54> 'int'
    | |-ImplicitCastExpr 0x563dfbc39bd0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563dfbc39a58 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x563dfbc188f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x563dfbc39a98 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x563dfbc39a78 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x563dfbc399d8 't2297' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x563dfbc39c28 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x563dfbc39b10 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x563dfbc39ae8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x563dfbc39ab0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x563dfbc39c40 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563dfbc39b30 <col:39> 'void *(void *)' Function 0x563dfbc35390 'P2' 'void *(void *)'
    | `-ParenExpr 0x563dfbc39bb0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x563dfbc39b88 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x563dfbc39b50 <col:52> 'int' 0
    |-CallExpr 0x563dfbc39c90 <line:802:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563dfbc39c78 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563dfbc39c58 <col:3> 'void ()' Function 0x563dfbbd8350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563dfbc39d60 <line:803:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x563dfbc39cb0 <col:3> '_Bool' lvalue Var 0x563dfbc31868 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x563dfbc39d48 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x563dfbc39d28 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x563dfbc39d10 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x563dfbc39cd0 <col:21> 'int' lvalue Var 0x563dfbc31590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x563dfbc39cf0 <col:41> 'int' 3
    |-CallExpr 0x563dfbc39db8 <line:804:3, col:25> 'void'
    | `-ImplicitCastExpr 0x563dfbc39da0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563dfbc39d80 <col:3> 'void ()' Function 0x563dfbbd8410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563dfbc39e30 <line:805:3, col:36> 'void'
    | |-ImplicitCastExpr 0x563dfbc39e18 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563dfbc39dd8 <col:3> 'void (int)' Function 0x563dfbbd7ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x563dfbc39e70 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x563dfbc39e58 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x563dfbc39df8 <col:21> '_Bool' lvalue Var 0x563dfbc31868 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x563dfbc39ec0 <line:806:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563dfbc39ea8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563dfbc39e88 <col:3> 'void ()' Function 0x563dfbbd8350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563dfbc3a1b8 <line:807:3, col:103> 'int' '='
    | |-DeclRefExpr 0x563dfbc39ee0 <col:3> 'int' lvalue Var 0x563dfbc31c20 'z' 'int'
    | `-ConditionalOperator 0x563dfbc3a188 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x563dfbc39fa0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x563dfbc39f58 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x563dfbc39f40 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x563dfbc39f00 <col:7> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x563dfbc39f88 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x563dfbc39f70 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x563dfbc39f20 <col:25> '_Bool' lvalue Var 0x563dfbc31db0 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x563dfbc3a170 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x563dfbc39fc0 <col:42> 'int' lvalue Var 0x563dfbc322c8 'z$w_buff0' 'int'
    |   `-ParenExpr 0x563dfbc3a150 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x563dfbc3a120 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x563dfbc3a090 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x563dfbc3a048 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x563dfbc3a030 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x563dfbc39ff0 <col:55> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x563dfbc3a078 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x563dfbc3a060 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x563dfbc3a010 <col:73> '_Bool' lvalue Var 0x563dfbc31fe8 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x563dfbc3a0f0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x563dfbc3a0b0 <col:90> 'int' lvalue Var 0x563dfbc323c0 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x563dfbc3a108 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x563dfbc3a0d0 <col:102> 'int' lvalue Var 0x563dfbc31c20 'z' 'int'
    |-BinaryOperator 0x563dfbc3a3c0 <line:808:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x563dfbc3a1d8 <col:3> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x563dfbc3a3a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563dfbc3a378 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x563dfbc3a298 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x563dfbc3a250 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x563dfbc3a238 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x563dfbc3a1f8 <col:20> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x563dfbc3a280 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x563dfbc3a268 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x563dfbc3a218 <col:38> '_Bool' lvalue Var 0x563dfbc31db0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563dfbc3a330 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563dfbc3a2e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563dfbc3a2b8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x563dfbc3a360 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563dfbc3a348 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563dfbc3a310 <col:66> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x563dfbc3a6a8 <line:809:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x563dfbc3a3e0 <col:3> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x563dfbc3a690 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563dfbc3a660 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x563dfbc3a580 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x563dfbc3a4a0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x563dfbc3a458 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x563dfbc3a440 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x563dfbc3a400 <col:20> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x563dfbc3a488 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x563dfbc3a470 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x563dfbc3a420 <col:38> '_Bool' lvalue Var 0x563dfbc31db0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x563dfbc3a560 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x563dfbc3a518 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x563dfbc3a500 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x563dfbc3a4c0 <col:56> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x563dfbc3a548 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x563dfbc3a530 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x563dfbc3a4e0 <col:74> '_Bool' lvalue Var 0x563dfbc31fe8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563dfbc3a618 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563dfbc3a5d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563dfbc3a5a0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x563dfbc3a648 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563dfbc3a630 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563dfbc3a5f8 <col:102> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x563dfbc3a8b0 <line:810:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x563dfbc3a6c8 <col:3> '_Bool' lvalue Var 0x563dfbc31db0 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x563dfbc3a898 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563dfbc3a868 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x563dfbc3a788 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x563dfbc3a740 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x563dfbc3a728 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x563dfbc3a6e8 <col:20> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x563dfbc3a770 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x563dfbc3a758 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x563dfbc3a708 <col:38> '_Bool' lvalue Var 0x563dfbc31db0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563dfbc3a820 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563dfbc3a7d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563dfbc3a7a8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x563dfbc3a850 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563dfbc3a838 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563dfbc3a800 <col:66> '_Bool' lvalue Var 0x563dfbc31db0 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x563dfbc3ab98 <line:811:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x563dfbc3a8d0 <col:3> '_Bool' lvalue Var 0x563dfbc31fe8 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x563dfbc3ab80 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563dfbc3ab50 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x563dfbc3aa70 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x563dfbc3a990 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x563dfbc3a948 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x563dfbc3a930 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x563dfbc3a8f0 <col:20> '_Bool' lvalue Var 0x563dfbc32340 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x563dfbc3a978 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x563dfbc3a960 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x563dfbc3a910 <col:38> '_Bool' lvalue Var 0x563dfbc31db0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x563dfbc3aa50 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x563dfbc3aa08 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x563dfbc3a9f0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x563dfbc3a9b0 <col:56> '_Bool' lvalue Var 0x563dfbc32438 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x563dfbc3aa38 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x563dfbc3aa20 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x563dfbc3a9d0 <col:74> '_Bool' lvalue Var 0x563dfbc31fe8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563dfbc3ab08 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563dfbc3aac0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563dfbc3aa90 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x563dfbc3ab38 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563dfbc3ab20 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563dfbc3aae8 <col:102> '_Bool' lvalue Var 0x563dfbc31fe8 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x563dfbc3abf0 <line:812:3, col:25> 'void'
    | `-ImplicitCastExpr 0x563dfbc3abd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563dfbc3abb8 <col:3> 'void ()' Function 0x563dfbbd8410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563dfbc3ac48 <line:813:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563dfbc3ac30 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563dfbc3ac10 <col:3> 'void ()' Function 0x563dfbbd8350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563dfbc3ae80 <line:814:3, col:85> '_Bool' '='
    | |-DeclRefExpr 0x563dfbc3ac68 <col:3> '_Bool' lvalue Var 0x563dfbc318e0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x563dfbc3ae68 <col:21, col:85> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x563dfbc3ae50 <col:21, col:85> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x563dfbc3ae30 <col:22, col:85> 'int'
    |       `-BinaryOperator 0x563dfbc3ae10 <col:23, col:84> 'int' '&&'
    |         |-BinaryOperator 0x563dfbc3ad78 <col:23, col:56> 'int' '&&'
    |         | |-BinaryOperator 0x563dfbc3ace0 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x563dfbc3acc8 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x563dfbc3ac88 <col:23> 'int' lvalue Var 0x563dfbc319e0 'x' 'int'
    |         | | `-IntegerLiteral 0x563dfbc3aca8 <col:28> 'int' 2
    |         | `-BinaryOperator 0x563dfbc3ad58 <col:33, col:56> 'int' '=='
    |         |   |-ImplicitCastExpr 0x563dfbc3ad40 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x563dfbc3ad00 <col:33> 'int' lvalue Var 0x563dfbc316b0 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x563dfbc3ad20 <col:56> 'int' 1
    |         `-BinaryOperator 0x563dfbc3adf0 <col:61, col:84> 'int' '=='
    |           |-ImplicitCastExpr 0x563dfbc3add8 <col:61> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x563dfbc3ad98 <col:61> 'int' lvalue Var 0x563dfbc317d0 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x563dfbc3adb8 <col:84> 'int' 0
    |-CallExpr 0x563dfbc3aed8 <line:815:3, col:25> 'void'
    | `-ImplicitCastExpr 0x563dfbc3aec0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563dfbc3aea0 <col:3> 'void ()' Function 0x563dfbbd8410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563dfbc3af50 <line:816:3, col:36> 'void'
    | |-ImplicitCastExpr 0x563dfbc3af38 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563dfbc3aef8 <col:3> 'void (int)' Function 0x563dfbbd80d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x563dfbc3af90 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x563dfbc3af78 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x563dfbc3af18 <col:21> '_Bool' lvalue Var 0x563dfbc318e0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x563dfbc3afc8 <line:817:3, col:10>
      `-IntegerLiteral 0x563dfbc3afa8 <col:10> 'int' 0
