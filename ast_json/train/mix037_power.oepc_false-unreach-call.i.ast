TranslationUnitDecl 0x562fba4e2f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x562fba4e3848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x562fba4e3520 '__int128'
|-TypedefDecl 0x562fba4e38b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x562fba4e3540 'unsigned __int128'
|-TypedefDecl 0x562fba4e3bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x562fba4e3990 'struct __NSConstantString_tag'
|   `-Record 0x562fba4e3910 '__NSConstantString_tag'
|-TypedefDecl 0x562fba4e3c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x562fba4e3c20 'char *'
|   `-BuiltinType 0x562fba4e3020 'char'
|-TypedefDecl 0x562fba522b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x562fba4e3f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x562fba4e3d40 'struct __va_list_tag'
|     `-Record 0x562fba4e3cc0 '__va_list_tag'
|-FunctionDecl 0x562fba522ca0 <pthread-wmm/mix037_power.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x562fba522bd0 <col:31> col:34 'int'
|-FunctionDecl 0x562fba522e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x562fba522f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x562fba5230d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x562fba523048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x562fba523308 <col:40, col:99>
|   |-IfStmt 0x562fba5232d8 <col:42, col:88>
|   | |-UnaryOperator 0x562fba5231b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x562fba5231a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x562fba523180 <col:47> 'int' lvalue ParmVar 0x562fba523048 'expression' 'int'
|   | `-CompoundStmt 0x562fba5232c0 <col:59, col:88>
|   |   `-LabelStmt 0x562fba5232a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x562fba523238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x562fba523220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x562fba5231d0 <col:68> 'void () __attribute__((noreturn))' Function 0x562fba522f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x562fba5232f0 <col:89>
|   `-ReturnStmt 0x562fba5232f8 <col:91>
|-FunctionDecl 0x562fba523350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x562fba523410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x562fba523790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562fba5234c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x562fba523548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x562fba5235c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x562fba523648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x562fba523850 <line:10:22>
|-FunctionDecl 0x562fba5498a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562fba5238c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x562fba523940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x562fba5239c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x562fba523a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x562fba549960 <line:13:22>
|-FunctionDecl 0x562fba549c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562fba5499d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x562fba549a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x562fba549ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x562fba549cc8 <line:15:22>
|-TypedefDecl 0x562fba549d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x562fba4e30e0 'unsigned char'
|-TypedefDecl 0x562fba549da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x562fba4e3100 'unsigned short'
|-TypedefDecl 0x562fba549e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x562fba4e3120 'unsigned int'
|-TypedefDecl 0x562fba549e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x562fba4e3140 'unsigned long'
|-TypedefDecl 0x562fba549ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x562fba4e3040 'signed char'
|-TypedefDecl 0x562fba549f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x562fba4e30e0 'unsigned char'
|-TypedefDecl 0x562fba549fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x562fba4e3060 'short'
|-TypedefDecl 0x562fba54a048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x562fba4e3100 'unsigned short'
|-TypedefDecl 0x562fba54a0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x562fba4e3080 'int'
|-TypedefDecl 0x562fba54a128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x562fba4e3120 'unsigned int'
|-TypedefDecl 0x562fba54a198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x562fba4e30a0 'long'
|-TypedefDecl 0x562fba54a208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x562fba4e3140 'unsigned long'
|-TypedefDecl 0x562fba54a278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x562fba4e30a0 'long'
|-TypedefDecl 0x562fba54a2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x562fba4e3140 'unsigned long'
|-TypedefDecl 0x562fba54a358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x562fba4e3140 'unsigned long'
|-TypedefDecl 0x562fba54a3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x562fba4e3120 'unsigned int'
|-TypedefDecl 0x562fba54a438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x562fba4e3120 'unsigned int'
|-TypedefDecl 0x562fba54a4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x562fba4e3140 'unsigned long'
|-TypedefDecl 0x562fba54a518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x562fba4e3140 'unsigned long'
|-TypedefDecl 0x562fba54a588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x562fba4e3120 'unsigned int'
|-TypedefDecl 0x562fba54a5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x562fba4e3140 'unsigned long'
|-TypedefDecl 0x562fba54a668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x562fba4e30a0 'long'
|-TypedefDecl 0x562fba54a6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x562fba4e30a0 'long'
|-TypedefDecl 0x562fba54a748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x562fba4e3080 'int'
|-RecordDecl 0x562fba54a7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x562fba54a918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x562fba54a9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x562fba54a970 'struct __fsid_t' sugar
|   `-RecordType 0x562fba54a820 '__fsid_t'
|     `-Record 0x562fba54a7a0 ''
|-TypedefDecl 0x562fba54aa58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x562fba4e30a0 'long'
|-TypedefDecl 0x562fba54aac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x562fba4e3140 'unsigned long'
|-TypedefDecl 0x562fba54ab38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x562fba4e3140 'unsigned long'
|-TypedefDecl 0x562fba54aba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x562fba4e3120 'unsigned int'
|-TypedefDecl 0x562fba54ac18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x562fba4e30a0 'long'
|-TypedefDecl 0x562fba54ac88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x562fba4e3120 'unsigned int'
|-TypedefDecl 0x562fba54acf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x562fba4e30a0 'long'
|-TypedefDecl 0x562fba54ad68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x562fba4e3080 'int'
|-TypedefDecl 0x562fba54add8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x562fba4e3080 'int'
|-TypedefDecl 0x562fba54ae48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x562fba4e3080 'int'
|-TypedefDecl 0x562fba54aeb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x562fba4e37a0 'void *'
|   `-BuiltinType 0x562fba4e2fe0 'void'
|-TypedefDecl 0x562fba54af28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x562fba4e30a0 'long'
|-TypedefDecl 0x562fba54af98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x562fba4e30a0 'long'
|-TypedefDecl 0x562fba54b008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x562fba4e30a0 'long'
|-TypedefDecl 0x562fba54b078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x562fba4e3140 'unsigned long'
|-TypedefDecl 0x562fba54b0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x562fba4e3140 'unsigned long'
|-TypedefDecl 0x562fba54b158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x562fba4e3140 'unsigned long'
|-TypedefDecl 0x562fba54b1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x562fba4e3140 'unsigned long'
|-TypedefDecl 0x562fba54b238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x562fba4e30a0 'long'
|-TypedefDecl 0x562fba54b2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x562fba4e30a0 'long'
|-TypedefDecl 0x562fba54b318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x562fba4e30a0 'long'
|-TypedefDecl 0x562fba54b388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x562fba4e3140 'unsigned long'
|-TypedefDecl 0x562fba54b418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x562fba54b3e0 '__off64_t' sugar
|   |-Typedef 0x562fba54a6d8 '__off64_t'
|   `-BuiltinType 0x562fba4e30a0 'long'
|-TypedefDecl 0x562fba54b510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x562fba54b4d0 '__quad_t *'
|   `-TypedefType 0x562fba54b470 '__quad_t' sugar
|     |-Typedef 0x562fba54a278 '__quad_t'
|     `-BuiltinType 0x562fba4e30a0 'long'
|-TypedefDecl 0x562fba54b580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x562fba4e3c20 'char *'
|   `-BuiltinType 0x562fba4e3020 'char'
|-TypedefDecl 0x562fba54b5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x562fba4e30a0 'long'
|-TypedefDecl 0x562fba54b660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x562fba4e3120 'unsigned int'
|-FunctionDecl 0x562fba54b7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x562fba54b6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x562fba54bae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x562fba54bad8 <line:72:3, col:34>
|     `-CallExpr 0x562fba54ba98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x562fba54ba80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x562fba54ba10 <col:10> '<builtin fn type>' Function 0x562fba54b880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x562fba54bac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x562fba54ba30 <col:29> 'unsigned int' lvalue ParmVar 0x562fba54b6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x562fba54b880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x562fba54b920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x562fba54b990 <col:10> Implicit
| `-ConstAttr 0x562fba54b9e8 <col:10> Implicit
|-FunctionDecl 0x562fba54bc40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x562fba54bb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x562fba54bf58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x562fba54bf48 <line:77:3, col:34>
|     `-CallExpr 0x562fba54bf08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x562fba54bef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x562fba54be78 <col:10> '<builtin fn type>' Function 0x562fba54bce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x562fba54bf30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x562fba54be98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x562fba54bb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x562fba54bce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x562fba54bd88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x562fba54bdf8 <col:10> Implicit
| `-ConstAttr 0x562fba54be50 <col:10> Implicit
|-TypedefDecl 0x562fba54bf88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x562fba4e3140 'unsigned long'
|-TypedefDecl 0x562fba54c018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x562fba54bfe0 '__time_t' sugar
|   |-Typedef 0x562fba54ac18 '__time_t'
|   `-BuiltinType 0x562fba4e30a0 'long'
|-RecordDecl 0x562fba54c070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x562fba54c128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x562fba54c1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x562fba54c248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x562fba54c210 '__pid_t' sugar
|   |-Typedef 0x562fba54a748 '__pid_t'
|   `-BuiltinType 0x562fba4e3080 'int'
|-RecordDecl 0x562fba54c2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x562fba54c360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x562fba54c3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x562fba54c470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x562fba54c4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x562fba4e3140 'unsigned long'
|-RecordDecl 0x562fba54c530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x562fba54c7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x562fba54e8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x562fba54c810 'struct cpu_set_t' sugar
|   `-RecordType 0x562fba54c5b0 'cpu_set_t'
|     `-Record 0x562fba54c530 ''
|-FunctionDecl 0x562fba54eb88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x562fba54e958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562fba54ea60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x562fba54ec38 <line:107:19>
|-FunctionDecl 0x562fba54ee10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x562fba54eca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x562fba54eeb8 <col:69>
|-FunctionDecl 0x562fba54f030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x562fba54ef20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x562fba54f0d8 <col:64>
|-FunctionDecl 0x562fba54f398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x562fba54f140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562fba54f278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x562fba54f448 <line:113:22>
|-FunctionDecl 0x562fba54f6c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x562fba54f4b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562fba54f5a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x562fba54f778 <col:88>
|-FunctionDecl 0x562fba54fa98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x562fba54f7e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562fba54f8c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x562fba54f950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x562fba54fb50 <col:62>
|-FunctionDecl 0x562fba54fcc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x562fba54fbb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x562fba54fd70 <col:63>
|-FunctionDecl 0x562fba54fe98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x562fba54ff38 <col:47>
|-FunctionDecl 0x562fba550040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x562fba54ffa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x562fba5500e8 <col:69>
|-FunctionDecl 0x562fba5501f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x562fba550158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x562fba550298 <col:69>
|-FunctionDecl 0x562fba550558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562fba550300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562fba550438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x562fba550608 <col:88>
|-TypedefDecl 0x562fba550698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x562fba550660 '__clock_t' sugar
|   |-Typedef 0x562fba54aa58 '__clock_t'
|   `-BuiltinType 0x562fba4e30a0 'long'
|-TypedefDecl 0x562fba550728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x562fba5506f0 '__clockid_t' sugar
|   |-Typedef 0x562fba54ae48 '__clockid_t'
|   `-BuiltinType 0x562fba4e3080 'int'
|-TypedefDecl 0x562fba5507b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x562fba550780 '__timer_t' sugar
|   |-Typedef 0x562fba54aeb8 '__timer_t'
|   `-PointerType 0x562fba4e37a0 'void *'
|     `-BuiltinType 0x562fba4e2fe0 'void'
|-RecordDecl 0x562fba550810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x562fba5508e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x562fba550950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x562fba5509b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x562fba550a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x562fba550a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x562fba550af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x562fba550b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x562fba550bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x562fba550c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x562fba550c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x562fba550cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x562fba550d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x562fba550e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x562fba550e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x562fba550f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x562fba551100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x562fba5511a0 <col:45>
|-FunctionDecl 0x562fba551380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x562fba551270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x562fba551428 <col:54>
|-FunctionDecl 0x562fba551628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x562fba551490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x562fba551508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x562fba5516d8 <line:157:22>
| `-ConstAttr 0x562fba551730 <col:63>
|-FunctionDecl 0x562fba552560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562fba551828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x562fba552608 <col:56>
|-FunctionDecl 0x562fba5529b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x562fba552678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x562fba5526f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562fba552770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x562fba552868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x562fba552a70 <col:54>
|-RecordDecl 0x562fba552ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x562fba552b78 parent 0x562fba4e2f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x562fba552dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x562fba552e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x562fba552ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x562fba552f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x562fba553038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x562fba553158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x562fba553100 'struct __locale_struct *'
|   `-ElaboratedType 0x562fba553090 'struct __locale_struct' sugar
|     `-RecordType 0x562fba552b50 'struct __locale_struct'
|       `-Record 0x562fba552ac8 '__locale_struct'
|-TypedefDecl 0x562fba553208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x562fba5531d0 '__locale_t' sugar
|   |-Typedef 0x562fba553158 '__locale_t'
|   `-PointerType 0x562fba553100 'struct __locale_struct *'
|     `-ElaboratedType 0x562fba553090 'struct __locale_struct' sugar
|       `-RecordType 0x562fba552b50 'struct __locale_struct'
|         `-Record 0x562fba552ac8 '__locale_struct'
|-FunctionDecl 0x562fba553610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x562fba553278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x562fba5532f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562fba553370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x562fba553400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x562fba553478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x562fba5536d8 <col:40>
|-FunctionDecl 0x562fba5538c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x562fba5537a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x562fba553970 <col:66>
|-FunctionDecl 0x562fba553a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x562fba5539d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x562fba553b28 <col:69>
|-FunctionDecl 0x562fba553d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x562fba553b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562fba553c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x562fba553e08 <col:52>
|-FunctionDecl 0x562fba553fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x562fba553e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562fba553f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x562fba554060 <col:55>
|-FunctionDecl 0x562fba5541f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x562fba5540e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x562fba5542a0 <col:62>
|-FunctionDecl 0x562fba554418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x562fba554308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x562fba5544c0 <col:60>
|-FunctionDecl 0x562fba554718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x562fba554578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x562fba5545f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x562fba5547c8 <col:44>
|-FunctionDecl 0x562fba5549d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x562fba554830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562fba5548b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x562fba554a88 <col:49>
|-VarDecl 0x562fba554b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x562fba554c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x562fba554c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x562fba554d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x562fba554e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x562fba554f20 <col:42>
|-VarDecl 0x562fba554f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x562fba555010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x562fba555198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x562fba555088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x562fba555240 <col:57>
|-FunctionDecl 0x562fba555350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562fba5552c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x562fba5553f8 <col:56>
|-FunctionDecl 0x562fba556540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562fba555478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x562fba5565e8 <col:59>
|-FunctionDecl 0x562fba5566f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x562fba556658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x562fba556798 <col:48>
| `-ConstAttr 0x562fba5567f0 <col:89>
|-FunctionDecl 0x562fba556a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x562fba5568a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x562fba556938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x562fba556cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562fba556b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562fba556bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x562fba556d68 <col:88>
|-FunctionDecl 0x562fba556f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562fba556dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562fba556e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x562fba556fb0 <col:88>
|-FunctionDecl 0x562fba5571c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x562fba557018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562fba5570a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x562fba557278 <line:208:22>
|-FunctionDecl 0x562fba5575e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x562fba5572e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562fba557360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x562fba5573f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x562fba557480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x562fba5578e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x562fba5576e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x562fba5577c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x562fba557998 <col:85>
|-FunctionDecl 0x562fba557d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x562fba557a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562fba557b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x562fba557c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x562fba557e40 <col:52>
|-FunctionDecl 0x562fba557fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x562fba557ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x562fba558060 <col:61>
|-FunctionDecl 0x562fba558560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x562fba5580c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x562fba558148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x562fba558278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x562fba558368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x562fba558620 <col:62>
|-FunctionDecl 0x562fba558838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x562fba558688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x562fba558718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x562fba5588e8 <line:221:22>
|-FunctionDecl 0x562fba5589e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x562fba558950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x562fba558a90 <col:65>
|-TypedefDecl 0x562fba558b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x562fba4e3140 'unsigned long'
|-RecordDecl 0x562fba558b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x562fba558ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x562fba558d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562fba558db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x562fba558d60 'union pthread_attr_t' sugar
|   `-RecordType 0x562fba558be0 'union pthread_attr_t'
|     `-Record 0x562fba558b58 'pthread_attr_t'
|-RecordDecl 0x562fba558e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x562fba558f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x562fba559000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x562fba5590b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x562fba559050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x562fba558e90 'struct __pthread_internal_list'
|     `-Record 0x562fba558e10 '__pthread_internal_list'
|-RecordDecl 0x562fba559120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x562fba5591c8 parent 0x562fba4e2f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x562fba5592a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562fba559308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x562fba559370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x562fba5593d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x562fba559440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x562fba5594a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x562fba55d580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x562fba55d630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x562fba55d720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x562fba55d788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562fba55d910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x562fba55d8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x562fba5591a0 'pthread_mutex_t'
|     `-Record 0x562fba559120 ''
|-RecordDecl 0x562fba55d980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x562fba55dac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562fba55db28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562fba55dbe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x562fba55db80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x562fba55da00 'pthread_mutexattr_t'
|     `-Record 0x562fba55d980 ''
|-RecordDecl 0x562fba55dc50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x562fba55dcf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x562fba55ddc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562fba55de28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x562fba55de90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x562fba55def8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x562fba55df60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x562fba55dfc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x562fba55e030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x562fba55e098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x562fba55e150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix037_power.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix037_power.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x562fba55e240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x562fba55e2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x562fba55e3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x562fba55e380 'union pthread_cond_t' sugar
|   `-RecordType 0x562fba55dcd0 'pthread_cond_t'
|     `-Record 0x562fba55dc50 ''
|-RecordDecl 0x562fba55e450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x562fba55e590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562fba55e5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562fba55e6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x562fba55e650 'union pthread_condattr_t' sugar
|   `-RecordType 0x562fba55e4d0 'pthread_condattr_t'
|     `-Record 0x562fba55e450 ''
|-TypedefDecl 0x562fba55e738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x562fba4e3120 'unsigned int'
|-TypedefDecl 0x562fba55e7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x562fba4e3080 'int'
|-RecordDecl 0x562fba55e800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x562fba55e8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x562fba55e970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562fba55e9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x562fba55ea40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x562fba55eaa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x562fba55eb10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x562fba55eb78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x562fba55ebe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x562fba55ec48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x562fba55ecb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x562fba55ed18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x562fba55ed80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x562fba55ee30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix037_power.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix037_power.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x562fba55eed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x562fba55ef40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562fba55f090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x562fba55f030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x562fba55e880 'pthread_rwlock_t'
|     `-Record 0x562fba55e800 ''
|-RecordDecl 0x562fba55f100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x562fba55f240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x562fba55f2a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562fba55f360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x562fba55f300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x562fba55f180 'pthread_rwlockattr_t'
|     `-Record 0x562fba55f100 ''
|-TypedefDecl 0x562fba55f3e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x562fba4e3084 'volatile int' volatile
|   `-BuiltinType 0x562fba4e3080 'int'
|-RecordDecl 0x562fba55f440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x562fba5615b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x562fba561618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562fba5616d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x562fba561670 'union pthread_barrier_t' sugar
|   `-RecordType 0x562fba55f4c0 'pthread_barrier_t'
|     `-Record 0x562fba55f440 ''
|-RecordDecl 0x562fba561740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x562fba561840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562fba5618a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562fba561960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x562fba561900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x562fba5617c0 'pthread_barrierattr_t'
|     `-Record 0x562fba561740 ''
|-TypedefDecl 0x562fba561a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x562fba561a10 'long [8]' 8 
|   `-BuiltinType 0x562fba4e30a0 'long'
|-EnumDecl 0x562fba561ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x562fba561b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x562fba561be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x562fba561c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x562fba561d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x562fba561d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x562fba561da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x562fba561df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x562fba561e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x562fba561e68 <col:26> 'int'
| |   `-DeclRefExpr 0x562fba561e48 <col:26> 'int' EnumConstant 0x562fba561d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x562fba561f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x562fba561ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x562fba561ed0 <col:29> 'int' EnumConstant 0x562fba561d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x562fba561f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x562fba561f78 <col:30> 'int'
| |   `-DeclRefExpr 0x562fba561f58 <col:30> 'int' EnumConstant 0x562fba561da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x562fba562018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x562fba562000 <col:27> 'int'
|     `-DeclRefExpr 0x562fba561fe0 <col:27> 'int' EnumConstant 0x562fba561e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x562fba562068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x562fba562138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x562fba5621c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x562fba5621a8 <col:30> 'int'
| |   `-DeclRefExpr 0x562fba562188 <col:30> 'int' EnumConstant 0x562fba562138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x562fba562210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x562fba562298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x562fba562280 <col:29> 'int'
|     `-DeclRefExpr 0x562fba562260 <col:29> 'int' EnumConstant 0x562fba562210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x562fba5622e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x562fba5623b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x562fba562408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x562fba562458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x562fba5624a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x562fba5625c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x562fba562610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x562fba562660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x562fba5626e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x562fba5626d0 <col:31> 'int'
|     `-DeclRefExpr 0x562fba5626b0 <col:31> 'int' EnumConstant 0x562fba5625c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x562fba562738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x562fba562808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x562fba562858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x562fba5628a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x562fba562978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x562fba5629c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x562fba562a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x562fba562ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x562fba562b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x562fba562b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x562fba562dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x562fba562e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x562fba562e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x562fba562fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x562fba563008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x562fba5630d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x562fba563128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x562fba563178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x562fba563248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x562fba563298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x562fba5638f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x562fba563390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x562fba5634a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562fba5636e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x562fba563760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x562fba5639b8 <col:47>
| |-NonNullAttr 0x562fba563a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x562fba563a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x562fba563b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x562fba563aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x562fba563dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x562fba563c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x562fba563ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x562fba563f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x562fba563e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x562fba564040 <col:60>
|-FunctionDecl 0x562fba564190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x562fba564230 <col:54>
| `-ConstAttr 0x562fba564288 <col:95>
|-FunctionDecl 0x562fba564458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x562fba5642c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562fba564338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x562fba564508 <line:394:19>
| `-ConstAttr 0x562fba564560 <col:60>
|-FunctionDecl 0x562fba564f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x562fba564e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x562fba565010 <col:71>
| `-NonNullAttr 0x562fba565068 <col:112, col:126> 1
|-FunctionDecl 0x562fba565170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x562fba5650b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x562fba565218 <line:397:22>
| `-NonNullAttr 0x562fba565270 <col:63, col:77> 1
|-FunctionDecl 0x562fba565498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x562fba5652b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x562fba565338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x562fba565548 <line:400:22>
| `-NonNullAttr 0x562fba5655a0 <col:63, col:80> 1 2
|-FunctionDecl 0x562fba5657a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562fba5655e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562fba565668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x562fba565858 <line:403:22>
| `-NonNullAttr 0x562fba5658b0 <col:63, col:77> 1
|-FunctionDecl 0x562fba565b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x562fba5658f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x562fba5659a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x562fba565bb8 <line:406:22>
| `-NonNullAttr 0x562fba565c10 <col:63, col:80> 1 2
|-FunctionDecl 0x562fba566e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x562fba565c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562fba565cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562fba566ef8 <line:409:22>
| `-NonNullAttr 0x562fba566f50 <col:63, col:77> 1
|-FunctionDecl 0x562fba567188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562fba566f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562fba567028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x562fba567238 <line:412:22>
| `-NonNullAttr 0x562fba567290 <col:63, col:80> 1 2
|-FunctionDecl 0x562fba5674c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562fba5672d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x562fba567368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x562fba567578 <col:37>
| `-NonNullAttr 0x562fba5675d0 <col:78, col:95> 1 2
|-FunctionDecl 0x562fba5677b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562fba567618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562fba567698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x562fba567868 <line:418:22>
| `-NonNullAttr 0x562fba5678c0 <col:63, col:80> 1 2
|-FunctionDecl 0x562fba567a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562fba567908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562fba567988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x562fba567af8 <line:420:22>
| `-NonNullAttr 0x562fba567b50 <col:63, col:77> 1
|-FunctionDecl 0x562fba567cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562fba567b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562fba567c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x562fba567da8 <line:423:22>
| `-NonNullAttr 0x562fba568e30 <col:63, col:80> 1 2
|-FunctionDecl 0x562fba568fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562fba568e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562fba568ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x562fba569068 <line:426:22>
| `-NonNullAttr 0x562fba5690c0 <col:63, col:77> 1
|-FunctionDecl 0x562fba569268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562fba569108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562fba569188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x562fba569318 <line:429:22>
| `-NonNullAttr 0x562fba569370 <col:63, col:80> 1 2
|-FunctionDecl 0x562fba5694f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562fba5693b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562fba569438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x562fba5695a8 <line:431:22>
| `-NonNullAttr 0x562fba569600 <col:63, col:77> 1
|-FunctionDecl 0x562fba569828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x562fba569648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562fba5696c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x562fba5698d8 <line:434:22>
| |-NonNullAttr 0x562fba569930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x562fba569968 <col:100> "" ""
|-FunctionDecl 0x562fba569b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x562fba5699b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562fba569a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x562fba569c28 <line:437:22>
| |-NonNullAttr 0x562fba569c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x562fba569cb8 <col:97> "" ""
|-FunctionDecl 0x562fba569eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x562fba569d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562fba569d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x562fba569f68 <line:440:22>
| `-NonNullAttr 0x562fba569fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x562fba56a140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x562fba56a008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562fba56a080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562fba56a1f0 <line:443:22>
| `-NonNullAttr 0x562fba56a248 <col:63, col:77> 1
|-FunctionDecl 0x562fba56a538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x562fba56a298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562fba56a318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x562fba56a390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x562fba56a5f0 <line:447:22>
| `-NonNullAttr 0x562fba56a648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x562fba56a8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x562fba56a6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562fba56a720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x562fba56a798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562fba56a9b0 <col:43>
| `-NonNullAttr 0x562fba56aa08 <col:84, col:98> 1
|-FunctionDecl 0x562fba56acc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x562fba56aa58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562fba56aad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x562fba56ab68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x562fba56ad80 <line:452:22>
| `-NonNullAttr 0x562fba56add8 <col:63, col:77> 3
|-FunctionDecl 0x562fba56b0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562fba56ae50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562fba56aed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x562fba56af60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x562fba56b1a0 <line:456:22>
| `-NonNullAttr 0x562fba56b1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x562fba56b3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x562fba56b248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562fba56b2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x562fba56b498 <line:458:22>
|-FunctionDecl 0x562fba56b868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x562fba56b560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x562fba56b700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x562fba56b918 <col:52, col:69> 1 2
|-FunctionDecl 0x562fba56bac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x562fba56b9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x562fba56ba20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x562fba56bca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x562fba56bb88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x562fba56bc08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x562fba56be60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x562fba56bd68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x562fba56bfa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x562fba56c040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x562fba56c0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x562fba56c1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x562fba56c240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x562fba56c410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix037_power.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x562fba56c508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x562fba56c5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x562fba56c560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x562fba56c0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x562fba56c040 ''
| `-AlignedAttr 0x562fba56c618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x562fba56c690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x562fba56c7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x562fba56c858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x562fba56c8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x562fba56c928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x562fba56cb30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x562fba56ca20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x562fba56cc78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x562fba56cbe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x562fba56ce70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562fba56cd30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x562fba56cf18 <line:487:22>
|-RecordDecl 0x562fba56cf70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x562fba56d288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x562fba56d0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x562fba56d168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x562fba56d338 <col:86>
| `-ReturnsTwiceAttr 0x562fba56d390 <col:12> Implicit
|-FunctionDecl 0x562fba56d6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562fba56d460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x562fba56d570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x562fba56d768 <line:493:22>
| `-NonNullAttr 0x562fba56d7c0 <col:63, col:77> 1
|-FunctionDecl 0x562fba56d938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562fba56d808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562fba56d9e0 <line:495:22>
| `-NonNullAttr 0x562fba56da38 <col:63, col:77> 1
|-FunctionDecl 0x562fba56db40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562fba56da88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562fba56dbe8 <line:497:22>
| `-NonNullAttr 0x562fba56dc40 <col:52, col:66> 1
|-FunctionDecl 0x562fba56dd40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562fba56dc88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562fba56dde8 <line:499:22>
| `-NonNullAttr 0x562fba56de40 <col:52, col:66> 1
|-FunctionDecl 0x562fba56e088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562fba56de98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562fba56df28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562fba56e138 <col:36>
| `-NonNullAttr 0x562fba56e190 <col:66, col:83> 1 2
|-FunctionDecl 0x562fba56e290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562fba56e1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562fba56e338 <line:504:22>
| `-NonNullAttr 0x562fba56e390 <col:52, col:66> 1
|-FunctionDecl 0x562fba56e628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562fba56e440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562fba56e4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x562fba56e6d8 <line:508:22>
| `-NonNullAttr 0x562fba56e730 <col:63, col:80> 1 2
|-FunctionDecl 0x562fba56e9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x562fba56e778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562fba56e7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x562fba56e878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x562fba56eab0 <line:512:22>
| `-NonNullAttr 0x562fba56eb08 <col:63, col:80> 1 3
|-FunctionDecl 0x562fba56ec10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562fba56eb58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562fba56ecb8 <line:514:22>
| `-NonNullAttr 0x562fba56ed10 <col:63, col:77> 1
|-FunctionDecl 0x562fba56ef38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562fba56edc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x562fba56efe0 <line:516:22>
| `-NonNullAttr 0x562fba56f038 <col:63, col:77> 1
|-FunctionDecl 0x562fba56f140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562fba56f088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x562fba56f1e8 <line:518:22>
| `-NonNullAttr 0x562fba56f240 <col:63, col:77> 1
|-FunctionDecl 0x562fba56f468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562fba56f288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562fba56f308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x562fba56f518 <line:522:22>
| `-NonNullAttr 0x562fba56f570 <col:63, col:80> 1 2
|-FunctionDecl 0x562fba56f778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562fba56f5b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562fba56f638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x562fba56f828 <line:525:22>
| `-NonNullAttr 0x562fba56f880 <col:63, col:77> 1
|-FunctionDecl 0x562fba56fa28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562fba56f8c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562fba56f948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x562fba56fad8 <line:528:22>
| `-NonNullAttr 0x562fba56fb30 <col:63, col:80> 1 2
|-FunctionDecl 0x562fba56fcb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562fba56fb78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562fba56fbf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x562fba56fd68 <line:530:22>
| `-NonNullAttr 0x562fba56fdc0 <col:63, col:77> 1
|-FunctionDecl 0x562fba570f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562fba56fe08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562fba570eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x562fba571040 <line:534:22>
| `-NonNullAttr 0x562fba571098 <col:63, col:80> 1 2
|-FunctionDecl 0x562fba571228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562fba5710e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562fba571168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x562fba5712d8 <line:537:22>
| `-NonNullAttr 0x562fba571330 <col:63, col:77> 1
|-FunctionDecl 0x562fba5714d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562fba571378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562fba5713f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x562fba571588 <line:541:22>
| `-NonNullAttr 0x562fba5715e0 <col:63, col:80> 1 2
|-FunctionDecl 0x562fba571768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562fba571628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562fba5716a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x562fba571818 <line:544:22>
| `-NonNullAttr 0x562fba571870 <col:63, col:77> 1
|-FunctionDecl 0x562fba571a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x562fba5718b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x562fba571938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x562fba571b08 <line:547:22>
| `-NonNullAttr 0x562fba571b60 <col:63, col:80> 1 2
|-FunctionDecl 0x562fba571ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562fba571ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562fba571c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x562fba571d98 <line:550:22>
| `-NonNullAttr 0x562fba571df0 <col:63, col:77> 1
|-FunctionDecl 0x562fba573168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x562fba572f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562fba573020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x562fba573218 <col:29>
| `-NonNullAttr 0x562fba573270 <col:70, col:84> 1
|-FunctionDecl 0x562fba5733e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562fba5732b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562fba573490 <line:555:22>
| `-NonNullAttr 0x562fba5734e8 <col:63, col:77> 1
|-FunctionDecl 0x562fba5735f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562fba573538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562fba573698 <line:557:22>
| `-NonNullAttr 0x562fba5736f0 <col:52, col:66> 1
|-FunctionDecl 0x562fba5737f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562fba573738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562fba573898 <line:559:19>
| `-NonNullAttr 0x562fba5738f0 <col:49, col:63> 1
|-FunctionDecl 0x562fba573b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562fba573938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562fba5739c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562fba573bd8 <col:39>
| `-NonNullAttr 0x562fba573c30 <col:69, col:86> 1 2
|-FunctionDecl 0x562fba573d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562fba573c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562fba573dd8 <line:564:22>
| `-NonNullAttr 0x562fba573e30 <col:52, col:66> 1
|-FunctionDecl 0x562fba573f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562fba573ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562fba574040 <line:566:22>
| `-NonNullAttr 0x562fba574098 <col:52, col:66> 1
|-FunctionDecl 0x562fba574258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562fba5740e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562fba574178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562fba574308 <col:39>
| `-NonNullAttr 0x562fba574360 <col:69, col:86> 1 2
|-FunctionDecl 0x562fba574460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562fba5743a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562fba574508 <line:571:22>
| `-NonNullAttr 0x562fba574560 <col:52, col:66> 1
|-FunctionDecl 0x562fba574748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x562fba574610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x562fba5747f0 <line:573:22>
| `-NonNullAttr 0x562fba574848 <col:63, col:77> 1
|-FunctionDecl 0x562fba574950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x562fba574898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x562fba5749f8 <line:575:22>
| `-NonNullAttr 0x562fba574a50 <col:63, col:77> 1
|-FunctionDecl 0x562fba574c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562fba574a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x562fba574b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x562fba574d28 <line:579:22>
| `-NonNullAttr 0x562fba574d80 <col:63, col:80> 1 2
|-FunctionDecl 0x562fba574fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x562fba574dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x562fba574e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x562fba575058 <line:582:22>
| `-NonNullAttr 0x562fba5750b0 <col:63, col:77> 1
|-FunctionDecl 0x562fba575258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562fba5750f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x562fba575178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x562fba575308 <line:586:22>
| `-NonNullAttr 0x562fba575360 <col:63, col:80> 1 2
|-FunctionDecl 0x562fba5754e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x562fba5753a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x562fba575428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x562fba575598 <col:36>
| `-NonNullAttr 0x562fba5755f0 <col:77, col:91> 1
|-FunctionDecl 0x562fba575928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x562fba5756d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562fba5757e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x562fba5759d8 <line:591:22>
| `-NonNullAttr 0x562fba575a30 <col:63, col:77> 1
|-FunctionDecl 0x562fba575ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562fba575a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562fba575c50 <line:593:22>
| `-NonNullAttr 0x562fba575ca8 <col:63, col:77> 1
|-FunctionDecl 0x562fba575db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562fba575cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562fba575e58 <line:595:22>
| `-NonNullAttr 0x562fba575eb0 <col:52, col:66> 1
|-FunctionDecl 0x562fba575fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562fba575f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562fba576070 <line:597:22>
| `-NonNullAttr 0x562fba5760c8 <col:52, col:66> 1
|-FunctionDecl 0x562fba5762f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x562fba576118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562fba576190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x562fba5763a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x562fba5766d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562fba576428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562fba5764a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562fba576530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x562fba576790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x562fba5769a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x562fba576870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x562fba576a50 <line:606:22>
| `-NonNullAttr 0x562fba576aa8 <col:63, col:77> 1
|-FunctionDecl 0x562fba576bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x562fba576af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x562fba576c58 <line:608:22>
| `-NonNullAttr 0x562fba576cb0 <col:63, col:77> 1
|-FunctionDecl 0x562fba576f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562fba576cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x562fba576d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x562fba576fc0 <line:612:22>
| `-NonNullAttr 0x562fba577018 <col:63, col:80> 1 2
|-FunctionDecl 0x562fba577228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x562fba577068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x562fba5770e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x562fba5772d8 <col:37>
| `-NonNullAttr 0x562fba577330 <col:78, col:92> 1
|-FunctionDecl 0x562fba577548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x562fba577378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x562fba577420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x562fba5775f8 <line:618:22>
| `-NonNullAttr 0x562fba577650 <col:63, col:80> 1 2
|-FunctionDecl 0x562fba577818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x562fba577698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x562fba577710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x562fba5778c8 <line:621:22>
| `-NonNullAttr 0x562fba577920 <col:63, col:77> 1
|-FunctionDecl 0x562fba577bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x562fba577a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x562fba577a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x562fba577c78 <line:623:22>
| `-NonNullAttr 0x562fba577cd0 <col:63, col:77> 1
|-FunctionDecl 0x562fba577e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562fba577d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562fba577f20 <line:625:22>
| `-NonNullAttr 0x562fba577f78 <col:63, col:77> 1
|-FunctionDecl 0x562fba578080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562fba577fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562fba578128 <line:627:22>
| `-NonNullAttr 0x562fba578180 <col:52, col:66> 1
|-FunctionDecl 0x562fba578280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562fba5781c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562fba578328 <line:629:22>
| `-NonNullAttr 0x562fba578380 <col:52, col:66> 1
|-FunctionDecl 0x562fba578480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562fba5783c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562fba578528 <line:631:22>
| `-NonNullAttr 0x562fba578580 <col:52, col:66> 1
|-FunctionDecl 0x562fba578958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x562fba578660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x562fba578770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x562fba5787f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x562fba578a10 <line:635:22>
| `-NonNullAttr 0x562fba578a68 <col:63, col:77> 1
|-FunctionDecl 0x562fba578be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x562fba578ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x562fba578c90 <line:637:22>
| `-NonNullAttr 0x562fba578ce8 <col:63, col:77> 1
|-FunctionDecl 0x562fba578df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x562fba578d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x562fba578e98 <line:639:22>
| `-NonNullAttr 0x562fba578ef0 <col:52, col:66> 1
|-FunctionDecl 0x562fba5790e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x562fba578fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x562fba579190 <line:641:22>
| `-NonNullAttr 0x562fba5791e8 <col:63, col:77> 1
|-FunctionDecl 0x562fba5792f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x562fba579238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x562fba579398 <line:643:22>
| `-NonNullAttr 0x562fba5793f0 <col:63, col:77> 1
|-FunctionDecl 0x562fba579618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562fba579438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x562fba5794b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x562fba5796c8 <line:647:22>
| `-NonNullAttr 0x562fba579720 <col:63, col:80> 1 2
|-FunctionDecl 0x562fba579928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x562fba579768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x562fba5797e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x562fba5799d8 <line:650:22>
| `-NonNullAttr 0x562fba579a30 <col:63, col:77> 1
|-FunctionDecl 0x562fba579d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x562fba579b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x562fba579c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x562fba579e28 <line:653:22>
| `-NonNullAttr 0x562fba579e80 <col:63, col:77> 1
|-FunctionDecl 0x562fba579fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x562fba579ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x562fba57a090 <col:69>
|-FunctionDecl 0x562fba57a208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x562fba57a0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x562fba57a2b0 <col:72>
|-FunctionDecl 0x562fba57a4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x562fba57a318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x562fba57a3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x562fba57a598 <col:44>
|-FunctionDecl 0x562fba57a7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x562fba57a600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562fba57a678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x562fba57a868 <line:660:22>
| `-NonNullAttr 0x562fba57a8c0 <col:63, col:77> 2
|-FunctionDecl 0x562fba57ad08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x562fba57a9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x562fba57aab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x562fba57abc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x562fba57adc0 <col:47>
|-FunctionDecl 0x562fba57bf60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x562fba57ae30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562fba57c0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x562fba57c020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562fba57c210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x562fba57c178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562fba57c368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x562fba57c2d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562fba57c430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x562fba57c4f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x562fba57c5b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x562fba57c668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x562fba57c6e8 prev 0x562fba57c668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x562fba57c750 <col:24> 'int' 0
|-VarDecl 0x562fba57c788 <line:674:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x562fba57c808 prev 0x562fba57c788 <line:675:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x562fba57c870 <col:27> 'int' 0
|-VarDecl 0x562fba57c8a8 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x562fba57c928 prev 0x562fba57c8a8 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x562fba57c990 <col:27> 'int' 0
|-VarDecl 0x562fba57c9c8 <line:678:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x562fba57ca48 prev 0x562fba57c9c8 <line:679:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x562fba57cab0 <col:27> 'int' 0
|-VarDecl 0x562fba57cae8 <line:680:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x562fba57cb68 prev 0x562fba57cae8 <line:681:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x562fba57cbd0 <col:27> 'int' 0
|-VarDecl 0x562fba57cc08 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x562fba57cc88 prev 0x562fba57cc08 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x562fba57ccf0 <col:9> 'int' 0
|-VarDecl 0x562fba57cd28 <line:684:1, col:5> col:5 used b 'int'
|-VarDecl 0x562fba57cda8 prev 0x562fba57cd28 <line:685:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x562fba57ce10 <col:9> 'int' 0
|-VarDecl 0x562fba57ce40 <line:686:1, col:7> col:7 used b$flush_delayed '_Bool'
|-VarDecl 0x562fba57cec0 <line:687:1, col:5> col:5 used b$mem_tmp 'int'
|-VarDecl 0x562fba57cf70 <line:688:1, col:7> col:7 used b$r_buff0_thd0 '_Bool'
|-VarDecl 0x562fba57cfe8 <line:689:1, col:7> col:7 used b$r_buff0_thd1 '_Bool'
|-VarDecl 0x562fba57d060 <line:690:1, col:7> col:7 used b$r_buff0_thd2 '_Bool'
|-VarDecl 0x562fba57d0d8 <line:691:1, col:7> col:7 used b$r_buff0_thd3 '_Bool'
|-VarDecl 0x562fba57d150 <line:692:1, col:7> col:7 used b$r_buff0_thd4 '_Bool'
|-VarDecl 0x562fba57d1c8 <line:693:1, col:7> col:7 used b$r_buff1_thd0 '_Bool'
|-VarDecl 0x562fba57d240 <line:694:1, col:7> col:7 used b$r_buff1_thd1 '_Bool'
|-VarDecl 0x562fba57d2b8 <line:695:1, col:7> col:7 used b$r_buff1_thd2 '_Bool'
|-VarDecl 0x562fba57d330 <line:696:1, col:7> col:7 used b$r_buff1_thd3 '_Bool'
|-VarDecl 0x562fba57d3a8 <line:697:1, col:7> col:7 used b$r_buff1_thd4 '_Bool'
|-VarDecl 0x562fba57d420 <line:698:1, col:7> col:7 b$read_delayed '_Bool'
|-VarDecl 0x562fba57d4a0 <line:699:1, col:6> col:6 b$read_delayed_var 'int *'
|-VarDecl 0x562fba57d520 <line:700:1, col:5> col:5 used b$w_buff0 'int'
|-VarDecl 0x562fba57d598 <line:701:1, col:7> col:7 used b$w_buff0_used '_Bool'
|-VarDecl 0x562fba57d618 <line:702:1, col:5> col:5 used b$w_buff1 'int'
|-VarDecl 0x562fba57d690 <line:703:1, col:7> col:7 used b$w_buff1_used '_Bool'
|-VarDecl 0x562fba57d708 <line:704:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x562fba57d780 <line:705:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x562fba57d800 <line:706:1, col:5> col:5 used x 'int'
|-VarDecl 0x562fba57d880 prev 0x562fba57d800 <line:707:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x562fba57d8e8 <col:9> 'int' 0
|-VarDecl 0x562fba57d920 <line:708:1, col:5> col:5 used y 'int'
|-VarDecl 0x562fba57d9a0 prev 0x562fba57d920 <line:709:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x562fba57da08 <col:9> 'int' 0
|-VarDecl 0x562fba57da40 <line:710:1, col:5> col:5 used z 'int'
|-VarDecl 0x562fba57dac0 prev 0x562fba57da40 <line:711:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x562fba57db28 <col:9> 'int' 0
|-VarDecl 0x562fba57db58 <line:712:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x562fba57dbd0 <line:713:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x562fba57dce8 prev 0x562fba57bf60 <line:714:1, line:743:1> line:714:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x562fba57dc50 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562fba57f588 <line:715:1, line:743:1>
|   |-CallExpr 0x562fba57ddf8 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562fba57dde0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba57dd90 <col:3> 'void ()' Function 0x562fba523350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562fba57de70 <line:717:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562fba57de18 <col:3> 'int' lvalue Var 0x562fba57d618 'b$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x562fba57de58 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562fba57de38 <col:15> 'int' lvalue Var 0x562fba57d520 'b$w_buff0' 'int'
|   |-BinaryOperator 0x562fba57ded0 <line:718:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562fba57de90 <col:3> 'int' lvalue Var 0x562fba57d520 'b$w_buff0' 'int'
|   | `-IntegerLiteral 0x562fba57deb0 <col:15> 'int' 1
|   |-BinaryOperator 0x562fba57df48 <line:719:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562fba57def0 <col:3> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562fba57df30 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562fba57df10 <col:20> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562fba57dff8 <line:720:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x562fba57df80 <col:3> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x562fba57dfd0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562fba57dfa0 <col:27> 'int' 1
|   |-CallExpr 0x562fba57e178 <line:721:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x562fba57e160 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x562fba57e018 <col:3> 'void (int)' Function 0x562fba5230d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x562fba57e118 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x562fba57e0f8 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x562fba57e0d8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x562fba57e090 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x562fba57e078 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x562fba57e038 <col:23> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x562fba57e0c0 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x562fba57e0a8 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x562fba57e058 <col:41> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562fba57e1f8 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562fba57e1a0 <col:3> '_Bool' lvalue Var 0x562fba57d1c8 'b$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x562fba57e1e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562fba57e1c0 <col:20> '_Bool' lvalue Var 0x562fba57cf70 'b$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x562fba57e270 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562fba57e218 <col:3> '_Bool' lvalue Var 0x562fba57d240 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562fba57e258 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562fba57e238 <col:20> '_Bool' lvalue Var 0x562fba57cfe8 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x562fba57e2e8 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562fba57e290 <col:3> '_Bool' lvalue Var 0x562fba57d2b8 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562fba57e2d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562fba57e2b0 <col:20> '_Bool' lvalue Var 0x562fba57d060 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x562fba57e360 <line:725:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562fba57e308 <col:3> '_Bool' lvalue Var 0x562fba57d330 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562fba57e348 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562fba57e328 <col:20> '_Bool' lvalue Var 0x562fba57d0d8 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x562fba57e3d8 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562fba57e380 <col:3> '_Bool' lvalue Var 0x562fba57d3a8 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x562fba57e3c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562fba57e3a0 <col:20> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x562fba57e470 <line:727:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x562fba57e3f8 <col:3> '_Bool' lvalue Var 0x562fba57cfe8 'b$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x562fba57e448 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562fba57e418 <col:27> 'int' 1
|   |-CallExpr 0x562fba57e4c8 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562fba57e4b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba57e490 <col:3> 'void ()' Function 0x562fba523410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562fba57e520 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562fba57e508 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba57e4e8 <col:3> 'void ()' Function 0x562fba523350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562fba57e580 <line:730:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562fba57e540 <col:3> 'int' lvalue Var 0x562fba57d880 'x' 'int'
|   | `-IntegerLiteral 0x562fba57e560 <col:7> 'int' 1
|   |-CallExpr 0x562fba57e5d8 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562fba57e5c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba57e5a0 <col:3> 'void ()' Function 0x562fba523410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562fba57e630 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562fba57e618 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba57e5f8 <col:3> 'void ()' Function 0x562fba523350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562fba57e918 <line:733:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562fba57e650 <col:3> 'int' lvalue Var 0x562fba57cda8 'b' 'int'
|   | `-ConditionalOperator 0x562fba57e8e8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562fba57e710 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562fba57e6c8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562fba57e6b0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562fba57e670 <col:7> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562fba57e6f8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562fba57e6e0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562fba57e690 <col:25> '_Bool' lvalue Var 0x562fba57cfe8 'b$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x562fba57e8d0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562fba57e730 <col:42> 'int' lvalue Var 0x562fba57d520 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x562fba57e8b0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562fba57e880 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562fba57e7f0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562fba57e7a8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562fba57e790 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562fba57e750 <col:55> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562fba57e7d8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562fba57e7c0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562fba57e770 <col:73> '_Bool' lvalue Var 0x562fba57d240 'b$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x562fba57e850 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562fba57e810 <col:90> 'int' lvalue Var 0x562fba57d618 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562fba57e868 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562fba57e830 <col:102> 'int' lvalue Var 0x562fba57cda8 'b' 'int'
|   |-BinaryOperator 0x562fba57eb20 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562fba57e938 <col:3> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562fba57eb08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562fba57ead8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562fba57e9f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562fba57e9b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562fba57e998 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562fba57e958 <col:20> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562fba57e9e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562fba57e9c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562fba57e978 <col:38> '_Bool' lvalue Var 0x562fba57cfe8 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562fba57ea90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562fba57ea48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562fba57ea18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562fba57eac0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562fba57eaa8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562fba57ea70 <col:66> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562fba57ee08 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562fba57eb40 <col:3> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562fba57edf0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562fba57edc0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562fba57ece0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562fba57ec00 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562fba57ebb8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562fba57eba0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562fba57eb60 <col:20> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562fba57ebe8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562fba57ebd0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562fba57eb80 <col:38> '_Bool' lvalue Var 0x562fba57cfe8 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x562fba57ecc0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562fba57ec78 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562fba57ec60 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562fba57ec20 <col:56> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562fba57eca8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562fba57ec90 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562fba57ec40 <col:74> '_Bool' lvalue Var 0x562fba57d240 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562fba57ed78 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562fba57ed30 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562fba57ed00 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562fba57eda8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562fba57ed90 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562fba57ed58 <col:102> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562fba57f020 <line:736:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562fba57ee28 <col:3> '_Bool' lvalue Var 0x562fba57cfe8 'b$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562fba57f008 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562fba57efd8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562fba57eee8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562fba57eea0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562fba57ee88 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562fba57ee48 <col:20> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562fba57eed0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562fba57eeb8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562fba57ee68 <col:38> '_Bool' lvalue Var 0x562fba57cfe8 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562fba57ef90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562fba57ef38 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562fba57ef08 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562fba57efc0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562fba57efa8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562fba57ef60 <col:66> '_Bool' lvalue Var 0x562fba57cfe8 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x562fba57f308 <line:737:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562fba57f040 <col:3> '_Bool' lvalue Var 0x562fba57d240 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562fba57f2f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562fba57f2c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562fba57f1e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562fba57f100 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562fba57f0b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562fba57f0a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562fba57f060 <col:20> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562fba57f0e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562fba57f0d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562fba57f080 <col:38> '_Bool' lvalue Var 0x562fba57cfe8 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x562fba57f1c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562fba57f178 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562fba57f160 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562fba57f120 <col:56> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562fba57f1a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562fba57f190 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562fba57f140 <col:74> '_Bool' lvalue Var 0x562fba57d240 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562fba57f278 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562fba57f230 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562fba57f200 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562fba57f2a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562fba57f290 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562fba57f258 <col:102> '_Bool' lvalue Var 0x562fba57d240 'b$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x562fba57f360 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562fba57f348 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba57f328 <col:3> 'void ()' Function 0x562fba523410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562fba57f3b8 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562fba57f3a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba57f380 <col:3> 'void ()' Function 0x562fba523350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562fba57f470 <line:740:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562fba57f3d8 <col:3> 'int' lvalue Var 0x562fba57c6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562fba57f450 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562fba57f438 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562fba57f3f8 <col:22> 'int' lvalue Var 0x562fba57c6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562fba57f418 <col:41> 'int' 1
|   |-CallExpr 0x562fba57f4c8 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562fba57f4b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba57f490 <col:3> 'void ()' Function 0x562fba523410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562fba57f578 <line:742:3, col:36>
|     `-CallExpr 0x562fba57f558 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562fba57f540 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562fba57f4e8 <col:10> 'void *(void)' Function 0x562fba522e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562fba57f720 prev 0x562fba57c0b8 <line:744:1, line:763:1> line:744:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x562fba57f688 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562fba580960 <line:745:1, line:763:1>
|   |-CallExpr 0x562fba57f800 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562fba57f7e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba57f7c8 <col:3> 'void ()' Function 0x562fba523350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562fba57f860 <line:747:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562fba57f820 <col:3> 'int' lvalue Var 0x562fba57d880 'x' 'int'
|   | `-IntegerLiteral 0x562fba57f840 <col:7> 'int' 2
|   |-CallExpr 0x562fba57f8b8 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562fba57f8a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba57f880 <col:3> 'void ()' Function 0x562fba523410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562fba57f910 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562fba57f8f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba57f8d8 <col:3> 'void ()' Function 0x562fba523350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562fba57f988 <line:750:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562fba57f930 <col:3> 'int' lvalue Var 0x562fba57c808 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x562fba57f970 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562fba57f950 <col:25> 'int' lvalue Var 0x562fba57d9a0 'y' 'int'
|   |-CallExpr 0x562fba57f9e0 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562fba57f9c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba57f9a8 <col:3> 'void ()' Function 0x562fba523410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562fba57fa38 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562fba57fa20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba57fa00 <col:3> 'void ()' Function 0x562fba523350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562fba57fd20 <line:753:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562fba57fa58 <col:3> 'int' lvalue Var 0x562fba57cda8 'b' 'int'
|   | `-ConditionalOperator 0x562fba57fcf0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562fba57fb18 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562fba57fad0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562fba57fab8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562fba57fa78 <col:7> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562fba57fb00 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562fba57fae8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562fba57fa98 <col:25> '_Bool' lvalue Var 0x562fba57d060 'b$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x562fba57fcd8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562fba57fb38 <col:42> 'int' lvalue Var 0x562fba57d520 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x562fba57fcb8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562fba57fc88 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562fba57fbf8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562fba57fbb0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562fba57fb98 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562fba57fb58 <col:55> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562fba57fbe0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562fba57fbc8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562fba57fb78 <col:73> '_Bool' lvalue Var 0x562fba57d2b8 'b$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x562fba57fc58 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562fba57fc18 <col:90> 'int' lvalue Var 0x562fba57d618 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562fba57fc70 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562fba57fc38 <col:102> 'int' lvalue Var 0x562fba57cda8 'b' 'int'
|   |-BinaryOperator 0x562fba57ff28 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562fba57fd40 <col:3> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562fba57ff10 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562fba57fee0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562fba57fe00 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562fba57fdb8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562fba57fda0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562fba57fd60 <col:20> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562fba57fde8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562fba57fdd0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562fba57fd80 <col:38> '_Bool' lvalue Var 0x562fba57d060 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562fba57fe98 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562fba57fe50 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562fba57fe20 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562fba57fec8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562fba57feb0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562fba57fe78 <col:66> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562fba580228 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562fba57ff48 <col:3> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562fba580210 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562fba5801e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562fba580100 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562fba580020 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562fba57ffd8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562fba57ffc0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562fba57ff68 <col:20> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562fba580008 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562fba57fff0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562fba57ffa0 <col:38> '_Bool' lvalue Var 0x562fba57d060 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x562fba5800e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562fba580098 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562fba580080 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562fba580040 <col:56> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562fba5800c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562fba5800b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562fba580060 <col:74> '_Bool' lvalue Var 0x562fba57d2b8 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562fba580198 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562fba580150 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562fba580120 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562fba5801c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562fba5801b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562fba580178 <col:102> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562fba580430 <line:756:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562fba580248 <col:3> '_Bool' lvalue Var 0x562fba57d060 'b$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562fba580418 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562fba5803e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562fba580308 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562fba5802c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562fba5802a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562fba580268 <col:20> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562fba5802f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562fba5802d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562fba580288 <col:38> '_Bool' lvalue Var 0x562fba57d060 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562fba5803a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562fba580358 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562fba580328 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562fba5803d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562fba5803b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562fba580380 <col:66> '_Bool' lvalue Var 0x562fba57d060 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x562fba580718 <line:757:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562fba580450 <col:3> '_Bool' lvalue Var 0x562fba57d2b8 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562fba580700 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562fba5806d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562fba5805f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562fba580510 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562fba5804c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562fba5804b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562fba580470 <col:20> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562fba5804f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562fba5804e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562fba580490 <col:38> '_Bool' lvalue Var 0x562fba57d060 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x562fba5805d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562fba580588 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562fba580570 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562fba580530 <col:56> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562fba5805b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562fba5805a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562fba580550 <col:74> '_Bool' lvalue Var 0x562fba57d2b8 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562fba580688 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562fba580640 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562fba580610 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562fba5806b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562fba5806a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562fba580668 <col:102> '_Bool' lvalue Var 0x562fba57d2b8 'b$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x562fba580770 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562fba580758 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba580738 <col:3> 'void ()' Function 0x562fba523410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562fba5807c8 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562fba5807b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba580790 <col:3> 'void ()' Function 0x562fba523350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562fba580880 <line:760:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562fba5807e8 <col:3> 'int' lvalue Var 0x562fba57c6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562fba580860 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562fba580848 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562fba580808 <col:22> 'int' lvalue Var 0x562fba57c6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562fba580828 <col:41> 'int' 1
|   |-CallExpr 0x562fba5808d8 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562fba5808c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba5808a0 <col:3> 'void ()' Function 0x562fba523410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562fba580950 <line:762:3, col:36>
|     `-CallExpr 0x562fba580930 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562fba580918 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562fba5808f8 <col:10> 'void *(void)' Function 0x562fba522e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562fba580aa8 prev 0x562fba57c210 <line:764:1, line:783:1> line:764:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x562fba580a10 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562fba581ce0 <line:765:1, line:783:1>
|   |-CallExpr 0x562fba580b88 <line:766:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562fba580b70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba580b50 <col:3> 'void ()' Function 0x562fba523350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562fba580be8 <line:767:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562fba580ba8 <col:3> 'int' lvalue Var 0x562fba57d9a0 'y' 'int'
|   | `-IntegerLiteral 0x562fba580bc8 <col:7> 'int' 1
|   |-CallExpr 0x562fba580c40 <line:768:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562fba580c28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba580c08 <col:3> 'void ()' Function 0x562fba523410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562fba580c98 <line:769:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562fba580c80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba580c60 <col:3> 'void ()' Function 0x562fba523350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562fba580d10 <line:770:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562fba580cb8 <col:3> 'int' lvalue Var 0x562fba57c928 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x562fba580cf8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562fba580cd8 <col:25> 'int' lvalue Var 0x562fba57dac0 'z' 'int'
|   |-CallExpr 0x562fba580d68 <line:771:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562fba580d50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba580d30 <col:3> 'void ()' Function 0x562fba523410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562fba580dc0 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562fba580da8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba580d88 <col:3> 'void ()' Function 0x562fba523350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562fba5810b8 <line:773:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562fba580de0 <col:3> 'int' lvalue Var 0x562fba57cda8 'b' 'int'
|   | `-ConditionalOperator 0x562fba581088 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562fba580ea0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562fba580e58 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562fba580e40 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562fba580e00 <col:7> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562fba580e88 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562fba580e70 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562fba580e20 <col:25> '_Bool' lvalue Var 0x562fba57d0d8 'b$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x562fba581070 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562fba580ec0 <col:42> 'int' lvalue Var 0x562fba57d520 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x562fba581050 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562fba581020 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562fba580f80 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562fba580f38 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562fba580f20 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562fba580ee0 <col:55> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562fba580f68 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562fba580f50 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562fba580f00 <col:73> '_Bool' lvalue Var 0x562fba57d330 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x562fba580ff0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562fba580fb0 <col:90> 'int' lvalue Var 0x562fba57d618 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562fba581008 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562fba580fd0 <col:102> 'int' lvalue Var 0x562fba57cda8 'b' 'int'
|   |-BinaryOperator 0x562fba5812c0 <line:774:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562fba5810d8 <col:3> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562fba5812a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562fba581278 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562fba581198 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562fba581150 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562fba581138 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562fba5810f8 <col:20> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562fba581180 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562fba581168 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562fba581118 <col:38> '_Bool' lvalue Var 0x562fba57d0d8 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562fba581230 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562fba5811e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562fba5811b8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562fba581260 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562fba581248 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562fba581210 <col:66> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562fba5815a8 <line:775:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562fba5812e0 <col:3> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562fba581590 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562fba581560 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562fba581480 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562fba5813a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562fba581358 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562fba581340 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562fba581300 <col:20> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562fba581388 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562fba581370 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562fba581320 <col:38> '_Bool' lvalue Var 0x562fba57d0d8 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x562fba581460 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562fba581418 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562fba581400 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562fba5813c0 <col:56> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562fba581448 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562fba581430 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562fba5813e0 <col:74> '_Bool' lvalue Var 0x562fba57d330 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562fba581518 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562fba5814d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562fba5814a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562fba581548 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562fba581530 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562fba5814f8 <col:102> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562fba5817b0 <line:776:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562fba5815c8 <col:3> '_Bool' lvalue Var 0x562fba57d0d8 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562fba581798 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562fba581768 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562fba581688 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562fba581640 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562fba581628 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562fba5815e8 <col:20> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562fba581670 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562fba581658 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562fba581608 <col:38> '_Bool' lvalue Var 0x562fba57d0d8 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562fba581720 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562fba5816d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562fba5816a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562fba581750 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562fba581738 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562fba581700 <col:66> '_Bool' lvalue Var 0x562fba57d0d8 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x562fba581a98 <line:777:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562fba5817d0 <col:3> '_Bool' lvalue Var 0x562fba57d330 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562fba581a80 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562fba581a50 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562fba581970 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562fba581890 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562fba581848 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562fba581830 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562fba5817f0 <col:20> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562fba581878 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562fba581860 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562fba581810 <col:38> '_Bool' lvalue Var 0x562fba57d0d8 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x562fba581950 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562fba581908 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562fba5818f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562fba5818b0 <col:56> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562fba581938 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562fba581920 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562fba5818d0 <col:74> '_Bool' lvalue Var 0x562fba57d330 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562fba581a08 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562fba5819c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562fba581990 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562fba581a38 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562fba581a20 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562fba5819e8 <col:102> '_Bool' lvalue Var 0x562fba57d330 'b$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x562fba581af0 <line:778:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562fba581ad8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba581ab8 <col:3> 'void ()' Function 0x562fba523410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562fba581b48 <line:779:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562fba581b30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba581b10 <col:3> 'void ()' Function 0x562fba523350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562fba581c00 <line:780:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562fba581b68 <col:3> 'int' lvalue Var 0x562fba57c6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562fba581be0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562fba581bc8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562fba581b88 <col:22> 'int' lvalue Var 0x562fba57c6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562fba581ba8 <col:41> 'int' 1
|   |-CallExpr 0x562fba581c58 <line:781:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562fba581c40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba581c20 <col:3> 'void ()' Function 0x562fba523410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562fba581cd0 <line:782:3, col:36>
|     `-CallExpr 0x562fba581cb0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562fba581c98 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562fba581c78 <col:10> 'void *(void)' Function 0x562fba522e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562fba581e28 prev 0x562fba57c368 <line:784:1, line:822:1> line:784:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x562fba581d90 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562fba585c48 <line:785:1, line:822:1>
|   |-CallExpr 0x562fba581f08 <line:786:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562fba581ef0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba581ed0 <col:3> 'void ()' Function 0x562fba523350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562fba581f68 <line:787:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562fba581f28 <col:3> 'int' lvalue Var 0x562fba57dac0 'z' 'int'
|   | `-IntegerLiteral 0x562fba581f48 <col:7> 'int' 1
|   |-CallExpr 0x562fba581fd8 <line:788:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562fba581fc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba581f88 <col:3> 'void ()' Function 0x562fba523410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562fba582030 <line:789:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562fba582018 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba581ff8 <col:3> 'void ()' Function 0x562fba523350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562fba582090 <line:790:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562fba582050 <col:3> 'int' lvalue Var 0x562fba57cc88 'a' 'int'
|   | `-IntegerLiteral 0x562fba582070 <col:7> 'int' 1
|   |-CallExpr 0x562fba5820e8 <line:791:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562fba5820d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba5820b0 <col:3> 'void ()' Function 0x562fba523410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562fba582140 <line:792:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562fba582128 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba582108 <col:3> 'void ()' Function 0x562fba523350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562fba5821b8 <line:793:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562fba582160 <col:3> 'int' lvalue Var 0x562fba57ca48 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x562fba5821a0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562fba582180 <col:25> 'int' lvalue Var 0x562fba57cc88 'a' 'int'
|   |-CallExpr 0x562fba582210 <line:794:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562fba5821f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba5821d8 <col:3> 'void ()' Function 0x562fba523410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562fba582268 <line:795:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562fba582250 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba582230 <col:3> 'void ()' Function 0x562fba523350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562fba582318 <line:796:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x562fba582288 <col:3> '_Bool' lvalue Var 0x562fba57db58 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x562fba582300 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x562fba5822e0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x562fba5822c8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x562fba5822a8 <col:19> 'void *(void)' Function 0x562fba522e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x562fba5823c8 <line:797:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x562fba582338 <col:3> '_Bool' lvalue Var 0x562fba57dbd0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x562fba5823b0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x562fba582390 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x562fba582378 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x562fba582358 <col:19> 'void *(void)' Function 0x562fba522e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x562fba582440 <line:798:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x562fba5823e8 <col:3> '_Bool' lvalue Var 0x562fba57ce40 'b$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x562fba582428 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562fba582408 <col:21> '_Bool' lvalue Var 0x562fba57dbd0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x562fba5824b8 <line:799:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562fba582460 <col:3> 'int' lvalue Var 0x562fba57cec0 'b$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x562fba5824a0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562fba582480 <col:15> 'int' lvalue Var 0x562fba57cda8 'b' 'int'
|   |-BinaryOperator 0x562fba5828f0 <line:800:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x562fba5824d8 <col:3> 'int' lvalue Var 0x562fba57cda8 'b' 'int'
|   | `-ConditionalOperator 0x562fba5828c0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x562fba5826e8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x562fba582608 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x562fba582530 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x562fba582518 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x562fba5824f8 <col:8> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x562fba5825e8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x562fba582580 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x562fba582568 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x562fba582548 <col:27> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x562fba5825d0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x562fba5825b8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x562fba582598 <col:46> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x562fba5826c8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x562fba582660 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x562fba582648 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x562fba582628 <col:65> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x562fba5826b0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x562fba582698 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x562fba582678 <col:84> '_Bool' lvalue Var 0x562fba57d3a8 'b$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x562fba5828a8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562fba582708 <col:101> 'int' lvalue Var 0x562fba57cda8 'b' 'int'
|   |   `-ParenExpr 0x562fba582888 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x562fba582858 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x562fba5827c8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562fba582780 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562fba582768 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562fba582728 <col:106> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562fba5827b0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562fba582798 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562fba582748 <col:124> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x562fba582828 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562fba5827e8 <col:141> 'int' lvalue Var 0x562fba57d520 'b$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x562fba582840 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562fba582808 <col:153> 'int' lvalue Var 0x562fba57d618 'b$w_buff1' 'int'
|   |-BinaryOperator 0x562fba582e00 <line:801:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x562fba582910 <col:3> 'int' lvalue Var 0x562fba57d520 'b$w_buff0' 'int'
|   | `-ConditionalOperator 0x562fba582dd0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562fba582da0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562fba582d88 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562fba582930 <col:15> '_Bool' lvalue Var 0x562fba57dbd0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562fba582db8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562fba582950 <col:31> 'int' lvalue Var 0x562fba57d520 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x562fba582d68 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x562fba582d38 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562fba582b60 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x562fba582a80 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562fba5829a8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562fba582990 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x562fba582970 <col:45> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x562fba582a60 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x562fba5829f8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x562fba5829e0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562fba5829c0 <col:64> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x562fba582a48 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x562fba582a30 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x562fba582a10 <col:83> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x562fba582b40 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x562fba582ad8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562fba582ac0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562fba582aa0 <col:102> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x562fba582b28 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x562fba582b10 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x562fba582af0 <col:121> '_Bool' lvalue Var 0x562fba57d3a8 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x562fba582d20 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562fba582b80 <col:138> 'int' lvalue Var 0x562fba57d520 'b$w_buff0' 'int'
|   |       `-ParenExpr 0x562fba582d00 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562fba582cd0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x562fba582c40 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x562fba582bf8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x562fba582be0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562fba582ba0 <col:151> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x562fba582c28 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x562fba582c10 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562fba582bc0 <col:169> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x562fba582ca0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x562fba582c60 <col:186> 'int' lvalue Var 0x562fba57d520 'b$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x562fba582cb8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562fba582c80 <col:198> 'int' lvalue Var 0x562fba57d520 'b$w_buff0' 'int'
|   |-BinaryOperator 0x562fba583330 <line:802:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x562fba582e20 <col:3> 'int' lvalue Var 0x562fba57d618 'b$w_buff1' 'int'
|   | `-ConditionalOperator 0x562fba583300 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562fba5832d0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562fba5832b8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562fba582e40 <col:15> '_Bool' lvalue Var 0x562fba57dbd0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562fba5832e8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562fba582e60 <col:31> 'int' lvalue Var 0x562fba57d618 'b$w_buff1' 'int'
|   |   `-ParenExpr 0x562fba583298 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x562fba583268 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562fba583090 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x562fba582f90 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562fba582eb8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562fba582ea0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x562fba582e80 <col:45> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x562fba582f70 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x562fba582f08 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x562fba582ef0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562fba582ed0 <col:64> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x562fba582f58 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x562fba582f40 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x562fba582f20 <col:83> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x562fba583070 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x562fba583008 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562fba582ff0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562fba582fd0 <col:102> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x562fba583058 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x562fba583040 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x562fba583020 <col:121> '_Bool' lvalue Var 0x562fba57d3a8 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x562fba583250 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562fba5830b0 <col:138> 'int' lvalue Var 0x562fba57d618 'b$w_buff1' 'int'
|   |       `-ParenExpr 0x562fba583230 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562fba583200 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x562fba583170 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x562fba583128 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x562fba583110 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562fba5830d0 <col:151> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x562fba583158 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x562fba583140 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562fba5830f0 <col:169> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x562fba5831d0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x562fba583190 <col:186> 'int' lvalue Var 0x562fba57d618 'b$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x562fba5831e8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562fba5831b0 <col:198> 'int' lvalue Var 0x562fba57d618 'b$w_buff1' 'int'
|   |-BinaryOperator 0x562fba5838d8 <line:803:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x562fba583350 <col:3> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562fba5838c0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562fba583890 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x562fba583848 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562fba583830 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562fba583370 <col:20> '_Bool' lvalue Var 0x562fba57dbd0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562fba583878 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562fba583860 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562fba583390 <col:36> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x562fba583810 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x562fba5837e0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x562fba5835a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562fba5834c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562fba5833e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562fba5833d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562fba5833b0 <col:55> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562fba5834a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562fba583438 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562fba583420 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562fba583400 <col:74> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x562fba583488 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562fba583470 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562fba583450 <col:93> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562fba583580 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562fba583518 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562fba583500 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562fba5834e0 <col:112> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x562fba583568 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562fba583550 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562fba583530 <col:131> '_Bool' lvalue Var 0x562fba57d3a8 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x562fba5837c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562fba5837b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562fba5835c0 <col:148> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x562fba583790 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x562fba583760 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x562fba583680 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562fba583638 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562fba583620 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562fba5835e0 <col:166> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562fba583668 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562fba583650 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562fba583600 <col:184> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x562fba583718 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562fba5836d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562fba5836a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562fba583748 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562fba583730 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562fba5836f8 <col:212> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562fba583ea0 <line:804:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x562fba5838f8 <col:3> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562fba583e88 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562fba583e58 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x562fba583e10 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562fba583df8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562fba583918 <col:20> '_Bool' lvalue Var 0x562fba57dbd0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562fba583e40 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562fba583e28 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562fba583938 <col:36> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x562fba583dd8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562fba583da8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x562fba583b48 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562fba583a68 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562fba583990 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562fba583978 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562fba583958 <col:55> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562fba583a48 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562fba5839e0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562fba5839c8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562fba5839a8 <col:74> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x562fba583a30 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562fba583a18 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562fba5839f8 <col:93> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562fba583b28 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562fba583ac0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562fba583aa8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562fba583a88 <col:112> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x562fba583b10 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562fba583af8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562fba583ad8 <col:131> '_Bool' lvalue Var 0x562fba57d3a8 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x562fba583d90 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562fba583d78 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562fba583b68 <col:148> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x562fba583d58 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x562fba583d28 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x562fba583c28 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562fba583be0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562fba583bc8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562fba583b88 <col:166> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562fba583c10 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562fba583bf8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562fba583ba8 <col:184> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x562fba583cf8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562fba583c78 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562fba583c48 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562fba583d10 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x562fba583cd0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562fba583ca0 <col:219> 'int' 0
|   |-BinaryOperator 0x562fba584468 <line:805:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x562fba583ec0 <col:3> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x562fba584450 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562fba584420 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x562fba5843d8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562fba5843c0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562fba583ee0 <col:20> '_Bool' lvalue Var 0x562fba57dbd0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562fba584408 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562fba5843f0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562fba583f00 <col:36> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x562fba5843a0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x562fba584370 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x562fba584130 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562fba584050 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562fba583f58 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562fba583f40 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562fba583f20 <col:55> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562fba584030 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562fba583fa8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562fba583f90 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562fba583f70 <col:74> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x562fba584018 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562fba584000 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562fba583fe0 <col:93> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562fba584110 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562fba5840a8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562fba584090 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562fba584070 <col:112> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x562fba5840f8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562fba5840e0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562fba5840c0 <col:131> '_Bool' lvalue Var 0x562fba57d3a8 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x562fba584358 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562fba584340 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562fba584150 <col:148> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x562fba584320 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x562fba5842f0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x562fba584210 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562fba5841c8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562fba5841b0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562fba584170 <col:166> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562fba5841f8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562fba5841e0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562fba584190 <col:184> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x562fba5842a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562fba584260 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562fba584230 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562fba5842d8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562fba5842c0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562fba584288 <col:212> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x562fba584a30 <line:806:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x562fba584488 <col:3> '_Bool' lvalue Var 0x562fba57d3a8 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x562fba584a18 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562fba5849e8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x562fba5849a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562fba584988 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562fba5844a8 <col:20> '_Bool' lvalue Var 0x562fba57dbd0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562fba5849d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562fba5849b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562fba5844c8 <col:36> '_Bool' lvalue Var 0x562fba57d3a8 'b$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x562fba584968 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562fba584938 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x562fba5846d8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562fba5845f8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562fba584520 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562fba584508 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562fba5844e8 <col:55> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562fba5845d8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562fba584570 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562fba584558 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562fba584538 <col:74> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x562fba5845c0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562fba5845a8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562fba584588 <col:93> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562fba5846b8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562fba584650 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562fba584638 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562fba584618 <col:112> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x562fba5846a0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562fba584688 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562fba584668 <col:131> '_Bool' lvalue Var 0x562fba57d3a8 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x562fba584920 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562fba584908 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562fba5846f8 <col:148> '_Bool' lvalue Var 0x562fba57d3a8 'b$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x562fba5848e8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x562fba5848b8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x562fba5847b8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562fba584770 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562fba584758 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562fba584718 <col:166> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562fba5847a0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562fba584788 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562fba584738 <col:184> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x562fba584888 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562fba584808 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562fba5847d8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562fba5848a0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x562fba584860 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562fba584830 <col:219> 'int' 0
|   |-BinaryOperator 0x562fba584aa8 <line:807:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562fba584a50 <col:3> 'int' lvalue Var 0x562fba57cb68 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x562fba584a90 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562fba584a70 <col:25> 'int' lvalue Var 0x562fba57cda8 'b' 'int'
|   |-BinaryOperator 0x562fba584bd8 <line:808:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x562fba584ac8 <col:3> 'int' lvalue Var 0x562fba57cda8 'b' 'int'
|   | `-ConditionalOperator 0x562fba584ba8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x562fba584b60 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562fba584b48 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562fba584ae8 <col:7> '_Bool' lvalue Var 0x562fba57ce40 'b$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x562fba584b78 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562fba584b08 <col:25> 'int' lvalue Var 0x562fba57cec0 'b$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x562fba584b90 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x562fba584b28 <col:37> 'int' lvalue Var 0x562fba57cda8 'b' 'int'
|   |-BinaryOperator 0x562fba584c70 <line:809:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x562fba584bf8 <col:3> '_Bool' lvalue Var 0x562fba57ce40 'b$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x562fba584c48 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562fba584c18 <col:28> 'int' 0
|   |-CallExpr 0x562fba584cc8 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562fba584cb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba584c90 <col:3> 'void ()' Function 0x562fba523410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562fba584d20 <line:811:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562fba584d08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba584ce8 <col:3> 'void ()' Function 0x562fba523350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562fba585020 <line:812:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562fba584d40 <col:3> 'int' lvalue Var 0x562fba57cda8 'b' 'int'
|   | `-ConditionalOperator 0x562fba584ff0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562fba584e00 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562fba584db8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562fba584da0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562fba584d60 <col:7> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562fba584de8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562fba584dd0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562fba584d80 <col:25> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x562fba584fc0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562fba584e20 <col:42> 'int' lvalue Var 0x562fba57d520 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x562fba584fa0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562fba584f70 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562fba584ee0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562fba584e98 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562fba584e80 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562fba584e40 <col:55> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562fba584ec8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562fba584eb0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562fba584e60 <col:73> '_Bool' lvalue Var 0x562fba57d3a8 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x562fba584f40 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562fba584f00 <col:90> 'int' lvalue Var 0x562fba57d618 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562fba584f58 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562fba584f20 <col:102> 'int' lvalue Var 0x562fba57cda8 'b' 'int'
|   |-BinaryOperator 0x562fba585228 <line:813:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562fba585040 <col:3> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562fba585210 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562fba5851e0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562fba585100 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562fba5850b8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562fba5850a0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562fba585060 <col:20> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562fba5850e8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562fba5850d0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562fba585080 <col:38> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x562fba585198 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562fba585150 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562fba585120 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562fba5851c8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562fba5851b0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562fba585178 <col:66> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562fba585510 <line:814:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562fba585248 <col:3> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562fba5854f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562fba5854c8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562fba5853e8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562fba585308 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562fba5852c0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562fba5852a8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562fba585268 <col:20> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562fba5852f0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562fba5852d8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562fba585288 <col:38> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x562fba5853c8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562fba585380 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562fba585368 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562fba585328 <col:56> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562fba5853b0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562fba585398 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562fba585348 <col:74> '_Bool' lvalue Var 0x562fba57d3a8 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x562fba585480 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562fba585438 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562fba585408 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562fba5854b0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562fba585498 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562fba585460 <col:102> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562fba585718 <line:815:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562fba585530 <col:3> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x562fba585700 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562fba5856d0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562fba5855f0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562fba5855a8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562fba585590 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562fba585550 <col:20> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562fba5855d8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562fba5855c0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562fba585570 <col:38> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x562fba585688 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562fba585640 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562fba585610 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562fba5856b8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562fba5856a0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562fba585668 <col:66> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x562fba585a00 <line:816:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562fba585738 <col:3> '_Bool' lvalue Var 0x562fba57d3a8 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x562fba5859e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562fba5859b8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562fba5858d8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562fba5857f8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562fba5857b0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562fba585798 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562fba585758 <col:20> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562fba5857e0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562fba5857c8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562fba585778 <col:38> '_Bool' lvalue Var 0x562fba57d150 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x562fba5858b8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562fba585870 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562fba585858 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562fba585818 <col:56> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562fba5858a0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562fba585888 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562fba585838 <col:74> '_Bool' lvalue Var 0x562fba57d3a8 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x562fba585970 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562fba585928 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562fba5858f8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562fba5859a0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562fba585988 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562fba585950 <col:102> '_Bool' lvalue Var 0x562fba57d3a8 'b$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x562fba585a58 <line:817:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562fba585a40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba585a20 <col:3> 'void ()' Function 0x562fba523410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562fba585ab0 <line:818:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562fba585a98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba585a78 <col:3> 'void ()' Function 0x562fba523350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562fba585b68 <line:819:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562fba585ad0 <col:3> 'int' lvalue Var 0x562fba57c6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562fba585b48 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562fba585b30 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562fba585af0 <col:22> 'int' lvalue Var 0x562fba57c6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562fba585b10 <col:41> 'int' 1
|   |-CallExpr 0x562fba585bc0 <line:820:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562fba585ba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562fba585b88 <col:3> 'void ()' Function 0x562fba523410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562fba585c38 <line:821:3, col:36>
|     `-CallExpr 0x562fba585c18 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562fba585c00 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562fba585be0 <col:10> 'void *(void)' Function 0x562fba522e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562fba585d98 prev 0x562fba57c430 <line:823:1, line:825:1> line:823:6 fence 'void ()'
| `-CompoundStmt 0x562fba585e38 <line:824:1, line:825:1>
|-FunctionDecl 0x562fba585e68 prev 0x562fba57c4f0 <line:826:1, line:828:1> line:826:6 isync 'void ()'
| `-CompoundStmt 0x562fba585f08 <line:827:1, line:828:1>
|-FunctionDecl 0x562fba585f38 prev 0x562fba57c5b0 <line:829:1, line:831:1> line:829:6 lwfence 'void ()'
| `-CompoundStmt 0x562fba585fd8 <line:830:1, line:831:1>
`-FunctionDecl 0x562fba586058 <line:832:1, line:858:1> line:832:5 main 'int ()'
  `-CompoundStmt 0x562fba588068 <line:833:1, line:858:1>
    |-DeclStmt 0x562fba586170 <line:834:3, col:17>
    | `-VarDecl 0x562fba586108 <col:3, col:13> col:13 used t971 'pthread_t':'unsigned long'
    |-CallExpr 0x562fba586378 <line:835:3, col:53> 'int'
    | |-ImplicitCastExpr 0x562fba586360 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562fba586188 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562fba5638f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562fba5861c8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562fba5861a8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562fba586108 't971' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562fba5863b8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562fba586240 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x562fba586218 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562fba5861e0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x562fba5863d0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562fba586260 <col:38> 'void *(void *)' Function 0x562fba57dce8 'P0' 'void *(void *)'
    | `-ParenExpr 0x562fba5862e0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x562fba5862b8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562fba586280 <col:51> 'int' 0
    |-DeclStmt 0x562fba586460 <line:836:3, col:17>
    | `-VarDecl 0x562fba5863f8 <col:3, col:13> col:13 used t972 'pthread_t':'unsigned long'
    |-CallExpr 0x562fba586608 <line:837:3, col:53> 'int'
    | |-ImplicitCastExpr 0x562fba5865f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562fba586478 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562fba5638f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562fba5864b8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562fba586498 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562fba5863f8 't972' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562fba586648 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562fba586530 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x562fba586508 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562fba5864d0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x562fba586660 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562fba586550 <col:38> 'void *(void *)' Function 0x562fba57f720 'P1' 'void *(void *)'
    | `-ParenExpr 0x562fba5865d0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x562fba5865a8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562fba586570 <col:51> 'int' 0
    |-DeclStmt 0x562fba5866f0 <line:838:3, col:17>
    | `-VarDecl 0x562fba586688 <col:3, col:13> col:13 used t973 'pthread_t':'unsigned long'
    |-CallExpr 0x562fba586898 <line:839:3, col:53> 'int'
    | |-ImplicitCastExpr 0x562fba586880 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562fba586708 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562fba5638f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562fba586748 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562fba586728 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562fba586688 't973' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562fba5868d8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562fba5867c0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x562fba586798 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562fba586760 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x562fba5868f0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562fba5867e0 <col:38> 'void *(void *)' Function 0x562fba580aa8 'P2' 'void *(void *)'
    | `-ParenExpr 0x562fba586860 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x562fba586838 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562fba586800 <col:51> 'int' 0
    |-DeclStmt 0x562fba586980 <line:840:3, col:17>
    | `-VarDecl 0x562fba586918 <col:3, col:13> col:13 used t974 'pthread_t':'unsigned long'
    |-CallExpr 0x562fba586b28 <line:841:3, col:53> 'int'
    | |-ImplicitCastExpr 0x562fba586b10 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562fba586998 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562fba5638f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562fba5869d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562fba5869b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562fba586918 't974' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562fba586b68 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562fba586a50 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x562fba586a28 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562fba5869f0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x562fba586b80 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562fba586a70 <col:38> 'void *(void *)' Function 0x562fba581e28 'P3' 'void *(void *)'
    | `-ParenExpr 0x562fba586af0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x562fba586ac8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562fba586a90 <col:51> 'int' 0
    |-CallExpr 0x562fba586bd0 <line:842:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562fba586bb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562fba586b98 <col:3> 'void ()' Function 0x562fba523350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562fba586ca0 <line:843:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x562fba586bf0 <col:3> '_Bool' lvalue Var 0x562fba57d708 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x562fba586c88 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x562fba586c68 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x562fba586c50 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x562fba586c10 <col:21> 'int' lvalue Var 0x562fba57c6e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x562fba586c30 <col:41> 'int' 4
    |-CallExpr 0x562fba586cf8 <line:844:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562fba586ce0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562fba586cc0 <col:3> 'void ()' Function 0x562fba523410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562fba586d70 <line:845:3, col:36> 'void'
    | |-ImplicitCastExpr 0x562fba586d58 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562fba586d18 <col:3> 'void (int)' Function 0x562fba522ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x562fba586db0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x562fba586d98 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x562fba586d38 <col:21> '_Bool' lvalue Var 0x562fba57d708 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x562fba586e00 <line:846:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562fba586de8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562fba586dc8 <col:3> 'void ()' Function 0x562fba523350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562fba5870f8 <line:847:3, col:103> 'int' '='
    | |-DeclRefExpr 0x562fba586e20 <col:3> 'int' lvalue Var 0x562fba57cda8 'b' 'int'
    | `-ConditionalOperator 0x562fba5870c8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x562fba586ee0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x562fba586e98 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x562fba586e80 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x562fba586e40 <col:7> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x562fba586ec8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x562fba586eb0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x562fba586e60 <col:25> '_Bool' lvalue Var 0x562fba57cf70 'b$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x562fba5870b0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x562fba586f00 <col:42> 'int' lvalue Var 0x562fba57d520 'b$w_buff0' 'int'
    |   `-ParenExpr 0x562fba587090 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x562fba587060 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x562fba586fc0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x562fba586f78 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x562fba586f60 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x562fba586f20 <col:55> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x562fba586fa8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x562fba586f90 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x562fba586f40 <col:73> '_Bool' lvalue Var 0x562fba57d1c8 'b$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x562fba587030 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x562fba586fe0 <col:90> 'int' lvalue Var 0x562fba57d618 'b$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x562fba587048 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x562fba587010 <col:102> 'int' lvalue Var 0x562fba57cda8 'b' 'int'
    |-BinaryOperator 0x562fba587300 <line:848:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x562fba587118 <col:3> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x562fba5872e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562fba5872b8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x562fba5871d8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x562fba587190 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x562fba587178 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x562fba587138 <col:20> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x562fba5871c0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x562fba5871a8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x562fba587158 <col:38> '_Bool' lvalue Var 0x562fba57cf70 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562fba587270 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562fba587228 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562fba5871f8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x562fba5872a0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562fba587288 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562fba587250 <col:66> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
    |-BinaryOperator 0x562fba5875e8 <line:849:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x562fba587320 <col:3> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x562fba5875d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562fba5875a0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x562fba5874c0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x562fba5873e0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x562fba587398 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x562fba587380 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x562fba587340 <col:20> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x562fba5873c8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x562fba5873b0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x562fba587360 <col:38> '_Bool' lvalue Var 0x562fba57cf70 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x562fba5874a0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x562fba587458 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x562fba587440 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x562fba587400 <col:56> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x562fba587488 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x562fba587470 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x562fba587420 <col:74> '_Bool' lvalue Var 0x562fba57d1c8 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562fba587558 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562fba587510 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562fba5874e0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x562fba587588 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562fba587570 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562fba587538 <col:102> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
    |-BinaryOperator 0x562fba5877f0 <line:850:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x562fba587608 <col:3> '_Bool' lvalue Var 0x562fba57cf70 'b$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562fba5877d8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562fba5877a8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x562fba5876c8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x562fba587680 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x562fba587668 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x562fba587628 <col:20> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x562fba5876b0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x562fba587698 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x562fba587648 <col:38> '_Bool' lvalue Var 0x562fba57cf70 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562fba587760 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562fba587718 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562fba5876e8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x562fba587790 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562fba587778 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562fba587740 <col:66> '_Bool' lvalue Var 0x562fba57cf70 'b$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x562fba587ad8 <line:851:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x562fba587810 <col:3> '_Bool' lvalue Var 0x562fba57d1c8 'b$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562fba587ac0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562fba587a90 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x562fba5879b0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x562fba5878d0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x562fba587888 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x562fba587870 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x562fba587830 <col:20> '_Bool' lvalue Var 0x562fba57d598 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x562fba5878b8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x562fba5878a0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x562fba587850 <col:38> '_Bool' lvalue Var 0x562fba57cf70 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x562fba587990 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x562fba587948 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x562fba587930 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x562fba5878f0 <col:56> '_Bool' lvalue Var 0x562fba57d690 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x562fba587978 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x562fba587960 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x562fba587910 <col:74> '_Bool' lvalue Var 0x562fba57d1c8 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562fba587a48 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562fba587a00 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562fba5879d0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x562fba587a78 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562fba587a60 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562fba587a28 <col:102> '_Bool' lvalue Var 0x562fba57d1c8 'b$r_buff1_thd0' '_Bool'
    |-CallExpr 0x562fba587b30 <line:852:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562fba587b18 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562fba587af8 <col:3> 'void ()' Function 0x562fba523410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562fba587b88 <line:853:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562fba587b70 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562fba587b50 <col:3> 'void ()' Function 0x562fba523350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562fba587ef0 <line:854:3, col:141> '_Bool' '='
    | |-DeclRefExpr 0x562fba587ba8 <col:3> '_Bool' lvalue Var 0x562fba57d780 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x562fba587ed8 <col:21, col:141> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x562fba587ec0 <col:21, col:141> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x562fba587ea0 <col:22, col:141> 'int'
    |       `-BinaryOperator 0x562fba587e80 <col:23, col:140> 'int' '&&'
    |         |-BinaryOperator 0x562fba587de8 <col:23, col:112> 'int' '&&'
    |         | |-BinaryOperator 0x562fba587d50 <col:23, col:84> 'int' '&&'
    |         | | |-BinaryOperator 0x562fba587cb8 <col:23, col:56> 'int' '&&'
    |         | | | |-BinaryOperator 0x562fba587c20 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x562fba587c08 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x562fba587bc8 <col:23> 'int' lvalue Var 0x562fba57d880 'x' 'int'
    |         | | | | `-IntegerLiteral 0x562fba587be8 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x562fba587c98 <col:33, col:56> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x562fba587c80 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x562fba587c40 <col:33> 'int' lvalue Var 0x562fba57c808 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x562fba587c60 <col:56> 'int' 0
    |         | | `-BinaryOperator 0x562fba587d30 <col:61, col:84> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x562fba587d18 <col:61> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x562fba587cd8 <col:61> 'int' lvalue Var 0x562fba57c928 '__unbuffered_p2_EAX' 'int'
    |         | |   `-IntegerLiteral 0x562fba587cf8 <col:84> 'int' 0
    |         | `-BinaryOperator 0x562fba587dc8 <col:89, col:112> 'int' '=='
    |         |   |-ImplicitCastExpr 0x562fba587db0 <col:89> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x562fba587d70 <col:89> 'int' lvalue Var 0x562fba57ca48 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x562fba587d90 <col:112> 'int' 1
    |         `-BinaryOperator 0x562fba587e60 <col:117, col:140> 'int' '=='
    |           |-ImplicitCastExpr 0x562fba587e48 <col:117> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x562fba587e08 <col:117> 'int' lvalue Var 0x562fba57cb68 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x562fba587e28 <col:140> 'int' 0
    |-CallExpr 0x562fba587f48 <line:855:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562fba587f30 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562fba587f10 <col:3> 'void ()' Function 0x562fba523410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562fba587fc0 <line:856:3, col:36> 'void'
    | |-ImplicitCastExpr 0x562fba587fa8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562fba587f68 <col:3> 'void (int)' Function 0x562fba5230d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x562fba588020 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x562fba587fe8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x562fba587f88 <col:21> '_Bool' lvalue Var 0x562fba57d780 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x562fba588058 <line:857:3, col:10>
      `-IntegerLiteral 0x562fba588038 <col:10> 'int' 0
