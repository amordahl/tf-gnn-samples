TranslationUnitDecl 0x559755755dd8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x559755756698 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x559755756370 '__int128'
|-TypedefDecl 0x559755756708 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x559755756390 'unsigned __int128'
|-TypedefDecl 0x559755756a10 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5597557567e0 'struct __NSConstantString_tag'
|   `-Record 0x559755756760 '__NSConstantString_tag'
|-TypedefDecl 0x559755756ab8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x559755756a70 'char *'
|   `-BuiltinType 0x559755755e70 'char'
|-TypedefDecl 0x559755795b80 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x559755756d50 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x559755756b90 'struct __va_list_tag'
|     `-Record 0x559755756b10 '__va_list_tag'
|-FunctionDecl 0x559755795c60 <array-examples/standard_strcpy_false-valid-deref_ground.i:1:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x559755795e30 <line:2:1, col:79> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x559755795d60 <col:24, col:28> col:28 used cond 'int'
| `-CompoundStmt 0x559755796070 <col:34, col:79>
|   `-IfStmt 0x559755796058 <col:36, col:77>
|     |-UnaryOperator 0x559755795f30 <col:39, col:45> 'int' prefix '!' cannot overflow
|     | `-ImplicitCastExpr 0x559755795f18 <col:40, col:45> 'int' <LValueToRValue>
|     |   `-ParenExpr 0x559755795ef8 <col:40, col:45> 'int' lvalue
|     |     `-DeclRefExpr 0x559755795ed8 <col:41> 'int' lvalue ParmVar 0x559755795d60 'cond' 'int'
|     `-CompoundStmt 0x559755796040 <col:48, col:77>
|       `-LabelStmt 0x559755796028 <col:50, col:74> 'ERROR'
|         `-CallExpr 0x559755795fb8 <col:57, col:74> 'void'
|           `-ImplicitCastExpr 0x559755795fa0 <col:57> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|             `-DeclRefExpr 0x559755795f48 <col:57> 'void () __attribute__((noreturn))' Function 0x559755795c60 '__VERIFIER_error' 'void () __attribute__((noreturn))'
`-FunctionDecl 0x5597557960e8 <line:3:1, line:16:1> line:3:5 main 'int ()'
  `-CompoundStmt 0x5597557bada8 <col:13, line:16:1>
    |-DeclStmt 0x559755796290 <line:4:3, col:18>
    | `-VarDecl 0x559755796228 <col:3, col:17> col:7 used src 'int [100000]'
    |-DeclStmt 0x559755796370 <line:5:3, col:18>
    | `-VarDecl 0x559755796308 <col:3, col:17> col:7 used dst 'int [100000]'
    |-DeclStmt 0x559755796428 <line:6:3, col:12>
    | `-VarDecl 0x5597557963a0 <col:3, col:11> col:7 used i 'int' cinit
    |   `-IntegerLiteral 0x559755796408 <col:11> 'int' 0
    |-WhileStmt 0x559755796788 <line:7:3, line:10:3>
    | |-BinaryOperator 0x559755796538 <line:7:11, col:21> 'int' '!='
    | | |-ImplicitCastExpr 0x559755796520 <col:11, col:16> 'int' <LValueToRValue>
    | | | `-ArraySubscriptExpr 0x5597557964e0 <col:11, col:16> 'int' lvalue
    | | |   |-ImplicitCastExpr 0x5597557964b0 <col:11> 'int *' <ArrayToPointerDecay>
    | | |   | `-DeclRefExpr 0x559755796440 <col:11> 'int [100000]' lvalue Var 0x559755796228 'src' 'int [100000]'
    | | |   `-ImplicitCastExpr 0x5597557964c8 <col:15> 'int' <LValueToRValue>
    | | |     `-DeclRefExpr 0x559755796460 <col:15> 'int' lvalue Var 0x5597557963a0 'i' 'int'
    | | `-IntegerLiteral 0x559755796500 <col:21> 'int' 0
    | `-CompoundStmt 0x559755796768 <col:25, line:10:3>
    |   |-BinaryOperator 0x559755796690 <line:8:5, col:19> 'int' '='
    |   | |-ArraySubscriptExpr 0x5597557965c8 <col:5, col:10> 'int' lvalue
    |   | | |-ImplicitCastExpr 0x559755796598 <col:5> 'int *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x559755796558 <col:5> 'int [100000]' lvalue Var 0x559755796308 'dst' 'int [100000]'
    |   | | `-ImplicitCastExpr 0x5597557965b0 <col:9> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x559755796578 <col:9> 'int' lvalue Var 0x5597557963a0 'i' 'int'
    |   | `-ImplicitCastExpr 0x559755796678 <col:14, col:19> 'int' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x559755796658 <col:14, col:19> 'int' lvalue
    |   |     |-ImplicitCastExpr 0x559755796628 <col:14> 'int *' <ArrayToPointerDecay>
    |   |     | `-DeclRefExpr 0x5597557965e8 <col:14> 'int [100000]' lvalue Var 0x559755796228 'src' 'int [100000]'
    |   |     `-ImplicitCastExpr 0x559755796640 <col:18> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x559755796608 <col:18> 'int' lvalue Var 0x5597557963a0 'i' 'int'
    |   `-BinaryOperator 0x559755796748 <line:9:5, col:13> 'int' '='
    |     |-DeclRefExpr 0x5597557966b0 <col:5> 'int' lvalue Var 0x5597557963a0 'i' 'int'
    |     `-BinaryOperator 0x559755796728 <col:9, col:13> 'int' '+'
    |       |-ImplicitCastExpr 0x559755796710 <col:9> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5597557966d0 <col:9> 'int' lvalue Var 0x5597557963a0 'i' 'int'
    |       `-IntegerLiteral 0x5597557966f0 <col:13> 'int' 1
    |-DeclStmt 0x559755796820 <line:11:3, col:8>
    | `-VarDecl 0x5597557967b8 <col:3, col:7> col:7 used x 'int'
    |-ForStmt 0x5597557bad40 <line:12:3, line:14:3>
    | |-BinaryOperator 0x559755796878 <line:12:9, col:13> 'int' '='
    | | |-DeclRefExpr 0x559755796838 <col:9> 'int' lvalue Var 0x5597557967b8 'x' 'int'
    | | `-IntegerLiteral 0x559755796858 <col:13> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x559755796908 <col:17, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x5597557968d8 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x559755796898 <col:17> 'int' lvalue Var 0x5597557967b8 'x' 'int'
    | | `-ImplicitCastExpr 0x5597557968f0 <col:21> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x5597557968b8 <col:21> 'int' lvalue Var 0x5597557963a0 'i' 'int'
    | |-UnaryOperator 0x559755796948 <col:25, col:26> 'int' postfix '++'
    | | `-DeclRefExpr 0x559755796928 <col:25> 'int' lvalue Var 0x5597557967b8 'x' 'int'
    | `-CompoundStmt 0x559755796b60 <col:31, line:14:3>
    |   `-CallExpr 0x559755796b38 <line:13:5, col:41> 'void'
    |     |-ImplicitCastExpr 0x559755796b20 <col:5> 'void (*)(int)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x559755796960 <col:5> 'void (int)' Function 0x559755795e30 '__VERIFIER_assert' 'void (int)'
    |     `-BinaryOperator 0x559755796ad0 <col:24, col:39> 'int' '=='
    |       |-ImplicitCastExpr 0x559755796aa0 <col:24, col:29> 'int' <LValueToRValue>
    |       | `-ArraySubscriptExpr 0x5597557969f0 <col:24, col:29> 'int' lvalue
    |       |   |-ImplicitCastExpr 0x5597557969c0 <col:24> 'int *' <ArrayToPointerDecay>
    |       |   | `-DeclRefExpr 0x559755796980 <col:24> 'int [100000]' lvalue Var 0x559755796308 'dst' 'int [100000]'
    |       |   `-ImplicitCastExpr 0x5597557969d8 <col:28> 'int' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5597557969a0 <col:28> 'int' lvalue Var 0x5597557967b8 'x' 'int'
    |       `-ImplicitCastExpr 0x559755796ab8 <col:34, col:39> 'int' <LValueToRValue>
    |         `-ArraySubscriptExpr 0x559755796a80 <col:34, col:39> 'int' lvalue
    |           |-ImplicitCastExpr 0x559755796a50 <col:34> 'int *' <ArrayToPointerDecay>
    |           | `-DeclRefExpr 0x559755796a10 <col:34> 'int [100000]' lvalue Var 0x559755796228 'src' 'int [100000]'
    |           `-ImplicitCastExpr 0x559755796a68 <col:38> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x559755796a30 <col:38> 'int' lvalue Var 0x5597557967b8 'x' 'int'
    `-ReturnStmt 0x5597557bad98 <line:15:3, col:10>
      `-IntegerLiteral 0x5597557bad78 <col:10> 'int' 0
