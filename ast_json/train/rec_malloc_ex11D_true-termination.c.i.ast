TranslationUnitDecl 0x5615b5271da8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5615b5272668 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5615b5272340 '__int128'
|-TypedefDecl 0x5615b52726d8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5615b5272360 'unsigned __int128'
|-TypedefDecl 0x5615b52729e0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5615b52727b0 'struct __NSConstantString_tag'
|   `-Record 0x5615b5272730 '__NSConstantString_tag'
|-TypedefDecl 0x5615b5272a88 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5615b5272a40 'char *'
|   `-BuiltinType 0x5615b5271e40 'char'
|-TypedefDecl 0x5615b52b1c40 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5615b5272d20 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5615b5272b60 'struct __va_list_tag'
|     `-Record 0x5615b5272ae0 '__va_list_tag'
|-TypedefDecl 0x5615b52b1cb0 <termination-recursive-malloc/rec_malloc_ex11D_true-termination.c.i:1:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5615b5271f60 'unsigned long'
|-FunctionDecl 0x5615b52b1ec0 <line:3:35> col:35 implicit used malloc 'void *(unsigned long)' extern
| `-ParmVarDecl 0x5615b52b1f60 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x5615b52b1fd0 prev 0x5615b52b1ec0 <col:1, col:56> col:35 used malloc 'void *(unsigned long)'
| `-ParmVarDecl 0x5615b52b1d48 <col:43, col:50> col:50 __size 'size_t':'unsigned long'
|-FunctionDecl 0x5615b52b21c8 <line:4:1, col:45> col:33 used free 'void (void *) __attribute__((cdecl))':'void (void *)'
| `-ParmVarDecl 0x5615b52b2090 <col:39, col:44> col:45 'void *'
|-FunctionDecl 0x5615b52b2388 <line:6:1, col:38> col:12 used __VERIFIER_nondet_int 'int (void)' extern
|-FunctionDecl 0x5615b52b2548 <line:8:1, line:24:1> line:8:5 used rec 'int (int *)'
| |-ParmVarDecl 0x5615b52b2478 <col:9, col:14> col:14 used op 'int *'
| `-CompoundStmt 0x5615b52d7f68 <col:18, line:24:1>
|   |-IfStmt 0x5615b52b2800 <line:9:2, line:12:2>
|   | |-BinaryOperator 0x5615b52b2678 <line:9:5, col:11> 'int' '<'
|   | | |-ImplicitCastExpr 0x5615b52b2660 <col:5, col:6> 'int' <LValueToRValue>
|   | | | `-UnaryOperator 0x5615b52b2628 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
|   | | |   `-ImplicitCastExpr 0x5615b52b2610 <col:6> 'int *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x5615b52b25f0 <col:6> 'int *' lvalue ParmVar 0x5615b52b2478 'op' 'int *'
|   | | `-IntegerLiteral 0x5615b52b2640 <col:11> 'int' 0
|   | `-CompoundStmt 0x5615b52b27e0 <col:14, line:12:2>
|   |   |-DeclStmt 0x5615b52b2780 <line:10:3, col:14>
|   |   | `-VarDecl 0x5615b52b26b0 <col:3, col:12> col:7 used r 'int' cinit
|   |   |   `-ImplicitCastExpr 0x5615b52b2768 <col:11, col:12> 'int' <LValueToRValue>
|   |   |     `-UnaryOperator 0x5615b52b2750 <col:11, col:12> 'int' lvalue prefix '*' cannot overflow
|   |   |       `-ImplicitCastExpr 0x5615b52b2738 <col:12> 'int *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x5615b52b2718 <col:12> 'int *' lvalue ParmVar 0x5615b52b2478 'op' 'int *'
|   |   `-ReturnStmt 0x5615b52b27d0 <line:11:3, col:10>
|   |     `-ImplicitCastExpr 0x5615b52b27b8 <col:10> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x5615b52b2798 <col:10> 'int' lvalue Var 0x5615b52b26b0 'r' 'int'
|   |-DeclStmt 0x5615b52b2978 <line:13:2, col:31>
|   | `-VarDecl 0x5615b52b2830 <col:2, col:30> col:7 used ip 'int *' cinit
|   |   `-ImplicitCastExpr 0x5615b52b2960 <col:12, col:30> 'int *' <BitCast>
|   |     `-CallExpr 0x5615b52b2938 <col:12, col:30> 'void *'
|   |       |-ImplicitCastExpr 0x5615b52b2920 <col:12> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x5615b52b2898 <col:12> 'void *(unsigned long)' Function 0x5615b52b1fd0 'malloc' 'void *(unsigned long)'
|   |       `-UnaryExprOrTypeTraitExpr 0x5615b52b28d0 <col:19, col:29> 'unsigned long' sizeof 'int'
|   |-BinaryOperator 0x5615b52b2aa8 <line:15:2, col:16> 'int' '='
|   | |-UnaryOperator 0x5615b52b29c8 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x5615b52b29b0 <col:3> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5615b52b2990 <col:3> 'int *' lvalue Var 0x5615b52b2830 'ip' 'int *'
|   | `-BinaryOperator 0x5615b52b2a88 <col:8, col:16> 'int' '-'
|   |   |-ImplicitCastExpr 0x5615b52b2a70 <col:8, col:12> 'int' <LValueToRValue>
|   |   | `-ParenExpr 0x5615b52b2a30 <col:8, col:12> 'int' lvalue
|   |   |   `-UnaryOperator 0x5615b52b2a18 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5615b52b2a00 <col:10> 'int *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5615b52b29e0 <col:10> 'int *' lvalue ParmVar 0x5615b52b2478 'op' 'int *'
|   |   `-IntegerLiteral 0x5615b52b2a50 <col:16> 'int' 1
|   |-DeclStmt 0x5615b52b2c18 <line:17:2, col:19>
|   | `-VarDecl 0x5615b52b2ae0 <col:2, col:18> col:6 used res 'int' cinit
|   |   `-CallExpr 0x5615b52b2bd8 <col:12, col:18> 'int'
|   |     |-ImplicitCastExpr 0x5615b52b2bc0 <col:12> 'int (*)(int *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5615b52b2b48 <col:12> 'int (int *)' Function 0x5615b52b2548 'rec' 'int (int *)'
|   |     `-ImplicitCastExpr 0x5615b52b2c00 <col:16> 'int *' <LValueToRValue>
|   |       `-DeclRefExpr 0x5615b52b2b68 <col:16> 'int *' lvalue Var 0x5615b52b2830 'ip' 'int *'
|   |-CallExpr 0x5615b52d7ec8 <line:19:2, col:9> 'void'
|   | |-ImplicitCastExpr 0x5615b52d7eb0 <col:2> 'void (*)(void *) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5615b52d7e10 <col:2> 'void (void *) __attribute__((cdecl))':'void (void *)' Function 0x5615b52b21c8 'free' 'void (void *) __attribute__((cdecl))':'void (void *)'
|   | `-ImplicitCastExpr 0x5615b52d7f08 <col:7> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x5615b52d7ef0 <col:7> 'int *' <LValueToRValue>
|   |     `-DeclRefExpr 0x5615b52d7e30 <col:7> 'int *' lvalue Var 0x5615b52b2830 'ip' 'int *'
|   `-ReturnStmt 0x5615b52d7f58 <line:21:2, col:9>
|     `-ImplicitCastExpr 0x5615b52d7f40 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x5615b52d7f20 <col:9> 'int' lvalue Var 0x5615b52b2ae0 'res' 'int'
`-FunctionDecl 0x5615b52d8008 <line:26:1, line:43:1> line:26:5 main 'int ()'
  `-CompoundStmt 0x5615b52d89b8 <col:12, line:43:1>
    |-DeclStmt 0x5615b52d81d8 <line:27:2, col:31>
    | `-VarDecl 0x5615b52d80c0 <col:2, col:30> col:7 used qq 'int *' cinit
    |   `-ImplicitCastExpr 0x5615b52d81c0 <col:12, col:30> 'int *' <BitCast>
    |     `-CallExpr 0x5615b52d8198 <col:12, col:30> 'void *'
    |       |-ImplicitCastExpr 0x5615b52d8180 <col:12> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x5615b52d8128 <col:12> 'void *(unsigned long)' Function 0x5615b52b1fd0 'malloc' 'void *(unsigned long)'
    |       `-UnaryExprOrTypeTraitExpr 0x5615b52d8160 <col:19, col:29> 'unsigned long' sizeof 'int'
    |-BinaryOperator 0x5615b52d82c8 <line:28:2, col:30> 'int' '='
    | |-UnaryOperator 0x5615b52d8228 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x5615b52d8210 <col:3> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x5615b52d81f0 <col:3> 'int *' lvalue Var 0x5615b52d80c0 'qq' 'int *'
    | `-CallExpr 0x5615b52d82a8 <col:8, col:30> 'int'
    |   `-ImplicitCastExpr 0x5615b52d8290 <col:8> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x5615b52d8240 <col:8> 'int (void)' Function 0x5615b52b2388 '__VERIFIER_nondet_int' 'int (void)'
    |-WhileStmt 0x5615b52d88f0 <line:30:2, line:39:2>
    | |-BinaryOperator 0x5615b52d8370 <line:30:9, col:15> 'int' '>'
    | | |-ImplicitCastExpr 0x5615b52d8358 <col:9, col:10> 'int' <LValueToRValue>
    | | | `-UnaryOperator 0x5615b52d8320 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
    | | |   `-ImplicitCastExpr 0x5615b52d8308 <col:10> 'int *' <LValueToRValue>
    | | |     `-DeclRefExpr 0x5615b52d82e8 <col:10> 'int *' lvalue Var 0x5615b52d80c0 'qq' 'int *'
    | | `-IntegerLiteral 0x5615b52d8338 <col:15> 'int' 1
    | `-CompoundStmt 0x5615b52d88c0 <col:18, line:39:2>
    |   |-DeclStmt 0x5615b52d84c0 <line:31:3, col:32>
    |   | `-VarDecl 0x5615b52d83a8 <col:3, col:31> col:8 used pp 'int *' cinit
    |   |   `-ImplicitCastExpr 0x5615b52d84a8 <col:13, col:31> 'int *' <BitCast>
    |   |     `-CallExpr 0x5615b52d8480 <col:13, col:31> 'void *'
    |   |       |-ImplicitCastExpr 0x5615b52d8468 <col:13> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x5615b52d8410 <col:13> 'void *(unsigned long)' Function 0x5615b52b1fd0 'malloc' 'void *(unsigned long)'
    |   |       `-UnaryExprOrTypeTraitExpr 0x5615b52d8448 <col:20, col:30> 'unsigned long' sizeof 'int'
    |   |-BinaryOperator 0x5615b52d8580 <line:32:3, col:31> 'int' '='
    |   | |-UnaryOperator 0x5615b52d8510 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x5615b52d84f8 <col:4> 'int *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5615b52d84d8 <col:4> 'int *' lvalue Var 0x5615b52d83a8 'pp' 'int *'
    |   | `-CallExpr 0x5615b52d8560 <col:9, col:31> 'int'
    |   |   `-ImplicitCastExpr 0x5615b52d8548 <col:9> 'int (*)(void)' <FunctionToPointerDecay>
    |   |     `-DeclRefExpr 0x5615b52d8528 <col:9> 'int (void)' Function 0x5615b52b2388 '__VERIFIER_nondet_int' 'int (void)'
    |   |-IfStmt 0x5615b52d8690 <line:34:3, line:36:3>
    |   | |-BinaryOperator 0x5615b52d8628 <line:34:6, col:12> 'int' '<'
    |   | | |-ImplicitCastExpr 0x5615b52d8610 <col:6, col:7> 'int' <LValueToRValue>
    |   | | | `-UnaryOperator 0x5615b52d85d8 <col:6, col:7> 'int' lvalue prefix '*' cannot overflow
    |   | | |   `-ImplicitCastExpr 0x5615b52d85c0 <col:7> 'int *' <LValueToRValue>
    |   | | |     `-DeclRefExpr 0x5615b52d85a0 <col:7> 'int *' lvalue Var 0x5615b52d83a8 'pp' 'int *'
    |   | | `-IntegerLiteral 0x5615b52d85f0 <col:12> 'int' 0
    |   | `-CompoundStmt 0x5615b52d8678 <col:15, line:36:3>
    |   |   `-ReturnStmt 0x5615b52d8668 <line:35:4, col:11>
    |   |     `-IntegerLiteral 0x5615b52d8648 <col:11> 'int' 0
    |   `-CompoundAssignOperator 0x5615b52d8890 <line:38:3, col:33> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-UnaryOperator 0x5615b52d86e0 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    |     | `-ImplicitCastExpr 0x5615b52d86c8 <col:4> 'int *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5615b52d86a8 <col:4> 'int *' lvalue Var 0x5615b52d80c0 'qq' 'int *'
    |     `-ParenExpr 0x5615b52d8870 <col:10, col:33> 'int'
    |       `-ConditionalOperator 0x5615b52d8840 <col:11, col:32> 'int'
    |         |-BinaryOperator 0x5615b52d87c8 <col:11, col:23> 'int' '=='
    |         | |-CallExpr 0x5615b52d8750 <col:11, col:17> 'int'
    |         | | |-ImplicitCastExpr 0x5615b52d8738 <col:11> 'int (*)(int *)' <FunctionToPointerDecay>
    |         | | | `-DeclRefExpr 0x5615b52d86f8 <col:11> 'int (int *)' Function 0x5615b52b2548 'rec' 'int (int *)'
    |         | | `-ImplicitCastExpr 0x5615b52d8778 <col:15> 'int *' <LValueToRValue>
    |         | |   `-DeclRefExpr 0x5615b52d8718 <col:15> 'int *' lvalue Var 0x5615b52d83a8 'pp' 'int *'
    |         | `-UnaryOperator 0x5615b52d87b0 <col:22, col:23> 'int' prefix '-'
    |         |   `-IntegerLiteral 0x5615b52d8790 <col:23> 'int' 1
    |         |-UnaryOperator 0x5615b52d8808 <col:27, col:28> 'int' prefix '-'
    |         | `-IntegerLiteral 0x5615b52d87e8 <col:28> 'int' 1
    |         `-IntegerLiteral 0x5615b52d8820 <col:32> 'int' 1
    `-CallExpr 0x5615b52d8960 <line:41:2, col:9> 'void'
      |-ImplicitCastExpr 0x5615b52d8948 <col:2> 'void (*)(void *) __attribute__((cdecl))' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x5615b52d8908 <col:2> 'void (void *) __attribute__((cdecl))':'void (void *)' Function 0x5615b52b21c8 'free' 'void (void *) __attribute__((cdecl))':'void (void *)'
      `-ImplicitCastExpr 0x5615b52d89a0 <col:7> 'void *' <BitCast>
        `-ImplicitCastExpr 0x5615b52d8988 <col:7> 'int *' <LValueToRValue>
          `-DeclRefExpr 0x5615b52d8928 <col:7> 'int *' lvalue Var 0x5615b52d80c0 'qq' 'int *'
