TranslationUnitDecl 0x564abe166f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x564abe167848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x564abe167520 '__int128'
|-TypedefDecl 0x564abe1678b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x564abe167540 'unsigned __int128'
|-TypedefDecl 0x564abe167bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x564abe167990 'struct __NSConstantString_tag'
|   `-Record 0x564abe167910 '__NSConstantString_tag'
|-TypedefDecl 0x564abe167c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x564abe167c20 'char *'
|   `-BuiltinType 0x564abe167020 'char'
|-TypedefDecl 0x564abe1a6b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x564abe167f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x564abe167d40 'struct __va_list_tag'
|     `-Record 0x564abe167cc0 '__va_list_tag'
|-FunctionDecl 0x564abe1a6ca0 <pthread-wmm/safe030_rmo.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x564abe1a6bd0 <col:31> col:34 'int'
|-FunctionDecl 0x564abe1a6e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x564abe1a6f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x564abe1a70d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x564abe1a7048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x564abe1a7308 <col:40, col:99>
|   |-IfStmt 0x564abe1a72d8 <col:42, col:88>
|   | |-UnaryOperator 0x564abe1a71b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x564abe1a71a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x564abe1a7180 <col:47> 'int' lvalue ParmVar 0x564abe1a7048 'expression' 'int'
|   | `-CompoundStmt 0x564abe1a72c0 <col:59, col:88>
|   |   `-LabelStmt 0x564abe1a72a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x564abe1a7238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x564abe1a7220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x564abe1a71d0 <col:68> 'void () __attribute__((noreturn))' Function 0x564abe1a6f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x564abe1a72f0 <col:89>
|   `-ReturnStmt 0x564abe1a72f8 <col:91>
|-FunctionDecl 0x564abe1a7350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x564abe1a7410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x564abe1a7790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564abe1a74c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x564abe1a7548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x564abe1a75c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564abe1a7648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x564abe1a7850 <line:10:22>
|-FunctionDecl 0x564abe1cd8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564abe1a78c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x564abe1a7940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x564abe1a79c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564abe1a7a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x564abe1cd960 <line:13:22>
|-FunctionDecl 0x564abe1cdc10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564abe1cd9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x564abe1cda50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x564abe1cdad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x564abe1cdcc8 <line:15:22>
|-TypedefDecl 0x564abe1cdd38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x564abe1670e0 'unsigned char'
|-TypedefDecl 0x564abe1cdda8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x564abe167100 'unsigned short'
|-TypedefDecl 0x564abe1cde18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x564abe167120 'unsigned int'
|-TypedefDecl 0x564abe1cde88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x564abe167140 'unsigned long'
|-TypedefDecl 0x564abe1cdef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x564abe167040 'signed char'
|-TypedefDecl 0x564abe1cdf68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x564abe1670e0 'unsigned char'
|-TypedefDecl 0x564abe1cdfd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x564abe167060 'short'
|-TypedefDecl 0x564abe1ce048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x564abe167100 'unsigned short'
|-TypedefDecl 0x564abe1ce0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x564abe167080 'int'
|-TypedefDecl 0x564abe1ce128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x564abe167120 'unsigned int'
|-TypedefDecl 0x564abe1ce198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x564abe1670a0 'long'
|-TypedefDecl 0x564abe1ce208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x564abe167140 'unsigned long'
|-TypedefDecl 0x564abe1ce278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x564abe1670a0 'long'
|-TypedefDecl 0x564abe1ce2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x564abe167140 'unsigned long'
|-TypedefDecl 0x564abe1ce358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x564abe167140 'unsigned long'
|-TypedefDecl 0x564abe1ce3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x564abe167120 'unsigned int'
|-TypedefDecl 0x564abe1ce438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x564abe167120 'unsigned int'
|-TypedefDecl 0x564abe1ce4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x564abe167140 'unsigned long'
|-TypedefDecl 0x564abe1ce518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x564abe167140 'unsigned long'
|-TypedefDecl 0x564abe1ce588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x564abe167120 'unsigned int'
|-TypedefDecl 0x564abe1ce5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x564abe167140 'unsigned long'
|-TypedefDecl 0x564abe1ce668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x564abe1670a0 'long'
|-TypedefDecl 0x564abe1ce6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x564abe1670a0 'long'
|-TypedefDecl 0x564abe1ce748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x564abe167080 'int'
|-RecordDecl 0x564abe1ce7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x564abe1ce918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x564abe1ce9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x564abe1ce970 'struct __fsid_t' sugar
|   `-RecordType 0x564abe1ce820 '__fsid_t'
|     `-Record 0x564abe1ce7a0 ''
|-TypedefDecl 0x564abe1cea58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x564abe1670a0 'long'
|-TypedefDecl 0x564abe1ceac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x564abe167140 'unsigned long'
|-TypedefDecl 0x564abe1ceb38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x564abe167140 'unsigned long'
|-TypedefDecl 0x564abe1ceba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x564abe167120 'unsigned int'
|-TypedefDecl 0x564abe1cec18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x564abe1670a0 'long'
|-TypedefDecl 0x564abe1cec88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x564abe167120 'unsigned int'
|-TypedefDecl 0x564abe1cecf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x564abe1670a0 'long'
|-TypedefDecl 0x564abe1ced68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x564abe167080 'int'
|-TypedefDecl 0x564abe1cedd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x564abe167080 'int'
|-TypedefDecl 0x564abe1cee48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x564abe167080 'int'
|-TypedefDecl 0x564abe1ceeb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x564abe1677a0 'void *'
|   `-BuiltinType 0x564abe166fe0 'void'
|-TypedefDecl 0x564abe1cef28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x564abe1670a0 'long'
|-TypedefDecl 0x564abe1cef98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x564abe1670a0 'long'
|-TypedefDecl 0x564abe1cf008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x564abe1670a0 'long'
|-TypedefDecl 0x564abe1cf078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x564abe167140 'unsigned long'
|-TypedefDecl 0x564abe1cf0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x564abe167140 'unsigned long'
|-TypedefDecl 0x564abe1cf158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x564abe167140 'unsigned long'
|-TypedefDecl 0x564abe1cf1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x564abe167140 'unsigned long'
|-TypedefDecl 0x564abe1cf238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x564abe1670a0 'long'
|-TypedefDecl 0x564abe1cf2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x564abe1670a0 'long'
|-TypedefDecl 0x564abe1cf318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x564abe1670a0 'long'
|-TypedefDecl 0x564abe1cf388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x564abe167140 'unsigned long'
|-TypedefDecl 0x564abe1cf418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x564abe1cf3e0 '__off64_t' sugar
|   |-Typedef 0x564abe1ce6d8 '__off64_t'
|   `-BuiltinType 0x564abe1670a0 'long'
|-TypedefDecl 0x564abe1cf510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x564abe1cf4d0 '__quad_t *'
|   `-TypedefType 0x564abe1cf470 '__quad_t' sugar
|     |-Typedef 0x564abe1ce278 '__quad_t'
|     `-BuiltinType 0x564abe1670a0 'long'
|-TypedefDecl 0x564abe1cf580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x564abe167c20 'char *'
|   `-BuiltinType 0x564abe167020 'char'
|-TypedefDecl 0x564abe1cf5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x564abe1670a0 'long'
|-TypedefDecl 0x564abe1cf660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x564abe167120 'unsigned int'
|-FunctionDecl 0x564abe1cf7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x564abe1cf6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x564abe1cfae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x564abe1cfad8 <line:72:3, col:34>
|     `-CallExpr 0x564abe1cfa98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x564abe1cfa80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x564abe1cfa10 <col:10> '<builtin fn type>' Function 0x564abe1cf880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x564abe1cfac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x564abe1cfa30 <col:29> 'unsigned int' lvalue ParmVar 0x564abe1cf6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x564abe1cf880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x564abe1cf920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x564abe1cf990 <col:10> Implicit
| `-ConstAttr 0x564abe1cf9e8 <col:10> Implicit
|-FunctionDecl 0x564abe1cfc40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x564abe1cfb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x564abe1cff58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x564abe1cff48 <line:77:3, col:34>
|     `-CallExpr 0x564abe1cff08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x564abe1cfef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x564abe1cfe78 <col:10> '<builtin fn type>' Function 0x564abe1cfce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x564abe1cff30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x564abe1cfe98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x564abe1cfb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x564abe1cfce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x564abe1cfd88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x564abe1cfdf8 <col:10> Implicit
| `-ConstAttr 0x564abe1cfe50 <col:10> Implicit
|-TypedefDecl 0x564abe1cff88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x564abe167140 'unsigned long'
|-TypedefDecl 0x564abe1d0018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x564abe1cffe0 '__time_t' sugar
|   |-Typedef 0x564abe1cec18 '__time_t'
|   `-BuiltinType 0x564abe1670a0 'long'
|-RecordDecl 0x564abe1d0070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x564abe1d0128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x564abe1d01b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x564abe1d0248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x564abe1d0210 '__pid_t' sugar
|   |-Typedef 0x564abe1ce748 '__pid_t'
|   `-BuiltinType 0x564abe167080 'int'
|-RecordDecl 0x564abe1d02a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x564abe1d0360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x564abe1d03b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x564abe1d0470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x564abe1d04d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x564abe167140 'unsigned long'
|-RecordDecl 0x564abe1d0530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x564abe1d07c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x564abe1d28b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x564abe1d0810 'struct cpu_set_t' sugar
|   `-RecordType 0x564abe1d05b0 'cpu_set_t'
|     `-Record 0x564abe1d0530 ''
|-FunctionDecl 0x564abe1d2b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x564abe1d2958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564abe1d2a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x564abe1d2c38 <line:107:19>
|-FunctionDecl 0x564abe1d2e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x564abe1d2ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x564abe1d2eb8 <col:69>
|-FunctionDecl 0x564abe1d3030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x564abe1d2f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x564abe1d30d8 <col:64>
|-FunctionDecl 0x564abe1d3398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x564abe1d3140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564abe1d3278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564abe1d3448 <line:113:22>
|-FunctionDecl 0x564abe1d36c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x564abe1d34b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564abe1d35a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x564abe1d3778 <col:88>
|-FunctionDecl 0x564abe1d3a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x564abe1d37e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564abe1d38c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x564abe1d3950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564abe1d3b50 <col:62>
|-FunctionDecl 0x564abe1d3cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x564abe1d3bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x564abe1d3d70 <col:63>
|-FunctionDecl 0x564abe1d3e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x564abe1d3f38 <col:47>
|-FunctionDecl 0x564abe1d4040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x564abe1d3fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x564abe1d40e8 <col:69>
|-FunctionDecl 0x564abe1d41f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x564abe1d4158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x564abe1d4298 <col:69>
|-FunctionDecl 0x564abe1d4558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564abe1d4300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564abe1d4438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x564abe1d4608 <col:88>
|-TypedefDecl 0x564abe1d4698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x564abe1d4660 '__clock_t' sugar
|   |-Typedef 0x564abe1cea58 '__clock_t'
|   `-BuiltinType 0x564abe1670a0 'long'
|-TypedefDecl 0x564abe1d4728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x564abe1d46f0 '__clockid_t' sugar
|   |-Typedef 0x564abe1cee48 '__clockid_t'
|   `-BuiltinType 0x564abe167080 'int'
|-TypedefDecl 0x564abe1d47b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x564abe1d4780 '__timer_t' sugar
|   |-Typedef 0x564abe1ceeb8 '__timer_t'
|   `-PointerType 0x564abe1677a0 'void *'
|     `-BuiltinType 0x564abe166fe0 'void'
|-RecordDecl 0x564abe1d4810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x564abe1d48e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x564abe1d4950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x564abe1d49b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x564abe1d4a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x564abe1d4a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x564abe1d4af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x564abe1d4b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x564abe1d4bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x564abe1d4c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x564abe1d4c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x564abe1d4cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x564abe1d4d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x564abe1d4e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x564abe1d4e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x564abe1d4f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x564abe1d5100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x564abe1d51a0 <col:45>
|-FunctionDecl 0x564abe1d5380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x564abe1d5270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x564abe1d5428 <col:54>
|-FunctionDecl 0x564abe1d5628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x564abe1d5490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x564abe1d5508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x564abe1d56d8 <line:157:22>
| `-ConstAttr 0x564abe1d5730 <col:63>
|-FunctionDecl 0x564abe1d6560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564abe1d5828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x564abe1d6608 <col:56>
|-FunctionDecl 0x564abe1d69b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x564abe1d6678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x564abe1d66f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564abe1d6770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x564abe1d6868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x564abe1d6a70 <col:54>
|-RecordDecl 0x564abe1d6ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x564abe1d6b78 parent 0x564abe166f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x564abe1d6dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x564abe1d6e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x564abe1d6ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x564abe1d6f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x564abe1d7038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x564abe1d7158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x564abe1d7100 'struct __locale_struct *'
|   `-ElaboratedType 0x564abe1d7090 'struct __locale_struct' sugar
|     `-RecordType 0x564abe1d6b50 'struct __locale_struct'
|       `-Record 0x564abe1d6ac8 '__locale_struct'
|-TypedefDecl 0x564abe1d7208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x564abe1d71d0 '__locale_t' sugar
|   |-Typedef 0x564abe1d7158 '__locale_t'
|   `-PointerType 0x564abe1d7100 'struct __locale_struct *'
|     `-ElaboratedType 0x564abe1d7090 'struct __locale_struct' sugar
|       `-RecordType 0x564abe1d6b50 'struct __locale_struct'
|         `-Record 0x564abe1d6ac8 '__locale_struct'
|-FunctionDecl 0x564abe1d7610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x564abe1d7278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x564abe1d72f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564abe1d7370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x564abe1d7400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x564abe1d7478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x564abe1d76d8 <col:40>
|-FunctionDecl 0x564abe1d78c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x564abe1d77a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x564abe1d7970 <col:66>
|-FunctionDecl 0x564abe1d7a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x564abe1d79d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x564abe1d7b28 <col:69>
|-FunctionDecl 0x564abe1d7d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564abe1d7b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564abe1d7c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564abe1d7e08 <col:52>
|-FunctionDecl 0x564abe1d7fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564abe1d7e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564abe1d7f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564abe1d8060 <col:55>
|-FunctionDecl 0x564abe1d81f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x564abe1d80e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x564abe1d82a0 <col:62>
|-FunctionDecl 0x564abe1d8418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x564abe1d8308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x564abe1d84c0 <col:60>
|-FunctionDecl 0x564abe1d8718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x564abe1d8578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x564abe1d85f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x564abe1d87c8 <col:44>
|-FunctionDecl 0x564abe1d89d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x564abe1d8830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564abe1d88b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x564abe1d8a88 <col:49>
|-VarDecl 0x564abe1d8b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x564abe1d8c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x564abe1d8c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x564abe1d8d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x564abe1d8e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x564abe1d8f20 <col:42>
|-VarDecl 0x564abe1d8f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x564abe1d9010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x564abe1d9198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x564abe1d9088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x564abe1d9240 <col:57>
|-FunctionDecl 0x564abe1d9350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564abe1d92c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x564abe1d93f8 <col:56>
|-FunctionDecl 0x564abe1da540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564abe1d9478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x564abe1da5e8 <col:59>
|-FunctionDecl 0x564abe1da6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x564abe1da658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x564abe1da798 <col:48>
| `-ConstAttr 0x564abe1da7f0 <col:89>
|-FunctionDecl 0x564abe1daa58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x564abe1da8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x564abe1da938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x564abe1dacb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564abe1dab48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564abe1dabd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x564abe1dad68 <col:88>
|-FunctionDecl 0x564abe1daf00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564abe1dadd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564abe1dae60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x564abe1dafb0 <col:88>
|-FunctionDecl 0x564abe1db1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x564abe1db018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564abe1db0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x564abe1db278 <line:208:22>
|-FunctionDecl 0x564abe1db5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x564abe1db2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564abe1db360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x564abe1db3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x564abe1db480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x564abe1db8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x564abe1db6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x564abe1db7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x564abe1db998 <col:85>
|-FunctionDecl 0x564abe1dbd88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x564abe1dba00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564abe1dbb38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x564abe1dbc40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x564abe1dbe40 <col:52>
|-FunctionDecl 0x564abe1dbfb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x564abe1dbea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x564abe1dc060 <col:61>
|-FunctionDecl 0x564abe1dc560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x564abe1dc0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x564abe1dc148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x564abe1dc278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x564abe1dc368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x564abe1dc620 <col:62>
|-FunctionDecl 0x564abe1dc838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x564abe1dc688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x564abe1dc718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x564abe1dc8e8 <line:221:22>
|-FunctionDecl 0x564abe1dc9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x564abe1dc950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x564abe1dca90 <col:65>
|-TypedefDecl 0x564abe1dcb00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x564abe167140 'unsigned long'
|-RecordDecl 0x564abe1dcb58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x564abe1dcca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x564abe1dcd08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564abe1dcdb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x564abe1dcd60 'union pthread_attr_t' sugar
|   `-RecordType 0x564abe1dcbe0 'union pthread_attr_t'
|     `-Record 0x564abe1dcb58 'pthread_attr_t'
|-RecordDecl 0x564abe1dce10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x564abe1dcf88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x564abe1dd000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x564abe1dd0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x564abe1dd050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x564abe1dce90 'struct __pthread_internal_list'
|     `-Record 0x564abe1dce10 '__pthread_internal_list'
|-RecordDecl 0x564abe1dd120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x564abe1dd1c8 parent 0x564abe166f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x564abe1dd2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564abe1dd308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x564abe1dd370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x564abe1dd3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x564abe1dd440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x564abe1dd4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x564abe1e1580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x564abe1e1630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x564abe1e1720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x564abe1e1788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564abe1e1910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x564abe1e18b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x564abe1dd1a0 'pthread_mutex_t'
|     `-Record 0x564abe1dd120 ''
|-RecordDecl 0x564abe1e1980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x564abe1e1ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564abe1e1b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564abe1e1be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x564abe1e1b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x564abe1e1a00 'pthread_mutexattr_t'
|     `-Record 0x564abe1e1980 ''
|-RecordDecl 0x564abe1e1c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x564abe1e1cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x564abe1e1dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564abe1e1e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x564abe1e1e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x564abe1e1ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x564abe1e1f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x564abe1e1fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x564abe1e2030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x564abe1e2098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x564abe1e2150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe030_rmo.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe030_rmo.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x564abe1e2240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x564abe1e22a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x564abe1e23e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x564abe1e2380 'union pthread_cond_t' sugar
|   `-RecordType 0x564abe1e1cd0 'pthread_cond_t'
|     `-Record 0x564abe1e1c50 ''
|-RecordDecl 0x564abe1e2450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x564abe1e2590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564abe1e25f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564abe1e26b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x564abe1e2650 'union pthread_condattr_t' sugar
|   `-RecordType 0x564abe1e24d0 'pthread_condattr_t'
|     `-Record 0x564abe1e2450 ''
|-TypedefDecl 0x564abe1e2738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x564abe167120 'unsigned int'
|-TypedefDecl 0x564abe1e27a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x564abe167080 'int'
|-RecordDecl 0x564abe1e2800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x564abe1e28a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x564abe1e2970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564abe1e29d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x564abe1e2a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x564abe1e2aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x564abe1e2b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x564abe1e2b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x564abe1e2be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x564abe1e2c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x564abe1e2cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x564abe1e2d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x564abe1e2d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x564abe1e2e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe030_rmo.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe030_rmo.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x564abe1e2ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x564abe1e2f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564abe1e3090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x564abe1e3030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x564abe1e2880 'pthread_rwlock_t'
|     `-Record 0x564abe1e2800 ''
|-RecordDecl 0x564abe1e3100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x564abe1e3240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x564abe1e32a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564abe1e3360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x564abe1e3300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x564abe1e3180 'pthread_rwlockattr_t'
|     `-Record 0x564abe1e3100 ''
|-TypedefDecl 0x564abe1e33e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x564abe167084 'volatile int' volatile
|   `-BuiltinType 0x564abe167080 'int'
|-RecordDecl 0x564abe1e3440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x564abe1e55b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x564abe1e5618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564abe1e56d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x564abe1e5670 'union pthread_barrier_t' sugar
|   `-RecordType 0x564abe1e34c0 'pthread_barrier_t'
|     `-Record 0x564abe1e3440 ''
|-RecordDecl 0x564abe1e5740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x564abe1e5840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564abe1e58a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564abe1e5960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x564abe1e5900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x564abe1e57c0 'pthread_barrierattr_t'
|     `-Record 0x564abe1e5740 ''
|-TypedefDecl 0x564abe1e5a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x564abe1e5a10 'long [8]' 8 
|   `-BuiltinType 0x564abe1670a0 'long'
|-EnumDecl 0x564abe1e5ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x564abe1e5b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x564abe1e5be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x564abe1e5c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x564abe1e5d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x564abe1e5d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x564abe1e5da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x564abe1e5df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x564abe1e5e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x564abe1e5e68 <col:26> 'int'
| |   `-DeclRefExpr 0x564abe1e5e48 <col:26> 'int' EnumConstant 0x564abe1e5d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x564abe1e5f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x564abe1e5ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x564abe1e5ed0 <col:29> 'int' EnumConstant 0x564abe1e5d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x564abe1e5f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x564abe1e5f78 <col:30> 'int'
| |   `-DeclRefExpr 0x564abe1e5f58 <col:30> 'int' EnumConstant 0x564abe1e5da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x564abe1e6018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x564abe1e6000 <col:27> 'int'
|     `-DeclRefExpr 0x564abe1e5fe0 <col:27> 'int' EnumConstant 0x564abe1e5e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x564abe1e6068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x564abe1e6138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x564abe1e61c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x564abe1e61a8 <col:30> 'int'
| |   `-DeclRefExpr 0x564abe1e6188 <col:30> 'int' EnumConstant 0x564abe1e6138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x564abe1e6210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x564abe1e6298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x564abe1e6280 <col:29> 'int'
|     `-DeclRefExpr 0x564abe1e6260 <col:29> 'int' EnumConstant 0x564abe1e6210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x564abe1e62e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x564abe1e63b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x564abe1e6408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x564abe1e6458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x564abe1e64a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x564abe1e65c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x564abe1e6610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x564abe1e6660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x564abe1e66e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x564abe1e66d0 <col:31> 'int'
|     `-DeclRefExpr 0x564abe1e66b0 <col:31> 'int' EnumConstant 0x564abe1e65c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x564abe1e6738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x564abe1e6808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x564abe1e6858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x564abe1e68a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x564abe1e6978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x564abe1e69c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x564abe1e6a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x564abe1e6ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x564abe1e6b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x564abe1e6b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x564abe1e6dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x564abe1e6e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x564abe1e6e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x564abe1e6fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x564abe1e7008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x564abe1e70d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x564abe1e7128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x564abe1e7178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x564abe1e7248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x564abe1e7298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x564abe1e78f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x564abe1e7390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x564abe1e74a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564abe1e76e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x564abe1e7760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x564abe1e79b8 <col:47>
| |-NonNullAttr 0x564abe1e7a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x564abe1e7a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x564abe1e7b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x564abe1e7aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x564abe1e7dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x564abe1e7c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x564abe1e7ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x564abe1e7f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x564abe1e7e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x564abe1e8040 <col:60>
|-FunctionDecl 0x564abe1e8190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x564abe1e8230 <col:54>
| `-ConstAttr 0x564abe1e8288 <col:95>
|-FunctionDecl 0x564abe1e8458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x564abe1e82c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564abe1e8338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x564abe1e8508 <line:394:19>
| `-ConstAttr 0x564abe1e8560 <col:60>
|-FunctionDecl 0x564abe1e8f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x564abe1e8e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564abe1e9010 <col:71>
| `-NonNullAttr 0x564abe1e9068 <col:112, col:126> 1
|-FunctionDecl 0x564abe1e9170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x564abe1e90b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564abe1e9218 <line:397:22>
| `-NonNullAttr 0x564abe1e9270 <col:63, col:77> 1
|-FunctionDecl 0x564abe1e9498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x564abe1e92b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x564abe1e9338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x564abe1e9548 <line:400:22>
| `-NonNullAttr 0x564abe1e95a0 <col:63, col:80> 1 2
|-FunctionDecl 0x564abe1e97a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564abe1e95e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564abe1e9668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x564abe1e9858 <line:403:22>
| `-NonNullAttr 0x564abe1e98b0 <col:63, col:77> 1
|-FunctionDecl 0x564abe1e9b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x564abe1e98f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x564abe1e99a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x564abe1e9bb8 <line:406:22>
| `-NonNullAttr 0x564abe1e9c10 <col:63, col:80> 1 2
|-FunctionDecl 0x564abe1eae48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x564abe1e9c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564abe1e9cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564abe1eaef8 <line:409:22>
| `-NonNullAttr 0x564abe1eaf50 <col:63, col:77> 1
|-FunctionDecl 0x564abe1eb188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564abe1eaf98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564abe1eb028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x564abe1eb238 <line:412:22>
| `-NonNullAttr 0x564abe1eb290 <col:63, col:80> 1 2
|-FunctionDecl 0x564abe1eb4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564abe1eb2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x564abe1eb368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x564abe1eb578 <col:37>
| `-NonNullAttr 0x564abe1eb5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x564abe1eb7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564abe1eb618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564abe1eb698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x564abe1eb868 <line:418:22>
| `-NonNullAttr 0x564abe1eb8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x564abe1eba48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564abe1eb908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564abe1eb988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x564abe1ebaf8 <line:420:22>
| `-NonNullAttr 0x564abe1ebb50 <col:63, col:77> 1
|-FunctionDecl 0x564abe1ebcf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564abe1ebb98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564abe1ebc18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x564abe1ebda8 <line:423:22>
| `-NonNullAttr 0x564abe1ece30 <col:63, col:80> 1 2
|-FunctionDecl 0x564abe1ecfb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564abe1ece78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564abe1ecef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x564abe1ed068 <line:426:22>
| `-NonNullAttr 0x564abe1ed0c0 <col:63, col:77> 1
|-FunctionDecl 0x564abe1ed268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564abe1ed108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564abe1ed188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x564abe1ed318 <line:429:22>
| `-NonNullAttr 0x564abe1ed370 <col:63, col:80> 1 2
|-FunctionDecl 0x564abe1ed4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564abe1ed3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564abe1ed438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x564abe1ed5a8 <line:431:22>
| `-NonNullAttr 0x564abe1ed600 <col:63, col:77> 1
|-FunctionDecl 0x564abe1ed828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x564abe1ed648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564abe1ed6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x564abe1ed8d8 <line:434:22>
| |-NonNullAttr 0x564abe1ed930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x564abe1ed968 <col:100> "" ""
|-FunctionDecl 0x564abe1edb78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x564abe1ed9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564abe1eda38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x564abe1edc28 <line:437:22>
| |-NonNullAttr 0x564abe1edc80 <col:63, col:77> 1
| `-DeprecatedAttr 0x564abe1edcb8 <col:97> "" ""
|-FunctionDecl 0x564abe1edeb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564abe1edd08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564abe1edd80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x564abe1edf68 <line:440:22>
| `-NonNullAttr 0x564abe1edfc0 <col:63, col:80> 1 2
|-FunctionDecl 0x564abe1ee140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x564abe1ee008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564abe1ee080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564abe1ee1f0 <line:443:22>
| `-NonNullAttr 0x564abe1ee248 <col:63, col:77> 1
|-FunctionDecl 0x564abe1ee538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564abe1ee298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564abe1ee318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x564abe1ee390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x564abe1ee5f0 <line:447:22>
| `-NonNullAttr 0x564abe1ee648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x564abe1ee8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x564abe1ee6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564abe1ee720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x564abe1ee798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564abe1ee9b0 <col:43>
| `-NonNullAttr 0x564abe1eea08 <col:84, col:98> 1
|-FunctionDecl 0x564abe1eecc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x564abe1eea58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564abe1eead8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x564abe1eeb68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x564abe1eed80 <line:452:22>
| `-NonNullAttr 0x564abe1eedd8 <col:63, col:77> 3
|-FunctionDecl 0x564abe1ef0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564abe1eee50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564abe1eeed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x564abe1eef60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x564abe1ef1a0 <line:456:22>
| `-NonNullAttr 0x564abe1ef1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x564abe1ef3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x564abe1ef248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564abe1ef2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x564abe1ef498 <line:458:22>
|-FunctionDecl 0x564abe1ef868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x564abe1ef560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x564abe1ef700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x564abe1ef918 <col:52, col:69> 1 2
|-FunctionDecl 0x564abe1efac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x564abe1ef9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x564abe1efa20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x564abe1efca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x564abe1efb88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x564abe1efc08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x564abe1efe60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x564abe1efd68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x564abe1effa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x564abe1f0040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x564abe1f00e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x564abe1f01d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x564abe1f0240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x564abe1f0410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe030_rmo.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x564abe1f0508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x564abe1f05c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x564abe1f0560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x564abe1f00c0 '__pthread_unwind_buf_t'
| |   `-Record 0x564abe1f0040 ''
| `-AlignedAttr 0x564abe1f0618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x564abe1f0690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x564abe1f07f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x564abe1f0858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x564abe1f08c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x564abe1f0928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x564abe1f0b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x564abe1f0a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564abe1f0c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x564abe1f0be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564abe1f0e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564abe1f0d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x564abe1f0f18 <line:487:22>
|-RecordDecl 0x564abe1f0f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x564abe1f1288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x564abe1f10e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x564abe1f1168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x564abe1f1338 <col:86>
| `-ReturnsTwiceAttr 0x564abe1f1390 <col:12> Implicit
|-FunctionDecl 0x564abe1f16b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564abe1f1460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x564abe1f1570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x564abe1f1768 <line:493:22>
| `-NonNullAttr 0x564abe1f17c0 <col:63, col:77> 1
|-FunctionDecl 0x564abe1f1938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564abe1f1808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564abe1f19e0 <line:495:22>
| `-NonNullAttr 0x564abe1f1a38 <col:63, col:77> 1
|-FunctionDecl 0x564abe1f1b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564abe1f1a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564abe1f1be8 <line:497:22>
| `-NonNullAttr 0x564abe1f1c40 <col:52, col:66> 1
|-FunctionDecl 0x564abe1f1d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564abe1f1c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564abe1f1de8 <line:499:22>
| `-NonNullAttr 0x564abe1f1e40 <col:52, col:66> 1
|-FunctionDecl 0x564abe1f2088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564abe1f1e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564abe1f1f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564abe1f2138 <col:36>
| `-NonNullAttr 0x564abe1f2190 <col:66, col:83> 1 2
|-FunctionDecl 0x564abe1f2290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564abe1f21d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564abe1f2338 <line:504:22>
| `-NonNullAttr 0x564abe1f2390 <col:52, col:66> 1
|-FunctionDecl 0x564abe1f2628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564abe1f2440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564abe1f24c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564abe1f26d8 <line:508:22>
| `-NonNullAttr 0x564abe1f2730 <col:63, col:80> 1 2
|-FunctionDecl 0x564abe1f29f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x564abe1f2778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564abe1f27f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x564abe1f2878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x564abe1f2ab0 <line:512:22>
| `-NonNullAttr 0x564abe1f2b08 <col:63, col:80> 1 3
|-FunctionDecl 0x564abe1f2c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564abe1f2b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564abe1f2cb8 <line:514:22>
| `-NonNullAttr 0x564abe1f2d10 <col:63, col:77> 1
|-FunctionDecl 0x564abe1f2f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564abe1f2dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564abe1f2fe0 <line:516:22>
| `-NonNullAttr 0x564abe1f3038 <col:63, col:77> 1
|-FunctionDecl 0x564abe1f3140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564abe1f3088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564abe1f31e8 <line:518:22>
| `-NonNullAttr 0x564abe1f3240 <col:63, col:77> 1
|-FunctionDecl 0x564abe1f3468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564abe1f3288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564abe1f3308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x564abe1f3518 <line:522:22>
| `-NonNullAttr 0x564abe1f3570 <col:63, col:80> 1 2
|-FunctionDecl 0x564abe1f3778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564abe1f35b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564abe1f3638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x564abe1f3828 <line:525:22>
| `-NonNullAttr 0x564abe1f3880 <col:63, col:77> 1
|-FunctionDecl 0x564abe1f3a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564abe1f38c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564abe1f3948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x564abe1f3ad8 <line:528:22>
| `-NonNullAttr 0x564abe1f3b30 <col:63, col:80> 1 2
|-FunctionDecl 0x564abe1f3cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564abe1f3b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564abe1f3bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x564abe1f3d68 <line:530:22>
| `-NonNullAttr 0x564abe1f3dc0 <col:63, col:77> 1
|-FunctionDecl 0x564abe1f4f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564abe1f3e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564abe1f4eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x564abe1f5040 <line:534:22>
| `-NonNullAttr 0x564abe1f5098 <col:63, col:80> 1 2
|-FunctionDecl 0x564abe1f5228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564abe1f50e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564abe1f5168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x564abe1f52d8 <line:537:22>
| `-NonNullAttr 0x564abe1f5330 <col:63, col:77> 1
|-FunctionDecl 0x564abe1f54d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564abe1f5378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564abe1f53f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564abe1f5588 <line:541:22>
| `-NonNullAttr 0x564abe1f55e0 <col:63, col:80> 1 2
|-FunctionDecl 0x564abe1f5768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564abe1f5628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564abe1f56a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x564abe1f5818 <line:544:22>
| `-NonNullAttr 0x564abe1f5870 <col:63, col:77> 1
|-FunctionDecl 0x564abe1f5a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x564abe1f58b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x564abe1f5938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x564abe1f5b08 <line:547:22>
| `-NonNullAttr 0x564abe1f5b60 <col:63, col:80> 1 2
|-FunctionDecl 0x564abe1f5ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564abe1f5ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564abe1f5c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x564abe1f5d98 <line:550:22>
| `-NonNullAttr 0x564abe1f5df0 <col:63, col:77> 1
|-FunctionDecl 0x564abe1f7168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x564abe1f6f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564abe1f7020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x564abe1f7218 <col:29>
| `-NonNullAttr 0x564abe1f7270 <col:70, col:84> 1
|-FunctionDecl 0x564abe1f73e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564abe1f72b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564abe1f7490 <line:555:22>
| `-NonNullAttr 0x564abe1f74e8 <col:63, col:77> 1
|-FunctionDecl 0x564abe1f75f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564abe1f7538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564abe1f7698 <line:557:22>
| `-NonNullAttr 0x564abe1f76f0 <col:52, col:66> 1
|-FunctionDecl 0x564abe1f77f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564abe1f7738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564abe1f7898 <line:559:19>
| `-NonNullAttr 0x564abe1f78f0 <col:49, col:63> 1
|-FunctionDecl 0x564abe1f7b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564abe1f7938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564abe1f79c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564abe1f7bd8 <col:39>
| `-NonNullAttr 0x564abe1f7c30 <col:69, col:86> 1 2
|-FunctionDecl 0x564abe1f7d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564abe1f7c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564abe1f7dd8 <line:564:22>
| `-NonNullAttr 0x564abe1f7e30 <col:52, col:66> 1
|-FunctionDecl 0x564abe1f7f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564abe1f7ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564abe1f8040 <line:566:22>
| `-NonNullAttr 0x564abe1f8098 <col:52, col:66> 1
|-FunctionDecl 0x564abe1f8258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564abe1f80e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564abe1f8178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564abe1f8308 <col:39>
| `-NonNullAttr 0x564abe1f8360 <col:69, col:86> 1 2
|-FunctionDecl 0x564abe1f8460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564abe1f83a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564abe1f8508 <line:571:22>
| `-NonNullAttr 0x564abe1f8560 <col:52, col:66> 1
|-FunctionDecl 0x564abe1f8748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x564abe1f8610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x564abe1f87f0 <line:573:22>
| `-NonNullAttr 0x564abe1f8848 <col:63, col:77> 1
|-FunctionDecl 0x564abe1f8950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x564abe1f8898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x564abe1f89f8 <line:575:22>
| `-NonNullAttr 0x564abe1f8a50 <col:63, col:77> 1
|-FunctionDecl 0x564abe1f8c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564abe1f8a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x564abe1f8b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x564abe1f8d28 <line:579:22>
| `-NonNullAttr 0x564abe1f8d80 <col:63, col:80> 1 2
|-FunctionDecl 0x564abe1f8fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x564abe1f8dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x564abe1f8e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x564abe1f9058 <line:582:22>
| `-NonNullAttr 0x564abe1f90b0 <col:63, col:77> 1
|-FunctionDecl 0x564abe1f9258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564abe1f90f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x564abe1f9178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x564abe1f9308 <line:586:22>
| `-NonNullAttr 0x564abe1f9360 <col:63, col:80> 1 2
|-FunctionDecl 0x564abe1f94e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x564abe1f93a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x564abe1f9428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x564abe1f9598 <col:36>
| `-NonNullAttr 0x564abe1f95f0 <col:77, col:91> 1
|-FunctionDecl 0x564abe1f9928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x564abe1f96d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564abe1f97e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x564abe1f99d8 <line:591:22>
| `-NonNullAttr 0x564abe1f9a30 <col:63, col:77> 1
|-FunctionDecl 0x564abe1f9ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564abe1f9a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564abe1f9c50 <line:593:22>
| `-NonNullAttr 0x564abe1f9ca8 <col:63, col:77> 1
|-FunctionDecl 0x564abe1f9db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564abe1f9cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564abe1f9e58 <line:595:22>
| `-NonNullAttr 0x564abe1f9eb0 <col:52, col:66> 1
|-FunctionDecl 0x564abe1f9fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564abe1f9f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564abe1fa070 <line:597:22>
| `-NonNullAttr 0x564abe1fa0c8 <col:52, col:66> 1
|-FunctionDecl 0x564abe1fa2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x564abe1fa118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564abe1fa190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x564abe1fa3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x564abe1fa6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564abe1fa428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564abe1fa4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564abe1fa530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x564abe1fa790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x564abe1fa9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x564abe1fa870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x564abe1faa50 <line:606:22>
| `-NonNullAttr 0x564abe1faaa8 <col:63, col:77> 1
|-FunctionDecl 0x564abe1fabb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x564abe1faaf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x564abe1fac58 <line:608:22>
| `-NonNullAttr 0x564abe1facb0 <col:63, col:77> 1
|-FunctionDecl 0x564abe1faf10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564abe1facf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x564abe1fad78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x564abe1fafc0 <line:612:22>
| `-NonNullAttr 0x564abe1fb018 <col:63, col:80> 1 2
|-FunctionDecl 0x564abe1fb228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x564abe1fb068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x564abe1fb0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x564abe1fb2d8 <col:37>
| `-NonNullAttr 0x564abe1fb330 <col:78, col:92> 1
|-FunctionDecl 0x564abe1fb548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x564abe1fb378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x564abe1fb420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x564abe1fb5f8 <line:618:22>
| `-NonNullAttr 0x564abe1fb650 <col:63, col:80> 1 2
|-FunctionDecl 0x564abe1fb818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x564abe1fb698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x564abe1fb710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x564abe1fb8c8 <line:621:22>
| `-NonNullAttr 0x564abe1fb920 <col:63, col:77> 1
|-FunctionDecl 0x564abe1fbbc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x564abe1fba00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x564abe1fba80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x564abe1fbc78 <line:623:22>
| `-NonNullAttr 0x564abe1fbcd0 <col:63, col:77> 1
|-FunctionDecl 0x564abe1fbe48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564abe1fbd18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564abe1fbf20 <line:625:22>
| `-NonNullAttr 0x564abe1fbf78 <col:63, col:77> 1
|-FunctionDecl 0x564abe1fc080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564abe1fbfc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564abe1fc128 <line:627:22>
| `-NonNullAttr 0x564abe1fc180 <col:52, col:66> 1
|-FunctionDecl 0x564abe1fc280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564abe1fc1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564abe1fc328 <line:629:22>
| `-NonNullAttr 0x564abe1fc380 <col:52, col:66> 1
|-FunctionDecl 0x564abe1fc480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564abe1fc3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564abe1fc528 <line:631:22>
| `-NonNullAttr 0x564abe1fc580 <col:52, col:66> 1
|-FunctionDecl 0x564abe1fc958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x564abe1fc660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x564abe1fc770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x564abe1fc7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x564abe1fca10 <line:635:22>
| `-NonNullAttr 0x564abe1fca68 <col:63, col:77> 1
|-FunctionDecl 0x564abe1fcbe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x564abe1fcab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x564abe1fcc90 <line:637:22>
| `-NonNullAttr 0x564abe1fcce8 <col:63, col:77> 1
|-FunctionDecl 0x564abe1fcdf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x564abe1fcd38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x564abe1fce98 <line:639:22>
| `-NonNullAttr 0x564abe1fcef0 <col:52, col:66> 1
|-FunctionDecl 0x564abe1fd0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x564abe1fcfb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564abe1fd190 <line:641:22>
| `-NonNullAttr 0x564abe1fd1e8 <col:63, col:77> 1
|-FunctionDecl 0x564abe1fd2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x564abe1fd238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564abe1fd398 <line:643:22>
| `-NonNullAttr 0x564abe1fd3f0 <col:63, col:77> 1
|-FunctionDecl 0x564abe1fd618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564abe1fd438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x564abe1fd4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x564abe1fd6c8 <line:647:22>
| `-NonNullAttr 0x564abe1fd720 <col:63, col:80> 1 2
|-FunctionDecl 0x564abe1fd928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x564abe1fd768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x564abe1fd7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x564abe1fd9d8 <line:650:22>
| `-NonNullAttr 0x564abe1fda30 <col:63, col:77> 1
|-FunctionDecl 0x564abe1fdd78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x564abe1fdb10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x564abe1fdc30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x564abe1fde28 <line:653:22>
| `-NonNullAttr 0x564abe1fde80 <col:63, col:77> 1
|-FunctionDecl 0x564abe1fdfe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x564abe1fdec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x564abe1fe090 <col:69>
|-FunctionDecl 0x564abe1fe208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x564abe1fe0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x564abe1fe2b0 <col:72>
|-FunctionDecl 0x564abe1fe4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x564abe1fe318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x564abe1fe3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x564abe1fe598 <col:44>
|-FunctionDecl 0x564abe1fe7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x564abe1fe600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564abe1fe678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x564abe1fe868 <line:660:22>
| `-NonNullAttr 0x564abe1fe8c0 <col:63, col:77> 2
|-FunctionDecl 0x564abe1fed08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x564abe1fe9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x564abe1feab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x564abe1febc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x564abe1fedc0 <col:47>
|-FunctionDecl 0x564abe1fff60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x564abe1fee30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564abe2000b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x564abe200020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564abe200210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x564abe200178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564abe2002d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x564abe200398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x564abe200458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x564abe200510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x564abe200590 prev 0x564abe200510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x564abe2005f8 <col:24> 'int' 0
|-VarDecl 0x564abe200628 <line:673:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x564abe2006a0 <line:674:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x564abe200720 <line:675:1, col:5> col:5 used x 'int'
|-VarDecl 0x564abe2007a0 prev 0x564abe200720 <line:676:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x564abe200808 <col:9> 'int' 0
|-VarDecl 0x564abe200840 <line:677:1, col:5> col:5 used y 'int'
|-VarDecl 0x564abe2008c0 prev 0x564abe200840 <line:678:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x564abe200928 <col:9> 'int' 0
|-VarDecl 0x564abe200958 <line:679:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x564abe2009d8 <line:680:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x564abe200a50 <line:681:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x564abe200ac8 <line:682:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x564abe200b40 <line:683:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x564abe200bb8 <line:684:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x564abe200c30 <line:685:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x564abe200ca8 <line:686:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x564abe200d20 <line:687:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x564abe200d98 <line:688:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x564abe200e10 <line:689:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x564abe200e90 <line:690:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x564abe200f70 <line:691:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x564abe200fe8 <line:692:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x564abe201068 <line:693:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x564abe2010e0 <line:694:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x564abe201160 <line:695:1, col:5> col:5 used z 'int'
|-VarDecl 0x564abe2011e0 prev 0x564abe201160 <line:696:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x564abe201248 <col:9> 'int' 0
|-VarDecl 0x564abe201278 <line:697:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x564abe2012f0 <line:698:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x564abe201408 prev 0x564abe1fff60 <line:699:1, line:713:1> line:699:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x564abe201370 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564abe2019b8 <line:700:1, line:713:1>
|   |-CallExpr 0x564abe201518 <line:701:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564abe201500 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564abe2014b0 <col:3> 'void ()' Function 0x564abe1a7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564abe201578 <line:702:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564abe201538 <col:3> 'int' lvalue Var 0x564abe2011e0 'z' 'int'
|   | `-IntegerLiteral 0x564abe201558 <col:7> 'int' 2
|   |-CallExpr 0x564abe2015d0 <line:703:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564abe2015b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564abe201598 <col:3> 'void ()' Function 0x564abe1a7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564abe201628 <line:704:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564abe201610 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564abe2015f0 <col:3> 'void ()' Function 0x564abe1a7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564abe201688 <line:705:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564abe201648 <col:3> 'int' lvalue Var 0x564abe2007a0 'x' 'int'
|   | `-IntegerLiteral 0x564abe201668 <col:7> 'int' 1
|   |-CallExpr 0x564abe2016e0 <line:706:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564abe2016c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564abe2016a8 <col:3> 'void ()' Function 0x564abe1a7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564abe201738 <line:707:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564abe201720 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564abe201700 <col:3> 'void ()' Function 0x564abe1a7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x564abe201790 <line:708:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564abe201778 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564abe201758 <col:3> 'void ()' Function 0x564abe1a7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564abe2017e8 <line:709:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564abe2017d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564abe2017b0 <col:3> 'void ()' Function 0x564abe1a7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564abe2018a0 <line:710:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564abe201808 <col:3> 'int' lvalue Var 0x564abe200590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564abe201880 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564abe201868 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564abe201828 <col:22> 'int' lvalue Var 0x564abe200590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564abe201848 <col:41> 'int' 1
|   |-CallExpr 0x564abe2018f8 <line:711:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564abe2018e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564abe2018c0 <col:3> 'void ()' Function 0x564abe1a7410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564abe2019a8 <line:712:3, col:36>
|     `-CallExpr 0x564abe201988 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564abe201970 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564abe201918 <col:10> 'void *(void)' Function 0x564abe1a6e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564abe201ad8 prev 0x564abe2000b8 <line:714:1, line:733:1> line:714:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x564abe201a40 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564abe202d00 <line:715:1, line:733:1>
|   |-CallExpr 0x564abe201bb8 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564abe201ba0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564abe201b80 <col:3> 'void ()' Function 0x564abe1a7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564abe201c18 <line:717:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564abe201bd8 <col:3> 'int' lvalue Var 0x564abe2007a0 'x' 'int'
|   | `-IntegerLiteral 0x564abe201bf8 <col:7> 'int' 2
|   |-CallExpr 0x564abe201c70 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564abe201c58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564abe201c38 <col:3> 'void ()' Function 0x564abe1a7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564abe201cc8 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564abe201cb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564abe201c90 <col:3> 'void ()' Function 0x564abe1a7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564abe201d28 <line:720:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564abe201ce8 <col:3> 'int' lvalue Var 0x564abe2008c0 'y' 'int'
|   | `-IntegerLiteral 0x564abe201d08 <col:7> 'int' 1
|   |-CallExpr 0x564abe201d80 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564abe201d68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564abe201d48 <col:3> 'void ()' Function 0x564abe1a7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564abe201dd8 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564abe201dc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564abe201da0 <col:3> 'void ()' Function 0x564abe1a7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564abe2020d8 <line:723:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564abe201df8 <col:3> 'int' lvalue Var 0x564abe2008c0 'y' 'int'
|   | `-ConditionalOperator 0x564abe2020a8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564abe201eb8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564abe201e70 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564abe201e58 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564abe201e18 <col:7> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564abe201ea0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564abe201e88 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564abe201e38 <col:25> '_Bool' lvalue Var 0x564abe200b40 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x564abe202090 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564abe201ed8 <col:42> 'int' lvalue Var 0x564abe200f70 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x564abe202070 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564abe202040 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564abe201fb0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564abe201f50 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564abe201f38 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564abe201ef8 <col:55> '_Bool' lvalue Var 0x564abe2010e0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564abe201f98 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564abe201f80 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564abe201f18 <col:73> '_Bool' lvalue Var 0x564abe200d20 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564abe202010 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564abe201fd0 <col:90> 'int' lvalue Var 0x564abe201068 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564abe202028 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564abe201ff0 <col:102> 'int' lvalue Var 0x564abe2008c0 'y' 'int'
|   |-BinaryOperator 0x564abe2022e0 <line:724:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564abe2020f8 <col:3> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564abe2022c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564abe202298 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564abe2021b8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564abe202170 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564abe202158 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564abe202118 <col:20> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564abe2021a0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564abe202188 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564abe202138 <col:38> '_Bool' lvalue Var 0x564abe200b40 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564abe202250 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564abe202208 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564abe2021d8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564abe202280 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564abe202268 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564abe202230 <col:66> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564abe2025c8 <line:725:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564abe202300 <col:3> '_Bool' lvalue Var 0x564abe2010e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564abe2025b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564abe202580 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564abe2024a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564abe2023c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564abe202378 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564abe202360 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564abe202320 <col:20> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564abe2023a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564abe202390 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564abe202340 <col:38> '_Bool' lvalue Var 0x564abe200b40 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x564abe202480 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564abe202438 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564abe202420 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564abe2023e0 <col:56> '_Bool' lvalue Var 0x564abe2010e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564abe202468 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564abe202450 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564abe202400 <col:74> '_Bool' lvalue Var 0x564abe200d20 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564abe202538 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564abe2024f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564abe2024c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564abe202568 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564abe202550 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564abe202518 <col:102> '_Bool' lvalue Var 0x564abe2010e0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564abe2027d0 <line:726:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564abe2025e8 <col:3> '_Bool' lvalue Var 0x564abe200b40 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564abe2027b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564abe202788 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564abe2026a8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564abe202660 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564abe202648 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564abe202608 <col:20> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564abe202690 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564abe202678 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564abe202628 <col:38> '_Bool' lvalue Var 0x564abe200b40 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564abe202740 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564abe2026f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564abe2026c8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564abe202770 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564abe202758 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564abe202720 <col:66> '_Bool' lvalue Var 0x564abe200b40 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564abe202ab8 <line:727:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564abe2027f0 <col:3> '_Bool' lvalue Var 0x564abe200d20 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564abe202aa0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564abe202a70 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564abe202990 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564abe2028b0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564abe202868 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564abe202850 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564abe202810 <col:20> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564abe202898 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564abe202880 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564abe202830 <col:38> '_Bool' lvalue Var 0x564abe200b40 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x564abe202970 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564abe202928 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564abe202910 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564abe2028d0 <col:56> '_Bool' lvalue Var 0x564abe2010e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564abe202958 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564abe202940 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564abe2028f0 <col:74> '_Bool' lvalue Var 0x564abe200d20 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564abe202a28 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564abe2029e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564abe2029b0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564abe202a58 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564abe202a40 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564abe202a08 <col:102> '_Bool' lvalue Var 0x564abe200d20 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x564abe202b10 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564abe202af8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564abe202ad8 <col:3> 'void ()' Function 0x564abe1a7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564abe202b68 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564abe202b50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564abe202b30 <col:3> 'void ()' Function 0x564abe1a7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564abe202c20 <line:730:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564abe202b88 <col:3> 'int' lvalue Var 0x564abe200590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564abe202c00 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564abe202be8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564abe202ba8 <col:22> 'int' lvalue Var 0x564abe200590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564abe202bc8 <col:41> 'int' 1
|   |-CallExpr 0x564abe202c78 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564abe202c60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564abe202c40 <col:3> 'void ()' Function 0x564abe1a7410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564abe202cf0 <line:732:3, col:36>
|     `-CallExpr 0x564abe202cd0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564abe202cb8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564abe202c98 <col:10> 'void *(void)' Function 0x564abe1a6e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564abe202e48 prev 0x564abe200210 <line:734:1, line:762:1> line:734:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x564abe202db0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564abe204628 <line:735:1, line:762:1>
|   |-CallExpr 0x564abe202f28 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564abe202f10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564abe202ef0 <col:3> 'void ()' Function 0x564abe1a7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564abe202fc8 <line:737:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564abe202f48 <col:3> 'int' lvalue Var 0x564abe201068 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x564abe202fb0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564abe202f90 <col:15> 'int' lvalue Var 0x564abe200f70 'y$w_buff0' 'int'
|   |-BinaryOperator 0x564abe203028 <line:738:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564abe202fe8 <col:3> 'int' lvalue Var 0x564abe200f70 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x564abe203008 <col:15> 'int' 2
|   |-BinaryOperator 0x564abe2030a0 <line:739:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564abe203048 <col:3> '_Bool' lvalue Var 0x564abe2010e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564abe203088 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564abe203068 <col:20> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564abe203138 <line:740:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x564abe2030c0 <col:3> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x564abe203110 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564abe2030e0 <col:27> 'int' 1
|   |-CallExpr 0x564abe2032b8 <line:741:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x564abe2032a0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x564abe203158 <col:3> 'void (int)' Function 0x564abe1a70d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x564abe203258 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x564abe203238 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x564abe203218 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x564abe2031d0 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x564abe2031b8 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x564abe203178 <col:23> '_Bool' lvalue Var 0x564abe2010e0 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x564abe203200 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x564abe2031e8 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x564abe203198 <col:41> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564abe203338 <line:742:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564abe2032e0 <col:3> '_Bool' lvalue Var 0x564abe200c30 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x564abe203320 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564abe203300 <col:20> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x564abe2033b0 <line:743:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564abe203358 <col:3> '_Bool' lvalue Var 0x564abe200ca8 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564abe203398 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564abe203378 <col:20> '_Bool' lvalue Var 0x564abe200ac8 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x564abe203428 <line:744:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564abe2033d0 <col:3> '_Bool' lvalue Var 0x564abe200d20 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564abe203410 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564abe2033f0 <col:20> '_Bool' lvalue Var 0x564abe200b40 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564abe2034a0 <line:745:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564abe203448 <col:3> '_Bool' lvalue Var 0x564abe200d98 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564abe203488 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564abe203468 <col:20> '_Bool' lvalue Var 0x564abe200bb8 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x564abe203538 <line:746:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x564abe2034c0 <col:3> '_Bool' lvalue Var 0x564abe200bb8 'y$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x564abe203510 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564abe2034e0 <col:27> 'int' 1
|   |-CallExpr 0x564abe203590 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564abe203578 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564abe203558 <col:3> 'void ()' Function 0x564abe1a7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564abe2035e8 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564abe2035d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564abe2035b0 <col:3> 'void ()' Function 0x564abe1a7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564abe203648 <line:749:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564abe203608 <col:3> 'int' lvalue Var 0x564abe2011e0 'z' 'int'
|   | `-IntegerLiteral 0x564abe203628 <col:7> 'int' 1
|   |-CallExpr 0x564abe2036a0 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564abe203688 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564abe203668 <col:3> 'void ()' Function 0x564abe1a7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564abe2036f8 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564abe2036e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564abe2036c0 <col:3> 'void ()' Function 0x564abe1a7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564abe2039e0 <line:752:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564abe203718 <col:3> 'int' lvalue Var 0x564abe2008c0 'y' 'int'
|   | `-ConditionalOperator 0x564abe2039b0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564abe2037d8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564abe203790 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564abe203778 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564abe203738 <col:7> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564abe2037c0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564abe2037a8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564abe203758 <col:25> '_Bool' lvalue Var 0x564abe200bb8 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x564abe203998 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564abe2037f8 <col:42> 'int' lvalue Var 0x564abe200f70 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x564abe203978 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564abe203948 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564abe2038b8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564abe203870 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564abe203858 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564abe203818 <col:55> '_Bool' lvalue Var 0x564abe2010e0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564abe2038a0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564abe203888 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564abe203838 <col:73> '_Bool' lvalue Var 0x564abe200d98 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x564abe203918 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564abe2038d8 <col:90> 'int' lvalue Var 0x564abe201068 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564abe203930 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564abe2038f8 <col:102> 'int' lvalue Var 0x564abe2008c0 'y' 'int'
|   |-BinaryOperator 0x564abe203be8 <line:753:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564abe203a00 <col:3> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564abe203bd0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564abe203ba0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564abe203ac0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564abe203a78 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564abe203a60 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564abe203a20 <col:20> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564abe203aa8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564abe203a90 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564abe203a40 <col:38> '_Bool' lvalue Var 0x564abe200bb8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564abe203b58 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564abe203b10 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564abe203ae0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564abe203b88 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564abe203b70 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564abe203b38 <col:66> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564abe203ed0 <line:754:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564abe203c08 <col:3> '_Bool' lvalue Var 0x564abe2010e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564abe203eb8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564abe203e88 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564abe203da8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564abe203cc8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564abe203c80 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564abe203c68 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564abe203c28 <col:20> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564abe203cb0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564abe203c98 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564abe203c48 <col:38> '_Bool' lvalue Var 0x564abe200bb8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x564abe203d88 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564abe203d40 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564abe203d28 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564abe203ce8 <col:56> '_Bool' lvalue Var 0x564abe2010e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564abe203d70 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564abe203d58 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564abe203d08 <col:74> '_Bool' lvalue Var 0x564abe200d98 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564abe203e40 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564abe203df8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564abe203dc8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564abe203e70 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564abe203e58 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564abe203e20 <col:102> '_Bool' lvalue Var 0x564abe2010e0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564abe2040f8 <line:755:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564abe203ef0 <col:3> '_Bool' lvalue Var 0x564abe200bb8 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564abe2040e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564abe2040b0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564abe203fd0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564abe203f68 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564abe203f50 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564abe203f10 <col:20> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564abe203fb8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564abe203fa0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564abe203f30 <col:38> '_Bool' lvalue Var 0x564abe200bb8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564abe204068 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564abe204020 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564abe203ff0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564abe204098 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564abe204080 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564abe204048 <col:66> '_Bool' lvalue Var 0x564abe200bb8 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x564abe2043e0 <line:756:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564abe204118 <col:3> '_Bool' lvalue Var 0x564abe200d98 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564abe2043c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564abe204398 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564abe2042b8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564abe2041d8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564abe204190 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564abe204178 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564abe204138 <col:20> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564abe2041c0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564abe2041a8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564abe204158 <col:38> '_Bool' lvalue Var 0x564abe200bb8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x564abe204298 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564abe204250 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564abe204238 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564abe2041f8 <col:56> '_Bool' lvalue Var 0x564abe2010e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564abe204280 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564abe204268 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564abe204218 <col:74> '_Bool' lvalue Var 0x564abe200d98 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564abe204350 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564abe204308 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564abe2042d8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564abe204380 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564abe204368 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564abe204330 <col:102> '_Bool' lvalue Var 0x564abe200d98 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x564abe204438 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564abe204420 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564abe204400 <col:3> 'void ()' Function 0x564abe1a7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564abe204490 <line:758:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564abe204478 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564abe204458 <col:3> 'void ()' Function 0x564abe1a7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564abe204548 <line:759:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564abe2044b0 <col:3> 'int' lvalue Var 0x564abe200590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564abe204528 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564abe204510 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564abe2044d0 <col:22> 'int' lvalue Var 0x564abe200590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564abe2044f0 <col:41> 'int' 1
|   |-CallExpr 0x564abe2045a0 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564abe204588 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564abe204568 <col:3> 'void ()' Function 0x564abe1a7410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564abe204618 <line:761:3, col:36>
|     `-CallExpr 0x564abe2045f8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564abe2045e0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564abe2045c0 <col:10> 'void *(void)' Function 0x564abe1a6e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564abe204728 prev 0x564abe2002d8 <line:763:1, line:765:1> line:763:6 fence 'void ()'
| `-CompoundStmt 0x564abe2047c8 <line:764:1, line:765:1>
|-FunctionDecl 0x564abe2047f8 prev 0x564abe200398 <line:766:1, line:768:1> line:766:6 isync 'void ()'
| `-CompoundStmt 0x564abe204898 <line:767:1, line:768:1>
|-FunctionDecl 0x564abe2048c8 prev 0x564abe200458 <line:769:1, line:771:1> line:769:6 lwfence 'void ()'
| `-CompoundStmt 0x564abe204968 <line:770:1, line:771:1>
`-FunctionDecl 0x564abe2049d8 <line:772:1, line:809:1> line:772:5 main 'int ()'
  `-CompoundStmt 0x564abe208ff0 <line:773:1, line:809:1>
    |-DeclStmt 0x564abe204af0 <line:774:3, col:18>
    | `-VarDecl 0x564abe204a88 <col:3, col:13> col:13 used t2506 'pthread_t':'unsigned long'
    |-CallExpr 0x564abe204cf8 <line:775:3, col:54> 'int'
    | |-ImplicitCastExpr 0x564abe204ce0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564abe204b08 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564abe1e78f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564abe204b48 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564abe204b28 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564abe204a88 't2506' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564abe204d38 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564abe204bc0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x564abe204b98 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564abe204b60 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x564abe204d50 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564abe204be0 <col:39> 'void *(void *)' Function 0x564abe201408 'P0' 'void *(void *)'
    | `-ParenExpr 0x564abe204c60 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x564abe204c38 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564abe204c00 <col:52> 'int' 0
    |-DeclStmt 0x564abe204de0 <line:776:3, col:18>
    | `-VarDecl 0x564abe204d78 <col:3, col:13> col:13 used t2507 'pthread_t':'unsigned long'
    |-CallExpr 0x564abe204fb0 <line:777:3, col:54> 'int'
    | |-ImplicitCastExpr 0x564abe204f70 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564abe204df8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564abe1e78f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564abe204e38 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564abe204e18 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564abe204d78 't2507' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564abe204ff0 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564abe204eb0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x564abe204e88 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564abe204e50 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x564abe205008 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564abe204ed0 <col:39> 'void *(void *)' Function 0x564abe201ad8 'P1' 'void *(void *)'
    | `-ParenExpr 0x564abe204f50 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x564abe204f28 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564abe204ef0 <col:52> 'int' 0
    |-DeclStmt 0x564abe205098 <line:778:3, col:18>
    | `-VarDecl 0x564abe205030 <col:3, col:13> col:13 used t2508 'pthread_t':'unsigned long'
    |-CallExpr 0x564abe205240 <line:779:3, col:54> 'int'
    | |-ImplicitCastExpr 0x564abe205228 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564abe2050b0 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564abe1e78f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564abe2050f0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564abe2050d0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564abe205030 't2508' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564abe205280 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564abe205168 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x564abe205140 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564abe205108 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x564abe205298 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564abe205188 <col:39> 'void *(void *)' Function 0x564abe202e48 'P2' 'void *(void *)'
    | `-ParenExpr 0x564abe205208 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x564abe2051e0 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564abe2051a8 <col:52> 'int' 0
    |-CallExpr 0x564abe2052e8 <line:780:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564abe2052d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564abe2052b0 <col:3> 'void ()' Function 0x564abe1a7350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564abe2053b8 <line:781:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x564abe205308 <col:3> '_Bool' lvalue Var 0x564abe200628 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x564abe2053a0 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x564abe205380 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x564abe205368 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x564abe205328 <col:21> 'int' lvalue Var 0x564abe200590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x564abe205348 <col:41> 'int' 3
    |-CallExpr 0x564abe205410 <line:782:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564abe2053f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564abe2053d8 <col:3> 'void ()' Function 0x564abe1a7410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564abe205488 <line:783:3, col:36> 'void'
    | |-ImplicitCastExpr 0x564abe205470 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564abe205430 <col:3> 'void (int)' Function 0x564abe1a6ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x564abe2054c8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x564abe2054b0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x564abe205450 <col:21> '_Bool' lvalue Var 0x564abe200628 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x564abe205518 <line:784:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564abe205500 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564abe2054e0 <col:3> 'void ()' Function 0x564abe1a7350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564abe205800 <line:785:3, col:103> 'int' '='
    | |-DeclRefExpr 0x564abe205538 <col:3> 'int' lvalue Var 0x564abe2008c0 'y' 'int'
    | `-ConditionalOperator 0x564abe2057d0 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x564abe2055f8 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x564abe2055b0 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x564abe205598 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x564abe205558 <col:7> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x564abe2055e0 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x564abe2055c8 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x564abe205578 <col:25> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x564abe2057b8 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x564abe205618 <col:42> 'int' lvalue Var 0x564abe200f70 'y$w_buff0' 'int'
    |   `-ParenExpr 0x564abe205798 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x564abe205768 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x564abe2056d8 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x564abe205690 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x564abe205678 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x564abe205638 <col:55> '_Bool' lvalue Var 0x564abe2010e0 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x564abe2056c0 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x564abe2056a8 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x564abe205658 <col:73> '_Bool' lvalue Var 0x564abe200c30 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x564abe205738 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x564abe2056f8 <col:90> 'int' lvalue Var 0x564abe201068 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x564abe205750 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x564abe205718 <col:102> 'int' lvalue Var 0x564abe2008c0 'y' 'int'
    |-BinaryOperator 0x564abe205a08 <line:786:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x564abe205820 <col:3> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x564abe2059f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564abe2059c0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x564abe2058e0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x564abe205898 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x564abe205880 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x564abe205840 <col:20> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x564abe2058c8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x564abe2058b0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x564abe205860 <col:38> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564abe205978 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564abe205930 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564abe205900 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x564abe2059a8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564abe205990 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564abe205958 <col:66> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x564abe205cf0 <line:787:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x564abe205a28 <col:3> '_Bool' lvalue Var 0x564abe2010e0 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x564abe205cd8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564abe205ca8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x564abe205bc8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x564abe205ae8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x564abe205aa0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x564abe205a88 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x564abe205a48 <col:20> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x564abe205ad0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x564abe205ab8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x564abe205a68 <col:38> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x564abe205ba8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x564abe205b60 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x564abe205b48 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x564abe205b08 <col:56> '_Bool' lvalue Var 0x564abe2010e0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x564abe205b90 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x564abe205b78 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x564abe205b28 <col:74> '_Bool' lvalue Var 0x564abe200c30 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564abe205c60 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564abe205c18 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564abe205be8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x564abe205c90 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564abe205c78 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564abe205c40 <col:102> '_Bool' lvalue Var 0x564abe2010e0 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x564abe205ef8 <line:788:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x564abe205d10 <col:3> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564abe205ee0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564abe205eb0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x564abe205dd0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x564abe205d88 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x564abe205d70 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x564abe205d30 <col:20> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x564abe205db8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x564abe205da0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x564abe205d50 <col:38> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564abe205e68 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564abe205e20 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564abe205df0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x564abe205e98 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564abe205e80 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564abe205e48 <col:66> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x564abe2061f8 <line:789:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x564abe205f18 <col:3> '_Bool' lvalue Var 0x564abe200c30 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564abe2061e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564abe2061b0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x564abe2060d0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x564abe205ff0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x564abe205f90 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x564abe205f78 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x564abe205f38 <col:20> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x564abe205fd8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x564abe205fc0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x564abe205f58 <col:38> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x564abe2060b0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x564abe206068 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x564abe206050 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x564abe206010 <col:56> '_Bool' lvalue Var 0x564abe2010e0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x564abe206098 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x564abe206080 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x564abe206030 <col:74> '_Bool' lvalue Var 0x564abe200c30 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564abe206168 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564abe206120 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564abe2060f0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x564abe206198 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564abe206180 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564abe206148 <col:102> '_Bool' lvalue Var 0x564abe200c30 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x564abe206250 <line:790:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564abe206238 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564abe206218 <col:3> 'void ()' Function 0x564abe1a7410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564abe2062a8 <line:791:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564abe206290 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564abe206270 <col:3> 'void ()' Function 0x564abe1a7350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564abe206358 <line:792:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x564abe2062c8 <col:3> '_Bool' lvalue Var 0x564abe201278 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x564abe206340 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x564abe206320 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x564abe206308 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x564abe2062e8 <col:19> 'void *(void)' Function 0x564abe1a6e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x564abe206408 <line:793:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x564abe206378 <col:3> '_Bool' lvalue Var 0x564abe2012f0 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x564abe2063f0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x564abe2063d0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x564abe2063b8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x564abe206398 <col:19> 'void *(void)' Function 0x564abe1a6e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x564abe206480 <line:794:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x564abe206428 <col:3> '_Bool' lvalue Var 0x564abe200958 'y$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x564abe206468 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x564abe206448 <col:21> '_Bool' lvalue Var 0x564abe2012f0 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x564abe2064f8 <line:795:3, col:15> 'int' '='
    | |-DeclRefExpr 0x564abe2064a0 <col:3> 'int' lvalue Var 0x564abe2009d8 'y$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x564abe2064e0 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x564abe2064c0 <col:15> 'int' lvalue Var 0x564abe2008c0 'y' 'int'
    |-BinaryOperator 0x564abe206930 <line:796:3, col:162> 'int' '='
    | |-DeclRefExpr 0x564abe206518 <col:3> 'int' lvalue Var 0x564abe2008c0 'y' 'int'
    | `-ConditionalOperator 0x564abe206900 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x564abe206728 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x564abe206648 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x564abe206570 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x564abe206558 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x564abe206538 <col:8> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x564abe206628 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x564abe2065c0 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x564abe2065a8 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x564abe206588 <col:27> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x564abe206610 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x564abe2065f8 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x564abe2065d8 <col:46> '_Bool' lvalue Var 0x564abe2010e0 'y$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x564abe206708 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x564abe2066a0 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x564abe206688 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x564abe206668 <col:65> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x564abe2066f0 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x564abe2066d8 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x564abe2066b8 <col:84> '_Bool' lvalue Var 0x564abe200c30 'y$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x564abe2068e8 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x564abe206748 <col:101> 'int' lvalue Var 0x564abe2008c0 'y' 'int'
    |   `-ParenExpr 0x564abe2068c8 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x564abe206898 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x564abe206808 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x564abe2067c0 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x564abe2067a8 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x564abe206768 <col:106> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x564abe2067f0 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x564abe2067d8 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x564abe206788 <col:124> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x564abe206868 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x564abe206828 <col:141> 'int' lvalue Var 0x564abe200f70 'y$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x564abe206880 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x564abe206848 <col:153> 'int' lvalue Var 0x564abe201068 'y$w_buff1' 'int'
    |-BinaryOperator 0x564abe206e40 <line:797:3, col:208> 'int' '='
    | |-DeclRefExpr 0x564abe206950 <col:3> 'int' lvalue Var 0x564abe200f70 'y$w_buff0' 'int'
    | `-ConditionalOperator 0x564abe206e10 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x564abe206de0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x564abe206dc8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x564abe206970 <col:15> '_Bool' lvalue Var 0x564abe2012f0 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x564abe206df8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x564abe206990 <col:31> 'int' lvalue Var 0x564abe200f70 'y$w_buff0' 'int'
    |   `-ParenExpr 0x564abe206da8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x564abe206d78 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x564abe206ba0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x564abe206ac0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x564abe2069e8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x564abe2069d0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x564abe2069b0 <col:45> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x564abe206aa0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x564abe206a38 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x564abe206a20 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x564abe206a00 <col:64> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x564abe206a88 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x564abe206a70 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x564abe206a50 <col:83> '_Bool' lvalue Var 0x564abe2010e0 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x564abe206b80 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x564abe206b18 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x564abe206b00 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x564abe206ae0 <col:102> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x564abe206b68 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x564abe206b50 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x564abe206b30 <col:121> '_Bool' lvalue Var 0x564abe200c30 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x564abe206d60 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x564abe206bc0 <col:138> 'int' lvalue Var 0x564abe200f70 'y$w_buff0' 'int'
    |       `-ParenExpr 0x564abe206d40 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x564abe206d10 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x564abe206c80 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x564abe206c38 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x564abe206c20 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x564abe206be0 <col:151> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x564abe206c68 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x564abe206c50 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x564abe206c00 <col:169> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x564abe206ce0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x564abe206ca0 <col:186> 'int' lvalue Var 0x564abe200f70 'y$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x564abe206cf8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x564abe206cc0 <col:198> 'int' lvalue Var 0x564abe200f70 'y$w_buff0' 'int'
    |-BinaryOperator 0x564abe207370 <line:798:3, col:208> 'int' '='
    | |-DeclRefExpr 0x564abe206e60 <col:3> 'int' lvalue Var 0x564abe201068 'y$w_buff1' 'int'
    | `-ConditionalOperator 0x564abe207340 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x564abe207310 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x564abe2072f8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x564abe206e80 <col:15> '_Bool' lvalue Var 0x564abe2012f0 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x564abe207328 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x564abe206ea0 <col:31> 'int' lvalue Var 0x564abe201068 'y$w_buff1' 'int'
    |   `-ParenExpr 0x564abe2072d8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x564abe2072a8 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x564abe2070d0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x564abe206ff0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x564abe206ef8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x564abe206ee0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x564abe206ec0 <col:45> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x564abe206fd0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x564abe206f48 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x564abe206f30 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x564abe206f10 <col:64> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x564abe206f98 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x564abe206f80 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x564abe206f60 <col:83> '_Bool' lvalue Var 0x564abe2010e0 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x564abe2070b0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x564abe207048 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x564abe207030 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x564abe207010 <col:102> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x564abe207098 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x564abe207080 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x564abe207060 <col:121> '_Bool' lvalue Var 0x564abe200c30 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x564abe207290 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x564abe2070f0 <col:138> 'int' lvalue Var 0x564abe201068 'y$w_buff1' 'int'
    |       `-ParenExpr 0x564abe207270 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x564abe207240 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x564abe2071b0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x564abe207168 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x564abe207150 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x564abe207110 <col:151> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x564abe207198 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x564abe207180 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x564abe207130 <col:169> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x564abe207210 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x564abe2071d0 <col:186> 'int' lvalue Var 0x564abe201068 'y$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x564abe207228 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x564abe2071f0 <col:198> 'int' lvalue Var 0x564abe201068 'y$w_buff1' 'int'
    |-BinaryOperator 0x564abe207918 <line:799:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x564abe207390 <col:3> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x564abe207900 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564abe2078d0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x564abe207888 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564abe207870 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x564abe2073b0 <col:20> '_Bool' lvalue Var 0x564abe2012f0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x564abe2078b8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564abe2078a0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x564abe2073d0 <col:36> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x564abe207850 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x564abe207820 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x564abe2075e0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x564abe207500 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x564abe207428 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x564abe207410 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x564abe2073f0 <col:55> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x564abe2074e0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x564abe207478 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x564abe207460 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x564abe207440 <col:74> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x564abe2074c8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x564abe2074b0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x564abe207490 <col:93> '_Bool' lvalue Var 0x564abe2010e0 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x564abe2075c0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x564abe207558 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x564abe207540 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x564abe207520 <col:112> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x564abe2075a8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x564abe207590 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x564abe207570 <col:131> '_Bool' lvalue Var 0x564abe200c30 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x564abe207808 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x564abe2077f0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x564abe207600 <col:148> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x564abe2077d0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x564abe2077a0 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x564abe2076c0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x564abe207678 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x564abe207660 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x564abe207620 <col:166> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x564abe2076a8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x564abe207690 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x564abe207640 <col:184> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x564abe207758 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x564abe207710 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x564abe2076e0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x564abe207788 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x564abe207770 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x564abe207738 <col:212> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x564abe207ee0 <line:800:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x564abe207938 <col:3> '_Bool' lvalue Var 0x564abe2010e0 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x564abe207ec8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564abe207e98 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x564abe207e50 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564abe207e38 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x564abe207958 <col:20> '_Bool' lvalue Var 0x564abe2012f0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x564abe207e80 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564abe207e68 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x564abe207978 <col:36> '_Bool' lvalue Var 0x564abe2010e0 'y$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x564abe207e18 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x564abe207de8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x564abe207b88 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x564abe207aa8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x564abe2079d0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x564abe2079b8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x564abe207998 <col:55> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x564abe207a88 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x564abe207a20 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x564abe207a08 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x564abe2079e8 <col:74> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x564abe207a70 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x564abe207a58 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x564abe207a38 <col:93> '_Bool' lvalue Var 0x564abe2010e0 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x564abe207b68 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x564abe207b00 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x564abe207ae8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x564abe207ac8 <col:112> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x564abe207b50 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x564abe207b38 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x564abe207b18 <col:131> '_Bool' lvalue Var 0x564abe200c30 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x564abe207dd0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x564abe207db8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x564abe207ba8 <col:148> '_Bool' lvalue Var 0x564abe2010e0 'y$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x564abe207d98 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x564abe207d68 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x564abe207c68 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x564abe207c20 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x564abe207c08 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x564abe207bc8 <col:166> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x564abe207c50 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x564abe207c38 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x564abe207be8 <col:184> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x564abe207d38 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x564abe207cb8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x564abe207c88 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x564abe207d50 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x564abe207d10 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x564abe207ce0 <col:219> 'int' 0
    |-BinaryOperator 0x564abe208498 <line:801:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x564abe207f00 <col:3> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564abe208480 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564abe208450 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x564abe208408 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564abe2083f0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x564abe207f20 <col:20> '_Bool' lvalue Var 0x564abe2012f0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x564abe208438 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564abe208420 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x564abe207f40 <col:36> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x564abe2083d0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x564abe2083a0 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x564abe208160 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x564abe208080 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x564abe207f98 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x564abe207f80 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x564abe207f60 <col:55> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x564abe208060 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x564abe207ff8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x564abe207fe0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x564abe207fb0 <col:74> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x564abe208048 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x564abe208030 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x564abe208010 <col:93> '_Bool' lvalue Var 0x564abe2010e0 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x564abe208140 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x564abe2080d8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x564abe2080c0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x564abe2080a0 <col:112> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x564abe208128 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x564abe208110 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x564abe2080f0 <col:131> '_Bool' lvalue Var 0x564abe200c30 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x564abe208388 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x564abe208370 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x564abe208180 <col:148> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x564abe208350 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x564abe208320 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x564abe208240 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x564abe2081f8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x564abe2081e0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x564abe2081a0 <col:166> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x564abe208228 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x564abe208210 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x564abe2081c0 <col:184> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x564abe2082d8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x564abe208290 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x564abe208260 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x564abe208308 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x564abe2082f0 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x564abe2082b8 <col:212> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x564abe208a60 <line:802:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x564abe2084b8 <col:3> '_Bool' lvalue Var 0x564abe200c30 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564abe208a48 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564abe208a18 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x564abe2089d0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564abe2089b8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x564abe2084d8 <col:20> '_Bool' lvalue Var 0x564abe2012f0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x564abe208a00 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564abe2089e8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x564abe2084f8 <col:36> '_Bool' lvalue Var 0x564abe200c30 'y$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x564abe208998 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x564abe208968 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x564abe208708 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x564abe208628 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x564abe208550 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x564abe208538 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x564abe208518 <col:55> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x564abe208608 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x564abe2085a0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x564abe208588 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x564abe208568 <col:74> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x564abe2085f0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x564abe2085d8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x564abe2085b8 <col:93> '_Bool' lvalue Var 0x564abe2010e0 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x564abe2086e8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x564abe208680 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x564abe208668 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x564abe208648 <col:112> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x564abe2086d0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x564abe2086b8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x564abe208698 <col:131> '_Bool' lvalue Var 0x564abe200c30 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x564abe208950 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x564abe208938 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x564abe208728 <col:148> '_Bool' lvalue Var 0x564abe200c30 'y$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x564abe208918 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x564abe2088e8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x564abe2087e8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x564abe2087a0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x564abe208788 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x564abe208748 <col:166> '_Bool' lvalue Var 0x564abe200fe8 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x564abe2087d0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x564abe2087b8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x564abe208768 <col:184> '_Bool' lvalue Var 0x564abe200a50 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x564abe2088b8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x564abe208838 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x564abe208808 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x564abe2088d0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x564abe208890 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x564abe208860 <col:219> 'int' 0
    |-BinaryOperator 0x564abe208c98 <line:803:3, col:49> '_Bool' '='
    | |-DeclRefExpr 0x564abe208a80 <col:3> '_Bool' lvalue Var 0x564abe2006a0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x564abe208c80 <col:21, col:49> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x564abe208c68 <col:21, col:49> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x564abe208c48 <col:22, col:49> 'int'
    |       `-BinaryOperator 0x564abe208c28 <col:23, col:48> 'int' '&&'
    |         |-BinaryOperator 0x564abe208b90 <col:23, col:38> 'int' '&&'
    |         | |-BinaryOperator 0x564abe208af8 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x564abe208ae0 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x564abe208aa0 <col:23> 'int' lvalue Var 0x564abe2007a0 'x' 'int'
    |         | | `-IntegerLiteral 0x564abe208ac0 <col:28> 'int' 2
    |         | `-BinaryOperator 0x564abe208b70 <col:33, col:38> 'int' '=='
    |         |   |-ImplicitCastExpr 0x564abe208b58 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x564abe208b18 <col:33> 'int' lvalue Var 0x564abe2008c0 'y' 'int'
    |         |   `-IntegerLiteral 0x564abe208b38 <col:38> 'int' 2
    |         `-BinaryOperator 0x564abe208c08 <col:43, col:48> 'int' '=='
    |           |-ImplicitCastExpr 0x564abe208bf0 <col:43> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x564abe208bb0 <col:43> 'int' lvalue Var 0x564abe2011e0 'z' 'int'
    |           `-IntegerLiteral 0x564abe208bd0 <col:48> 'int' 2
    |-BinaryOperator 0x564abe208dc8 <line:804:3, col:37> 'int' '='
    | |-DeclRefExpr 0x564abe208cb8 <col:3> 'int' lvalue Var 0x564abe2008c0 'y' 'int'
    | `-ConditionalOperator 0x564abe208d98 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x564abe208d50 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x564abe208d38 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x564abe208cd8 <col:7> '_Bool' lvalue Var 0x564abe200958 'y$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x564abe208d68 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x564abe208cf8 <col:25> 'int' lvalue Var 0x564abe2009d8 'y$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x564abe208d80 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x564abe208d18 <col:37> 'int' lvalue Var 0x564abe2008c0 'y' 'int'
    |-BinaryOperator 0x564abe208e60 <line:805:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x564abe208de8 <col:3> '_Bool' lvalue Var 0x564abe200958 'y$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x564abe208e38 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x564abe208e08 <col:28> 'int' 0
    |-CallExpr 0x564abe208eb8 <line:806:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564abe208ea0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564abe208e80 <col:3> 'void ()' Function 0x564abe1a7410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564abe208f30 <line:807:3, col:36> 'void'
    | |-ImplicitCastExpr 0x564abe208f18 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564abe208ed8 <col:3> 'void (int)' Function 0x564abe1a70d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x564abe208f70 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x564abe208f58 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x564abe208ef8 <col:21> '_Bool' lvalue Var 0x564abe2006a0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x564abe208fa8 <line:808:3, col:10>
      `-IntegerLiteral 0x564abe208f88 <col:10> 'int' 0
