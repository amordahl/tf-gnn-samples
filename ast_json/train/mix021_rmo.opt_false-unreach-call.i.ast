TranslationUnitDecl 0x55b6d1e8cf88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55b6d1e8d848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55b6d1e8d520 '__int128'
|-TypedefDecl 0x55b6d1e8d8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55b6d1e8d540 'unsigned __int128'
|-TypedefDecl 0x55b6d1e8dbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55b6d1e8d990 'struct __NSConstantString_tag'
|   `-Record 0x55b6d1e8d910 '__NSConstantString_tag'
|-TypedefDecl 0x55b6d1e8dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55b6d1e8dc20 'char *'
|   `-BuiltinType 0x55b6d1e8d020 'char'
|-TypedefDecl 0x55b6d1eccb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55b6d1e8df00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55b6d1e8dd40 'struct __va_list_tag'
|     `-Record 0x55b6d1e8dcc0 '__va_list_tag'
|-FunctionDecl 0x55b6d1eccca0 <pthread-wmm/mix021_rmo.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55b6d1eccbd0 <col:31> col:34 'int'
|-FunctionDecl 0x55b6d1ecce68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55b6d1eccf90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55b6d1ecd0d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55b6d1ecd048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55b6d1ecd308 <col:40, col:99>
|   |-IfStmt 0x55b6d1ecd2d8 <col:42, col:88>
|   | |-UnaryOperator 0x55b6d1ecd1b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55b6d1ecd1a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55b6d1ecd180 <col:47> 'int' lvalue ParmVar 0x55b6d1ecd048 'expression' 'int'
|   | `-CompoundStmt 0x55b6d1ecd2c0 <col:59, col:88>
|   |   `-LabelStmt 0x55b6d1ecd2a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55b6d1ecd238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55b6d1ecd220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55b6d1ecd1d0 <col:68> 'void () __attribute__((noreturn))' Function 0x55b6d1eccf90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55b6d1ecd2f0 <col:89>
|   `-ReturnStmt 0x55b6d1ecd2f8 <col:91>
|-FunctionDecl 0x55b6d1ecd350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55b6d1ecd410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55b6d1ecd790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55b6d1ecd4c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55b6d1ecd548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55b6d1ecd5c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55b6d1ecd648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55b6d1ecd850 <line:10:22>
|-FunctionDecl 0x55b6d1ef38a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55b6d1ecd8c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55b6d1ecd940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55b6d1ecd9c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55b6d1ecda40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55b6d1ef3960 <line:13:22>
|-FunctionDecl 0x55b6d1ef3c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55b6d1ef39d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55b6d1ef3a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55b6d1ef3ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55b6d1ef3cc8 <line:15:22>
|-TypedefDecl 0x55b6d1ef3d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55b6d1e8d0e0 'unsigned char'
|-TypedefDecl 0x55b6d1ef3da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55b6d1e8d100 'unsigned short'
|-TypedefDecl 0x55b6d1ef3e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55b6d1e8d120 'unsigned int'
|-TypedefDecl 0x55b6d1ef3e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55b6d1e8d140 'unsigned long'
|-TypedefDecl 0x55b6d1ef3ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55b6d1e8d040 'signed char'
|-TypedefDecl 0x55b6d1ef3f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55b6d1e8d0e0 'unsigned char'
|-TypedefDecl 0x55b6d1ef3fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55b6d1e8d060 'short'
|-TypedefDecl 0x55b6d1ef4048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55b6d1e8d100 'unsigned short'
|-TypedefDecl 0x55b6d1ef40b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55b6d1e8d080 'int'
|-TypedefDecl 0x55b6d1ef4128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55b6d1e8d120 'unsigned int'
|-TypedefDecl 0x55b6d1ef4198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55b6d1e8d0a0 'long'
|-TypedefDecl 0x55b6d1ef4208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55b6d1e8d140 'unsigned long'
|-TypedefDecl 0x55b6d1ef4278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55b6d1e8d0a0 'long'
|-TypedefDecl 0x55b6d1ef42e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55b6d1e8d140 'unsigned long'
|-TypedefDecl 0x55b6d1ef4358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55b6d1e8d140 'unsigned long'
|-TypedefDecl 0x55b6d1ef43c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55b6d1e8d120 'unsigned int'
|-TypedefDecl 0x55b6d1ef4438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55b6d1e8d120 'unsigned int'
|-TypedefDecl 0x55b6d1ef44a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55b6d1e8d140 'unsigned long'
|-TypedefDecl 0x55b6d1ef4518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55b6d1e8d140 'unsigned long'
|-TypedefDecl 0x55b6d1ef4588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55b6d1e8d120 'unsigned int'
|-TypedefDecl 0x55b6d1ef45f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55b6d1e8d140 'unsigned long'
|-TypedefDecl 0x55b6d1ef4668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55b6d1e8d0a0 'long'
|-TypedefDecl 0x55b6d1ef46d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55b6d1e8d0a0 'long'
|-TypedefDecl 0x55b6d1ef4748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55b6d1e8d080 'int'
|-RecordDecl 0x55b6d1ef47a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55b6d1ef4918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55b6d1ef49d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55b6d1ef4970 'struct __fsid_t' sugar
|   `-RecordType 0x55b6d1ef4820 '__fsid_t'
|     `-Record 0x55b6d1ef47a0 ''
|-TypedefDecl 0x55b6d1ef4a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55b6d1e8d0a0 'long'
|-TypedefDecl 0x55b6d1ef4ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55b6d1e8d140 'unsigned long'
|-TypedefDecl 0x55b6d1ef4b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55b6d1e8d140 'unsigned long'
|-TypedefDecl 0x55b6d1ef4ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55b6d1e8d120 'unsigned int'
|-TypedefDecl 0x55b6d1ef4c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55b6d1e8d0a0 'long'
|-TypedefDecl 0x55b6d1ef4c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55b6d1e8d120 'unsigned int'
|-TypedefDecl 0x55b6d1ef4cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55b6d1e8d0a0 'long'
|-TypedefDecl 0x55b6d1ef4d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55b6d1e8d080 'int'
|-TypedefDecl 0x55b6d1ef4dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55b6d1e8d080 'int'
|-TypedefDecl 0x55b6d1ef4e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55b6d1e8d080 'int'
|-TypedefDecl 0x55b6d1ef4eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55b6d1e8d7a0 'void *'
|   `-BuiltinType 0x55b6d1e8cfe0 'void'
|-TypedefDecl 0x55b6d1ef4f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55b6d1e8d0a0 'long'
|-TypedefDecl 0x55b6d1ef4f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55b6d1e8d0a0 'long'
|-TypedefDecl 0x55b6d1ef5008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55b6d1e8d0a0 'long'
|-TypedefDecl 0x55b6d1ef5078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55b6d1e8d140 'unsigned long'
|-TypedefDecl 0x55b6d1ef50e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55b6d1e8d140 'unsigned long'
|-TypedefDecl 0x55b6d1ef5158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55b6d1e8d140 'unsigned long'
|-TypedefDecl 0x55b6d1ef51c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55b6d1e8d140 'unsigned long'
|-TypedefDecl 0x55b6d1ef5238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55b6d1e8d0a0 'long'
|-TypedefDecl 0x55b6d1ef52a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55b6d1e8d0a0 'long'
|-TypedefDecl 0x55b6d1ef5318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55b6d1e8d0a0 'long'
|-TypedefDecl 0x55b6d1ef5388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55b6d1e8d140 'unsigned long'
|-TypedefDecl 0x55b6d1ef5418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55b6d1ef53e0 '__off64_t' sugar
|   |-Typedef 0x55b6d1ef46d8 '__off64_t'
|   `-BuiltinType 0x55b6d1e8d0a0 'long'
|-TypedefDecl 0x55b6d1ef5510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55b6d1ef54d0 '__quad_t *'
|   `-TypedefType 0x55b6d1ef5470 '__quad_t' sugar
|     |-Typedef 0x55b6d1ef4278 '__quad_t'
|     `-BuiltinType 0x55b6d1e8d0a0 'long'
|-TypedefDecl 0x55b6d1ef5580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55b6d1e8dc20 'char *'
|   `-BuiltinType 0x55b6d1e8d020 'char'
|-TypedefDecl 0x55b6d1ef55f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55b6d1e8d0a0 'long'
|-TypedefDecl 0x55b6d1ef5660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55b6d1e8d120 'unsigned int'
|-FunctionDecl 0x55b6d1ef57a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55b6d1ef56d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55b6d1ef5ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55b6d1ef5ad8 <line:72:3, col:34>
|     `-CallExpr 0x55b6d1ef5a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55b6d1ef5a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55b6d1ef5a10 <col:10> '<builtin fn type>' Function 0x55b6d1ef5880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55b6d1ef5ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55b6d1ef5a30 <col:29> 'unsigned int' lvalue ParmVar 0x55b6d1ef56d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55b6d1ef5880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55b6d1ef5920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55b6d1ef5990 <col:10> Implicit
| `-ConstAttr 0x55b6d1ef59e8 <col:10> Implicit
|-FunctionDecl 0x55b6d1ef5c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55b6d1ef5b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55b6d1ef5f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55b6d1ef5f48 <line:77:3, col:34>
|     `-CallExpr 0x55b6d1ef5f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55b6d1ef5ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55b6d1ef5e78 <col:10> '<builtin fn type>' Function 0x55b6d1ef5ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55b6d1ef5f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55b6d1ef5e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55b6d1ef5b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55b6d1ef5ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55b6d1ef5d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55b6d1ef5df8 <col:10> Implicit
| `-ConstAttr 0x55b6d1ef5e50 <col:10> Implicit
|-TypedefDecl 0x55b6d1ef5f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55b6d1e8d140 'unsigned long'
|-TypedefDecl 0x55b6d1ef6018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55b6d1ef5fe0 '__time_t' sugar
|   |-Typedef 0x55b6d1ef4c18 '__time_t'
|   `-BuiltinType 0x55b6d1e8d0a0 'long'
|-RecordDecl 0x55b6d1ef6070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55b6d1ef6128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55b6d1ef61b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55b6d1ef6248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55b6d1ef6210 '__pid_t' sugar
|   |-Typedef 0x55b6d1ef4748 '__pid_t'
|   `-BuiltinType 0x55b6d1e8d080 'int'
|-RecordDecl 0x55b6d1ef62a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55b6d1ef6360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55b6d1ef63b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55b6d1ef6470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55b6d1ef64d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55b6d1e8d140 'unsigned long'
|-RecordDecl 0x55b6d1ef6530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55b6d1ef67c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55b6d1ef88b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55b6d1ef6810 'struct cpu_set_t' sugar
|   `-RecordType 0x55b6d1ef65b0 'cpu_set_t'
|     `-Record 0x55b6d1ef6530 ''
|-FunctionDecl 0x55b6d1ef8b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55b6d1ef8958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55b6d1ef8a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55b6d1ef8c38 <line:107:19>
|-FunctionDecl 0x55b6d1ef8e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55b6d1ef8ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55b6d1ef8eb8 <col:69>
|-FunctionDecl 0x55b6d1ef9030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55b6d1ef8f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55b6d1ef90d8 <col:64>
|-FunctionDecl 0x55b6d1ef9398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55b6d1ef9140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55b6d1ef9278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55b6d1ef9448 <line:113:22>
|-FunctionDecl 0x55b6d1ef96c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55b6d1ef94b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55b6d1ef95a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55b6d1ef9778 <col:88>
|-FunctionDecl 0x55b6d1ef9a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55b6d1ef97e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55b6d1ef98c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55b6d1ef9950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55b6d1ef9b50 <col:62>
|-FunctionDecl 0x55b6d1ef9cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55b6d1ef9bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55b6d1ef9d70 <col:63>
|-FunctionDecl 0x55b6d1ef9e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55b6d1ef9f38 <col:47>
|-FunctionDecl 0x55b6d1efa040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55b6d1ef9fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55b6d1efa0e8 <col:69>
|-FunctionDecl 0x55b6d1efa1f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55b6d1efa158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55b6d1efa298 <col:69>
|-FunctionDecl 0x55b6d1efa558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55b6d1efa300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55b6d1efa438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55b6d1efa608 <col:88>
|-TypedefDecl 0x55b6d1efa698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55b6d1efa660 '__clock_t' sugar
|   |-Typedef 0x55b6d1ef4a58 '__clock_t'
|   `-BuiltinType 0x55b6d1e8d0a0 'long'
|-TypedefDecl 0x55b6d1efa728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55b6d1efa6f0 '__clockid_t' sugar
|   |-Typedef 0x55b6d1ef4e48 '__clockid_t'
|   `-BuiltinType 0x55b6d1e8d080 'int'
|-TypedefDecl 0x55b6d1efa7b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55b6d1efa780 '__timer_t' sugar
|   |-Typedef 0x55b6d1ef4eb8 '__timer_t'
|   `-PointerType 0x55b6d1e8d7a0 'void *'
|     `-BuiltinType 0x55b6d1e8cfe0 'void'
|-RecordDecl 0x55b6d1efa810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55b6d1efa8e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55b6d1efa950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55b6d1efa9b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55b6d1efaa20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55b6d1efaa88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55b6d1efaaf0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55b6d1efab58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55b6d1efabc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55b6d1efac28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55b6d1efac90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55b6d1efacf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55b6d1efad48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55b6d1efae18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55b6d1efae88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55b6d1efaf30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55b6d1efb100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55b6d1efb1a0 <col:45>
|-FunctionDecl 0x55b6d1efb380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55b6d1efb270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55b6d1efb428 <col:54>
|-FunctionDecl 0x55b6d1efb628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55b6d1efb490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55b6d1efb508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55b6d1efb6d8 <line:157:22>
| `-ConstAttr 0x55b6d1efb730 <col:63>
|-FunctionDecl 0x55b6d1efc560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55b6d1efb828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55b6d1efc608 <col:56>
|-FunctionDecl 0x55b6d1efc9b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55b6d1efc678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55b6d1efc6f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55b6d1efc770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55b6d1efc868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55b6d1efca70 <col:54>
|-RecordDecl 0x55b6d1efcac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55b6d1efcb78 parent 0x55b6d1e8cf88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55b6d1efcdd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55b6d1efce78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55b6d1efcee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55b6d1efcf48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55b6d1efd038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55b6d1efd158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55b6d1efd100 'struct __locale_struct *'
|   `-ElaboratedType 0x55b6d1efd090 'struct __locale_struct' sugar
|     `-RecordType 0x55b6d1efcb50 'struct __locale_struct'
|       `-Record 0x55b6d1efcac8 '__locale_struct'
|-TypedefDecl 0x55b6d1efd208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55b6d1efd1d0 '__locale_t' sugar
|   |-Typedef 0x55b6d1efd158 '__locale_t'
|   `-PointerType 0x55b6d1efd100 'struct __locale_struct *'
|     `-ElaboratedType 0x55b6d1efd090 'struct __locale_struct' sugar
|       `-RecordType 0x55b6d1efcb50 'struct __locale_struct'
|         `-Record 0x55b6d1efcac8 '__locale_struct'
|-FunctionDecl 0x55b6d1efd610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55b6d1efd278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55b6d1efd2f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55b6d1efd370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55b6d1efd400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55b6d1efd478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55b6d1efd6d8 <col:40>
|-FunctionDecl 0x55b6d1efd8c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55b6d1efd7a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55b6d1efd970 <col:66>
|-FunctionDecl 0x55b6d1efda80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55b6d1efd9d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55b6d1efdb28 <col:69>
|-FunctionDecl 0x55b6d1efdd58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55b6d1efdb90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55b6d1efdc20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55b6d1efde08 <col:52>
|-FunctionDecl 0x55b6d1efdfb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55b6d1efde70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55b6d1efdf00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55b6d1efe060 <col:55>
|-FunctionDecl 0x55b6d1efe1f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55b6d1efe0e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55b6d1efe2a0 <col:62>
|-FunctionDecl 0x55b6d1efe418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55b6d1efe308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55b6d1efe4c0 <col:60>
|-FunctionDecl 0x55b6d1efe718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55b6d1efe578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55b6d1efe5f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55b6d1efe7c8 <col:44>
|-FunctionDecl 0x55b6d1efe9d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55b6d1efe830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55b6d1efe8b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55b6d1efea88 <col:49>
|-VarDecl 0x55b6d1efeb88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55b6d1efec08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55b6d1efec88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55b6d1efed50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55b6d1efee80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55b6d1efef20 <col:42>
|-VarDecl 0x55b6d1efef90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55b6d1eff010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55b6d1eff198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55b6d1eff088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55b6d1eff240 <col:57>
|-FunctionDecl 0x55b6d1eff350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55b6d1eff2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55b6d1eff3f8 <col:56>
|-FunctionDecl 0x55b6d1f00540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55b6d1eff478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55b6d1f005e8 <col:59>
|-FunctionDecl 0x55b6d1f006f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55b6d1f00658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55b6d1f00798 <col:48>
| `-ConstAttr 0x55b6d1f007f0 <col:89>
|-FunctionDecl 0x55b6d1f00a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55b6d1f008a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55b6d1f00938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55b6d1f00cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55b6d1f00b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b6d1f00bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55b6d1f00d68 <col:88>
|-FunctionDecl 0x55b6d1f00f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55b6d1f00dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b6d1f00e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55b6d1f00fb0 <col:88>
|-FunctionDecl 0x55b6d1f011c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55b6d1f01018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b6d1f010a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55b6d1f01278 <line:208:22>
|-FunctionDecl 0x55b6d1f015e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55b6d1f012e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b6d1f01360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55b6d1f013f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55b6d1f01480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55b6d1f018e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55b6d1f016e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55b6d1f017c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55b6d1f01998 <col:85>
|-FunctionDecl 0x55b6d1f01d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55b6d1f01a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b6d1f01b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55b6d1f01c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55b6d1f01e40 <col:52>
|-FunctionDecl 0x55b6d1f01fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55b6d1f01ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55b6d1f02060 <col:61>
|-FunctionDecl 0x55b6d1f02560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55b6d1f020c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55b6d1f02148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55b6d1f02278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55b6d1f02368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55b6d1f02620 <col:62>
|-FunctionDecl 0x55b6d1f02838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55b6d1f02688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55b6d1f02718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55b6d1f028e8 <line:221:22>
|-FunctionDecl 0x55b6d1f029e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55b6d1f02950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55b6d1f02a90 <col:65>
|-TypedefDecl 0x55b6d1f02b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55b6d1e8d140 'unsigned long'
|-RecordDecl 0x55b6d1f02b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55b6d1f02ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55b6d1f02d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b6d1f02db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55b6d1f02d60 'union pthread_attr_t' sugar
|   `-RecordType 0x55b6d1f02be0 'union pthread_attr_t'
|     `-Record 0x55b6d1f02b58 'pthread_attr_t'
|-RecordDecl 0x55b6d1f02e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55b6d1f02f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55b6d1f03000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55b6d1f030b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55b6d1f03050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55b6d1f02e90 'struct __pthread_internal_list'
|     `-Record 0x55b6d1f02e10 '__pthread_internal_list'
|-RecordDecl 0x55b6d1f03120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55b6d1f031c8 parent 0x55b6d1e8cf88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55b6d1f032a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55b6d1f03308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55b6d1f03370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55b6d1f033d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55b6d1f03440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55b6d1f034a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55b6d1f07580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55b6d1f07630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55b6d1f07720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55b6d1f07788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b6d1f07910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55b6d1f078b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55b6d1f031a0 'pthread_mutex_t'
|     `-Record 0x55b6d1f03120 ''
|-RecordDecl 0x55b6d1f07980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55b6d1f07ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55b6d1f07b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55b6d1f07be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55b6d1f07b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55b6d1f07a00 'pthread_mutexattr_t'
|     `-Record 0x55b6d1f07980 ''
|-RecordDecl 0x55b6d1f07c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55b6d1f07cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55b6d1f07dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55b6d1f07e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55b6d1f07e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55b6d1f07ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55b6d1f07f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55b6d1f07fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55b6d1f08030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55b6d1f08098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55b6d1f08150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix021_rmo.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix021_rmo.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55b6d1f08240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55b6d1f082a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55b6d1f083e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55b6d1f08380 'union pthread_cond_t' sugar
|   `-RecordType 0x55b6d1f07cd0 'pthread_cond_t'
|     `-Record 0x55b6d1f07c50 ''
|-RecordDecl 0x55b6d1f08450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55b6d1f08590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55b6d1f085f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55b6d1f086b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55b6d1f08650 'union pthread_condattr_t' sugar
|   `-RecordType 0x55b6d1f084d0 'pthread_condattr_t'
|     `-Record 0x55b6d1f08450 ''
|-TypedefDecl 0x55b6d1f08738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55b6d1e8d120 'unsigned int'
|-TypedefDecl 0x55b6d1f087a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55b6d1e8d080 'int'
|-RecordDecl 0x55b6d1f08800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55b6d1f088a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55b6d1f08970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55b6d1f089d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55b6d1f08a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55b6d1f08aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55b6d1f08b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55b6d1f08b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55b6d1f08be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55b6d1f08c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55b6d1f08cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55b6d1f08d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55b6d1f08d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55b6d1f08e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix021_rmo.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix021_rmo.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55b6d1f08ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55b6d1f08f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b6d1f09090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55b6d1f09030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55b6d1f08880 'pthread_rwlock_t'
|     `-Record 0x55b6d1f08800 ''
|-RecordDecl 0x55b6d1f09100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55b6d1f09240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55b6d1f092a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b6d1f09360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55b6d1f09300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55b6d1f09180 'pthread_rwlockattr_t'
|     `-Record 0x55b6d1f09100 ''
|-TypedefDecl 0x55b6d1f093e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55b6d1e8d084 'volatile int' volatile
|   `-BuiltinType 0x55b6d1e8d080 'int'
|-RecordDecl 0x55b6d1f09440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55b6d1f0b5b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55b6d1f0b618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b6d1f0b6d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55b6d1f0b670 'union pthread_barrier_t' sugar
|   `-RecordType 0x55b6d1f094c0 'pthread_barrier_t'
|     `-Record 0x55b6d1f09440 ''
|-RecordDecl 0x55b6d1f0b740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55b6d1f0b840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55b6d1f0b8a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55b6d1f0b960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55b6d1f0b900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55b6d1f0b7c0 'pthread_barrierattr_t'
|     `-Record 0x55b6d1f0b740 ''
|-TypedefDecl 0x55b6d1f0ba78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55b6d1f0ba10 'long [8]' 8 
|   `-BuiltinType 0x55b6d1e8d0a0 'long'
|-EnumDecl 0x55b6d1f0bad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55b6d1f0bb98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55b6d1f0bbe8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55b6d1f0bc38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55b6d1f0bd08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55b6d1f0bd58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55b6d1f0bda8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55b6d1f0bdf8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55b6d1f0be80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55b6d1f0be68 <col:26> 'int'
| |   `-DeclRefExpr 0x55b6d1f0be48 <col:26> 'int' EnumConstant 0x55b6d1f0bd08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55b6d1f0bf08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55b6d1f0bef0 <col:29> 'int'
| |   `-DeclRefExpr 0x55b6d1f0bed0 <col:29> 'int' EnumConstant 0x55b6d1f0bd58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55b6d1f0bf90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55b6d1f0bf78 <col:30> 'int'
| |   `-DeclRefExpr 0x55b6d1f0bf58 <col:30> 'int' EnumConstant 0x55b6d1f0bda8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55b6d1f0c018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55b6d1f0c000 <col:27> 'int'
|     `-DeclRefExpr 0x55b6d1f0bfe0 <col:27> 'int' EnumConstant 0x55b6d1f0be80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55b6d1f0c068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55b6d1f0c138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55b6d1f0c1c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55b6d1f0c1a8 <col:30> 'int'
| |   `-DeclRefExpr 0x55b6d1f0c188 <col:30> 'int' EnumConstant 0x55b6d1f0c138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55b6d1f0c210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55b6d1f0c298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55b6d1f0c280 <col:29> 'int'
|     `-DeclRefExpr 0x55b6d1f0c260 <col:29> 'int' EnumConstant 0x55b6d1f0c210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55b6d1f0c2e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55b6d1f0c3b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55b6d1f0c408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55b6d1f0c458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55b6d1f0c4a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55b6d1f0c5c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55b6d1f0c610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55b6d1f0c660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55b6d1f0c6e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55b6d1f0c6d0 <col:31> 'int'
|     `-DeclRefExpr 0x55b6d1f0c6b0 <col:31> 'int' EnumConstant 0x55b6d1f0c5c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55b6d1f0c738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55b6d1f0c808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55b6d1f0c858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55b6d1f0c8a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55b6d1f0c978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55b6d1f0c9c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55b6d1f0ca18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55b6d1f0cae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55b6d1f0cb38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55b6d1f0cb88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55b6d1f0cdc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55b6d1f0ce30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55b6d1f0ce98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55b6d1f0cfb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55b6d1f0d008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55b6d1f0d0d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55b6d1f0d128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55b6d1f0d178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55b6d1f0d248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55b6d1f0d298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55b6d1f0d8f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55b6d1f0d390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55b6d1f0d4a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b6d1f0d6e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55b6d1f0d760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55b6d1f0d9b8 <col:47>
| |-NonNullAttr 0x55b6d1f0da10 <col:77, col:94> 1 3
| `-CallbackAttr 0x55b6d1f0da48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55b6d1f0db70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55b6d1f0daa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55b6d1f0ddc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55b6d1f0dc28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55b6d1f0dca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55b6d1f0df98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55b6d1f0de88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55b6d1f0e040 <col:60>
|-FunctionDecl 0x55b6d1f0e190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55b6d1f0e230 <col:54>
| `-ConstAttr 0x55b6d1f0e288 <col:95>
|-FunctionDecl 0x55b6d1f0e458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55b6d1f0e2c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b6d1f0e338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55b6d1f0e508 <line:394:19>
| `-ConstAttr 0x55b6d1f0e560 <col:60>
|-FunctionDecl 0x55b6d1f0ef68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55b6d1f0ee30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55b6d1f0f010 <col:71>
| `-NonNullAttr 0x55b6d1f0f068 <col:112, col:126> 1
|-FunctionDecl 0x55b6d1f0f170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55b6d1f0f0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55b6d1f0f218 <line:397:22>
| `-NonNullAttr 0x55b6d1f0f270 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f0f498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55b6d1f0f2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55b6d1f0f338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55b6d1f0f548 <line:400:22>
| `-NonNullAttr 0x55b6d1f0f5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b6d1f0f7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55b6d1f0f5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b6d1f0f668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55b6d1f0f858 <line:403:22>
| `-NonNullAttr 0x55b6d1f0f8b0 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f0fb08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55b6d1f0f8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55b6d1f0f9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55b6d1f0fbb8 <line:406:22>
| `-NonNullAttr 0x55b6d1f0fc10 <col:63, col:80> 1 2
|-FunctionDecl 0x55b6d1f10e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55b6d1f0fc58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b6d1f0fcd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55b6d1f10ef8 <line:409:22>
| `-NonNullAttr 0x55b6d1f10f50 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f11188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55b6d1f10f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b6d1f11028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55b6d1f11238 <line:412:22>
| `-NonNullAttr 0x55b6d1f11290 <col:63, col:80> 1 2
|-FunctionDecl 0x55b6d1f114c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55b6d1f112d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b6d1f11368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55b6d1f11578 <col:37>
| `-NonNullAttr 0x55b6d1f115d0 <col:78, col:95> 1 2
|-FunctionDecl 0x55b6d1f117b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b6d1f11618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b6d1f11698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55b6d1f11868 <line:418:22>
| `-NonNullAttr 0x55b6d1f118c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b6d1f11a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55b6d1f11908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b6d1f11988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55b6d1f11af8 <line:420:22>
| `-NonNullAttr 0x55b6d1f11b50 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f11cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b6d1f11b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b6d1f11c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55b6d1f11da8 <line:423:22>
| `-NonNullAttr 0x55b6d1f12e30 <col:63, col:80> 1 2
|-FunctionDecl 0x55b6d1f12fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55b6d1f12e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b6d1f12ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55b6d1f13068 <line:426:22>
| `-NonNullAttr 0x55b6d1f130c0 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f13268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b6d1f13108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b6d1f13188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55b6d1f13318 <line:429:22>
| `-NonNullAttr 0x55b6d1f13370 <col:63, col:80> 1 2
|-FunctionDecl 0x55b6d1f134f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55b6d1f133b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b6d1f13438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55b6d1f135a8 <line:431:22>
| `-NonNullAttr 0x55b6d1f13600 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f13828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55b6d1f13648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b6d1f136c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55b6d1f138d8 <line:434:22>
| |-NonNullAttr 0x55b6d1f13930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55b6d1f13968 <col:100> "" ""
|-FunctionDecl 0x55b6d1f13b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55b6d1f139b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b6d1f13a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55b6d1f13c28 <line:437:22>
| |-NonNullAttr 0x55b6d1f13c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x55b6d1f13cb8 <col:97> "" ""
|-FunctionDecl 0x55b6d1f13eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55b6d1f13d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b6d1f13d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55b6d1f13f68 <line:440:22>
| `-NonNullAttr 0x55b6d1f13fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b6d1f14140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55b6d1f14008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b6d1f14080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55b6d1f141f0 <line:443:22>
| `-NonNullAttr 0x55b6d1f14248 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f14538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55b6d1f14298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b6d1f14318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55b6d1f14390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55b6d1f145f0 <line:447:22>
| `-NonNullAttr 0x55b6d1f14648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55b6d1f148f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55b6d1f146a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b6d1f14720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55b6d1f14798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55b6d1f149b0 <col:43>
| `-NonNullAttr 0x55b6d1f14a08 <col:84, col:98> 1
|-FunctionDecl 0x55b6d1f14cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55b6d1f14a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b6d1f14ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55b6d1f14b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55b6d1f14d80 <line:452:22>
| `-NonNullAttr 0x55b6d1f14dd8 <col:63, col:77> 3
|-FunctionDecl 0x55b6d1f150e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55b6d1f14e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b6d1f14ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55b6d1f14f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55b6d1f151a0 <line:456:22>
| `-NonNullAttr 0x55b6d1f151f8 <col:63, col:80> 2 3
|-FunctionDecl 0x55b6d1f153e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55b6d1f15248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b6d1f152c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55b6d1f15498 <line:458:22>
|-FunctionDecl 0x55b6d1f15868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55b6d1f15560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55b6d1f15700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55b6d1f15918 <col:52, col:69> 1 2
|-FunctionDecl 0x55b6d1f15ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55b6d1f159a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55b6d1f15a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55b6d1f15ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55b6d1f15b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55b6d1f15c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55b6d1f15e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55b6d1f15d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55b6d1f15fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55b6d1f16040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55b6d1f160e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55b6d1f161d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55b6d1f16240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55b6d1f16410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix021_rmo.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55b6d1f16508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55b6d1f165c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55b6d1f16560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55b6d1f160c0 '__pthread_unwind_buf_t'
| |   `-Record 0x55b6d1f16040 ''
| `-AlignedAttr 0x55b6d1f16618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55b6d1f16690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55b6d1f167f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55b6d1f16858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55b6d1f168c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55b6d1f16928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55b6d1f16b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55b6d1f16a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55b6d1f16c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55b6d1f16be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55b6d1f16e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55b6d1f16d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55b6d1f16f18 <line:487:22>
|-RecordDecl 0x55b6d1f16f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55b6d1f17288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55b6d1f170e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55b6d1f17168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55b6d1f17338 <col:86>
| `-ReturnsTwiceAttr 0x55b6d1f17390 <col:12> Implicit
|-FunctionDecl 0x55b6d1f176b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55b6d1f17460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55b6d1f17570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55b6d1f17768 <line:493:22>
| `-NonNullAttr 0x55b6d1f177c0 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f17938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b6d1f17808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b6d1f179e0 <line:495:22>
| `-NonNullAttr 0x55b6d1f17a38 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f17b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b6d1f17a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b6d1f17be8 <line:497:22>
| `-NonNullAttr 0x55b6d1f17c40 <col:52, col:66> 1
|-FunctionDecl 0x55b6d1f17d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b6d1f17c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b6d1f17de8 <line:499:22>
| `-NonNullAttr 0x55b6d1f17e40 <col:52, col:66> 1
|-FunctionDecl 0x55b6d1f18088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55b6d1f17e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55b6d1f17f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55b6d1f18138 <col:36>
| `-NonNullAttr 0x55b6d1f18190 <col:66, col:83> 1 2
|-FunctionDecl 0x55b6d1f18290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b6d1f181d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b6d1f18338 <line:504:22>
| `-NonNullAttr 0x55b6d1f18390 <col:52, col:66> 1
|-FunctionDecl 0x55b6d1f18628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b6d1f18440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55b6d1f184c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55b6d1f186d8 <line:508:22>
| `-NonNullAttr 0x55b6d1f18730 <col:63, col:80> 1 2
|-FunctionDecl 0x55b6d1f189f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55b6d1f18778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55b6d1f187f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55b6d1f18878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55b6d1f18ab0 <line:512:22>
| `-NonNullAttr 0x55b6d1f18b08 <col:63, col:80> 1 3
|-FunctionDecl 0x55b6d1f18c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b6d1f18b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b6d1f18cb8 <line:514:22>
| `-NonNullAttr 0x55b6d1f18d10 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f18f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55b6d1f18dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55b6d1f18fe0 <line:516:22>
| `-NonNullAttr 0x55b6d1f19038 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f19140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55b6d1f19088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55b6d1f191e8 <line:518:22>
| `-NonNullAttr 0x55b6d1f19240 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f19468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b6d1f19288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55b6d1f19308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55b6d1f19518 <line:522:22>
| `-NonNullAttr 0x55b6d1f19570 <col:63, col:80> 1 2
|-FunctionDecl 0x55b6d1f19778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b6d1f195b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b6d1f19638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55b6d1f19828 <line:525:22>
| `-NonNullAttr 0x55b6d1f19880 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f19a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b6d1f198c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55b6d1f19948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55b6d1f19ad8 <line:528:22>
| `-NonNullAttr 0x55b6d1f19b30 <col:63, col:80> 1 2
|-FunctionDecl 0x55b6d1f19cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b6d1f19b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b6d1f19bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55b6d1f19d68 <line:530:22>
| `-NonNullAttr 0x55b6d1f19dc0 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f1af90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b6d1f19e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55b6d1f1aeb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55b6d1f1b040 <line:534:22>
| `-NonNullAttr 0x55b6d1f1b098 <col:63, col:80> 1 2
|-FunctionDecl 0x55b6d1f1b228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b6d1f1b0e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b6d1f1b168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55b6d1f1b2d8 <line:537:22>
| `-NonNullAttr 0x55b6d1f1b330 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f1b4d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b6d1f1b378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55b6d1f1b3f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55b6d1f1b588 <line:541:22>
| `-NonNullAttr 0x55b6d1f1b5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b6d1f1b768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b6d1f1b628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b6d1f1b6a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55b6d1f1b818 <line:544:22>
| `-NonNullAttr 0x55b6d1f1b870 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f1ba58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55b6d1f1b8b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b6d1f1b938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55b6d1f1bb08 <line:547:22>
| `-NonNullAttr 0x55b6d1f1bb60 <col:63, col:80> 1 2
|-FunctionDecl 0x55b6d1f1bce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b6d1f1bba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b6d1f1bc28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55b6d1f1bd98 <line:550:22>
| `-NonNullAttr 0x55b6d1f1bdf0 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f1d168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55b6d1f1cf10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55b6d1f1d020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55b6d1f1d218 <col:29>
| `-NonNullAttr 0x55b6d1f1d270 <col:70, col:84> 1
|-FunctionDecl 0x55b6d1f1d3e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b6d1f1d2b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b6d1f1d490 <line:555:22>
| `-NonNullAttr 0x55b6d1f1d4e8 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f1d5f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b6d1f1d538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b6d1f1d698 <line:557:22>
| `-NonNullAttr 0x55b6d1f1d6f0 <col:52, col:66> 1
|-FunctionDecl 0x55b6d1f1d7f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b6d1f1d738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b6d1f1d898 <line:559:19>
| `-NonNullAttr 0x55b6d1f1d8f0 <col:49, col:63> 1
|-FunctionDecl 0x55b6d1f1db28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55b6d1f1d938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55b6d1f1d9c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55b6d1f1dbd8 <col:39>
| `-NonNullAttr 0x55b6d1f1dc30 <col:69, col:86> 1 2
|-FunctionDecl 0x55b6d1f1dd30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b6d1f1dc78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b6d1f1ddd8 <line:564:22>
| `-NonNullAttr 0x55b6d1f1de30 <col:52, col:66> 1
|-FunctionDecl 0x55b6d1f1df98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b6d1f1dee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b6d1f1e040 <line:566:22>
| `-NonNullAttr 0x55b6d1f1e098 <col:52, col:66> 1
|-FunctionDecl 0x55b6d1f1e258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55b6d1f1e0e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55b6d1f1e178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55b6d1f1e308 <col:39>
| `-NonNullAttr 0x55b6d1f1e360 <col:69, col:86> 1 2
|-FunctionDecl 0x55b6d1f1e460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b6d1f1e3a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b6d1f1e508 <line:571:22>
| `-NonNullAttr 0x55b6d1f1e560 <col:52, col:66> 1
|-FunctionDecl 0x55b6d1f1e748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55b6d1f1e610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55b6d1f1e7f0 <line:573:22>
| `-NonNullAttr 0x55b6d1f1e848 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f1e950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55b6d1f1e898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55b6d1f1e9f8 <line:575:22>
| `-NonNullAttr 0x55b6d1f1ea50 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f1ec78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b6d1f1ea98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55b6d1f1eb18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55b6d1f1ed28 <line:579:22>
| `-NonNullAttr 0x55b6d1f1ed80 <col:63, col:80> 1 2
|-FunctionDecl 0x55b6d1f1efa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55b6d1f1edc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55b6d1f1ee48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55b6d1f1f058 <line:582:22>
| `-NonNullAttr 0x55b6d1f1f0b0 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f1f258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b6d1f1f0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55b6d1f1f178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55b6d1f1f308 <line:586:22>
| `-NonNullAttr 0x55b6d1f1f360 <col:63, col:80> 1 2
|-FunctionDecl 0x55b6d1f1f4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55b6d1f1f3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55b6d1f1f428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55b6d1f1f598 <col:36>
| `-NonNullAttr 0x55b6d1f1f5f0 <col:77, col:91> 1
|-FunctionDecl 0x55b6d1f1f928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55b6d1f1f6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55b6d1f1f7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55b6d1f1f9d8 <line:591:22>
| `-NonNullAttr 0x55b6d1f1fa30 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f1fba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55b6d1f1fa78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55b6d1f1fc50 <line:593:22>
| `-NonNullAttr 0x55b6d1f1fca8 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f1fdb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55b6d1f1fcf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55b6d1f1fe58 <line:595:22>
| `-NonNullAttr 0x55b6d1f1feb0 <col:52, col:66> 1
|-FunctionDecl 0x55b6d1f1ffc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55b6d1f1ff10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55b6d1f20070 <line:597:22>
| `-NonNullAttr 0x55b6d1f200c8 <col:52, col:66> 1
|-FunctionDecl 0x55b6d1f202f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55b6d1f20118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55b6d1f20190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55b6d1f203a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55b6d1f206d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55b6d1f20428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55b6d1f204a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55b6d1f20530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55b6d1f20790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55b6d1f209a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55b6d1f20870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55b6d1f20a50 <line:606:22>
| `-NonNullAttr 0x55b6d1f20aa8 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f20bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55b6d1f20af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55b6d1f20c58 <line:608:22>
| `-NonNullAttr 0x55b6d1f20cb0 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f20f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b6d1f20cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55b6d1f20d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55b6d1f20fc0 <line:612:22>
| `-NonNullAttr 0x55b6d1f21018 <col:63, col:80> 1 2
|-FunctionDecl 0x55b6d1f21228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55b6d1f21068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55b6d1f210e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55b6d1f212d8 <col:37>
| `-NonNullAttr 0x55b6d1f21330 <col:78, col:92> 1
|-FunctionDecl 0x55b6d1f21548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55b6d1f21378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55b6d1f21420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55b6d1f215f8 <line:618:22>
| `-NonNullAttr 0x55b6d1f21650 <col:63, col:80> 1 2
|-FunctionDecl 0x55b6d1f21818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55b6d1f21698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55b6d1f21710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55b6d1f218c8 <line:621:22>
| `-NonNullAttr 0x55b6d1f21920 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f21bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55b6d1f21a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55b6d1f21a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55b6d1f21c78 <line:623:22>
| `-NonNullAttr 0x55b6d1f21cd0 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f21e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55b6d1f21d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55b6d1f21f20 <line:625:22>
| `-NonNullAttr 0x55b6d1f21f78 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f22080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55b6d1f21fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55b6d1f22128 <line:627:22>
| `-NonNullAttr 0x55b6d1f22180 <col:52, col:66> 1
|-FunctionDecl 0x55b6d1f22280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55b6d1f221c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55b6d1f22328 <line:629:22>
| `-NonNullAttr 0x55b6d1f22380 <col:52, col:66> 1
|-FunctionDecl 0x55b6d1f22480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55b6d1f223c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55b6d1f22528 <line:631:22>
| `-NonNullAttr 0x55b6d1f22580 <col:52, col:66> 1
|-FunctionDecl 0x55b6d1f22958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55b6d1f22660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55b6d1f22770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55b6d1f227f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55b6d1f22a10 <line:635:22>
| `-NonNullAttr 0x55b6d1f22a68 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f22be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55b6d1f22ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55b6d1f22c90 <line:637:22>
| `-NonNullAttr 0x55b6d1f22ce8 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f22df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55b6d1f22d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55b6d1f22e98 <line:639:22>
| `-NonNullAttr 0x55b6d1f22ef0 <col:52, col:66> 1
|-FunctionDecl 0x55b6d1f230e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55b6d1f22fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55b6d1f23190 <line:641:22>
| `-NonNullAttr 0x55b6d1f231e8 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f232f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55b6d1f23238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55b6d1f23398 <line:643:22>
| `-NonNullAttr 0x55b6d1f233f0 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f23618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b6d1f23438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55b6d1f234b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55b6d1f236c8 <line:647:22>
| `-NonNullAttr 0x55b6d1f23720 <col:63, col:80> 1 2
|-FunctionDecl 0x55b6d1f23928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55b6d1f23768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55b6d1f237e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55b6d1f239d8 <line:650:22>
| `-NonNullAttr 0x55b6d1f23a30 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f23d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55b6d1f23b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55b6d1f23c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55b6d1f23e28 <line:653:22>
| `-NonNullAttr 0x55b6d1f23e80 <col:63, col:77> 1
|-FunctionDecl 0x55b6d1f23fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55b6d1f23ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55b6d1f24090 <col:69>
|-FunctionDecl 0x55b6d1f24208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55b6d1f240f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55b6d1f242b0 <col:72>
|-FunctionDecl 0x55b6d1f244e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55b6d1f24318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55b6d1f243c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55b6d1f24598 <col:44>
|-FunctionDecl 0x55b6d1f247b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55b6d1f24600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b6d1f24678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55b6d1f24868 <line:660:22>
| `-NonNullAttr 0x55b6d1f248c0 <col:63, col:77> 2
|-FunctionDecl 0x55b6d1f24d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55b6d1f249a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55b6d1f24ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55b6d1f24bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55b6d1f24dc0 <col:47>
|-FunctionDecl 0x55b6d1f25f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55b6d1f24e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55b6d1f260b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55b6d1f26020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55b6d1f26210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55b6d1f26178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55b6d1f26368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x55b6d1f262d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55b6d1f26430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55b6d1f264f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55b6d1f265b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55b6d1f26668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55b6d1f266e8 prev 0x55b6d1f26668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55b6d1f26750 <col:24> 'int' 0
|-VarDecl 0x55b6d1f26788 <line:674:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55b6d1f26808 prev 0x55b6d1f26788 <line:675:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55b6d1f26870 <col:27> 'int' 0
|-VarDecl 0x55b6d1f268a8 <line:676:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x55b6d1f26928 prev 0x55b6d1f268a8 <line:677:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x55b6d1f26990 <col:27> 'int' 0
|-VarDecl 0x55b6d1f269c8 <line:678:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x55b6d1f26a48 prev 0x55b6d1f269c8 <line:679:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x55b6d1f26ab0 <col:27> 'int' 0
|-VarDecl 0x55b6d1f26ae8 <line:680:1, col:5> col:5 used a 'int'
|-VarDecl 0x55b6d1f26b68 prev 0x55b6d1f26ae8 <line:681:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x55b6d1f26bd0 <col:9> 'int' 0
|-VarDecl 0x55b6d1f26c00 <line:682:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55b6d1f26c78 <line:683:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55b6d1f26cf8 <line:684:1, col:5> col:5 used x 'int'
|-VarDecl 0x55b6d1f26d78 prev 0x55b6d1f26cf8 <line:685:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55b6d1f26de0 <col:9> 'int' 0
|-VarDecl 0x55b6d1f26e18 <line:686:1, col:5> col:5 used y 'int'
|-VarDecl 0x55b6d1f26e98 prev 0x55b6d1f26e18 <line:687:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55b6d1f26f00 <col:9> 'int' 0
|-VarDecl 0x55b6d1f26f70 <line:688:1, col:5> col:5 used z 'int'
|-VarDecl 0x55b6d1f26ff0 prev 0x55b6d1f26f70 <line:689:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55b6d1f27058 <col:9> 'int' 0
|-VarDecl 0x55b6d1f27088 <line:690:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x55b6d1f27108 <line:691:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x55b6d1f27180 <line:692:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x55b6d1f271f8 <line:693:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x55b6d1f27270 <line:694:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x55b6d1f272e8 <line:695:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x55b6d1f27360 <line:696:1, col:7> col:7 used z$r_buff0_thd4 '_Bool'
|-VarDecl 0x55b6d1f273d8 <line:697:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x55b6d1f27450 <line:698:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x55b6d1f274c8 <line:699:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x55b6d1f27540 <line:700:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x55b6d1f275b8 <line:701:1, col:7> col:7 used z$r_buff1_thd4 '_Bool'
|-VarDecl 0x55b6d1f27630 <line:702:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x55b6d1f276b0 <line:703:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x55b6d1f27730 <line:704:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x55b6d1f277a8 <line:705:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x55b6d1f27828 <line:706:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x55b6d1f278a0 <line:707:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x55b6d1f27918 <line:708:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55b6d1f27990 <line:709:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55b6d1f27aa8 prev 0x55b6d1f25f60 <line:710:1, line:724:1> line:710:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55b6d1f27a10 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55b6d1f28078 <line:711:1, line:724:1>
|   |-CallExpr 0x55b6d1f27bb8 <line:712:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f27ba0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f27b50 <col:3> 'void ()' Function 0x55b6d1ecd350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b6d1f27c18 <line:713:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55b6d1f27bd8 <col:3> 'int' lvalue Var 0x55b6d1f26b68 'a' 'int'
|   | `-IntegerLiteral 0x55b6d1f27bf8 <col:7> 'int' 1
|   |-CallExpr 0x55b6d1f27c70 <line:714:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f27c58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f27c38 <col:3> 'void ()' Function 0x55b6d1ecd410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b6d1f27cc8 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f27cb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f27c90 <col:3> 'void ()' Function 0x55b6d1ecd350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b6d1f27d28 <line:716:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55b6d1f27ce8 <col:3> 'int' lvalue Var 0x55b6d1f26d78 'x' 'int'
|   | `-IntegerLiteral 0x55b6d1f27d08 <col:7> 'int' 1
|   |-CallExpr 0x55b6d1f27d80 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f27d68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f27d48 <col:3> 'void ()' Function 0x55b6d1ecd410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b6d1f27dd8 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f27dc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f27da0 <col:3> 'void ()' Function 0x55b6d1ecd350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55b6d1f27e30 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f27e18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f27df8 <col:3> 'void ()' Function 0x55b6d1ecd410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b6d1f27e88 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f27e70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f27e50 <col:3> 'void ()' Function 0x55b6d1ecd350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b6d1f27f40 <line:721:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55b6d1f27ea8 <col:3> 'int' lvalue Var 0x55b6d1f266e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55b6d1f27f20 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55b6d1f27f08 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b6d1f27ec8 <col:22> 'int' lvalue Var 0x55b6d1f266e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55b6d1f27ee8 <col:41> 'int' 1
|   |-CallExpr 0x55b6d1f27fb8 <line:722:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f27fa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f27f80 <col:3> 'void ()' Function 0x55b6d1ecd410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55b6d1f28068 <line:723:3, col:36>
|     `-CallExpr 0x55b6d1f28048 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55b6d1f28030 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55b6d1f27fd8 <col:10> 'void *(void)' Function 0x55b6d1ecce68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55b6d1f28198 prev 0x55b6d1f260b8 <line:725:1, line:739:1> line:725:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55b6d1f28100 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55b6d1f286e0 <line:726:1, line:739:1>
|   |-CallExpr 0x55b6d1f28278 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f28260 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f28240 <col:3> 'void ()' Function 0x55b6d1ecd350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b6d1f282d8 <line:728:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55b6d1f28298 <col:3> 'int' lvalue Var 0x55b6d1f26d78 'x' 'int'
|   | `-IntegerLiteral 0x55b6d1f282b8 <col:7> 'int' 2
|   |-CallExpr 0x55b6d1f28330 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f28318 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f282f8 <col:3> 'void ()' Function 0x55b6d1ecd410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b6d1f28388 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f28370 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f28350 <col:3> 'void ()' Function 0x55b6d1ecd350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b6d1f283e8 <line:731:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55b6d1f283a8 <col:3> 'int' lvalue Var 0x55b6d1f26e98 'y' 'int'
|   | `-IntegerLiteral 0x55b6d1f283c8 <col:7> 'int' 1
|   |-CallExpr 0x55b6d1f28440 <line:732:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f28428 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f28408 <col:3> 'void ()' Function 0x55b6d1ecd410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b6d1f28498 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f28480 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f28460 <col:3> 'void ()' Function 0x55b6d1ecd350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55b6d1f284f0 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f284d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f284b8 <col:3> 'void ()' Function 0x55b6d1ecd410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b6d1f28548 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f28530 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f28510 <col:3> 'void ()' Function 0x55b6d1ecd350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b6d1f28600 <line:736:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55b6d1f28568 <col:3> 'int' lvalue Var 0x55b6d1f266e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55b6d1f285e0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55b6d1f285c8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b6d1f28588 <col:22> 'int' lvalue Var 0x55b6d1f266e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55b6d1f285a8 <col:41> 'int' 1
|   |-CallExpr 0x55b6d1f28658 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f28640 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f28620 <col:3> 'void ()' Function 0x55b6d1ecd410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55b6d1f286d0 <line:738:3, col:36>
|     `-CallExpr 0x55b6d1f286b0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55b6d1f28698 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55b6d1f28678 <col:10> 'void *(void)' Function 0x55b6d1ecce68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55b6d1f28800 prev 0x55b6d1f26210 <line:740:1, line:767:1> line:740:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55b6d1f28768 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55b6d1f2b720 <line:741:1, line:767:1>
|   |-CallExpr 0x55b6d1f288e0 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f288c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f288a8 <col:3> 'void ()' Function 0x55b6d1ecd350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b6d1f28940 <line:743:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55b6d1f28900 <col:3> 'int' lvalue Var 0x55b6d1f26e98 'y' 'int'
|   | `-IntegerLiteral 0x55b6d1f28920 <col:7> 'int' 2
|   |-CallExpr 0x55b6d1f28998 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f28980 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f28960 <col:3> 'void ()' Function 0x55b6d1ecd410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b6d1f289f0 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f289d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f289b8 <col:3> 'void ()' Function 0x55b6d1ecd350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b6d1f28aa0 <line:746:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55b6d1f28a10 <col:3> '_Bool' lvalue Var 0x55b6d1f27918 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55b6d1f28a88 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55b6d1f28a68 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55b6d1f28a50 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55b6d1f28a30 <col:19> 'void *(void)' Function 0x55b6d1ecce68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55b6d1f28b50 <line:747:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55b6d1f28ac0 <col:3> '_Bool' lvalue Var 0x55b6d1f27990 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55b6d1f28b38 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55b6d1f28b18 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55b6d1f28b00 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55b6d1f28ae0 <col:19> 'void *(void)' Function 0x55b6d1ecce68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55b6d1f28bc8 <line:748:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55b6d1f28b70 <col:3> '_Bool' lvalue Var 0x55b6d1f27088 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55b6d1f28bb0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b6d1f28b90 <col:21> '_Bool' lvalue Var 0x55b6d1f27990 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55b6d1f28c40 <line:749:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55b6d1f28be8 <col:3> 'int' lvalue Var 0x55b6d1f27108 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55b6d1f28c28 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b6d1f28c08 <col:15> 'int' lvalue Var 0x55b6d1f26ff0 'z' 'int'
|   |-BinaryOperator 0x55b6d1f29098 <line:750:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55b6d1f28c60 <col:3> 'int' lvalue Var 0x55b6d1f26ff0 'z' 'int'
|   | `-ConditionalOperator 0x55b6d1f29068 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55b6d1f28e70 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55b6d1f28d90 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55b6d1f28cb8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55b6d1f28ca0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55b6d1f28c80 <col:8> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55b6d1f28d70 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55b6d1f28d08 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55b6d1f28cf0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55b6d1f28cd0 <col:27> '_Bool' lvalue Var 0x55b6d1f272e8 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x55b6d1f28d58 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55b6d1f28d40 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55b6d1f28d20 <col:46> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55b6d1f28e50 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55b6d1f28de8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55b6d1f28dd0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55b6d1f28db0 <col:65> '_Bool' lvalue Var 0x55b6d1f272e8 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x55b6d1f28e38 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55b6d1f28e20 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55b6d1f28e00 <col:84> '_Bool' lvalue Var 0x55b6d1f27540 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55b6d1f29050 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b6d1f28e90 <col:101> 'int' lvalue Var 0x55b6d1f26ff0 'z' 'int'
|   |   `-ParenExpr 0x55b6d1f29030 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55b6d1f29000 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55b6d1f28f50 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55b6d1f28f08 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55b6d1f28ef0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55b6d1f28eb0 <col:106> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55b6d1f28f38 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55b6d1f28f20 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55b6d1f28ed0 <col:124> '_Bool' lvalue Var 0x55b6d1f272e8 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55b6d1f28fd0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b6d1f28f90 <col:141> 'int' lvalue Var 0x55b6d1f27730 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55b6d1f28fe8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b6d1f28fb0 <col:153> 'int' lvalue Var 0x55b6d1f27828 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55b6d1f295a8 <line:751:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55b6d1f290b8 <col:3> 'int' lvalue Var 0x55b6d1f27730 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x55b6d1f29578 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55b6d1f29548 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b6d1f29530 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b6d1f290d8 <col:15> '_Bool' lvalue Var 0x55b6d1f27990 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b6d1f29560 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b6d1f290f8 <col:31> 'int' lvalue Var 0x55b6d1f27730 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55b6d1f29510 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55b6d1f294e0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55b6d1f29308 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55b6d1f29228 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55b6d1f29150 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55b6d1f29138 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55b6d1f29118 <col:45> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55b6d1f29208 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55b6d1f291a0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55b6d1f29188 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55b6d1f29168 <col:64> '_Bool' lvalue Var 0x55b6d1f272e8 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55b6d1f291f0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55b6d1f291d8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55b6d1f291b8 <col:83> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55b6d1f292e8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55b6d1f29280 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55b6d1f29268 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55b6d1f29248 <col:102> '_Bool' lvalue Var 0x55b6d1f272e8 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55b6d1f292d0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55b6d1f292b8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55b6d1f29298 <col:121> '_Bool' lvalue Var 0x55b6d1f27540 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55b6d1f294c8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b6d1f29328 <col:138> 'int' lvalue Var 0x55b6d1f27730 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x55b6d1f294a8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55b6d1f29478 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55b6d1f293e8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55b6d1f293a0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55b6d1f29388 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55b6d1f29348 <col:151> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55b6d1f293d0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55b6d1f293b8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55b6d1f29368 <col:169> '_Bool' lvalue Var 0x55b6d1f272e8 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55b6d1f29448 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55b6d1f29408 <col:186> 'int' lvalue Var 0x55b6d1f27730 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55b6d1f29460 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55b6d1f29428 <col:198> 'int' lvalue Var 0x55b6d1f27730 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55b6d1f29ab8 <line:752:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55b6d1f295c8 <col:3> 'int' lvalue Var 0x55b6d1f27828 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x55b6d1f29a88 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55b6d1f29a58 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b6d1f29a40 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b6d1f295e8 <col:15> '_Bool' lvalue Var 0x55b6d1f27990 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b6d1f29a70 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b6d1f29608 <col:31> 'int' lvalue Var 0x55b6d1f27828 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x55b6d1f29a20 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55b6d1f299f0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55b6d1f29818 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55b6d1f29738 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55b6d1f29660 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55b6d1f29648 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55b6d1f29628 <col:45> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55b6d1f29718 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55b6d1f296b0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55b6d1f29698 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55b6d1f29678 <col:64> '_Bool' lvalue Var 0x55b6d1f272e8 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55b6d1f29700 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55b6d1f296e8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55b6d1f296c8 <col:83> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55b6d1f297f8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55b6d1f29790 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55b6d1f29778 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55b6d1f29758 <col:102> '_Bool' lvalue Var 0x55b6d1f272e8 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55b6d1f297e0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55b6d1f297c8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55b6d1f297a8 <col:121> '_Bool' lvalue Var 0x55b6d1f27540 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55b6d1f299d8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b6d1f29838 <col:138> 'int' lvalue Var 0x55b6d1f27828 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x55b6d1f299b8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55b6d1f29988 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55b6d1f298f8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55b6d1f298b0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55b6d1f29898 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55b6d1f29858 <col:151> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55b6d1f298e0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55b6d1f298c8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55b6d1f29878 <col:169> '_Bool' lvalue Var 0x55b6d1f272e8 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55b6d1f29958 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55b6d1f29918 <col:186> 'int' lvalue Var 0x55b6d1f27828 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55b6d1f29970 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55b6d1f29938 <col:198> 'int' lvalue Var 0x55b6d1f27828 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55b6d1f2a098 <line:753:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55b6d1f29ad8 <col:3> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b6d1f2a080 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b6d1f2a050 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55b6d1f2a008 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b6d1f29ff0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b6d1f29af8 <col:20> '_Bool' lvalue Var 0x55b6d1f27990 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b6d1f2a038 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b6d1f2a020 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b6d1f29b18 <col:36> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55b6d1f29fd0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55b6d1f29fa0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55b6d1f29d28 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b6d1f29c48 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b6d1f29b70 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b6d1f29b58 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b6d1f29b38 <col:55> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b6d1f29c28 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b6d1f29bc0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b6d1f29ba8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b6d1f29b88 <col:74> '_Bool' lvalue Var 0x55b6d1f272e8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55b6d1f29c10 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b6d1f29bf8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b6d1f29bd8 <col:93> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b6d1f29d08 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b6d1f29ca0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b6d1f29c88 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b6d1f29c68 <col:112> '_Bool' lvalue Var 0x55b6d1f272e8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55b6d1f29cf0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b6d1f29cd8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b6d1f29cb8 <col:131> '_Bool' lvalue Var 0x55b6d1f27540 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55b6d1f29f50 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b6d1f29f38 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b6d1f29d48 <col:148> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55b6d1f29f18 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55b6d1f29ee8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55b6d1f29e08 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b6d1f29dc0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b6d1f29da8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b6d1f29d68 <col:166> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b6d1f29df0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b6d1f29dd8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b6d1f29d88 <col:184> '_Bool' lvalue Var 0x55b6d1f272e8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55b6d1f29ea0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b6d1f29e58 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b6d1f29e28 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b6d1f29ed0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55b6d1f29eb8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55b6d1f29e80 <col:212> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55b6d1f2a660 <line:754:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55b6d1f2a0b8 <col:3> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b6d1f2a648 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b6d1f2a618 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55b6d1f2a5d0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b6d1f2a5b8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b6d1f2a0d8 <col:20> '_Bool' lvalue Var 0x55b6d1f27990 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b6d1f2a600 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b6d1f2a5e8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b6d1f2a0f8 <col:36> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55b6d1f2a598 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55b6d1f2a568 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55b6d1f2a308 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b6d1f2a228 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b6d1f2a150 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b6d1f2a138 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b6d1f2a118 <col:55> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b6d1f2a208 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b6d1f2a1a0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b6d1f2a188 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b6d1f2a168 <col:74> '_Bool' lvalue Var 0x55b6d1f272e8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55b6d1f2a1f0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b6d1f2a1d8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b6d1f2a1b8 <col:93> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b6d1f2a2e8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b6d1f2a280 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b6d1f2a268 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b6d1f2a248 <col:112> '_Bool' lvalue Var 0x55b6d1f272e8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55b6d1f2a2d0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b6d1f2a2b8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b6d1f2a298 <col:131> '_Bool' lvalue Var 0x55b6d1f27540 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55b6d1f2a550 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b6d1f2a538 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b6d1f2a328 <col:148> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55b6d1f2a518 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55b6d1f2a4e8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55b6d1f2a3e8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b6d1f2a3a0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b6d1f2a388 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b6d1f2a348 <col:166> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b6d1f2a3d0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b6d1f2a3b8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b6d1f2a368 <col:184> '_Bool' lvalue Var 0x55b6d1f272e8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55b6d1f2a4b8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b6d1f2a438 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b6d1f2a408 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b6d1f2a4d0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55b6d1f2a490 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55b6d1f2a460 <col:219> 'int' 0
|   |-BinaryOperator 0x55b6d1f2ac08 <line:755:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55b6d1f2a680 <col:3> '_Bool' lvalue Var 0x55b6d1f272e8 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55b6d1f2abf0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b6d1f2abc0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55b6d1f2ab78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b6d1f2ab60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b6d1f2a6a0 <col:20> '_Bool' lvalue Var 0x55b6d1f27990 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b6d1f2aba8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b6d1f2ab90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b6d1f2a6c0 <col:36> '_Bool' lvalue Var 0x55b6d1f272e8 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x55b6d1f2ab40 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55b6d1f2ab10 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55b6d1f2a8d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b6d1f2a7f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b6d1f2a718 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b6d1f2a700 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b6d1f2a6e0 <col:55> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b6d1f2a7d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b6d1f2a768 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b6d1f2a750 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b6d1f2a730 <col:74> '_Bool' lvalue Var 0x55b6d1f272e8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55b6d1f2a7b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b6d1f2a7a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b6d1f2a780 <col:93> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b6d1f2a8b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b6d1f2a848 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b6d1f2a830 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b6d1f2a810 <col:112> '_Bool' lvalue Var 0x55b6d1f272e8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55b6d1f2a898 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b6d1f2a880 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b6d1f2a860 <col:131> '_Bool' lvalue Var 0x55b6d1f27540 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55b6d1f2aaf8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b6d1f2aae0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b6d1f2a8f0 <col:148> '_Bool' lvalue Var 0x55b6d1f272e8 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x55b6d1f2aac0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55b6d1f2aa90 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55b6d1f2a9b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b6d1f2a968 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b6d1f2a950 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b6d1f2a910 <col:166> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b6d1f2a998 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b6d1f2a980 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b6d1f2a930 <col:184> '_Bool' lvalue Var 0x55b6d1f272e8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55b6d1f2aa48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b6d1f2aa00 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b6d1f2a9d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b6d1f2aa78 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55b6d1f2aa60 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55b6d1f2aa28 <col:212> '_Bool' lvalue Var 0x55b6d1f272e8 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55b6d1f2b1e8 <line:756:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55b6d1f2ac28 <col:3> '_Bool' lvalue Var 0x55b6d1f27540 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55b6d1f2b1d0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b6d1f2b1a0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55b6d1f2b158 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b6d1f2b140 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b6d1f2ac48 <col:20> '_Bool' lvalue Var 0x55b6d1f27990 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b6d1f2b188 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b6d1f2b170 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b6d1f2ac68 <col:36> '_Bool' lvalue Var 0x55b6d1f27540 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x55b6d1f2b120 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55b6d1f2b0f0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55b6d1f2ae78 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b6d1f2ad98 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b6d1f2acc0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b6d1f2aca8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b6d1f2ac88 <col:55> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b6d1f2ad78 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b6d1f2ad10 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b6d1f2acf8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b6d1f2acd8 <col:74> '_Bool' lvalue Var 0x55b6d1f272e8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55b6d1f2ad60 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b6d1f2ad48 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b6d1f2ad28 <col:93> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b6d1f2ae58 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b6d1f2adf0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b6d1f2add8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b6d1f2adb8 <col:112> '_Bool' lvalue Var 0x55b6d1f272e8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55b6d1f2ae40 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b6d1f2ae28 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b6d1f2ae08 <col:131> '_Bool' lvalue Var 0x55b6d1f27540 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55b6d1f2b0d8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b6d1f2b0c0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b6d1f2ae98 <col:148> '_Bool' lvalue Var 0x55b6d1f27540 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x55b6d1f2b0a0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55b6d1f2b070 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55b6d1f2af58 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b6d1f2af10 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b6d1f2aef8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b6d1f2aeb8 <col:166> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b6d1f2af40 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b6d1f2af28 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b6d1f2aed8 <col:184> '_Bool' lvalue Var 0x55b6d1f272e8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55b6d1f2b040 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b6d1f2afc0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b6d1f2af78 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b6d1f2b058 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55b6d1f2b018 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55b6d1f2afe8 <col:219> 'int' 0
|   |-BinaryOperator 0x55b6d1f2b260 <line:757:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55b6d1f2b208 <col:3> 'int' lvalue Var 0x55b6d1f26808 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55b6d1f2b248 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b6d1f2b228 <col:25> 'int' lvalue Var 0x55b6d1f26ff0 'z' 'int'
|   |-BinaryOperator 0x55b6d1f2b390 <line:758:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55b6d1f2b280 <col:3> 'int' lvalue Var 0x55b6d1f26ff0 'z' 'int'
|   | `-ConditionalOperator 0x55b6d1f2b360 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55b6d1f2b318 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b6d1f2b300 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b6d1f2b2a0 <col:7> '_Bool' lvalue Var 0x55b6d1f27088 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55b6d1f2b330 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b6d1f2b2c0 <col:25> 'int' lvalue Var 0x55b6d1f27108 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55b6d1f2b348 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55b6d1f2b2e0 <col:37> 'int' lvalue Var 0x55b6d1f26ff0 'z' 'int'
|   |-BinaryOperator 0x55b6d1f2b428 <line:759:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55b6d1f2b3b0 <col:3> '_Bool' lvalue Var 0x55b6d1f27088 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55b6d1f2b400 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55b6d1f2b3d0 <col:28> 'int' 0
|   |-CallExpr 0x55b6d1f2b480 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f2b468 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f2b448 <col:3> 'void ()' Function 0x55b6d1ecd410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b6d1f2b4d8 <line:761:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f2b4c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f2b4a0 <col:3> 'void ()' Function 0x55b6d1ecd350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55b6d1f2b530 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f2b518 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f2b4f8 <col:3> 'void ()' Function 0x55b6d1ecd410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b6d1f2b588 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f2b570 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f2b550 <col:3> 'void ()' Function 0x55b6d1ecd350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b6d1f2b640 <line:764:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55b6d1f2b5a8 <col:3> 'int' lvalue Var 0x55b6d1f266e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55b6d1f2b620 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55b6d1f2b608 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b6d1f2b5c8 <col:22> 'int' lvalue Var 0x55b6d1f266e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55b6d1f2b5e8 <col:41> 'int' 1
|   |-CallExpr 0x55b6d1f2b698 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f2b680 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f2b660 <col:3> 'void ()' Function 0x55b6d1ecd410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55b6d1f2b710 <line:766:3, col:36>
|     `-CallExpr 0x55b6d1f2b6f0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55b6d1f2b6d8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55b6d1f2b6b8 <col:10> 'void *(void)' Function 0x55b6d1ecce68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55b6d1f2b8a8 prev 0x55b6d1f26368 <line:768:1, line:813:1> line:768:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x55b6d1f2b810 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55b6d1f2fbb8 <line:769:1, line:813:1>
|   |-CallExpr 0x55b6d1f2b988 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f2b970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f2b950 <col:3> 'void ()' Function 0x55b6d1ecd350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b6d1f2ba00 <line:771:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55b6d1f2b9a8 <col:3> 'int' lvalue Var 0x55b6d1f27828 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55b6d1f2b9e8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b6d1f2b9c8 <col:15> 'int' lvalue Var 0x55b6d1f27730 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55b6d1f2ba60 <line:772:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55b6d1f2ba20 <col:3> 'int' lvalue Var 0x55b6d1f27730 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x55b6d1f2ba40 <col:15> 'int' 1
|   |-BinaryOperator 0x55b6d1f2bad8 <line:773:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55b6d1f2ba80 <col:3> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b6d1f2bac0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b6d1f2baa0 <col:20> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55b6d1f2bb70 <line:774:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55b6d1f2baf8 <col:3> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55b6d1f2bb48 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55b6d1f2bb18 <col:27> 'int' 1
|   |-CallExpr 0x55b6d1f2bcf8 <line:775:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55b6d1f2bce0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55b6d1f2bb90 <col:3> 'void (int)' Function 0x55b6d1ecd0d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55b6d1f2bc90 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55b6d1f2bc70 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55b6d1f2bc50 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55b6d1f2bc08 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55b6d1f2bbf0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55b6d1f2bbb0 <col:23> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55b6d1f2bc38 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55b6d1f2bc20 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55b6d1f2bbd0 <col:41> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55b6d1f2bd78 <line:776:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55b6d1f2bd20 <col:3> '_Bool' lvalue Var 0x55b6d1f273d8 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55b6d1f2bd60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b6d1f2bd40 <col:20> '_Bool' lvalue Var 0x55b6d1f27180 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55b6d1f2bdf0 <line:777:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55b6d1f2bd98 <col:3> '_Bool' lvalue Var 0x55b6d1f27450 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55b6d1f2bdd8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b6d1f2bdb8 <col:20> '_Bool' lvalue Var 0x55b6d1f271f8 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55b6d1f2be68 <line:778:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55b6d1f2be10 <col:3> '_Bool' lvalue Var 0x55b6d1f274c8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55b6d1f2be50 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b6d1f2be30 <col:20> '_Bool' lvalue Var 0x55b6d1f27270 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55b6d1f2bee0 <line:779:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55b6d1f2be88 <col:3> '_Bool' lvalue Var 0x55b6d1f27540 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55b6d1f2bec8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b6d1f2bea8 <col:20> '_Bool' lvalue Var 0x55b6d1f272e8 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55b6d1f2bf58 <line:780:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55b6d1f2bf00 <col:3> '_Bool' lvalue Var 0x55b6d1f275b8 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55b6d1f2bf40 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b6d1f2bf20 <col:20> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55b6d1f2c018 <line:781:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55b6d1f2bf78 <col:3> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   | `-CStyleCastExpr 0x55b6d1f2bff0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55b6d1f2bfc0 <col:27> 'int' 1
|   |-CallExpr 0x55b6d1f2c070 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f2c058 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f2c038 <col:3> 'void ()' Function 0x55b6d1ecd410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b6d1f2c0c8 <line:783:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f2c0b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f2c090 <col:3> 'void ()' Function 0x55b6d1ecd350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b6d1f2c178 <line:784:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55b6d1f2c0e8 <col:3> '_Bool' lvalue Var 0x55b6d1f27918 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55b6d1f2c160 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55b6d1f2c140 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55b6d1f2c128 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55b6d1f2c108 <col:19> 'void *(void)' Function 0x55b6d1ecce68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55b6d1f2c228 <line:785:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55b6d1f2c198 <col:3> '_Bool' lvalue Var 0x55b6d1f27990 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55b6d1f2c210 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55b6d1f2c1f0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55b6d1f2c1d8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55b6d1f2c1b8 <col:19> 'void *(void)' Function 0x55b6d1ecce68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55b6d1f2c2a0 <line:786:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55b6d1f2c248 <col:3> '_Bool' lvalue Var 0x55b6d1f27088 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55b6d1f2c288 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b6d1f2c268 <col:21> '_Bool' lvalue Var 0x55b6d1f27990 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55b6d1f2c318 <line:787:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55b6d1f2c2c0 <col:3> 'int' lvalue Var 0x55b6d1f27108 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55b6d1f2c300 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b6d1f2c2e0 <col:15> 'int' lvalue Var 0x55b6d1f26ff0 'z' 'int'
|   |-BinaryOperator 0x55b6d1f2c750 <line:788:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55b6d1f2c338 <col:3> 'int' lvalue Var 0x55b6d1f26ff0 'z' 'int'
|   | `-ConditionalOperator 0x55b6d1f2c720 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55b6d1f2c548 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55b6d1f2c468 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55b6d1f2c390 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55b6d1f2c378 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55b6d1f2c358 <col:8> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55b6d1f2c448 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55b6d1f2c3e0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55b6d1f2c3c8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55b6d1f2c3a8 <col:27> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x55b6d1f2c430 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55b6d1f2c418 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55b6d1f2c3f8 <col:46> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55b6d1f2c528 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55b6d1f2c4c0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55b6d1f2c4a8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55b6d1f2c488 <col:65> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x55b6d1f2c510 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55b6d1f2c4f8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55b6d1f2c4d8 <col:84> '_Bool' lvalue Var 0x55b6d1f275b8 'z$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55b6d1f2c708 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b6d1f2c568 <col:101> 'int' lvalue Var 0x55b6d1f26ff0 'z' 'int'
|   |   `-ParenExpr 0x55b6d1f2c6e8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55b6d1f2c6b8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55b6d1f2c628 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55b6d1f2c5e0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55b6d1f2c5c8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55b6d1f2c588 <col:106> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55b6d1f2c610 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55b6d1f2c5f8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55b6d1f2c5a8 <col:124> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55b6d1f2c688 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b6d1f2c648 <col:141> 'int' lvalue Var 0x55b6d1f27730 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55b6d1f2c6a0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b6d1f2c668 <col:153> 'int' lvalue Var 0x55b6d1f27828 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55b6d1f2cc60 <line:789:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55b6d1f2c770 <col:3> 'int' lvalue Var 0x55b6d1f27730 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x55b6d1f2cc30 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55b6d1f2cc00 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b6d1f2cbe8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b6d1f2c790 <col:15> '_Bool' lvalue Var 0x55b6d1f27990 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b6d1f2cc18 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b6d1f2c7b0 <col:31> 'int' lvalue Var 0x55b6d1f27730 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55b6d1f2cbc8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55b6d1f2cb98 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55b6d1f2c9c0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55b6d1f2c8e0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55b6d1f2c808 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55b6d1f2c7f0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55b6d1f2c7d0 <col:45> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55b6d1f2c8c0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55b6d1f2c858 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55b6d1f2c840 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55b6d1f2c820 <col:64> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x55b6d1f2c8a8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55b6d1f2c890 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55b6d1f2c870 <col:83> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55b6d1f2c9a0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55b6d1f2c938 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55b6d1f2c920 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55b6d1f2c900 <col:102> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x55b6d1f2c988 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55b6d1f2c970 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55b6d1f2c950 <col:121> '_Bool' lvalue Var 0x55b6d1f275b8 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55b6d1f2cb80 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b6d1f2c9e0 <col:138> 'int' lvalue Var 0x55b6d1f27730 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x55b6d1f2cb60 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55b6d1f2cb30 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55b6d1f2caa0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55b6d1f2ca58 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55b6d1f2ca40 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55b6d1f2ca00 <col:151> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55b6d1f2ca88 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55b6d1f2ca70 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55b6d1f2ca20 <col:169> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x55b6d1f2cb00 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55b6d1f2cac0 <col:186> 'int' lvalue Var 0x55b6d1f27730 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55b6d1f2cb18 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55b6d1f2cae0 <col:198> 'int' lvalue Var 0x55b6d1f27730 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55b6d1f2d190 <line:790:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55b6d1f2cc80 <col:3> 'int' lvalue Var 0x55b6d1f27828 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x55b6d1f2d160 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55b6d1f2d130 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b6d1f2d118 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b6d1f2cca0 <col:15> '_Bool' lvalue Var 0x55b6d1f27990 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b6d1f2d148 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b6d1f2ccc0 <col:31> 'int' lvalue Var 0x55b6d1f27828 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x55b6d1f2d0f8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55b6d1f2d0c8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55b6d1f2ced0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55b6d1f2cdf0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55b6d1f2cd18 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55b6d1f2cd00 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55b6d1f2cce0 <col:45> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55b6d1f2cdd0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55b6d1f2cd68 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55b6d1f2cd50 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55b6d1f2cd30 <col:64> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x55b6d1f2cdb8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55b6d1f2cda0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55b6d1f2cd80 <col:83> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55b6d1f2ceb0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55b6d1f2ce48 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55b6d1f2ce30 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55b6d1f2ce10 <col:102> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x55b6d1f2ce98 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55b6d1f2ce80 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55b6d1f2ce60 <col:121> '_Bool' lvalue Var 0x55b6d1f275b8 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55b6d1f2d0b0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b6d1f2cef0 <col:138> 'int' lvalue Var 0x55b6d1f27828 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x55b6d1f2d090 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55b6d1f2d060 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55b6d1f2cfd0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55b6d1f2cf68 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55b6d1f2cf50 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55b6d1f2cf10 <col:151> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55b6d1f2cf98 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55b6d1f2cf80 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55b6d1f2cf30 <col:169> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x55b6d1f2d030 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55b6d1f2cff0 <col:186> 'int' lvalue Var 0x55b6d1f27828 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55b6d1f2d048 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55b6d1f2d010 <col:198> 'int' lvalue Var 0x55b6d1f27828 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55b6d1f2d738 <line:791:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55b6d1f2d1b0 <col:3> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b6d1f2d720 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b6d1f2d6f0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55b6d1f2d6a8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b6d1f2d690 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b6d1f2d1d0 <col:20> '_Bool' lvalue Var 0x55b6d1f27990 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b6d1f2d6d8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b6d1f2d6c0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b6d1f2d1f0 <col:36> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55b6d1f2d670 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55b6d1f2d640 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55b6d1f2d400 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b6d1f2d320 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b6d1f2d248 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b6d1f2d230 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b6d1f2d210 <col:55> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b6d1f2d300 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b6d1f2d298 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b6d1f2d280 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b6d1f2d260 <col:74> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55b6d1f2d2e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b6d1f2d2d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b6d1f2d2b0 <col:93> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b6d1f2d3e0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b6d1f2d378 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b6d1f2d360 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b6d1f2d340 <col:112> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55b6d1f2d3c8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b6d1f2d3b0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b6d1f2d390 <col:131> '_Bool' lvalue Var 0x55b6d1f275b8 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55b6d1f2d628 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b6d1f2d610 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b6d1f2d420 <col:148> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55b6d1f2d5f0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55b6d1f2d5c0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55b6d1f2d4e0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b6d1f2d498 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b6d1f2d480 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b6d1f2d440 <col:166> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b6d1f2d4c8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b6d1f2d4b0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b6d1f2d460 <col:184> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55b6d1f2d578 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b6d1f2d530 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b6d1f2d500 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b6d1f2d5a8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55b6d1f2d590 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55b6d1f2d558 <col:212> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55b6d1f2dd00 <line:792:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55b6d1f2d758 <col:3> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b6d1f2dce8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b6d1f2dcb8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55b6d1f2dc70 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b6d1f2dc58 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b6d1f2d778 <col:20> '_Bool' lvalue Var 0x55b6d1f27990 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b6d1f2dca0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b6d1f2dc88 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b6d1f2d798 <col:36> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55b6d1f2dc38 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55b6d1f2dc08 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55b6d1f2d9a8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b6d1f2d8c8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b6d1f2d7f0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b6d1f2d7d8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b6d1f2d7b8 <col:55> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b6d1f2d8a8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b6d1f2d840 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b6d1f2d828 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b6d1f2d808 <col:74> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55b6d1f2d890 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b6d1f2d878 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b6d1f2d858 <col:93> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b6d1f2d988 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b6d1f2d920 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b6d1f2d908 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b6d1f2d8e8 <col:112> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55b6d1f2d970 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b6d1f2d958 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b6d1f2d938 <col:131> '_Bool' lvalue Var 0x55b6d1f275b8 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55b6d1f2dbf0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b6d1f2dbd8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b6d1f2d9c8 <col:148> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55b6d1f2dbb8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55b6d1f2db88 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55b6d1f2da88 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b6d1f2da40 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b6d1f2da28 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b6d1f2d9e8 <col:166> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b6d1f2da70 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b6d1f2da58 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b6d1f2da08 <col:184> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55b6d1f2db58 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b6d1f2dad8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b6d1f2daa8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b6d1f2db70 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55b6d1f2db30 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55b6d1f2db00 <col:219> 'int' 0
|   |-BinaryOperator 0x55b6d1f2e2b8 <line:793:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55b6d1f2dd20 <col:3> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55b6d1f2e2a0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b6d1f2e270 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55b6d1f2e228 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b6d1f2e210 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b6d1f2dd40 <col:20> '_Bool' lvalue Var 0x55b6d1f27990 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b6d1f2e258 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b6d1f2e240 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b6d1f2dd60 <col:36> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x55b6d1f2e1f0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55b6d1f2e1c0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55b6d1f2df70 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b6d1f2de90 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b6d1f2ddb8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b6d1f2dda0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b6d1f2dd80 <col:55> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b6d1f2de70 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b6d1f2de08 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b6d1f2ddf0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b6d1f2ddd0 <col:74> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55b6d1f2de58 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b6d1f2de40 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b6d1f2de20 <col:93> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b6d1f2df50 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b6d1f2dee8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b6d1f2ded0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b6d1f2deb0 <col:112> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55b6d1f2df38 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b6d1f2df20 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b6d1f2df00 <col:131> '_Bool' lvalue Var 0x55b6d1f275b8 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55b6d1f2e1a8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b6d1f2e190 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b6d1f2df90 <col:148> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x55b6d1f2e170 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55b6d1f2e140 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55b6d1f2e060 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b6d1f2e018 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b6d1f2e000 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b6d1f2dfb0 <col:166> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b6d1f2e048 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b6d1f2e030 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b6d1f2dfe0 <col:184> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55b6d1f2e0f8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b6d1f2e0b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b6d1f2e080 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b6d1f2e128 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55b6d1f2e110 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55b6d1f2e0d8 <col:212> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55b6d1f2e880 <line:794:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55b6d1f2e2d8 <col:3> '_Bool' lvalue Var 0x55b6d1f275b8 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55b6d1f2e868 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b6d1f2e838 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55b6d1f2e7f0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b6d1f2e7d8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b6d1f2e2f8 <col:20> '_Bool' lvalue Var 0x55b6d1f27990 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b6d1f2e820 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b6d1f2e808 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b6d1f2e318 <col:36> '_Bool' lvalue Var 0x55b6d1f275b8 'z$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x55b6d1f2e7b8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55b6d1f2e788 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55b6d1f2e528 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b6d1f2e448 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b6d1f2e370 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b6d1f2e358 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b6d1f2e338 <col:55> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b6d1f2e428 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b6d1f2e3c0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b6d1f2e3a8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b6d1f2e388 <col:74> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55b6d1f2e410 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b6d1f2e3f8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b6d1f2e3d8 <col:93> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b6d1f2e508 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b6d1f2e4a0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b6d1f2e488 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b6d1f2e468 <col:112> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55b6d1f2e4f0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b6d1f2e4d8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b6d1f2e4b8 <col:131> '_Bool' lvalue Var 0x55b6d1f275b8 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55b6d1f2e770 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b6d1f2e758 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b6d1f2e548 <col:148> '_Bool' lvalue Var 0x55b6d1f275b8 'z$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x55b6d1f2e738 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55b6d1f2e708 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55b6d1f2e608 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b6d1f2e5c0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b6d1f2e5a8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b6d1f2e568 <col:166> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b6d1f2e5f0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b6d1f2e5d8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b6d1f2e588 <col:184> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55b6d1f2e6d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b6d1f2e658 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b6d1f2e628 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b6d1f2e6f0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55b6d1f2e6b0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55b6d1f2e680 <col:219> 'int' 0
|   |-BinaryOperator 0x55b6d1f2e8f8 <line:795:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55b6d1f2e8a0 <col:3> 'int' lvalue Var 0x55b6d1f26928 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x55b6d1f2e8e0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b6d1f2e8c0 <col:25> 'int' lvalue Var 0x55b6d1f26ff0 'z' 'int'
|   |-BinaryOperator 0x55b6d1f2ea28 <line:796:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55b6d1f2e918 <col:3> 'int' lvalue Var 0x55b6d1f26ff0 'z' 'int'
|   | `-ConditionalOperator 0x55b6d1f2e9f8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55b6d1f2e9b0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b6d1f2e998 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b6d1f2e938 <col:7> '_Bool' lvalue Var 0x55b6d1f27088 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55b6d1f2e9c8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b6d1f2e958 <col:25> 'int' lvalue Var 0x55b6d1f27108 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55b6d1f2e9e0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55b6d1f2e978 <col:37> 'int' lvalue Var 0x55b6d1f26ff0 'z' 'int'
|   |-BinaryOperator 0x55b6d1f2eac0 <line:797:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55b6d1f2ea48 <col:3> '_Bool' lvalue Var 0x55b6d1f27088 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55b6d1f2ea98 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55b6d1f2ea68 <col:28> 'int' 0
|   |-CallExpr 0x55b6d1f2eb18 <line:798:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f2eb00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f2eae0 <col:3> 'void ()' Function 0x55b6d1ecd410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b6d1f2eb70 <line:799:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f2eb58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f2eb38 <col:3> 'void ()' Function 0x55b6d1ecd350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b6d1f2ebe8 <line:800:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55b6d1f2eb90 <col:3> 'int' lvalue Var 0x55b6d1f26a48 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x55b6d1f2ebd0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b6d1f2ebb0 <col:25> 'int' lvalue Var 0x55b6d1f26b68 'a' 'int'
|   |-CallExpr 0x55b6d1f2ec40 <line:801:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f2ec28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f2ec08 <col:3> 'void ()' Function 0x55b6d1ecd410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b6d1f2ec98 <line:802:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f2ec80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f2ec60 <col:3> 'void ()' Function 0x55b6d1ecd350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b6d1f2ef80 <line:803:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55b6d1f2ecb8 <col:3> 'int' lvalue Var 0x55b6d1f26ff0 'z' 'int'
|   | `-ConditionalOperator 0x55b6d1f2ef50 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55b6d1f2ed78 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55b6d1f2ed30 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55b6d1f2ed18 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55b6d1f2ecd8 <col:7> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55b6d1f2ed60 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55b6d1f2ed48 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55b6d1f2ecf8 <col:25> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55b6d1f2ef38 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b6d1f2ed98 <col:42> 'int' lvalue Var 0x55b6d1f27730 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55b6d1f2ef18 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55b6d1f2eee8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55b6d1f2ee58 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55b6d1f2ee10 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55b6d1f2edf8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55b6d1f2edb8 <col:55> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55b6d1f2ee40 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55b6d1f2ee28 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55b6d1f2edd8 <col:73> '_Bool' lvalue Var 0x55b6d1f275b8 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55b6d1f2eeb8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b6d1f2ee78 <col:90> 'int' lvalue Var 0x55b6d1f27828 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55b6d1f2eed0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b6d1f2ee98 <col:102> 'int' lvalue Var 0x55b6d1f26ff0 'z' 'int'
|   |-BinaryOperator 0x55b6d1f2f198 <line:804:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55b6d1f2efa0 <col:3> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b6d1f2f180 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b6d1f2f150 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55b6d1f2f070 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55b6d1f2f028 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55b6d1f2f010 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55b6d1f2efc0 <col:20> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55b6d1f2f058 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55b6d1f2f040 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55b6d1f2eff0 <col:38> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55b6d1f2f108 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b6d1f2f0c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b6d1f2f090 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55b6d1f2f138 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b6d1f2f120 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b6d1f2f0e8 <col:66> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55b6d1f2f480 <line:805:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55b6d1f2f1b8 <col:3> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b6d1f2f468 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b6d1f2f438 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55b6d1f2f358 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55b6d1f2f278 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55b6d1f2f230 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55b6d1f2f218 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55b6d1f2f1d8 <col:20> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55b6d1f2f260 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55b6d1f2f248 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55b6d1f2f1f8 <col:38> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55b6d1f2f338 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55b6d1f2f2f0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55b6d1f2f2d8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55b6d1f2f298 <col:56> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55b6d1f2f320 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55b6d1f2f308 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55b6d1f2f2b8 <col:74> '_Bool' lvalue Var 0x55b6d1f275b8 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55b6d1f2f3f0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b6d1f2f3a8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b6d1f2f378 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55b6d1f2f420 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b6d1f2f408 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b6d1f2f3d0 <col:102> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55b6d1f2f688 <line:806:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55b6d1f2f4a0 <col:3> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55b6d1f2f670 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b6d1f2f640 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55b6d1f2f560 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55b6d1f2f518 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55b6d1f2f500 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55b6d1f2f4c0 <col:20> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55b6d1f2f548 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55b6d1f2f530 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55b6d1f2f4e0 <col:38> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55b6d1f2f5f8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b6d1f2f5b0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b6d1f2f580 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55b6d1f2f628 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b6d1f2f610 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b6d1f2f5d8 <col:66> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55b6d1f2f970 <line:807:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55b6d1f2f6a8 <col:3> '_Bool' lvalue Var 0x55b6d1f275b8 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55b6d1f2f958 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b6d1f2f928 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55b6d1f2f848 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55b6d1f2f768 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55b6d1f2f720 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55b6d1f2f708 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55b6d1f2f6c8 <col:20> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55b6d1f2f750 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55b6d1f2f738 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55b6d1f2f6e8 <col:38> '_Bool' lvalue Var 0x55b6d1f27360 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55b6d1f2f828 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55b6d1f2f7e0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55b6d1f2f7c8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55b6d1f2f788 <col:56> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55b6d1f2f810 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55b6d1f2f7f8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55b6d1f2f7a8 <col:74> '_Bool' lvalue Var 0x55b6d1f275b8 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55b6d1f2f8e0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b6d1f2f898 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b6d1f2f868 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55b6d1f2f910 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b6d1f2f8f8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b6d1f2f8c0 <col:102> '_Bool' lvalue Var 0x55b6d1f275b8 'z$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x55b6d1f2f9c8 <line:808:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f2f9b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f2f990 <col:3> 'void ()' Function 0x55b6d1ecd410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b6d1f2fa20 <line:809:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f2fa08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f2f9e8 <col:3> 'void ()' Function 0x55b6d1ecd350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b6d1f2fad8 <line:810:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55b6d1f2fa40 <col:3> 'int' lvalue Var 0x55b6d1f266e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55b6d1f2fab8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55b6d1f2faa0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b6d1f2fa60 <col:22> 'int' lvalue Var 0x55b6d1f266e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55b6d1f2fa80 <col:41> 'int' 1
|   |-CallExpr 0x55b6d1f2fb30 <line:811:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b6d1f2fb18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b6d1f2faf8 <col:3> 'void ()' Function 0x55b6d1ecd410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55b6d1f2fba8 <line:812:3, col:36>
|     `-CallExpr 0x55b6d1f2fb88 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55b6d1f2fb70 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55b6d1f2fb50 <col:10> 'void *(void)' Function 0x55b6d1ecce68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55b6d1f2fd40 prev 0x55b6d1f26430 <line:814:1, line:816:1> line:814:6 fence 'void ()'
| `-CompoundStmt 0x55b6d1f2fde0 <line:815:1, line:816:1>
|-FunctionDecl 0x55b6d1f2fe10 prev 0x55b6d1f264f0 <line:817:1, line:819:1> line:817:6 isync 'void ()'
| `-CompoundStmt 0x55b6d1f2feb0 <line:818:1, line:819:1>
|-FunctionDecl 0x55b6d1f2fee0 prev 0x55b6d1f265b0 <line:820:1, line:822:1> line:820:6 lwfence 'void ()'
| `-CompoundStmt 0x55b6d1f2ff80 <line:821:1, line:822:1>
`-FunctionDecl 0x55b6d1f30000 <line:823:1, line:849:1> line:823:5 main 'int ()'
  `-CompoundStmt 0x55b6d1f32020 <line:824:1, line:849:1>
    |-DeclStmt 0x55b6d1f30118 <line:825:3, col:17>
    | `-VarDecl 0x55b6d1f300b0 <col:3, col:13> col:13 used t575 'pthread_t':'unsigned long'
    |-CallExpr 0x55b6d1f30328 <line:826:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55b6d1f30310 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b6d1f30130 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55b6d1f0d8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55b6d1f30170 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55b6d1f30150 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55b6d1f300b0 't575' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55b6d1f30368 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55b6d1f301e8 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55b6d1f301c0 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55b6d1f30188 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55b6d1f30380 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b6d1f30208 <col:38> 'void *(void *)' Function 0x55b6d1f27aa8 'P0' 'void *(void *)'
    | `-ParenExpr 0x55b6d1f30288 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55b6d1f30260 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55b6d1f30228 <col:51> 'int' 0
    |-DeclStmt 0x55b6d1f30410 <line:827:3, col:17>
    | `-VarDecl 0x55b6d1f303a8 <col:3, col:13> col:13 used t576 'pthread_t':'unsigned long'
    |-CallExpr 0x55b6d1f305b8 <line:828:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55b6d1f305a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b6d1f30428 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55b6d1f0d8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55b6d1f30468 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55b6d1f30448 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55b6d1f303a8 't576' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55b6d1f305f8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55b6d1f304e0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55b6d1f304b8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55b6d1f30480 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55b6d1f30610 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b6d1f30500 <col:38> 'void *(void *)' Function 0x55b6d1f28198 'P1' 'void *(void *)'
    | `-ParenExpr 0x55b6d1f30580 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55b6d1f30558 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55b6d1f30520 <col:51> 'int' 0
    |-DeclStmt 0x55b6d1f306a0 <line:829:3, col:17>
    | `-VarDecl 0x55b6d1f30638 <col:3, col:13> col:13 used t577 'pthread_t':'unsigned long'
    |-CallExpr 0x55b6d1f30848 <line:830:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55b6d1f30830 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b6d1f306b8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55b6d1f0d8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55b6d1f306f8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55b6d1f306d8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55b6d1f30638 't577' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55b6d1f30888 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55b6d1f30770 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55b6d1f30748 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55b6d1f30710 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55b6d1f308a0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b6d1f30790 <col:38> 'void *(void *)' Function 0x55b6d1f28800 'P2' 'void *(void *)'
    | `-ParenExpr 0x55b6d1f30810 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55b6d1f307e8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55b6d1f307b0 <col:51> 'int' 0
    |-DeclStmt 0x55b6d1f30930 <line:831:3, col:17>
    | `-VarDecl 0x55b6d1f308c8 <col:3, col:13> col:13 used t578 'pthread_t':'unsigned long'
    |-CallExpr 0x55b6d1f30ad8 <line:832:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55b6d1f30ac0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b6d1f30948 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55b6d1f0d8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55b6d1f30988 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55b6d1f30968 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55b6d1f308c8 't578' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55b6d1f30b18 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55b6d1f30a00 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55b6d1f309d8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55b6d1f309a0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55b6d1f30b30 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b6d1f30a20 <col:38> 'void *(void *)' Function 0x55b6d1f2b8a8 'P3' 'void *(void *)'
    | `-ParenExpr 0x55b6d1f30aa0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55b6d1f30a78 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55b6d1f30a40 <col:51> 'int' 0
    |-CallExpr 0x55b6d1f30b80 <line:833:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55b6d1f30b68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b6d1f30b48 <col:3> 'void ()' Function 0x55b6d1ecd350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55b6d1f30c50 <line:834:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55b6d1f30ba0 <col:3> '_Bool' lvalue Var 0x55b6d1f26c00 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55b6d1f30c38 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55b6d1f30c18 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55b6d1f30c00 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55b6d1f30bc0 <col:21> 'int' lvalue Var 0x55b6d1f266e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55b6d1f30be0 <col:41> 'int' 4
    |-CallExpr 0x55b6d1f30ca8 <line:835:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55b6d1f30c90 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b6d1f30c70 <col:3> 'void ()' Function 0x55b6d1ecd410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55b6d1f30d20 <line:836:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55b6d1f30d08 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b6d1f30cc8 <col:3> 'void (int)' Function 0x55b6d1eccca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55b6d1f30d60 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55b6d1f30d48 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55b6d1f30ce8 <col:21> '_Bool' lvalue Var 0x55b6d1f26c00 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55b6d1f30db0 <line:837:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55b6d1f30d98 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b6d1f30d78 <col:3> 'void ()' Function 0x55b6d1ecd350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55b6d1f310a8 <line:838:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55b6d1f30dd0 <col:3> 'int' lvalue Var 0x55b6d1f26ff0 'z' 'int'
    | `-ConditionalOperator 0x55b6d1f31078 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55b6d1f30e90 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55b6d1f30e48 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55b6d1f30e30 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55b6d1f30df0 <col:7> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55b6d1f30e78 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55b6d1f30e60 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55b6d1f30e10 <col:25> '_Bool' lvalue Var 0x55b6d1f27180 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55b6d1f31060 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55b6d1f30eb0 <col:42> 'int' lvalue Var 0x55b6d1f27730 'z$w_buff0' 'int'
    |   `-ParenExpr 0x55b6d1f31040 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55b6d1f31010 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55b6d1f30f70 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55b6d1f30f28 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55b6d1f30f10 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55b6d1f30ed0 <col:55> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55b6d1f30f58 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55b6d1f30f40 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55b6d1f30ef0 <col:73> '_Bool' lvalue Var 0x55b6d1f273d8 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55b6d1f30fd0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55b6d1f30f90 <col:90> 'int' lvalue Var 0x55b6d1f27828 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55b6d1f30fe8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55b6d1f30fb0 <col:102> 'int' lvalue Var 0x55b6d1f26ff0 'z' 'int'
    |-BinaryOperator 0x55b6d1f312b0 <line:839:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55b6d1f310c8 <col:3> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55b6d1f31298 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b6d1f31268 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55b6d1f31188 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55b6d1f31140 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55b6d1f31128 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55b6d1f310e8 <col:20> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55b6d1f31170 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55b6d1f31158 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55b6d1f31108 <col:38> '_Bool' lvalue Var 0x55b6d1f27180 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55b6d1f31220 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55b6d1f311d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55b6d1f311a8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55b6d1f31250 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55b6d1f31238 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55b6d1f31200 <col:66> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55b6d1f31598 <line:840:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55b6d1f312d0 <col:3> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55b6d1f31580 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b6d1f31550 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55b6d1f31470 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55b6d1f31390 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55b6d1f31348 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55b6d1f31330 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55b6d1f312f0 <col:20> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55b6d1f31378 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55b6d1f31360 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55b6d1f31310 <col:38> '_Bool' lvalue Var 0x55b6d1f27180 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55b6d1f31450 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55b6d1f31408 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55b6d1f313f0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55b6d1f313b0 <col:56> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55b6d1f31438 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55b6d1f31420 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55b6d1f313d0 <col:74> '_Bool' lvalue Var 0x55b6d1f273d8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55b6d1f31508 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55b6d1f314c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55b6d1f31490 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55b6d1f31538 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55b6d1f31520 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55b6d1f314e8 <col:102> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55b6d1f317a0 <line:841:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55b6d1f315b8 <col:3> '_Bool' lvalue Var 0x55b6d1f27180 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55b6d1f31788 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b6d1f31758 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55b6d1f31678 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55b6d1f31630 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55b6d1f31618 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55b6d1f315d8 <col:20> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55b6d1f31660 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55b6d1f31648 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55b6d1f315f8 <col:38> '_Bool' lvalue Var 0x55b6d1f27180 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55b6d1f31710 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55b6d1f316c8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55b6d1f31698 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55b6d1f31740 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55b6d1f31728 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55b6d1f316f0 <col:66> '_Bool' lvalue Var 0x55b6d1f27180 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55b6d1f31a88 <line:842:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55b6d1f317c0 <col:3> '_Bool' lvalue Var 0x55b6d1f273d8 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55b6d1f31a70 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b6d1f31a40 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55b6d1f31960 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55b6d1f31880 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55b6d1f31838 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55b6d1f31820 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55b6d1f317e0 <col:20> '_Bool' lvalue Var 0x55b6d1f277a8 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55b6d1f31868 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55b6d1f31850 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55b6d1f31800 <col:38> '_Bool' lvalue Var 0x55b6d1f27180 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55b6d1f31940 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55b6d1f318f8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55b6d1f318e0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55b6d1f318a0 <col:56> '_Bool' lvalue Var 0x55b6d1f278a0 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55b6d1f31928 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55b6d1f31910 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55b6d1f318c0 <col:74> '_Bool' lvalue Var 0x55b6d1f273d8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55b6d1f319f8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55b6d1f319b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55b6d1f31980 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55b6d1f31a28 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55b6d1f31a10 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55b6d1f319d8 <col:102> '_Bool' lvalue Var 0x55b6d1f273d8 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55b6d1f31ae0 <line:843:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55b6d1f31ac8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b6d1f31aa8 <col:3> 'void ()' Function 0x55b6d1ecd410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55b6d1f31b38 <line:844:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55b6d1f31b20 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b6d1f31b00 <col:3> 'void ()' Function 0x55b6d1ecd350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55b6d1f31ea0 <line:845:3, col:123> '_Bool' '='
    | |-DeclRefExpr 0x55b6d1f31b58 <col:3> '_Bool' lvalue Var 0x55b6d1f26c78 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55b6d1f31e88 <col:21, col:123> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55b6d1f31e70 <col:21, col:123> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55b6d1f31e50 <col:22, col:123> 'int'
    |       `-BinaryOperator 0x55b6d1f31e30 <col:23, col:122> 'int' '&&'
    |         |-BinaryOperator 0x55b6d1f31d98 <col:23, col:94> 'int' '&&'
    |         | |-BinaryOperator 0x55b6d1f31d00 <col:23, col:66> 'int' '&&'
    |         | | |-BinaryOperator 0x55b6d1f31c68 <col:23, col:38> 'int' '&&'
    |         | | | |-BinaryOperator 0x55b6d1f31bd0 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x55b6d1f31bb8 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x55b6d1f31b78 <col:23> 'int' lvalue Var 0x55b6d1f26d78 'x' 'int'
    |         | | | | `-IntegerLiteral 0x55b6d1f31b98 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x55b6d1f31c48 <col:33, col:38> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x55b6d1f31c30 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x55b6d1f31bf0 <col:33> 'int' lvalue Var 0x55b6d1f26e98 'y' 'int'
    |         | | |   `-IntegerLiteral 0x55b6d1f31c10 <col:38> 'int' 2
    |         | | `-BinaryOperator 0x55b6d1f31ce0 <col:43, col:66> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55b6d1f31cc8 <col:43> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55b6d1f31c88 <col:43> 'int' lvalue Var 0x55b6d1f26808 '__unbuffered_p2_EAX' 'int'
    |         | |   `-IntegerLiteral 0x55b6d1f31ca8 <col:66> 'int' 0
    |         | `-BinaryOperator 0x55b6d1f31d78 <col:71, col:94> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55b6d1f31d60 <col:71> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55b6d1f31d20 <col:71> 'int' lvalue Var 0x55b6d1f26928 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x55b6d1f31d40 <col:94> 'int' 1
    |         `-BinaryOperator 0x55b6d1f31e10 <col:99, col:122> 'int' '=='
    |           |-ImplicitCastExpr 0x55b6d1f31df8 <col:99> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55b6d1f31db8 <col:99> 'int' lvalue Var 0x55b6d1f26a48 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x55b6d1f31dd8 <col:122> 'int' 0
    |-CallExpr 0x55b6d1f31ef8 <line:846:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55b6d1f31ee0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b6d1f31ec0 <col:3> 'void ()' Function 0x55b6d1ecd410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55b6d1f31f70 <line:847:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55b6d1f31f58 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b6d1f31f18 <col:3> 'void (int)' Function 0x55b6d1ecd0d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55b6d1f31fb0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55b6d1f31f98 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55b6d1f31f38 <col:21> '_Bool' lvalue Var 0x55b6d1f26c78 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55b6d1f31fe8 <line:848:3, col:10>
      `-IntegerLiteral 0x55b6d1f31fc8 <col:10> 'int' 0
