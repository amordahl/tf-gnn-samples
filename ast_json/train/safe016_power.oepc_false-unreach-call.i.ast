TranslationUnitDecl 0x55ccd33fff88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55ccd3400848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55ccd3400520 '__int128'
|-TypedefDecl 0x55ccd34008b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55ccd3400540 'unsigned __int128'
|-TypedefDecl 0x55ccd3400bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55ccd3400990 'struct __NSConstantString_tag'
|   `-Record 0x55ccd3400910 '__NSConstantString_tag'
|-TypedefDecl 0x55ccd3400c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55ccd3400c20 'char *'
|   `-BuiltinType 0x55ccd3400020 'char'
|-TypedefDecl 0x55ccd343fb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55ccd3400f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55ccd3400d40 'struct __va_list_tag'
|     `-Record 0x55ccd3400cc0 '__va_list_tag'
|-FunctionDecl 0x55ccd343fc80 <pthread-wmm/safe016_power.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55ccd343fe50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55ccd343fd80 <col:31> col:34 'int'
|-FunctionDecl 0x55ccd343ffc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55ccd34400f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55ccd3440238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55ccd34401a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55ccd3440468 <col:40, col:99>
|   |-IfStmt 0x55ccd3440438 <col:42, col:88>
|   | |-UnaryOperator 0x55ccd3440318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55ccd3440300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55ccd34402e0 <col:47> 'int' lvalue ParmVar 0x55ccd34401a8 'expression' 'int'
|   | `-CompoundStmt 0x55ccd3440420 <col:59, col:88>
|   |   `-LabelStmt 0x55ccd3440408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55ccd3440398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55ccd3440380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55ccd3440330 <col:68> 'void () __attribute__((noreturn))' Function 0x55ccd34400f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55ccd3440450 <col:89>
|   `-ReturnStmt 0x55ccd3440458 <col:91>
|-FunctionDecl 0x55ccd34404b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55ccd3440570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55ccd34408f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55ccd3440628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55ccd34406a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55ccd3440728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55ccd34407a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55ccd34409b0 <line:11:22>
|-FunctionDecl 0x55ccd3465f10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55ccd3440a20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55ccd3440aa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55ccd3465d40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55ccd3465dc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55ccd3465fd0 <line:14:22>
|-FunctionDecl 0x55ccd3466280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55ccd3466040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55ccd34660c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55ccd3466140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55ccd3466338 <line:16:22>
|-TypedefDecl 0x55ccd34663a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55ccd34000e0 'unsigned char'
|-TypedefDecl 0x55ccd3466418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55ccd3400100 'unsigned short'
|-TypedefDecl 0x55ccd3466488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55ccd3400120 'unsigned int'
|-TypedefDecl 0x55ccd34664f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55ccd3400140 'unsigned long'
|-TypedefDecl 0x55ccd3466568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55ccd3400040 'signed char'
|-TypedefDecl 0x55ccd34665d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55ccd34000e0 'unsigned char'
|-TypedefDecl 0x55ccd3466648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55ccd3400060 'short'
|-TypedefDecl 0x55ccd34666b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55ccd3400100 'unsigned short'
|-TypedefDecl 0x55ccd3466728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55ccd3400080 'int'
|-TypedefDecl 0x55ccd3466798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55ccd3400120 'unsigned int'
|-TypedefDecl 0x55ccd3466808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55ccd34000a0 'long'
|-TypedefDecl 0x55ccd3466878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55ccd3400140 'unsigned long'
|-TypedefDecl 0x55ccd34668e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55ccd34000a0 'long'
|-TypedefDecl 0x55ccd3466958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55ccd3400140 'unsigned long'
|-TypedefDecl 0x55ccd34669c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55ccd3400140 'unsigned long'
|-TypedefDecl 0x55ccd3466a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55ccd3400120 'unsigned int'
|-TypedefDecl 0x55ccd3466aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55ccd3400120 'unsigned int'
|-TypedefDecl 0x55ccd3466b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55ccd3400140 'unsigned long'
|-TypedefDecl 0x55ccd3466b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55ccd3400140 'unsigned long'
|-TypedefDecl 0x55ccd3466bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55ccd3400120 'unsigned int'
|-TypedefDecl 0x55ccd3466c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55ccd3400140 'unsigned long'
|-TypedefDecl 0x55ccd3466cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55ccd34000a0 'long'
|-TypedefDecl 0x55ccd3466d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55ccd34000a0 'long'
|-TypedefDecl 0x55ccd3466dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55ccd3400080 'int'
|-RecordDecl 0x55ccd3466e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55ccd3466f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55ccd3467030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55ccd3466fd0 'struct __fsid_t' sugar
|   `-RecordType 0x55ccd3466eb0 '__fsid_t'
|     `-Record 0x55ccd3466e30 ''
|-TypedefDecl 0x55ccd34670b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55ccd34000a0 'long'
|-TypedefDecl 0x55ccd3467128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55ccd3400140 'unsigned long'
|-TypedefDecl 0x55ccd3467198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55ccd3400140 'unsigned long'
|-TypedefDecl 0x55ccd3467208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55ccd3400120 'unsigned int'
|-TypedefDecl 0x55ccd3467278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55ccd34000a0 'long'
|-TypedefDecl 0x55ccd34672e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55ccd3400120 'unsigned int'
|-TypedefDecl 0x55ccd3467358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55ccd34000a0 'long'
|-TypedefDecl 0x55ccd34673c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55ccd3400080 'int'
|-TypedefDecl 0x55ccd3467438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55ccd3400080 'int'
|-TypedefDecl 0x55ccd34674a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55ccd3400080 'int'
|-TypedefDecl 0x55ccd3467518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55ccd34007a0 'void *'
|   `-BuiltinType 0x55ccd33fffe0 'void'
|-TypedefDecl 0x55ccd3467588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55ccd34000a0 'long'
|-TypedefDecl 0x55ccd34675f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55ccd34000a0 'long'
|-TypedefDecl 0x55ccd3467668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55ccd34000a0 'long'
|-TypedefDecl 0x55ccd34676d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55ccd3400140 'unsigned long'
|-TypedefDecl 0x55ccd3467748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55ccd3400140 'unsigned long'
|-TypedefDecl 0x55ccd34677b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55ccd3400140 'unsigned long'
|-TypedefDecl 0x55ccd3467828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55ccd3400140 'unsigned long'
|-TypedefDecl 0x55ccd3467898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55ccd34000a0 'long'
|-TypedefDecl 0x55ccd3467908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55ccd34000a0 'long'
|-TypedefDecl 0x55ccd3467978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55ccd34000a0 'long'
|-TypedefDecl 0x55ccd34679e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55ccd3400140 'unsigned long'
|-TypedefDecl 0x55ccd3467a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55ccd3467a40 '__off64_t' sugar
|   |-Typedef 0x55ccd3466d68 '__off64_t'
|   `-BuiltinType 0x55ccd34000a0 'long'
|-TypedefDecl 0x55ccd3467b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55ccd3467b30 '__quad_t *'
|   `-TypedefType 0x55ccd3467ad0 '__quad_t' sugar
|     |-Typedef 0x55ccd34668e8 '__quad_t'
|     `-BuiltinType 0x55ccd34000a0 'long'
|-TypedefDecl 0x55ccd3467be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55ccd3400c20 'char *'
|   `-BuiltinType 0x55ccd3400020 'char'
|-TypedefDecl 0x55ccd3467c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55ccd34000a0 'long'
|-TypedefDecl 0x55ccd3467cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55ccd3400120 'unsigned int'
|-FunctionDecl 0x55ccd3467e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55ccd3467d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55ccd3468148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55ccd3468138 <line:73:3, col:34>
|     `-CallExpr 0x55ccd34680f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55ccd34680e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55ccd3468070 <col:10> '<builtin fn type>' Function 0x55ccd3467ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55ccd3468120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55ccd3468090 <col:29> 'unsigned int' lvalue ParmVar 0x55ccd3467d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x55ccd3467ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55ccd3467f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55ccd3467ff0 <col:10> Implicit
| `-ConstAttr 0x55ccd3468048 <col:10> Implicit
|-FunctionDecl 0x55ccd34682a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55ccd3468198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55ccd34685b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55ccd34685a8 <line:78:3, col:34>
|     `-CallExpr 0x55ccd3468568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55ccd3468550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55ccd34684d8 <col:10> '<builtin fn type>' Function 0x55ccd3468348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55ccd3468590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55ccd34684f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55ccd3468198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55ccd3468348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55ccd34683e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55ccd3468458 <col:10> Implicit
| `-ConstAttr 0x55ccd34684b0 <col:10> Implicit
|-TypedefDecl 0x55ccd34685e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55ccd3400140 'unsigned long'
|-TypedefDecl 0x55ccd3468678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55ccd3468640 '__time_t' sugar
|   |-Typedef 0x55ccd3467278 '__time_t'
|   `-BuiltinType 0x55ccd34000a0 'long'
|-RecordDecl 0x55ccd34686d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55ccd3468788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55ccd3468818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55ccd34688a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55ccd3468870 '__pid_t' sugar
|   |-Typedef 0x55ccd3466dd8 '__pid_t'
|   `-BuiltinType 0x55ccd3400080 'int'
|-RecordDecl 0x55ccd3468900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55ccd34689c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55ccd3468a10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55ccd3468ad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55ccd3468b38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55ccd3400140 'unsigned long'
|-RecordDecl 0x55ccd3468b90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55ccd346ae70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55ccd346af20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55ccd346aec0 'struct cpu_set_t' sugar
|   `-RecordType 0x55ccd3468c10 'cpu_set_t'
|     `-Record 0x55ccd3468b90 ''
|-FunctionDecl 0x55ccd346b1f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55ccd346afc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55ccd346b0d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55ccd346b2a8 <line:108:19>
|-FunctionDecl 0x55ccd346b480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55ccd346b310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55ccd346b528 <col:69>
|-FunctionDecl 0x55ccd346b6a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55ccd346b590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55ccd346b748 <col:64>
|-FunctionDecl 0x55ccd346ba08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55ccd346b7b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55ccd346b8e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55ccd346bab8 <line:114:22>
|-FunctionDecl 0x55ccd346be60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55ccd346bb20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55ccd346bc18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55ccd346bf10 <col:88>
|-FunctionDecl 0x55ccd346c1c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55ccd346bf78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55ccd346bff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55ccd346c088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55ccd346c280 <col:62>
|-FunctionDecl 0x55ccd346c3f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55ccd346c2e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55ccd346c4a0 <col:63>
|-FunctionDecl 0x55ccd346c5c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55ccd346c668 <col:47>
|-FunctionDecl 0x55ccd346c770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55ccd346c6d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55ccd346c818 <col:69>
|-FunctionDecl 0x55ccd346c920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55ccd346c888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55ccd346c9c8 <col:69>
|-FunctionDecl 0x55ccd346cc88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55ccd346ca30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55ccd346cb68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55ccd346cd38 <col:88>
|-TypedefDecl 0x55ccd346cdc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55ccd346cd90 '__clock_t' sugar
|   |-Typedef 0x55ccd34670b8 '__clock_t'
|   `-BuiltinType 0x55ccd34000a0 'long'
|-TypedefDecl 0x55ccd346d7e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55ccd346ce20 '__clockid_t' sugar
|   |-Typedef 0x55ccd34674a8 '__clockid_t'
|   `-BuiltinType 0x55ccd3400080 'int'
|-TypedefDecl 0x55ccd346d878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55ccd346d840 '__timer_t' sugar
|   |-Typedef 0x55ccd3467518 '__timer_t'
|   `-PointerType 0x55ccd34007a0 'void *'
|     `-BuiltinType 0x55ccd33fffe0 'void'
|-RecordDecl 0x55ccd346d8d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55ccd346d990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55ccd346d9f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55ccd346da60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55ccd346dac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55ccd346db30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55ccd346db98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55ccd346dc00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55ccd346dc68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55ccd346dcd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55ccd346dd38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55ccd346dda0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55ccd346ddf0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55ccd346deb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55ccd346df28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55ccd346dfd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55ccd346e1a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55ccd346e240 <col:45>
|-FunctionDecl 0x55ccd346e420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55ccd346e310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55ccd346e4c8 <col:54>
|-FunctionDecl 0x55ccd346e6c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55ccd346e530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55ccd346e5a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55ccd346e778 <line:158:22>
| `-ConstAttr 0x55ccd346f410 <col:63>
|-FunctionDecl 0x55ccd346f610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55ccd346f508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55ccd346f6b8 <col:56>
|-FunctionDecl 0x55ccd346fa60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55ccd346f728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55ccd346f7a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55ccd346f820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55ccd346f918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55ccd346fb20 <col:54>
|-RecordDecl 0x55ccd346fb78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55ccd346fc28 parent 0x55ccd33fff88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55ccd346fe88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55ccd346ff28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55ccd346ff90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55ccd346fff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55ccd34700e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55ccd3470208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55ccd34701b0 'struct __locale_struct *'
|   `-ElaboratedType 0x55ccd3470140 'struct __locale_struct' sugar
|     `-RecordType 0x55ccd346fc00 'struct __locale_struct'
|       `-Record 0x55ccd346fb78 '__locale_struct'
|-TypedefDecl 0x55ccd34702b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55ccd3470280 '__locale_t' sugar
|   |-Typedef 0x55ccd3470208 '__locale_t'
|   `-PointerType 0x55ccd34701b0 'struct __locale_struct *'
|     `-ElaboratedType 0x55ccd3470140 'struct __locale_struct' sugar
|       `-RecordType 0x55ccd346fc00 'struct __locale_struct'
|         `-Record 0x55ccd346fb78 '__locale_struct'
|-FunctionDecl 0x55ccd34706b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55ccd3470328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55ccd34703a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55ccd3470438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55ccd34704c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55ccd3470540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55ccd3470778 <col:40>
|-FunctionDecl 0x55ccd3470968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55ccd3470840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55ccd3470a10 <col:66>
|-FunctionDecl 0x55ccd3470b20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55ccd3470a78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55ccd3470bc8 <col:69>
|-FunctionDecl 0x55ccd3470df8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55ccd3470c30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55ccd3470cc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55ccd3470ea8 <col:52>
|-FunctionDecl 0x55ccd3471050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55ccd3470f10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55ccd3470fa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55ccd3471100 <col:55>
|-FunctionDecl 0x55ccd3471298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55ccd3471180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55ccd3471340 <col:62>
|-FunctionDecl 0x55ccd3471578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55ccd34713a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55ccd3471620 <col:60>
|-FunctionDecl 0x55ccd3471848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55ccd34716a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55ccd3471720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55ccd34718f8 <col:44>
|-FunctionDecl 0x55ccd3471b08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55ccd3471960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55ccd34719e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55ccd3471bb8 <col:49>
|-VarDecl 0x55ccd3471cb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55ccd3471d38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55ccd3471db8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55ccd3471e80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55ccd3471fb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55ccd3472050 <col:42>
|-VarDecl 0x55ccd34720c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55ccd3472140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55ccd34722c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55ccd34721b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55ccd3472370 <col:57>
|-FunctionDecl 0x55ccd34734f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55ccd34723f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55ccd3473598 <col:56>
|-FunctionDecl 0x55ccd34736a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55ccd3473618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55ccd3473750 <col:59>
|-FunctionDecl 0x55ccd3473858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55ccd34737c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55ccd3473900 <col:48>
| `-ConstAttr 0x55ccd3473958 <col:89>
|-FunctionDecl 0x55ccd3473bb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55ccd3473a08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55ccd3473a98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55ccd3473e18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55ccd3473ca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55ccd3473d38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55ccd3473ec8 <col:88>
|-FunctionDecl 0x55ccd3474060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55ccd3473f30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55ccd3473fc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55ccd3474110 <col:88>
|-FunctionDecl 0x55ccd3474328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55ccd3474178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55ccd3474208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55ccd34743d8 <line:209:22>
|-FunctionDecl 0x55ccd3474778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55ccd3474440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55ccd3474500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55ccd3474590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55ccd3474620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55ccd3474a78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55ccd3474878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55ccd3474950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55ccd3474b28 <col:85>
|-FunctionDecl 0x55ccd3474f18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55ccd3474b90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55ccd3474cc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55ccd3474dd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55ccd3474fd0 <col:52>
|-FunctionDecl 0x55ccd3475148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55ccd3475038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55ccd34751f0 <col:61>
|-FunctionDecl 0x55ccd3475668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55ccd3475258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55ccd34752d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55ccd3475408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55ccd3475510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55ccd3475728 <col:62>
|-FunctionDecl 0x55ccd3475948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55ccd3475790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55ccd3475820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55ccd34759f8 <line:222:22>
|-FunctionDecl 0x55ccd3475af8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55ccd3475a60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55ccd3475ba0 <col:65>
|-TypedefDecl 0x55ccd3475c10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55ccd3400140 'unsigned long'
|-RecordDecl 0x55ccd3475c68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55ccd3475db0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55ccd3475e18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55ccd3475ec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55ccd3475e70 'union pthread_attr_t' sugar
|   `-RecordType 0x55ccd3475cf0 'union pthread_attr_t'
|     `-Record 0x55ccd3475c68 'pthread_attr_t'
|-RecordDecl 0x55ccd3475f20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55ccd3476098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55ccd3476110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55ccd34761c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55ccd3476160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55ccd3475fa0 'struct __pthread_internal_list'
|     `-Record 0x55ccd3475f20 '__pthread_internal_list'
|-RecordDecl 0x55ccd3476230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55ccd34762d8 parent 0x55ccd33fff88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55ccd34763b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55ccd3476418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55ccd3476480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55ccd347a530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55ccd347a598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55ccd347a600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55ccd347a688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55ccd347a740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55ccd347a830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55ccd347a898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55ccd347aa20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55ccd347a9c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55ccd34762b0 'pthread_mutex_t'
|     `-Record 0x55ccd3476230 ''
|-RecordDecl 0x55ccd347aa90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55ccd347abd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55ccd347ac38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55ccd347acf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55ccd347ac90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55ccd347ab10 'pthread_mutexattr_t'
|     `-Record 0x55ccd347aa90 ''
|-RecordDecl 0x55ccd347ad60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55ccd347ae08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55ccd347aed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55ccd347af38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55ccd347afa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55ccd347b008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55ccd347b070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55ccd347b0d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55ccd347b140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55ccd347b1a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55ccd347b260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe016_power.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe016_power.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55ccd347b350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55ccd347b3b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55ccd347b540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55ccd347b490 'union pthread_cond_t' sugar
|   `-RecordType 0x55ccd347ade0 'pthread_cond_t'
|     `-Record 0x55ccd347ad60 ''
|-RecordDecl 0x55ccd347b5b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55ccd347b6b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55ccd347b718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55ccd347b7d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55ccd347b770 'union pthread_condattr_t' sugar
|   `-RecordType 0x55ccd347b630 'pthread_condattr_t'
|     `-Record 0x55ccd347b5b0 ''
|-TypedefDecl 0x55ccd347b858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55ccd3400120 'unsigned int'
|-TypedefDecl 0x55ccd347b8c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55ccd3400080 'int'
|-RecordDecl 0x55ccd347b920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55ccd347b9c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55ccd347ba90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55ccd347baf8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55ccd347bb60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55ccd347bbc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55ccd347bc30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55ccd347bc98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55ccd347bd00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55ccd347bd68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55ccd347bdd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55ccd347be38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55ccd347bea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55ccd347bf50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe016_power.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe016_power.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x55ccd347bff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55ccd347c060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55ccd347c1b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55ccd347c150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55ccd347b9a0 'pthread_rwlock_t'
|     `-Record 0x55ccd347b920 ''
|-RecordDecl 0x55ccd347c220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55ccd347c360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55ccd347c3c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55ccd347c480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55ccd347c420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55ccd347c2a0 'pthread_rwlockattr_t'
|     `-Record 0x55ccd347c220 ''
|-TypedefDecl 0x55ccd347e560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55ccd3400084 'volatile int' volatile
|   `-BuiltinType 0x55ccd3400080 'int'
|-RecordDecl 0x55ccd347e5b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55ccd347e700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55ccd347e768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55ccd347e820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55ccd347e7c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55ccd347e640 'pthread_barrier_t'
|     `-Record 0x55ccd347e5b8 ''
|-RecordDecl 0x55ccd347e890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55ccd347e990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55ccd347e9f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55ccd347eab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55ccd347ea50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55ccd347e910 'pthread_barrierattr_t'
|     `-Record 0x55ccd347e890 ''
|-TypedefDecl 0x55ccd347ebc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55ccd347eb60 'long [8]' 8 
|   `-BuiltinType 0x55ccd34000a0 'long'
|-EnumDecl 0x55ccd347ec20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55ccd347ece8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55ccd347ed38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55ccd347ed88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55ccd347ee58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55ccd347eea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55ccd347eef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55ccd347ef48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55ccd347efd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55ccd347efb8 <col:26> 'int'
| |   `-DeclRefExpr 0x55ccd347ef98 <col:26> 'int' EnumConstant 0x55ccd347ee58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55ccd347f058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55ccd347f040 <col:29> 'int'
| |   `-DeclRefExpr 0x55ccd347f020 <col:29> 'int' EnumConstant 0x55ccd347eea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55ccd347f0e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55ccd347f0c8 <col:30> 'int'
| |   `-DeclRefExpr 0x55ccd347f0a8 <col:30> 'int' EnumConstant 0x55ccd347eef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55ccd347f168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55ccd347f150 <col:27> 'int'
|     `-DeclRefExpr 0x55ccd347f130 <col:27> 'int' EnumConstant 0x55ccd347efd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55ccd347f1b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55ccd347f288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55ccd347f310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55ccd347f2f8 <col:30> 'int'
| |   `-DeclRefExpr 0x55ccd347f2d8 <col:30> 'int' EnumConstant 0x55ccd347f288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55ccd347f360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55ccd347f3e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55ccd347f3d0 <col:29> 'int'
|     `-DeclRefExpr 0x55ccd347f3b0 <col:29> 'int' EnumConstant 0x55ccd347f360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55ccd347f438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55ccd347f508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55ccd347f570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55ccd347f5c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55ccd347f610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55ccd347f6d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55ccd347f728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55ccd347f778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55ccd347f800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55ccd347f7e8 <col:31> 'int'
|     `-DeclRefExpr 0x55ccd347f7c8 <col:31> 'int' EnumConstant 0x55ccd347f6d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55ccd347f850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55ccd347f918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55ccd347f968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55ccd347f9b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55ccd347fa88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55ccd347fad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55ccd347fb28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55ccd347fbf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55ccd347fc48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55ccd347fc98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55ccd347fed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55ccd347ff40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55ccd347ffa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55ccd34800c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55ccd3480118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55ccd34801e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55ccd3480238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55ccd3480288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55ccd3480358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55ccd34803a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55ccd34809d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55ccd34804a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55ccd34805c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ccd34807c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55ccd3480840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55ccd3480a98 <col:47>
| |-NonNullAttr 0x55ccd3480af0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55ccd3480b28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55ccd3480c50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55ccd3480b80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55ccd3480ea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55ccd3480d08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55ccd3480d88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55ccd3481078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55ccd3480f68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55ccd3481120 <col:60>
|-FunctionDecl 0x55ccd3481270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55ccd3481310 <col:54>
| `-ConstAttr 0x55ccd3481368 <col:95>
|-FunctionDecl 0x55ccd3481da0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55ccd34813a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55ccd3481418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55ccd3481e50 <line:395:19>
| `-ConstAttr 0x55ccd3481ea8 <col:60>
|-FunctionDecl 0x55ccd3482078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55ccd3481f40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55ccd3482120 <col:71>
| `-NonNullAttr 0x55ccd3482178 <col:112, col:126> 1
|-FunctionDecl 0x55ccd3482280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55ccd34821c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55ccd3482328 <line:398:22>
| `-NonNullAttr 0x55ccd3482380 <col:63, col:77> 1
|-FunctionDecl 0x55ccd34825a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55ccd34823c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55ccd3482448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55ccd3482658 <line:401:22>
| `-NonNullAttr 0x55ccd34826b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ccd34828b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55ccd34826f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ccd3482778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55ccd3482968 <line:404:22>
| `-NonNullAttr 0x55ccd34829c0 <col:63, col:77> 1
|-FunctionDecl 0x55ccd3482c18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55ccd3482a08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55ccd3482ab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55ccd3482cc8 <line:407:22>
| `-NonNullAttr 0x55ccd3482d20 <col:63, col:80> 1 2
|-FunctionDecl 0x55ccd3483f78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55ccd3483dc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ccd3483e38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55ccd3484028 <line:410:22>
| `-NonNullAttr 0x55ccd3484080 <col:63, col:77> 1
|-FunctionDecl 0x55ccd34842b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55ccd34840c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ccd3484158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55ccd3484368 <line:413:22>
| `-NonNullAttr 0x55ccd34843c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ccd34845f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55ccd3484408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ccd3484498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55ccd34846a8 <col:37>
| `-NonNullAttr 0x55ccd3484700 <col:78, col:95> 1 2
|-FunctionDecl 0x55ccd34848e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ccd3484748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ccd34847c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55ccd3484998 <line:419:22>
| `-NonNullAttr 0x55ccd34849f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ccd3484b78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55ccd3484a38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ccd3484ab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55ccd3484c28 <line:421:22>
| `-NonNullAttr 0x55ccd3484c80 <col:63, col:77> 1
|-FunctionDecl 0x55ccd3485e58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ccd3484cc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ccd3484d48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55ccd3485f08 <line:424:22>
| `-NonNullAttr 0x55ccd3485f60 <col:63, col:80> 1 2
|-FunctionDecl 0x55ccd34860e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55ccd3485fa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ccd3486028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55ccd3486198 <line:427:22>
| `-NonNullAttr 0x55ccd34861f0 <col:63, col:77> 1
|-FunctionDecl 0x55ccd3486398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ccd3486238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ccd34862b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55ccd3486448 <line:430:22>
| `-NonNullAttr 0x55ccd34864a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ccd3486628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55ccd34864e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ccd3486568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55ccd34866d8 <line:432:22>
| `-NonNullAttr 0x55ccd3486730 <col:63, col:77> 1
|-FunctionDecl 0x55ccd3486958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55ccd3486778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ccd34867f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55ccd3486a08 <line:435:22>
| |-NonNullAttr 0x55ccd3486a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55ccd3486a98 <col:100> "" ""
|-FunctionDecl 0x55ccd3486ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55ccd3486ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ccd3486b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55ccd3486d58 <line:438:22>
| |-NonNullAttr 0x55ccd3486db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x55ccd3486df8 <col:97> "" ""
|-FunctionDecl 0x55ccd3486fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55ccd3486e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ccd3486ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55ccd3487098 <line:441:22>
| `-NonNullAttr 0x55ccd34870f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ccd3487270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55ccd3487138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ccd34871b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55ccd3487320 <line:444:22>
| `-NonNullAttr 0x55ccd3487378 <col:63, col:77> 1
|-FunctionDecl 0x55ccd3487668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55ccd34873c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ccd3487448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55ccd34874c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55ccd3487720 <line:448:22>
| `-NonNullAttr 0x55ccd3487778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55ccd3487a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55ccd34877d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ccd3487850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55ccd34878c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55ccd3487ae0 <col:43>
| `-NonNullAttr 0x55ccd3487b38 <col:84, col:98> 1
|-FunctionDecl 0x55ccd3487e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55ccd3487b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55ccd3487c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55ccd3487c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55ccd3487ef8 <line:453:22>
| `-NonNullAttr 0x55ccd3487f50 <col:63, col:77> 3
|-FunctionDecl 0x55ccd3488228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55ccd3487f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55ccd3488018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55ccd34880a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55ccd34882e0 <line:457:22>
| `-NonNullAttr 0x55ccd3488338 <col:63, col:80> 2 3
|-FunctionDecl 0x55ccd3488528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55ccd3488388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55ccd3488408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55ccd34885d8 <line:459:22>
|-FunctionDecl 0x55ccd34889a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55ccd34886a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55ccd3488840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55ccd3488a58 <col:52, col:69> 1 2
|-FunctionDecl 0x55ccd3488c00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55ccd3488ae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55ccd3488b60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55ccd3488e10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55ccd3488cc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55ccd3488d48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55ccd3488f68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55ccd3488ed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55ccd34890a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55ccd3489148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55ccd34891f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55ccd34892e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55ccd3489350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55ccd3489520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe016_power.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55ccd3489618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55ccd34896d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55ccd3489670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55ccd34891d0 '__pthread_unwind_buf_t'
| |   `-Record 0x55ccd3489148 ''
| `-AlignedAttr 0x55ccd3489728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55ccd34897a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55ccd3489900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55ccd3489968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55ccd34899d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55ccd3489a38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55ccd3489c40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55ccd3489b30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55ccd3489e20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55ccd3489cf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55ccd3489fe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55ccd3489ed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55ccd348a088 <line:488:22>
|-RecordDecl 0x55ccd348a0e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55ccd348a3f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55ccd348a258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55ccd348a2d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55ccd348a4a8 <col:86>
| `-ReturnsTwiceAttr 0x55ccd348a500 <col:12> Implicit
|-FunctionDecl 0x55ccd348a828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55ccd348a5d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55ccd348a6e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55ccd348a8d8 <line:494:22>
| `-NonNullAttr 0x55ccd348a930 <col:63, col:77> 1
|-FunctionDecl 0x55ccd348aaa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55ccd348a978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55ccd348ab50 <line:496:22>
| `-NonNullAttr 0x55ccd348aba8 <col:63, col:77> 1
|-FunctionDecl 0x55ccd348acb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55ccd348abf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55ccd348ad58 <line:498:22>
| `-NonNullAttr 0x55ccd348adb0 <col:52, col:66> 1
|-FunctionDecl 0x55ccd348aee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55ccd348ae30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55ccd348af90 <line:500:22>
| `-NonNullAttr 0x55ccd348afe8 <col:52, col:66> 1
|-FunctionDecl 0x55ccd348b228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55ccd348b038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55ccd348b0c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55ccd348b2d8 <col:36>
| `-NonNullAttr 0x55ccd348b330 <col:66, col:83> 1 2
|-FunctionDecl 0x55ccd348b430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55ccd348b378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55ccd348b4d8 <line:505:22>
| `-NonNullAttr 0x55ccd348b530 <col:52, col:66> 1
|-FunctionDecl 0x55ccd348b7c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ccd348b5e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55ccd348b660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55ccd348b878 <line:509:22>
| `-NonNullAttr 0x55ccd348b8d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ccd348bb98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55ccd348b918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55ccd348b998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55ccd348ba18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55ccd348bc50 <line:513:22>
| `-NonNullAttr 0x55ccd348bca8 <col:63, col:80> 1 3
|-FunctionDecl 0x55ccd348be40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55ccd348bcf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55ccd348bee8 <line:515:22>
| `-NonNullAttr 0x55ccd348bf40 <col:63, col:77> 1
|-FunctionDecl 0x55ccd348c128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55ccd348bff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55ccd348c1d0 <line:517:22>
| `-NonNullAttr 0x55ccd348c228 <col:63, col:77> 1
|-FunctionDecl 0x55ccd348c330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55ccd348c278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55ccd348c3d8 <line:519:22>
| `-NonNullAttr 0x55ccd348c430 <col:63, col:77> 1
|-FunctionDecl 0x55ccd348c658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ccd348c478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55ccd348c4f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55ccd348c708 <line:523:22>
| `-NonNullAttr 0x55ccd348c760 <col:63, col:80> 1 2
|-FunctionDecl 0x55ccd348c968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55ccd348c7a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55ccd348c828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55ccd348ca18 <line:526:22>
| `-NonNullAttr 0x55ccd348ca70 <col:63, col:77> 1
|-FunctionDecl 0x55ccd348cc18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ccd348cab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55ccd348cb38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55ccd348ccc8 <line:529:22>
| `-NonNullAttr 0x55ccd348cd20 <col:63, col:80> 1 2
|-FunctionDecl 0x55ccd348df20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55ccd348cd68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55ccd348de60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55ccd348dfd0 <line:531:22>
| `-NonNullAttr 0x55ccd348e028 <col:63, col:77> 1
|-FunctionDecl 0x55ccd348e1d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ccd348e078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55ccd348e0f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55ccd348e288 <line:535:22>
| `-NonNullAttr 0x55ccd348e2e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ccd348e468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55ccd348e328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55ccd348e3a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55ccd348e518 <line:538:22>
| `-NonNullAttr 0x55ccd348e570 <col:63, col:77> 1
|-FunctionDecl 0x55ccd348e718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ccd348e5b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55ccd348e638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55ccd348e7c8 <line:542:22>
| `-NonNullAttr 0x55ccd348e820 <col:63, col:80> 1 2
|-FunctionDecl 0x55ccd348e9a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55ccd348e868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55ccd348e8e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55ccd348ea58 <line:545:22>
| `-NonNullAttr 0x55ccd348eab0 <col:63, col:77> 1
|-FunctionDecl 0x55ccd348ec98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55ccd348eaf8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55ccd348eb78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55ccd348ed48 <line:548:22>
| `-NonNullAttr 0x55ccd348eda0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ccd348ff58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55ccd348ede8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55ccd348fe98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55ccd3490008 <line:551:22>
| `-NonNullAttr 0x55ccd3490060 <col:63, col:77> 1
|-FunctionDecl 0x55ccd3490398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55ccd3490140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55ccd3490250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55ccd3490448 <col:29>
| `-NonNullAttr 0x55ccd34904a0 <col:70, col:84> 1
|-FunctionDecl 0x55ccd3490618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55ccd34904e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55ccd34906c0 <line:556:22>
| `-NonNullAttr 0x55ccd3490718 <col:63, col:77> 1
|-FunctionDecl 0x55ccd3490820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55ccd3490768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55ccd34908c8 <line:558:22>
| `-NonNullAttr 0x55ccd3490920 <col:52, col:66> 1
|-FunctionDecl 0x55ccd3490a20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55ccd3490968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55ccd3490ac8 <line:560:19>
| `-NonNullAttr 0x55ccd3490b20 <col:49, col:63> 1
|-FunctionDecl 0x55ccd3490d58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55ccd3490b68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55ccd3490bf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55ccd3490e08 <col:39>
| `-NonNullAttr 0x55ccd3490e90 <col:69, col:86> 1 2
|-FunctionDecl 0x55ccd3490f90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55ccd3490ed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55ccd3491038 <line:565:22>
| `-NonNullAttr 0x55ccd3491090 <col:52, col:66> 1
|-FunctionDecl 0x55ccd3491190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55ccd34910d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55ccd3491238 <line:567:22>
| `-NonNullAttr 0x55ccd3491290 <col:52, col:66> 1
|-FunctionDecl 0x55ccd3491448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55ccd34912d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55ccd3491368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55ccd34914f8 <col:39>
| `-NonNullAttr 0x55ccd3491550 <col:69, col:86> 1 2
|-FunctionDecl 0x55ccd3491650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55ccd3491598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55ccd34916f8 <line:572:22>
| `-NonNullAttr 0x55ccd3491750 <col:52, col:66> 1
|-FunctionDecl 0x55ccd3491938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55ccd3491800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55ccd34919e0 <line:574:22>
| `-NonNullAttr 0x55ccd3491a38 <col:63, col:77> 1
|-FunctionDecl 0x55ccd3491b40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55ccd3491a88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55ccd3491be8 <line:576:22>
| `-NonNullAttr 0x55ccd3491c40 <col:63, col:77> 1
|-FunctionDecl 0x55ccd3491ea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ccd3491c88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55ccd3491d08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55ccd3491f50 <line:580:22>
| `-NonNullAttr 0x55ccd3491fa8 <col:63, col:80> 1 2
|-FunctionDecl 0x55ccd34921b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55ccd3491ff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55ccd3492078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55ccd3492268 <line:583:22>
| `-NonNullAttr 0x55ccd34922c0 <col:63, col:77> 1
|-FunctionDecl 0x55ccd3492468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ccd3492308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55ccd3492388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55ccd3492518 <line:587:22>
| `-NonNullAttr 0x55ccd3492570 <col:63, col:80> 1 2
|-FunctionDecl 0x55ccd34926f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55ccd34925b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55ccd3492638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55ccd34927a8 <col:36>
| `-NonNullAttr 0x55ccd3492800 <col:77, col:91> 1
|-FunctionDecl 0x55ccd3492b38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55ccd34928e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55ccd34929f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55ccd3492be8 <line:592:22>
| `-NonNullAttr 0x55ccd3492c40 <col:63, col:77> 1
|-FunctionDecl 0x55ccd3492db8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55ccd3492c88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55ccd3492e60 <line:594:22>
| `-NonNullAttr 0x55ccd3492ee0 <col:63, col:77> 1
|-FunctionDecl 0x55ccd3492fe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55ccd3492f28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55ccd3493088 <line:596:22>
| `-NonNullAttr 0x55ccd34930e0 <col:52, col:66> 1
|-FunctionDecl 0x55ccd34931e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55ccd3493128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55ccd3493288 <line:598:22>
| `-NonNullAttr 0x55ccd34932e0 <col:52, col:66> 1
|-FunctionDecl 0x55ccd3493508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55ccd3493328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55ccd34933a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55ccd34935b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55ccd34938e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55ccd3493638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55ccd34936b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55ccd3493740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55ccd34939a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55ccd3493bb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55ccd3493a80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55ccd3493c60 <line:607:22>
| `-NonNullAttr 0x55ccd3493cb8 <col:63, col:77> 1
|-FunctionDecl 0x55ccd3493dc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55ccd3493d08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55ccd3493e68 <line:609:22>
| `-NonNullAttr 0x55ccd3493ef0 <col:63, col:77> 1
|-FunctionDecl 0x55ccd3494118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ccd3493f38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55ccd3493fb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55ccd34941c8 <line:613:22>
| `-NonNullAttr 0x55ccd3494220 <col:63, col:80> 1 2
|-FunctionDecl 0x55ccd3494428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55ccd3494268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55ccd34942e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55ccd34944d8 <col:37>
| `-NonNullAttr 0x55ccd3494530 <col:78, col:92> 1
|-FunctionDecl 0x55ccd3494748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55ccd3494578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55ccd3494620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55ccd34947f8 <line:619:22>
| `-NonNullAttr 0x55ccd3494850 <col:63, col:80> 1 2
|-FunctionDecl 0x55ccd3494a18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55ccd3494898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55ccd3494910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55ccd3494ac8 <line:622:22>
| `-NonNullAttr 0x55ccd3494b20 <col:63, col:77> 1
|-FunctionDecl 0x55ccd3494dc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55ccd3494c00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55ccd3494c80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55ccd3494e78 <line:624:22>
| `-NonNullAttr 0x55ccd3494f00 <col:63, col:77> 1
|-FunctionDecl 0x55ccd3495078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55ccd3494f48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55ccd3495120 <line:626:22>
| `-NonNullAttr 0x55ccd3495178 <col:63, col:77> 1
|-FunctionDecl 0x55ccd3495280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55ccd34951c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55ccd3495328 <line:628:22>
| `-NonNullAttr 0x55ccd3495380 <col:52, col:66> 1
|-FunctionDecl 0x55ccd3495480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55ccd34953c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55ccd3495528 <line:630:22>
| `-NonNullAttr 0x55ccd3495580 <col:52, col:66> 1
|-FunctionDecl 0x55ccd3495680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55ccd34955c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55ccd3495728 <line:632:22>
| `-NonNullAttr 0x55ccd3495780 <col:52, col:66> 1
|-FunctionDecl 0x55ccd3495b58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55ccd3495860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55ccd3495970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55ccd34959f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55ccd3495c10 <line:636:22>
| `-NonNullAttr 0x55ccd3495c68 <col:63, col:77> 1
|-FunctionDecl 0x55ccd3495de8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55ccd3495cb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55ccd3495e90 <line:638:22>
| `-NonNullAttr 0x55ccd3495f10 <col:63, col:77> 1
|-FunctionDecl 0x55ccd3496010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55ccd3495f58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55ccd34960b8 <line:640:22>
| `-NonNullAttr 0x55ccd3496110 <col:52, col:66> 1
|-FunctionDecl 0x55ccd34962f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55ccd34961c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55ccd34963a0 <line:642:22>
| `-NonNullAttr 0x55ccd34963f8 <col:63, col:77> 1
|-FunctionDecl 0x55ccd3496500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55ccd3496448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55ccd34965a8 <line:644:22>
| `-NonNullAttr 0x55ccd3496600 <col:63, col:77> 1
|-FunctionDecl 0x55ccd3496828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ccd3496648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55ccd34966c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55ccd34968d8 <line:648:22>
| `-NonNullAttr 0x55ccd3496930 <col:63, col:80> 1 2
|-FunctionDecl 0x55ccd3496b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55ccd3496978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55ccd34969f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55ccd3496be8 <line:651:22>
| `-NonNullAttr 0x55ccd3496c40 <col:63, col:77> 1
|-FunctionDecl 0x55ccd3496fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55ccd3496d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55ccd3496e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55ccd3497058 <line:654:22>
| `-NonNullAttr 0x55ccd34970b0 <col:63, col:77> 1
|-FunctionDecl 0x55ccd3497208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55ccd34970f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55ccd34972b0 <col:69>
|-FunctionDecl 0x55ccd3497428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55ccd3497318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55ccd34974d0 <col:72>
|-FunctionDecl 0x55ccd3497708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55ccd3497538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55ccd34975e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55ccd34977b8 <col:44>
|-FunctionDecl 0x55ccd34979d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55ccd3497820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55ccd3497898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55ccd3497a88 <line:661:22>
| `-NonNullAttr 0x55ccd3497ae0 <col:63, col:77> 2
|-FunctionDecl 0x55ccd3498f50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55ccd3497bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55ccd3497cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55ccd3497de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55ccd3499008 <col:47>
|-FunctionDecl 0x55ccd3499110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55ccd3499078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55ccd3499268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55ccd34991d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55ccd34993c0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55ccd3499328 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55ccd3499518 <line:669:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x55ccd3499480 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55ccd34995e0 <line:670:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55ccd34996a0 <line:671:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55ccd3499760 <line:672:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55ccd3499818 <line:673:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55ccd3499898 prev 0x55ccd3499818 <line:674:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55ccd3499900 <col:24> 'int' 0
|-VarDecl 0x55ccd3499938 <line:675:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55ccd34999b8 prev 0x55ccd3499938 <line:676:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55ccd3499a20 <col:27> 'int' 0
|-VarDecl 0x55ccd3499a50 <line:677:1, col:7> col:7 __unbuffered_p0_EAX$flush_delayed '_Bool'
|-VarDecl 0x55ccd3499ad0 <line:678:1, col:5> col:5 __unbuffered_p0_EAX$mem_tmp 'int'
|-VarDecl 0x55ccd3499b48 <line:679:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x55ccd3499bc0 <line:680:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x55ccd3499c38 <line:681:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x55ccd3499cb0 <line:682:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x55ccd3499d28 <line:683:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd4 '_Bool'
|-VarDecl 0x55ccd3499da0 <line:684:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x55ccd3499e18 <line:685:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x55ccd3499e90 <line:686:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x55ccd3499f20 <line:687:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x55ccd3499f98 <line:688:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd4 '_Bool'
|-VarDecl 0x55ccd349a010 <line:689:1, col:7> col:7 used __unbuffered_p0_EAX$read_delayed '_Bool'
|-VarDecl 0x55ccd349a090 <line:690:1, col:6> col:6 used __unbuffered_p0_EAX$read_delayed_var 'int *'
|-VarDecl 0x55ccd349a110 <line:691:1, col:5> col:5 __unbuffered_p0_EAX$w_buff0 'int'
|-VarDecl 0x55ccd349a188 <line:692:1, col:7> col:7 __unbuffered_p0_EAX$w_buff0_used '_Bool'
|-VarDecl 0x55ccd349a208 <line:693:1, col:5> col:5 __unbuffered_p0_EAX$w_buff1 'int'
|-VarDecl 0x55ccd349a280 <line:694:1, col:7> col:7 __unbuffered_p0_EAX$w_buff1_used '_Bool'
|-VarDecl 0x55ccd349a300 <line:695:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55ccd349a380 prev 0x55ccd349a300 <line:696:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55ccd349a3e8 <col:27> 'int' 0
|-VarDecl 0x55ccd349a418 <line:697:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55ccd349a490 <line:698:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55ccd349a510 <line:699:1, col:5> col:5 used x 'int'
|-VarDecl 0x55ccd349a590 prev 0x55ccd349a510 <line:700:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55ccd349a5f8 <col:9> 'int' 0
|-VarDecl 0x55ccd349a630 <line:701:1, col:5> col:5 used y 'int'
|-VarDecl 0x55ccd349a6b0 prev 0x55ccd349a630 <line:702:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55ccd349a718 <col:9> 'int' 0
|-VarDecl 0x55ccd349a748 <line:703:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x55ccd349a7c8 <line:704:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x55ccd349a840 <line:705:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x55ccd349a8b8 <line:706:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x55ccd349a930 <line:707:1, col:7> col:7 y$r_buff0_thd2 '_Bool'
|-VarDecl 0x55ccd349a9a8 <line:708:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x55ccd349aa20 <line:709:1, col:7> col:7 used y$r_buff0_thd4 '_Bool'
|-VarDecl 0x55ccd349aa98 <line:710:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x55ccd349ab10 <line:711:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x55ccd349ab88 <line:712:1, col:7> col:7 y$r_buff1_thd2 '_Bool'
|-VarDecl 0x55ccd349ac00 <line:713:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x55ccd349ac78 <line:714:1, col:7> col:7 used y$r_buff1_thd4 '_Bool'
|-VarDecl 0x55ccd349acf0 <line:715:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x55ccd349ad70 <line:716:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x55ccd349adf0 <line:717:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x55ccd349ae68 <line:718:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x55ccd349af30 <line:719:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x55ccd349afa8 <line:720:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x55ccd349b020 <line:721:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55ccd349b098 <line:722:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x55ccd349b110 <line:723:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55ccd349b228 prev 0x55ccd3499110 <line:724:1, line:754:1> line:724:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55ccd349b190 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55ccd349fb38 <line:725:1, line:754:1>
|   |-CallExpr 0x55ccd349b338 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ccd349b320 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ccd349b2d0 <col:3> 'void ()' Function 0x55ccd34404b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ccd349b408 <line:727:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55ccd349b358 <col:3> '_Bool' lvalue Var 0x55ccd349b020 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55ccd349b3e8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55ccd349b3d0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55ccd349b378 <col:19> '_Bool (void)' Function 0x55ccd343fc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55ccd349b4a0 <line:728:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55ccd349b428 <col:3> '_Bool' lvalue Var 0x55ccd349b110 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55ccd349b480 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55ccd349b468 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55ccd349b448 <col:19> '_Bool (void)' Function 0x55ccd343fc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55ccd349b518 <line:729:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55ccd349b4c0 <col:3> '_Bool' lvalue Var 0x55ccd349a748 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55ccd349b500 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ccd349b4e0 <col:21> '_Bool' lvalue Var 0x55ccd349b110 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55ccd349b590 <line:730:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55ccd349b538 <col:3> 'int' lvalue Var 0x55ccd349a7c8 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55ccd349b578 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ccd349b558 <col:15> 'int' lvalue Var 0x55ccd349a6b0 'y' 'int'
|   |-BinaryOperator 0x55ccd349b628 <line:731:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55ccd349b5b0 <col:3> '_Bool' lvalue Var 0x55ccd349b098 'weak$$choice1' '_Bool'
|   | `-CallExpr 0x55ccd349b608 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55ccd349b5f0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55ccd349b5d0 <col:19> '_Bool (void)' Function 0x55ccd343fc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55ccd349c060 <line:732:3, col:363> 'int' '='
|   | |-DeclRefExpr 0x55ccd349b648 <col:3> 'int' lvalue Var 0x55ccd349a6b0 'y' 'int'
|   | `-ConditionalOperator 0x55ccd349c030 <col:7, col:363> 'int'
|   |   |-UnaryOperator 0x55ccd349b6a0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | `-ImplicitCastExpr 0x55ccd349b688 <col:8> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55ccd349b668 <col:8> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |   |-ImplicitCastExpr 0x55ccd349c018 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ccd349b6b8 <col:25> 'int' lvalue Var 0x55ccd349a6b0 'y' 'int'
|   |   `-ParenExpr 0x55ccd349bff8 <col:29, col:363> 'int'
|   |     `-ConditionalOperator 0x55ccd349bfc8 <col:30, col:362> 'int'
|   |       |-BinaryOperator 0x55ccd349b778 <col:30, col:48> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55ccd349b730 <col:30> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55ccd349b718 <col:30> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55ccd349b6d8 <col:30> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55ccd349b760 <col:48> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55ccd349b748 <col:48> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55ccd349b6f8 <col:48> '_Bool' lvalue Var 0x55ccd349a8b8 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55ccd349bfb0 <col:65> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55ccd349b798 <col:65> 'int' lvalue Var 0x55ccd349adf0 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55ccd349bf90 <col:77, col:362> 'int'
|   |         `-ConditionalOperator 0x55ccd349bf60 <col:78, col:361> 'int'
|   |           |-BinaryOperator 0x55ccd349b938 <col:78, col:134> 'int' '&&'
|   |           | |-BinaryOperator 0x55ccd349b8c8 <col:78, col:115> 'int' '&&'
|   |           | | |-BinaryOperator 0x55ccd349b858 <col:78, col:97> 'int' '&&'
|   |           | | | |-ImplicitCastExpr 0x55ccd349b840 <col:78> 'int' <IntegralCast>
|   |           | | | | `-ImplicitCastExpr 0x55ccd349b828 <col:78> '_Bool' <LValueToRValue>
|   |           | | | |   `-DeclRefExpr 0x55ccd349b7b8 <col:78> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |           | | | `-UnaryOperator 0x55ccd349b810 <col:96, col:97> 'int' prefix '!' cannot overflow
|   |           | | |   `-ImplicitCastExpr 0x55ccd349b7f8 <col:97> '_Bool' <LValueToRValue>
|   |           | | |     `-DeclRefExpr 0x55ccd349b7d8 <col:97> '_Bool' lvalue Var 0x55ccd349ab10 'y$r_buff1_thd1' '_Bool'
|   |           | | `-ImplicitCastExpr 0x55ccd349b8b0 <col:115> 'int' <IntegralCast>
|   |           | |   `-ImplicitCastExpr 0x55ccd349b898 <col:115> '_Bool' <LValueToRValue>
|   |           | |     `-DeclRefExpr 0x55ccd349b878 <col:115> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
|   |           | `-UnaryOperator 0x55ccd349b920 <col:133, col:134> 'int' prefix '!' cannot overflow
|   |           |   `-ImplicitCastExpr 0x55ccd349b908 <col:134> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55ccd349b8e8 <col:134> '_Bool' lvalue Var 0x55ccd349a8b8 'y$r_buff0_thd1' '_Bool'
|   |           |-ParenExpr 0x55ccd349bb20 <col:151, col:211> 'int'
|   |           | `-ConditionalOperator 0x55ccd349baf0 <col:152, col:210> 'int'
|   |           |   |-ImplicitCastExpr 0x55ccd349bac0 <col:152> 'int' <IntegralCast>
|   |           |   | `-ImplicitCastExpr 0x55ccd349baa8 <col:152> '_Bool' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x55ccd349b958 <col:152> '_Bool' lvalue Var 0x55ccd349b020 'weak$$choice0' '_Bool'
|   |           |   |-ImplicitCastExpr 0x55ccd349bad8 <col:168> 'int' <LValueToRValue>
|   |           |   | `-DeclRefExpr 0x55ccd349b978 <col:168> 'int' lvalue Var 0x55ccd349a6b0 'y' 'int'
|   |           |   `-ParenExpr 0x55ccd349ba88 <col:172, col:210> 'int'
|   |           |     `-ConditionalOperator 0x55ccd349ba58 <col:173, col:201> 'int'
|   |           |       |-ImplicitCastExpr 0x55ccd349ba10 <col:173> 'int' <IntegralCast>
|   |           |       | `-ImplicitCastExpr 0x55ccd349b9f8 <col:173> '_Bool' <LValueToRValue>
|   |           |       |   `-DeclRefExpr 0x55ccd349b998 <col:173> '_Bool' lvalue Var 0x55ccd349b098 'weak$$choice1' '_Bool'
|   |           |       |-ImplicitCastExpr 0x55ccd349ba28 <col:189> 'int' <LValueToRValue>
|   |           |       | `-DeclRefExpr 0x55ccd349b9b8 <col:189> 'int' lvalue Var 0x55ccd349adf0 'y$w_buff0' 'int'
|   |           |       `-ImplicitCastExpr 0x55ccd349ba40 <col:201> 'int' <LValueToRValue>
|   |           |         `-DeclRefExpr 0x55ccd349b9d8 <col:201> 'int' lvalue Var 0x55ccd349af30 'y$w_buff1' 'int'
|   |           `-ParenExpr 0x55ccd349bf40 <col:215, col:361> 'int'
|   |             `-ConditionalOperator 0x55ccd349bf00 <col:216, col:360> 'int'
|   |               |-BinaryOperator 0x55ccd349bcc0 <col:216, col:271> 'int' '&&'
|   |               | |-BinaryOperator 0x55ccd349bc50 <col:216, col:252> 'int' '&&'
|   |               | | |-BinaryOperator 0x55ccd349bbe0 <col:216, col:234> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55ccd349bb98 <col:216> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55ccd349bb80 <col:216> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55ccd349bb40 <col:216> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |               | | | `-ImplicitCastExpr 0x55ccd349bbc8 <col:234> 'int' <IntegralCast>
|   |               | | |   `-ImplicitCastExpr 0x55ccd349bbb0 <col:234> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55ccd349bb60 <col:234> '_Bool' lvalue Var 0x55ccd349ab10 'y$r_buff1_thd1' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55ccd349bc38 <col:252> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55ccd349bc20 <col:252> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55ccd349bc00 <col:252> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55ccd349bca8 <col:270, col:271> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55ccd349bc90 <col:271> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55ccd349bc70 <col:271> '_Bool' lvalue Var 0x55ccd349a8b8 'y$r_buff0_thd1' '_Bool'
|   |               |-ParenExpr 0x55ccd349bdd0 <col:288, col:326> 'int'
|   |               | `-ConditionalOperator 0x55ccd349bda0 <col:289, col:317> 'int'
|   |               |   |-ImplicitCastExpr 0x55ccd349bd58 <col:289> 'int' <IntegralCast>
|   |               |   | `-ImplicitCastExpr 0x55ccd349bd40 <col:289> '_Bool' <LValueToRValue>
|   |               |   |   `-DeclRefExpr 0x55ccd349bce0 <col:289> '_Bool' lvalue Var 0x55ccd349b020 'weak$$choice0' '_Bool'
|   |               |   |-ImplicitCastExpr 0x55ccd349bd70 <col:305> 'int' <LValueToRValue>
|   |               |   | `-DeclRefExpr 0x55ccd349bd00 <col:305> 'int' lvalue Var 0x55ccd349af30 'y$w_buff1' 'int'
|   |               |   `-ImplicitCastExpr 0x55ccd349bd88 <col:317> 'int' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55ccd349bd20 <col:317> 'int' lvalue Var 0x55ccd349adf0 'y$w_buff0' 'int'
|   |               `-ParenExpr 0x55ccd349bee0 <col:330, col:360> 'int'
|   |                 `-ConditionalOperator 0x55ccd349beb0 <col:331, col:359> 'int'
|   |                   |-ImplicitCastExpr 0x55ccd349be68 <col:331> 'int' <IntegralCast>
|   |                   | `-ImplicitCastExpr 0x55ccd349be50 <col:331> '_Bool' <LValueToRValue>
|   |                   |   `-DeclRefExpr 0x55ccd349bdf0 <col:331> '_Bool' lvalue Var 0x55ccd349b020 'weak$$choice0' '_Bool'
|   |                   |-ImplicitCastExpr 0x55ccd349be80 <col:347> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55ccd349be10 <col:347> 'int' lvalue Var 0x55ccd349adf0 'y$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x55ccd349be98 <col:359> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55ccd349be30 <col:359> 'int' lvalue Var 0x55ccd349a6b0 'y' 'int'
|   |-BinaryOperator 0x55ccd349c800 <line:733:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x55ccd349c080 <col:3> 'int' lvalue Var 0x55ccd349adf0 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55ccd349c7d0 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x55ccd349c7a0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55ccd349c788 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55ccd349c0a0 <col:15> '_Bool' lvalue Var 0x55ccd349b110 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55ccd349c7b8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ccd349c0c0 <col:31> 'int' lvalue Var 0x55ccd349adf0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55ccd349c768 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x55ccd349c738 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x55ccd349c118 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x55ccd349c100 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55ccd349c0e0 <col:45> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x55ccd349c720 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55ccd349c130 <col:62> 'int' lvalue Var 0x55ccd349adf0 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55ccd349c700 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x55ccd349c6d0 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x55ccd349c1f0 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55ccd349c1a8 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55ccd349c190 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55ccd349c150 <col:75> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55ccd349c1d8 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55ccd349c1c0 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55ccd349c170 <col:93> '_Bool' lvalue Var 0x55ccd349a8b8 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55ccd349c6b8 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55ccd349c210 <col:110> 'int' lvalue Var 0x55ccd349adf0 'y$w_buff0' 'int'
|   |           `-ParenExpr 0x55ccd349c698 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x55ccd349c668 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x55ccd349c3b0 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x55ccd349c340 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x55ccd349c2d0 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55ccd349c2b8 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55ccd349c2a0 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55ccd349c230 <col:123> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x55ccd349c288 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x55ccd349c270 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55ccd349c250 <col:142> '_Bool' lvalue Var 0x55ccd349ab10 'y$r_buff1_thd1' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55ccd349c328 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55ccd349c310 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55ccd349c2f0 <col:160> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55ccd349c398 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55ccd349c380 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55ccd349c360 <col:179> '_Bool' lvalue Var 0x55ccd349a8b8 'y$r_buff0_thd1' '_Bool'
|   |               |-ImplicitCastExpr 0x55ccd349c650 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x55ccd349c3d0 <col:196> 'int' lvalue Var 0x55ccd349adf0 'y$w_buff0' 'int'
|   |               `-ParenExpr 0x55ccd349c630 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x55ccd349c600 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x55ccd349c570 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x55ccd349c500 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x55ccd349c490 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x55ccd349c448 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x55ccd349c430 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x55ccd349c3f0 <col:209> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x55ccd349c478 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x55ccd349c460 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x55ccd349c410 <col:227> '_Bool' lvalue Var 0x55ccd349ab10 'y$r_buff1_thd1' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x55ccd349c4e8 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x55ccd349c4d0 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x55ccd349c4b0 <col:245> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x55ccd349c558 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x55ccd349c540 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x55ccd349c520 <col:264> '_Bool' lvalue Var 0x55ccd349a8b8 'y$r_buff0_thd1' '_Bool'
|   |                   |-ImplicitCastExpr 0x55ccd349c5d0 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55ccd349c590 <col:281> 'int' lvalue Var 0x55ccd349adf0 'y$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x55ccd349c5e8 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55ccd349c5b0 <col:293> 'int' lvalue Var 0x55ccd349adf0 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55ccd349cfb0 <line:734:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x55ccd349c820 <col:3> 'int' lvalue Var 0x55ccd349af30 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55ccd349cf80 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x55ccd349cf50 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55ccd349cf28 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55ccd349c840 <col:15> '_Bool' lvalue Var 0x55ccd349b110 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55ccd349cf68 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ccd349c860 <col:31> 'int' lvalue Var 0x55ccd349af30 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55ccd349cf08 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x55ccd349ced8 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x55ccd349c8b8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x55ccd349c8a0 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55ccd349c880 <col:45> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x55ccd349cec0 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55ccd349c8d0 <col:62> 'int' lvalue Var 0x55ccd349af30 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55ccd349cea0 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x55ccd349ce70 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x55ccd349c990 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55ccd349c948 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55ccd349c930 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55ccd349c8f0 <col:75> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55ccd349c978 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55ccd349c960 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55ccd349c910 <col:93> '_Bool' lvalue Var 0x55ccd349a8b8 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55ccd349ce58 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55ccd349c9b0 <col:110> 'int' lvalue Var 0x55ccd349af30 'y$w_buff1' 'int'
|   |           `-ParenExpr 0x55ccd349ce38 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x55ccd349ce08 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x55ccd349cb50 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x55ccd349cae0 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x55ccd349ca70 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55ccd349ca58 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55ccd349ca40 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55ccd349c9d0 <col:123> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x55ccd349ca28 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x55ccd349ca10 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55ccd349c9f0 <col:142> '_Bool' lvalue Var 0x55ccd349ab10 'y$r_buff1_thd1' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55ccd349cac8 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55ccd349cab0 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55ccd349ca90 <col:160> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55ccd349cb38 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55ccd349cb20 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55ccd349cb00 <col:179> '_Bool' lvalue Var 0x55ccd349a8b8 'y$r_buff0_thd1' '_Bool'
|   |               |-ImplicitCastExpr 0x55ccd349cdf0 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x55ccd349cb70 <col:196> 'int' lvalue Var 0x55ccd349af30 'y$w_buff1' 'int'
|   |               `-ParenExpr 0x55ccd349cdd0 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x55ccd349cda0 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x55ccd349cd10 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x55ccd349cca0 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x55ccd349cc30 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x55ccd349cbe8 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x55ccd349cbd0 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x55ccd349cb90 <col:209> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x55ccd349cc18 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x55ccd349cc00 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x55ccd349cbb0 <col:227> '_Bool' lvalue Var 0x55ccd349ab10 'y$r_buff1_thd1' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x55ccd349cc88 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x55ccd349cc70 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x55ccd349cc50 <col:245> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x55ccd349ccf8 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x55ccd349cce0 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x55ccd349ccc0 <col:264> '_Bool' lvalue Var 0x55ccd349a8b8 'y$r_buff0_thd1' '_Bool'
|   |                   |-ImplicitCastExpr 0x55ccd349cd70 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55ccd349cd30 <col:281> 'int' lvalue Var 0x55ccd349af30 'y$w_buff1' 'int'
|   |                   `-ImplicitCastExpr 0x55ccd349cd88 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55ccd349cd50 <col:293> 'int' lvalue Var 0x55ccd349af30 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55ccd349d888 <line:735:3, col:349> '_Bool' '='
|   | |-DeclRefExpr 0x55ccd349cfd0 <col:3> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ccd349d870 <col:20, col:349> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ccd349d840 <col:20, col:349> 'int'
|   |     |-ImplicitCastExpr 0x55ccd349d7f8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ccd349d7e0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ccd349cff0 <col:20> '_Bool' lvalue Var 0x55ccd349b110 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ccd349d828 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ccd349d810 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ccd349d010 <col:36> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55ccd349d7c0 <col:53, col:349> 'int'
|   |       `-ConditionalOperator 0x55ccd349d790 <col:54, col:348> 'int'
|   |         |-UnaryOperator 0x55ccd349d068 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55ccd349d050 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ccd349d030 <col:55> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55ccd349d778 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55ccd349d760 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ccd349d080 <col:72> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55ccd349d740 <col:89, col:348> 'int'
|   |           `-ConditionalOperator 0x55ccd349d710 <col:90, col:347> 'int'
|   |             |-BinaryOperator 0x55ccd349d140 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55ccd349d0f8 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55ccd349d0e0 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55ccd349d0a0 <col:90> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55ccd349d128 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55ccd349d110 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55ccd349d0c0 <col:108> '_Bool' lvalue Var 0x55ccd349a8b8 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55ccd349d6f8 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55ccd349d190 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55ccd349d160 <col:132> 'int' 0
|   |             `-ParenExpr 0x55ccd349d6d8 <col:136, col:347> 'int'
|   |               `-ConditionalOperator 0x55ccd349d6a8 <col:137, col:346> 'int'
|   |                 |-BinaryOperator 0x55ccd349d338 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55ccd349d2c8 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55ccd349d258 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55ccd349d240 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55ccd349d228 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55ccd349d1b8 <col:137> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55ccd349d210 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55ccd349d1f8 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55ccd349d1d8 <col:156> '_Bool' lvalue Var 0x55ccd349ab10 'y$r_buff1_thd1' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55ccd349d2b0 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55ccd349d298 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55ccd349d278 <col:174> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55ccd349d320 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55ccd349d308 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55ccd349d2e8 <col:193> '_Bool' lvalue Var 0x55ccd349a8b8 'y$r_buff0_thd1' '_Bool'
|   |                 |-BinaryOperator 0x55ccd349d3f8 <col:210, col:228> 'int' '||'
|   |                 | |-ImplicitCastExpr 0x55ccd349d3e0 <col:210> 'int' <IntegralCast>
|   |                 | | `-ImplicitCastExpr 0x55ccd349d3c8 <col:210> '_Bool' <LValueToRValue>
|   |                 | |   `-DeclRefExpr 0x55ccd349d358 <col:210> '_Bool' lvalue Var 0x55ccd349b020 'weak$$choice0' '_Bool'
|   |                 | `-UnaryOperator 0x55ccd349d3b0 <col:227, col:228> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55ccd349d398 <col:228> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55ccd349d378 <col:228> '_Bool' lvalue Var 0x55ccd349b098 'weak$$choice1' '_Bool'
|   |                 `-ParenExpr 0x55ccd349d688 <col:244, col:346> 'int'
|   |                   `-ConditionalOperator 0x55ccd349d658 <col:245, col:333> 'int'
|   |                     |-BinaryOperator 0x55ccd349d598 <col:245, col:300> 'int' '&&'
|   |                     | |-BinaryOperator 0x55ccd349d528 <col:245, col:281> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55ccd349d4b8 <col:245, col:263> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55ccd349d470 <col:245> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55ccd349d458 <col:245> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55ccd349d418 <col:245> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55ccd349d4a0 <col:263> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55ccd349d488 <col:263> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55ccd349d438 <col:263> '_Bool' lvalue Var 0x55ccd349ab10 'y$r_buff1_thd1' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55ccd349d510 <col:281> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55ccd349d4f8 <col:281> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55ccd349d4d8 <col:281> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55ccd349d580 <col:299, col:300> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55ccd349d568 <col:300> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55ccd349d548 <col:300> '_Bool' lvalue Var 0x55ccd349a8b8 'y$r_buff0_thd1' '_Bool'
|   |                     |-ImplicitCastExpr 0x55ccd349d610 <col:317> 'int' <IntegralCast>
|   |                     | `-ImplicitCastExpr 0x55ccd349d5f8 <col:317> '_Bool' <LValueToRValue>
|   |                     |   `-DeclRefExpr 0x55ccd349d5b8 <col:317> '_Bool' lvalue Var 0x55ccd349b020 'weak$$choice0' '_Bool'
|   |                     `-ImplicitCastExpr 0x55ccd349d640 <col:333> 'int' <IntegralCast>
|   |                       `-ImplicitCastExpr 0x55ccd349d628 <col:333> '_Bool' <LValueToRValue>
|   |                         `-DeclRefExpr 0x55ccd349d5d8 <col:333> '_Bool' lvalue Var 0x55ccd349b020 'weak$$choice0' '_Bool'
|   |-BinaryOperator 0x55ccd349e140 <line:736:3, col:321> '_Bool' '='
|   | |-DeclRefExpr 0x55ccd349d8a8 <col:3> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ccd349e128 <col:20, col:321> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ccd349e0f8 <col:20, col:321> 'int'
|   |     |-ImplicitCastExpr 0x55ccd349e0b0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ccd349e098 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ccd349d8c8 <col:20> '_Bool' lvalue Var 0x55ccd349b110 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ccd349e0e0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ccd349e0c8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ccd349d8e8 <col:36> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55ccd349e078 <col:53, col:321> 'int'
|   |       `-ConditionalOperator 0x55ccd349e048 <col:54, col:320> 'int'
|   |         |-UnaryOperator 0x55ccd349d940 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55ccd349d928 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ccd349d908 <col:55> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55ccd349e030 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55ccd349e018 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ccd349d958 <col:72> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55ccd349dff8 <col:89, col:320> 'int'
|   |           `-ConditionalOperator 0x55ccd349dfc8 <col:90, col:319> 'int'
|   |             |-BinaryOperator 0x55ccd349da18 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55ccd349d9d0 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55ccd349d9b8 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55ccd349d978 <col:90> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55ccd349da00 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55ccd349d9e8 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55ccd349d998 <col:108> '_Bool' lvalue Var 0x55ccd349a8b8 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55ccd349dfb0 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55ccd349da68 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55ccd349da38 <col:132> 'int' 0
|   |             `-ParenExpr 0x55ccd349df90 <col:136, col:319> 'int'
|   |               `-ConditionalOperator 0x55ccd349df60 <col:137, col:318> 'int'
|   |                 |-BinaryOperator 0x55ccd349dc10 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55ccd349dba0 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55ccd349db30 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55ccd349db18 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55ccd349db00 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55ccd349da90 <col:137> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55ccd349dae8 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55ccd349dad0 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55ccd349dab0 <col:156> '_Bool' lvalue Var 0x55ccd349ab10 'y$r_buff1_thd1' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55ccd349db88 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55ccd349db70 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55ccd349db50 <col:174> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55ccd349dbf8 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55ccd349dbe0 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55ccd349dbc0 <col:193> '_Bool' lvalue Var 0x55ccd349a8b8 'y$r_buff0_thd1' '_Bool'
|   |                 |-ImplicitCastExpr 0x55ccd349df38 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x55ccd349df20 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x55ccd349dc30 <col:210> '_Bool' lvalue Var 0x55ccd349b020 'weak$$choice0' '_Bool'
|   |                 `-ParenExpr 0x55ccd349df00 <col:226, col:318> 'int'
|   |                   `-ConditionalOperator 0x55ccd349ded0 <col:227, col:317> 'int'
|   |                     |-BinaryOperator 0x55ccd349ddd0 <col:227, col:282> 'int' '&&'
|   |                     | |-BinaryOperator 0x55ccd349dd60 <col:227, col:263> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55ccd349dcf0 <col:227, col:245> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55ccd349dca8 <col:227> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55ccd349dc90 <col:227> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55ccd349dc50 <col:227> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55ccd349dcd8 <col:245> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55ccd349dcc0 <col:245> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55ccd349dc70 <col:245> '_Bool' lvalue Var 0x55ccd349ab10 'y$r_buff1_thd1' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55ccd349dd48 <col:263> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55ccd349dd30 <col:263> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55ccd349dd10 <col:263> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55ccd349ddb8 <col:281, col:282> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55ccd349dda0 <col:282> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55ccd349dd80 <col:282> '_Bool' lvalue Var 0x55ccd349a8b8 'y$r_buff0_thd1' '_Bool'
|   |                     |-ImplicitCastExpr 0x55ccd349dea0 <col:299, col:306> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55ccd349de20 <col:299, col:306> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55ccd349ddf0 <col:306> 'int' 0
|   |                     `-ImplicitCastExpr 0x55ccd349deb8 <col:310, col:317> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55ccd349de78 <col:310, col:317> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55ccd349de48 <col:317> 'int' 0
|   |-BinaryOperator 0x55ccd349e9e8 <line:737:3, col:322> '_Bool' '='
|   | |-DeclRefExpr 0x55ccd349e160 <col:3> '_Bool' lvalue Var 0x55ccd349a8b8 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55ccd349e9d0 <col:20, col:322> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ccd349e9a0 <col:20, col:322> 'int'
|   |     |-ImplicitCastExpr 0x55ccd349e958 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ccd349e940 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ccd349e180 <col:20> '_Bool' lvalue Var 0x55ccd349b110 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ccd349e988 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ccd349e970 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ccd349e1a0 <col:36> '_Bool' lvalue Var 0x55ccd349a8b8 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55ccd349e920 <col:53, col:322> 'int'
|   |       `-ConditionalOperator 0x55ccd349e8f0 <col:54, col:321> 'int'
|   |         |-UnaryOperator 0x55ccd349e1f8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55ccd349e1e0 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ccd349e1c0 <col:55> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55ccd349e8d8 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55ccd349e8c0 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ccd349e210 <col:72> '_Bool' lvalue Var 0x55ccd349a8b8 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55ccd349e8a0 <col:89, col:321> 'int'
|   |           `-ConditionalOperator 0x55ccd349e870 <col:90, col:320> 'int'
|   |             |-BinaryOperator 0x55ccd349e2d0 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55ccd349e288 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55ccd349e270 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55ccd349e230 <col:90> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55ccd349e2b8 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55ccd349e2a0 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55ccd349e250 <col:108> '_Bool' lvalue Var 0x55ccd349a8b8 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55ccd349e858 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55ccd349e320 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55ccd349e2f0 <col:132> 'int' 0
|   |             `-ParenExpr 0x55ccd349e838 <col:136, col:320> 'int'
|   |               `-ConditionalOperator 0x55ccd349e808 <col:137, col:319> 'int'
|   |                 |-BinaryOperator 0x55ccd349e4c8 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55ccd349e458 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55ccd349e3e8 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55ccd349e3d0 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55ccd349e3b8 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55ccd349e348 <col:137> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55ccd349e3a0 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55ccd349e388 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55ccd349e368 <col:156> '_Bool' lvalue Var 0x55ccd349ab10 'y$r_buff1_thd1' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55ccd349e440 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55ccd349e428 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55ccd349e408 <col:174> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55ccd349e4b0 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55ccd349e498 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55ccd349e478 <col:193> '_Bool' lvalue Var 0x55ccd349a8b8 'y$r_buff0_thd1' '_Bool'
|   |                 |-ImplicitCastExpr 0x55ccd349e7f0 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x55ccd349e7d8 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x55ccd349e4e8 <col:210> '_Bool' lvalue Var 0x55ccd349a8b8 'y$r_buff0_thd1' '_Bool'
|   |                 `-ParenExpr 0x55ccd349e7b8 <col:227, col:319> 'int'
|   |                   `-ConditionalOperator 0x55ccd349e788 <col:228, col:318> 'int'
|   |                     |-BinaryOperator 0x55ccd349e688 <col:228, col:283> 'int' '&&'
|   |                     | |-BinaryOperator 0x55ccd349e618 <col:228, col:264> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55ccd349e5a8 <col:228, col:246> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55ccd349e560 <col:228> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55ccd349e548 <col:228> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55ccd349e508 <col:228> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55ccd349e590 <col:246> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55ccd349e578 <col:246> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55ccd349e528 <col:246> '_Bool' lvalue Var 0x55ccd349ab10 'y$r_buff1_thd1' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55ccd349e600 <col:264> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55ccd349e5e8 <col:264> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55ccd349e5c8 <col:264> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55ccd349e670 <col:282, col:283> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55ccd349e658 <col:283> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55ccd349e638 <col:283> '_Bool' lvalue Var 0x55ccd349a8b8 'y$r_buff0_thd1' '_Bool'
|   |                     |-ImplicitCastExpr 0x55ccd349e758 <col:300, col:307> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55ccd349e6d8 <col:300, col:307> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55ccd349e6a8 <col:307> 'int' 0
|   |                     `-ImplicitCastExpr 0x55ccd349e770 <col:311, col:318> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55ccd349e730 <col:311, col:318> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55ccd349e700 <col:318> 'int' 0
|   |-BinaryOperator 0x55ccd349f3b0 <line:738:3, col:351> '_Bool' '='
|   | |-DeclRefExpr 0x55ccd349ea08 <col:3> '_Bool' lvalue Var 0x55ccd349ab10 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55ccd349f398 <col:20, col:351> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ccd349f368 <col:20, col:351> 'int'
|   |     |-ImplicitCastExpr 0x55ccd349f320 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ccd349f308 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ccd349ea28 <col:20> '_Bool' lvalue Var 0x55ccd349b110 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ccd349f350 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ccd349f338 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ccd349ea48 <col:36> '_Bool' lvalue Var 0x55ccd349ab10 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55ccd349f2e8 <col:53, col:351> 'int'
|   |       `-ConditionalOperator 0x55ccd349f2b8 <col:54, col:350> 'int'
|   |         |-UnaryOperator 0x55ccd349eaa0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55ccd349ea88 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ccd349ea68 <col:55> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55ccd349f2a0 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55ccd349f288 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ccd349eab8 <col:72> '_Bool' lvalue Var 0x55ccd349ab10 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55ccd349f268 <col:89, col:350> 'int'
|   |           `-ConditionalOperator 0x55ccd349f238 <col:90, col:349> 'int'
|   |             |-BinaryOperator 0x55ccd349eb78 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55ccd349eb30 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55ccd349eb18 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55ccd349ead8 <col:90> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55ccd349eb60 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55ccd349eb48 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55ccd349eaf8 <col:108> '_Bool' lvalue Var 0x55ccd349a8b8 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55ccd349f220 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55ccd349ebc8 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55ccd349eb98 <col:132> 'int' 0
|   |             `-ParenExpr 0x55ccd349f200 <col:136, col:349> 'int'
|   |               `-ConditionalOperator 0x55ccd349f1d0 <col:137, col:348> 'int'
|   |                 |-BinaryOperator 0x55ccd349ed70 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55ccd349ed00 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55ccd349ec90 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55ccd349ec78 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55ccd349ec60 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55ccd349ebf0 <col:137> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55ccd349ec48 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55ccd349ec30 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55ccd349ec10 <col:156> '_Bool' lvalue Var 0x55ccd349ab10 'y$r_buff1_thd1' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55ccd349ece8 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55ccd349ecd0 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55ccd349ecb0 <col:174> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55ccd349ed58 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55ccd349ed40 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55ccd349ed20 <col:193> '_Bool' lvalue Var 0x55ccd349a8b8 'y$r_buff0_thd1' '_Bool'
|   |                 |-ParenExpr 0x55ccd349eed0 <col:210, col:252> 'int'
|   |                 | `-ConditionalOperator 0x55ccd349eea0 <col:211, col:251> 'int'
|   |                 |   |-ImplicitCastExpr 0x55ccd349ee40 <col:211> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x55ccd349ee28 <col:211> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x55ccd349ed90 <col:211> '_Bool' lvalue Var 0x55ccd349b020 'weak$$choice0' '_Bool'
|   |                 |   |-ImplicitCastExpr 0x55ccd349ee70 <col:227> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x55ccd349ee58 <col:227> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x55ccd349edb0 <col:227> '_Bool' lvalue Var 0x55ccd349ab10 'y$r_buff1_thd1' '_Bool'
|   |                 |   `-ImplicitCastExpr 0x55ccd349ee88 <col:244, col:251> 'int' <IntegralCast>
|   |                 |     `-CStyleCastExpr 0x55ccd349ee00 <col:244, col:251> '_Bool' <IntegralToBoolean>
|   |                 |       `-IntegerLiteral 0x55ccd349edd0 <col:251> 'int' 0
|   |                 `-ParenExpr 0x55ccd349f1b0 <col:256, col:348> 'int'
|   |                   `-ConditionalOperator 0x55ccd349f180 <col:257, col:347> 'int'
|   |                     |-BinaryOperator 0x55ccd349f080 <col:257, col:312> 'int' '&&'
|   |                     | |-BinaryOperator 0x55ccd349f010 <col:257, col:293> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55ccd349efa0 <col:257, col:275> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55ccd349ef48 <col:257> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55ccd349ef30 <col:257> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55ccd349eef0 <col:257> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55ccd349ef88 <col:275> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55ccd349ef70 <col:275> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55ccd349ef10 <col:275> '_Bool' lvalue Var 0x55ccd349ab10 'y$r_buff1_thd1' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55ccd349eff8 <col:293> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55ccd349efe0 <col:293> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55ccd349efc0 <col:293> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55ccd349f068 <col:311, col:312> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55ccd349f050 <col:312> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55ccd349f030 <col:312> '_Bool' lvalue Var 0x55ccd349a8b8 'y$r_buff0_thd1' '_Bool'
|   |                     |-ImplicitCastExpr 0x55ccd349f150 <col:329, col:336> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55ccd349f0d0 <col:329, col:336> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55ccd349f0a0 <col:336> 'int' 0
|   |                     `-ImplicitCastExpr 0x55ccd349f168 <col:340, col:347> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55ccd349f128 <col:340, col:347> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55ccd349f0f8 <col:347> 'int' 0
|   |-BinaryOperator 0x55ccd349f448 <line:739:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55ccd349f3d0 <col:3> '_Bool' lvalue Var 0x55ccd349a010 '__unbuffered_p0_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55ccd349f420 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55ccd349f3f0 <col:45> 'int' 1
|   |-BinaryOperator 0x55ccd349f4c0 <line:740:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x55ccd349f468 <col:3> 'int *' lvalue Var 0x55ccd349a090 '__unbuffered_p0_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x55ccd349f4a8 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x55ccd349f488 <col:43> 'int' lvalue Var 0x55ccd349a6b0 'y' 'int'
|   |-BinaryOperator 0x55ccd349f538 <line:741:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55ccd349f4e0 <col:3> 'int' lvalue Var 0x55ccd34999b8 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55ccd349f520 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ccd349f500 <col:25> 'int' lvalue Var 0x55ccd349a6b0 'y' 'int'
|   |-BinaryOperator 0x55ccd349f668 <line:742:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55ccd349f558 <col:3> 'int' lvalue Var 0x55ccd349a6b0 'y' 'int'
|   | `-ConditionalOperator 0x55ccd349f638 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55ccd349f5f0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55ccd349f5d8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55ccd349f578 <col:7> '_Bool' lvalue Var 0x55ccd349a748 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55ccd349f608 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ccd349f598 <col:25> 'int' lvalue Var 0x55ccd349a7c8 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55ccd349f620 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55ccd349f5b8 <col:37> 'int' lvalue Var 0x55ccd349a6b0 'y' 'int'
|   |-BinaryOperator 0x55ccd349f700 <line:743:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55ccd349f688 <col:3> '_Bool' lvalue Var 0x55ccd349a748 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55ccd349f6d8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55ccd349f6a8 <col:28> 'int' 0
|   |-CallExpr 0x55ccd349f758 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ccd349f740 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ccd349f720 <col:3> 'void ()' Function 0x55ccd3440570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ccd349f7b0 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ccd349f798 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ccd349f778 <col:3> 'void ()' Function 0x55ccd34404b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ccd349f810 <line:746:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55ccd349f7d0 <col:3> 'int' lvalue Var 0x55ccd349a590 'x' 'int'
|   | `-IntegerLiteral 0x55ccd349f7f0 <col:7> 'int' 1
|   |-CallExpr 0x55ccd349f868 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ccd349f850 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ccd349f830 <col:3> 'void ()' Function 0x55ccd3440570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ccd349f8c0 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ccd349f8a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ccd349f888 <col:3> 'void ()' Function 0x55ccd34404b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55ccd349f918 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ccd349f900 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ccd349f8e0 <col:3> 'void ()' Function 0x55ccd3440570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ccd349f970 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ccd349f958 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ccd349f938 <col:3> 'void ()' Function 0x55ccd34404b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ccd349fa28 <line:751:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55ccd349f990 <col:3> 'int' lvalue Var 0x55ccd3499898 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55ccd349fa08 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55ccd349f9f0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ccd349f9b0 <col:22> 'int' lvalue Var 0x55ccd3499898 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55ccd349f9d0 <col:41> 'int' 1
|   |-CallExpr 0x55ccd349fa80 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ccd349fa68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ccd349fa48 <col:3> 'void ()' Function 0x55ccd3440570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55ccd349fb28 <line:753:3, col:36>
|     `-CallExpr 0x55ccd349fb08 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55ccd349faf0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55ccd349faa0 <col:10> 'void *(void)' Function 0x55ccd343ffc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55ccd349fcd8 prev 0x55ccd3499268 <line:755:1, line:766:1> line:755:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55ccd349fc40 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55ccd34a0130 <line:756:1, line:766:1>
|   |-CallExpr 0x55ccd349fdb8 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ccd349fda0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ccd349fd80 <col:3> 'void ()' Function 0x55ccd34404b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ccd349fe18 <line:758:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55ccd349fdd8 <col:3> 'int' lvalue Var 0x55ccd349a590 'x' 'int'
|   | `-IntegerLiteral 0x55ccd349fdf8 <col:7> 'int' 2
|   |-CallExpr 0x55ccd349fe70 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ccd349fe58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ccd349fe38 <col:3> 'void ()' Function 0x55ccd3440570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ccd349fec8 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ccd349feb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ccd349fe90 <col:3> 'void ()' Function 0x55ccd34404b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55ccd349ff20 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ccd349ff08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ccd349fee8 <col:3> 'void ()' Function 0x55ccd3440570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ccd349ff98 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ccd349ff80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ccd349ff40 <col:3> 'void ()' Function 0x55ccd34404b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ccd34a0050 <line:763:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55ccd349ffb8 <col:3> 'int' lvalue Var 0x55ccd3499898 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55ccd34a0030 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55ccd34a0018 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ccd349ffd8 <col:22> 'int' lvalue Var 0x55ccd3499898 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55ccd349fff8 <col:41> 'int' 1
|   |-CallExpr 0x55ccd34a00a8 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ccd34a0090 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ccd34a0070 <col:3> 'void ()' Function 0x55ccd3440570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55ccd34a0120 <line:765:3, col:36>
|     `-CallExpr 0x55ccd34a0100 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55ccd34a00e8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55ccd34a00c8 <col:10> 'void *(void)' Function 0x55ccd343ffc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55ccd34a0238 prev 0x55ccd34993c0 <line:767:1, line:786:1> line:767:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55ccd34a01a0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55ccd34a1480 <line:768:1, line:786:1>
|   |-CallExpr 0x55ccd34a0318 <line:769:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ccd34a0300 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ccd34a02e0 <col:3> 'void ()' Function 0x55ccd34404b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ccd34a0390 <line:770:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55ccd34a0338 <col:3> 'int' lvalue Var 0x55ccd349a380 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55ccd34a0378 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ccd34a0358 <col:25> 'int' lvalue Var 0x55ccd349a590 'x' 'int'
|   |-CallExpr 0x55ccd34a03e8 <line:771:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ccd34a03d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ccd34a03b0 <col:3> 'void ()' Function 0x55ccd3440570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ccd34a0440 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ccd34a0428 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ccd34a0408 <col:3> 'void ()' Function 0x55ccd34404b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ccd34a04a0 <line:773:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55ccd34a0460 <col:3> 'int' lvalue Var 0x55ccd349a6b0 'y' 'int'
|   | `-IntegerLiteral 0x55ccd34a0480 <col:7> 'int' 1
|   |-CallExpr 0x55ccd34a04f8 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ccd34a04e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ccd34a04c0 <col:3> 'void ()' Function 0x55ccd3440570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ccd34a0550 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ccd34a0538 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ccd34a0518 <col:3> 'void ()' Function 0x55ccd34404b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ccd34a0838 <line:776:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55ccd34a0570 <col:3> 'int' lvalue Var 0x55ccd349a6b0 'y' 'int'
|   | `-ConditionalOperator 0x55ccd34a0808 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55ccd34a0630 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55ccd34a05e8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55ccd34a05d0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55ccd34a0590 <col:7> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55ccd34a0618 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55ccd34a0600 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55ccd34a05b0 <col:25> '_Bool' lvalue Var 0x55ccd349a9a8 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55ccd34a07f0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ccd34a0650 <col:42> 'int' lvalue Var 0x55ccd349adf0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55ccd34a07d0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55ccd34a07a0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55ccd34a0710 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55ccd34a06c8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55ccd34a06b0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55ccd34a0670 <col:55> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55ccd34a06f8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55ccd34a06e0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55ccd34a0690 <col:73> '_Bool' lvalue Var 0x55ccd349ac00 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55ccd34a0770 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55ccd34a0730 <col:90> 'int' lvalue Var 0x55ccd349af30 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55ccd34a0788 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ccd34a0750 <col:102> 'int' lvalue Var 0x55ccd349a6b0 'y' 'int'
|   |-BinaryOperator 0x55ccd34a0a40 <line:777:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55ccd34a0858 <col:3> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ccd34a0a28 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ccd34a09f8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55ccd34a0918 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55ccd34a08d0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55ccd34a08b8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55ccd34a0878 <col:20> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55ccd34a0900 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55ccd34a08e8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55ccd34a0898 <col:38> '_Bool' lvalue Var 0x55ccd349a9a8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55ccd34a09b0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ccd34a0968 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ccd34a0938 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55ccd34a09e0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ccd34a09c8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ccd34a0990 <col:66> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55ccd34a0d28 <line:778:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55ccd34a0a60 <col:3> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ccd34a0d10 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ccd34a0ce0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55ccd34a0c00 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55ccd34a0b20 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55ccd34a0ad8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55ccd34a0ac0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55ccd34a0a80 <col:20> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55ccd34a0b08 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55ccd34a0af0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55ccd34a0aa0 <col:38> '_Bool' lvalue Var 0x55ccd349a9a8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55ccd34a0be0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55ccd34a0b98 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55ccd34a0b80 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55ccd34a0b40 <col:56> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55ccd34a0bc8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55ccd34a0bb0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55ccd34a0b60 <col:74> '_Bool' lvalue Var 0x55ccd349ac00 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55ccd34a0c98 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ccd34a0c50 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ccd34a0c20 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55ccd34a0cc8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ccd34a0cb0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ccd34a0c78 <col:102> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55ccd34a0f30 <line:779:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55ccd34a0d48 <col:3> '_Bool' lvalue Var 0x55ccd349a9a8 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55ccd34a0f18 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ccd34a0ee8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55ccd34a0e08 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55ccd34a0dc0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55ccd34a0da8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55ccd34a0d68 <col:20> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55ccd34a0df0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55ccd34a0dd8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55ccd34a0d88 <col:38> '_Bool' lvalue Var 0x55ccd349a9a8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55ccd34a0ea0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ccd34a0e58 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ccd34a0e28 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55ccd34a0ed0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ccd34a0eb8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ccd34a0e80 <col:66> '_Bool' lvalue Var 0x55ccd349a9a8 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55ccd34a1238 <line:780:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55ccd34a0f50 <col:3> '_Bool' lvalue Var 0x55ccd349ac00 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55ccd34a1220 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ccd34a11f0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55ccd34a1110 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55ccd34a1030 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55ccd34a0fe8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55ccd34a0fd0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55ccd34a0f90 <col:20> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55ccd34a1018 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55ccd34a1000 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55ccd34a0fb0 <col:38> '_Bool' lvalue Var 0x55ccd349a9a8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55ccd34a10f0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55ccd34a10a8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55ccd34a1090 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55ccd34a1050 <col:56> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55ccd34a10d8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55ccd34a10c0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55ccd34a1070 <col:74> '_Bool' lvalue Var 0x55ccd349ac00 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55ccd34a11a8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ccd34a1160 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ccd34a1130 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55ccd34a11d8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ccd34a11c0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ccd34a1188 <col:102> '_Bool' lvalue Var 0x55ccd349ac00 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55ccd34a1290 <line:781:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ccd34a1278 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ccd34a1258 <col:3> 'void ()' Function 0x55ccd3440570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ccd34a12e8 <line:782:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ccd34a12d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ccd34a12b0 <col:3> 'void ()' Function 0x55ccd34404b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ccd34a13a0 <line:783:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55ccd34a1308 <col:3> 'int' lvalue Var 0x55ccd3499898 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55ccd34a1380 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55ccd34a1368 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ccd34a1328 <col:22> 'int' lvalue Var 0x55ccd3499898 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55ccd34a1348 <col:41> 'int' 1
|   |-CallExpr 0x55ccd34a13f8 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ccd34a13e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ccd34a13c0 <col:3> 'void ()' Function 0x55ccd3440570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55ccd34a1470 <line:785:3, col:36>
|     `-CallExpr 0x55ccd34a1450 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55ccd34a1438 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55ccd34a1418 <col:10> 'void *(void)' Function 0x55ccd343ffc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55ccd34a15c8 prev 0x55ccd3499518 <line:787:1, line:803:1> line:787:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x55ccd34a1530 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55ccd34a26d8 <line:788:1, line:803:1>
|   |-CallExpr 0x55ccd34a16a8 <line:789:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ccd34a1690 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ccd34a1670 <col:3> 'void ()' Function 0x55ccd34404b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ccd34a1708 <line:790:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55ccd34a16c8 <col:3> 'int' lvalue Var 0x55ccd349a6b0 'y' 'int'
|   | `-IntegerLiteral 0x55ccd34a16e8 <col:7> 'int' 2
|   |-CallExpr 0x55ccd34a1760 <line:791:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ccd34a1748 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ccd34a1728 <col:3> 'void ()' Function 0x55ccd3440570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ccd34a17b8 <line:792:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ccd34a17a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ccd34a1780 <col:3> 'void ()' Function 0x55ccd34404b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ccd34a1aa0 <line:793:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55ccd34a17d8 <col:3> 'int' lvalue Var 0x55ccd349a6b0 'y' 'int'
|   | `-ConditionalOperator 0x55ccd34a1a70 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55ccd34a1898 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55ccd34a1850 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55ccd34a1838 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55ccd34a17f8 <col:7> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55ccd34a1880 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55ccd34a1868 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55ccd34a1818 <col:25> '_Bool' lvalue Var 0x55ccd349aa20 'y$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55ccd34a1a58 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ccd34a18b8 <col:42> 'int' lvalue Var 0x55ccd349adf0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55ccd34a1a38 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55ccd34a1a08 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55ccd34a1978 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55ccd34a1930 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55ccd34a1918 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55ccd34a18d8 <col:55> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55ccd34a1960 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55ccd34a1948 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55ccd34a18f8 <col:73> '_Bool' lvalue Var 0x55ccd349ac78 'y$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55ccd34a19d8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55ccd34a1998 <col:90> 'int' lvalue Var 0x55ccd349af30 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55ccd34a19f0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ccd34a19b8 <col:102> 'int' lvalue Var 0x55ccd349a6b0 'y' 'int'
|   |-BinaryOperator 0x55ccd34a1ca8 <line:794:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55ccd34a1ac0 <col:3> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ccd34a1c90 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ccd34a1c60 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55ccd34a1b80 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55ccd34a1b38 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55ccd34a1b20 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55ccd34a1ae0 <col:20> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55ccd34a1b68 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55ccd34a1b50 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55ccd34a1b00 <col:38> '_Bool' lvalue Var 0x55ccd349aa20 'y$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55ccd34a1c18 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ccd34a1bd0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ccd34a1ba0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55ccd34a1c48 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ccd34a1c30 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ccd34a1bf8 <col:66> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55ccd34a1fa0 <line:795:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55ccd34a1cc8 <col:3> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ccd34a1f78 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ccd34a1f48 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55ccd34a1e68 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55ccd34a1d88 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55ccd34a1d40 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55ccd34a1d28 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55ccd34a1ce8 <col:20> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55ccd34a1d70 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55ccd34a1d58 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55ccd34a1d08 <col:38> '_Bool' lvalue Var 0x55ccd349aa20 'y$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55ccd34a1e48 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55ccd34a1e00 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55ccd34a1de8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55ccd34a1da8 <col:56> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55ccd34a1e30 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55ccd34a1e18 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55ccd34a1dc8 <col:74> '_Bool' lvalue Var 0x55ccd349ac78 'y$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55ccd34a1f00 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ccd34a1eb8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ccd34a1e88 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55ccd34a1f30 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ccd34a1f18 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ccd34a1ee0 <col:102> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55ccd34a21a8 <line:796:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55ccd34a1fc0 <col:3> '_Bool' lvalue Var 0x55ccd349aa20 'y$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55ccd34a2190 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ccd34a2160 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55ccd34a2080 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55ccd34a2038 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55ccd34a2020 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55ccd34a1fe0 <col:20> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55ccd34a2068 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55ccd34a2050 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55ccd34a2000 <col:38> '_Bool' lvalue Var 0x55ccd349aa20 'y$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55ccd34a2118 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ccd34a20d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ccd34a20a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55ccd34a2148 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ccd34a2130 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ccd34a20f8 <col:66> '_Bool' lvalue Var 0x55ccd349aa20 'y$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55ccd34a2490 <line:797:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55ccd34a21c8 <col:3> '_Bool' lvalue Var 0x55ccd349ac78 'y$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55ccd34a2478 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ccd34a2448 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55ccd34a2368 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55ccd34a2288 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55ccd34a2240 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55ccd34a2228 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55ccd34a21e8 <col:20> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55ccd34a2270 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55ccd34a2258 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55ccd34a2208 <col:38> '_Bool' lvalue Var 0x55ccd349aa20 'y$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55ccd34a2348 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55ccd34a2300 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55ccd34a22e8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55ccd34a22a8 <col:56> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55ccd34a2330 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55ccd34a2318 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55ccd34a22c8 <col:74> '_Bool' lvalue Var 0x55ccd349ac78 'y$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55ccd34a2400 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ccd34a23b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ccd34a2388 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55ccd34a2430 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ccd34a2418 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ccd34a23e0 <col:102> '_Bool' lvalue Var 0x55ccd349ac78 'y$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x55ccd34a24e8 <line:798:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ccd34a24d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ccd34a24b0 <col:3> 'void ()' Function 0x55ccd3440570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ccd34a2540 <line:799:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ccd34a2528 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ccd34a2508 <col:3> 'void ()' Function 0x55ccd34404b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ccd34a25f8 <line:800:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55ccd34a2560 <col:3> 'int' lvalue Var 0x55ccd3499898 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55ccd34a25d8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55ccd34a25c0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ccd34a2580 <col:22> 'int' lvalue Var 0x55ccd3499898 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55ccd34a25a0 <col:41> 'int' 1
|   |-CallExpr 0x55ccd34a2650 <line:801:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ccd34a2638 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ccd34a2618 <col:3> 'void ()' Function 0x55ccd3440570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55ccd34a26c8 <line:802:3, col:36>
|     `-CallExpr 0x55ccd34a26a8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55ccd34a2690 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55ccd34a2670 <col:10> 'void *(void)' Function 0x55ccd343ffc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55ccd34a2778 prev 0x55ccd34995e0 <line:804:1, line:806:1> line:804:6 fence 'void ()'
| `-CompoundStmt 0x55ccd34a2818 <line:805:1, line:806:1>
|-FunctionDecl 0x55ccd34a2848 prev 0x55ccd34996a0 <line:807:1, line:809:1> line:807:6 isync 'void ()'
| `-CompoundStmt 0x55ccd34a28e8 <line:808:1, line:809:1>
|-FunctionDecl 0x55ccd34a2918 prev 0x55ccd3499760 <line:810:1, line:812:1> line:810:6 lwfence 'void ()'
| `-CompoundStmt 0x55ccd34a29b8 <line:811:1, line:812:1>
`-FunctionDecl 0x55ccd34a2a28 <line:813:1, line:854:1> line:813:5 main 'int ()'
  `-CompoundStmt 0x55ccd34a7610 <line:814:1, line:854:1>
    |-DeclStmt 0x55ccd34a2b40 <line:815:3, col:18>
    | `-VarDecl 0x55ccd34a2ad8 <col:3, col:13> col:13 used t2147 'pthread_t':'unsigned long'
    |-CallExpr 0x55ccd34a2d48 <line:816:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55ccd34a2d30 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ccd34a2b58 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55ccd34809d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55ccd34a2b98 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55ccd34a2b78 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55ccd34a2ad8 't2147' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55ccd34a2d88 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55ccd34a2c10 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55ccd34a2be8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55ccd34a2bb0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55ccd34a2da0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ccd34a2c30 <col:39> 'void *(void *)' Function 0x55ccd349b228 'P0' 'void *(void *)'
    | `-ParenExpr 0x55ccd34a2cb0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55ccd34a2c88 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55ccd34a2c50 <col:52> 'int' 0
    |-DeclStmt 0x55ccd34a2e30 <line:817:3, col:18>
    | `-VarDecl 0x55ccd34a2dc8 <col:3, col:13> col:13 used t2148 'pthread_t':'unsigned long'
    |-CallExpr 0x55ccd34a2fe8 <line:818:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55ccd34a2fd0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ccd34a2e48 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55ccd34809d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55ccd34a2e88 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55ccd34a2e68 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55ccd34a2dc8 't2148' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55ccd34a3028 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55ccd34a2f00 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55ccd34a2ed8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55ccd34a2ea0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55ccd34a3040 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ccd34a2f20 <col:39> 'void *(void *)' Function 0x55ccd349fcd8 'P1' 'void *(void *)'
    | `-ParenExpr 0x55ccd34a2fb0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55ccd34a2f78 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55ccd34a2f40 <col:52> 'int' 0
    |-DeclStmt 0x55ccd34a30d0 <line:819:3, col:18>
    | `-VarDecl 0x55ccd34a3068 <col:3, col:13> col:13 used t2149 'pthread_t':'unsigned long'
    |-CallExpr 0x55ccd34a3278 <line:820:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55ccd34a3260 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ccd34a30e8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55ccd34809d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55ccd34a3128 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55ccd34a3108 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55ccd34a3068 't2149' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55ccd34a32b8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55ccd34a31a0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55ccd34a3178 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55ccd34a3140 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55ccd34a32d0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ccd34a31c0 <col:39> 'void *(void *)' Function 0x55ccd34a0238 'P2' 'void *(void *)'
    | `-ParenExpr 0x55ccd34a3240 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55ccd34a3218 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55ccd34a31e0 <col:52> 'int' 0
    |-DeclStmt 0x55ccd34a3360 <line:821:3, col:18>
    | `-VarDecl 0x55ccd34a32f8 <col:3, col:13> col:13 used t2150 'pthread_t':'unsigned long'
    |-CallExpr 0x55ccd34a3508 <line:822:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55ccd34a34f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ccd34a3378 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55ccd34809d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55ccd34a33b8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55ccd34a3398 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55ccd34a32f8 't2150' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55ccd34a3548 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55ccd34a3430 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55ccd34a3408 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55ccd34a33d0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55ccd34a3560 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ccd34a3450 <col:39> 'void *(void *)' Function 0x55ccd34a15c8 'P3' 'void *(void *)'
    | `-ParenExpr 0x55ccd34a34d0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55ccd34a34a8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55ccd34a3470 <col:52> 'int' 0
    |-CallExpr 0x55ccd34a35b0 <line:823:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55ccd34a3598 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55ccd34a3578 <col:3> 'void ()' Function 0x55ccd34404b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55ccd34a3680 <line:824:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55ccd34a35d0 <col:3> '_Bool' lvalue Var 0x55ccd349a418 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55ccd34a3668 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55ccd34a3648 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55ccd34a3630 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55ccd34a35f0 <col:21> 'int' lvalue Var 0x55ccd3499898 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55ccd34a3610 <col:41> 'int' 4
    |-CallExpr 0x55ccd34a36d8 <line:825:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55ccd34a36c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55ccd34a36a0 <col:3> 'void ()' Function 0x55ccd3440570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55ccd34a3788 <line:826:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55ccd34a3770 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ccd34a36f8 <col:3> 'void (int)' Function 0x55ccd343fe50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55ccd34a37c8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55ccd34a37b0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55ccd34a3718 <col:21> '_Bool' lvalue Var 0x55ccd349a418 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55ccd34a3818 <line:827:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55ccd34a3800 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55ccd34a37e0 <col:3> 'void ()' Function 0x55ccd34404b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55ccd34a3b00 <line:828:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55ccd34a3838 <col:3> 'int' lvalue Var 0x55ccd349a6b0 'y' 'int'
    | `-ConditionalOperator 0x55ccd34a3ad0 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55ccd34a38f8 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55ccd34a38b0 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55ccd34a3898 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55ccd34a3858 <col:7> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55ccd34a38e0 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55ccd34a38c8 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55ccd34a3878 <col:25> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55ccd34a3ab8 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55ccd34a3918 <col:42> 'int' lvalue Var 0x55ccd349adf0 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55ccd34a3a98 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55ccd34a3a68 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55ccd34a39d8 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55ccd34a3990 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55ccd34a3978 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55ccd34a3938 <col:55> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55ccd34a39c0 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55ccd34a39a8 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55ccd34a3958 <col:73> '_Bool' lvalue Var 0x55ccd349aa98 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55ccd34a3a38 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55ccd34a39f8 <col:90> 'int' lvalue Var 0x55ccd349af30 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55ccd34a3a50 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55ccd34a3a18 <col:102> 'int' lvalue Var 0x55ccd349a6b0 'y' 'int'
    |-BinaryOperator 0x55ccd34a3d08 <line:829:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55ccd34a3b20 <col:3> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55ccd34a3cf0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55ccd34a3cc0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55ccd34a3be0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55ccd34a3b98 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55ccd34a3b80 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55ccd34a3b40 <col:20> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55ccd34a3bc8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55ccd34a3bb0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55ccd34a3b60 <col:38> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55ccd34a3c78 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55ccd34a3c30 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55ccd34a3c00 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55ccd34a3ca8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55ccd34a3c90 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55ccd34a3c58 <col:66> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55ccd34a4008 <line:830:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55ccd34a3d28 <col:3> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55ccd34a3ff0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55ccd34a3fc0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55ccd34a3ec8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55ccd34a3de8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55ccd34a3da0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55ccd34a3d88 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55ccd34a3d48 <col:20> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55ccd34a3dd0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55ccd34a3db8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55ccd34a3d68 <col:38> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55ccd34a3ea8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55ccd34a3e60 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55ccd34a3e48 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55ccd34a3e08 <col:56> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55ccd34a3e90 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55ccd34a3e78 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55ccd34a3e28 <col:74> '_Bool' lvalue Var 0x55ccd349aa98 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55ccd34a3f60 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55ccd34a3f18 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55ccd34a3ee8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55ccd34a3f90 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55ccd34a3f78 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55ccd34a3f40 <col:102> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55ccd34a4210 <line:831:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55ccd34a4028 <col:3> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55ccd34a41f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55ccd34a41c8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55ccd34a40e8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55ccd34a40a0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55ccd34a4088 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55ccd34a4048 <col:20> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55ccd34a40d0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55ccd34a40b8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55ccd34a4068 <col:38> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55ccd34a4180 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55ccd34a4138 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55ccd34a4108 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55ccd34a41b0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55ccd34a4198 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55ccd34a4160 <col:66> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55ccd34a44f8 <line:832:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55ccd34a4230 <col:3> '_Bool' lvalue Var 0x55ccd349aa98 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55ccd34a44e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55ccd34a44b0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55ccd34a43d0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55ccd34a42f0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55ccd34a42a8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55ccd34a4290 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55ccd34a4250 <col:20> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55ccd34a42d8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55ccd34a42c0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55ccd34a4270 <col:38> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55ccd34a43b0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55ccd34a4368 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55ccd34a4350 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55ccd34a4310 <col:56> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55ccd34a4398 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55ccd34a4380 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55ccd34a4330 <col:74> '_Bool' lvalue Var 0x55ccd349aa98 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55ccd34a4468 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55ccd34a4420 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55ccd34a43f0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55ccd34a4498 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55ccd34a4480 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55ccd34a4448 <col:102> '_Bool' lvalue Var 0x55ccd349aa98 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55ccd34a4550 <line:833:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55ccd34a4538 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55ccd34a4518 <col:3> 'void ()' Function 0x55ccd3440570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55ccd34a45a8 <line:834:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55ccd34a4590 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55ccd34a4570 <col:3> 'void ()' Function 0x55ccd34404b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55ccd34a4640 <line:835:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55ccd34a45c8 <col:3> '_Bool' lvalue Var 0x55ccd349b020 'weak$$choice0' '_Bool'
    | `-CallExpr 0x55ccd34a4620 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55ccd34a4608 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55ccd34a45e8 <col:19> '_Bool (void)' Function 0x55ccd343fc80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55ccd34a46d8 <line:836:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55ccd34a4660 <col:3> '_Bool' lvalue Var 0x55ccd349b110 'weak$$choice2' '_Bool'
    | `-CallExpr 0x55ccd34a46b8 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55ccd34a46a0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55ccd34a4680 <col:19> '_Bool (void)' Function 0x55ccd343fc80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55ccd34a4750 <line:837:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x55ccd34a46f8 <col:3> '_Bool' lvalue Var 0x55ccd349a748 'y$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x55ccd34a4738 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x55ccd34a4718 <col:21> '_Bool' lvalue Var 0x55ccd349b110 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x55ccd34a47c8 <line:838:3, col:15> 'int' '='
    | |-DeclRefExpr 0x55ccd34a4770 <col:3> 'int' lvalue Var 0x55ccd349a7c8 'y$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x55ccd34a47b0 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55ccd34a4790 <col:15> 'int' lvalue Var 0x55ccd349a6b0 'y' 'int'
    |-BinaryOperator 0x55ccd34a4c00 <line:839:3, col:162> 'int' '='
    | |-DeclRefExpr 0x55ccd34a47e8 <col:3> 'int' lvalue Var 0x55ccd349a6b0 'y' 'int'
    | `-ConditionalOperator 0x55ccd34a4bd0 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x55ccd34a49f8 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x55ccd34a4918 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x55ccd34a4840 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x55ccd34a4828 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x55ccd34a4808 <col:8> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x55ccd34a48f8 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x55ccd34a4890 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x55ccd34a4878 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x55ccd34a4858 <col:27> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x55ccd34a48e0 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x55ccd34a48c8 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x55ccd34a48a8 <col:46> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x55ccd34a49d8 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x55ccd34a4970 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x55ccd34a4958 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55ccd34a4938 <col:65> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x55ccd34a49c0 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x55ccd34a49a8 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x55ccd34a4988 <col:84> '_Bool' lvalue Var 0x55ccd349aa98 'y$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55ccd34a4bb8 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55ccd34a4a18 <col:101> 'int' lvalue Var 0x55ccd349a6b0 'y' 'int'
    |   `-ParenExpr 0x55ccd34a4b98 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x55ccd34a4b68 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x55ccd34a4ad8 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55ccd34a4a90 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55ccd34a4a78 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55ccd34a4a38 <col:106> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55ccd34a4ac0 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55ccd34a4aa8 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55ccd34a4a58 <col:124> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55ccd34a4b38 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55ccd34a4af8 <col:141> 'int' lvalue Var 0x55ccd349adf0 'y$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x55ccd34a4b50 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55ccd34a4b18 <col:153> 'int' lvalue Var 0x55ccd349af30 'y$w_buff1' 'int'
    |-BinaryOperator 0x55ccd34a5130 <line:840:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55ccd34a4c20 <col:3> 'int' lvalue Var 0x55ccd349adf0 'y$w_buff0' 'int'
    | `-ConditionalOperator 0x55ccd34a5100 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55ccd34a50d0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55ccd34a50b8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55ccd34a4c40 <col:15> '_Bool' lvalue Var 0x55ccd349b110 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55ccd34a50e8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55ccd34a4c60 <col:31> 'int' lvalue Var 0x55ccd349adf0 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55ccd34a5098 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55ccd34a5068 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55ccd34a4e70 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55ccd34a4d90 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55ccd34a4cb8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55ccd34a4ca0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55ccd34a4c80 <col:45> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55ccd34a4d70 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55ccd34a4d08 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55ccd34a4cf0 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55ccd34a4cd0 <col:64> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55ccd34a4d58 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55ccd34a4d40 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55ccd34a4d20 <col:83> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55ccd34a4e50 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55ccd34a4de8 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55ccd34a4dd0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55ccd34a4db0 <col:102> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55ccd34a4e38 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55ccd34a4e20 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55ccd34a4e00 <col:121> '_Bool' lvalue Var 0x55ccd349aa98 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55ccd34a5050 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55ccd34a4e90 <col:138> 'int' lvalue Var 0x55ccd349adf0 'y$w_buff0' 'int'
    |       `-ParenExpr 0x55ccd34a5030 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55ccd34a5000 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55ccd34a4f50 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55ccd34a4f08 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55ccd34a4ef0 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55ccd34a4eb0 <col:151> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55ccd34a4f38 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55ccd34a4f20 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55ccd34a4ed0 <col:169> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55ccd34a4fd0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55ccd34a4f70 <col:186> 'int' lvalue Var 0x55ccd349adf0 'y$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x55ccd34a4fe8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55ccd34a4f90 <col:198> 'int' lvalue Var 0x55ccd349adf0 'y$w_buff0' 'int'
    |-BinaryOperator 0x55ccd34a5640 <line:841:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55ccd34a5150 <col:3> 'int' lvalue Var 0x55ccd349af30 'y$w_buff1' 'int'
    | `-ConditionalOperator 0x55ccd34a5610 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55ccd34a55e0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55ccd34a55c8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55ccd34a5170 <col:15> '_Bool' lvalue Var 0x55ccd349b110 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55ccd34a55f8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55ccd34a5190 <col:31> 'int' lvalue Var 0x55ccd349af30 'y$w_buff1' 'int'
    |   `-ParenExpr 0x55ccd34a55a8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55ccd34a5578 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55ccd34a53a0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55ccd34a52c0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55ccd34a51e8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55ccd34a51d0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55ccd34a51b0 <col:45> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55ccd34a52a0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55ccd34a5238 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55ccd34a5220 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55ccd34a5200 <col:64> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55ccd34a5288 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55ccd34a5270 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55ccd34a5250 <col:83> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55ccd34a5380 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55ccd34a5318 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55ccd34a5300 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55ccd34a52e0 <col:102> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55ccd34a5368 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55ccd34a5350 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55ccd34a5330 <col:121> '_Bool' lvalue Var 0x55ccd349aa98 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55ccd34a5560 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55ccd34a53c0 <col:138> 'int' lvalue Var 0x55ccd349af30 'y$w_buff1' 'int'
    |       `-ParenExpr 0x55ccd34a5540 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55ccd34a5510 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55ccd34a5480 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55ccd34a5438 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55ccd34a5420 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55ccd34a53e0 <col:151> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55ccd34a5468 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55ccd34a5450 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55ccd34a5400 <col:169> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55ccd34a54e0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55ccd34a54a0 <col:186> 'int' lvalue Var 0x55ccd349af30 'y$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x55ccd34a54f8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55ccd34a54c0 <col:198> 'int' lvalue Var 0x55ccd349af30 'y$w_buff1' 'int'
    |-BinaryOperator 0x55ccd34a5be8 <line:842:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55ccd34a5660 <col:3> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55ccd34a5bd0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55ccd34a5ba0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55ccd34a5b58 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55ccd34a5b40 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55ccd34a5680 <col:20> '_Bool' lvalue Var 0x55ccd349b110 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55ccd34a5b88 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55ccd34a5b70 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55ccd34a56a0 <col:36> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x55ccd34a5b20 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55ccd34a5af0 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55ccd34a58b0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55ccd34a57d0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55ccd34a56f8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55ccd34a56e0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55ccd34a56c0 <col:55> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55ccd34a57b0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55ccd34a5748 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55ccd34a5730 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55ccd34a5710 <col:74> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55ccd34a5798 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55ccd34a5780 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55ccd34a5760 <col:93> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55ccd34a5890 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55ccd34a5828 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55ccd34a5810 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55ccd34a57f0 <col:112> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55ccd34a5878 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55ccd34a5860 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55ccd34a5840 <col:131> '_Bool' lvalue Var 0x55ccd349aa98 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55ccd34a5ad8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55ccd34a5ac0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55ccd34a58d0 <col:148> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x55ccd34a5aa0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55ccd34a5a70 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55ccd34a5990 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55ccd34a5948 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55ccd34a5930 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55ccd34a58f0 <col:166> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55ccd34a5978 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55ccd34a5960 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55ccd34a5910 <col:184> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55ccd34a5a28 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55ccd34a59e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55ccd34a59b0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55ccd34a5a58 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55ccd34a5a40 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55ccd34a5a08 <col:212> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55ccd34a61c0 <line:843:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55ccd34a5c08 <col:3> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55ccd34a61a8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55ccd34a6178 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55ccd34a6130 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55ccd34a6118 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55ccd34a5c28 <col:20> '_Bool' lvalue Var 0x55ccd349b110 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55ccd34a6160 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55ccd34a6148 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55ccd34a5c48 <col:36> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x55ccd34a60f8 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55ccd34a60c8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55ccd34a5e58 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55ccd34a5d78 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55ccd34a5ca0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55ccd34a5c88 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55ccd34a5c68 <col:55> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55ccd34a5d58 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55ccd34a5cf0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55ccd34a5cd8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55ccd34a5cb8 <col:74> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55ccd34a5d40 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55ccd34a5d28 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55ccd34a5d08 <col:93> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55ccd34a5e38 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55ccd34a5dd0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55ccd34a5db8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55ccd34a5d98 <col:112> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55ccd34a5e20 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55ccd34a5e08 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55ccd34a5de8 <col:131> '_Bool' lvalue Var 0x55ccd349aa98 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55ccd34a60b0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55ccd34a6098 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55ccd34a5e78 <col:148> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x55ccd34a6078 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55ccd34a6048 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55ccd34a5f38 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55ccd34a5ef0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55ccd34a5ed8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55ccd34a5e98 <col:166> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55ccd34a5f20 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55ccd34a5f08 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55ccd34a5eb8 <col:184> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55ccd34a6018 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55ccd34a5f88 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55ccd34a5f58 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55ccd34a6030 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55ccd34a5ff0 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55ccd34a5fb0 <col:219> 'int' 0
    |-BinaryOperator 0x55ccd34a6768 <line:844:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55ccd34a61e0 <col:3> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55ccd34a6750 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55ccd34a6720 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55ccd34a66d8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55ccd34a66c0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55ccd34a6200 <col:20> '_Bool' lvalue Var 0x55ccd349b110 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55ccd34a6708 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55ccd34a66f0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55ccd34a6220 <col:36> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x55ccd34a66a0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55ccd34a6670 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55ccd34a6430 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55ccd34a6350 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55ccd34a6278 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55ccd34a6260 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55ccd34a6240 <col:55> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55ccd34a6330 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55ccd34a62c8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55ccd34a62b0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55ccd34a6290 <col:74> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55ccd34a6318 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55ccd34a6300 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55ccd34a62e0 <col:93> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55ccd34a6410 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55ccd34a63a8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55ccd34a6390 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55ccd34a6370 <col:112> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55ccd34a63f8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55ccd34a63e0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55ccd34a63c0 <col:131> '_Bool' lvalue Var 0x55ccd349aa98 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55ccd34a6658 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55ccd34a6640 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55ccd34a6450 <col:148> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x55ccd34a6620 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55ccd34a65f0 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55ccd34a6510 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55ccd34a64c8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55ccd34a64b0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55ccd34a6470 <col:166> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55ccd34a64f8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55ccd34a64e0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55ccd34a6490 <col:184> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55ccd34a65a8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55ccd34a6560 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55ccd34a6530 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55ccd34a65d8 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55ccd34a65c0 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55ccd34a6588 <col:212> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55ccd34a6d30 <line:845:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55ccd34a6788 <col:3> '_Bool' lvalue Var 0x55ccd349aa98 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55ccd34a6d18 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55ccd34a6ce8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55ccd34a6ca0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55ccd34a6c88 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55ccd34a67a8 <col:20> '_Bool' lvalue Var 0x55ccd349b110 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55ccd34a6cd0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55ccd34a6cb8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55ccd34a67c8 <col:36> '_Bool' lvalue Var 0x55ccd349aa98 'y$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x55ccd34a6c68 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55ccd34a6c38 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55ccd34a69d8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55ccd34a68f8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55ccd34a6820 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55ccd34a6808 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55ccd34a67e8 <col:55> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55ccd34a68d8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55ccd34a6870 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55ccd34a6858 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55ccd34a6838 <col:74> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55ccd34a68c0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55ccd34a68a8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55ccd34a6888 <col:93> '_Bool' lvalue Var 0x55ccd349afa8 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55ccd34a69b8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55ccd34a6950 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55ccd34a6938 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55ccd34a6918 <col:112> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55ccd34a69a0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55ccd34a6988 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55ccd34a6968 <col:131> '_Bool' lvalue Var 0x55ccd349aa98 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55ccd34a6c20 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55ccd34a6c08 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55ccd34a69f8 <col:148> '_Bool' lvalue Var 0x55ccd349aa98 'y$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x55ccd34a6be8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55ccd34a6bb8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55ccd34a6ab8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55ccd34a6a70 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55ccd34a6a58 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55ccd34a6a18 <col:166> '_Bool' lvalue Var 0x55ccd349ae68 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55ccd34a6aa0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55ccd34a6a88 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55ccd34a6a38 <col:184> '_Bool' lvalue Var 0x55ccd349a840 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55ccd34a6b88 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55ccd34a6b08 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55ccd34a6ad8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55ccd34a6ba0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55ccd34a6b60 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55ccd34a6b30 <col:219> 'int' 0
    |-BinaryOperator 0x55ccd34a6dc8 <line:846:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55ccd34a6d50 <col:3> '_Bool' lvalue Var 0x55ccd349b098 'weak$$choice1' '_Bool'
    | `-CallExpr 0x55ccd34a6da8 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55ccd34a6d90 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55ccd34a6d70 <col:19> '_Bool (void)' Function 0x55ccd343fc80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55ccd34a7020 <line:847:3, col:140> 'int' '='
    | |-DeclRefExpr 0x55ccd34a6de8 <col:3> 'int' lvalue Var 0x55ccd34999b8 '__unbuffered_p0_EAX' 'int'
    | `-ConditionalOperator 0x55ccd34a6ff0 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x55ccd34a6fa0 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55ccd34a6f88 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55ccd34a6e08 <col:25> '_Bool' lvalue Var 0x55ccd349a010 '__unbuffered_p0_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x55ccd34a6f48 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x55ccd34a6f18 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x55ccd34a6ed0 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x55ccd34a6eb8 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55ccd34a6e28 <col:61> '_Bool' lvalue Var 0x55ccd349b098 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x55ccd34a6ee8 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x55ccd34a6e80 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x55ccd34a6e68 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x55ccd34a6e48 <col:78> 'int *' lvalue Var 0x55ccd349a090 '__unbuffered_p0_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x55ccd34a6f00 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55ccd34a6e98 <col:117> 'int' lvalue Var 0x55ccd34999b8 '__unbuffered_p0_EAX' 'int'
    |   `-ImplicitCastExpr 0x55ccd34a6fb8 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55ccd34a6f68 <col:140> 'int' lvalue Var 0x55ccd34999b8 '__unbuffered_p0_EAX' 'int'
    |-BinaryOperator 0x55ccd34a72f0 <line:848:3, col:95> '_Bool' '='
    | |-DeclRefExpr 0x55ccd34a7040 <col:3> '_Bool' lvalue Var 0x55ccd349a490 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55ccd34a72d8 <col:21, col:95> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55ccd34a72c0 <col:21, col:95> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55ccd34a72a0 <col:22, col:95> 'int'
    |       `-BinaryOperator 0x55ccd34a7280 <col:23, col:94> 'int' '&&'
    |         |-BinaryOperator 0x55ccd34a71e8 <col:23, col:66> 'int' '&&'
    |         | |-BinaryOperator 0x55ccd34a7150 <col:23, col:38> 'int' '&&'
    |         | | |-BinaryOperator 0x55ccd34a70b8 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55ccd34a70a0 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55ccd34a7060 <col:23> 'int' lvalue Var 0x55ccd349a590 'x' 'int'
    |         | | | `-IntegerLiteral 0x55ccd34a7080 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x55ccd34a7130 <col:33, col:38> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55ccd34a7118 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55ccd34a70d8 <col:33> 'int' lvalue Var 0x55ccd349a6b0 'y' 'int'
    |         | |   `-IntegerLiteral 0x55ccd34a70f8 <col:38> 'int' 2
    |         | `-BinaryOperator 0x55ccd34a71c8 <col:43, col:66> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55ccd34a71b0 <col:43> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55ccd34a7170 <col:43> 'int' lvalue Var 0x55ccd34999b8 '__unbuffered_p0_EAX' 'int'
    |         |   `-IntegerLiteral 0x55ccd34a7190 <col:66> 'int' 2
    |         `-BinaryOperator 0x55ccd34a7260 <col:71, col:94> 'int' '=='
    |           |-ImplicitCastExpr 0x55ccd34a7248 <col:71> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55ccd34a7208 <col:71> 'int' lvalue Var 0x55ccd349a380 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x55ccd34a7228 <col:94> 'int' 2
    |-BinaryOperator 0x55ccd34a7420 <line:849:3, col:37> 'int' '='
    | |-DeclRefExpr 0x55ccd34a7310 <col:3> 'int' lvalue Var 0x55ccd349a6b0 'y' 'int'
    | `-ConditionalOperator 0x55ccd34a73f0 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x55ccd34a73a8 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55ccd34a7390 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55ccd34a7330 <col:7> '_Bool' lvalue Var 0x55ccd349a748 'y$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x55ccd34a73c0 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55ccd34a7350 <col:25> 'int' lvalue Var 0x55ccd349a7c8 'y$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x55ccd34a73d8 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55ccd34a7370 <col:37> 'int' lvalue Var 0x55ccd349a6b0 'y' 'int'
    |-BinaryOperator 0x55ccd34a74b8 <line:850:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x55ccd34a7440 <col:3> '_Bool' lvalue Var 0x55ccd349a748 'y$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x55ccd34a7490 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x55ccd34a7460 <col:28> 'int' 0
    |-CallExpr 0x55ccd34a7510 <line:851:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55ccd34a74f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55ccd34a74d8 <col:3> 'void ()' Function 0x55ccd3440570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55ccd34a7588 <line:852:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55ccd34a7570 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ccd34a7530 <col:3> 'void (int)' Function 0x55ccd3440238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55ccd34a75c8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55ccd34a75b0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55ccd34a7550 <col:21> '_Bool' lvalue Var 0x55ccd349a490 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55ccd34a7600 <line:853:3, col:10>
      `-IntegerLiteral 0x55ccd34a75e0 <col:10> 'int' 0
