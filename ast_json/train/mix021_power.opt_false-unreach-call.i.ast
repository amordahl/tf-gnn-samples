TranslationUnitDecl 0x5623bedd4f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5623bedd5848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5623bedd5520 '__int128'
|-TypedefDecl 0x5623bedd58b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5623bedd5540 'unsigned __int128'
|-TypedefDecl 0x5623bedd5bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5623bedd5990 'struct __NSConstantString_tag'
|   `-Record 0x5623bedd5910 '__NSConstantString_tag'
|-TypedefDecl 0x5623bedd5c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5623bedd5c20 'char *'
|   `-BuiltinType 0x5623bedd5020 'char'
|-TypedefDecl 0x5623bee14b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5623bedd5f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5623bedd5d40 'struct __va_list_tag'
|     `-Record 0x5623bedd5cc0 '__va_list_tag'
|-FunctionDecl 0x5623bee14ca0 <pthread-wmm/mix021_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5623bee14bd0 <col:31> col:34 'int'
|-FunctionDecl 0x5623bee14e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5623bee14f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5623bee150d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5623bee15048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5623bee15308 <col:40, col:99>
|   |-IfStmt 0x5623bee152d8 <col:42, col:88>
|   | |-UnaryOperator 0x5623bee151b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5623bee151a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5623bee15180 <col:47> 'int' lvalue ParmVar 0x5623bee15048 'expression' 'int'
|   | `-CompoundStmt 0x5623bee152c0 <col:59, col:88>
|   |   `-LabelStmt 0x5623bee152a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5623bee15238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5623bee15220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5623bee151d0 <col:68> 'void () __attribute__((noreturn))' Function 0x5623bee14f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5623bee152f0 <col:89>
|   `-ReturnStmt 0x5623bee152f8 <col:91>
|-FunctionDecl 0x5623bee15350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5623bee15410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5623bee15790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5623bee154c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5623bee15548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5623bee155c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5623bee15648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5623bee15850 <line:10:22>
|-FunctionDecl 0x5623bee3b8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5623bee158c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5623bee15940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5623bee159c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5623bee15a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5623bee3b960 <line:13:22>
|-FunctionDecl 0x5623bee3bc10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5623bee3b9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5623bee3ba50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5623bee3bad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5623bee3bcc8 <line:15:22>
|-TypedefDecl 0x5623bee3bd38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5623bedd50e0 'unsigned char'
|-TypedefDecl 0x5623bee3bda8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5623bedd5100 'unsigned short'
|-TypedefDecl 0x5623bee3be18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5623bedd5120 'unsigned int'
|-TypedefDecl 0x5623bee3be88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5623bedd5140 'unsigned long'
|-TypedefDecl 0x5623bee3bef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5623bedd5040 'signed char'
|-TypedefDecl 0x5623bee3bf68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5623bedd50e0 'unsigned char'
|-TypedefDecl 0x5623bee3bfd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5623bedd5060 'short'
|-TypedefDecl 0x5623bee3c048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5623bedd5100 'unsigned short'
|-TypedefDecl 0x5623bee3c0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5623bedd5080 'int'
|-TypedefDecl 0x5623bee3c128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5623bedd5120 'unsigned int'
|-TypedefDecl 0x5623bee3c198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5623bedd50a0 'long'
|-TypedefDecl 0x5623bee3c208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5623bedd5140 'unsigned long'
|-TypedefDecl 0x5623bee3c278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5623bedd50a0 'long'
|-TypedefDecl 0x5623bee3c2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5623bedd5140 'unsigned long'
|-TypedefDecl 0x5623bee3c358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5623bedd5140 'unsigned long'
|-TypedefDecl 0x5623bee3c3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5623bedd5120 'unsigned int'
|-TypedefDecl 0x5623bee3c438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5623bedd5120 'unsigned int'
|-TypedefDecl 0x5623bee3c4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5623bedd5140 'unsigned long'
|-TypedefDecl 0x5623bee3c518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5623bedd5140 'unsigned long'
|-TypedefDecl 0x5623bee3c588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5623bedd5120 'unsigned int'
|-TypedefDecl 0x5623bee3c5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5623bedd5140 'unsigned long'
|-TypedefDecl 0x5623bee3c668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5623bedd50a0 'long'
|-TypedefDecl 0x5623bee3c6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5623bedd50a0 'long'
|-TypedefDecl 0x5623bee3c748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5623bedd5080 'int'
|-RecordDecl 0x5623bee3c7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5623bee3c918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5623bee3c9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5623bee3c970 'struct __fsid_t' sugar
|   `-RecordType 0x5623bee3c820 '__fsid_t'
|     `-Record 0x5623bee3c7a0 ''
|-TypedefDecl 0x5623bee3ca58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5623bedd50a0 'long'
|-TypedefDecl 0x5623bee3cac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5623bedd5140 'unsigned long'
|-TypedefDecl 0x5623bee3cb38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5623bedd5140 'unsigned long'
|-TypedefDecl 0x5623bee3cba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5623bedd5120 'unsigned int'
|-TypedefDecl 0x5623bee3cc18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5623bedd50a0 'long'
|-TypedefDecl 0x5623bee3cc88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5623bedd5120 'unsigned int'
|-TypedefDecl 0x5623bee3ccf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5623bedd50a0 'long'
|-TypedefDecl 0x5623bee3cd68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5623bedd5080 'int'
|-TypedefDecl 0x5623bee3cdd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5623bedd5080 'int'
|-TypedefDecl 0x5623bee3ce48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5623bedd5080 'int'
|-TypedefDecl 0x5623bee3ceb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5623bedd57a0 'void *'
|   `-BuiltinType 0x5623bedd4fe0 'void'
|-TypedefDecl 0x5623bee3cf28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5623bedd50a0 'long'
|-TypedefDecl 0x5623bee3cf98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5623bedd50a0 'long'
|-TypedefDecl 0x5623bee3d008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5623bedd50a0 'long'
|-TypedefDecl 0x5623bee3d078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5623bedd5140 'unsigned long'
|-TypedefDecl 0x5623bee3d0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5623bedd5140 'unsigned long'
|-TypedefDecl 0x5623bee3d158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5623bedd5140 'unsigned long'
|-TypedefDecl 0x5623bee3d1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5623bedd5140 'unsigned long'
|-TypedefDecl 0x5623bee3d238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5623bedd50a0 'long'
|-TypedefDecl 0x5623bee3d2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5623bedd50a0 'long'
|-TypedefDecl 0x5623bee3d318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5623bedd50a0 'long'
|-TypedefDecl 0x5623bee3d388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5623bedd5140 'unsigned long'
|-TypedefDecl 0x5623bee3d418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5623bee3d3e0 '__off64_t' sugar
|   |-Typedef 0x5623bee3c6d8 '__off64_t'
|   `-BuiltinType 0x5623bedd50a0 'long'
|-TypedefDecl 0x5623bee3d510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5623bee3d4d0 '__quad_t *'
|   `-TypedefType 0x5623bee3d470 '__quad_t' sugar
|     |-Typedef 0x5623bee3c278 '__quad_t'
|     `-BuiltinType 0x5623bedd50a0 'long'
|-TypedefDecl 0x5623bee3d580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5623bedd5c20 'char *'
|   `-BuiltinType 0x5623bedd5020 'char'
|-TypedefDecl 0x5623bee3d5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5623bedd50a0 'long'
|-TypedefDecl 0x5623bee3d660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5623bedd5120 'unsigned int'
|-FunctionDecl 0x5623bee3d7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5623bee3d6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5623bee3dae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5623bee3dad8 <line:72:3, col:34>
|     `-CallExpr 0x5623bee3da98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5623bee3da80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5623bee3da10 <col:10> '<builtin fn type>' Function 0x5623bee3d880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5623bee3dac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5623bee3da30 <col:29> 'unsigned int' lvalue ParmVar 0x5623bee3d6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5623bee3d880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5623bee3d920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5623bee3d990 <col:10> Implicit
| `-ConstAttr 0x5623bee3d9e8 <col:10> Implicit
|-FunctionDecl 0x5623bee3dc40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5623bee3db38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5623bee3df58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5623bee3df48 <line:77:3, col:34>
|     `-CallExpr 0x5623bee3df08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5623bee3def0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5623bee3de78 <col:10> '<builtin fn type>' Function 0x5623bee3dce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5623bee3df30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5623bee3de98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5623bee3db38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5623bee3dce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5623bee3dd88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5623bee3ddf8 <col:10> Implicit
| `-ConstAttr 0x5623bee3de50 <col:10> Implicit
|-TypedefDecl 0x5623bee3df88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5623bedd5140 'unsigned long'
|-TypedefDecl 0x5623bee3e018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5623bee3dfe0 '__time_t' sugar
|   |-Typedef 0x5623bee3cc18 '__time_t'
|   `-BuiltinType 0x5623bedd50a0 'long'
|-RecordDecl 0x5623bee3e070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5623bee3e128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5623bee3e1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5623bee3e248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5623bee3e210 '__pid_t' sugar
|   |-Typedef 0x5623bee3c748 '__pid_t'
|   `-BuiltinType 0x5623bedd5080 'int'
|-RecordDecl 0x5623bee3e2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5623bee3e360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5623bee3e3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5623bee3e470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5623bee3e4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5623bedd5140 'unsigned long'
|-RecordDecl 0x5623bee3e530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5623bee3e7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5623bee408b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5623bee3e810 'struct cpu_set_t' sugar
|   `-RecordType 0x5623bee3e5b0 'cpu_set_t'
|     `-Record 0x5623bee3e530 ''
|-FunctionDecl 0x5623bee40b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5623bee40958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5623bee40a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5623bee40c38 <line:107:19>
|-FunctionDecl 0x5623bee40e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5623bee40ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5623bee40eb8 <col:69>
|-FunctionDecl 0x5623bee41030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5623bee40f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5623bee410d8 <col:64>
|-FunctionDecl 0x5623bee41398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5623bee41140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5623bee41278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5623bee41448 <line:113:22>
|-FunctionDecl 0x5623bee416c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5623bee414b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5623bee415a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5623bee41778 <col:88>
|-FunctionDecl 0x5623bee41a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5623bee417e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5623bee418c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5623bee41950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5623bee41b50 <col:62>
|-FunctionDecl 0x5623bee41cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5623bee41bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5623bee41d70 <col:63>
|-FunctionDecl 0x5623bee41e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5623bee41f38 <col:47>
|-FunctionDecl 0x5623bee42040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5623bee41fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5623bee420e8 <col:69>
|-FunctionDecl 0x5623bee421f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5623bee42158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5623bee42298 <col:69>
|-FunctionDecl 0x5623bee42558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5623bee42300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5623bee42438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5623bee42608 <col:88>
|-TypedefDecl 0x5623bee42698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5623bee42660 '__clock_t' sugar
|   |-Typedef 0x5623bee3ca58 '__clock_t'
|   `-BuiltinType 0x5623bedd50a0 'long'
|-TypedefDecl 0x5623bee42728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5623bee426f0 '__clockid_t' sugar
|   |-Typedef 0x5623bee3ce48 '__clockid_t'
|   `-BuiltinType 0x5623bedd5080 'int'
|-TypedefDecl 0x5623bee427b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5623bee42780 '__timer_t' sugar
|   |-Typedef 0x5623bee3ceb8 '__timer_t'
|   `-PointerType 0x5623bedd57a0 'void *'
|     `-BuiltinType 0x5623bedd4fe0 'void'
|-RecordDecl 0x5623bee42810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5623bee428e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5623bee42950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5623bee429b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5623bee42a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5623bee42a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5623bee42af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5623bee42b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5623bee42bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5623bee42c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5623bee42c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5623bee42cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5623bee42d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5623bee42e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5623bee42e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5623bee42f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5623bee43100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5623bee431a0 <col:45>
|-FunctionDecl 0x5623bee43380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5623bee43270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5623bee43428 <col:54>
|-FunctionDecl 0x5623bee43628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5623bee43490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5623bee43508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5623bee436d8 <line:157:22>
| `-ConstAttr 0x5623bee43730 <col:63>
|-FunctionDecl 0x5623bee44560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5623bee43828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5623bee44608 <col:56>
|-FunctionDecl 0x5623bee449b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5623bee44678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5623bee446f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5623bee44770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5623bee44868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5623bee44a70 <col:54>
|-RecordDecl 0x5623bee44ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5623bee44b78 parent 0x5623bedd4f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5623bee44dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5623bee44e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5623bee44ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5623bee44f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5623bee45038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5623bee45158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5623bee45100 'struct __locale_struct *'
|   `-ElaboratedType 0x5623bee45090 'struct __locale_struct' sugar
|     `-RecordType 0x5623bee44b50 'struct __locale_struct'
|       `-Record 0x5623bee44ac8 '__locale_struct'
|-TypedefDecl 0x5623bee45208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5623bee451d0 '__locale_t' sugar
|   |-Typedef 0x5623bee45158 '__locale_t'
|   `-PointerType 0x5623bee45100 'struct __locale_struct *'
|     `-ElaboratedType 0x5623bee45090 'struct __locale_struct' sugar
|       `-RecordType 0x5623bee44b50 'struct __locale_struct'
|         `-Record 0x5623bee44ac8 '__locale_struct'
|-FunctionDecl 0x5623bee45610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5623bee45278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5623bee452f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5623bee45370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5623bee45400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5623bee45478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5623bee456d8 <col:40>
|-FunctionDecl 0x5623bee458c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5623bee457a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5623bee45970 <col:66>
|-FunctionDecl 0x5623bee45a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5623bee459d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5623bee45b28 <col:69>
|-FunctionDecl 0x5623bee45d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5623bee45b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5623bee45c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5623bee45e08 <col:52>
|-FunctionDecl 0x5623bee45fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5623bee45e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5623bee45f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5623bee46060 <col:55>
|-FunctionDecl 0x5623bee461f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5623bee460e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5623bee462a0 <col:62>
|-FunctionDecl 0x5623bee46418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5623bee46308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5623bee464c0 <col:60>
|-FunctionDecl 0x5623bee46718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5623bee46578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5623bee465f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5623bee467c8 <col:44>
|-FunctionDecl 0x5623bee469d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5623bee46830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5623bee468b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5623bee46a88 <col:49>
|-VarDecl 0x5623bee46b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5623bee46c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5623bee46c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5623bee46d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5623bee46e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5623bee46f20 <col:42>
|-VarDecl 0x5623bee46f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5623bee47010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5623bee47198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5623bee47088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5623bee47240 <col:57>
|-FunctionDecl 0x5623bee47350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5623bee472c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5623bee473f8 <col:56>
|-FunctionDecl 0x5623bee48540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5623bee47478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5623bee485e8 <col:59>
|-FunctionDecl 0x5623bee486f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5623bee48658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5623bee48798 <col:48>
| `-ConstAttr 0x5623bee487f0 <col:89>
|-FunctionDecl 0x5623bee48a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5623bee488a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5623bee48938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5623bee48cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5623bee48b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5623bee48bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5623bee48d68 <col:88>
|-FunctionDecl 0x5623bee48f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5623bee48dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5623bee48e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5623bee48fb0 <col:88>
|-FunctionDecl 0x5623bee491c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5623bee49018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5623bee490a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5623bee49278 <line:208:22>
|-FunctionDecl 0x5623bee495e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5623bee492e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5623bee49360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5623bee493f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5623bee49480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5623bee498e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5623bee496e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5623bee497c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5623bee49998 <col:85>
|-FunctionDecl 0x5623bee49d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5623bee49a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5623bee49b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5623bee49c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5623bee49e40 <col:52>
|-FunctionDecl 0x5623bee49fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5623bee49ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5623bee4a060 <col:61>
|-FunctionDecl 0x5623bee4a560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5623bee4a0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5623bee4a148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5623bee4a278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5623bee4a368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5623bee4a620 <col:62>
|-FunctionDecl 0x5623bee4a838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5623bee4a688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5623bee4a718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5623bee4a8e8 <line:221:22>
|-FunctionDecl 0x5623bee4a9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5623bee4a950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5623bee4aa90 <col:65>
|-TypedefDecl 0x5623bee4ab00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5623bedd5140 'unsigned long'
|-RecordDecl 0x5623bee4ab58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5623bee4aca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5623bee4ad08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5623bee4adb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5623bee4ad60 'union pthread_attr_t' sugar
|   `-RecordType 0x5623bee4abe0 'union pthread_attr_t'
|     `-Record 0x5623bee4ab58 'pthread_attr_t'
|-RecordDecl 0x5623bee4ae10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5623bee4af88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5623bee4b000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5623bee4b0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5623bee4b050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5623bee4ae90 'struct __pthread_internal_list'
|     `-Record 0x5623bee4ae10 '__pthread_internal_list'
|-RecordDecl 0x5623bee4b120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5623bee4b1c8 parent 0x5623bedd4f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5623bee4b2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5623bee4b308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5623bee4b370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5623bee4b3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5623bee4b440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5623bee4b4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5623bee4f580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5623bee4f630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5623bee4f720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5623bee4f788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5623bee4f910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5623bee4f8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5623bee4b1a0 'pthread_mutex_t'
|     `-Record 0x5623bee4b120 ''
|-RecordDecl 0x5623bee4f980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5623bee4fac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5623bee4fb28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5623bee4fbe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5623bee4fb80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5623bee4fa00 'pthread_mutexattr_t'
|     `-Record 0x5623bee4f980 ''
|-RecordDecl 0x5623bee4fc50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5623bee4fcf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5623bee4fdc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5623bee4fe28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5623bee4fe90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5623bee4fef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5623bee4ff60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5623bee4ffc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5623bee50030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5623bee50098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5623bee50150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix021_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix021_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5623bee50240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5623bee502a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5623bee503e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5623bee50380 'union pthread_cond_t' sugar
|   `-RecordType 0x5623bee4fcd0 'pthread_cond_t'
|     `-Record 0x5623bee4fc50 ''
|-RecordDecl 0x5623bee50450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5623bee50590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5623bee505f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5623bee506b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5623bee50650 'union pthread_condattr_t' sugar
|   `-RecordType 0x5623bee504d0 'pthread_condattr_t'
|     `-Record 0x5623bee50450 ''
|-TypedefDecl 0x5623bee50738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5623bedd5120 'unsigned int'
|-TypedefDecl 0x5623bee507a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5623bedd5080 'int'
|-RecordDecl 0x5623bee50800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5623bee508a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5623bee50970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5623bee509d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5623bee50a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5623bee50aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5623bee50b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5623bee50b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5623bee50be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5623bee50c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5623bee50cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5623bee50d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5623bee50d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5623bee50e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix021_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix021_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5623bee50ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5623bee50f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5623bee51090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5623bee51030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5623bee50880 'pthread_rwlock_t'
|     `-Record 0x5623bee50800 ''
|-RecordDecl 0x5623bee51100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5623bee51240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5623bee512a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5623bee51360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5623bee51300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5623bee51180 'pthread_rwlockattr_t'
|     `-Record 0x5623bee51100 ''
|-TypedefDecl 0x5623bee513e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5623bedd5084 'volatile int' volatile
|   `-BuiltinType 0x5623bedd5080 'int'
|-RecordDecl 0x5623bee51440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5623bee535b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5623bee53618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5623bee536d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5623bee53670 'union pthread_barrier_t' sugar
|   `-RecordType 0x5623bee514c0 'pthread_barrier_t'
|     `-Record 0x5623bee51440 ''
|-RecordDecl 0x5623bee53740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5623bee53840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5623bee538a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5623bee53960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5623bee53900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5623bee537c0 'pthread_barrierattr_t'
|     `-Record 0x5623bee53740 ''
|-TypedefDecl 0x5623bee53a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5623bee53a10 'long [8]' 8 
|   `-BuiltinType 0x5623bedd50a0 'long'
|-EnumDecl 0x5623bee53ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5623bee53b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5623bee53be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5623bee53c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5623bee53d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5623bee53d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5623bee53da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5623bee53df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5623bee53e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5623bee53e68 <col:26> 'int'
| |   `-DeclRefExpr 0x5623bee53e48 <col:26> 'int' EnumConstant 0x5623bee53d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5623bee53f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5623bee53ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x5623bee53ed0 <col:29> 'int' EnumConstant 0x5623bee53d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5623bee53f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5623bee53f78 <col:30> 'int'
| |   `-DeclRefExpr 0x5623bee53f58 <col:30> 'int' EnumConstant 0x5623bee53da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5623bee54018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5623bee54000 <col:27> 'int'
|     `-DeclRefExpr 0x5623bee53fe0 <col:27> 'int' EnumConstant 0x5623bee53e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5623bee54068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5623bee54138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5623bee541c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5623bee541a8 <col:30> 'int'
| |   `-DeclRefExpr 0x5623bee54188 <col:30> 'int' EnumConstant 0x5623bee54138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5623bee54210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5623bee54298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5623bee54280 <col:29> 'int'
|     `-DeclRefExpr 0x5623bee54260 <col:29> 'int' EnumConstant 0x5623bee54210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5623bee542e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5623bee543b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5623bee54408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5623bee54458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5623bee544a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5623bee545c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5623bee54610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5623bee54660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5623bee546e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5623bee546d0 <col:31> 'int'
|     `-DeclRefExpr 0x5623bee546b0 <col:31> 'int' EnumConstant 0x5623bee545c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5623bee54738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5623bee54808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5623bee54858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5623bee548a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5623bee54978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5623bee549c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5623bee54a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5623bee54ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5623bee54b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5623bee54b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5623bee54dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5623bee54e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5623bee54e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5623bee54fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5623bee55008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5623bee550d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5623bee55128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5623bee55178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5623bee55248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5623bee55298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5623bee558f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5623bee55390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5623bee554a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5623bee556e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5623bee55760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5623bee559b8 <col:47>
| |-NonNullAttr 0x5623bee55a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x5623bee55a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5623bee55b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5623bee55aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5623bee55dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5623bee55c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5623bee55ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5623bee55f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5623bee55e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5623bee56040 <col:60>
|-FunctionDecl 0x5623bee56190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5623bee56230 <col:54>
| `-ConstAttr 0x5623bee56288 <col:95>
|-FunctionDecl 0x5623bee56458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5623bee562c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5623bee56338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5623bee56508 <line:394:19>
| `-ConstAttr 0x5623bee56560 <col:60>
|-FunctionDecl 0x5623bee56f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5623bee56e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5623bee57010 <col:71>
| `-NonNullAttr 0x5623bee57068 <col:112, col:126> 1
|-FunctionDecl 0x5623bee57170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5623bee570b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5623bee57218 <line:397:22>
| `-NonNullAttr 0x5623bee57270 <col:63, col:77> 1
|-FunctionDecl 0x5623bee57498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5623bee572b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5623bee57338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5623bee57548 <line:400:22>
| `-NonNullAttr 0x5623bee575a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5623bee577a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5623bee575e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5623bee57668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5623bee57858 <line:403:22>
| `-NonNullAttr 0x5623bee578b0 <col:63, col:77> 1
|-FunctionDecl 0x5623bee57b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5623bee578f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5623bee579a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5623bee57bb8 <line:406:22>
| `-NonNullAttr 0x5623bee57c10 <col:63, col:80> 1 2
|-FunctionDecl 0x5623bee58e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5623bee57c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5623bee57cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5623bee58ef8 <line:409:22>
| `-NonNullAttr 0x5623bee58f50 <col:63, col:77> 1
|-FunctionDecl 0x5623bee59188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5623bee58f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5623bee59028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5623bee59238 <line:412:22>
| `-NonNullAttr 0x5623bee59290 <col:63, col:80> 1 2
|-FunctionDecl 0x5623bee594c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5623bee592d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5623bee59368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5623bee59578 <col:37>
| `-NonNullAttr 0x5623bee595d0 <col:78, col:95> 1 2
|-FunctionDecl 0x5623bee597b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623bee59618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5623bee59698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5623bee59868 <line:418:22>
| `-NonNullAttr 0x5623bee598c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5623bee59a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5623bee59908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5623bee59988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5623bee59af8 <line:420:22>
| `-NonNullAttr 0x5623bee59b50 <col:63, col:77> 1
|-FunctionDecl 0x5623bee59cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623bee59b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5623bee59c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5623bee59da8 <line:423:22>
| `-NonNullAttr 0x5623bee5ae30 <col:63, col:80> 1 2
|-FunctionDecl 0x5623bee5afb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5623bee5ae78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5623bee5aef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5623bee5b068 <line:426:22>
| `-NonNullAttr 0x5623bee5b0c0 <col:63, col:77> 1
|-FunctionDecl 0x5623bee5b268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623bee5b108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5623bee5b188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5623bee5b318 <line:429:22>
| `-NonNullAttr 0x5623bee5b370 <col:63, col:80> 1 2
|-FunctionDecl 0x5623bee5b4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5623bee5b3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5623bee5b438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5623bee5b5a8 <line:431:22>
| `-NonNullAttr 0x5623bee5b600 <col:63, col:77> 1
|-FunctionDecl 0x5623bee5b828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5623bee5b648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5623bee5b6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5623bee5b8d8 <line:434:22>
| |-NonNullAttr 0x5623bee5b930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5623bee5b968 <col:100> "" ""
|-FunctionDecl 0x5623bee5bb78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5623bee5b9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5623bee5ba38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5623bee5bc28 <line:437:22>
| |-NonNullAttr 0x5623bee5bc80 <col:63, col:77> 1
| `-DeprecatedAttr 0x5623bee5bcb8 <col:97> "" ""
|-FunctionDecl 0x5623bee5beb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5623bee5bd08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5623bee5bd80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5623bee5bf68 <line:440:22>
| `-NonNullAttr 0x5623bee5bfc0 <col:63, col:80> 1 2
|-FunctionDecl 0x5623bee5c140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5623bee5c008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5623bee5c080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5623bee5c1f0 <line:443:22>
| `-NonNullAttr 0x5623bee5c248 <col:63, col:77> 1
|-FunctionDecl 0x5623bee5c538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5623bee5c298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5623bee5c318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5623bee5c390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5623bee5c5f0 <line:447:22>
| `-NonNullAttr 0x5623bee5c648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5623bee5c8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5623bee5c6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5623bee5c720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5623bee5c798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5623bee5c9b0 <col:43>
| `-NonNullAttr 0x5623bee5ca08 <col:84, col:98> 1
|-FunctionDecl 0x5623bee5ccc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5623bee5ca58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5623bee5cad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5623bee5cb68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5623bee5cd80 <line:452:22>
| `-NonNullAttr 0x5623bee5cdd8 <col:63, col:77> 3
|-FunctionDecl 0x5623bee5d0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5623bee5ce50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5623bee5ced0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5623bee5cf60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5623bee5d1a0 <line:456:22>
| `-NonNullAttr 0x5623bee5d1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x5623bee5d3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5623bee5d248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5623bee5d2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5623bee5d498 <line:458:22>
|-FunctionDecl 0x5623bee5d868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5623bee5d560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5623bee5d700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5623bee5d918 <col:52, col:69> 1 2
|-FunctionDecl 0x5623bee5dac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5623bee5d9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5623bee5da20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5623bee5dca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5623bee5db88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5623bee5dc08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5623bee5de60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5623bee5dd68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5623bee5dfa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5623bee5e040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5623bee5e0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5623bee5e1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5623bee5e240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5623bee5e410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix021_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5623bee5e508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5623bee5e5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5623bee5e560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5623bee5e0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x5623bee5e040 ''
| `-AlignedAttr 0x5623bee5e618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5623bee5e690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5623bee5e7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5623bee5e858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5623bee5e8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5623bee5e928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5623bee5eb30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5623bee5ea20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5623bee5ec78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5623bee5ebe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5623bee5ee70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5623bee5ed30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5623bee5ef18 <line:487:22>
|-RecordDecl 0x5623bee5ef70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5623bee5f288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5623bee5f0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5623bee5f168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5623bee5f338 <col:86>
| `-ReturnsTwiceAttr 0x5623bee5f390 <col:12> Implicit
|-FunctionDecl 0x5623bee5f6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5623bee5f460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5623bee5f570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5623bee5f768 <line:493:22>
| `-NonNullAttr 0x5623bee5f7c0 <col:63, col:77> 1
|-FunctionDecl 0x5623bee5f938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5623bee5f808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5623bee5f9e0 <line:495:22>
| `-NonNullAttr 0x5623bee5fa38 <col:63, col:77> 1
|-FunctionDecl 0x5623bee5fb40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5623bee5fa88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5623bee5fbe8 <line:497:22>
| `-NonNullAttr 0x5623bee5fc40 <col:52, col:66> 1
|-FunctionDecl 0x5623bee5fd40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5623bee5fc88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5623bee5fde8 <line:499:22>
| `-NonNullAttr 0x5623bee5fe40 <col:52, col:66> 1
|-FunctionDecl 0x5623bee60088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5623bee5fe98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5623bee5ff28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5623bee60138 <col:36>
| `-NonNullAttr 0x5623bee60190 <col:66, col:83> 1 2
|-FunctionDecl 0x5623bee60290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5623bee601d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5623bee60338 <line:504:22>
| `-NonNullAttr 0x5623bee60390 <col:52, col:66> 1
|-FunctionDecl 0x5623bee60628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623bee60440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5623bee604c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5623bee606d8 <line:508:22>
| `-NonNullAttr 0x5623bee60730 <col:63, col:80> 1 2
|-FunctionDecl 0x5623bee609f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5623bee60778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5623bee607f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5623bee60878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5623bee60ab0 <line:512:22>
| `-NonNullAttr 0x5623bee60b08 <col:63, col:80> 1 3
|-FunctionDecl 0x5623bee60c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5623bee60b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5623bee60cb8 <line:514:22>
| `-NonNullAttr 0x5623bee60d10 <col:63, col:77> 1
|-FunctionDecl 0x5623bee60f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5623bee60dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5623bee60fe0 <line:516:22>
| `-NonNullAttr 0x5623bee61038 <col:63, col:77> 1
|-FunctionDecl 0x5623bee61140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5623bee61088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5623bee611e8 <line:518:22>
| `-NonNullAttr 0x5623bee61240 <col:63, col:77> 1
|-FunctionDecl 0x5623bee61468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623bee61288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5623bee61308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5623bee61518 <line:522:22>
| `-NonNullAttr 0x5623bee61570 <col:63, col:80> 1 2
|-FunctionDecl 0x5623bee61778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5623bee615b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5623bee61638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5623bee61828 <line:525:22>
| `-NonNullAttr 0x5623bee61880 <col:63, col:77> 1
|-FunctionDecl 0x5623bee61a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623bee618c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5623bee61948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5623bee61ad8 <line:528:22>
| `-NonNullAttr 0x5623bee61b30 <col:63, col:80> 1 2
|-FunctionDecl 0x5623bee61cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5623bee61b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5623bee61bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5623bee61d68 <line:530:22>
| `-NonNullAttr 0x5623bee61dc0 <col:63, col:77> 1
|-FunctionDecl 0x5623bee62f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623bee61e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5623bee62eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5623bee63040 <line:534:22>
| `-NonNullAttr 0x5623bee63098 <col:63, col:80> 1 2
|-FunctionDecl 0x5623bee63228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5623bee630e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5623bee63168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5623bee632d8 <line:537:22>
| `-NonNullAttr 0x5623bee63330 <col:63, col:77> 1
|-FunctionDecl 0x5623bee634d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623bee63378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5623bee633f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5623bee63588 <line:541:22>
| `-NonNullAttr 0x5623bee635e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5623bee63768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5623bee63628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5623bee636a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5623bee63818 <line:544:22>
| `-NonNullAttr 0x5623bee63870 <col:63, col:77> 1
|-FunctionDecl 0x5623bee63a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5623bee638b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5623bee63938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5623bee63b08 <line:547:22>
| `-NonNullAttr 0x5623bee63b60 <col:63, col:80> 1 2
|-FunctionDecl 0x5623bee63ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5623bee63ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5623bee63c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5623bee63d98 <line:550:22>
| `-NonNullAttr 0x5623bee63df0 <col:63, col:77> 1
|-FunctionDecl 0x5623bee65168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5623bee64f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5623bee65020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5623bee65218 <col:29>
| `-NonNullAttr 0x5623bee65270 <col:70, col:84> 1
|-FunctionDecl 0x5623bee653e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5623bee652b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5623bee65490 <line:555:22>
| `-NonNullAttr 0x5623bee654e8 <col:63, col:77> 1
|-FunctionDecl 0x5623bee655f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5623bee65538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5623bee65698 <line:557:22>
| `-NonNullAttr 0x5623bee656f0 <col:52, col:66> 1
|-FunctionDecl 0x5623bee657f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5623bee65738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5623bee65898 <line:559:19>
| `-NonNullAttr 0x5623bee658f0 <col:49, col:63> 1
|-FunctionDecl 0x5623bee65b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5623bee65938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5623bee659c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5623bee65bd8 <col:39>
| `-NonNullAttr 0x5623bee65c30 <col:69, col:86> 1 2
|-FunctionDecl 0x5623bee65d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5623bee65c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5623bee65dd8 <line:564:22>
| `-NonNullAttr 0x5623bee65e30 <col:52, col:66> 1
|-FunctionDecl 0x5623bee65f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5623bee65ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5623bee66040 <line:566:22>
| `-NonNullAttr 0x5623bee66098 <col:52, col:66> 1
|-FunctionDecl 0x5623bee66258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5623bee660e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5623bee66178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5623bee66308 <col:39>
| `-NonNullAttr 0x5623bee66360 <col:69, col:86> 1 2
|-FunctionDecl 0x5623bee66460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5623bee663a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5623bee66508 <line:571:22>
| `-NonNullAttr 0x5623bee66560 <col:52, col:66> 1
|-FunctionDecl 0x5623bee66748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5623bee66610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5623bee667f0 <line:573:22>
| `-NonNullAttr 0x5623bee66848 <col:63, col:77> 1
|-FunctionDecl 0x5623bee66950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5623bee66898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5623bee669f8 <line:575:22>
| `-NonNullAttr 0x5623bee66a50 <col:63, col:77> 1
|-FunctionDecl 0x5623bee66c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623bee66a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5623bee66b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5623bee66d28 <line:579:22>
| `-NonNullAttr 0x5623bee66d80 <col:63, col:80> 1 2
|-FunctionDecl 0x5623bee66fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5623bee66dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5623bee66e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5623bee67058 <line:582:22>
| `-NonNullAttr 0x5623bee670b0 <col:63, col:77> 1
|-FunctionDecl 0x5623bee67258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623bee670f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5623bee67178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5623bee67308 <line:586:22>
| `-NonNullAttr 0x5623bee67360 <col:63, col:80> 1 2
|-FunctionDecl 0x5623bee674e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5623bee673a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5623bee67428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5623bee67598 <col:36>
| `-NonNullAttr 0x5623bee675f0 <col:77, col:91> 1
|-FunctionDecl 0x5623bee67928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5623bee676d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5623bee677e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5623bee679d8 <line:591:22>
| `-NonNullAttr 0x5623bee67a30 <col:63, col:77> 1
|-FunctionDecl 0x5623bee67ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5623bee67a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5623bee67c50 <line:593:22>
| `-NonNullAttr 0x5623bee67ca8 <col:63, col:77> 1
|-FunctionDecl 0x5623bee67db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5623bee67cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5623bee67e58 <line:595:22>
| `-NonNullAttr 0x5623bee67eb0 <col:52, col:66> 1
|-FunctionDecl 0x5623bee67fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5623bee67f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5623bee68070 <line:597:22>
| `-NonNullAttr 0x5623bee680c8 <col:52, col:66> 1
|-FunctionDecl 0x5623bee682f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5623bee68118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5623bee68190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5623bee683a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5623bee686d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5623bee68428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5623bee684a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5623bee68530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5623bee68790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5623bee689a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5623bee68870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5623bee68a50 <line:606:22>
| `-NonNullAttr 0x5623bee68aa8 <col:63, col:77> 1
|-FunctionDecl 0x5623bee68bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5623bee68af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5623bee68c58 <line:608:22>
| `-NonNullAttr 0x5623bee68cb0 <col:63, col:77> 1
|-FunctionDecl 0x5623bee68f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623bee68cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5623bee68d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5623bee68fc0 <line:612:22>
| `-NonNullAttr 0x5623bee69018 <col:63, col:80> 1 2
|-FunctionDecl 0x5623bee69228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5623bee69068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5623bee690e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5623bee692d8 <col:37>
| `-NonNullAttr 0x5623bee69330 <col:78, col:92> 1
|-FunctionDecl 0x5623bee69548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5623bee69378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5623bee69420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5623bee695f8 <line:618:22>
| `-NonNullAttr 0x5623bee69650 <col:63, col:80> 1 2
|-FunctionDecl 0x5623bee69818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5623bee69698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5623bee69710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5623bee698c8 <line:621:22>
| `-NonNullAttr 0x5623bee69920 <col:63, col:77> 1
|-FunctionDecl 0x5623bee69bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5623bee69a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5623bee69a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5623bee69c78 <line:623:22>
| `-NonNullAttr 0x5623bee69cd0 <col:63, col:77> 1
|-FunctionDecl 0x5623bee69e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5623bee69d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5623bee69f20 <line:625:22>
| `-NonNullAttr 0x5623bee69f78 <col:63, col:77> 1
|-FunctionDecl 0x5623bee6a080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5623bee69fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5623bee6a128 <line:627:22>
| `-NonNullAttr 0x5623bee6a180 <col:52, col:66> 1
|-FunctionDecl 0x5623bee6a280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5623bee6a1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5623bee6a328 <line:629:22>
| `-NonNullAttr 0x5623bee6a380 <col:52, col:66> 1
|-FunctionDecl 0x5623bee6a480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5623bee6a3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5623bee6a528 <line:631:22>
| `-NonNullAttr 0x5623bee6a580 <col:52, col:66> 1
|-FunctionDecl 0x5623bee6a958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5623bee6a660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5623bee6a770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5623bee6a7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5623bee6aa10 <line:635:22>
| `-NonNullAttr 0x5623bee6aa68 <col:63, col:77> 1
|-FunctionDecl 0x5623bee6abe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5623bee6aab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5623bee6ac90 <line:637:22>
| `-NonNullAttr 0x5623bee6ace8 <col:63, col:77> 1
|-FunctionDecl 0x5623bee6adf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5623bee6ad38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5623bee6ae98 <line:639:22>
| `-NonNullAttr 0x5623bee6aef0 <col:52, col:66> 1
|-FunctionDecl 0x5623bee6b0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5623bee6afb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5623bee6b190 <line:641:22>
| `-NonNullAttr 0x5623bee6b1e8 <col:63, col:77> 1
|-FunctionDecl 0x5623bee6b2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5623bee6b238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5623bee6b398 <line:643:22>
| `-NonNullAttr 0x5623bee6b3f0 <col:63, col:77> 1
|-FunctionDecl 0x5623bee6b618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623bee6b438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5623bee6b4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5623bee6b6c8 <line:647:22>
| `-NonNullAttr 0x5623bee6b720 <col:63, col:80> 1 2
|-FunctionDecl 0x5623bee6b928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5623bee6b768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5623bee6b7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5623bee6b9d8 <line:650:22>
| `-NonNullAttr 0x5623bee6ba30 <col:63, col:77> 1
|-FunctionDecl 0x5623bee6bd78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5623bee6bb10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5623bee6bc30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5623bee6be28 <line:653:22>
| `-NonNullAttr 0x5623bee6be80 <col:63, col:77> 1
|-FunctionDecl 0x5623bee6bfe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5623bee6bec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5623bee6c090 <col:69>
|-FunctionDecl 0x5623bee6c208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5623bee6c0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5623bee6c2b0 <col:72>
|-FunctionDecl 0x5623bee6c4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5623bee6c318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5623bee6c3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5623bee6c598 <col:44>
|-FunctionDecl 0x5623bee6c7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5623bee6c600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5623bee6c678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5623bee6c868 <line:660:22>
| `-NonNullAttr 0x5623bee6c8c0 <col:63, col:77> 2
|-FunctionDecl 0x5623bee6cd08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5623bee6c9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5623bee6cab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5623bee6cbc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5623bee6cdc0 <col:47>
|-FunctionDecl 0x5623bee6df60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5623bee6ce30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5623bee6e0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5623bee6e020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5623bee6e210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5623bee6e178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5623bee6e368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x5623bee6e2d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5623bee6e430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5623bee6e4f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5623bee6e5b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5623bee6e668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5623bee6e6e8 prev 0x5623bee6e668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5623bee6e750 <col:24> 'int' 0
|-VarDecl 0x5623bee6e788 <line:674:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5623bee6e808 prev 0x5623bee6e788 <line:675:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5623bee6e870 <col:27> 'int' 0
|-VarDecl 0x5623bee6e8a8 <line:676:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x5623bee6e928 prev 0x5623bee6e8a8 <line:677:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x5623bee6e990 <col:27> 'int' 0
|-VarDecl 0x5623bee6e9c8 <line:678:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x5623bee6ea48 prev 0x5623bee6e9c8 <line:679:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x5623bee6eab0 <col:27> 'int' 0
|-VarDecl 0x5623bee6eae8 <line:680:1, col:5> col:5 used a 'int'
|-VarDecl 0x5623bee6eb68 prev 0x5623bee6eae8 <line:681:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x5623bee6ebd0 <col:9> 'int' 0
|-VarDecl 0x5623bee6ec00 <line:682:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5623bee6ec78 <line:683:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5623bee6ecf8 <line:684:1, col:5> col:5 used x 'int'
|-VarDecl 0x5623bee6ed78 prev 0x5623bee6ecf8 <line:685:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5623bee6ede0 <col:9> 'int' 0
|-VarDecl 0x5623bee6ee18 <line:686:1, col:5> col:5 used y 'int'
|-VarDecl 0x5623bee6ee98 prev 0x5623bee6ee18 <line:687:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5623bee6ef00 <col:9> 'int' 0
|-VarDecl 0x5623bee6ef70 <line:688:1, col:5> col:5 used z 'int'
|-VarDecl 0x5623bee6eff0 prev 0x5623bee6ef70 <line:689:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5623bee6f058 <col:9> 'int' 0
|-VarDecl 0x5623bee6f088 <line:690:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x5623bee6f108 <line:691:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x5623bee6f180 <line:692:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x5623bee6f1f8 <line:693:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x5623bee6f270 <line:694:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x5623bee6f2e8 <line:695:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x5623bee6f360 <line:696:1, col:7> col:7 used z$r_buff0_thd4 '_Bool'
|-VarDecl 0x5623bee6f3d8 <line:697:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x5623bee6f450 <line:698:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x5623bee6f4c8 <line:699:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x5623bee6f540 <line:700:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x5623bee6f5b8 <line:701:1, col:7> col:7 used z$r_buff1_thd4 '_Bool'
|-VarDecl 0x5623bee6f630 <line:702:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x5623bee6f6b0 <line:703:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x5623bee6f730 <line:704:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x5623bee6f7a8 <line:705:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x5623bee6f828 <line:706:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x5623bee6f8a0 <line:707:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x5623bee6f918 <line:708:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5623bee6f990 <line:709:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5623bee6faa8 prev 0x5623bee6df60 <line:710:1, line:724:1> line:710:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5623bee6fa10 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5623bee70078 <line:711:1, line:724:1>
|   |-CallExpr 0x5623bee6fbb8 <line:712:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623bee6fba0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee6fb50 <col:3> 'void ()' Function 0x5623bee15350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623bee6fc18 <line:713:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5623bee6fbd8 <col:3> 'int' lvalue Var 0x5623bee6eb68 'a' 'int'
|   | `-IntegerLiteral 0x5623bee6fbf8 <col:7> 'int' 1
|   |-CallExpr 0x5623bee6fc70 <line:714:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623bee6fc58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee6fc38 <col:3> 'void ()' Function 0x5623bee15410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623bee6fcc8 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623bee6fcb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee6fc90 <col:3> 'void ()' Function 0x5623bee15350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623bee6fd28 <line:716:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5623bee6fce8 <col:3> 'int' lvalue Var 0x5623bee6ed78 'x' 'int'
|   | `-IntegerLiteral 0x5623bee6fd08 <col:7> 'int' 1
|   |-CallExpr 0x5623bee6fd80 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623bee6fd68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee6fd48 <col:3> 'void ()' Function 0x5623bee15410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623bee6fdd8 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623bee6fdc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee6fda0 <col:3> 'void ()' Function 0x5623bee15350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5623bee6fe30 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623bee6fe18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee6fdf8 <col:3> 'void ()' Function 0x5623bee15410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623bee6fe88 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623bee6fe70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee6fe50 <col:3> 'void ()' Function 0x5623bee15350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623bee6ff40 <line:721:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5623bee6fea8 <col:3> 'int' lvalue Var 0x5623bee6e6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5623bee6ff20 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5623bee6ff08 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623bee6fec8 <col:22> 'int' lvalue Var 0x5623bee6e6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5623bee6fee8 <col:41> 'int' 1
|   |-CallExpr 0x5623bee6ffb8 <line:722:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623bee6ffa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee6ff80 <col:3> 'void ()' Function 0x5623bee15410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5623bee70068 <line:723:3, col:36>
|     `-CallExpr 0x5623bee70048 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5623bee70030 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5623bee6ffd8 <col:10> 'void *(void)' Function 0x5623bee14e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5623bee70198 prev 0x5623bee6e0b8 <line:725:1, line:739:1> line:725:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5623bee70100 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5623bee706e0 <line:726:1, line:739:1>
|   |-CallExpr 0x5623bee70278 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623bee70260 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee70240 <col:3> 'void ()' Function 0x5623bee15350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623bee702d8 <line:728:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5623bee70298 <col:3> 'int' lvalue Var 0x5623bee6ed78 'x' 'int'
|   | `-IntegerLiteral 0x5623bee702b8 <col:7> 'int' 2
|   |-CallExpr 0x5623bee70330 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623bee70318 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee702f8 <col:3> 'void ()' Function 0x5623bee15410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623bee70388 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623bee70370 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee70350 <col:3> 'void ()' Function 0x5623bee15350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623bee703e8 <line:731:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5623bee703a8 <col:3> 'int' lvalue Var 0x5623bee6ee98 'y' 'int'
|   | `-IntegerLiteral 0x5623bee703c8 <col:7> 'int' 1
|   |-CallExpr 0x5623bee70440 <line:732:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623bee70428 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee70408 <col:3> 'void ()' Function 0x5623bee15410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623bee70498 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623bee70480 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee70460 <col:3> 'void ()' Function 0x5623bee15350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5623bee704f0 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623bee704d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee704b8 <col:3> 'void ()' Function 0x5623bee15410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623bee70548 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623bee70530 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee70510 <col:3> 'void ()' Function 0x5623bee15350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623bee70600 <line:736:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5623bee70568 <col:3> 'int' lvalue Var 0x5623bee6e6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5623bee705e0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5623bee705c8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623bee70588 <col:22> 'int' lvalue Var 0x5623bee6e6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5623bee705a8 <col:41> 'int' 1
|   |-CallExpr 0x5623bee70658 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623bee70640 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee70620 <col:3> 'void ()' Function 0x5623bee15410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5623bee706d0 <line:738:3, col:36>
|     `-CallExpr 0x5623bee706b0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5623bee70698 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5623bee70678 <col:10> 'void *(void)' Function 0x5623bee14e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5623bee70800 prev 0x5623bee6e210 <line:740:1, line:767:1> line:740:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5623bee70768 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5623bee73720 <line:741:1, line:767:1>
|   |-CallExpr 0x5623bee708e0 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623bee708c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee708a8 <col:3> 'void ()' Function 0x5623bee15350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623bee70940 <line:743:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5623bee70900 <col:3> 'int' lvalue Var 0x5623bee6ee98 'y' 'int'
|   | `-IntegerLiteral 0x5623bee70920 <col:7> 'int' 2
|   |-CallExpr 0x5623bee70998 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623bee70980 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee70960 <col:3> 'void ()' Function 0x5623bee15410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623bee709f0 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623bee709d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee709b8 <col:3> 'void ()' Function 0x5623bee15350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623bee70aa0 <line:746:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5623bee70a10 <col:3> '_Bool' lvalue Var 0x5623bee6f918 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5623bee70a88 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5623bee70a68 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5623bee70a50 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5623bee70a30 <col:19> 'void *(void)' Function 0x5623bee14e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5623bee70b50 <line:747:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5623bee70ac0 <col:3> '_Bool' lvalue Var 0x5623bee6f990 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5623bee70b38 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5623bee70b18 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5623bee70b00 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5623bee70ae0 <col:19> 'void *(void)' Function 0x5623bee14e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5623bee70bc8 <line:748:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5623bee70b70 <col:3> '_Bool' lvalue Var 0x5623bee6f088 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5623bee70bb0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623bee70b90 <col:21> '_Bool' lvalue Var 0x5623bee6f990 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5623bee70c40 <line:749:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5623bee70be8 <col:3> 'int' lvalue Var 0x5623bee6f108 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5623bee70c28 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623bee70c08 <col:15> 'int' lvalue Var 0x5623bee6eff0 'z' 'int'
|   |-BinaryOperator 0x5623bee71098 <line:750:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5623bee70c60 <col:3> 'int' lvalue Var 0x5623bee6eff0 'z' 'int'
|   | `-ConditionalOperator 0x5623bee71068 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5623bee70e70 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5623bee70d90 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5623bee70cb8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5623bee70ca0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5623bee70c80 <col:8> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5623bee70d70 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5623bee70d08 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5623bee70cf0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5623bee70cd0 <col:27> '_Bool' lvalue Var 0x5623bee6f2e8 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x5623bee70d58 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5623bee70d40 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5623bee70d20 <col:46> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5623bee70e50 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5623bee70de8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5623bee70dd0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5623bee70db0 <col:65> '_Bool' lvalue Var 0x5623bee6f2e8 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x5623bee70e38 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5623bee70e20 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5623bee70e00 <col:84> '_Bool' lvalue Var 0x5623bee6f540 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5623bee71050 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623bee70e90 <col:101> 'int' lvalue Var 0x5623bee6eff0 'z' 'int'
|   |   `-ParenExpr 0x5623bee71030 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5623bee71000 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5623bee70f50 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5623bee70f08 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5623bee70ef0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5623bee70eb0 <col:106> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5623bee70f38 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5623bee70f20 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5623bee70ed0 <col:124> '_Bool' lvalue Var 0x5623bee6f2e8 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5623bee70fd0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5623bee70f90 <col:141> 'int' lvalue Var 0x5623bee6f730 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5623bee70fe8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5623bee70fb0 <col:153> 'int' lvalue Var 0x5623bee6f828 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5623bee715a8 <line:751:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5623bee710b8 <col:3> 'int' lvalue Var 0x5623bee6f730 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x5623bee71578 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5623bee71548 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5623bee71530 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5623bee710d8 <col:15> '_Bool' lvalue Var 0x5623bee6f990 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5623bee71560 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623bee710f8 <col:31> 'int' lvalue Var 0x5623bee6f730 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5623bee71510 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5623bee714e0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5623bee71308 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5623bee71228 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5623bee71150 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5623bee71138 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5623bee71118 <col:45> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5623bee71208 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5623bee711a0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5623bee71188 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5623bee71168 <col:64> '_Bool' lvalue Var 0x5623bee6f2e8 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5623bee711f0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5623bee711d8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5623bee711b8 <col:83> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5623bee712e8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5623bee71280 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5623bee71268 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5623bee71248 <col:102> '_Bool' lvalue Var 0x5623bee6f2e8 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5623bee712d0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5623bee712b8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5623bee71298 <col:121> '_Bool' lvalue Var 0x5623bee6f540 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5623bee714c8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5623bee71328 <col:138> 'int' lvalue Var 0x5623bee6f730 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x5623bee714a8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5623bee71478 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5623bee713e8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5623bee713a0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5623bee71388 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5623bee71348 <col:151> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5623bee713d0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5623bee713b8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5623bee71368 <col:169> '_Bool' lvalue Var 0x5623bee6f2e8 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5623bee71448 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5623bee71408 <col:186> 'int' lvalue Var 0x5623bee6f730 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5623bee71460 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5623bee71428 <col:198> 'int' lvalue Var 0x5623bee6f730 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5623bee71ab8 <line:752:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5623bee715c8 <col:3> 'int' lvalue Var 0x5623bee6f828 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x5623bee71a88 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5623bee71a58 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5623bee71a40 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5623bee715e8 <col:15> '_Bool' lvalue Var 0x5623bee6f990 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5623bee71a70 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623bee71608 <col:31> 'int' lvalue Var 0x5623bee6f828 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x5623bee71a20 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5623bee719f0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5623bee71818 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5623bee71738 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5623bee71660 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5623bee71648 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5623bee71628 <col:45> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5623bee71718 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5623bee716b0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5623bee71698 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5623bee71678 <col:64> '_Bool' lvalue Var 0x5623bee6f2e8 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5623bee71700 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5623bee716e8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5623bee716c8 <col:83> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5623bee717f8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5623bee71790 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5623bee71778 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5623bee71758 <col:102> '_Bool' lvalue Var 0x5623bee6f2e8 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5623bee717e0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5623bee717c8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5623bee717a8 <col:121> '_Bool' lvalue Var 0x5623bee6f540 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5623bee719d8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5623bee71838 <col:138> 'int' lvalue Var 0x5623bee6f828 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x5623bee719b8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5623bee71988 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5623bee718f8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5623bee718b0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5623bee71898 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5623bee71858 <col:151> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5623bee718e0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5623bee718c8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5623bee71878 <col:169> '_Bool' lvalue Var 0x5623bee6f2e8 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5623bee71958 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5623bee71918 <col:186> 'int' lvalue Var 0x5623bee6f828 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5623bee71970 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5623bee71938 <col:198> 'int' lvalue Var 0x5623bee6f828 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5623bee72098 <line:753:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5623bee71ad8 <col:3> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5623bee72080 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623bee72050 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5623bee72008 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623bee71ff0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623bee71af8 <col:20> '_Bool' lvalue Var 0x5623bee6f990 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5623bee72038 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623bee72020 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623bee71b18 <col:36> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5623bee71fd0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5623bee71fa0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5623bee71d28 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5623bee71c48 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5623bee71b70 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5623bee71b58 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5623bee71b38 <col:55> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5623bee71c28 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5623bee71bc0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5623bee71ba8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5623bee71b88 <col:74> '_Bool' lvalue Var 0x5623bee6f2e8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5623bee71c10 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5623bee71bf8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5623bee71bd8 <col:93> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5623bee71d08 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5623bee71ca0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5623bee71c88 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5623bee71c68 <col:112> '_Bool' lvalue Var 0x5623bee6f2e8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5623bee71cf0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5623bee71cd8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5623bee71cb8 <col:131> '_Bool' lvalue Var 0x5623bee6f540 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5623bee71f50 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5623bee71f38 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5623bee71d48 <col:148> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5623bee71f18 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5623bee71ee8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5623bee71e08 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5623bee71dc0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5623bee71da8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5623bee71d68 <col:166> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5623bee71df0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5623bee71dd8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5623bee71d88 <col:184> '_Bool' lvalue Var 0x5623bee6f2e8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5623bee71ea0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5623bee71e58 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5623bee71e28 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5623bee71ed0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5623bee71eb8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5623bee71e80 <col:212> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5623bee72660 <line:754:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5623bee720b8 <col:3> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5623bee72648 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623bee72618 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5623bee725d0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623bee725b8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623bee720d8 <col:20> '_Bool' lvalue Var 0x5623bee6f990 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5623bee72600 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623bee725e8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623bee720f8 <col:36> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5623bee72598 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5623bee72568 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5623bee72308 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5623bee72228 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5623bee72150 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5623bee72138 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5623bee72118 <col:55> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5623bee72208 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5623bee721a0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5623bee72188 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5623bee72168 <col:74> '_Bool' lvalue Var 0x5623bee6f2e8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5623bee721f0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5623bee721d8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5623bee721b8 <col:93> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5623bee722e8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5623bee72280 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5623bee72268 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5623bee72248 <col:112> '_Bool' lvalue Var 0x5623bee6f2e8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5623bee722d0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5623bee722b8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5623bee72298 <col:131> '_Bool' lvalue Var 0x5623bee6f540 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5623bee72550 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5623bee72538 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5623bee72328 <col:148> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5623bee72518 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5623bee724e8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5623bee723e8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5623bee723a0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5623bee72388 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5623bee72348 <col:166> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5623bee723d0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5623bee723b8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5623bee72368 <col:184> '_Bool' lvalue Var 0x5623bee6f2e8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5623bee724b8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5623bee72438 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5623bee72408 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5623bee724d0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5623bee72490 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5623bee72460 <col:219> 'int' 0
|   |-BinaryOperator 0x5623bee72c08 <line:755:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5623bee72680 <col:3> '_Bool' lvalue Var 0x5623bee6f2e8 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5623bee72bf0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623bee72bc0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5623bee72b78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623bee72b60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623bee726a0 <col:20> '_Bool' lvalue Var 0x5623bee6f990 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5623bee72ba8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623bee72b90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623bee726c0 <col:36> '_Bool' lvalue Var 0x5623bee6f2e8 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x5623bee72b40 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5623bee72b10 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5623bee728d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5623bee727f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5623bee72718 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5623bee72700 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5623bee726e0 <col:55> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5623bee727d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5623bee72768 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5623bee72750 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5623bee72730 <col:74> '_Bool' lvalue Var 0x5623bee6f2e8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5623bee727b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5623bee727a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5623bee72780 <col:93> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5623bee728b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5623bee72848 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5623bee72830 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5623bee72810 <col:112> '_Bool' lvalue Var 0x5623bee6f2e8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5623bee72898 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5623bee72880 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5623bee72860 <col:131> '_Bool' lvalue Var 0x5623bee6f540 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5623bee72af8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5623bee72ae0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5623bee728f0 <col:148> '_Bool' lvalue Var 0x5623bee6f2e8 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x5623bee72ac0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5623bee72a90 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5623bee729b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5623bee72968 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5623bee72950 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5623bee72910 <col:166> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5623bee72998 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5623bee72980 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5623bee72930 <col:184> '_Bool' lvalue Var 0x5623bee6f2e8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5623bee72a48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5623bee72a00 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5623bee729d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5623bee72a78 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5623bee72a60 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5623bee72a28 <col:212> '_Bool' lvalue Var 0x5623bee6f2e8 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5623bee731e8 <line:756:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5623bee72c28 <col:3> '_Bool' lvalue Var 0x5623bee6f540 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5623bee731d0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623bee731a0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5623bee73158 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623bee73140 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623bee72c48 <col:20> '_Bool' lvalue Var 0x5623bee6f990 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5623bee73188 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623bee73170 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623bee72c68 <col:36> '_Bool' lvalue Var 0x5623bee6f540 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x5623bee73120 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5623bee730f0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5623bee72e78 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5623bee72d98 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5623bee72cc0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5623bee72ca8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5623bee72c88 <col:55> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5623bee72d78 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5623bee72d10 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5623bee72cf8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5623bee72cd8 <col:74> '_Bool' lvalue Var 0x5623bee6f2e8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5623bee72d60 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5623bee72d48 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5623bee72d28 <col:93> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5623bee72e58 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5623bee72df0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5623bee72dd8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5623bee72db8 <col:112> '_Bool' lvalue Var 0x5623bee6f2e8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5623bee72e40 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5623bee72e28 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5623bee72e08 <col:131> '_Bool' lvalue Var 0x5623bee6f540 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5623bee730d8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5623bee730c0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5623bee72e98 <col:148> '_Bool' lvalue Var 0x5623bee6f540 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x5623bee730a0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5623bee73070 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5623bee72f58 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5623bee72f10 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5623bee72ef8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5623bee72eb8 <col:166> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5623bee72f40 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5623bee72f28 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5623bee72ed8 <col:184> '_Bool' lvalue Var 0x5623bee6f2e8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5623bee73040 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5623bee72fc0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5623bee72f78 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5623bee73058 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5623bee73018 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5623bee72fe8 <col:219> 'int' 0
|   |-BinaryOperator 0x5623bee73260 <line:757:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5623bee73208 <col:3> 'int' lvalue Var 0x5623bee6e808 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x5623bee73248 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623bee73228 <col:25> 'int' lvalue Var 0x5623bee6eff0 'z' 'int'
|   |-BinaryOperator 0x5623bee73390 <line:758:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5623bee73280 <col:3> 'int' lvalue Var 0x5623bee6eff0 'z' 'int'
|   | `-ConditionalOperator 0x5623bee73360 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5623bee73318 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5623bee73300 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5623bee732a0 <col:7> '_Bool' lvalue Var 0x5623bee6f088 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5623bee73330 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623bee732c0 <col:25> 'int' lvalue Var 0x5623bee6f108 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5623bee73348 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5623bee732e0 <col:37> 'int' lvalue Var 0x5623bee6eff0 'z' 'int'
|   |-BinaryOperator 0x5623bee73428 <line:759:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5623bee733b0 <col:3> '_Bool' lvalue Var 0x5623bee6f088 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5623bee73400 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5623bee733d0 <col:28> 'int' 0
|   |-CallExpr 0x5623bee73480 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623bee73468 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee73448 <col:3> 'void ()' Function 0x5623bee15410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623bee734d8 <line:761:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623bee734c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee734a0 <col:3> 'void ()' Function 0x5623bee15350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5623bee73530 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623bee73518 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee734f8 <col:3> 'void ()' Function 0x5623bee15410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623bee73588 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623bee73570 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee73550 <col:3> 'void ()' Function 0x5623bee15350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623bee73640 <line:764:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5623bee735a8 <col:3> 'int' lvalue Var 0x5623bee6e6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5623bee73620 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5623bee73608 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623bee735c8 <col:22> 'int' lvalue Var 0x5623bee6e6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5623bee735e8 <col:41> 'int' 1
|   |-CallExpr 0x5623bee73698 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623bee73680 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee73660 <col:3> 'void ()' Function 0x5623bee15410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5623bee73710 <line:766:3, col:36>
|     `-CallExpr 0x5623bee736f0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5623bee736d8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5623bee736b8 <col:10> 'void *(void)' Function 0x5623bee14e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5623bee738a8 prev 0x5623bee6e368 <line:768:1, line:813:1> line:768:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x5623bee73810 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5623bee77bb8 <line:769:1, line:813:1>
|   |-CallExpr 0x5623bee73988 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623bee73970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee73950 <col:3> 'void ()' Function 0x5623bee15350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623bee73a00 <line:771:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5623bee739a8 <col:3> 'int' lvalue Var 0x5623bee6f828 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5623bee739e8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623bee739c8 <col:15> 'int' lvalue Var 0x5623bee6f730 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5623bee73a60 <line:772:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5623bee73a20 <col:3> 'int' lvalue Var 0x5623bee6f730 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x5623bee73a40 <col:15> 'int' 1
|   |-BinaryOperator 0x5623bee73ad8 <line:773:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5623bee73a80 <col:3> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5623bee73ac0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623bee73aa0 <col:20> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5623bee73b70 <line:774:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5623bee73af8 <col:3> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5623bee73b48 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5623bee73b18 <col:27> 'int' 1
|   |-CallExpr 0x5623bee73cf8 <line:775:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5623bee73ce0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5623bee73b90 <col:3> 'void (int)' Function 0x5623bee150d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5623bee73c90 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5623bee73c70 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5623bee73c50 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5623bee73c08 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5623bee73bf0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5623bee73bb0 <col:23> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5623bee73c38 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5623bee73c20 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5623bee73bd0 <col:41> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5623bee73d78 <line:776:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5623bee73d20 <col:3> '_Bool' lvalue Var 0x5623bee6f3d8 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5623bee73d60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623bee73d40 <col:20> '_Bool' lvalue Var 0x5623bee6f180 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5623bee73df0 <line:777:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5623bee73d98 <col:3> '_Bool' lvalue Var 0x5623bee6f450 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5623bee73dd8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623bee73db8 <col:20> '_Bool' lvalue Var 0x5623bee6f1f8 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5623bee73e68 <line:778:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5623bee73e10 <col:3> '_Bool' lvalue Var 0x5623bee6f4c8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5623bee73e50 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623bee73e30 <col:20> '_Bool' lvalue Var 0x5623bee6f270 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5623bee73ee0 <line:779:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5623bee73e88 <col:3> '_Bool' lvalue Var 0x5623bee6f540 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5623bee73ec8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623bee73ea8 <col:20> '_Bool' lvalue Var 0x5623bee6f2e8 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5623bee73f58 <line:780:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5623bee73f00 <col:3> '_Bool' lvalue Var 0x5623bee6f5b8 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5623bee73f40 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623bee73f20 <col:20> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5623bee74018 <line:781:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5623bee73f78 <col:3> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   | `-CStyleCastExpr 0x5623bee73ff0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5623bee73fc0 <col:27> 'int' 1
|   |-CallExpr 0x5623bee74070 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623bee74058 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee74038 <col:3> 'void ()' Function 0x5623bee15410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623bee740c8 <line:783:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623bee740b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee74090 <col:3> 'void ()' Function 0x5623bee15350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623bee74178 <line:784:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5623bee740e8 <col:3> '_Bool' lvalue Var 0x5623bee6f918 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5623bee74160 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5623bee74140 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5623bee74128 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5623bee74108 <col:19> 'void *(void)' Function 0x5623bee14e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5623bee74228 <line:785:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5623bee74198 <col:3> '_Bool' lvalue Var 0x5623bee6f990 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5623bee74210 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5623bee741f0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5623bee741d8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5623bee741b8 <col:19> 'void *(void)' Function 0x5623bee14e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5623bee742a0 <line:786:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5623bee74248 <col:3> '_Bool' lvalue Var 0x5623bee6f088 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5623bee74288 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623bee74268 <col:21> '_Bool' lvalue Var 0x5623bee6f990 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5623bee74318 <line:787:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5623bee742c0 <col:3> 'int' lvalue Var 0x5623bee6f108 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5623bee74300 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623bee742e0 <col:15> 'int' lvalue Var 0x5623bee6eff0 'z' 'int'
|   |-BinaryOperator 0x5623bee74750 <line:788:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5623bee74338 <col:3> 'int' lvalue Var 0x5623bee6eff0 'z' 'int'
|   | `-ConditionalOperator 0x5623bee74720 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5623bee74548 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5623bee74468 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5623bee74390 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5623bee74378 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5623bee74358 <col:8> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5623bee74448 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5623bee743e0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5623bee743c8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5623bee743a8 <col:27> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x5623bee74430 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5623bee74418 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5623bee743f8 <col:46> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5623bee74528 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5623bee744c0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5623bee744a8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5623bee74488 <col:65> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x5623bee74510 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5623bee744f8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5623bee744d8 <col:84> '_Bool' lvalue Var 0x5623bee6f5b8 'z$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x5623bee74708 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623bee74568 <col:101> 'int' lvalue Var 0x5623bee6eff0 'z' 'int'
|   |   `-ParenExpr 0x5623bee746e8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5623bee746b8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5623bee74628 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5623bee745e0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5623bee745c8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5623bee74588 <col:106> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5623bee74610 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5623bee745f8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5623bee745a8 <col:124> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5623bee74688 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5623bee74648 <col:141> 'int' lvalue Var 0x5623bee6f730 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5623bee746a0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5623bee74668 <col:153> 'int' lvalue Var 0x5623bee6f828 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5623bee74c60 <line:789:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5623bee74770 <col:3> 'int' lvalue Var 0x5623bee6f730 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x5623bee74c30 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5623bee74c00 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5623bee74be8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5623bee74790 <col:15> '_Bool' lvalue Var 0x5623bee6f990 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5623bee74c18 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623bee747b0 <col:31> 'int' lvalue Var 0x5623bee6f730 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5623bee74bc8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5623bee74b98 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5623bee749c0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5623bee748e0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5623bee74808 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5623bee747f0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5623bee747d0 <col:45> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5623bee748c0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5623bee74858 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5623bee74840 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5623bee74820 <col:64> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x5623bee748a8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5623bee74890 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5623bee74870 <col:83> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5623bee749a0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5623bee74938 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5623bee74920 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5623bee74900 <col:102> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x5623bee74988 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5623bee74970 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5623bee74950 <col:121> '_Bool' lvalue Var 0x5623bee6f5b8 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5623bee74b80 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5623bee749e0 <col:138> 'int' lvalue Var 0x5623bee6f730 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x5623bee74b60 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5623bee74b30 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5623bee74aa0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5623bee74a58 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5623bee74a40 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5623bee74a00 <col:151> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5623bee74a88 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5623bee74a70 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5623bee74a20 <col:169> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x5623bee74b00 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5623bee74ac0 <col:186> 'int' lvalue Var 0x5623bee6f730 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5623bee74b18 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5623bee74ae0 <col:198> 'int' lvalue Var 0x5623bee6f730 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5623bee75190 <line:790:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5623bee74c80 <col:3> 'int' lvalue Var 0x5623bee6f828 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x5623bee75160 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5623bee75130 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5623bee75118 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5623bee74ca0 <col:15> '_Bool' lvalue Var 0x5623bee6f990 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5623bee75148 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623bee74cc0 <col:31> 'int' lvalue Var 0x5623bee6f828 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x5623bee750f8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5623bee750c8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5623bee74ed0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5623bee74df0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5623bee74d18 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5623bee74d00 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5623bee74ce0 <col:45> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5623bee74dd0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5623bee74d68 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5623bee74d50 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5623bee74d30 <col:64> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x5623bee74db8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5623bee74da0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5623bee74d80 <col:83> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5623bee74eb0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5623bee74e48 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5623bee74e30 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5623bee74e10 <col:102> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x5623bee74e98 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5623bee74e80 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5623bee74e60 <col:121> '_Bool' lvalue Var 0x5623bee6f5b8 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5623bee750b0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5623bee74ef0 <col:138> 'int' lvalue Var 0x5623bee6f828 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x5623bee75090 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5623bee75060 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5623bee74fd0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5623bee74f68 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5623bee74f50 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5623bee74f10 <col:151> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5623bee74f98 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5623bee74f80 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5623bee74f30 <col:169> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x5623bee75030 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5623bee74ff0 <col:186> 'int' lvalue Var 0x5623bee6f828 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5623bee75048 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5623bee75010 <col:198> 'int' lvalue Var 0x5623bee6f828 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5623bee75738 <line:791:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5623bee751b0 <col:3> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5623bee75720 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623bee756f0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5623bee756a8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623bee75690 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623bee751d0 <col:20> '_Bool' lvalue Var 0x5623bee6f990 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5623bee756d8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623bee756c0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623bee751f0 <col:36> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5623bee75670 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5623bee75640 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5623bee75400 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5623bee75320 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5623bee75248 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5623bee75230 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5623bee75210 <col:55> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5623bee75300 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5623bee75298 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5623bee75280 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5623bee75260 <col:74> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5623bee752e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5623bee752d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5623bee752b0 <col:93> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5623bee753e0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5623bee75378 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5623bee75360 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5623bee75340 <col:112> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5623bee753c8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5623bee753b0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5623bee75390 <col:131> '_Bool' lvalue Var 0x5623bee6f5b8 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5623bee75628 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5623bee75610 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5623bee75420 <col:148> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5623bee755f0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5623bee755c0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5623bee754e0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5623bee75498 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5623bee75480 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5623bee75440 <col:166> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5623bee754c8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5623bee754b0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5623bee75460 <col:184> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5623bee75578 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5623bee75530 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5623bee75500 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5623bee755a8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5623bee75590 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5623bee75558 <col:212> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5623bee75d00 <line:792:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5623bee75758 <col:3> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5623bee75ce8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623bee75cb8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5623bee75c70 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623bee75c58 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623bee75778 <col:20> '_Bool' lvalue Var 0x5623bee6f990 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5623bee75ca0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623bee75c88 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623bee75798 <col:36> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5623bee75c38 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5623bee75c08 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5623bee759a8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5623bee758c8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5623bee757f0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5623bee757d8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5623bee757b8 <col:55> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5623bee758a8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5623bee75840 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5623bee75828 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5623bee75808 <col:74> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5623bee75890 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5623bee75878 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5623bee75858 <col:93> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5623bee75988 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5623bee75920 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5623bee75908 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5623bee758e8 <col:112> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5623bee75970 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5623bee75958 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5623bee75938 <col:131> '_Bool' lvalue Var 0x5623bee6f5b8 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5623bee75bf0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5623bee75bd8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5623bee759c8 <col:148> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5623bee75bb8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5623bee75b88 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5623bee75a88 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5623bee75a40 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5623bee75a28 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5623bee759e8 <col:166> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5623bee75a70 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5623bee75a58 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5623bee75a08 <col:184> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5623bee75b58 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5623bee75ad8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5623bee75aa8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5623bee75b70 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5623bee75b30 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5623bee75b00 <col:219> 'int' 0
|   |-BinaryOperator 0x5623bee762b8 <line:793:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5623bee75d20 <col:3> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5623bee762a0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623bee76270 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5623bee76228 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623bee76210 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623bee75d40 <col:20> '_Bool' lvalue Var 0x5623bee6f990 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5623bee76258 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623bee76240 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623bee75d60 <col:36> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x5623bee761f0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5623bee761c0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5623bee75f70 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5623bee75e90 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5623bee75db8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5623bee75da0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5623bee75d80 <col:55> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5623bee75e70 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5623bee75e08 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5623bee75df0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5623bee75dd0 <col:74> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5623bee75e58 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5623bee75e40 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5623bee75e20 <col:93> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5623bee75f50 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5623bee75ee8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5623bee75ed0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5623bee75eb0 <col:112> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5623bee75f38 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5623bee75f20 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5623bee75f00 <col:131> '_Bool' lvalue Var 0x5623bee6f5b8 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5623bee761a8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5623bee76190 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5623bee75f90 <col:148> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x5623bee76170 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5623bee76140 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5623bee76060 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5623bee76018 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5623bee76000 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5623bee75fb0 <col:166> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5623bee76048 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5623bee76030 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5623bee75fe0 <col:184> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5623bee760f8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5623bee760b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5623bee76080 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5623bee76128 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5623bee76110 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5623bee760d8 <col:212> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5623bee76880 <line:794:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5623bee762d8 <col:3> '_Bool' lvalue Var 0x5623bee6f5b8 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5623bee76868 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623bee76838 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5623bee767f0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623bee767d8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623bee762f8 <col:20> '_Bool' lvalue Var 0x5623bee6f990 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5623bee76820 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623bee76808 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623bee76318 <col:36> '_Bool' lvalue Var 0x5623bee6f5b8 'z$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x5623bee767b8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5623bee76788 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5623bee76528 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5623bee76448 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5623bee76370 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5623bee76358 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5623bee76338 <col:55> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5623bee76428 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5623bee763c0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5623bee763a8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5623bee76388 <col:74> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5623bee76410 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5623bee763f8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5623bee763d8 <col:93> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5623bee76508 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5623bee764a0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5623bee76488 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5623bee76468 <col:112> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5623bee764f0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5623bee764d8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5623bee764b8 <col:131> '_Bool' lvalue Var 0x5623bee6f5b8 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5623bee76770 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5623bee76758 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5623bee76548 <col:148> '_Bool' lvalue Var 0x5623bee6f5b8 'z$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x5623bee76738 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5623bee76708 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5623bee76608 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5623bee765c0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5623bee765a8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5623bee76568 <col:166> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5623bee765f0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5623bee765d8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5623bee76588 <col:184> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5623bee766d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5623bee76658 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5623bee76628 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5623bee766f0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5623bee766b0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5623bee76680 <col:219> 'int' 0
|   |-BinaryOperator 0x5623bee768f8 <line:795:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5623bee768a0 <col:3> 'int' lvalue Var 0x5623bee6e928 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x5623bee768e0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623bee768c0 <col:25> 'int' lvalue Var 0x5623bee6eff0 'z' 'int'
|   |-BinaryOperator 0x5623bee76a28 <line:796:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5623bee76918 <col:3> 'int' lvalue Var 0x5623bee6eff0 'z' 'int'
|   | `-ConditionalOperator 0x5623bee769f8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5623bee769b0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5623bee76998 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5623bee76938 <col:7> '_Bool' lvalue Var 0x5623bee6f088 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5623bee769c8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623bee76958 <col:25> 'int' lvalue Var 0x5623bee6f108 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5623bee769e0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5623bee76978 <col:37> 'int' lvalue Var 0x5623bee6eff0 'z' 'int'
|   |-BinaryOperator 0x5623bee76ac0 <line:797:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5623bee76a48 <col:3> '_Bool' lvalue Var 0x5623bee6f088 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5623bee76a98 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5623bee76a68 <col:28> 'int' 0
|   |-CallExpr 0x5623bee76b18 <line:798:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623bee76b00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee76ae0 <col:3> 'void ()' Function 0x5623bee15410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623bee76b70 <line:799:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623bee76b58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee76b38 <col:3> 'void ()' Function 0x5623bee15350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623bee76be8 <line:800:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5623bee76b90 <col:3> 'int' lvalue Var 0x5623bee6ea48 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x5623bee76bd0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623bee76bb0 <col:25> 'int' lvalue Var 0x5623bee6eb68 'a' 'int'
|   |-CallExpr 0x5623bee76c40 <line:801:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623bee76c28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee76c08 <col:3> 'void ()' Function 0x5623bee15410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623bee76c98 <line:802:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623bee76c80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee76c60 <col:3> 'void ()' Function 0x5623bee15350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623bee76f80 <line:803:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5623bee76cb8 <col:3> 'int' lvalue Var 0x5623bee6eff0 'z' 'int'
|   | `-ConditionalOperator 0x5623bee76f50 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5623bee76d78 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5623bee76d30 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5623bee76d18 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5623bee76cd8 <col:7> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5623bee76d60 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5623bee76d48 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5623bee76cf8 <col:25> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x5623bee76f38 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623bee76d98 <col:42> 'int' lvalue Var 0x5623bee6f730 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5623bee76f18 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5623bee76ee8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5623bee76e58 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5623bee76e10 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5623bee76df8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5623bee76db8 <col:55> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5623bee76e40 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5623bee76e28 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5623bee76dd8 <col:73> '_Bool' lvalue Var 0x5623bee6f5b8 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5623bee76eb8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5623bee76e78 <col:90> 'int' lvalue Var 0x5623bee6f828 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5623bee76ed0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5623bee76e98 <col:102> 'int' lvalue Var 0x5623bee6eff0 'z' 'int'
|   |-BinaryOperator 0x5623bee77198 <line:804:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5623bee76fa0 <col:3> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5623bee77180 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623bee77150 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5623bee77070 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5623bee77028 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5623bee77010 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5623bee76fc0 <col:20> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5623bee77058 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5623bee77040 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5623bee76ff0 <col:38> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5623bee77108 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5623bee770c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5623bee77090 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5623bee77138 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5623bee77120 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5623bee770e8 <col:66> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5623bee77480 <line:805:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5623bee771b8 <col:3> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5623bee77468 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623bee77438 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5623bee77358 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5623bee77278 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5623bee77230 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5623bee77218 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5623bee771d8 <col:20> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5623bee77260 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5623bee77248 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5623bee771f8 <col:38> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5623bee77338 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5623bee772f0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5623bee772d8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5623bee77298 <col:56> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5623bee77320 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5623bee77308 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5623bee772b8 <col:74> '_Bool' lvalue Var 0x5623bee6f5b8 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5623bee773f0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5623bee773a8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5623bee77378 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5623bee77420 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5623bee77408 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5623bee773d0 <col:102> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5623bee77688 <line:806:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5623bee774a0 <col:3> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5623bee77670 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623bee77640 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5623bee77560 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5623bee77518 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5623bee77500 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5623bee774c0 <col:20> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5623bee77548 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5623bee77530 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5623bee774e0 <col:38> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5623bee775f8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5623bee775b0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5623bee77580 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5623bee77628 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5623bee77610 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5623bee775d8 <col:66> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5623bee77970 <line:807:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5623bee776a8 <col:3> '_Bool' lvalue Var 0x5623bee6f5b8 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5623bee77958 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623bee77928 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5623bee77848 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5623bee77768 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5623bee77720 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5623bee77708 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5623bee776c8 <col:20> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5623bee77750 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5623bee77738 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5623bee776e8 <col:38> '_Bool' lvalue Var 0x5623bee6f360 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5623bee77828 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5623bee777e0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5623bee777c8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5623bee77788 <col:56> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5623bee77810 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5623bee777f8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5623bee777a8 <col:74> '_Bool' lvalue Var 0x5623bee6f5b8 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5623bee778e0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5623bee77898 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5623bee77868 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5623bee77910 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5623bee778f8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5623bee778c0 <col:102> '_Bool' lvalue Var 0x5623bee6f5b8 'z$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x5623bee779c8 <line:808:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623bee779b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee77990 <col:3> 'void ()' Function 0x5623bee15410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623bee77a20 <line:809:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623bee77a08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee779e8 <col:3> 'void ()' Function 0x5623bee15350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623bee77ad8 <line:810:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5623bee77a40 <col:3> 'int' lvalue Var 0x5623bee6e6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5623bee77ab8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5623bee77aa0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623bee77a60 <col:22> 'int' lvalue Var 0x5623bee6e6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5623bee77a80 <col:41> 'int' 1
|   |-CallExpr 0x5623bee77b30 <line:811:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623bee77b18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623bee77af8 <col:3> 'void ()' Function 0x5623bee15410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5623bee77ba8 <line:812:3, col:36>
|     `-CallExpr 0x5623bee77b88 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5623bee77b70 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5623bee77b50 <col:10> 'void *(void)' Function 0x5623bee14e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5623bee77d40 prev 0x5623bee6e430 <line:814:1, line:816:1> line:814:6 fence 'void ()'
| `-CompoundStmt 0x5623bee77de0 <line:815:1, line:816:1>
|-FunctionDecl 0x5623bee77e10 prev 0x5623bee6e4f0 <line:817:1, line:819:1> line:817:6 isync 'void ()'
| `-CompoundStmt 0x5623bee77eb0 <line:818:1, line:819:1>
|-FunctionDecl 0x5623bee77ee0 prev 0x5623bee6e5b0 <line:820:1, line:822:1> line:820:6 lwfence 'void ()'
| `-CompoundStmt 0x5623bee77f80 <line:821:1, line:822:1>
`-FunctionDecl 0x5623bee78000 <line:823:1, line:849:1> line:823:5 main 'int ()'
  `-CompoundStmt 0x5623bee7a020 <line:824:1, line:849:1>
    |-DeclStmt 0x5623bee78118 <line:825:3, col:17>
    | `-VarDecl 0x5623bee780b0 <col:3, col:13> col:13 used t559 'pthread_t':'unsigned long'
    |-CallExpr 0x5623bee78328 <line:826:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5623bee78310 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5623bee78130 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5623bee558f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5623bee78170 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5623bee78150 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5623bee780b0 't559' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5623bee78368 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5623bee781e8 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5623bee781c0 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5623bee78188 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5623bee78380 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5623bee78208 <col:38> 'void *(void *)' Function 0x5623bee6faa8 'P0' 'void *(void *)'
    | `-ParenExpr 0x5623bee78288 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5623bee78260 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5623bee78228 <col:51> 'int' 0
    |-DeclStmt 0x5623bee78410 <line:827:3, col:17>
    | `-VarDecl 0x5623bee783a8 <col:3, col:13> col:13 used t560 'pthread_t':'unsigned long'
    |-CallExpr 0x5623bee785b8 <line:828:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5623bee785a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5623bee78428 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5623bee558f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5623bee78468 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5623bee78448 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5623bee783a8 't560' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5623bee785f8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5623bee784e0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5623bee784b8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5623bee78480 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5623bee78610 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5623bee78500 <col:38> 'void *(void *)' Function 0x5623bee70198 'P1' 'void *(void *)'
    | `-ParenExpr 0x5623bee78580 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5623bee78558 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5623bee78520 <col:51> 'int' 0
    |-DeclStmt 0x5623bee786a0 <line:829:3, col:17>
    | `-VarDecl 0x5623bee78638 <col:3, col:13> col:13 used t561 'pthread_t':'unsigned long'
    |-CallExpr 0x5623bee78848 <line:830:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5623bee78830 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5623bee786b8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5623bee558f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5623bee786f8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5623bee786d8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5623bee78638 't561' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5623bee78888 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5623bee78770 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5623bee78748 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5623bee78710 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5623bee788a0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5623bee78790 <col:38> 'void *(void *)' Function 0x5623bee70800 'P2' 'void *(void *)'
    | `-ParenExpr 0x5623bee78810 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5623bee787e8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5623bee787b0 <col:51> 'int' 0
    |-DeclStmt 0x5623bee78930 <line:831:3, col:17>
    | `-VarDecl 0x5623bee788c8 <col:3, col:13> col:13 used t562 'pthread_t':'unsigned long'
    |-CallExpr 0x5623bee78ad8 <line:832:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5623bee78ac0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5623bee78948 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5623bee558f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5623bee78988 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5623bee78968 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5623bee788c8 't562' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5623bee78b18 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5623bee78a00 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5623bee789d8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5623bee789a0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5623bee78b30 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5623bee78a20 <col:38> 'void *(void *)' Function 0x5623bee738a8 'P3' 'void *(void *)'
    | `-ParenExpr 0x5623bee78aa0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5623bee78a78 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5623bee78a40 <col:51> 'int' 0
    |-CallExpr 0x5623bee78b80 <line:833:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5623bee78b68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5623bee78b48 <col:3> 'void ()' Function 0x5623bee15350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5623bee78c50 <line:834:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5623bee78ba0 <col:3> '_Bool' lvalue Var 0x5623bee6ec00 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5623bee78c38 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5623bee78c18 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5623bee78c00 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5623bee78bc0 <col:21> 'int' lvalue Var 0x5623bee6e6e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5623bee78be0 <col:41> 'int' 4
    |-CallExpr 0x5623bee78ca8 <line:835:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5623bee78c90 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5623bee78c70 <col:3> 'void ()' Function 0x5623bee15410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5623bee78d20 <line:836:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5623bee78d08 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5623bee78cc8 <col:3> 'void (int)' Function 0x5623bee14ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5623bee78d60 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5623bee78d48 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5623bee78ce8 <col:21> '_Bool' lvalue Var 0x5623bee6ec00 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5623bee78db0 <line:837:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5623bee78d98 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5623bee78d78 <col:3> 'void ()' Function 0x5623bee15350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5623bee790a8 <line:838:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5623bee78dd0 <col:3> 'int' lvalue Var 0x5623bee6eff0 'z' 'int'
    | `-ConditionalOperator 0x5623bee79078 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5623bee78e90 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5623bee78e48 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5623bee78e30 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5623bee78df0 <col:7> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5623bee78e78 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5623bee78e60 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5623bee78e10 <col:25> '_Bool' lvalue Var 0x5623bee6f180 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5623bee79060 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5623bee78eb0 <col:42> 'int' lvalue Var 0x5623bee6f730 'z$w_buff0' 'int'
    |   `-ParenExpr 0x5623bee79040 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5623bee79010 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5623bee78f70 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5623bee78f28 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5623bee78f10 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5623bee78ed0 <col:55> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5623bee78f58 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5623bee78f40 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5623bee78ef0 <col:73> '_Bool' lvalue Var 0x5623bee6f3d8 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5623bee78fd0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5623bee78f90 <col:90> 'int' lvalue Var 0x5623bee6f828 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5623bee78fe8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5623bee78fb0 <col:102> 'int' lvalue Var 0x5623bee6eff0 'z' 'int'
    |-BinaryOperator 0x5623bee792b0 <line:839:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5623bee790c8 <col:3> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5623bee79298 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5623bee79268 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5623bee79188 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5623bee79140 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5623bee79128 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5623bee790e8 <col:20> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5623bee79170 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5623bee79158 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5623bee79108 <col:38> '_Bool' lvalue Var 0x5623bee6f180 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5623bee79220 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5623bee791d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5623bee791a8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5623bee79250 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5623bee79238 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5623bee79200 <col:66> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5623bee79598 <line:840:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5623bee792d0 <col:3> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5623bee79580 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5623bee79550 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5623bee79470 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5623bee79390 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5623bee79348 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5623bee79330 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5623bee792f0 <col:20> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5623bee79378 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5623bee79360 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5623bee79310 <col:38> '_Bool' lvalue Var 0x5623bee6f180 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5623bee79450 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5623bee79408 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5623bee793f0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5623bee793b0 <col:56> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5623bee79438 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5623bee79420 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5623bee793d0 <col:74> '_Bool' lvalue Var 0x5623bee6f3d8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5623bee79508 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5623bee794c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5623bee79490 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5623bee79538 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5623bee79520 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5623bee794e8 <col:102> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5623bee797a0 <line:841:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5623bee795b8 <col:3> '_Bool' lvalue Var 0x5623bee6f180 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5623bee79788 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5623bee79758 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5623bee79678 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5623bee79630 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5623bee79618 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5623bee795d8 <col:20> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5623bee79660 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5623bee79648 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5623bee795f8 <col:38> '_Bool' lvalue Var 0x5623bee6f180 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5623bee79710 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5623bee796c8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5623bee79698 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5623bee79740 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5623bee79728 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5623bee796f0 <col:66> '_Bool' lvalue Var 0x5623bee6f180 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5623bee79a88 <line:842:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5623bee797c0 <col:3> '_Bool' lvalue Var 0x5623bee6f3d8 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5623bee79a70 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5623bee79a40 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5623bee79960 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5623bee79880 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5623bee79838 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5623bee79820 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5623bee797e0 <col:20> '_Bool' lvalue Var 0x5623bee6f7a8 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5623bee79868 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5623bee79850 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5623bee79800 <col:38> '_Bool' lvalue Var 0x5623bee6f180 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5623bee79940 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5623bee798f8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5623bee798e0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5623bee798a0 <col:56> '_Bool' lvalue Var 0x5623bee6f8a0 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5623bee79928 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5623bee79910 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5623bee798c0 <col:74> '_Bool' lvalue Var 0x5623bee6f3d8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5623bee799f8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5623bee799b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5623bee79980 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5623bee79a28 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5623bee79a10 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5623bee799d8 <col:102> '_Bool' lvalue Var 0x5623bee6f3d8 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5623bee79ae0 <line:843:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5623bee79ac8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5623bee79aa8 <col:3> 'void ()' Function 0x5623bee15410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5623bee79b38 <line:844:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5623bee79b20 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5623bee79b00 <col:3> 'void ()' Function 0x5623bee15350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5623bee79ea0 <line:845:3, col:123> '_Bool' '='
    | |-DeclRefExpr 0x5623bee79b58 <col:3> '_Bool' lvalue Var 0x5623bee6ec78 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5623bee79e88 <col:21, col:123> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5623bee79e70 <col:21, col:123> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5623bee79e50 <col:22, col:123> 'int'
    |       `-BinaryOperator 0x5623bee79e30 <col:23, col:122> 'int' '&&'
    |         |-BinaryOperator 0x5623bee79d98 <col:23, col:94> 'int' '&&'
    |         | |-BinaryOperator 0x5623bee79d00 <col:23, col:66> 'int' '&&'
    |         | | |-BinaryOperator 0x5623bee79c68 <col:23, col:38> 'int' '&&'
    |         | | | |-BinaryOperator 0x5623bee79bd0 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x5623bee79bb8 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x5623bee79b78 <col:23> 'int' lvalue Var 0x5623bee6ed78 'x' 'int'
    |         | | | | `-IntegerLiteral 0x5623bee79b98 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x5623bee79c48 <col:33, col:38> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x5623bee79c30 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x5623bee79bf0 <col:33> 'int' lvalue Var 0x5623bee6ee98 'y' 'int'
    |         | | |   `-IntegerLiteral 0x5623bee79c10 <col:38> 'int' 2
    |         | | `-BinaryOperator 0x5623bee79ce0 <col:43, col:66> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5623bee79cc8 <col:43> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5623bee79c88 <col:43> 'int' lvalue Var 0x5623bee6e808 '__unbuffered_p2_EAX' 'int'
    |         | |   `-IntegerLiteral 0x5623bee79ca8 <col:66> 'int' 0
    |         | `-BinaryOperator 0x5623bee79d78 <col:71, col:94> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5623bee79d60 <col:71> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5623bee79d20 <col:71> 'int' lvalue Var 0x5623bee6e928 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x5623bee79d40 <col:94> 'int' 1
    |         `-BinaryOperator 0x5623bee79e10 <col:99, col:122> 'int' '=='
    |           |-ImplicitCastExpr 0x5623bee79df8 <col:99> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5623bee79db8 <col:99> 'int' lvalue Var 0x5623bee6ea48 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x5623bee79dd8 <col:122> 'int' 0
    |-CallExpr 0x5623bee79ef8 <line:846:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5623bee79ee0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5623bee79ec0 <col:3> 'void ()' Function 0x5623bee15410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5623bee79f70 <line:847:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5623bee79f58 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5623bee79f18 <col:3> 'void (int)' Function 0x5623bee150d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5623bee79fb0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5623bee79f98 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5623bee79f38 <col:21> '_Bool' lvalue Var 0x5623bee6ec78 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5623bee79fe8 <line:848:3, col:10>
      `-IntegerLiteral 0x5623bee79fc8 <col:10> 'int' 0
