TranslationUnitDecl 0x5637687def88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5637687df848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5637687df520 '__int128'
|-TypedefDecl 0x5637687df8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5637687df540 'unsigned __int128'
|-TypedefDecl 0x5637687dfbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5637687df990 'struct __NSConstantString_tag'
|   `-Record 0x5637687df910 '__NSConstantString_tag'
|-TypedefDecl 0x5637687dfc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5637687dfc20 'char *'
|   `-BuiltinType 0x5637687df020 'char'
|-TypedefDecl 0x56376881eb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5637687dff00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5637687dfd40 'struct __va_list_tag'
|     `-Record 0x5637687dfcc0 '__va_list_tag'
|-FunctionDecl 0x56376881eca0 <pthread-wmm/mix050_pso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x56376881ebd0 <col:31> col:34 'int'
|-FunctionDecl 0x56376881ee68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x56376881ef90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x56376881f0d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x56376881f048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x56376881f308 <col:40, col:99>
|   |-IfStmt 0x56376881f2d8 <col:42, col:88>
|   | |-UnaryOperator 0x56376881f1b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x56376881f1a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x56376881f180 <col:47> 'int' lvalue ParmVar 0x56376881f048 'expression' 'int'
|   | `-CompoundStmt 0x56376881f2c0 <col:59, col:88>
|   |   `-LabelStmt 0x56376881f2a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x56376881f238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x56376881f220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x56376881f1d0 <col:68> 'void () __attribute__((noreturn))' Function 0x56376881ef90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x56376881f2f0 <col:89>
|   `-ReturnStmt 0x56376881f2f8 <col:91>
|-FunctionDecl 0x56376881f350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x56376881f410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x56376881f790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56376881f4c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x56376881f548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x56376881f5c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56376881f648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56376881f850 <line:10:22>
|-FunctionDecl 0x5637688458a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56376881f8c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x56376881f940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x56376881f9c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56376881fa40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x563768845960 <line:13:22>
|-FunctionDecl 0x563768845c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5637688459d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x563768845a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x563768845ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x563768845cc8 <line:15:22>
|-TypedefDecl 0x563768845d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5637687df0e0 'unsigned char'
|-TypedefDecl 0x563768845da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5637687df100 'unsigned short'
|-TypedefDecl 0x563768845e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5637687df120 'unsigned int'
|-TypedefDecl 0x563768845e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5637687df140 'unsigned long'
|-TypedefDecl 0x563768845ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5637687df040 'signed char'
|-TypedefDecl 0x563768845f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5637687df0e0 'unsigned char'
|-TypedefDecl 0x563768845fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5637687df060 'short'
|-TypedefDecl 0x563768846048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5637687df100 'unsigned short'
|-TypedefDecl 0x5637688460b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5637687df080 'int'
|-TypedefDecl 0x563768846128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5637687df120 'unsigned int'
|-TypedefDecl 0x563768846198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5637687df0a0 'long'
|-TypedefDecl 0x563768846208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5637687df140 'unsigned long'
|-TypedefDecl 0x563768846278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5637687df0a0 'long'
|-TypedefDecl 0x5637688462e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5637687df140 'unsigned long'
|-TypedefDecl 0x563768846358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5637687df140 'unsigned long'
|-TypedefDecl 0x5637688463c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5637687df120 'unsigned int'
|-TypedefDecl 0x563768846438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5637687df120 'unsigned int'
|-TypedefDecl 0x5637688464a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5637687df140 'unsigned long'
|-TypedefDecl 0x563768846518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5637687df140 'unsigned long'
|-TypedefDecl 0x563768846588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5637687df120 'unsigned int'
|-TypedefDecl 0x5637688465f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5637687df140 'unsigned long'
|-TypedefDecl 0x563768846668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5637687df0a0 'long'
|-TypedefDecl 0x5637688466d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5637687df0a0 'long'
|-TypedefDecl 0x563768846748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5637687df080 'int'
|-RecordDecl 0x5637688467a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x563768846918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5637688469d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x563768846970 'struct __fsid_t' sugar
|   `-RecordType 0x563768846820 '__fsid_t'
|     `-Record 0x5637688467a0 ''
|-TypedefDecl 0x563768846a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5637687df0a0 'long'
|-TypedefDecl 0x563768846ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5637687df140 'unsigned long'
|-TypedefDecl 0x563768846b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5637687df140 'unsigned long'
|-TypedefDecl 0x563768846ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5637687df120 'unsigned int'
|-TypedefDecl 0x563768846c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5637687df0a0 'long'
|-TypedefDecl 0x563768846c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5637687df120 'unsigned int'
|-TypedefDecl 0x563768846cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5637687df0a0 'long'
|-TypedefDecl 0x563768846d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5637687df080 'int'
|-TypedefDecl 0x563768846dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5637687df080 'int'
|-TypedefDecl 0x563768846e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5637687df080 'int'
|-TypedefDecl 0x563768846eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5637687df7a0 'void *'
|   `-BuiltinType 0x5637687defe0 'void'
|-TypedefDecl 0x563768846f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5637687df0a0 'long'
|-TypedefDecl 0x563768846f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5637687df0a0 'long'
|-TypedefDecl 0x563768847008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5637687df0a0 'long'
|-TypedefDecl 0x563768847078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5637687df140 'unsigned long'
|-TypedefDecl 0x5637688470e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5637687df140 'unsigned long'
|-TypedefDecl 0x563768847158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5637687df140 'unsigned long'
|-TypedefDecl 0x5637688471c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5637687df140 'unsigned long'
|-TypedefDecl 0x563768847238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5637687df0a0 'long'
|-TypedefDecl 0x5637688472a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5637687df0a0 'long'
|-TypedefDecl 0x563768847318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5637687df0a0 'long'
|-TypedefDecl 0x563768847388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5637687df140 'unsigned long'
|-TypedefDecl 0x563768847418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5637688473e0 '__off64_t' sugar
|   |-Typedef 0x5637688466d8 '__off64_t'
|   `-BuiltinType 0x5637687df0a0 'long'
|-TypedefDecl 0x563768847510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5637688474d0 '__quad_t *'
|   `-TypedefType 0x563768847470 '__quad_t' sugar
|     |-Typedef 0x563768846278 '__quad_t'
|     `-BuiltinType 0x5637687df0a0 'long'
|-TypedefDecl 0x563768847580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5637687dfc20 'char *'
|   `-BuiltinType 0x5637687df020 'char'
|-TypedefDecl 0x5637688475f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5637687df0a0 'long'
|-TypedefDecl 0x563768847660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5637687df120 'unsigned int'
|-FunctionDecl 0x5637688477a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5637688476d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x563768847ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x563768847ad8 <line:72:3, col:34>
|     `-CallExpr 0x563768847a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x563768847a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x563768847a10 <col:10> '<builtin fn type>' Function 0x563768847880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x563768847ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x563768847a30 <col:29> 'unsigned int' lvalue ParmVar 0x5637688476d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x563768847880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x563768847920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x563768847990 <col:10> Implicit
| `-ConstAttr 0x5637688479e8 <col:10> Implicit
|-FunctionDecl 0x563768847c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x563768847b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x563768847f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x563768847f48 <line:77:3, col:34>
|     `-CallExpr 0x563768847f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x563768847ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x563768847e78 <col:10> '<builtin fn type>' Function 0x563768847ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x563768847f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x563768847e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x563768847b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x563768847ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x563768847d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x563768847df8 <col:10> Implicit
| `-ConstAttr 0x563768847e50 <col:10> Implicit
|-TypedefDecl 0x563768847f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5637687df140 'unsigned long'
|-TypedefDecl 0x563768848018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x563768847fe0 '__time_t' sugar
|   |-Typedef 0x563768846c18 '__time_t'
|   `-BuiltinType 0x5637687df0a0 'long'
|-RecordDecl 0x563768848070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x563768848128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5637688481b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x563768848248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x563768848210 '__pid_t' sugar
|   |-Typedef 0x563768846748 '__pid_t'
|   `-BuiltinType 0x5637687df080 'int'
|-RecordDecl 0x5637688482a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x563768848360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5637688483b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x563768848470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5637688484d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5637687df140 'unsigned long'
|-RecordDecl 0x563768848530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5637688487c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x56376884a8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x563768848810 'struct cpu_set_t' sugar
|   `-RecordType 0x5637688485b0 'cpu_set_t'
|     `-Record 0x563768848530 ''
|-FunctionDecl 0x56376884ab88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x56376884a958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56376884aa60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x56376884ac38 <line:107:19>
|-FunctionDecl 0x56376884ae10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x56376884aca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x56376884aeb8 <col:69>
|-FunctionDecl 0x56376884b030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x56376884af20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x56376884b0d8 <col:64>
|-FunctionDecl 0x56376884b398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x56376884b140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56376884b278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56376884b448 <line:113:22>
|-FunctionDecl 0x56376884b6c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x56376884b4b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56376884b5a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x56376884b778 <col:88>
|-FunctionDecl 0x56376884ba98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56376884b7e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56376884b8c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x56376884b950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56376884bb50 <col:62>
|-FunctionDecl 0x56376884bcc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x56376884bbb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x56376884bd70 <col:63>
|-FunctionDecl 0x56376884be98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x56376884bf38 <col:47>
|-FunctionDecl 0x56376884c040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x56376884bfa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56376884c0e8 <col:69>
|-FunctionDecl 0x56376884c1f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x56376884c158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56376884c298 <col:69>
|-FunctionDecl 0x56376884c558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56376884c300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56376884c438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x56376884c608 <col:88>
|-TypedefDecl 0x56376884c698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x56376884c660 '__clock_t' sugar
|   |-Typedef 0x563768846a58 '__clock_t'
|   `-BuiltinType 0x5637687df0a0 'long'
|-TypedefDecl 0x56376884c728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x56376884c6f0 '__clockid_t' sugar
|   |-Typedef 0x563768846e48 '__clockid_t'
|   `-BuiltinType 0x5637687df080 'int'
|-TypedefDecl 0x56376884c7b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x56376884c780 '__timer_t' sugar
|   |-Typedef 0x563768846eb8 '__timer_t'
|   `-PointerType 0x5637687df7a0 'void *'
|     `-BuiltinType 0x5637687defe0 'void'
|-RecordDecl 0x56376884c810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x56376884c8e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x56376884c950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x56376884c9b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x56376884ca20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x56376884ca88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x56376884caf0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x56376884cb58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x56376884cbc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x56376884cc28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x56376884cc90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x56376884ccf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x56376884cd48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x56376884ce18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x56376884ce88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x56376884cf30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x56376884d100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x56376884d1a0 <col:45>
|-FunctionDecl 0x56376884d380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x56376884d270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x56376884d428 <col:54>
|-FunctionDecl 0x56376884d628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x56376884d490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x56376884d508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x56376884d6d8 <line:157:22>
| `-ConstAttr 0x56376884d730 <col:63>
|-FunctionDecl 0x56376884e560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56376884d828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56376884e608 <col:56>
|-FunctionDecl 0x56376884e9b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x56376884e678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x56376884e6f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56376884e770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x56376884e868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x56376884ea70 <col:54>
|-RecordDecl 0x56376884eac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x56376884eb78 parent 0x5637687def88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x56376884edd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x56376884ee78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x56376884eee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x56376884ef48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x56376884f038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x56376884f158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x56376884f100 'struct __locale_struct *'
|   `-ElaboratedType 0x56376884f090 'struct __locale_struct' sugar
|     `-RecordType 0x56376884eb50 'struct __locale_struct'
|       `-Record 0x56376884eac8 '__locale_struct'
|-TypedefDecl 0x56376884f208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x56376884f1d0 '__locale_t' sugar
|   |-Typedef 0x56376884f158 '__locale_t'
|   `-PointerType 0x56376884f100 'struct __locale_struct *'
|     `-ElaboratedType 0x56376884f090 'struct __locale_struct' sugar
|       `-RecordType 0x56376884eb50 'struct __locale_struct'
|         `-Record 0x56376884eac8 '__locale_struct'
|-FunctionDecl 0x56376884f610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x56376884f278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x56376884f2f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56376884f370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x56376884f400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56376884f478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x56376884f6d8 <col:40>
|-FunctionDecl 0x56376884f8c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56376884f7a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x56376884f970 <col:66>
|-FunctionDecl 0x56376884fa80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56376884f9d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x56376884fb28 <col:69>
|-FunctionDecl 0x56376884fd58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56376884fb90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56376884fc20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56376884fe08 <col:52>
|-FunctionDecl 0x56376884ffb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56376884fe70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56376884ff00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x563768850060 <col:55>
|-FunctionDecl 0x5637688501f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5637688500e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5637688502a0 <col:62>
|-FunctionDecl 0x563768850418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x563768850308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5637688504c0 <col:60>
|-FunctionDecl 0x563768850718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x563768850578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5637688505f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5637688507c8 <col:44>
|-FunctionDecl 0x5637688509d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x563768850830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5637688508b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x563768850a88 <col:49>
|-VarDecl 0x563768850b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x563768850c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x563768850c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x563768850d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x563768850e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x563768850f20 <col:42>
|-VarDecl 0x563768850f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x563768851010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x563768851198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x563768851088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x563768851240 <col:57>
|-FunctionDecl 0x563768851350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5637688512c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5637688513f8 <col:56>
|-FunctionDecl 0x563768852540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x563768851478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5637688525e8 <col:59>
|-FunctionDecl 0x5637688526f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x563768852658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x563768852798 <col:48>
| `-ConstAttr 0x5637688527f0 <col:89>
|-FunctionDecl 0x563768852a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5637688528a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x563768852938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x563768852cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x563768852b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563768852bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x563768852d68 <col:88>
|-FunctionDecl 0x563768852f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x563768852dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563768852e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x563768852fb0 <col:88>
|-FunctionDecl 0x5637688531c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x563768853018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5637688530a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x563768853278 <line:208:22>
|-FunctionDecl 0x5637688535e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5637688532e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563768853360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5637688533f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x563768853480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5637688538e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5637688536e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5637688537c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x563768853998 <col:85>
|-FunctionDecl 0x563768853d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x563768853a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563768853b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x563768853c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x563768853e40 <col:52>
|-FunctionDecl 0x563768853fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x563768853ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x563768854060 <col:61>
|-FunctionDecl 0x563768854560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5637688540c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x563768854148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x563768854278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x563768854368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x563768854620 <col:62>
|-FunctionDecl 0x563768854838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x563768854688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x563768854718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5637688548e8 <line:221:22>
|-FunctionDecl 0x5637688549e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x563768854950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x563768854a90 <col:65>
|-TypedefDecl 0x563768854b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5637687df140 'unsigned long'
|-RecordDecl 0x563768854b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x563768854ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x563768854d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563768854db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x563768854d60 'union pthread_attr_t' sugar
|   `-RecordType 0x563768854be0 'union pthread_attr_t'
|     `-Record 0x563768854b58 'pthread_attr_t'
|-RecordDecl 0x563768854e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x563768854f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x563768855000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5637688550b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x563768855050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x563768854e90 'struct __pthread_internal_list'
|     `-Record 0x563768854e10 '__pthread_internal_list'
|-RecordDecl 0x563768855120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5637688551c8 parent 0x5637687def88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5637688552a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x563768855308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x563768855370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5637688553d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x563768855440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5637688554a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x563768859580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x563768859630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x563768859720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x563768859788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563768859910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5637688598b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5637688551a0 'pthread_mutex_t'
|     `-Record 0x563768855120 ''
|-RecordDecl 0x563768859980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x563768859ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x563768859b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x563768859be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x563768859b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x563768859a00 'pthread_mutexattr_t'
|     `-Record 0x563768859980 ''
|-RecordDecl 0x563768859c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x563768859cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x563768859dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x563768859e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x563768859e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x563768859ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x563768859f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x563768859fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x56376885a030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x56376885a098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x56376885a150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix050_pso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix050_pso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x56376885a240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x56376885a2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x56376885a3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x56376885a380 'union pthread_cond_t' sugar
|   `-RecordType 0x563768859cd0 'pthread_cond_t'
|     `-Record 0x563768859c50 ''
|-RecordDecl 0x56376885a450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x56376885a590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56376885a5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56376885a6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x56376885a650 'union pthread_condattr_t' sugar
|   `-RecordType 0x56376885a4d0 'pthread_condattr_t'
|     `-Record 0x56376885a450 ''
|-TypedefDecl 0x56376885a738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5637687df120 'unsigned int'
|-TypedefDecl 0x56376885a7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5637687df080 'int'
|-RecordDecl 0x56376885a800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x56376885a8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x56376885a970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56376885a9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x56376885aa40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x56376885aaa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x56376885ab10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x56376885ab78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x56376885abe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x56376885ac48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x56376885acb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x56376885ad18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x56376885ad80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x56376885ae30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix050_pso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix050_pso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x56376885aed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56376885af40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56376885b090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x56376885b030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x56376885a880 'pthread_rwlock_t'
|     `-Record 0x56376885a800 ''
|-RecordDecl 0x56376885b100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x56376885b240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x56376885b2a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56376885b360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x56376885b300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x56376885b180 'pthread_rwlockattr_t'
|     `-Record 0x56376885b100 ''
|-TypedefDecl 0x56376885b3e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5637687df084 'volatile int' volatile
|   `-BuiltinType 0x5637687df080 'int'
|-RecordDecl 0x56376885b440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x56376885d5b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x56376885d618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56376885d6d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x56376885d670 'union pthread_barrier_t' sugar
|   `-RecordType 0x56376885b4c0 'pthread_barrier_t'
|     `-Record 0x56376885b440 ''
|-RecordDecl 0x56376885d740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x56376885d840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56376885d8a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56376885d960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x56376885d900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x56376885d7c0 'pthread_barrierattr_t'
|     `-Record 0x56376885d740 ''
|-TypedefDecl 0x56376885da78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x56376885da10 'long [8]' 8 
|   `-BuiltinType 0x5637687df0a0 'long'
|-EnumDecl 0x56376885dad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x56376885db98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x56376885dbe8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x56376885dc38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x56376885dd08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x56376885dd58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x56376885dda8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x56376885ddf8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x56376885de80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x56376885de68 <col:26> 'int'
| |   `-DeclRefExpr 0x56376885de48 <col:26> 'int' EnumConstant 0x56376885dd08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x56376885df08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x56376885def0 <col:29> 'int'
| |   `-DeclRefExpr 0x56376885ded0 <col:29> 'int' EnumConstant 0x56376885dd58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x56376885df90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x56376885df78 <col:30> 'int'
| |   `-DeclRefExpr 0x56376885df58 <col:30> 'int' EnumConstant 0x56376885dda8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x56376885e018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x56376885e000 <col:27> 'int'
|     `-DeclRefExpr 0x56376885dfe0 <col:27> 'int' EnumConstant 0x56376885de80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x56376885e068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x56376885e138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x56376885e1c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x56376885e1a8 <col:30> 'int'
| |   `-DeclRefExpr 0x56376885e188 <col:30> 'int' EnumConstant 0x56376885e138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x56376885e210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x56376885e298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x56376885e280 <col:29> 'int'
|     `-DeclRefExpr 0x56376885e260 <col:29> 'int' EnumConstant 0x56376885e210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x56376885e2e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x56376885e3b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x56376885e408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x56376885e458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x56376885e4a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x56376885e5c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x56376885e610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x56376885e660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x56376885e6e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x56376885e6d0 <col:31> 'int'
|     `-DeclRefExpr 0x56376885e6b0 <col:31> 'int' EnumConstant 0x56376885e5c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x56376885e738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x56376885e808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x56376885e858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x56376885e8a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x56376885e978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x56376885e9c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x56376885ea18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x56376885eae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x56376885eb38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x56376885eb88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x56376885edc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x56376885ee30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x56376885ee98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x56376885efb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x56376885f008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x56376885f0d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x56376885f128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x56376885f178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x56376885f248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x56376885f298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x56376885f8f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x56376885f390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x56376885f4a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56376885f6e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x56376885f760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x56376885f9b8 <col:47>
| |-NonNullAttr 0x56376885fa10 <col:77, col:94> 1 3
| `-CallbackAttr 0x56376885fa48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x56376885fb70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x56376885faa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x56376885fdc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x56376885fc28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x56376885fca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x56376885ff98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x56376885fe88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x563768860040 <col:60>
|-FunctionDecl 0x563768860190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x563768860230 <col:54>
| `-ConstAttr 0x563768860288 <col:95>
|-FunctionDecl 0x563768860458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5637688602c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563768860338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x563768860508 <line:394:19>
| `-ConstAttr 0x563768860560 <col:60>
|-FunctionDecl 0x563768860f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x563768860e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x563768861010 <col:71>
| `-NonNullAttr 0x563768861068 <col:112, col:126> 1
|-FunctionDecl 0x563768861170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5637688610b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x563768861218 <line:397:22>
| `-NonNullAttr 0x563768861270 <col:63, col:77> 1
|-FunctionDecl 0x563768861498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5637688612b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x563768861338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x563768861548 <line:400:22>
| `-NonNullAttr 0x5637688615a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5637688617a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5637688615e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563768861668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x563768861858 <line:403:22>
| `-NonNullAttr 0x5637688618b0 <col:63, col:77> 1
|-FunctionDecl 0x563768861b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5637688618f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5637688619a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x563768861bb8 <line:406:22>
| `-NonNullAttr 0x563768861c10 <col:63, col:80> 1 2
|-FunctionDecl 0x563768862e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x563768861c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563768861cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x563768862ef8 <line:409:22>
| `-NonNullAttr 0x563768862f50 <col:63, col:77> 1
|-FunctionDecl 0x563768863188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x563768862f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563768863028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x563768863238 <line:412:22>
| `-NonNullAttr 0x563768863290 <col:63, col:80> 1 2
|-FunctionDecl 0x5637688634c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5637688632d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x563768863368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x563768863578 <col:37>
| `-NonNullAttr 0x5637688635d0 <col:78, col:95> 1 2
|-FunctionDecl 0x5637688637b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563768863618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563768863698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x563768863868 <line:418:22>
| `-NonNullAttr 0x5637688638c0 <col:63, col:80> 1 2
|-FunctionDecl 0x563768863a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563768863908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563768863988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x563768863af8 <line:420:22>
| `-NonNullAttr 0x563768863b50 <col:63, col:77> 1
|-FunctionDecl 0x563768863cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563768863b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563768863c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x563768863da8 <line:423:22>
| `-NonNullAttr 0x563768864e30 <col:63, col:80> 1 2
|-FunctionDecl 0x563768864fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563768864e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563768864ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x563768865068 <line:426:22>
| `-NonNullAttr 0x5637688650c0 <col:63, col:77> 1
|-FunctionDecl 0x563768865268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563768865108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563768865188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x563768865318 <line:429:22>
| `-NonNullAttr 0x563768865370 <col:63, col:80> 1 2
|-FunctionDecl 0x5637688654f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5637688653b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563768865438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5637688655a8 <line:431:22>
| `-NonNullAttr 0x563768865600 <col:63, col:77> 1
|-FunctionDecl 0x563768865828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x563768865648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5637688656c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5637688658d8 <line:434:22>
| |-NonNullAttr 0x563768865930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x563768865968 <col:100> "" ""
|-FunctionDecl 0x563768865b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5637688659b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563768865a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x563768865c28 <line:437:22>
| |-NonNullAttr 0x563768865c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x563768865cb8 <col:97> "" ""
|-FunctionDecl 0x563768865eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x563768865d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563768865d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x563768865f68 <line:440:22>
| `-NonNullAttr 0x563768865fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x563768866140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x563768866008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563768866080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5637688661f0 <line:443:22>
| `-NonNullAttr 0x563768866248 <col:63, col:77> 1
|-FunctionDecl 0x563768866538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x563768866298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563768866318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x563768866390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5637688665f0 <line:447:22>
| `-NonNullAttr 0x563768866648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5637688668f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5637688666a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563768866720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x563768866798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5637688669b0 <col:43>
| `-NonNullAttr 0x563768866a08 <col:84, col:98> 1
|-FunctionDecl 0x563768866cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x563768866a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563768866ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x563768866b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x563768866d80 <line:452:22>
| `-NonNullAttr 0x563768866dd8 <col:63, col:77> 3
|-FunctionDecl 0x5637688670e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x563768866e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563768866ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x563768866f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5637688671a0 <line:456:22>
| `-NonNullAttr 0x5637688671f8 <col:63, col:80> 2 3
|-FunctionDecl 0x5637688673e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x563768867248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5637688672c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x563768867498 <line:458:22>
|-FunctionDecl 0x563768867868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x563768867560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x563768867700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x563768867918 <col:52, col:69> 1 2
|-FunctionDecl 0x563768867ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5637688679a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x563768867a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x563768867ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x563768867b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x563768867c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x563768867e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x563768867d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x563768867fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x563768868040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5637688680e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5637688681d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x563768868240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x563768868410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix050_pso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x563768868508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5637688685c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x563768868560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5637688680c0 '__pthread_unwind_buf_t'
| |   `-Record 0x563768868040 ''
| `-AlignedAttr 0x563768868618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x563768868690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5637688687f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x563768868858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5637688688c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x563768868928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x563768868b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x563768868a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x563768868c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x563768868be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x563768868e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563768868d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x563768868f18 <line:487:22>
|-RecordDecl 0x563768868f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x563768869288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5637688690e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x563768869168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x563768869338 <col:86>
| `-ReturnsTwiceAttr 0x563768869390 <col:12> Implicit
|-FunctionDecl 0x5637688696b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x563768869460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x563768869570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x563768869768 <line:493:22>
| `-NonNullAttr 0x5637688697c0 <col:63, col:77> 1
|-FunctionDecl 0x563768869938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563768869808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5637688699e0 <line:495:22>
| `-NonNullAttr 0x563768869a38 <col:63, col:77> 1
|-FunctionDecl 0x563768869b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563768869a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563768869be8 <line:497:22>
| `-NonNullAttr 0x563768869c40 <col:52, col:66> 1
|-FunctionDecl 0x563768869d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563768869c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563768869de8 <line:499:22>
| `-NonNullAttr 0x563768869e40 <col:52, col:66> 1
|-FunctionDecl 0x56376886a088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563768869e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563768869f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56376886a138 <col:36>
| `-NonNullAttr 0x56376886a190 <col:66, col:83> 1 2
|-FunctionDecl 0x56376886a290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56376886a1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56376886a338 <line:504:22>
| `-NonNullAttr 0x56376886a390 <col:52, col:66> 1
|-FunctionDecl 0x56376886a628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56376886a440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56376886a4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56376886a6d8 <line:508:22>
| `-NonNullAttr 0x56376886a730 <col:63, col:80> 1 2
|-FunctionDecl 0x56376886a9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x56376886a778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56376886a7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x56376886a878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x56376886aab0 <line:512:22>
| `-NonNullAttr 0x56376886ab08 <col:63, col:80> 1 3
|-FunctionDecl 0x56376886ac10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56376886ab58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56376886acb8 <line:514:22>
| `-NonNullAttr 0x56376886ad10 <col:63, col:77> 1
|-FunctionDecl 0x56376886af38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56376886adc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56376886afe0 <line:516:22>
| `-NonNullAttr 0x56376886b038 <col:63, col:77> 1
|-FunctionDecl 0x56376886b140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56376886b088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56376886b1e8 <line:518:22>
| `-NonNullAttr 0x56376886b240 <col:63, col:77> 1
|-FunctionDecl 0x56376886b468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56376886b288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56376886b308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x56376886b518 <line:522:22>
| `-NonNullAttr 0x56376886b570 <col:63, col:80> 1 2
|-FunctionDecl 0x56376886b778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56376886b5b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56376886b638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x56376886b828 <line:525:22>
| `-NonNullAttr 0x56376886b880 <col:63, col:77> 1
|-FunctionDecl 0x56376886ba28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56376886b8c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56376886b948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x56376886bad8 <line:528:22>
| `-NonNullAttr 0x56376886bb30 <col:63, col:80> 1 2
|-FunctionDecl 0x56376886bcb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56376886bb78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56376886bbf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x56376886bd68 <line:530:22>
| `-NonNullAttr 0x56376886bdc0 <col:63, col:77> 1
|-FunctionDecl 0x56376886cf90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56376886be08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56376886ceb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x56376886d040 <line:534:22>
| `-NonNullAttr 0x56376886d098 <col:63, col:80> 1 2
|-FunctionDecl 0x56376886d228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56376886d0e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56376886d168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x56376886d2d8 <line:537:22>
| `-NonNullAttr 0x56376886d330 <col:63, col:77> 1
|-FunctionDecl 0x56376886d4d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56376886d378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56376886d3f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56376886d588 <line:541:22>
| `-NonNullAttr 0x56376886d5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x56376886d768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56376886d628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56376886d6a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x56376886d818 <line:544:22>
| `-NonNullAttr 0x56376886d870 <col:63, col:77> 1
|-FunctionDecl 0x56376886da58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x56376886d8b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x56376886d938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x56376886db08 <line:547:22>
| `-NonNullAttr 0x56376886db60 <col:63, col:80> 1 2
|-FunctionDecl 0x56376886dce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56376886dba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56376886dc28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x56376886dd98 <line:550:22>
| `-NonNullAttr 0x56376886ddf0 <col:63, col:77> 1
|-FunctionDecl 0x56376886f168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x56376886ef10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56376886f020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x56376886f218 <col:29>
| `-NonNullAttr 0x56376886f270 <col:70, col:84> 1
|-FunctionDecl 0x56376886f3e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56376886f2b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56376886f490 <line:555:22>
| `-NonNullAttr 0x56376886f4e8 <col:63, col:77> 1
|-FunctionDecl 0x56376886f5f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56376886f538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56376886f698 <line:557:22>
| `-NonNullAttr 0x56376886f6f0 <col:52, col:66> 1
|-FunctionDecl 0x56376886f7f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56376886f738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56376886f898 <line:559:19>
| `-NonNullAttr 0x56376886f8f0 <col:49, col:63> 1
|-FunctionDecl 0x56376886fb28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56376886f938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56376886f9c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56376886fbd8 <col:39>
| `-NonNullAttr 0x56376886fc30 <col:69, col:86> 1 2
|-FunctionDecl 0x56376886fd30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56376886fc78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56376886fdd8 <line:564:22>
| `-NonNullAttr 0x56376886fe30 <col:52, col:66> 1
|-FunctionDecl 0x56376886ff98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56376886fee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563768870040 <line:566:22>
| `-NonNullAttr 0x563768870098 <col:52, col:66> 1
|-FunctionDecl 0x563768870258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5637688700e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x563768870178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x563768870308 <col:39>
| `-NonNullAttr 0x563768870360 <col:69, col:86> 1 2
|-FunctionDecl 0x563768870460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5637688703a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563768870508 <line:571:22>
| `-NonNullAttr 0x563768870560 <col:52, col:66> 1
|-FunctionDecl 0x563768870748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x563768870610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5637688707f0 <line:573:22>
| `-NonNullAttr 0x563768870848 <col:63, col:77> 1
|-FunctionDecl 0x563768870950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x563768870898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5637688709f8 <line:575:22>
| `-NonNullAttr 0x563768870a50 <col:63, col:77> 1
|-FunctionDecl 0x563768870c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563768870a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x563768870b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x563768870d28 <line:579:22>
| `-NonNullAttr 0x563768870d80 <col:63, col:80> 1 2
|-FunctionDecl 0x563768870fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x563768870dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x563768870e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x563768871058 <line:582:22>
| `-NonNullAttr 0x5637688710b0 <col:63, col:77> 1
|-FunctionDecl 0x563768871258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5637688710f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x563768871178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x563768871308 <line:586:22>
| `-NonNullAttr 0x563768871360 <col:63, col:80> 1 2
|-FunctionDecl 0x5637688714e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5637688713a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x563768871428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x563768871598 <col:36>
| `-NonNullAttr 0x5637688715f0 <col:77, col:91> 1
|-FunctionDecl 0x563768871928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5637688716d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5637688717e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5637688719d8 <line:591:22>
| `-NonNullAttr 0x563768871a30 <col:63, col:77> 1
|-FunctionDecl 0x563768871ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563768871a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563768871c50 <line:593:22>
| `-NonNullAttr 0x563768871ca8 <col:63, col:77> 1
|-FunctionDecl 0x563768871db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563768871cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563768871e58 <line:595:22>
| `-NonNullAttr 0x563768871eb0 <col:52, col:66> 1
|-FunctionDecl 0x563768871fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563768871f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563768872070 <line:597:22>
| `-NonNullAttr 0x5637688720c8 <col:52, col:66> 1
|-FunctionDecl 0x5637688722f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x563768872118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x563768872190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5637688723a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5637688726d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563768872428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5637688724a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563768872530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x563768872790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5637688729a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x563768872870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x563768872a50 <line:606:22>
| `-NonNullAttr 0x563768872aa8 <col:63, col:77> 1
|-FunctionDecl 0x563768872bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x563768872af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x563768872c58 <line:608:22>
| `-NonNullAttr 0x563768872cb0 <col:63, col:77> 1
|-FunctionDecl 0x563768872f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563768872cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x563768872d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x563768872fc0 <line:612:22>
| `-NonNullAttr 0x563768873018 <col:63, col:80> 1 2
|-FunctionDecl 0x563768873228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x563768873068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5637688730e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5637688732d8 <col:37>
| `-NonNullAttr 0x563768873330 <col:78, col:92> 1
|-FunctionDecl 0x563768873548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x563768873378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x563768873420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5637688735f8 <line:618:22>
| `-NonNullAttr 0x563768873650 <col:63, col:80> 1 2
|-FunctionDecl 0x563768873818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x563768873698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x563768873710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5637688738c8 <line:621:22>
| `-NonNullAttr 0x563768873920 <col:63, col:77> 1
|-FunctionDecl 0x563768873bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x563768873a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x563768873a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x563768873c78 <line:623:22>
| `-NonNullAttr 0x563768873cd0 <col:63, col:77> 1
|-FunctionDecl 0x563768873e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563768873d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563768873f20 <line:625:22>
| `-NonNullAttr 0x563768873f78 <col:63, col:77> 1
|-FunctionDecl 0x563768874080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563768873fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563768874128 <line:627:22>
| `-NonNullAttr 0x563768874180 <col:52, col:66> 1
|-FunctionDecl 0x563768874280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5637688741c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563768874328 <line:629:22>
| `-NonNullAttr 0x563768874380 <col:52, col:66> 1
|-FunctionDecl 0x563768874480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5637688743c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563768874528 <line:631:22>
| `-NonNullAttr 0x563768874580 <col:52, col:66> 1
|-FunctionDecl 0x563768874958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x563768874660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x563768874770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5637688747f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x563768874a10 <line:635:22>
| `-NonNullAttr 0x563768874a68 <col:63, col:77> 1
|-FunctionDecl 0x563768874be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x563768874ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x563768874c90 <line:637:22>
| `-NonNullAttr 0x563768874ce8 <col:63, col:77> 1
|-FunctionDecl 0x563768874df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x563768874d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x563768874e98 <line:639:22>
| `-NonNullAttr 0x563768874ef0 <col:52, col:66> 1
|-FunctionDecl 0x5637688750e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x563768874fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x563768875190 <line:641:22>
| `-NonNullAttr 0x5637688751e8 <col:63, col:77> 1
|-FunctionDecl 0x5637688752f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x563768875238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x563768875398 <line:643:22>
| `-NonNullAttr 0x5637688753f0 <col:63, col:77> 1
|-FunctionDecl 0x563768875618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563768875438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5637688754b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5637688756c8 <line:647:22>
| `-NonNullAttr 0x563768875720 <col:63, col:80> 1 2
|-FunctionDecl 0x563768875928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x563768875768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5637688757e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5637688759d8 <line:650:22>
| `-NonNullAttr 0x563768875a30 <col:63, col:77> 1
|-FunctionDecl 0x563768875d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x563768875b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x563768875c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x563768875e28 <line:653:22>
| `-NonNullAttr 0x563768875e80 <col:63, col:77> 1
|-FunctionDecl 0x563768875fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x563768875ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x563768876090 <col:69>
|-FunctionDecl 0x563768876208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5637688760f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5637688762b0 <col:72>
|-FunctionDecl 0x5637688764e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x563768876318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5637688763c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x563768876598 <col:44>
|-FunctionDecl 0x5637688767b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x563768876600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563768876678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x563768876868 <line:660:22>
| `-NonNullAttr 0x5637688768c0 <col:63, col:77> 2
|-FunctionDecl 0x563768876d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5637688769a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x563768876ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x563768876bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x563768876dc0 <col:47>
|-FunctionDecl 0x563768877f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x563768876e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5637688780b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x563768878020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x563768878210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x563768878178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x563768878368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x5637688782d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x563768878430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5637688784f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5637688785b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x563768878668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5637688786e8 prev 0x563768878668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x563768878750 <col:24> 'int' 0
|-VarDecl 0x563768878788 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x563768878808 prev 0x563768878788 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x563768878870 <col:27> 'int' 0
|-VarDecl 0x5637688788a8 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x563768878928 prev 0x5637688788a8 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x563768878990 <col:27> 'int' 0
|-VarDecl 0x5637688789c8 <line:678:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x563768878a48 prev 0x5637688789c8 <line:679:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x563768878ab0 <col:27> 'int' 0
|-VarDecl 0x563768878ae8 <line:680:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x563768878b68 prev 0x563768878ae8 <line:681:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x563768878bd0 <col:27> 'int' 0
|-VarDecl 0x563768878c08 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x563768878c88 prev 0x563768878c08 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x563768878cf0 <col:9> 'int' 0
|-VarDecl 0x563768878d20 <line:684:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x563768878da0 <line:685:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x563768878e18 <line:686:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x563768878e90 <line:687:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x563768878f70 <line:688:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x563768878fe8 <line:689:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x563768879060 <line:690:1, col:7> col:7 used a$r_buff0_thd4 '_Bool'
|-VarDecl 0x5637688790d8 <line:691:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x563768879150 <line:692:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x5637688791c8 <line:693:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x563768879240 <line:694:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x5637688792b8 <line:695:1, col:7> col:7 used a$r_buff1_thd4 '_Bool'
|-VarDecl 0x563768879330 <line:696:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x5637688793b0 <line:697:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x563768879430 <line:698:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x5637688794a8 <line:699:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x563768879528 <line:700:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x5637688795a0 <line:701:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x563768879618 <line:702:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x563768879690 <line:703:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x563768879710 <line:704:1, col:5> col:5 used x 'int'
|-VarDecl 0x563768879790 prev 0x563768879710 <line:705:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5637688797f8 <col:9> 'int' 0
|-VarDecl 0x563768879830 <line:706:1, col:5> col:5 used y 'int'
|-VarDecl 0x5637688798b0 prev 0x563768879830 <line:707:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x563768879918 <col:9> 'int' 0
|-VarDecl 0x563768879950 <line:708:1, col:5> col:5 used z 'int'
|-VarDecl 0x5637688799d0 prev 0x563768879950 <line:709:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x563768879a38 <col:9> 'int' 0
|-VarDecl 0x563768879a68 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x563768879ae0 <line:711:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x563768879bf8 prev 0x563768877f60 <line:712:1, line:741:1> line:712:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x563768879b60 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56376887b4b8 <line:713:1, line:741:1>
|   |-CallExpr 0x563768879d08 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563768879cf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563768879ca0 <col:3> 'void ()' Function 0x56376881f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563768879d80 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563768879d28 <col:3> 'int' lvalue Var 0x563768879528 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x563768879d68 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563768879d48 <col:15> 'int' lvalue Var 0x563768879430 'a$w_buff0' 'int'
|   |-BinaryOperator 0x563768879de0 <line:716:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563768879da0 <col:3> 'int' lvalue Var 0x563768879430 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x563768879dc0 <col:15> 'int' 1
|   |-BinaryOperator 0x563768879e58 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563768879e00 <col:3> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563768879e40 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563768879e20 <col:20> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563768879ef0 <line:718:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x563768879e78 <col:3> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x563768879ec8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563768879e98 <col:27> 'int' 1
|   |-CallExpr 0x56376887a088 <line:719:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x56376887a070 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x563768879f10 <col:3> 'void (int)' Function 0x56376881f0d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x56376887a020 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x56376887a000 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x563768879fe0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x563768879f98 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x563768879f80 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x563768879f30 <col:23> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x563768879fc8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x563768879fb0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x563768879f50 <col:41> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56376887a108 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56376887a0b0 <col:3> '_Bool' lvalue Var 0x5637688790d8 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x56376887a0f0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56376887a0d0 <col:20> '_Bool' lvalue Var 0x563768878e18 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x56376887a180 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56376887a128 <col:3> '_Bool' lvalue Var 0x563768879150 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56376887a168 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56376887a148 <col:20> '_Bool' lvalue Var 0x563768878e90 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56376887a1f8 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56376887a1a0 <col:3> '_Bool' lvalue Var 0x5637688791c8 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56376887a1e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56376887a1c0 <col:20> '_Bool' lvalue Var 0x563768878f70 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56376887a270 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56376887a218 <col:3> '_Bool' lvalue Var 0x563768879240 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56376887a258 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56376887a238 <col:20> '_Bool' lvalue Var 0x563768878fe8 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56376887a2e8 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56376887a290 <col:3> '_Bool' lvalue Var 0x5637688792b8 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56376887a2d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56376887a2b0 <col:20> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x56376887a380 <line:725:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56376887a308 <col:3> '_Bool' lvalue Var 0x563768878e90 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x56376887a358 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56376887a328 <col:27> 'int' 1
|   |-CallExpr 0x56376887a3d8 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56376887a3c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56376887a3a0 <col:3> 'void ()' Function 0x56376881f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56376887a430 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56376887a418 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56376887a3f8 <col:3> 'void ()' Function 0x56376881f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56376887a4a8 <line:728:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56376887a450 <col:3> 'int' lvalue Var 0x563768878808 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x56376887a490 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56376887a470 <col:25> 'int' lvalue Var 0x563768879790 'x' 'int'
|   |-CallExpr 0x56376887a500 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56376887a4e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56376887a4c8 <col:3> 'void ()' Function 0x56376881f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56376887a558 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56376887a540 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56376887a520 <col:3> 'void ()' Function 0x56376881f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56376887a840 <line:731:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56376887a578 <col:3> 'int' lvalue Var 0x563768878c88 'a' 'int'
|   | `-ConditionalOperator 0x56376887a810 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56376887a638 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56376887a5f0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56376887a5d8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56376887a598 <col:7> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56376887a620 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56376887a608 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56376887a5b8 <col:25> '_Bool' lvalue Var 0x563768878e90 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x56376887a7f8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56376887a658 <col:42> 'int' lvalue Var 0x563768879430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x56376887a7d8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56376887a7a8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56376887a718 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56376887a6d0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56376887a6b8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56376887a678 <col:55> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56376887a700 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56376887a6e8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56376887a698 <col:73> '_Bool' lvalue Var 0x563768879150 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x56376887a778 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56376887a738 <col:90> 'int' lvalue Var 0x563768879528 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56376887a790 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56376887a758 <col:102> 'int' lvalue Var 0x563768878c88 'a' 'int'
|   |-BinaryOperator 0x56376887aa48 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56376887a860 <col:3> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56376887aa30 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56376887aa00 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56376887a920 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56376887a8d8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56376887a8c0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56376887a880 <col:20> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56376887a908 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56376887a8f0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56376887a8a0 <col:38> '_Bool' lvalue Var 0x563768878e90 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56376887a9b8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56376887a970 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56376887a940 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56376887a9e8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56376887a9d0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56376887a998 <col:66> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56376887ad30 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56376887aa68 <col:3> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56376887ad18 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56376887ace8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56376887ac08 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56376887ab28 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56376887aae0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56376887aac8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56376887aa88 <col:20> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56376887ab10 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56376887aaf8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56376887aaa8 <col:38> '_Bool' lvalue Var 0x563768878e90 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x56376887abe8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56376887aba0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56376887ab88 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56376887ab48 <col:56> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56376887abd0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56376887abb8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56376887ab68 <col:74> '_Bool' lvalue Var 0x563768879150 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56376887aca0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56376887ac58 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56376887ac28 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56376887acd0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56376887acb8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56376887ac80 <col:102> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56376887af38 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56376887ad50 <col:3> '_Bool' lvalue Var 0x563768878e90 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56376887af20 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56376887aef0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56376887ae10 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56376887adc8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56376887adb0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56376887ad70 <col:20> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56376887adf8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56376887ade0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56376887ad90 <col:38> '_Bool' lvalue Var 0x563768878e90 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56376887aea8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56376887ae60 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56376887ae30 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56376887aed8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56376887aec0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56376887ae88 <col:66> '_Bool' lvalue Var 0x563768878e90 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56376887b238 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56376887af58 <col:3> '_Bool' lvalue Var 0x563768879150 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56376887b220 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56376887b1f0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56376887b110 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56376887b030 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56376887afe8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56376887afd0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56376887af90 <col:20> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56376887b018 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56376887b000 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56376887afb0 <col:38> '_Bool' lvalue Var 0x563768878e90 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x56376887b0f0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56376887b0a8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56376887b090 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56376887b050 <col:56> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56376887b0d8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56376887b0c0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56376887b070 <col:74> '_Bool' lvalue Var 0x563768879150 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56376887b1a8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56376887b160 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56376887b130 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56376887b1d8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56376887b1c0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56376887b188 <col:102> '_Bool' lvalue Var 0x563768879150 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x56376887b290 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56376887b278 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56376887b258 <col:3> 'void ()' Function 0x56376881f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56376887b2e8 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56376887b2d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56376887b2b0 <col:3> 'void ()' Function 0x56376881f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56376887b3a0 <line:738:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56376887b308 <col:3> 'int' lvalue Var 0x5637688786e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56376887b380 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56376887b368 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56376887b328 <col:22> 'int' lvalue Var 0x5637688786e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56376887b348 <col:41> 'int' 1
|   |-CallExpr 0x56376887b3f8 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56376887b3e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56376887b3c0 <col:3> 'void ()' Function 0x56376881f410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56376887b4a8 <line:740:3, col:36>
|     `-CallExpr 0x56376887b488 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56376887b470 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56376887b418 <col:10> 'void *(void)' Function 0x56376881ee68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56376887b650 prev 0x5637688780b8 <line:742:1, line:761:1> line:742:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x56376887b5b8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56376887c8a0 <line:743:1, line:761:1>
|   |-CallExpr 0x56376887b730 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56376887b718 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56376887b6f8 <col:3> 'void ()' Function 0x56376881f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56376887b790 <line:745:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56376887b750 <col:3> 'int' lvalue Var 0x563768879790 'x' 'int'
|   | `-IntegerLiteral 0x56376887b770 <col:7> 'int' 1
|   |-CallExpr 0x56376887b7e8 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56376887b7d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56376887b7b0 <col:3> 'void ()' Function 0x56376881f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56376887b840 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56376887b828 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56376887b808 <col:3> 'void ()' Function 0x56376881f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56376887b8b8 <line:748:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56376887b860 <col:3> 'int' lvalue Var 0x563768878928 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x56376887b8a0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56376887b880 <col:25> 'int' lvalue Var 0x5637688798b0 'y' 'int'
|   |-CallExpr 0x56376887b910 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56376887b8f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56376887b8d8 <col:3> 'void ()' Function 0x56376881f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56376887b968 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56376887b950 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56376887b930 <col:3> 'void ()' Function 0x56376881f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56376887bc50 <line:751:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56376887b988 <col:3> 'int' lvalue Var 0x563768878c88 'a' 'int'
|   | `-ConditionalOperator 0x56376887bc20 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56376887ba48 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56376887ba00 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56376887b9e8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56376887b9a8 <col:7> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56376887ba30 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56376887ba18 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56376887b9c8 <col:25> '_Bool' lvalue Var 0x563768878f70 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x56376887bc08 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56376887ba68 <col:42> 'int' lvalue Var 0x563768879430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x56376887bbe8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56376887bbb8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56376887bb28 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56376887bae0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56376887bac8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56376887ba88 <col:55> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56376887bb10 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56376887baf8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56376887baa8 <col:73> '_Bool' lvalue Var 0x5637688791c8 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x56376887bb88 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56376887bb48 <col:90> 'int' lvalue Var 0x563768879528 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56376887bba0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56376887bb68 <col:102> 'int' lvalue Var 0x563768878c88 'a' 'int'
|   |-BinaryOperator 0x56376887be58 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56376887bc70 <col:3> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56376887be40 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56376887be10 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56376887bd30 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56376887bce8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56376887bcd0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56376887bc90 <col:20> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56376887bd18 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56376887bd00 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56376887bcb0 <col:38> '_Bool' lvalue Var 0x563768878f70 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56376887bdc8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56376887bd80 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56376887bd50 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56376887bdf8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56376887bde0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56376887bda8 <col:66> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56376887c168 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56376887be78 <col:3> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56376887c150 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56376887c120 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56376887c040 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56376887bf38 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56376887bef0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56376887bed8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56376887be98 <col:20> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56376887bf20 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56376887bf08 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56376887beb8 <col:38> '_Bool' lvalue Var 0x563768878f70 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56376887c020 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56376887bfd8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56376887bfc0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56376887bf58 <col:56> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56376887c008 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56376887bff0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56376887bfa0 <col:74> '_Bool' lvalue Var 0x5637688791c8 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56376887c0d8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56376887c090 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56376887c060 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56376887c108 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56376887c0f0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56376887c0b8 <col:102> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56376887c370 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56376887c188 <col:3> '_Bool' lvalue Var 0x563768878f70 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56376887c358 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56376887c328 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56376887c248 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56376887c200 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56376887c1e8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56376887c1a8 <col:20> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56376887c230 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56376887c218 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56376887c1c8 <col:38> '_Bool' lvalue Var 0x563768878f70 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56376887c2e0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56376887c298 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56376887c268 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56376887c310 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56376887c2f8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56376887c2c0 <col:66> '_Bool' lvalue Var 0x563768878f70 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56376887c658 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56376887c390 <col:3> '_Bool' lvalue Var 0x5637688791c8 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56376887c640 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56376887c610 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56376887c530 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56376887c450 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56376887c408 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56376887c3f0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56376887c3b0 <col:20> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56376887c438 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56376887c420 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56376887c3d0 <col:38> '_Bool' lvalue Var 0x563768878f70 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56376887c510 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56376887c4c8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56376887c4b0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56376887c470 <col:56> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56376887c4f8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56376887c4e0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56376887c490 <col:74> '_Bool' lvalue Var 0x5637688791c8 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56376887c5c8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56376887c580 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56376887c550 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56376887c5f8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56376887c5e0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56376887c5a8 <col:102> '_Bool' lvalue Var 0x5637688791c8 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x56376887c6b0 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56376887c698 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56376887c678 <col:3> 'void ()' Function 0x56376881f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56376887c708 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56376887c6f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56376887c6d0 <col:3> 'void ()' Function 0x56376881f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56376887c7c0 <line:758:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56376887c728 <col:3> 'int' lvalue Var 0x5637688786e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56376887c7a0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56376887c788 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56376887c748 <col:22> 'int' lvalue Var 0x5637688786e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56376887c768 <col:41> 'int' 1
|   |-CallExpr 0x56376887c818 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56376887c800 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56376887c7e0 <col:3> 'void ()' Function 0x56376881f410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56376887c890 <line:760:3, col:36>
|     `-CallExpr 0x56376887c870 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56376887c858 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56376887c838 <col:10> 'void *(void)' Function 0x56376881ee68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56376887c9e8 prev 0x563768878210 <line:762:1, line:781:1> line:762:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x56376887c950 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56376887dc20 <line:763:1, line:781:1>
|   |-CallExpr 0x56376887cac8 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56376887cab0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56376887ca90 <col:3> 'void ()' Function 0x56376881f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56376887cb28 <line:765:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56376887cae8 <col:3> 'int' lvalue Var 0x5637688798b0 'y' 'int'
|   | `-IntegerLiteral 0x56376887cb08 <col:7> 'int' 1
|   |-CallExpr 0x56376887cb80 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56376887cb68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56376887cb48 <col:3> 'void ()' Function 0x56376881f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56376887cbd8 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56376887cbc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56376887cba0 <col:3> 'void ()' Function 0x56376881f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56376887cc50 <line:768:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56376887cbf8 <col:3> 'int' lvalue Var 0x563768878a48 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x56376887cc38 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56376887cc18 <col:25> 'int' lvalue Var 0x5637688799d0 'z' 'int'
|   |-CallExpr 0x56376887cca8 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56376887cc90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56376887cc70 <col:3> 'void ()' Function 0x56376881f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56376887cd00 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56376887cce8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56376887ccc8 <col:3> 'void ()' Function 0x56376881f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56376887cff8 <line:771:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56376887cd20 <col:3> 'int' lvalue Var 0x563768878c88 'a' 'int'
|   | `-ConditionalOperator 0x56376887cfc8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56376887cde0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56376887cd98 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56376887cd80 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56376887cd40 <col:7> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56376887cdc8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56376887cdb0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56376887cd60 <col:25> '_Bool' lvalue Var 0x563768878fe8 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x56376887cfb0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56376887ce00 <col:42> 'int' lvalue Var 0x563768879430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x56376887cf80 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56376887cf50 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56376887cec0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56376887ce78 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56376887ce60 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56376887ce20 <col:55> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56376887cea8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56376887ce90 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56376887ce40 <col:73> '_Bool' lvalue Var 0x563768879240 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56376887cf20 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56376887cee0 <col:90> 'int' lvalue Var 0x563768879528 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56376887cf38 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56376887cf00 <col:102> 'int' lvalue Var 0x563768878c88 'a' 'int'
|   |-BinaryOperator 0x56376887d200 <line:772:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56376887d018 <col:3> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56376887d1e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56376887d1b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56376887d0d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56376887d090 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56376887d078 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56376887d038 <col:20> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56376887d0c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56376887d0a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56376887d058 <col:38> '_Bool' lvalue Var 0x563768878fe8 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56376887d170 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56376887d128 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56376887d0f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56376887d1a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56376887d188 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56376887d150 <col:66> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56376887d4e8 <line:773:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56376887d220 <col:3> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56376887d4d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56376887d4a0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56376887d3c0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56376887d2e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56376887d298 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56376887d280 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56376887d240 <col:20> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56376887d2c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56376887d2b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56376887d260 <col:38> '_Bool' lvalue Var 0x563768878fe8 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x56376887d3a0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56376887d358 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56376887d340 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56376887d300 <col:56> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56376887d388 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56376887d370 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56376887d320 <col:74> '_Bool' lvalue Var 0x563768879240 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56376887d458 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56376887d410 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56376887d3e0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56376887d488 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56376887d470 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56376887d438 <col:102> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56376887d6f0 <line:774:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56376887d508 <col:3> '_Bool' lvalue Var 0x563768878fe8 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56376887d6d8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56376887d6a8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56376887d5c8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56376887d580 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56376887d568 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56376887d528 <col:20> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56376887d5b0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56376887d598 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56376887d548 <col:38> '_Bool' lvalue Var 0x563768878fe8 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56376887d660 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56376887d618 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56376887d5e8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56376887d690 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56376887d678 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56376887d640 <col:66> '_Bool' lvalue Var 0x563768878fe8 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56376887d9d8 <line:775:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56376887d710 <col:3> '_Bool' lvalue Var 0x563768879240 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56376887d9c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56376887d990 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56376887d8b0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56376887d7d0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56376887d788 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56376887d770 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56376887d730 <col:20> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56376887d7b8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56376887d7a0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56376887d750 <col:38> '_Bool' lvalue Var 0x563768878fe8 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x56376887d890 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56376887d848 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56376887d830 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56376887d7f0 <col:56> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56376887d878 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56376887d860 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56376887d810 <col:74> '_Bool' lvalue Var 0x563768879240 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56376887d948 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56376887d900 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56376887d8d0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56376887d978 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56376887d960 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56376887d928 <col:102> '_Bool' lvalue Var 0x563768879240 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x56376887da30 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56376887da18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56376887d9f8 <col:3> 'void ()' Function 0x56376881f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56376887da88 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56376887da70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56376887da50 <col:3> 'void ()' Function 0x56376881f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56376887db40 <line:778:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56376887daa8 <col:3> 'int' lvalue Var 0x5637688786e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56376887db20 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56376887db08 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56376887dac8 <col:22> 'int' lvalue Var 0x5637688786e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56376887dae8 <col:41> 'int' 1
|   |-CallExpr 0x56376887db98 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56376887db80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56376887db60 <col:3> 'void ()' Function 0x56376881f410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56376887dc10 <line:780:3, col:36>
|     `-CallExpr 0x56376887dbf0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56376887dbd8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56376887dbb8 <col:10> 'void *(void)' Function 0x56376881ee68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56376887dd68 prev 0x563768878368 <line:782:1, line:814:1> line:782:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x56376887dcd0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x563768881948 <line:783:1, line:814:1>
|   |-CallExpr 0x56376887de48 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56376887de30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56376887de10 <col:3> 'void ()' Function 0x56376881f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56376887dea8 <line:785:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56376887de68 <col:3> 'int' lvalue Var 0x5637688799d0 'z' 'int'
|   | `-IntegerLiteral 0x56376887de88 <col:7> 'int' 1
|   |-CallExpr 0x56376887df00 <line:786:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56376887dee8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56376887dec8 <col:3> 'void ()' Function 0x56376881f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56376887df58 <line:787:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56376887df40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56376887df20 <col:3> 'void ()' Function 0x56376881f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56376887e030 <line:788:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56376887df78 <col:3> '_Bool' lvalue Var 0x563768879a68 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x56376887e018 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56376887dff8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56376887dfe0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56376887dfc0 <col:19> 'void *(void)' Function 0x56376881ee68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56376887e0e0 <line:789:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56376887e050 <col:3> '_Bool' lvalue Var 0x563768879ae0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x56376887e0c8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56376887e0a8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56376887e090 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56376887e070 <col:19> 'void *(void)' Function 0x56376881ee68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56376887e158 <line:790:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x56376887e100 <col:3> '_Bool' lvalue Var 0x563768878d20 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x56376887e140 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56376887e120 <col:21> '_Bool' lvalue Var 0x563768879ae0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x56376887e1d0 <line:791:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56376887e178 <col:3> 'int' lvalue Var 0x563768878da0 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x56376887e1b8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56376887e198 <col:15> 'int' lvalue Var 0x563768878c88 'a' 'int'
|   |-BinaryOperator 0x56376887e608 <line:792:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x56376887e1f0 <col:3> 'int' lvalue Var 0x563768878c88 'a' 'int'
|   | `-ConditionalOperator 0x56376887e5d8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x56376887e400 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x56376887e320 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x56376887e248 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x56376887e230 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x56376887e210 <col:8> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x56376887e300 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x56376887e298 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x56376887e280 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x56376887e260 <col:27> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x56376887e2e8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x56376887e2d0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x56376887e2b0 <col:46> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x56376887e3e0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x56376887e378 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x56376887e360 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x56376887e340 <col:65> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x56376887e3c8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x56376887e3b0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x56376887e390 <col:84> '_Bool' lvalue Var 0x5637688792b8 'a$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x56376887e5c0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56376887e420 <col:101> 'int' lvalue Var 0x563768878c88 'a' 'int'
|   |   `-ParenExpr 0x56376887e5a0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x56376887e570 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x56376887e4e0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56376887e498 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56376887e480 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56376887e440 <col:106> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56376887e4c8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56376887e4b0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56376887e460 <col:124> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56376887e540 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56376887e500 <col:141> 'int' lvalue Var 0x563768879430 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x56376887e558 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56376887e520 <col:153> 'int' lvalue Var 0x563768879528 'a$w_buff1' 'int'
|   |-BinaryOperator 0x56376887eb18 <line:793:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56376887e628 <col:3> 'int' lvalue Var 0x563768879430 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x56376887eae8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56376887eab8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56376887eaa0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56376887e648 <col:15> '_Bool' lvalue Var 0x563768879ae0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56376887ead0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56376887e668 <col:31> 'int' lvalue Var 0x563768879430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x56376887ea80 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56376887ea50 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56376887e878 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56376887e798 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56376887e6c0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56376887e6a8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56376887e688 <col:45> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56376887e778 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56376887e710 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56376887e6f8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56376887e6d8 <col:64> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x56376887e760 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56376887e748 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56376887e728 <col:83> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56376887e858 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56376887e7f0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56376887e7d8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56376887e7b8 <col:102> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x56376887e840 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56376887e828 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56376887e808 <col:121> '_Bool' lvalue Var 0x5637688792b8 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56376887ea38 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56376887e898 <col:138> 'int' lvalue Var 0x563768879430 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x56376887ea18 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56376887e9e8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56376887e958 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56376887e910 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56376887e8f8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56376887e8b8 <col:151> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56376887e940 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56376887e928 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56376887e8d8 <col:169> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x56376887e9b8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56376887e978 <col:186> 'int' lvalue Var 0x563768879430 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x56376887e9d0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56376887e998 <col:198> 'int' lvalue Var 0x563768879430 'a$w_buff0' 'int'
|   |-BinaryOperator 0x56376887f048 <line:794:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56376887eb38 <col:3> 'int' lvalue Var 0x563768879528 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x56376887f018 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56376887efe8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56376887efd0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56376887eb58 <col:15> '_Bool' lvalue Var 0x563768879ae0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56376887f000 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56376887eb78 <col:31> 'int' lvalue Var 0x563768879528 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x56376887ef90 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56376887ef60 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56376887ed88 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56376887eca8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56376887ebd0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56376887ebb8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56376887eb98 <col:45> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56376887ec88 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56376887ec20 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56376887ec08 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56376887ebe8 <col:64> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x56376887ec70 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56376887ec58 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56376887ec38 <col:83> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56376887ed68 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56376887ed00 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56376887ece8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56376887ecc8 <col:102> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x56376887ed50 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56376887ed38 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56376887ed18 <col:121> '_Bool' lvalue Var 0x5637688792b8 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56376887ef48 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56376887eda8 <col:138> 'int' lvalue Var 0x563768879528 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x56376887ef28 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56376887eef8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56376887ee68 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56376887ee20 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56376887ee08 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56376887edc8 <col:151> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56376887ee50 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56376887ee38 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56376887ede8 <col:169> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x56376887eec8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56376887ee88 <col:186> 'int' lvalue Var 0x563768879528 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x56376887eee0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56376887eea8 <col:198> 'int' lvalue Var 0x563768879528 'a$w_buff1' 'int'
|   |-BinaryOperator 0x56376887f5f0 <line:795:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56376887f068 <col:3> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56376887f5d8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56376887f5a8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56376887f560 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56376887f548 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56376887f088 <col:20> '_Bool' lvalue Var 0x563768879ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56376887f590 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56376887f578 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56376887f0a8 <col:36> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x56376887f528 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56376887f4f8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56376887f2b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56376887f1d8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56376887f100 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56376887f0e8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56376887f0c8 <col:55> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56376887f1b8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56376887f150 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56376887f138 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56376887f118 <col:74> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x56376887f1a0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56376887f188 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56376887f168 <col:93> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56376887f298 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56376887f230 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56376887f218 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56376887f1f8 <col:112> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x56376887f280 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56376887f268 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56376887f248 <col:131> '_Bool' lvalue Var 0x5637688792b8 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x56376887f4e0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56376887f4c8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56376887f2d8 <col:148> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x56376887f4a8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56376887f478 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56376887f398 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56376887f350 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56376887f338 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56376887f2f8 <col:166> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56376887f380 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56376887f368 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56376887f318 <col:184> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x56376887f430 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56376887f3e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56376887f3b8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56376887f460 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56376887f448 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56376887f410 <col:212> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56376887fbb8 <line:796:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56376887f610 <col:3> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56376887fba0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56376887fb70 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56376887fb28 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56376887fb10 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56376887f630 <col:20> '_Bool' lvalue Var 0x563768879ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56376887fb58 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56376887fb40 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56376887f650 <col:36> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x56376887faf0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56376887fac0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56376887f860 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56376887f780 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56376887f6a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56376887f690 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56376887f670 <col:55> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56376887f760 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56376887f6f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56376887f6e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56376887f6c0 <col:74> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x56376887f748 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56376887f730 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56376887f710 <col:93> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56376887f840 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56376887f7d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56376887f7c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56376887f7a0 <col:112> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x56376887f828 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56376887f810 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56376887f7f0 <col:131> '_Bool' lvalue Var 0x5637688792b8 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x56376887faa8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56376887fa90 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56376887f880 <col:148> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x56376887fa70 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56376887fa40 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56376887f940 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56376887f8f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56376887f8e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56376887f8a0 <col:166> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56376887f928 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56376887f910 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56376887f8c0 <col:184> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x56376887fa10 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56376887f990 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56376887f960 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56376887fa28 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56376887f9e8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56376887f9b8 <col:219> 'int' 0
|   |-BinaryOperator 0x563768880170 <line:797:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56376887fbd8 <col:3> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x563768880158 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563768880128 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5637688800e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5637688800c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56376887fbf8 <col:20> '_Bool' lvalue Var 0x563768879ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563768880110 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5637688800f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56376887fc18 <col:36> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x5637688800a8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x563768880078 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56376887fe28 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56376887fd48 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56376887fc70 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56376887fc58 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56376887fc38 <col:55> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56376887fd28 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56376887fcc0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56376887fca8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56376887fc88 <col:74> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x56376887fd10 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56376887fcf8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56376887fcd8 <col:93> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56376887fe08 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56376887fda0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56376887fd88 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56376887fd68 <col:112> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x56376887fdf0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56376887fdd8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56376887fdb8 <col:131> '_Bool' lvalue Var 0x5637688792b8 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x563768880060 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563768880048 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56376887fe48 <col:148> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x563768880028 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56376887fff8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56376887ff08 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56376887fec0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56376887fea8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56376887fe68 <col:166> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56376887fef0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56376887fed8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56376887fe88 <col:184> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x56376887ffa0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56376887ff58 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56376887ff28 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56376887ffe0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56376887ffb8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56376887ff80 <col:212> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x563768880738 <line:798:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x563768880190 <col:3> '_Bool' lvalue Var 0x5637688792b8 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x563768880720 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5637688806f0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5637688806a8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563768880690 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5637688801b0 <col:20> '_Bool' lvalue Var 0x563768879ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5637688806d8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5637688806c0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5637688801d0 <col:36> '_Bool' lvalue Var 0x5637688792b8 'a$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x563768880670 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x563768880640 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5637688803e0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563768880300 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563768880228 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563768880210 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5637688801f0 <col:55> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5637688802e0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563768880278 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563768880260 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563768880240 <col:74> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5637688802c8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5637688802b0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563768880290 <col:93> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5637688803c0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563768880358 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563768880340 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563768880320 <col:112> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5637688803a8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563768880390 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563768880370 <col:131> '_Bool' lvalue Var 0x5637688792b8 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x563768880628 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563768880610 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563768880400 <col:148> '_Bool' lvalue Var 0x5637688792b8 'a$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x5637688805f0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5637688805c0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5637688804c0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563768880478 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563768880460 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563768880420 <col:166> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5637688804a8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563768880490 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563768880440 <col:184> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x563768880590 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563768880510 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5637688804e0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5637688805a8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x563768880568 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x563768880538 <col:219> 'int' 0
|   |-BinaryOperator 0x5637688807b0 <line:799:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563768880758 <col:3> 'int' lvalue Var 0x563768878b68 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x563768880798 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563768880778 <col:25> 'int' lvalue Var 0x563768878c88 'a' 'int'
|   |-BinaryOperator 0x5637688808e0 <line:800:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5637688807d0 <col:3> 'int' lvalue Var 0x563768878c88 'a' 'int'
|   | `-ConditionalOperator 0x5637688808b0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x563768880868 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563768880850 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5637688807f0 <col:7> '_Bool' lvalue Var 0x563768878d20 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x563768880880 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563768880810 <col:25> 'int' lvalue Var 0x563768878da0 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x563768880898 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x563768880830 <col:37> 'int' lvalue Var 0x563768878c88 'a' 'int'
|   |-BinaryOperator 0x563768880978 <line:801:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x563768880900 <col:3> '_Bool' lvalue Var 0x563768878d20 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x563768880950 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563768880920 <col:28> 'int' 0
|   |-CallExpr 0x5637688809d0 <line:802:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5637688809b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563768880998 <col:3> 'void ()' Function 0x56376881f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563768880a28 <line:803:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563768880a10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5637688809f0 <col:3> 'void ()' Function 0x56376881f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563768880d10 <line:804:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x563768880a48 <col:3> 'int' lvalue Var 0x563768878c88 'a' 'int'
|   | `-ConditionalOperator 0x563768880ce0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x563768880b08 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x563768880ac0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x563768880aa8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x563768880a68 <col:7> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x563768880af0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x563768880ad8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x563768880a88 <col:25> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x563768880cc8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563768880b28 <col:42> 'int' lvalue Var 0x563768879430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x563768880ca8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x563768880c78 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x563768880be8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563768880ba0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563768880b88 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563768880b48 <col:55> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563768880bd0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563768880bb8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563768880b68 <col:73> '_Bool' lvalue Var 0x5637688792b8 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x563768880c48 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563768880c08 <col:90> 'int' lvalue Var 0x563768879528 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x563768880c60 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563768880c28 <col:102> 'int' lvalue Var 0x563768878c88 'a' 'int'
|   |-BinaryOperator 0x563768880f18 <line:805:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563768880d30 <col:3> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563768880f00 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563768880ed0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563768880df0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563768880da8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563768880d90 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563768880d50 <col:20> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563768880dd8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563768880dc0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563768880d70 <col:38> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x563768880e88 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563768880e40 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563768880e10 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563768880eb8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563768880ea0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563768880e68 <col:66> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563768881210 <line:806:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563768880f38 <col:3> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5637688811f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5637688811c8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5637688810e8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563768881008 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563768880fb0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563768880f98 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563768880f58 <col:20> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563768880ff0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563768880fc8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563768880f78 <col:38> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5637688810c8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563768881080 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563768881068 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563768881028 <col:56> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5637688810b0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563768881098 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563768881048 <col:74> '_Bool' lvalue Var 0x5637688792b8 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x563768881180 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563768881138 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563768881108 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5637688811b0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563768881198 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563768881160 <col:102> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x563768881418 <line:807:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563768881230 <col:3> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x563768881400 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5637688813d0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5637688812f0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5637688812a8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563768881290 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563768881250 <col:20> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5637688812d8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5637688812c0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563768881270 <col:38> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x563768881388 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563768881340 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563768881310 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5637688813b8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5637688813a0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563768881368 <col:66> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x563768881700 <line:808:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563768881438 <col:3> '_Bool' lvalue Var 0x5637688792b8 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5637688816e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5637688816b8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5637688815d8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5637688814f8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5637688814b0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563768881498 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563768881458 <col:20> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5637688814e0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5637688814c8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563768881478 <col:38> '_Bool' lvalue Var 0x563768879060 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5637688815b8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563768881570 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563768881558 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563768881518 <col:56> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5637688815a0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563768881588 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563768881538 <col:74> '_Bool' lvalue Var 0x5637688792b8 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x563768881670 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563768881628 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5637688815f8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5637688816a0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563768881688 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563768881650 <col:102> '_Bool' lvalue Var 0x5637688792b8 'a$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x563768881758 <line:809:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563768881740 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563768881720 <col:3> 'void ()' Function 0x56376881f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5637688817b0 <line:810:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563768881798 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563768881778 <col:3> 'void ()' Function 0x56376881f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563768881868 <line:811:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5637688817d0 <col:3> 'int' lvalue Var 0x5637688786e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x563768881848 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x563768881830 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5637688817f0 <col:22> 'int' lvalue Var 0x5637688786e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x563768881810 <col:41> 'int' 1
|   |-CallExpr 0x5637688818c0 <line:812:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5637688818a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563768881888 <col:3> 'void ()' Function 0x56376881f410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x563768881938 <line:813:3, col:36>
|     `-CallExpr 0x563768881918 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x563768881900 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5637688818e0 <col:10> 'void *(void)' Function 0x56376881ee68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x563768881a68 prev 0x563768878430 <line:815:1, line:817:1> line:815:6 fence 'void ()'
| `-CompoundStmt 0x563768881b08 <line:816:1, line:817:1>
|-FunctionDecl 0x563768881b38 prev 0x5637688784f0 <line:818:1, line:820:1> line:818:6 isync 'void ()'
| `-CompoundStmt 0x563768881bd8 <line:819:1, line:820:1>
|-FunctionDecl 0x563768881c08 prev 0x5637688785b0 <line:821:1, line:823:1> line:821:6 lwfence 'void ()'
| `-CompoundStmt 0x563768881ca8 <line:822:1, line:823:1>
`-FunctionDecl 0x563768881d18 <line:824:1, line:850:1> line:824:5 main 'int ()'
  `-CompoundStmt 0x563768883c80 <line:825:1, line:850:1>
    |-DeclStmt 0x563768881e30 <line:826:3, col:18>
    | `-VarDecl 0x563768881dc8 <col:3, col:13> col:13 used t1331 'pthread_t':'unsigned long'
    |-CallExpr 0x563768882048 <line:827:3, col:54> 'int'
    | |-ImplicitCastExpr 0x563768882030 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563768881e48 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56376885f8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x563768881e88 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x563768881e68 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x563768881dc8 't1331' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x563768882088 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x563768881f00 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x563768881ed8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x563768881ea0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5637688820a0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563768881f20 <col:39> 'void *(void *)' Function 0x563768879bf8 'P0' 'void *(void *)'
    | `-ParenExpr 0x563768881fa0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x563768881f78 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x563768881f40 <col:52> 'int' 0
    |-DeclStmt 0x563768882130 <line:828:3, col:18>
    | `-VarDecl 0x5637688820c8 <col:3, col:13> col:13 used t1332 'pthread_t':'unsigned long'
    |-CallExpr 0x5637688822d8 <line:829:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5637688822c0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563768882148 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56376885f8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x563768882188 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x563768882168 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5637688820c8 't1332' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x563768882318 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x563768882200 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5637688821d8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5637688821a0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x563768882330 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563768882220 <col:39> 'void *(void *)' Function 0x56376887b650 'P1' 'void *(void *)'
    | `-ParenExpr 0x5637688822a0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x563768882278 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x563768882240 <col:52> 'int' 0
    |-DeclStmt 0x5637688823c0 <line:830:3, col:18>
    | `-VarDecl 0x563768882358 <col:3, col:13> col:13 used t1333 'pthread_t':'unsigned long'
    |-CallExpr 0x563768882568 <line:831:3, col:54> 'int'
    | |-ImplicitCastExpr 0x563768882550 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5637688823d8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56376885f8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x563768882418 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5637688823f8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x563768882358 't1333' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5637688825a8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x563768882490 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x563768882468 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x563768882430 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5637688825c0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5637688824b0 <col:39> 'void *(void *)' Function 0x56376887c9e8 'P2' 'void *(void *)'
    | `-ParenExpr 0x563768882530 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x563768882508 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5637688824d0 <col:52> 'int' 0
    |-DeclStmt 0x563768882650 <line:832:3, col:18>
    | `-VarDecl 0x5637688825e8 <col:3, col:13> col:13 used t1334 'pthread_t':'unsigned long'
    |-CallExpr 0x5637688827f8 <line:833:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5637688827e0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563768882668 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56376885f8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5637688826a8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x563768882688 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5637688825e8 't1334' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x563768882838 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x563768882720 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5637688826f8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5637688826c0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x563768882850 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563768882740 <col:39> 'void *(void *)' Function 0x56376887dd68 'P3' 'void *(void *)'
    | `-ParenExpr 0x5637688827c0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x563768882798 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x563768882760 <col:52> 'int' 0
    |-CallExpr 0x5637688828a0 <line:834:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563768882888 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563768882868 <col:3> 'void ()' Function 0x56376881f350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563768882970 <line:835:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5637688828c0 <col:3> '_Bool' lvalue Var 0x563768879618 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x563768882958 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x563768882938 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x563768882920 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5637688828e0 <col:21> 'int' lvalue Var 0x5637688786e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x563768882900 <col:41> 'int' 4
    |-CallExpr 0x5637688829c8 <line:836:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5637688829b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563768882990 <col:3> 'void ()' Function 0x56376881f410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563768882a40 <line:837:3, col:36> 'void'
    | |-ImplicitCastExpr 0x563768882a28 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5637688829e8 <col:3> 'void (int)' Function 0x56376881eca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x563768882a80 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x563768882a68 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x563768882a08 <col:21> '_Bool' lvalue Var 0x563768879618 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x563768882ad0 <line:838:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563768882ab8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563768882a98 <col:3> 'void ()' Function 0x56376881f350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563768882db8 <line:839:3, col:103> 'int' '='
    | |-DeclRefExpr 0x563768882af0 <col:3> 'int' lvalue Var 0x563768878c88 'a' 'int'
    | `-ConditionalOperator 0x563768882d88 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x563768882bb0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x563768882b68 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x563768882b50 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x563768882b10 <col:7> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x563768882b98 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x563768882b80 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x563768882b30 <col:25> '_Bool' lvalue Var 0x563768878e18 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x563768882d70 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x563768882bd0 <col:42> 'int' lvalue Var 0x563768879430 'a$w_buff0' 'int'
    |   `-ParenExpr 0x563768882d50 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x563768882d20 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x563768882c90 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x563768882c48 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x563768882c30 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x563768882bf0 <col:55> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x563768882c78 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x563768882c60 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x563768882c10 <col:73> '_Bool' lvalue Var 0x5637688790d8 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x563768882cf0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x563768882cb0 <col:90> 'int' lvalue Var 0x563768879528 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x563768882d08 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x563768882cd0 <col:102> 'int' lvalue Var 0x563768878c88 'a' 'int'
    |-BinaryOperator 0x563768882fc0 <line:840:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x563768882dd8 <col:3> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x563768882fa8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563768882f78 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x563768882e98 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x563768882e50 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x563768882e38 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x563768882df8 <col:20> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x563768882e80 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x563768882e68 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x563768882e18 <col:38> '_Bool' lvalue Var 0x563768878e18 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563768882f30 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563768882ee8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563768882eb8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x563768882f60 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563768882f48 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563768882f10 <col:66> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5637688832b8 <line:841:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x563768882fe0 <col:3> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5637688832a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563768883270 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x563768883190 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5637688830b0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x563768883068 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x563768883050 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x563768883010 <col:20> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x563768883098 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x563768883080 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x563768883030 <col:38> '_Bool' lvalue Var 0x563768878e18 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x563768883170 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x563768883128 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x563768883110 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5637688830d0 <col:56> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x563768883158 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x563768883140 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5637688830f0 <col:74> '_Bool' lvalue Var 0x5637688790d8 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563768883228 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5637688831e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5637688831b0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x563768883258 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563768883240 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563768883208 <col:102> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5637688834c0 <line:842:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5637688832d8 <col:3> '_Bool' lvalue Var 0x563768878e18 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5637688834a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563768883478 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x563768883398 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x563768883350 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x563768883338 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5637688832f8 <col:20> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x563768883380 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x563768883368 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x563768883318 <col:38> '_Bool' lvalue Var 0x563768878e18 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563768883430 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5637688833e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5637688833b8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x563768883460 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563768883448 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563768883410 <col:66> '_Bool' lvalue Var 0x563768878e18 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5637688837a8 <line:843:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5637688834e0 <col:3> '_Bool' lvalue Var 0x5637688790d8 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x563768883790 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563768883760 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x563768883680 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5637688835a0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x563768883558 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x563768883540 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x563768883500 <col:20> '_Bool' lvalue Var 0x5637688794a8 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x563768883588 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x563768883570 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x563768883520 <col:38> '_Bool' lvalue Var 0x563768878e18 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x563768883660 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x563768883618 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x563768883600 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5637688835c0 <col:56> '_Bool' lvalue Var 0x5637688795a0 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x563768883648 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x563768883630 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5637688835e0 <col:74> '_Bool' lvalue Var 0x5637688790d8 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563768883718 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5637688836d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5637688836a0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x563768883748 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563768883730 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5637688836f8 <col:102> '_Bool' lvalue Var 0x5637688790d8 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x563768883800 <line:844:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5637688837e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5637688837c8 <col:3> 'void ()' Function 0x56376881f410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563768883858 <line:845:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563768883840 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563768883820 <col:3> 'void ()' Function 0x56376881f350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563768883b28 <line:846:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x563768883878 <col:3> '_Bool' lvalue Var 0x563768879690 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x563768883b10 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x563768883af8 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x563768883ad8 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x563768883ab8 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x563768883a20 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x563768883988 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x5637688838f0 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x5637688838d8 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x563768883898 <col:23> 'int' lvalue Var 0x563768878808 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x5637688838b8 <col:46> 'int' 0
    |         | | `-BinaryOperator 0x563768883968 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x563768883950 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x563768883910 <col:51> 'int' lvalue Var 0x563768878928 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x563768883930 <col:74> 'int' 0
    |         | `-BinaryOperator 0x563768883a00 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5637688839e8 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5637688839a8 <col:79> 'int' lvalue Var 0x563768878a48 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x5637688839c8 <col:102> 'int' 0
    |         `-BinaryOperator 0x563768883a98 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x563768883a80 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x563768883a40 <col:107> 'int' lvalue Var 0x563768878b68 '__unbuffered_p3_EAX' 'int'
    |           `-IntegerLiteral 0x563768883a60 <col:130> 'int' 0
    |-CallExpr 0x563768883b80 <line:847:3, col:25> 'void'
    | `-ImplicitCastExpr 0x563768883b68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563768883b48 <col:3> 'void ()' Function 0x56376881f410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563768883bf8 <line:848:3, col:36> 'void'
    | |-ImplicitCastExpr 0x563768883be0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563768883ba0 <col:3> 'void (int)' Function 0x56376881f0d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x563768883c38 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x563768883c20 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x563768883bc0 <col:21> '_Bool' lvalue Var 0x563768879690 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x563768883c70 <line:849:3, col:10>
      `-IntegerLiteral 0x563768883c50 <col:10> 'int' 0
