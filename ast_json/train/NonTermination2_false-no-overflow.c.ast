TranslationUnitDecl 0x557c704d64d8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x557c704d6d98 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x557c704d6a70 '__int128'
|-TypedefDecl 0x557c704d6e08 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x557c704d6a90 'unsigned __int128'
|-TypedefDecl 0x557c704d7110 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x557c704d6ee0 'struct __NSConstantString_tag'
|   `-Record 0x557c704d6e60 '__NSConstantString_tag'
|-TypedefDecl 0x557c704d71b8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x557c704d7170 'char *'
|   `-BuiltinType 0x557c704d6570 'char'
|-TypedefDecl 0x557c70516240 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x557c704d7450 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x557c704d7290 'struct __va_list_tag'
|     `-Record 0x557c704d7210 '__va_list_tag'
|-EnumDecl 0x557c70516298 <termination-crafted/NonTermination2_false-no-overflow.c:7:9, col:26> col:9
| |-EnumConstantDecl 0x557c70516368 <col:15> col:15 false 'int'
| `-EnumConstantDecl 0x557c705163b8 <col:22> col:22 true 'int'
|-TypedefDecl 0x557c70516470 <col:1, col:28> col:28 bool 'enum bool':'bool'
| `-ElaboratedType 0x557c70516410 'enum bool' sugar
|   `-EnumType 0x557c70516340 'bool'
|     `-Enum 0x557c70516298 ''
|-FunctionDecl 0x557c705165b8 <line:9:1, col:38> col:12 used __VERIFIER_nondet_int 'int (void)' extern
`-FunctionDecl 0x557c705166f8 <line:11:1, line:19:1> line:11:5 main 'int ()'
  `-CompoundStmt 0x557c70516c78 <col:12, line:19:1>
    |-DeclStmt 0x557c705168b0 <line:12:2, col:13>
    | |-VarDecl 0x557c705167b0 <col:2, col:6> col:6 used x 'int'
    | `-VarDecl 0x557c70516830 <col:2, col:9> col:9 used oldx 'int'
    |-BinaryOperator 0x557c70516978 <line:13:5, col:31> 'int' '='
    | |-DeclRefExpr 0x557c705168c8 <col:5> 'int' lvalue Var 0x557c705167b0 'x' 'int'
    | `-CallExpr 0x557c70516958 <col:9, col:31> 'int'
    |   `-ImplicitCastExpr 0x557c70516940 <col:9> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x557c705168e8 <col:9> 'int (void)' Function 0x557c705165b8 '__VERIFIER_nondet_int' 'int (void)'
    |-WhileStmt 0x557c70516c30 <line:14:2, line:17:2>
    | |-BinaryOperator 0x557c70516ae0 <line:14:9, col:25> 'int' '&&'
    | | |-BinaryOperator 0x557c705169f0 <col:9, col:13> 'int' '>'
    | | | |-ImplicitCastExpr 0x557c705169d8 <col:9> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x557c70516998 <col:9> 'int' lvalue Var 0x557c705167b0 'x' 'int'
    | | | `-IntegerLiteral 0x557c705169b8 <col:13> 'int' 1
    | | `-BinaryOperator 0x557c70516ac0 <col:18, col:25> 'int' '>='
    | |   |-ImplicitCastExpr 0x557c70516aa8 <col:18> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x557c70516a10 <col:18> 'int' lvalue Var 0x557c705167b0 'x' 'int'
    | |   `-BinaryOperator 0x557c70516a88 <col:23, col:25> 'int' '*'
    | |     |-IntegerLiteral 0x557c70516a30 <col:23> 'int' 2
    | |     `-ImplicitCastExpr 0x557c70516a70 <col:25> 'int' <LValueToRValue>
    | |       `-DeclRefExpr 0x557c70516a50 <col:25> 'int' lvalue Var 0x557c70516830 'oldx' 'int'
    | `-CompoundStmt 0x557c70516c10 <col:31, line:17:2>
    |   |-BinaryOperator 0x557c70516b58 <line:15:3, col:10> 'int' '='
    |   | |-DeclRefExpr 0x557c70516b00 <col:3> 'int' lvalue Var 0x557c70516830 'oldx' 'int'
    |   | `-ImplicitCastExpr 0x557c70516b40 <col:10> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x557c70516b20 <col:10> 'int' lvalue Var 0x557c705167b0 'x' 'int'
    |   `-BinaryOperator 0x557c70516bf0 <line:16:3, col:29> 'int' '='
    |     |-DeclRefExpr 0x557c70516b78 <col:3> 'int' lvalue Var 0x557c705167b0 'x' 'int'
    |     `-CallExpr 0x557c70516bd0 <col:7, col:29> 'int'
    |       `-ImplicitCastExpr 0x557c70516bb8 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0x557c70516b98 <col:7> 'int (void)' Function 0x557c705165b8 '__VERIFIER_nondet_int' 'int (void)'
    `-ReturnStmt 0x557c70516c68 <line:18:2, col:9>
      `-IntegerLiteral 0x557c70516c48 <col:9> 'int' 0
