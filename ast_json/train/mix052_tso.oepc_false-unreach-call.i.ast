TranslationUnitDecl 0x564514913f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x564514914848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x564514914520 '__int128'
|-TypedefDecl 0x5645149148b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x564514914540 'unsigned __int128'
|-TypedefDecl 0x564514914bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x564514914990 'struct __NSConstantString_tag'
|   `-Record 0x564514914910 '__NSConstantString_tag'
|-TypedefDecl 0x564514914c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x564514914c20 'char *'
|   `-BuiltinType 0x564514914020 'char'
|-TypedefDecl 0x564514953b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x564514914f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x564514914d40 'struct __va_list_tag'
|     `-Record 0x564514914cc0 '__va_list_tag'
|-FunctionDecl 0x564514953ca0 <pthread-wmm/mix052_tso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x564514953bd0 <col:31> col:34 'int'
|-FunctionDecl 0x564514953e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x564514953f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5645149540d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x564514954048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x564514954308 <col:40, col:99>
|   |-IfStmt 0x5645149542d8 <col:42, col:88>
|   | |-UnaryOperator 0x5645149541b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5645149541a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x564514954180 <col:47> 'int' lvalue ParmVar 0x564514954048 'expression' 'int'
|   | `-CompoundStmt 0x5645149542c0 <col:59, col:88>
|   |   `-LabelStmt 0x5645149542a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x564514954238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x564514954220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5645149541d0 <col:68> 'void () __attribute__((noreturn))' Function 0x564514953f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5645149542f0 <col:89>
|   `-ReturnStmt 0x5645149542f8 <col:91>
|-FunctionDecl 0x564514954350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x564514954410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x564514954790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5645149544c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x564514954548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5645149545c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564514954648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x564514954850 <line:10:22>
|-FunctionDecl 0x56451497a8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5645149548c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x564514954940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5645149549c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564514954a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56451497a960 <line:13:22>
|-FunctionDecl 0x56451497ac10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56451497a9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x56451497aa50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x56451497aad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x56451497acc8 <line:15:22>
|-TypedefDecl 0x56451497ad38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5645149140e0 'unsigned char'
|-TypedefDecl 0x56451497ada8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x564514914100 'unsigned short'
|-TypedefDecl 0x56451497ae18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x564514914120 'unsigned int'
|-TypedefDecl 0x56451497ae88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x564514914140 'unsigned long'
|-TypedefDecl 0x56451497aef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x564514914040 'signed char'
|-TypedefDecl 0x56451497af68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5645149140e0 'unsigned char'
|-TypedefDecl 0x56451497afd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x564514914060 'short'
|-TypedefDecl 0x56451497b048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x564514914100 'unsigned short'
|-TypedefDecl 0x56451497b0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x564514914080 'int'
|-TypedefDecl 0x56451497b128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x564514914120 'unsigned int'
|-TypedefDecl 0x56451497b198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5645149140a0 'long'
|-TypedefDecl 0x56451497b208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x564514914140 'unsigned long'
|-TypedefDecl 0x56451497b278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5645149140a0 'long'
|-TypedefDecl 0x56451497b2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x564514914140 'unsigned long'
|-TypedefDecl 0x56451497b358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x564514914140 'unsigned long'
|-TypedefDecl 0x56451497b3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x564514914120 'unsigned int'
|-TypedefDecl 0x56451497b438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x564514914120 'unsigned int'
|-TypedefDecl 0x56451497b4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x564514914140 'unsigned long'
|-TypedefDecl 0x56451497b518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x564514914140 'unsigned long'
|-TypedefDecl 0x56451497b588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x564514914120 'unsigned int'
|-TypedefDecl 0x56451497b5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x564514914140 'unsigned long'
|-TypedefDecl 0x56451497b668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5645149140a0 'long'
|-TypedefDecl 0x56451497b6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5645149140a0 'long'
|-TypedefDecl 0x56451497b748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x564514914080 'int'
|-RecordDecl 0x56451497b7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x56451497b918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x56451497b9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x56451497b970 'struct __fsid_t' sugar
|   `-RecordType 0x56451497b820 '__fsid_t'
|     `-Record 0x56451497b7a0 ''
|-TypedefDecl 0x56451497ba58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5645149140a0 'long'
|-TypedefDecl 0x56451497bac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x564514914140 'unsigned long'
|-TypedefDecl 0x56451497bb38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x564514914140 'unsigned long'
|-TypedefDecl 0x56451497bba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x564514914120 'unsigned int'
|-TypedefDecl 0x56451497bc18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5645149140a0 'long'
|-TypedefDecl 0x56451497bc88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x564514914120 'unsigned int'
|-TypedefDecl 0x56451497bcf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5645149140a0 'long'
|-TypedefDecl 0x56451497bd68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x564514914080 'int'
|-TypedefDecl 0x56451497bdd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x564514914080 'int'
|-TypedefDecl 0x56451497be48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x564514914080 'int'
|-TypedefDecl 0x56451497beb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5645149147a0 'void *'
|   `-BuiltinType 0x564514913fe0 'void'
|-TypedefDecl 0x56451497bf28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5645149140a0 'long'
|-TypedefDecl 0x56451497bf98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5645149140a0 'long'
|-TypedefDecl 0x56451497c008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5645149140a0 'long'
|-TypedefDecl 0x56451497c078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x564514914140 'unsigned long'
|-TypedefDecl 0x56451497c0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x564514914140 'unsigned long'
|-TypedefDecl 0x56451497c158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x564514914140 'unsigned long'
|-TypedefDecl 0x56451497c1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x564514914140 'unsigned long'
|-TypedefDecl 0x56451497c238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5645149140a0 'long'
|-TypedefDecl 0x56451497c2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5645149140a0 'long'
|-TypedefDecl 0x56451497c318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5645149140a0 'long'
|-TypedefDecl 0x56451497c388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x564514914140 'unsigned long'
|-TypedefDecl 0x56451497c418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x56451497c3e0 '__off64_t' sugar
|   |-Typedef 0x56451497b6d8 '__off64_t'
|   `-BuiltinType 0x5645149140a0 'long'
|-TypedefDecl 0x56451497c510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x56451497c4d0 '__quad_t *'
|   `-TypedefType 0x56451497c470 '__quad_t' sugar
|     |-Typedef 0x56451497b278 '__quad_t'
|     `-BuiltinType 0x5645149140a0 'long'
|-TypedefDecl 0x56451497c580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x564514914c20 'char *'
|   `-BuiltinType 0x564514914020 'char'
|-TypedefDecl 0x56451497c5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5645149140a0 'long'
|-TypedefDecl 0x56451497c660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x564514914120 'unsigned int'
|-FunctionDecl 0x56451497c7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x56451497c6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x56451497cae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x56451497cad8 <line:72:3, col:34>
|     `-CallExpr 0x56451497ca98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x56451497ca80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56451497ca10 <col:10> '<builtin fn type>' Function 0x56451497c880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x56451497cac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56451497ca30 <col:29> 'unsigned int' lvalue ParmVar 0x56451497c6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x56451497c880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x56451497c920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x56451497c990 <col:10> Implicit
| `-ConstAttr 0x56451497c9e8 <col:10> Implicit
|-FunctionDecl 0x56451497cc40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x56451497cb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x56451497cf58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x56451497cf48 <line:77:3, col:34>
|     `-CallExpr 0x56451497cf08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x56451497cef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56451497ce78 <col:10> '<builtin fn type>' Function 0x56451497cce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x56451497cf30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x56451497ce98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x56451497cb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x56451497cce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x56451497cd88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x56451497cdf8 <col:10> Implicit
| `-ConstAttr 0x56451497ce50 <col:10> Implicit
|-TypedefDecl 0x56451497cf88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x564514914140 'unsigned long'
|-TypedefDecl 0x56451497d018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x56451497cfe0 '__time_t' sugar
|   |-Typedef 0x56451497bc18 '__time_t'
|   `-BuiltinType 0x5645149140a0 'long'
|-RecordDecl 0x56451497d070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x56451497d128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x56451497d1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x56451497d248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x56451497d210 '__pid_t' sugar
|   |-Typedef 0x56451497b748 '__pid_t'
|   `-BuiltinType 0x564514914080 'int'
|-RecordDecl 0x56451497d2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x56451497d360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x56451497d3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x56451497d470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x56451497d4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x564514914140 'unsigned long'
|-RecordDecl 0x56451497d530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x56451497d7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x56451497f8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x56451497d810 'struct cpu_set_t' sugar
|   `-RecordType 0x56451497d5b0 'cpu_set_t'
|     `-Record 0x56451497d530 ''
|-FunctionDecl 0x56451497fb88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x56451497f958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56451497fa60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x56451497fc38 <line:107:19>
|-FunctionDecl 0x56451497fe10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x56451497fca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x56451497feb8 <col:69>
|-FunctionDecl 0x564514980030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x56451497ff20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5645149800d8 <col:64>
|-FunctionDecl 0x564514980398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x564514980140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564514980278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564514980448 <line:113:22>
|-FunctionDecl 0x5645149806c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5645149804b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5645149805a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x564514980778 <col:88>
|-FunctionDecl 0x564514980a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5645149807e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5645149808c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x564514980950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564514980b50 <col:62>
|-FunctionDecl 0x564514980cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x564514980bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x564514980d70 <col:63>
|-FunctionDecl 0x564514980e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x564514980f38 <col:47>
|-FunctionDecl 0x564514981040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x564514980fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5645149810e8 <col:69>
|-FunctionDecl 0x5645149811f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x564514981158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x564514981298 <col:69>
|-FunctionDecl 0x564514981558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564514981300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564514981438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x564514981608 <col:88>
|-TypedefDecl 0x564514981698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x564514981660 '__clock_t' sugar
|   |-Typedef 0x56451497ba58 '__clock_t'
|   `-BuiltinType 0x5645149140a0 'long'
|-TypedefDecl 0x564514981728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5645149816f0 '__clockid_t' sugar
|   |-Typedef 0x56451497be48 '__clockid_t'
|   `-BuiltinType 0x564514914080 'int'
|-TypedefDecl 0x5645149817b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x564514981780 '__timer_t' sugar
|   |-Typedef 0x56451497beb8 '__timer_t'
|   `-PointerType 0x5645149147a0 'void *'
|     `-BuiltinType 0x564514913fe0 'void'
|-RecordDecl 0x564514981810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5645149818e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x564514981950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5645149819b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x564514981a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x564514981a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x564514981af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x564514981b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x564514981bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x564514981c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x564514981c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x564514981cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x564514981d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x564514981e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x564514981e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x564514981f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x564514982100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5645149821a0 <col:45>
|-FunctionDecl 0x564514982380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x564514982270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x564514982428 <col:54>
|-FunctionDecl 0x564514982628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x564514982490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x564514982508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5645149826d8 <line:157:22>
| `-ConstAttr 0x564514982730 <col:63>
|-FunctionDecl 0x564514983560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564514982828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x564514983608 <col:56>
|-FunctionDecl 0x5645149839b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x564514983678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5645149836f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564514983770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x564514983868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x564514983a70 <col:54>
|-RecordDecl 0x564514983ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x564514983b78 parent 0x564514913f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x564514983dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x564514983e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x564514983ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x564514983f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x564514984038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x564514984158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x564514984100 'struct __locale_struct *'
|   `-ElaboratedType 0x564514984090 'struct __locale_struct' sugar
|     `-RecordType 0x564514983b50 'struct __locale_struct'
|       `-Record 0x564514983ac8 '__locale_struct'
|-TypedefDecl 0x564514984208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5645149841d0 '__locale_t' sugar
|   |-Typedef 0x564514984158 '__locale_t'
|   `-PointerType 0x564514984100 'struct __locale_struct *'
|     `-ElaboratedType 0x564514984090 'struct __locale_struct' sugar
|       `-RecordType 0x564514983b50 'struct __locale_struct'
|         `-Record 0x564514983ac8 '__locale_struct'
|-FunctionDecl 0x564514984610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x564514984278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5645149842f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564514984370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x564514984400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x564514984478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5645149846d8 <col:40>
|-FunctionDecl 0x5645149848c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5645149847a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x564514984970 <col:66>
|-FunctionDecl 0x564514984a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5645149849d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x564514984b28 <col:69>
|-FunctionDecl 0x564514984d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564514984b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564514984c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564514984e08 <col:52>
|-FunctionDecl 0x564514984fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564514984e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564514984f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564514985060 <col:55>
|-FunctionDecl 0x5645149851f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5645149850e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5645149852a0 <col:62>
|-FunctionDecl 0x564514985418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x564514985308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5645149854c0 <col:60>
|-FunctionDecl 0x564514985718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x564514985578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5645149855f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5645149857c8 <col:44>
|-FunctionDecl 0x5645149859d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x564514985830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5645149858b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x564514985a88 <col:49>
|-VarDecl 0x564514985b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x564514985c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x564514985c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x564514985d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x564514985e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x564514985f20 <col:42>
|-VarDecl 0x564514985f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x564514986010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x564514986198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x564514986088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x564514986240 <col:57>
|-FunctionDecl 0x564514986350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5645149862c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5645149863f8 <col:56>
|-FunctionDecl 0x564514987540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564514986478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5645149875e8 <col:59>
|-FunctionDecl 0x5645149876f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x564514987658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x564514987798 <col:48>
| `-ConstAttr 0x5645149877f0 <col:89>
|-FunctionDecl 0x564514987a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5645149878a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x564514987938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x564514987cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564514987b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564514987bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x564514987d68 <col:88>
|-FunctionDecl 0x564514987f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564514987dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564514987e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x564514987fb0 <col:88>
|-FunctionDecl 0x5645149881c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x564514988018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5645149880a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x564514988278 <line:208:22>
|-FunctionDecl 0x5645149885e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5645149882e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564514988360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5645149883f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x564514988480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5645149888e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5645149886e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5645149887c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x564514988998 <col:85>
|-FunctionDecl 0x564514988d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x564514988a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564514988b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x564514988c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x564514988e40 <col:52>
|-FunctionDecl 0x564514988fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x564514988ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x564514989060 <col:61>
|-FunctionDecl 0x564514989560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5645149890c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x564514989148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x564514989278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x564514989368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x564514989620 <col:62>
|-FunctionDecl 0x564514989838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x564514989688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x564514989718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5645149898e8 <line:221:22>
|-FunctionDecl 0x5645149899e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x564514989950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x564514989a90 <col:65>
|-TypedefDecl 0x564514989b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x564514914140 'unsigned long'
|-RecordDecl 0x564514989b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x564514989ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x564514989d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564514989db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x564514989d60 'union pthread_attr_t' sugar
|   `-RecordType 0x564514989be0 'union pthread_attr_t'
|     `-Record 0x564514989b58 'pthread_attr_t'
|-RecordDecl 0x564514989e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x564514989f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x56451498a000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x56451498a0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x56451498a050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x564514989e90 'struct __pthread_internal_list'
|     `-Record 0x564514989e10 '__pthread_internal_list'
|-RecordDecl 0x56451498a120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x56451498a1c8 parent 0x564514913f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x56451498a2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56451498a308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x56451498a370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x56451498a3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x56451498a440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x56451498a4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x56451498e580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x56451498e630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x56451498e720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x56451498e788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56451498e910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x56451498e8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x56451498a1a0 'pthread_mutex_t'
|     `-Record 0x56451498a120 ''
|-RecordDecl 0x56451498e980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x56451498eac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56451498eb28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56451498ebe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x56451498eb80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x56451498ea00 'pthread_mutexattr_t'
|     `-Record 0x56451498e980 ''
|-RecordDecl 0x56451498ec50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x56451498ecf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x56451498edc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56451498ee28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x56451498ee90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x56451498eef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x56451498ef60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x56451498efc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x56451498f030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x56451498f098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x56451498f150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix052_tso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix052_tso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x56451498f240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x56451498f2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x56451498f3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x56451498f380 'union pthread_cond_t' sugar
|   `-RecordType 0x56451498ecd0 'pthread_cond_t'
|     `-Record 0x56451498ec50 ''
|-RecordDecl 0x56451498f450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x56451498f590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56451498f5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56451498f6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x56451498f650 'union pthread_condattr_t' sugar
|   `-RecordType 0x56451498f4d0 'pthread_condattr_t'
|     `-Record 0x56451498f450 ''
|-TypedefDecl 0x56451498f738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x564514914120 'unsigned int'
|-TypedefDecl 0x56451498f7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x564514914080 'int'
|-RecordDecl 0x56451498f800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x56451498f8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x56451498f970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56451498f9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x56451498fa40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x56451498faa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x56451498fb10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x56451498fb78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x56451498fbe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x56451498fc48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x56451498fcb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x56451498fd18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x56451498fd80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x56451498fe30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix052_tso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix052_tso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x56451498fed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56451498ff40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564514990090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x564514990030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x56451498f880 'pthread_rwlock_t'
|     `-Record 0x56451498f800 ''
|-RecordDecl 0x564514990100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x564514990240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5645149902a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564514990360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x564514990300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x564514990180 'pthread_rwlockattr_t'
|     `-Record 0x564514990100 ''
|-TypedefDecl 0x5645149903e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x564514914084 'volatile int' volatile
|   `-BuiltinType 0x564514914080 'int'
|-RecordDecl 0x564514990440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5645149925b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x564514992618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5645149926d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x564514992670 'union pthread_barrier_t' sugar
|   `-RecordType 0x5645149904c0 'pthread_barrier_t'
|     `-Record 0x564514990440 ''
|-RecordDecl 0x564514992740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x564514992840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5645149928a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564514992960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x564514992900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5645149927c0 'pthread_barrierattr_t'
|     `-Record 0x564514992740 ''
|-TypedefDecl 0x564514992a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x564514992a10 'long [8]' 8 
|   `-BuiltinType 0x5645149140a0 'long'
|-EnumDecl 0x564514992ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x564514992b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x564514992be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x564514992c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x564514992d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x564514992d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x564514992da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x564514992df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x564514992e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x564514992e68 <col:26> 'int'
| |   `-DeclRefExpr 0x564514992e48 <col:26> 'int' EnumConstant 0x564514992d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x564514992f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x564514992ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x564514992ed0 <col:29> 'int' EnumConstant 0x564514992d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x564514992f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x564514992f78 <col:30> 'int'
| |   `-DeclRefExpr 0x564514992f58 <col:30> 'int' EnumConstant 0x564514992da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x564514993018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x564514993000 <col:27> 'int'
|     `-DeclRefExpr 0x564514992fe0 <col:27> 'int' EnumConstant 0x564514992e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x564514993068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x564514993138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5645149931c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5645149931a8 <col:30> 'int'
| |   `-DeclRefExpr 0x564514993188 <col:30> 'int' EnumConstant 0x564514993138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x564514993210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x564514993298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x564514993280 <col:29> 'int'
|     `-DeclRefExpr 0x564514993260 <col:29> 'int' EnumConstant 0x564514993210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5645149932e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5645149933b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x564514993408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x564514993458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5645149934a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5645149935c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x564514993610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x564514993660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5645149936e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5645149936d0 <col:31> 'int'
|     `-DeclRefExpr 0x5645149936b0 <col:31> 'int' EnumConstant 0x5645149935c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x564514993738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x564514993808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x564514993858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5645149938a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x564514993978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5645149939c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x564514993a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x564514993ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x564514993b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x564514993b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x564514993dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x564514993e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x564514993e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x564514993fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x564514994008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5645149940d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x564514994128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x564514994178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x564514994248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x564514994298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5645149948f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x564514994390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5645149944a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5645149946e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x564514994760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5645149949b8 <col:47>
| |-NonNullAttr 0x564514994a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x564514994a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x564514994b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x564514994aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x564514994dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x564514994c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x564514994ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x564514994f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x564514994e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x564514995040 <col:60>
|-FunctionDecl 0x564514995190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x564514995230 <col:54>
| `-ConstAttr 0x564514995288 <col:95>
|-FunctionDecl 0x564514995458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5645149952c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564514995338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x564514995508 <line:394:19>
| `-ConstAttr 0x564514995560 <col:60>
|-FunctionDecl 0x564514995f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x564514995e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564514996010 <col:71>
| `-NonNullAttr 0x564514996068 <col:112, col:126> 1
|-FunctionDecl 0x564514996170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5645149960b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564514996218 <line:397:22>
| `-NonNullAttr 0x564514996270 <col:63, col:77> 1
|-FunctionDecl 0x564514996498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5645149962b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x564514996338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x564514996548 <line:400:22>
| `-NonNullAttr 0x5645149965a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5645149967a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5645149965e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564514996668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x564514996858 <line:403:22>
| `-NonNullAttr 0x5645149968b0 <col:63, col:77> 1
|-FunctionDecl 0x564514996b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5645149968f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5645149969a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x564514996bb8 <line:406:22>
| `-NonNullAttr 0x564514996c10 <col:63, col:80> 1 2
|-FunctionDecl 0x564514997e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x564514996c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564514996cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564514997ef8 <line:409:22>
| `-NonNullAttr 0x564514997f50 <col:63, col:77> 1
|-FunctionDecl 0x564514998188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564514997f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564514998028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x564514998238 <line:412:22>
| `-NonNullAttr 0x564514998290 <col:63, col:80> 1 2
|-FunctionDecl 0x5645149984c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5645149982d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x564514998368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x564514998578 <col:37>
| `-NonNullAttr 0x5645149985d0 <col:78, col:95> 1 2
|-FunctionDecl 0x5645149987b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564514998618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564514998698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x564514998868 <line:418:22>
| `-NonNullAttr 0x5645149988c0 <col:63, col:80> 1 2
|-FunctionDecl 0x564514998a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564514998908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564514998988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x564514998af8 <line:420:22>
| `-NonNullAttr 0x564514998b50 <col:63, col:77> 1
|-FunctionDecl 0x564514998cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564514998b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564514998c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x564514998da8 <line:423:22>
| `-NonNullAttr 0x564514999e30 <col:63, col:80> 1 2
|-FunctionDecl 0x564514999fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564514999e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564514999ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x56451499a068 <line:426:22>
| `-NonNullAttr 0x56451499a0c0 <col:63, col:77> 1
|-FunctionDecl 0x56451499a268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56451499a108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56451499a188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x56451499a318 <line:429:22>
| `-NonNullAttr 0x56451499a370 <col:63, col:80> 1 2
|-FunctionDecl 0x56451499a4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56451499a3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56451499a438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x56451499a5a8 <line:431:22>
| `-NonNullAttr 0x56451499a600 <col:63, col:77> 1
|-FunctionDecl 0x56451499a828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x56451499a648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56451499a6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x56451499a8d8 <line:434:22>
| |-NonNullAttr 0x56451499a930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x56451499a968 <col:100> "" ""
|-FunctionDecl 0x56451499ab78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x56451499a9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56451499aa38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x56451499ac28 <line:437:22>
| |-NonNullAttr 0x56451499ac80 <col:63, col:77> 1
| `-DeprecatedAttr 0x56451499acb8 <col:97> "" ""
|-FunctionDecl 0x56451499aeb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56451499ad08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56451499ad80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56451499af68 <line:440:22>
| `-NonNullAttr 0x56451499afc0 <col:63, col:80> 1 2
|-FunctionDecl 0x56451499b140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56451499b008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56451499b080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56451499b1f0 <line:443:22>
| `-NonNullAttr 0x56451499b248 <col:63, col:77> 1
|-FunctionDecl 0x56451499b538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56451499b298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56451499b318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x56451499b390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56451499b5f0 <line:447:22>
| `-NonNullAttr 0x56451499b648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x56451499b8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x56451499b6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56451499b720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x56451499b798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56451499b9b0 <col:43>
| `-NonNullAttr 0x56451499ba08 <col:84, col:98> 1
|-FunctionDecl 0x56451499bcc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56451499ba58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56451499bad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x56451499bb68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x56451499bd80 <line:452:22>
| `-NonNullAttr 0x56451499bdd8 <col:63, col:77> 3
|-FunctionDecl 0x56451499c0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56451499be50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56451499bed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x56451499bf60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56451499c1a0 <line:456:22>
| `-NonNullAttr 0x56451499c1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x56451499c3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x56451499c248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56451499c2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x56451499c498 <line:458:22>
|-FunctionDecl 0x56451499c868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x56451499c560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x56451499c700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x56451499c918 <col:52, col:69> 1 2
|-FunctionDecl 0x56451499cac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x56451499c9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x56451499ca20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x56451499cca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x56451499cb88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x56451499cc08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x56451499ce60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x56451499cd68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x56451499cfa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x56451499d040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x56451499d0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x56451499d1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x56451499d240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x56451499d410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix052_tso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x56451499d508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x56451499d5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x56451499d560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x56451499d0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x56451499d040 ''
| `-AlignedAttr 0x56451499d618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x56451499d690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x56451499d7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x56451499d858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x56451499d8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x56451499d928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x56451499db30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56451499da20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56451499dc78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56451499dbe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56451499de70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56451499dd30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x56451499df18 <line:487:22>
|-RecordDecl 0x56451499df70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x56451499e288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x56451499e0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x56451499e168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x56451499e338 <col:86>
| `-ReturnsTwiceAttr 0x56451499e390 <col:12> Implicit
|-FunctionDecl 0x56451499e6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56451499e460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x56451499e570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x56451499e768 <line:493:22>
| `-NonNullAttr 0x56451499e7c0 <col:63, col:77> 1
|-FunctionDecl 0x56451499e938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56451499e808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56451499e9e0 <line:495:22>
| `-NonNullAttr 0x56451499ea38 <col:63, col:77> 1
|-FunctionDecl 0x56451499eb40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56451499ea88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56451499ebe8 <line:497:22>
| `-NonNullAttr 0x56451499ec40 <col:52, col:66> 1
|-FunctionDecl 0x56451499ed40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56451499ec88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56451499ede8 <line:499:22>
| `-NonNullAttr 0x56451499ee40 <col:52, col:66> 1
|-FunctionDecl 0x56451499f088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56451499ee98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56451499ef28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56451499f138 <col:36>
| `-NonNullAttr 0x56451499f190 <col:66, col:83> 1 2
|-FunctionDecl 0x56451499f290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56451499f1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56451499f338 <line:504:22>
| `-NonNullAttr 0x56451499f390 <col:52, col:66> 1
|-FunctionDecl 0x56451499f628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56451499f440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56451499f4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56451499f6d8 <line:508:22>
| `-NonNullAttr 0x56451499f730 <col:63, col:80> 1 2
|-FunctionDecl 0x56451499f9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x56451499f778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56451499f7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x56451499f878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x56451499fab0 <line:512:22>
| `-NonNullAttr 0x56451499fb08 <col:63, col:80> 1 3
|-FunctionDecl 0x56451499fc10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56451499fb58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56451499fcb8 <line:514:22>
| `-NonNullAttr 0x56451499fd10 <col:63, col:77> 1
|-FunctionDecl 0x56451499ff38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56451499fdc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56451499ffe0 <line:516:22>
| `-NonNullAttr 0x5645149a0038 <col:63, col:77> 1
|-FunctionDecl 0x5645149a0140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5645149a0088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5645149a01e8 <line:518:22>
| `-NonNullAttr 0x5645149a0240 <col:63, col:77> 1
|-FunctionDecl 0x5645149a0468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5645149a0288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5645149a0308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5645149a0518 <line:522:22>
| `-NonNullAttr 0x5645149a0570 <col:63, col:80> 1 2
|-FunctionDecl 0x5645149a0778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5645149a05b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5645149a0638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5645149a0828 <line:525:22>
| `-NonNullAttr 0x5645149a0880 <col:63, col:77> 1
|-FunctionDecl 0x5645149a0a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5645149a08c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5645149a0948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5645149a0ad8 <line:528:22>
| `-NonNullAttr 0x5645149a0b30 <col:63, col:80> 1 2
|-FunctionDecl 0x5645149a0cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5645149a0b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5645149a0bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5645149a0d68 <line:530:22>
| `-NonNullAttr 0x5645149a0dc0 <col:63, col:77> 1
|-FunctionDecl 0x5645149a1f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5645149a0e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5645149a1eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5645149a2040 <line:534:22>
| `-NonNullAttr 0x5645149a2098 <col:63, col:80> 1 2
|-FunctionDecl 0x5645149a2228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5645149a20e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5645149a2168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5645149a22d8 <line:537:22>
| `-NonNullAttr 0x5645149a2330 <col:63, col:77> 1
|-FunctionDecl 0x5645149a24d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5645149a2378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5645149a23f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5645149a2588 <line:541:22>
| `-NonNullAttr 0x5645149a25e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5645149a2768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5645149a2628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5645149a26a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5645149a2818 <line:544:22>
| `-NonNullAttr 0x5645149a2870 <col:63, col:77> 1
|-FunctionDecl 0x5645149a2a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5645149a28b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5645149a2938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5645149a2b08 <line:547:22>
| `-NonNullAttr 0x5645149a2b60 <col:63, col:80> 1 2
|-FunctionDecl 0x5645149a2ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5645149a2ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5645149a2c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5645149a2d98 <line:550:22>
| `-NonNullAttr 0x5645149a2df0 <col:63, col:77> 1
|-FunctionDecl 0x5645149a4168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5645149a3f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5645149a4020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5645149a4218 <col:29>
| `-NonNullAttr 0x5645149a4270 <col:70, col:84> 1
|-FunctionDecl 0x5645149a43e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5645149a42b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5645149a4490 <line:555:22>
| `-NonNullAttr 0x5645149a44e8 <col:63, col:77> 1
|-FunctionDecl 0x5645149a45f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5645149a4538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5645149a4698 <line:557:22>
| `-NonNullAttr 0x5645149a46f0 <col:52, col:66> 1
|-FunctionDecl 0x5645149a47f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5645149a4738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5645149a4898 <line:559:19>
| `-NonNullAttr 0x5645149a48f0 <col:49, col:63> 1
|-FunctionDecl 0x5645149a4b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5645149a4938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5645149a49c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5645149a4bd8 <col:39>
| `-NonNullAttr 0x5645149a4c30 <col:69, col:86> 1 2
|-FunctionDecl 0x5645149a4d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5645149a4c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5645149a4dd8 <line:564:22>
| `-NonNullAttr 0x5645149a4e30 <col:52, col:66> 1
|-FunctionDecl 0x5645149a4f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5645149a4ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5645149a5040 <line:566:22>
| `-NonNullAttr 0x5645149a5098 <col:52, col:66> 1
|-FunctionDecl 0x5645149a5258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5645149a50e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5645149a5178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5645149a5308 <col:39>
| `-NonNullAttr 0x5645149a5360 <col:69, col:86> 1 2
|-FunctionDecl 0x5645149a5460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5645149a53a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5645149a5508 <line:571:22>
| `-NonNullAttr 0x5645149a5560 <col:52, col:66> 1
|-FunctionDecl 0x5645149a5748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5645149a5610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5645149a57f0 <line:573:22>
| `-NonNullAttr 0x5645149a5848 <col:63, col:77> 1
|-FunctionDecl 0x5645149a5950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5645149a5898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5645149a59f8 <line:575:22>
| `-NonNullAttr 0x5645149a5a50 <col:63, col:77> 1
|-FunctionDecl 0x5645149a5c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5645149a5a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5645149a5b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5645149a5d28 <line:579:22>
| `-NonNullAttr 0x5645149a5d80 <col:63, col:80> 1 2
|-FunctionDecl 0x5645149a5fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5645149a5dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5645149a5e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5645149a6058 <line:582:22>
| `-NonNullAttr 0x5645149a60b0 <col:63, col:77> 1
|-FunctionDecl 0x5645149a6258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5645149a60f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5645149a6178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5645149a6308 <line:586:22>
| `-NonNullAttr 0x5645149a6360 <col:63, col:80> 1 2
|-FunctionDecl 0x5645149a64e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5645149a63a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5645149a6428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5645149a6598 <col:36>
| `-NonNullAttr 0x5645149a65f0 <col:77, col:91> 1
|-FunctionDecl 0x5645149a6928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5645149a66d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5645149a67e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5645149a69d8 <line:591:22>
| `-NonNullAttr 0x5645149a6a30 <col:63, col:77> 1
|-FunctionDecl 0x5645149a6ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5645149a6a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5645149a6c50 <line:593:22>
| `-NonNullAttr 0x5645149a6ca8 <col:63, col:77> 1
|-FunctionDecl 0x5645149a6db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5645149a6cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5645149a6e58 <line:595:22>
| `-NonNullAttr 0x5645149a6eb0 <col:52, col:66> 1
|-FunctionDecl 0x5645149a6fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5645149a6f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5645149a7070 <line:597:22>
| `-NonNullAttr 0x5645149a70c8 <col:52, col:66> 1
|-FunctionDecl 0x5645149a72f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5645149a7118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5645149a7190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5645149a73a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5645149a76d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5645149a7428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5645149a74a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5645149a7530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5645149a7790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5645149a79a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5645149a7870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5645149a7a50 <line:606:22>
| `-NonNullAttr 0x5645149a7aa8 <col:63, col:77> 1
|-FunctionDecl 0x5645149a7bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5645149a7af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5645149a7c58 <line:608:22>
| `-NonNullAttr 0x5645149a7cb0 <col:63, col:77> 1
|-FunctionDecl 0x5645149a7f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5645149a7cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5645149a7d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5645149a7fc0 <line:612:22>
| `-NonNullAttr 0x5645149a8018 <col:63, col:80> 1 2
|-FunctionDecl 0x5645149a8228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5645149a8068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5645149a80e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5645149a82d8 <col:37>
| `-NonNullAttr 0x5645149a8330 <col:78, col:92> 1
|-FunctionDecl 0x5645149a8548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5645149a8378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5645149a8420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5645149a85f8 <line:618:22>
| `-NonNullAttr 0x5645149a8650 <col:63, col:80> 1 2
|-FunctionDecl 0x5645149a8818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5645149a8698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5645149a8710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5645149a88c8 <line:621:22>
| `-NonNullAttr 0x5645149a8920 <col:63, col:77> 1
|-FunctionDecl 0x5645149a8bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5645149a8a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5645149a8a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5645149a8c78 <line:623:22>
| `-NonNullAttr 0x5645149a8cd0 <col:63, col:77> 1
|-FunctionDecl 0x5645149a8e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5645149a8d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5645149a8f20 <line:625:22>
| `-NonNullAttr 0x5645149a8f78 <col:63, col:77> 1
|-FunctionDecl 0x5645149a9080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5645149a8fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5645149a9128 <line:627:22>
| `-NonNullAttr 0x5645149a9180 <col:52, col:66> 1
|-FunctionDecl 0x5645149a9280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5645149a91c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5645149a9328 <line:629:22>
| `-NonNullAttr 0x5645149a9380 <col:52, col:66> 1
|-FunctionDecl 0x5645149a9480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5645149a93c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5645149a9528 <line:631:22>
| `-NonNullAttr 0x5645149a9580 <col:52, col:66> 1
|-FunctionDecl 0x5645149a9958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5645149a9660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5645149a9770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5645149a97f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5645149a9a10 <line:635:22>
| `-NonNullAttr 0x5645149a9a68 <col:63, col:77> 1
|-FunctionDecl 0x5645149a9be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5645149a9ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5645149a9c90 <line:637:22>
| `-NonNullAttr 0x5645149a9ce8 <col:63, col:77> 1
|-FunctionDecl 0x5645149a9df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5645149a9d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5645149a9e98 <line:639:22>
| `-NonNullAttr 0x5645149a9ef0 <col:52, col:66> 1
|-FunctionDecl 0x5645149aa0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5645149a9fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5645149aa190 <line:641:22>
| `-NonNullAttr 0x5645149aa1e8 <col:63, col:77> 1
|-FunctionDecl 0x5645149aa2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5645149aa238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5645149aa398 <line:643:22>
| `-NonNullAttr 0x5645149aa3f0 <col:63, col:77> 1
|-FunctionDecl 0x5645149aa618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5645149aa438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5645149aa4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5645149aa6c8 <line:647:22>
| `-NonNullAttr 0x5645149aa720 <col:63, col:80> 1 2
|-FunctionDecl 0x5645149aa928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5645149aa768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5645149aa7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5645149aa9d8 <line:650:22>
| `-NonNullAttr 0x5645149aaa30 <col:63, col:77> 1
|-FunctionDecl 0x5645149aad78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5645149aab10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5645149aac30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5645149aae28 <line:653:22>
| `-NonNullAttr 0x5645149aae80 <col:63, col:77> 1
|-FunctionDecl 0x5645149aafe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5645149aaec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5645149ab090 <col:69>
|-FunctionDecl 0x5645149ab208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5645149ab0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5645149ab2b0 <col:72>
|-FunctionDecl 0x5645149ab4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5645149ab318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5645149ab3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5645149ab598 <col:44>
|-FunctionDecl 0x5645149ab7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5645149ab600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5645149ab678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5645149ab868 <line:660:22>
| `-NonNullAttr 0x5645149ab8c0 <col:63, col:77> 2
|-FunctionDecl 0x5645149abd08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5645149ab9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5645149abab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5645149abbc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5645149abdc0 <col:47>
|-FunctionDecl 0x5645149acf60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5645149abe30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5645149ad0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5645149ad020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5645149ad210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5645149ad178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5645149ad2d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5645149ad398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5645149ad458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5645149ad510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5645149ad590 prev 0x5645149ad510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5645149ad5f8 <col:24> 'int' 0
|-VarDecl 0x5645149ad630 <line:673:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5645149ad6b0 prev 0x5645149ad630 <line:674:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5645149ad718 <col:27> 'int' 0
|-VarDecl 0x5645149ad750 <line:675:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5645149ad7d0 prev 0x5645149ad750 <line:676:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5645149ad838 <col:27> 'int' 0
|-VarDecl 0x5645149ad868 <line:677:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5645149ad8e0 <line:678:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5645149ad960 <line:679:1, col:5> col:5 used x 'int'
|-VarDecl 0x5645149ad9e0 prev 0x5645149ad960 <line:680:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5645149ada48 <col:9> 'int' 0
|-VarDecl 0x5645149ada78 <line:681:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x5645149adaf8 <line:682:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x5645149adb70 <line:683:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x5645149adbe8 <line:684:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x5645149adc60 <line:685:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x5645149adcd8 <line:686:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x5645149add50 <line:687:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x5645149addc8 <line:688:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x5645149ade40 <line:689:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x5645149adeb8 <line:690:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x5645149adf70 <line:691:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x5645149adff0 <line:692:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x5645149ae070 <line:693:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x5645149ae0e8 <line:694:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x5645149ae168 <line:695:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x5645149ae1e0 <line:696:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x5645149ae260 <line:697:1, col:5> col:5 used y 'int'
|-VarDecl 0x5645149ae2e0 prev 0x5645149ae260 <line:698:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5645149ae348 <col:9> 'int' 0
|-VarDecl 0x5645149ae380 <line:699:1, col:5> col:5 used z 'int'
|-VarDecl 0x5645149ae400 prev 0x5645149ae380 <line:700:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5645149ae468 <col:9> 'int' 0
|-VarDecl 0x5645149ae498 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5645149ae510 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5645149ae628 prev 0x5645149acf60 <line:703:1, line:722:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5645149ae590 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5645149af8b8 <line:704:1, line:722:1>
|   |-CallExpr 0x5645149ae738 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5645149ae720 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5645149ae6d0 <col:3> 'void ()' Function 0x564514954350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5645149ae798 <line:706:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5645149ae758 <col:3> 'int' lvalue Var 0x5645149ae400 'z' 'int'
|   | `-IntegerLiteral 0x5645149ae778 <col:7> 'int' 1
|   |-CallExpr 0x5645149ae7f0 <line:707:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5645149ae7d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5645149ae7b8 <col:3> 'void ()' Function 0x564514954410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5645149ae848 <line:708:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5645149ae830 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5645149ae810 <col:3> 'void ()' Function 0x564514954350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5645149ae8a8 <line:709:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5645149ae868 <col:3> 'int' lvalue Var 0x5645149ad9e0 'x' 'int'
|   | `-IntegerLiteral 0x5645149ae888 <col:7> 'int' 1
|   |-CallExpr 0x5645149ae900 <line:710:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5645149ae8e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5645149ae8c8 <col:3> 'void ()' Function 0x564514954410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5645149ae958 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5645149ae940 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5645149ae920 <col:3> 'void ()' Function 0x564514954350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5645149aec40 <line:712:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5645149ae978 <col:3> 'int' lvalue Var 0x5645149ad9e0 'x' 'int'
|   | `-ConditionalOperator 0x5645149aec10 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5645149aea38 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5645149ae9f0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5645149ae9d8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5645149ae998 <col:7> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5645149aea20 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5645149aea08 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5645149ae9b8 <col:25> '_Bool' lvalue Var 0x5645149adbe8 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5645149aebf8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5645149aea58 <col:42> 'int' lvalue Var 0x5645149ae070 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5645149aebd8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5645149aeba8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5645149aeb18 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5645149aead0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5645149aeab8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5645149aea78 <col:55> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5645149aeb00 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5645149aeae8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5645149aea98 <col:73> '_Bool' lvalue Var 0x5645149addc8 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5645149aeb78 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5645149aeb38 <col:90> 'int' lvalue Var 0x5645149ae168 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5645149aeb90 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5645149aeb58 <col:102> 'int' lvalue Var 0x5645149ad9e0 'x' 'int'
|   |-BinaryOperator 0x5645149aee48 <line:713:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5645149aec60 <col:3> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5645149aee30 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5645149aee00 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5645149aed20 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5645149aecd8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5645149aecc0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5645149aec80 <col:20> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5645149aed08 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5645149aecf0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5645149aeca0 <col:38> '_Bool' lvalue Var 0x5645149adbe8 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5645149aedb8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5645149aed70 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5645149aed40 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5645149aede8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5645149aedd0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5645149aed98 <col:66> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5645149af148 <line:714:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5645149aee68 <col:3> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5645149af130 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5645149af100 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5645149af020 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5645149aef28 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5645149aeee0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5645149aeec8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5645149aee88 <col:20> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5645149aef10 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5645149aeef8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5645149aeea8 <col:38> '_Bool' lvalue Var 0x5645149adbe8 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5645149af000 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5645149aefb8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5645149aefa0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5645149aef48 <col:56> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5645149aefe8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5645149aefd0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5645149aef80 <col:74> '_Bool' lvalue Var 0x5645149addc8 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5645149af0b8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5645149af070 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5645149af040 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5645149af0e8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5645149af0d0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5645149af098 <col:102> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5645149af350 <line:715:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5645149af168 <col:3> '_Bool' lvalue Var 0x5645149adbe8 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5645149af338 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5645149af308 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5645149af228 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5645149af1e0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5645149af1c8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5645149af188 <col:20> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5645149af210 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5645149af1f8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5645149af1a8 <col:38> '_Bool' lvalue Var 0x5645149adbe8 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5645149af2c0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5645149af278 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5645149af248 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5645149af2f0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5645149af2d8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5645149af2a0 <col:66> '_Bool' lvalue Var 0x5645149adbe8 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5645149af638 <line:716:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5645149af370 <col:3> '_Bool' lvalue Var 0x5645149addc8 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5645149af620 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5645149af5f0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5645149af510 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5645149af430 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5645149af3e8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5645149af3d0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5645149af390 <col:20> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5645149af418 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5645149af400 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5645149af3b0 <col:38> '_Bool' lvalue Var 0x5645149adbe8 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5645149af4f0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5645149af4a8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5645149af490 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5645149af450 <col:56> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5645149af4d8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5645149af4c0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5645149af470 <col:74> '_Bool' lvalue Var 0x5645149addc8 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5645149af5a8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5645149af560 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5645149af530 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5645149af5d8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5645149af5c0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5645149af588 <col:102> '_Bool' lvalue Var 0x5645149addc8 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x5645149af690 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5645149af678 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5645149af658 <col:3> 'void ()' Function 0x564514954410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5645149af6e8 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5645149af6d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5645149af6b0 <col:3> 'void ()' Function 0x564514954350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5645149af7a0 <line:719:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5645149af708 <col:3> 'int' lvalue Var 0x5645149ad590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5645149af780 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5645149af768 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5645149af728 <col:22> 'int' lvalue Var 0x5645149ad590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5645149af748 <col:41> 'int' 1
|   |-CallExpr 0x5645149af7f8 <line:720:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5645149af7e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5645149af7c0 <col:3> 'void ()' Function 0x564514954410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5645149af8a8 <line:721:3, col:36>
|     `-CallExpr 0x5645149af888 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5645149af870 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5645149af818 <col:10> 'void *(void)' Function 0x564514953e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5645149afa00 prev 0x5645149ad0b8 <line:723:1, line:751:1> line:723:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5645149af968 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5645149b11e8 <line:724:1, line:751:1>
|   |-CallExpr 0x5645149afae0 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5645149afac8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5645149afaa8 <col:3> 'void ()' Function 0x564514954350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5645149afb58 <line:726:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5645149afb00 <col:3> 'int' lvalue Var 0x5645149ae168 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5645149afb40 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5645149afb20 <col:15> 'int' lvalue Var 0x5645149ae070 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5645149afbb8 <line:727:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5645149afb78 <col:3> 'int' lvalue Var 0x5645149ae070 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x5645149afb98 <col:15> 'int' 2
|   |-BinaryOperator 0x5645149afc30 <line:728:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5645149afbd8 <col:3> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5645149afc18 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5645149afbf8 <col:20> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5645149afcc8 <line:729:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5645149afc50 <col:3> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5645149afca0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5645149afc70 <col:27> 'int' 1
|   |-CallExpr 0x5645149afe48 <line:730:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5645149afe30 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5645149afce8 <col:3> 'void (int)' Function 0x5645149540d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5645149afde8 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5645149afdc8 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5645149afda8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5645149afd60 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5645149afd48 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5645149afd08 <col:23> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5645149afd90 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5645149afd78 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5645149afd28 <col:41> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5645149afec8 <line:731:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5645149afe70 <col:3> '_Bool' lvalue Var 0x5645149add50 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5645149afeb0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5645149afe90 <col:20> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5645149aff40 <line:732:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5645149afee8 <col:3> '_Bool' lvalue Var 0x5645149addc8 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5645149aff28 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5645149aff08 <col:20> '_Bool' lvalue Var 0x5645149adbe8 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5645149affc8 <line:733:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5645149aff60 <col:3> '_Bool' lvalue Var 0x5645149ade40 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5645149affb0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5645149aff90 <col:20> '_Bool' lvalue Var 0x5645149adc60 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5645149b0040 <line:734:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5645149affe8 <col:3> '_Bool' lvalue Var 0x5645149adeb8 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5645149b0028 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5645149b0008 <col:20> '_Bool' lvalue Var 0x5645149adcd8 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5645149b00d8 <line:735:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5645149b0060 <col:3> '_Bool' lvalue Var 0x5645149adc60 'x$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x5645149b00b0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5645149b0080 <col:27> 'int' 1
|   |-CallExpr 0x5645149b0130 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5645149b0118 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5645149b00f8 <col:3> 'void ()' Function 0x564514954410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5645149b0188 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5645149b0170 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5645149b0150 <col:3> 'void ()' Function 0x564514954350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5645149b0200 <line:738:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5645149b01a8 <col:3> 'int' lvalue Var 0x5645149ad6b0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5645149b01e8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5645149b01c8 <col:25> 'int' lvalue Var 0x5645149ae2e0 'y' 'int'
|   |-CallExpr 0x5645149b0258 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5645149b0240 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5645149b0220 <col:3> 'void ()' Function 0x564514954410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5645149b02b0 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5645149b0298 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5645149b0278 <col:3> 'void ()' Function 0x564514954350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5645149b0598 <line:741:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5645149b02d0 <col:3> 'int' lvalue Var 0x5645149ad9e0 'x' 'int'
|   | `-ConditionalOperator 0x5645149b0568 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5645149b0390 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5645149b0348 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5645149b0330 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5645149b02f0 <col:7> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5645149b0378 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5645149b0360 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5645149b0310 <col:25> '_Bool' lvalue Var 0x5645149adc60 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5645149b0550 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5645149b03b0 <col:42> 'int' lvalue Var 0x5645149ae070 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5645149b0530 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5645149b0500 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5645149b0470 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5645149b0428 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5645149b0410 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5645149b03d0 <col:55> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5645149b0458 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5645149b0440 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5645149b03f0 <col:73> '_Bool' lvalue Var 0x5645149ade40 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5645149b04d0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5645149b0490 <col:90> 'int' lvalue Var 0x5645149ae168 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5645149b04e8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5645149b04b0 <col:102> 'int' lvalue Var 0x5645149ad9e0 'x' 'int'
|   |-BinaryOperator 0x5645149b07a0 <line:742:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5645149b05b8 <col:3> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5645149b0788 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5645149b0758 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5645149b0678 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5645149b0630 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5645149b0618 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5645149b05d8 <col:20> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5645149b0660 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5645149b0648 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5645149b05f8 <col:38> '_Bool' lvalue Var 0x5645149adc60 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5645149b0710 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5645149b06c8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5645149b0698 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5645149b0740 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5645149b0728 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5645149b06f0 <col:66> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5645149b0a88 <line:743:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5645149b07c0 <col:3> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5645149b0a70 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5645149b0a40 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5645149b0960 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5645149b0880 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5645149b0838 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5645149b0820 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5645149b07e0 <col:20> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5645149b0868 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5645149b0850 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5645149b0800 <col:38> '_Bool' lvalue Var 0x5645149adc60 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5645149b0940 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5645149b08f8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5645149b08e0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5645149b08a0 <col:56> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5645149b0928 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5645149b0910 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5645149b08c0 <col:74> '_Bool' lvalue Var 0x5645149ade40 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5645149b09f8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5645149b09b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5645149b0980 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5645149b0a28 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5645149b0a10 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5645149b09d8 <col:102> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5645149b0c90 <line:744:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5645149b0aa8 <col:3> '_Bool' lvalue Var 0x5645149adc60 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5645149b0c78 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5645149b0c48 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5645149b0b68 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5645149b0b20 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5645149b0b08 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5645149b0ac8 <col:20> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5645149b0b50 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5645149b0b38 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5645149b0ae8 <col:38> '_Bool' lvalue Var 0x5645149adc60 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5645149b0c00 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5645149b0bb8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5645149b0b88 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5645149b0c30 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5645149b0c18 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5645149b0be0 <col:66> '_Bool' lvalue Var 0x5645149adc60 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5645149b0fa0 <line:745:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5645149b0cb0 <col:3> '_Bool' lvalue Var 0x5645149ade40 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5645149b0f60 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5645149b0f30 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5645149b0e50 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5645149b0d70 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5645149b0d28 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5645149b0d10 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5645149b0cd0 <col:20> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5645149b0d58 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5645149b0d40 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5645149b0cf0 <col:38> '_Bool' lvalue Var 0x5645149adc60 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5645149b0e30 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5645149b0de8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5645149b0dd0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5645149b0d90 <col:56> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5645149b0e18 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5645149b0e00 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5645149b0db0 <col:74> '_Bool' lvalue Var 0x5645149ade40 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5645149b0ee8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5645149b0ea0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5645149b0e70 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5645149b0f18 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5645149b0f00 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5645149b0ec8 <col:102> '_Bool' lvalue Var 0x5645149ade40 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5645149b0ff8 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5645149b0fe0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5645149b0fc0 <col:3> 'void ()' Function 0x564514954410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5645149b1050 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5645149b1038 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5645149b1018 <col:3> 'void ()' Function 0x564514954350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5645149b1108 <line:748:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5645149b1070 <col:3> 'int' lvalue Var 0x5645149ad590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5645149b10e8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5645149b10d0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5645149b1090 <col:22> 'int' lvalue Var 0x5645149ad590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5645149b10b0 <col:41> 'int' 1
|   |-CallExpr 0x5645149b1160 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5645149b1148 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5645149b1128 <col:3> 'void ()' Function 0x564514954410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5645149b11d8 <line:750:3, col:36>
|     `-CallExpr 0x5645149b11b8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5645149b11a0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5645149b1180 <col:10> 'void *(void)' Function 0x564514953e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5645149b1378 prev 0x5645149ad210 <line:752:1, line:771:1> line:752:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5645149b12e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5645149b25b8 <line:753:1, line:771:1>
|   |-CallExpr 0x5645149b1458 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5645149b1440 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5645149b1420 <col:3> 'void ()' Function 0x564514954350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5645149b14b8 <line:755:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5645149b1478 <col:3> 'int' lvalue Var 0x5645149ae2e0 'y' 'int'
|   | `-IntegerLiteral 0x5645149b1498 <col:7> 'int' 1
|   |-CallExpr 0x5645149b1510 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5645149b14f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5645149b14d8 <col:3> 'void ()' Function 0x564514954410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5645149b1568 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5645149b1550 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5645149b1530 <col:3> 'void ()' Function 0x564514954350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5645149b15e0 <line:758:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5645149b1588 <col:3> 'int' lvalue Var 0x5645149ad7d0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x5645149b15c8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5645149b15a8 <col:25> 'int' lvalue Var 0x5645149ae400 'z' 'int'
|   |-CallExpr 0x5645149b1638 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5645149b1620 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5645149b1600 <col:3> 'void ()' Function 0x564514954410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5645149b1690 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5645149b1678 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5645149b1658 <col:3> 'void ()' Function 0x564514954350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5645149b1978 <line:761:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5645149b16b0 <col:3> 'int' lvalue Var 0x5645149ad9e0 'x' 'int'
|   | `-ConditionalOperator 0x5645149b1948 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5645149b1770 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5645149b1728 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5645149b1710 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5645149b16d0 <col:7> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5645149b1758 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5645149b1740 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5645149b16f0 <col:25> '_Bool' lvalue Var 0x5645149adcd8 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5645149b1930 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5645149b1790 <col:42> 'int' lvalue Var 0x5645149ae070 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5645149b1910 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5645149b18e0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5645149b1850 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5645149b1808 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5645149b17f0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5645149b17b0 <col:55> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5645149b1838 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5645149b1820 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5645149b17d0 <col:73> '_Bool' lvalue Var 0x5645149adeb8 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5645149b18b0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5645149b1870 <col:90> 'int' lvalue Var 0x5645149ae168 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5645149b18c8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5645149b1890 <col:102> 'int' lvalue Var 0x5645149ad9e0 'x' 'int'
|   |-BinaryOperator 0x5645149b1b80 <line:762:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5645149b1998 <col:3> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5645149b1b68 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5645149b1b38 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5645149b1a58 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5645149b1a10 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5645149b19f8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5645149b19b8 <col:20> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5645149b1a40 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5645149b1a28 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5645149b19d8 <col:38> '_Bool' lvalue Var 0x5645149adcd8 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5645149b1af0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5645149b1aa8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5645149b1a78 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5645149b1b20 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5645149b1b08 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5645149b1ad0 <col:66> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5645149b1e68 <line:763:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5645149b1ba0 <col:3> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5645149b1e50 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5645149b1e20 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5645149b1d40 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5645149b1c60 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5645149b1c18 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5645149b1c00 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5645149b1bc0 <col:20> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5645149b1c48 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5645149b1c30 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5645149b1be0 <col:38> '_Bool' lvalue Var 0x5645149adcd8 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5645149b1d20 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5645149b1cd8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5645149b1cc0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5645149b1c80 <col:56> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5645149b1d08 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5645149b1cf0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5645149b1ca0 <col:74> '_Bool' lvalue Var 0x5645149adeb8 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5645149b1dd8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5645149b1d90 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5645149b1d60 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5645149b1e08 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5645149b1df0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5645149b1db8 <col:102> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5645149b2088 <line:764:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5645149b1e88 <col:3> '_Bool' lvalue Var 0x5645149adcd8 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5645149b2070 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5645149b2040 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5645149b1f48 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5645149b1f00 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5645149b1ee8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5645149b1ea8 <col:20> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5645149b1f30 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5645149b1f18 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5645149b1ec8 <col:38> '_Bool' lvalue Var 0x5645149adcd8 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5645149b1ff8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5645149b1fb0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5645149b1f68 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5645149b2028 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5645149b2010 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5645149b1fd8 <col:66> '_Bool' lvalue Var 0x5645149adcd8 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5645149b2370 <line:765:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5645149b20a8 <col:3> '_Bool' lvalue Var 0x5645149adeb8 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5645149b2358 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5645149b2328 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5645149b2248 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5645149b2168 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5645149b2120 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5645149b2108 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5645149b20c8 <col:20> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5645149b2150 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5645149b2138 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5645149b20e8 <col:38> '_Bool' lvalue Var 0x5645149adcd8 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5645149b2228 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5645149b21e0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5645149b21c8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5645149b2188 <col:56> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5645149b2210 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5645149b21f8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5645149b21a8 <col:74> '_Bool' lvalue Var 0x5645149adeb8 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5645149b22e0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5645149b2298 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5645149b2268 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5645149b2310 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5645149b22f8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5645149b22c0 <col:102> '_Bool' lvalue Var 0x5645149adeb8 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5645149b23c8 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5645149b23b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5645149b2390 <col:3> 'void ()' Function 0x564514954410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5645149b2420 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5645149b2408 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5645149b23e8 <col:3> 'void ()' Function 0x564514954350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5645149b24d8 <line:768:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5645149b2440 <col:3> 'int' lvalue Var 0x5645149ad590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5645149b24b8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5645149b24a0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5645149b2460 <col:22> 'int' lvalue Var 0x5645149ad590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5645149b2480 <col:41> 'int' 1
|   |-CallExpr 0x5645149b2530 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5645149b2518 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5645149b24f8 <col:3> 'void ()' Function 0x564514954410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5645149b25a8 <line:770:3, col:36>
|     `-CallExpr 0x5645149b2588 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5645149b2570 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5645149b2550 <col:10> 'void *(void)' Function 0x564514953e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5645149b2670 prev 0x5645149ad2d8 <line:772:1, line:774:1> line:772:6 fence 'void ()'
| `-CompoundStmt 0x5645149b2710 <line:773:1, line:774:1>
|-FunctionDecl 0x5645149b2740 prev 0x5645149ad398 <line:775:1, line:777:1> line:775:6 isync 'void ()'
| `-CompoundStmt 0x5645149b27e0 <line:776:1, line:777:1>
|-FunctionDecl 0x5645149b2810 prev 0x5645149ad458 <line:778:1, line:780:1> line:778:6 lwfence 'void ()'
| `-CompoundStmt 0x5645149b28b0 <line:779:1, line:780:1>
`-FunctionDecl 0x5645149b2918 <line:781:1, line:818:1> line:781:5 main 'int ()'
  `-CompoundStmt 0x5645149b7000 <line:782:1, line:818:1>
    |-DeclStmt 0x5645149b2a30 <line:783:3, col:18>
    | `-VarDecl 0x5645149b29c8 <col:3, col:13> col:13 used t1405 'pthread_t':'unsigned long'
    |-CallExpr 0x5645149b2c38 <line:784:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5645149b2c20 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5645149b2a48 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5645149948f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5645149b2a88 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5645149b2a68 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5645149b29c8 't1405' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5645149b2c78 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5645149b2b00 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5645149b2ad8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5645149b2aa0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5645149b2c90 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5645149b2b20 <col:39> 'void *(void *)' Function 0x5645149ae628 'P0' 'void *(void *)'
    | `-ParenExpr 0x5645149b2ba0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5645149b2b78 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5645149b2b40 <col:52> 'int' 0
    |-DeclStmt 0x5645149b2d20 <line:785:3, col:18>
    | `-VarDecl 0x5645149b2cb8 <col:3, col:13> col:13 used t1406 'pthread_t':'unsigned long'
    |-CallExpr 0x5645149b2ec8 <line:786:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5645149b2eb0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5645149b2d38 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5645149948f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5645149b2d78 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5645149b2d58 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5645149b2cb8 't1406' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5645149b2f08 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5645149b2df0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5645149b2dc8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5645149b2d90 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5645149b2f20 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5645149b2e10 <col:39> 'void *(void *)' Function 0x5645149afa00 'P1' 'void *(void *)'
    | `-ParenExpr 0x5645149b2e90 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5645149b2e68 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5645149b2e30 <col:52> 'int' 0
    |-DeclStmt 0x5645149b2fc0 <line:787:3, col:18>
    | `-VarDecl 0x5645149b2f48 <col:3, col:13> col:13 used t1407 'pthread_t':'unsigned long'
    |-CallExpr 0x5645149b3168 <line:788:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5645149b3150 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5645149b2fd8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5645149948f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5645149b3018 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5645149b2ff8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5645149b2f48 't1407' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5645149b31a8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5645149b3090 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5645149b3068 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5645149b3030 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5645149b31c0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5645149b30b0 <col:39> 'void *(void *)' Function 0x5645149b1378 'P2' 'void *(void *)'
    | `-ParenExpr 0x5645149b3130 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5645149b3108 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5645149b30d0 <col:52> 'int' 0
    |-CallExpr 0x5645149b3210 <line:789:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5645149b31f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5645149b31d8 <col:3> 'void ()' Function 0x564514954350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5645149b32e0 <line:790:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5645149b3230 <col:3> '_Bool' lvalue Var 0x5645149ad868 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5645149b32c8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5645149b32a8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5645149b3290 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5645149b3250 <col:21> 'int' lvalue Var 0x5645149ad590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5645149b3270 <col:41> 'int' 3
    |-CallExpr 0x5645149b3338 <line:791:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5645149b3320 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5645149b3300 <col:3> 'void ()' Function 0x564514954410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5645149b33b0 <line:792:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5645149b3398 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5645149b3358 <col:3> 'void (int)' Function 0x564514953ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5645149b33f0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5645149b33d8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5645149b3378 <col:21> '_Bool' lvalue Var 0x5645149ad868 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5645149b3440 <line:793:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5645149b3428 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5645149b3408 <col:3> 'void ()' Function 0x564514954350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5645149b3728 <line:794:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5645149b3460 <col:3> 'int' lvalue Var 0x5645149ad9e0 'x' 'int'
    | `-ConditionalOperator 0x5645149b36f8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5645149b3520 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5645149b34d8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5645149b34c0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5645149b3480 <col:7> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5645149b3508 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5645149b34f0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5645149b34a0 <col:25> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5645149b36e0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5645149b3540 <col:42> 'int' lvalue Var 0x5645149ae070 'x$w_buff0' 'int'
    |   `-ParenExpr 0x5645149b36c0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5645149b3690 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5645149b3600 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5645149b35b8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5645149b35a0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5645149b3560 <col:55> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5645149b35e8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5645149b35d0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5645149b3580 <col:73> '_Bool' lvalue Var 0x5645149add50 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5645149b3660 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5645149b3620 <col:90> 'int' lvalue Var 0x5645149ae168 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5645149b3678 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5645149b3640 <col:102> 'int' lvalue Var 0x5645149ad9e0 'x' 'int'
    |-BinaryOperator 0x5645149b3930 <line:795:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5645149b3748 <col:3> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5645149b3918 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5645149b38e8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5645149b3808 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5645149b37c0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5645149b37a8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5645149b3768 <col:20> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5645149b37f0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5645149b37d8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5645149b3788 <col:38> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5645149b38a0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5645149b3858 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5645149b3828 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5645149b38d0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5645149b38b8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5645149b3880 <col:66> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5645149b3c18 <line:796:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5645149b3950 <col:3> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5645149b3c00 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5645149b3bd0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5645149b3af0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5645149b3a10 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5645149b39c8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5645149b39b0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5645149b3970 <col:20> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5645149b39f8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5645149b39e0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5645149b3990 <col:38> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5645149b3ad0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5645149b3a88 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5645149b3a70 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5645149b3a30 <col:56> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5645149b3ab8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5645149b3aa0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5645149b3a50 <col:74> '_Bool' lvalue Var 0x5645149add50 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5645149b3b88 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5645149b3b40 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5645149b3b10 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5645149b3bb8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5645149b3ba0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5645149b3b68 <col:102> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5645149b3e20 <line:797:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5645149b3c38 <col:3> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5645149b3e08 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5645149b3dd8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5645149b3cf8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5645149b3cb0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5645149b3c98 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5645149b3c58 <col:20> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5645149b3ce0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5645149b3cc8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5645149b3c78 <col:38> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5645149b3d90 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5645149b3d48 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5645149b3d18 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5645149b3dc0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5645149b3da8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5645149b3d70 <col:66> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5645149b4118 <line:798:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5645149b3e40 <col:3> '_Bool' lvalue Var 0x5645149add50 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5645149b4100 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5645149b40d0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5645149b3ff0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5645149b3f00 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5645149b3eb8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5645149b3ea0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5645149b3e60 <col:20> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5645149b3ee8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5645149b3ed0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5645149b3e80 <col:38> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5645149b3fd0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5645149b3f78 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5645149b3f60 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5645149b3f20 <col:56> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5645149b3fa8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5645149b3f90 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5645149b3f40 <col:74> '_Bool' lvalue Var 0x5645149add50 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5645149b4088 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5645149b4040 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5645149b4010 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5645149b40b8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5645149b40a0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5645149b4068 <col:102> '_Bool' lvalue Var 0x5645149add50 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5645149b4170 <line:799:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5645149b4158 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5645149b4138 <col:3> 'void ()' Function 0x564514954410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5645149b41c8 <line:800:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5645149b41b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5645149b4190 <col:3> 'void ()' Function 0x564514954350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5645149b4278 <line:801:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x5645149b41e8 <col:3> '_Bool' lvalue Var 0x5645149ae498 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x5645149b4260 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x5645149b4240 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x5645149b4228 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5645149b4208 <col:19> 'void *(void)' Function 0x564514953e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x5645149b4328 <line:802:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x5645149b4298 <col:3> '_Bool' lvalue Var 0x5645149ae510 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x5645149b4310 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x5645149b42f0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x5645149b42d8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5645149b42b8 <col:19> 'void *(void)' Function 0x564514953e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x5645149b43a0 <line:803:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x5645149b4348 <col:3> '_Bool' lvalue Var 0x5645149ada78 'x$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x5645149b4388 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x5645149b4368 <col:21> '_Bool' lvalue Var 0x5645149ae510 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x5645149b4418 <line:804:3, col:15> 'int' '='
    | |-DeclRefExpr 0x5645149b43c0 <col:3> 'int' lvalue Var 0x5645149adaf8 'x$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x5645149b4400 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x5645149b43e0 <col:15> 'int' lvalue Var 0x5645149ad9e0 'x' 'int'
    |-BinaryOperator 0x5645149b4850 <line:805:3, col:162> 'int' '='
    | |-DeclRefExpr 0x5645149b4438 <col:3> 'int' lvalue Var 0x5645149ad9e0 'x' 'int'
    | `-ConditionalOperator 0x5645149b4820 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x5645149b4648 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x5645149b4568 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x5645149b4490 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x5645149b4478 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x5645149b4458 <col:8> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x5645149b4548 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x5645149b44e0 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x5645149b44c8 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x5645149b44a8 <col:27> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x5645149b4530 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x5645149b4518 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x5645149b44f8 <col:46> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x5645149b4628 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x5645149b45c0 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x5645149b45a8 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x5645149b4588 <col:65> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x5645149b4610 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x5645149b45f8 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x5645149b45d8 <col:84> '_Bool' lvalue Var 0x5645149add50 'x$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5645149b4808 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5645149b4668 <col:101> 'int' lvalue Var 0x5645149ad9e0 'x' 'int'
    |   `-ParenExpr 0x5645149b47e8 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x5645149b47b8 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x5645149b4728 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5645149b46e0 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5645149b46c8 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5645149b4688 <col:106> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5645149b4710 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5645149b46f8 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5645149b46a8 <col:124> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5645149b4788 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5645149b4748 <col:141> 'int' lvalue Var 0x5645149ae070 'x$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x5645149b47a0 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5645149b4768 <col:153> 'int' lvalue Var 0x5645149ae168 'x$w_buff1' 'int'
    |-BinaryOperator 0x5645149b4d60 <line:806:3, col:208> 'int' '='
    | |-DeclRefExpr 0x5645149b4870 <col:3> 'int' lvalue Var 0x5645149ae070 'x$w_buff0' 'int'
    | `-ConditionalOperator 0x5645149b4d30 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x5645149b4d00 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5645149b4ce8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5645149b4890 <col:15> '_Bool' lvalue Var 0x5645149ae510 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x5645149b4d18 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5645149b48b0 <col:31> 'int' lvalue Var 0x5645149ae070 'x$w_buff0' 'int'
    |   `-ParenExpr 0x5645149b4cc8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x5645149b4c98 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x5645149b4ac0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x5645149b49e0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x5645149b4908 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x5645149b48f0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x5645149b48d0 <col:45> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x5645149b49c0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5645149b4958 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5645149b4940 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5645149b4920 <col:64> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x5645149b49a8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x5645149b4990 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5645149b4970 <col:83> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x5645149b4aa0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5645149b4a38 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5645149b4a20 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x5645149b4a00 <col:102> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x5645149b4a88 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x5645149b4a70 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5645149b4a50 <col:121> '_Bool' lvalue Var 0x5645149add50 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5645149b4c80 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5645149b4ae0 <col:138> 'int' lvalue Var 0x5645149ae070 'x$w_buff0' 'int'
    |       `-ParenExpr 0x5645149b4c60 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x5645149b4c30 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x5645149b4ba0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x5645149b4b58 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x5645149b4b40 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x5645149b4b00 <col:151> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x5645149b4b88 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x5645149b4b70 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5645149b4b20 <col:169> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x5645149b4c00 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5645149b4bc0 <col:186> 'int' lvalue Var 0x5645149ae070 'x$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x5645149b4c18 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x5645149b4be0 <col:198> 'int' lvalue Var 0x5645149ae070 'x$w_buff0' 'int'
    |-BinaryOperator 0x5645149b5280 <line:807:3, col:208> 'int' '='
    | |-DeclRefExpr 0x5645149b4d80 <col:3> 'int' lvalue Var 0x5645149ae168 'x$w_buff1' 'int'
    | `-ConditionalOperator 0x5645149b5250 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x5645149b5220 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5645149b5208 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5645149b4da0 <col:15> '_Bool' lvalue Var 0x5645149ae510 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x5645149b5238 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5645149b4dc0 <col:31> 'int' lvalue Var 0x5645149ae168 'x$w_buff1' 'int'
    |   `-ParenExpr 0x5645149b51e8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x5645149b51b8 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x5645149b4fe0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x5645149b4ef0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x5645149b4e18 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x5645149b4e00 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x5645149b4de0 <col:45> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x5645149b4ed0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5645149b4e68 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5645149b4e50 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5645149b4e30 <col:64> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x5645149b4eb8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x5645149b4ea0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5645149b4e80 <col:83> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x5645149b4fb0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5645149b4f48 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5645149b4f30 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x5645149b4f10 <col:102> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x5645149b4f98 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x5645149b4f80 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5645149b4f60 <col:121> '_Bool' lvalue Var 0x5645149add50 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5645149b51a0 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5645149b5000 <col:138> 'int' lvalue Var 0x5645149ae168 'x$w_buff1' 'int'
    |       `-ParenExpr 0x5645149b5180 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x5645149b5150 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x5645149b50c0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x5645149b5078 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x5645149b5060 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x5645149b5020 <col:151> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x5645149b50a8 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x5645149b5090 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5645149b5040 <col:169> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x5645149b5120 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5645149b50e0 <col:186> 'int' lvalue Var 0x5645149ae168 'x$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x5645149b5138 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x5645149b5100 <col:198> 'int' lvalue Var 0x5645149ae168 'x$w_buff1' 'int'
    |-BinaryOperator 0x5645149b5828 <line:808:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x5645149b52a0 <col:3> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5645149b5810 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5645149b57e0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x5645149b5798 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5645149b5780 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5645149b52c0 <col:20> '_Bool' lvalue Var 0x5645149ae510 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5645149b57c8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5645149b57b0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5645149b52e0 <col:36> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x5645149b5760 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x5645149b5730 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x5645149b54f0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5645149b5410 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5645149b5338 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5645149b5320 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5645149b5300 <col:55> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5645149b53f0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5645149b5388 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5645149b5370 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5645149b5350 <col:74> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5645149b53d8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5645149b53c0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5645149b53a0 <col:93> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5645149b54d0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5645149b5468 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5645149b5450 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5645149b5430 <col:112> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5645149b54b8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5645149b54a0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5645149b5480 <col:131> '_Bool' lvalue Var 0x5645149add50 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5645149b5718 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5645149b5700 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5645149b5510 <col:148> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x5645149b56e0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x5645149b56b0 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x5645149b55d0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5645149b5588 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5645149b5570 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5645149b5530 <col:166> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5645149b55b8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5645149b55a0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5645149b5550 <col:184> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5645149b5668 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5645149b5620 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5645149b55f0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5645149b5698 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x5645149b5680 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x5645149b5648 <col:212> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5645149b5df0 <line:809:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x5645149b5848 <col:3> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5645149b5dd8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5645149b5da8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x5645149b5d60 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5645149b5d48 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5645149b5868 <col:20> '_Bool' lvalue Var 0x5645149ae510 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5645149b5d90 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5645149b5d78 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5645149b5888 <col:36> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x5645149b5d28 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x5645149b5cf8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x5645149b5a98 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5645149b59b8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5645149b58e0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5645149b58c8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5645149b58a8 <col:55> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5645149b5998 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5645149b5930 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5645149b5918 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5645149b58f8 <col:74> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5645149b5980 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5645149b5968 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5645149b5948 <col:93> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5645149b5a78 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5645149b5a10 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5645149b59f8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5645149b59d8 <col:112> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5645149b5a60 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5645149b5a48 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5645149b5a28 <col:131> '_Bool' lvalue Var 0x5645149add50 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5645149b5ce0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5645149b5cc8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5645149b5ab8 <col:148> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x5645149b5ca8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x5645149b5c78 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x5645149b5b78 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5645149b5b30 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5645149b5b18 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5645149b5ad8 <col:166> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5645149b5b60 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5645149b5b48 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5645149b5af8 <col:184> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5645149b5c48 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5645149b5bc8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5645149b5b98 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5645149b5c60 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x5645149b5c20 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x5645149b5bf0 <col:219> 'int' 0
    |-BinaryOperator 0x5645149b63b0 <line:810:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x5645149b5e10 <col:3> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5645149b6398 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5645149b6368 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x5645149b6320 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5645149b6308 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5645149b5e30 <col:20> '_Bool' lvalue Var 0x5645149ae510 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5645149b6350 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5645149b6338 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5645149b5e50 <col:36> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x5645149b62e8 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x5645149b62b8 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x5645149b6078 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5645149b5f80 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5645149b5ea8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5645149b5e90 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5645149b5e70 <col:55> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5645149b5f60 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5645149b5ef8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5645149b5ee0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5645149b5ec0 <col:74> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5645149b5f48 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5645149b5f30 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5645149b5f10 <col:93> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5645149b6058 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5645149b5ff0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5645149b5fc0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5645149b5fa0 <col:112> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5645149b6040 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5645149b6028 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5645149b6008 <col:131> '_Bool' lvalue Var 0x5645149add50 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5645149b62a0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5645149b6288 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5645149b6098 <col:148> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x5645149b6268 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x5645149b6238 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x5645149b6158 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5645149b6110 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5645149b60f8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5645149b60b8 <col:166> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5645149b6140 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5645149b6128 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5645149b60d8 <col:184> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5645149b61f0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5645149b61a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5645149b6178 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5645149b6220 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x5645149b6208 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x5645149b61d0 <col:212> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5645149b6978 <line:811:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x5645149b63d0 <col:3> '_Bool' lvalue Var 0x5645149add50 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5645149b6960 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5645149b6930 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x5645149b68e8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5645149b68d0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5645149b63f0 <col:20> '_Bool' lvalue Var 0x5645149ae510 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5645149b6918 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5645149b6900 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5645149b6410 <col:36> '_Bool' lvalue Var 0x5645149add50 'x$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x5645149b68b0 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x5645149b6880 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x5645149b6620 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5645149b6540 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5645149b6468 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5645149b6450 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5645149b6430 <col:55> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5645149b6520 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5645149b64b8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5645149b64a0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5645149b6480 <col:74> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5645149b6508 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5645149b64f0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5645149b64d0 <col:93> '_Bool' lvalue Var 0x5645149ae1e0 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5645149b6600 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5645149b6598 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5645149b6580 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5645149b6560 <col:112> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5645149b65e8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5645149b65d0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5645149b65b0 <col:131> '_Bool' lvalue Var 0x5645149add50 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5645149b6868 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5645149b6850 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5645149b6640 <col:148> '_Bool' lvalue Var 0x5645149add50 'x$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x5645149b6830 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x5645149b6800 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x5645149b6700 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5645149b66b8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5645149b66a0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5645149b6660 <col:166> '_Bool' lvalue Var 0x5645149ae0e8 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5645149b66e8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5645149b66d0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5645149b6680 <col:184> '_Bool' lvalue Var 0x5645149adb70 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5645149b67d0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5645149b6750 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5645149b6720 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5645149b67e8 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x5645149b67a8 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x5645149b6778 <col:219> 'int' 0
    |-BinaryOperator 0x5645149b6bb0 <line:812:3, col:85> '_Bool' '='
    | |-DeclRefExpr 0x5645149b6998 <col:3> '_Bool' lvalue Var 0x5645149ad8e0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5645149b6b98 <col:21, col:85> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5645149b6b80 <col:21, col:85> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5645149b6b60 <col:22, col:85> 'int'
    |       `-BinaryOperator 0x5645149b6b40 <col:23, col:84> 'int' '&&'
    |         |-BinaryOperator 0x5645149b6aa8 <col:23, col:56> 'int' '&&'
    |         | |-BinaryOperator 0x5645149b6a10 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x5645149b69f8 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x5645149b69b8 <col:23> 'int' lvalue Var 0x5645149ad9e0 'x' 'int'
    |         | | `-IntegerLiteral 0x5645149b69d8 <col:28> 'int' 2
    |         | `-BinaryOperator 0x5645149b6a88 <col:33, col:56> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5645149b6a70 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5645149b6a30 <col:33> 'int' lvalue Var 0x5645149ad6b0 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x5645149b6a50 <col:56> 'int' 0
    |         `-BinaryOperator 0x5645149b6b20 <col:61, col:84> 'int' '=='
    |           |-ImplicitCastExpr 0x5645149b6b08 <col:61> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5645149b6ac8 <col:61> 'int' lvalue Var 0x5645149ad7d0 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x5645149b6ae8 <col:84> 'int' 0
    |-BinaryOperator 0x5645149b6ce0 <line:813:3, col:37> 'int' '='
    | |-DeclRefExpr 0x5645149b6bd0 <col:3> 'int' lvalue Var 0x5645149ad9e0 'x' 'int'
    | `-ConditionalOperator 0x5645149b6cb0 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x5645149b6c68 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5645149b6c50 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5645149b6bf0 <col:7> '_Bool' lvalue Var 0x5645149ada78 'x$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x5645149b6c80 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5645149b6c10 <col:25> 'int' lvalue Var 0x5645149adaf8 'x$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x5645149b6c98 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x5645149b6c30 <col:37> 'int' lvalue Var 0x5645149ad9e0 'x' 'int'
    |-BinaryOperator 0x5645149b6d78 <line:814:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x5645149b6d00 <col:3> '_Bool' lvalue Var 0x5645149ada78 'x$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x5645149b6d50 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x5645149b6d20 <col:28> 'int' 0
    |-CallExpr 0x5645149b6dd0 <line:815:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5645149b6db8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5645149b6d98 <col:3> 'void ()' Function 0x564514954410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5645149b6e48 <line:816:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5645149b6e30 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5645149b6df0 <col:3> 'void (int)' Function 0x5645149540d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5645149b6e88 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5645149b6e70 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5645149b6e10 <col:21> '_Bool' lvalue Var 0x5645149ad8e0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5645149b6ec0 <line:817:3, col:10>
      `-IntegerLiteral 0x5645149b6ea0 <col:10> 'int' 0
