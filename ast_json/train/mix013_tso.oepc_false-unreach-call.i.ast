TranslationUnitDecl 0x555dfc300f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x555dfc301848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x555dfc301520 '__int128'
|-TypedefDecl 0x555dfc3018b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x555dfc301540 'unsigned __int128'
|-TypedefDecl 0x555dfc301bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x555dfc301990 'struct __NSConstantString_tag'
|   `-Record 0x555dfc301910 '__NSConstantString_tag'
|-TypedefDecl 0x555dfc301c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x555dfc301c20 'char *'
|   `-BuiltinType 0x555dfc301020 'char'
|-TypedefDecl 0x555dfc340b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x555dfc301f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x555dfc301d40 'struct __va_list_tag'
|     `-Record 0x555dfc301cc0 '__va_list_tag'
|-FunctionDecl 0x555dfc340ca0 <pthread-wmm/mix013_tso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x555dfc340bd0 <col:31> col:34 'int'
|-FunctionDecl 0x555dfc340e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x555dfc340f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x555dfc3410d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x555dfc341048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x555dfc341308 <col:40, col:99>
|   |-IfStmt 0x555dfc3412d8 <col:42, col:88>
|   | |-UnaryOperator 0x555dfc3411b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x555dfc3411a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x555dfc341180 <col:47> 'int' lvalue ParmVar 0x555dfc341048 'expression' 'int'
|   | `-CompoundStmt 0x555dfc3412c0 <col:59, col:88>
|   |   `-LabelStmt 0x555dfc3412a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x555dfc341238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x555dfc341220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x555dfc3411d0 <col:68> 'void () __attribute__((noreturn))' Function 0x555dfc340f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x555dfc3412f0 <col:89>
|   `-ReturnStmt 0x555dfc3412f8 <col:91>
|-FunctionDecl 0x555dfc341350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x555dfc341410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x555dfc341790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x555dfc3414c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x555dfc341548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x555dfc3415c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x555dfc341648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x555dfc341850 <line:10:22>
|-FunctionDecl 0x555dfc3678a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x555dfc3418c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x555dfc341940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x555dfc3419c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x555dfc341a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x555dfc367960 <line:13:22>
|-FunctionDecl 0x555dfc367c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x555dfc3679d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x555dfc367a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x555dfc367ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x555dfc367cc8 <line:15:22>
|-TypedefDecl 0x555dfc367d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x555dfc3010e0 'unsigned char'
|-TypedefDecl 0x555dfc367da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x555dfc301100 'unsigned short'
|-TypedefDecl 0x555dfc367e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x555dfc301120 'unsigned int'
|-TypedefDecl 0x555dfc367e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x555dfc301140 'unsigned long'
|-TypedefDecl 0x555dfc367ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x555dfc301040 'signed char'
|-TypedefDecl 0x555dfc367f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x555dfc3010e0 'unsigned char'
|-TypedefDecl 0x555dfc367fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x555dfc301060 'short'
|-TypedefDecl 0x555dfc368048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x555dfc301100 'unsigned short'
|-TypedefDecl 0x555dfc3680b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x555dfc301080 'int'
|-TypedefDecl 0x555dfc368128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x555dfc301120 'unsigned int'
|-TypedefDecl 0x555dfc368198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x555dfc3010a0 'long'
|-TypedefDecl 0x555dfc368208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x555dfc301140 'unsigned long'
|-TypedefDecl 0x555dfc368278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x555dfc3010a0 'long'
|-TypedefDecl 0x555dfc3682e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x555dfc301140 'unsigned long'
|-TypedefDecl 0x555dfc368358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x555dfc301140 'unsigned long'
|-TypedefDecl 0x555dfc3683c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x555dfc301120 'unsigned int'
|-TypedefDecl 0x555dfc368438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x555dfc301120 'unsigned int'
|-TypedefDecl 0x555dfc3684a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x555dfc301140 'unsigned long'
|-TypedefDecl 0x555dfc368518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x555dfc301140 'unsigned long'
|-TypedefDecl 0x555dfc368588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x555dfc301120 'unsigned int'
|-TypedefDecl 0x555dfc3685f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x555dfc301140 'unsigned long'
|-TypedefDecl 0x555dfc368668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x555dfc3010a0 'long'
|-TypedefDecl 0x555dfc3686d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x555dfc3010a0 'long'
|-TypedefDecl 0x555dfc368748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x555dfc301080 'int'
|-RecordDecl 0x555dfc3687a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x555dfc368918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x555dfc3689d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x555dfc368970 'struct __fsid_t' sugar
|   `-RecordType 0x555dfc368820 '__fsid_t'
|     `-Record 0x555dfc3687a0 ''
|-TypedefDecl 0x555dfc368a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x555dfc3010a0 'long'
|-TypedefDecl 0x555dfc368ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x555dfc301140 'unsigned long'
|-TypedefDecl 0x555dfc368b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x555dfc301140 'unsigned long'
|-TypedefDecl 0x555dfc368ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x555dfc301120 'unsigned int'
|-TypedefDecl 0x555dfc368c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x555dfc3010a0 'long'
|-TypedefDecl 0x555dfc368c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x555dfc301120 'unsigned int'
|-TypedefDecl 0x555dfc368cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x555dfc3010a0 'long'
|-TypedefDecl 0x555dfc368d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x555dfc301080 'int'
|-TypedefDecl 0x555dfc368dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x555dfc301080 'int'
|-TypedefDecl 0x555dfc368e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x555dfc301080 'int'
|-TypedefDecl 0x555dfc368eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x555dfc3017a0 'void *'
|   `-BuiltinType 0x555dfc300fe0 'void'
|-TypedefDecl 0x555dfc368f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x555dfc3010a0 'long'
|-TypedefDecl 0x555dfc368f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x555dfc3010a0 'long'
|-TypedefDecl 0x555dfc369008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x555dfc3010a0 'long'
|-TypedefDecl 0x555dfc369078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x555dfc301140 'unsigned long'
|-TypedefDecl 0x555dfc3690e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x555dfc301140 'unsigned long'
|-TypedefDecl 0x555dfc369158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x555dfc301140 'unsigned long'
|-TypedefDecl 0x555dfc3691c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x555dfc301140 'unsigned long'
|-TypedefDecl 0x555dfc369238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x555dfc3010a0 'long'
|-TypedefDecl 0x555dfc3692a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x555dfc3010a0 'long'
|-TypedefDecl 0x555dfc369318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x555dfc3010a0 'long'
|-TypedefDecl 0x555dfc369388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x555dfc301140 'unsigned long'
|-TypedefDecl 0x555dfc369418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x555dfc3693e0 '__off64_t' sugar
|   |-Typedef 0x555dfc3686d8 '__off64_t'
|   `-BuiltinType 0x555dfc3010a0 'long'
|-TypedefDecl 0x555dfc369510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x555dfc3694d0 '__quad_t *'
|   `-TypedefType 0x555dfc369470 '__quad_t' sugar
|     |-Typedef 0x555dfc368278 '__quad_t'
|     `-BuiltinType 0x555dfc3010a0 'long'
|-TypedefDecl 0x555dfc369580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x555dfc301c20 'char *'
|   `-BuiltinType 0x555dfc301020 'char'
|-TypedefDecl 0x555dfc3695f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x555dfc3010a0 'long'
|-TypedefDecl 0x555dfc369660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x555dfc301120 'unsigned int'
|-FunctionDecl 0x555dfc3697a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x555dfc3696d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x555dfc369ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x555dfc369ad8 <line:72:3, col:34>
|     `-CallExpr 0x555dfc369a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x555dfc369a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x555dfc369a10 <col:10> '<builtin fn type>' Function 0x555dfc369880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x555dfc369ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x555dfc369a30 <col:29> 'unsigned int' lvalue ParmVar 0x555dfc3696d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x555dfc369880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x555dfc369920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x555dfc369990 <col:10> Implicit
| `-ConstAttr 0x555dfc3699e8 <col:10> Implicit
|-FunctionDecl 0x555dfc369c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x555dfc369b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x555dfc369f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x555dfc369f48 <line:77:3, col:34>
|     `-CallExpr 0x555dfc369f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x555dfc369ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x555dfc369e78 <col:10> '<builtin fn type>' Function 0x555dfc369ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x555dfc369f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x555dfc369e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x555dfc369b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x555dfc369ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x555dfc369d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x555dfc369df8 <col:10> Implicit
| `-ConstAttr 0x555dfc369e50 <col:10> Implicit
|-TypedefDecl 0x555dfc369f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x555dfc301140 'unsigned long'
|-TypedefDecl 0x555dfc36a018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x555dfc369fe0 '__time_t' sugar
|   |-Typedef 0x555dfc368c18 '__time_t'
|   `-BuiltinType 0x555dfc3010a0 'long'
|-RecordDecl 0x555dfc36a070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x555dfc36a128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x555dfc36a1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x555dfc36a248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x555dfc36a210 '__pid_t' sugar
|   |-Typedef 0x555dfc368748 '__pid_t'
|   `-BuiltinType 0x555dfc301080 'int'
|-RecordDecl 0x555dfc36a2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x555dfc36a360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x555dfc36a3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x555dfc36a470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x555dfc36a4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x555dfc301140 'unsigned long'
|-RecordDecl 0x555dfc36a530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x555dfc36a7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x555dfc36c8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x555dfc36a810 'struct cpu_set_t' sugar
|   `-RecordType 0x555dfc36a5b0 'cpu_set_t'
|     `-Record 0x555dfc36a530 ''
|-FunctionDecl 0x555dfc36cb88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x555dfc36c958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x555dfc36ca60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x555dfc36cc38 <line:107:19>
|-FunctionDecl 0x555dfc36ce10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x555dfc36cca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x555dfc36ceb8 <col:69>
|-FunctionDecl 0x555dfc36d030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x555dfc36cf20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x555dfc36d0d8 <col:64>
|-FunctionDecl 0x555dfc36d398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x555dfc36d140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x555dfc36d278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x555dfc36d448 <line:113:22>
|-FunctionDecl 0x555dfc36d6c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x555dfc36d4b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x555dfc36d5a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x555dfc36d778 <col:88>
|-FunctionDecl 0x555dfc36da98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x555dfc36d7e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x555dfc36d8c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x555dfc36d950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x555dfc36db50 <col:62>
|-FunctionDecl 0x555dfc36dcc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x555dfc36dbb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x555dfc36dd70 <col:63>
|-FunctionDecl 0x555dfc36de98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x555dfc36df38 <col:47>
|-FunctionDecl 0x555dfc36e040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x555dfc36dfa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x555dfc36e0e8 <col:69>
|-FunctionDecl 0x555dfc36e1f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x555dfc36e158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x555dfc36e298 <col:69>
|-FunctionDecl 0x555dfc36e558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x555dfc36e300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x555dfc36e438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x555dfc36e608 <col:88>
|-TypedefDecl 0x555dfc36e698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x555dfc36e660 '__clock_t' sugar
|   |-Typedef 0x555dfc368a58 '__clock_t'
|   `-BuiltinType 0x555dfc3010a0 'long'
|-TypedefDecl 0x555dfc36e728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x555dfc36e6f0 '__clockid_t' sugar
|   |-Typedef 0x555dfc368e48 '__clockid_t'
|   `-BuiltinType 0x555dfc301080 'int'
|-TypedefDecl 0x555dfc36e7b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x555dfc36e780 '__timer_t' sugar
|   |-Typedef 0x555dfc368eb8 '__timer_t'
|   `-PointerType 0x555dfc3017a0 'void *'
|     `-BuiltinType 0x555dfc300fe0 'void'
|-RecordDecl 0x555dfc36e810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x555dfc36e8e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x555dfc36e950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x555dfc36e9b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x555dfc36ea20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x555dfc36ea88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x555dfc36eaf0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x555dfc36eb58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x555dfc36ebc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x555dfc36ec28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x555dfc36ec90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x555dfc36ecf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x555dfc36ed48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x555dfc36ee18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x555dfc36ee88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x555dfc36ef30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x555dfc36f100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x555dfc36f1a0 <col:45>
|-FunctionDecl 0x555dfc36f380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x555dfc36f270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x555dfc36f428 <col:54>
|-FunctionDecl 0x555dfc36f628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x555dfc36f490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x555dfc36f508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x555dfc36f6d8 <line:157:22>
| `-ConstAttr 0x555dfc36f730 <col:63>
|-FunctionDecl 0x555dfc370560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x555dfc36f828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x555dfc370608 <col:56>
|-FunctionDecl 0x555dfc3709b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x555dfc370678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x555dfc3706f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x555dfc370770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x555dfc370868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x555dfc370a70 <col:54>
|-RecordDecl 0x555dfc370ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x555dfc370b78 parent 0x555dfc300f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x555dfc370dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x555dfc370e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x555dfc370ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x555dfc370f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x555dfc371038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x555dfc371158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x555dfc371100 'struct __locale_struct *'
|   `-ElaboratedType 0x555dfc371090 'struct __locale_struct' sugar
|     `-RecordType 0x555dfc370b50 'struct __locale_struct'
|       `-Record 0x555dfc370ac8 '__locale_struct'
|-TypedefDecl 0x555dfc371208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x555dfc3711d0 '__locale_t' sugar
|   |-Typedef 0x555dfc371158 '__locale_t'
|   `-PointerType 0x555dfc371100 'struct __locale_struct *'
|     `-ElaboratedType 0x555dfc371090 'struct __locale_struct' sugar
|       `-RecordType 0x555dfc370b50 'struct __locale_struct'
|         `-Record 0x555dfc370ac8 '__locale_struct'
|-FunctionDecl 0x555dfc371610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x555dfc371278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x555dfc3712f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x555dfc371370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x555dfc371400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x555dfc371478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x555dfc3716d8 <col:40>
|-FunctionDecl 0x555dfc3718c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x555dfc3717a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x555dfc371970 <col:66>
|-FunctionDecl 0x555dfc371a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x555dfc3719d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x555dfc371b28 <col:69>
|-FunctionDecl 0x555dfc371d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x555dfc371b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x555dfc371c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x555dfc371e08 <col:52>
|-FunctionDecl 0x555dfc371fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x555dfc371e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x555dfc371f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x555dfc372060 <col:55>
|-FunctionDecl 0x555dfc3721f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x555dfc3720e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x555dfc3722a0 <col:62>
|-FunctionDecl 0x555dfc372418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x555dfc372308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x555dfc3724c0 <col:60>
|-FunctionDecl 0x555dfc372718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x555dfc372578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x555dfc3725f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x555dfc3727c8 <col:44>
|-FunctionDecl 0x555dfc3729d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x555dfc372830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x555dfc3728b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x555dfc372a88 <col:49>
|-VarDecl 0x555dfc372b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x555dfc372c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x555dfc372c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x555dfc372d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x555dfc372e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x555dfc372f20 <col:42>
|-VarDecl 0x555dfc372f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x555dfc373010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x555dfc373198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x555dfc373088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x555dfc373240 <col:57>
|-FunctionDecl 0x555dfc373350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x555dfc3732c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x555dfc3733f8 <col:56>
|-FunctionDecl 0x555dfc374540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x555dfc373478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x555dfc3745e8 <col:59>
|-FunctionDecl 0x555dfc3746f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x555dfc374658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x555dfc374798 <col:48>
| `-ConstAttr 0x555dfc3747f0 <col:89>
|-FunctionDecl 0x555dfc374a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x555dfc3748a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x555dfc374938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x555dfc374cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x555dfc374b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555dfc374bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x555dfc374d68 <col:88>
|-FunctionDecl 0x555dfc374f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x555dfc374dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555dfc374e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x555dfc374fb0 <col:88>
|-FunctionDecl 0x555dfc3751c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x555dfc375018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555dfc3750a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x555dfc375278 <line:208:22>
|-FunctionDecl 0x555dfc3755e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x555dfc3752e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555dfc375360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x555dfc3753f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x555dfc375480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x555dfc3758e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x555dfc3756e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x555dfc3757c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x555dfc375998 <col:85>
|-FunctionDecl 0x555dfc375d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x555dfc375a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555dfc375b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x555dfc375c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x555dfc375e40 <col:52>
|-FunctionDecl 0x555dfc375fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x555dfc375ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x555dfc376060 <col:61>
|-FunctionDecl 0x555dfc376560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x555dfc3760c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x555dfc376148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x555dfc376278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x555dfc376368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x555dfc376620 <col:62>
|-FunctionDecl 0x555dfc376838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x555dfc376688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x555dfc376718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x555dfc3768e8 <line:221:22>
|-FunctionDecl 0x555dfc3769e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x555dfc376950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x555dfc376a90 <col:65>
|-TypedefDecl 0x555dfc376b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x555dfc301140 'unsigned long'
|-RecordDecl 0x555dfc376b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x555dfc376ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x555dfc376d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555dfc376db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x555dfc376d60 'union pthread_attr_t' sugar
|   `-RecordType 0x555dfc376be0 'union pthread_attr_t'
|     `-Record 0x555dfc376b58 'pthread_attr_t'
|-RecordDecl 0x555dfc376e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x555dfc376f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x555dfc377000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x555dfc3770b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x555dfc377050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x555dfc376e90 'struct __pthread_internal_list'
|     `-Record 0x555dfc376e10 '__pthread_internal_list'
|-RecordDecl 0x555dfc377120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x555dfc3771c8 parent 0x555dfc300f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x555dfc3772a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x555dfc377308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x555dfc377370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x555dfc3773d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x555dfc377440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x555dfc3774a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x555dfc37b580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x555dfc37b630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x555dfc37b720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x555dfc37b788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555dfc37b910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x555dfc37b8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x555dfc3771a0 'pthread_mutex_t'
|     `-Record 0x555dfc377120 ''
|-RecordDecl 0x555dfc37b980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x555dfc37bac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x555dfc37bb28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x555dfc37bbe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x555dfc37bb80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x555dfc37ba00 'pthread_mutexattr_t'
|     `-Record 0x555dfc37b980 ''
|-RecordDecl 0x555dfc37bc50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x555dfc37bcf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x555dfc37bdc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x555dfc37be28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x555dfc37be90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x555dfc37bef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x555dfc37bf60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x555dfc37bfc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x555dfc37c030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x555dfc37c098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x555dfc37c150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix013_tso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix013_tso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x555dfc37c240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x555dfc37c2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x555dfc37c3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x555dfc37c380 'union pthread_cond_t' sugar
|   `-RecordType 0x555dfc37bcd0 'pthread_cond_t'
|     `-Record 0x555dfc37bc50 ''
|-RecordDecl 0x555dfc37c450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x555dfc37c590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x555dfc37c5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x555dfc37c6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x555dfc37c650 'union pthread_condattr_t' sugar
|   `-RecordType 0x555dfc37c4d0 'pthread_condattr_t'
|     `-Record 0x555dfc37c450 ''
|-TypedefDecl 0x555dfc37c738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x555dfc301120 'unsigned int'
|-TypedefDecl 0x555dfc37c7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x555dfc301080 'int'
|-RecordDecl 0x555dfc37c800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x555dfc37c8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x555dfc37c970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x555dfc37c9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x555dfc37ca40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x555dfc37caa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x555dfc37cb10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x555dfc37cb78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x555dfc37cbe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x555dfc37cc48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x555dfc37ccb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x555dfc37cd18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x555dfc37cd80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x555dfc37ce30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix013_tso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix013_tso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x555dfc37ced8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x555dfc37cf40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555dfc37d090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x555dfc37d030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x555dfc37c880 'pthread_rwlock_t'
|     `-Record 0x555dfc37c800 ''
|-RecordDecl 0x555dfc37d100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x555dfc37d240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x555dfc37d2a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555dfc37d360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x555dfc37d300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x555dfc37d180 'pthread_rwlockattr_t'
|     `-Record 0x555dfc37d100 ''
|-TypedefDecl 0x555dfc37d3e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x555dfc301084 'volatile int' volatile
|   `-BuiltinType 0x555dfc301080 'int'
|-RecordDecl 0x555dfc37d440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x555dfc37f5b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x555dfc37f618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555dfc37f6d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x555dfc37f670 'union pthread_barrier_t' sugar
|   `-RecordType 0x555dfc37d4c0 'pthread_barrier_t'
|     `-Record 0x555dfc37d440 ''
|-RecordDecl 0x555dfc37f740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x555dfc37f840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x555dfc37f8a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x555dfc37f960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x555dfc37f900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x555dfc37f7c0 'pthread_barrierattr_t'
|     `-Record 0x555dfc37f740 ''
|-TypedefDecl 0x555dfc37fa78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x555dfc37fa10 'long [8]' 8 
|   `-BuiltinType 0x555dfc3010a0 'long'
|-EnumDecl 0x555dfc37fad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x555dfc37fb98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x555dfc37fbe8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x555dfc37fc38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x555dfc37fd08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x555dfc37fd58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x555dfc37fda8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x555dfc37fdf8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x555dfc37fe80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x555dfc37fe68 <col:26> 'int'
| |   `-DeclRefExpr 0x555dfc37fe48 <col:26> 'int' EnumConstant 0x555dfc37fd08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x555dfc37ff08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x555dfc37fef0 <col:29> 'int'
| |   `-DeclRefExpr 0x555dfc37fed0 <col:29> 'int' EnumConstant 0x555dfc37fd58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x555dfc37ff90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x555dfc37ff78 <col:30> 'int'
| |   `-DeclRefExpr 0x555dfc37ff58 <col:30> 'int' EnumConstant 0x555dfc37fda8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x555dfc380018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x555dfc380000 <col:27> 'int'
|     `-DeclRefExpr 0x555dfc37ffe0 <col:27> 'int' EnumConstant 0x555dfc37fe80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x555dfc380068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x555dfc380138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x555dfc3801c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x555dfc3801a8 <col:30> 'int'
| |   `-DeclRefExpr 0x555dfc380188 <col:30> 'int' EnumConstant 0x555dfc380138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x555dfc380210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x555dfc380298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x555dfc380280 <col:29> 'int'
|     `-DeclRefExpr 0x555dfc380260 <col:29> 'int' EnumConstant 0x555dfc380210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x555dfc3802e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x555dfc3803b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x555dfc380408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x555dfc380458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x555dfc3804a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x555dfc3805c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x555dfc380610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x555dfc380660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x555dfc3806e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x555dfc3806d0 <col:31> 'int'
|     `-DeclRefExpr 0x555dfc3806b0 <col:31> 'int' EnumConstant 0x555dfc3805c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x555dfc380738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x555dfc380808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x555dfc380858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x555dfc3808a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x555dfc380978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x555dfc3809c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x555dfc380a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x555dfc380ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x555dfc380b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x555dfc380b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x555dfc380dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x555dfc380e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x555dfc380e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x555dfc380fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x555dfc381008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x555dfc3810d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x555dfc381128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x555dfc381178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x555dfc381248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x555dfc381298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x555dfc3818f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x555dfc381390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x555dfc3814a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555dfc3816e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x555dfc381760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x555dfc3819b8 <col:47>
| |-NonNullAttr 0x555dfc381a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x555dfc381a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x555dfc381b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x555dfc381aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x555dfc381dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x555dfc381c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x555dfc381ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x555dfc381f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x555dfc381e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x555dfc382040 <col:60>
|-FunctionDecl 0x555dfc382190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x555dfc382230 <col:54>
| `-ConstAttr 0x555dfc382288 <col:95>
|-FunctionDecl 0x555dfc382458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x555dfc3822c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555dfc382338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x555dfc382508 <line:394:19>
| `-ConstAttr 0x555dfc382560 <col:60>
|-FunctionDecl 0x555dfc382f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x555dfc382e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x555dfc383010 <col:71>
| `-NonNullAttr 0x555dfc383068 <col:112, col:126> 1
|-FunctionDecl 0x555dfc383170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x555dfc3830b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x555dfc383218 <line:397:22>
| `-NonNullAttr 0x555dfc383270 <col:63, col:77> 1
|-FunctionDecl 0x555dfc383498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x555dfc3832b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x555dfc383338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x555dfc383548 <line:400:22>
| `-NonNullAttr 0x555dfc3835a0 <col:63, col:80> 1 2
|-FunctionDecl 0x555dfc3837a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x555dfc3835e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555dfc383668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x555dfc383858 <line:403:22>
| `-NonNullAttr 0x555dfc3838b0 <col:63, col:77> 1
|-FunctionDecl 0x555dfc383b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x555dfc3838f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x555dfc3839a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x555dfc383bb8 <line:406:22>
| `-NonNullAttr 0x555dfc383c10 <col:63, col:80> 1 2
|-FunctionDecl 0x555dfc384e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x555dfc383c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555dfc383cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x555dfc384ef8 <line:409:22>
| `-NonNullAttr 0x555dfc384f50 <col:63, col:77> 1
|-FunctionDecl 0x555dfc385188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x555dfc384f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555dfc385028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x555dfc385238 <line:412:22>
| `-NonNullAttr 0x555dfc385290 <col:63, col:80> 1 2
|-FunctionDecl 0x555dfc3854c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x555dfc3852d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x555dfc385368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x555dfc385578 <col:37>
| `-NonNullAttr 0x555dfc3855d0 <col:78, col:95> 1 2
|-FunctionDecl 0x555dfc3857b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555dfc385618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555dfc385698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x555dfc385868 <line:418:22>
| `-NonNullAttr 0x555dfc3858c0 <col:63, col:80> 1 2
|-FunctionDecl 0x555dfc385a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x555dfc385908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555dfc385988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x555dfc385af8 <line:420:22>
| `-NonNullAttr 0x555dfc385b50 <col:63, col:77> 1
|-FunctionDecl 0x555dfc385cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555dfc385b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555dfc385c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x555dfc385da8 <line:423:22>
| `-NonNullAttr 0x555dfc386e30 <col:63, col:80> 1 2
|-FunctionDecl 0x555dfc386fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x555dfc386e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555dfc386ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x555dfc387068 <line:426:22>
| `-NonNullAttr 0x555dfc3870c0 <col:63, col:77> 1
|-FunctionDecl 0x555dfc387268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555dfc387108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555dfc387188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x555dfc387318 <line:429:22>
| `-NonNullAttr 0x555dfc387370 <col:63, col:80> 1 2
|-FunctionDecl 0x555dfc3874f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x555dfc3873b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555dfc387438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x555dfc3875a8 <line:431:22>
| `-NonNullAttr 0x555dfc387600 <col:63, col:77> 1
|-FunctionDecl 0x555dfc387828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x555dfc387648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555dfc3876c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x555dfc3878d8 <line:434:22>
| |-NonNullAttr 0x555dfc387930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x555dfc387968 <col:100> "" ""
|-FunctionDecl 0x555dfc387b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x555dfc3879b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555dfc387a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x555dfc387c28 <line:437:22>
| |-NonNullAttr 0x555dfc387c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x555dfc387cb8 <col:97> "" ""
|-FunctionDecl 0x555dfc387eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x555dfc387d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555dfc387d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x555dfc387f68 <line:440:22>
| `-NonNullAttr 0x555dfc387fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x555dfc388140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x555dfc388008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555dfc388080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x555dfc3881f0 <line:443:22>
| `-NonNullAttr 0x555dfc388248 <col:63, col:77> 1
|-FunctionDecl 0x555dfc388538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x555dfc388298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555dfc388318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x555dfc388390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x555dfc3885f0 <line:447:22>
| `-NonNullAttr 0x555dfc388648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x555dfc3888f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x555dfc3886a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555dfc388720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x555dfc388798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x555dfc3889b0 <col:43>
| `-NonNullAttr 0x555dfc388a08 <col:84, col:98> 1
|-FunctionDecl 0x555dfc388cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x555dfc388a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555dfc388ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x555dfc388b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x555dfc388d80 <line:452:22>
| `-NonNullAttr 0x555dfc388dd8 <col:63, col:77> 3
|-FunctionDecl 0x555dfc3890e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x555dfc388e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555dfc388ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x555dfc388f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x555dfc3891a0 <line:456:22>
| `-NonNullAttr 0x555dfc3891f8 <col:63, col:80> 2 3
|-FunctionDecl 0x555dfc3893e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x555dfc389248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555dfc3892c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x555dfc389498 <line:458:22>
|-FunctionDecl 0x555dfc389868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x555dfc389560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x555dfc389700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x555dfc389918 <col:52, col:69> 1 2
|-FunctionDecl 0x555dfc389ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x555dfc3899a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x555dfc389a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x555dfc389ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x555dfc389b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x555dfc389c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x555dfc389e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x555dfc389d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x555dfc389fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x555dfc38a040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x555dfc38a0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x555dfc38a1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x555dfc38a240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x555dfc38a410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix013_tso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x555dfc38a508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x555dfc38a5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x555dfc38a560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x555dfc38a0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x555dfc38a040 ''
| `-AlignedAttr 0x555dfc38a618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x555dfc38a690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x555dfc38a7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x555dfc38a858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x555dfc38a8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x555dfc38a928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x555dfc38ab30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x555dfc38aa20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x555dfc38ac78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x555dfc38abe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x555dfc38ae70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x555dfc38ad30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x555dfc38af18 <line:487:22>
|-RecordDecl 0x555dfc38af70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x555dfc38b288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x555dfc38b0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x555dfc38b168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x555dfc38b338 <col:86>
| `-ReturnsTwiceAttr 0x555dfc38b390 <col:12> Implicit
|-FunctionDecl 0x555dfc38b6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x555dfc38b460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x555dfc38b570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x555dfc38b768 <line:493:22>
| `-NonNullAttr 0x555dfc38b7c0 <col:63, col:77> 1
|-FunctionDecl 0x555dfc38b938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555dfc38b808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555dfc38b9e0 <line:495:22>
| `-NonNullAttr 0x555dfc38ba38 <col:63, col:77> 1
|-FunctionDecl 0x555dfc38bb40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555dfc38ba88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555dfc38bbe8 <line:497:22>
| `-NonNullAttr 0x555dfc38bc40 <col:52, col:66> 1
|-FunctionDecl 0x555dfc38bd40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555dfc38bc88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555dfc38bde8 <line:499:22>
| `-NonNullAttr 0x555dfc38be40 <col:52, col:66> 1
|-FunctionDecl 0x555dfc38c088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x555dfc38be98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x555dfc38bf28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x555dfc38c138 <col:36>
| `-NonNullAttr 0x555dfc38c190 <col:66, col:83> 1 2
|-FunctionDecl 0x555dfc38c290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555dfc38c1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555dfc38c338 <line:504:22>
| `-NonNullAttr 0x555dfc38c390 <col:52, col:66> 1
|-FunctionDecl 0x555dfc38c628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555dfc38c440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x555dfc38c4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x555dfc38c6d8 <line:508:22>
| `-NonNullAttr 0x555dfc38c730 <col:63, col:80> 1 2
|-FunctionDecl 0x555dfc38c9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x555dfc38c778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x555dfc38c7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x555dfc38c878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x555dfc38cab0 <line:512:22>
| `-NonNullAttr 0x555dfc38cb08 <col:63, col:80> 1 3
|-FunctionDecl 0x555dfc38cc10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555dfc38cb58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555dfc38ccb8 <line:514:22>
| `-NonNullAttr 0x555dfc38cd10 <col:63, col:77> 1
|-FunctionDecl 0x555dfc38cf38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x555dfc38cdc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x555dfc38cfe0 <line:516:22>
| `-NonNullAttr 0x555dfc38d038 <col:63, col:77> 1
|-FunctionDecl 0x555dfc38d140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x555dfc38d088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x555dfc38d1e8 <line:518:22>
| `-NonNullAttr 0x555dfc38d240 <col:63, col:77> 1
|-FunctionDecl 0x555dfc38d468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555dfc38d288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x555dfc38d308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x555dfc38d518 <line:522:22>
| `-NonNullAttr 0x555dfc38d570 <col:63, col:80> 1 2
|-FunctionDecl 0x555dfc38d778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555dfc38d5b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555dfc38d638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x555dfc38d828 <line:525:22>
| `-NonNullAttr 0x555dfc38d880 <col:63, col:77> 1
|-FunctionDecl 0x555dfc38da28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555dfc38d8c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x555dfc38d948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x555dfc38dad8 <line:528:22>
| `-NonNullAttr 0x555dfc38db30 <col:63, col:80> 1 2
|-FunctionDecl 0x555dfc38dcb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555dfc38db78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555dfc38dbf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x555dfc38dd68 <line:530:22>
| `-NonNullAttr 0x555dfc38ddc0 <col:63, col:77> 1
|-FunctionDecl 0x555dfc38ef90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555dfc38de08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x555dfc38eeb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x555dfc38f040 <line:534:22>
| `-NonNullAttr 0x555dfc38f098 <col:63, col:80> 1 2
|-FunctionDecl 0x555dfc38f228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555dfc38f0e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555dfc38f168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x555dfc38f2d8 <line:537:22>
| `-NonNullAttr 0x555dfc38f330 <col:63, col:77> 1
|-FunctionDecl 0x555dfc38f4d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555dfc38f378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x555dfc38f3f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x555dfc38f588 <line:541:22>
| `-NonNullAttr 0x555dfc38f5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x555dfc38f768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555dfc38f628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555dfc38f6a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x555dfc38f818 <line:544:22>
| `-NonNullAttr 0x555dfc38f870 <col:63, col:77> 1
|-FunctionDecl 0x555dfc38fa58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x555dfc38f8b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x555dfc38f938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x555dfc38fb08 <line:547:22>
| `-NonNullAttr 0x555dfc38fb60 <col:63, col:80> 1 2
|-FunctionDecl 0x555dfc38fce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555dfc38fba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555dfc38fc28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x555dfc38fd98 <line:550:22>
| `-NonNullAttr 0x555dfc38fdf0 <col:63, col:77> 1
|-FunctionDecl 0x555dfc391168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x555dfc390f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x555dfc391020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x555dfc391218 <col:29>
| `-NonNullAttr 0x555dfc391270 <col:70, col:84> 1
|-FunctionDecl 0x555dfc3913e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555dfc3912b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555dfc391490 <line:555:22>
| `-NonNullAttr 0x555dfc3914e8 <col:63, col:77> 1
|-FunctionDecl 0x555dfc3915f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555dfc391538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555dfc391698 <line:557:22>
| `-NonNullAttr 0x555dfc3916f0 <col:52, col:66> 1
|-FunctionDecl 0x555dfc3917f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555dfc391738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555dfc391898 <line:559:19>
| `-NonNullAttr 0x555dfc3918f0 <col:49, col:63> 1
|-FunctionDecl 0x555dfc391b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x555dfc391938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x555dfc3919c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x555dfc391bd8 <col:39>
| `-NonNullAttr 0x555dfc391c30 <col:69, col:86> 1 2
|-FunctionDecl 0x555dfc391d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555dfc391c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555dfc391dd8 <line:564:22>
| `-NonNullAttr 0x555dfc391e30 <col:52, col:66> 1
|-FunctionDecl 0x555dfc391f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555dfc391ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555dfc392040 <line:566:22>
| `-NonNullAttr 0x555dfc392098 <col:52, col:66> 1
|-FunctionDecl 0x555dfc392258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x555dfc3920e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x555dfc392178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x555dfc392308 <col:39>
| `-NonNullAttr 0x555dfc392360 <col:69, col:86> 1 2
|-FunctionDecl 0x555dfc392460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555dfc3923a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555dfc392508 <line:571:22>
| `-NonNullAttr 0x555dfc392560 <col:52, col:66> 1
|-FunctionDecl 0x555dfc392748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x555dfc392610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x555dfc3927f0 <line:573:22>
| `-NonNullAttr 0x555dfc392848 <col:63, col:77> 1
|-FunctionDecl 0x555dfc392950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x555dfc392898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x555dfc3929f8 <line:575:22>
| `-NonNullAttr 0x555dfc392a50 <col:63, col:77> 1
|-FunctionDecl 0x555dfc392c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555dfc392a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x555dfc392b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x555dfc392d28 <line:579:22>
| `-NonNullAttr 0x555dfc392d80 <col:63, col:80> 1 2
|-FunctionDecl 0x555dfc392fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x555dfc392dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x555dfc392e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x555dfc393058 <line:582:22>
| `-NonNullAttr 0x555dfc3930b0 <col:63, col:77> 1
|-FunctionDecl 0x555dfc393258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555dfc3930f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x555dfc393178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x555dfc393308 <line:586:22>
| `-NonNullAttr 0x555dfc393360 <col:63, col:80> 1 2
|-FunctionDecl 0x555dfc3934e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x555dfc3933a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x555dfc393428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x555dfc393598 <col:36>
| `-NonNullAttr 0x555dfc3935f0 <col:77, col:91> 1
|-FunctionDecl 0x555dfc393928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x555dfc3936d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x555dfc3937e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x555dfc3939d8 <line:591:22>
| `-NonNullAttr 0x555dfc393a30 <col:63, col:77> 1
|-FunctionDecl 0x555dfc393ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x555dfc393a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x555dfc393c50 <line:593:22>
| `-NonNullAttr 0x555dfc393ca8 <col:63, col:77> 1
|-FunctionDecl 0x555dfc393db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x555dfc393cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x555dfc393e58 <line:595:22>
| `-NonNullAttr 0x555dfc393eb0 <col:52, col:66> 1
|-FunctionDecl 0x555dfc393fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x555dfc393f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x555dfc394070 <line:597:22>
| `-NonNullAttr 0x555dfc3940c8 <col:52, col:66> 1
|-FunctionDecl 0x555dfc3942f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x555dfc394118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x555dfc394190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x555dfc3943a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x555dfc3946d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x555dfc394428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x555dfc3944a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x555dfc394530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x555dfc394790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x555dfc3949a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x555dfc394870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x555dfc394a50 <line:606:22>
| `-NonNullAttr 0x555dfc394aa8 <col:63, col:77> 1
|-FunctionDecl 0x555dfc394bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x555dfc394af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x555dfc394c58 <line:608:22>
| `-NonNullAttr 0x555dfc394cb0 <col:63, col:77> 1
|-FunctionDecl 0x555dfc394f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555dfc394cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x555dfc394d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x555dfc394fc0 <line:612:22>
| `-NonNullAttr 0x555dfc395018 <col:63, col:80> 1 2
|-FunctionDecl 0x555dfc395228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x555dfc395068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x555dfc3950e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x555dfc3952d8 <col:37>
| `-NonNullAttr 0x555dfc395330 <col:78, col:92> 1
|-FunctionDecl 0x555dfc395548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x555dfc395378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x555dfc395420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x555dfc3955f8 <line:618:22>
| `-NonNullAttr 0x555dfc395650 <col:63, col:80> 1 2
|-FunctionDecl 0x555dfc395818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x555dfc395698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x555dfc395710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x555dfc3958c8 <line:621:22>
| `-NonNullAttr 0x555dfc395920 <col:63, col:77> 1
|-FunctionDecl 0x555dfc395bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x555dfc395a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x555dfc395a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x555dfc395c78 <line:623:22>
| `-NonNullAttr 0x555dfc395cd0 <col:63, col:77> 1
|-FunctionDecl 0x555dfc395e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x555dfc395d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x555dfc395f20 <line:625:22>
| `-NonNullAttr 0x555dfc395f78 <col:63, col:77> 1
|-FunctionDecl 0x555dfc396080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x555dfc395fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x555dfc396128 <line:627:22>
| `-NonNullAttr 0x555dfc396180 <col:52, col:66> 1
|-FunctionDecl 0x555dfc396280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x555dfc3961c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x555dfc396328 <line:629:22>
| `-NonNullAttr 0x555dfc396380 <col:52, col:66> 1
|-FunctionDecl 0x555dfc396480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x555dfc3963c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x555dfc396528 <line:631:22>
| `-NonNullAttr 0x555dfc396580 <col:52, col:66> 1
|-FunctionDecl 0x555dfc396958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x555dfc396660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x555dfc396770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x555dfc3967f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x555dfc396a10 <line:635:22>
| `-NonNullAttr 0x555dfc396a68 <col:63, col:77> 1
|-FunctionDecl 0x555dfc396be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x555dfc396ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x555dfc396c90 <line:637:22>
| `-NonNullAttr 0x555dfc396ce8 <col:63, col:77> 1
|-FunctionDecl 0x555dfc396df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x555dfc396d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x555dfc396e98 <line:639:22>
| `-NonNullAttr 0x555dfc396ef0 <col:52, col:66> 1
|-FunctionDecl 0x555dfc3970e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x555dfc396fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x555dfc397190 <line:641:22>
| `-NonNullAttr 0x555dfc3971e8 <col:63, col:77> 1
|-FunctionDecl 0x555dfc3972f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x555dfc397238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x555dfc397398 <line:643:22>
| `-NonNullAttr 0x555dfc3973f0 <col:63, col:77> 1
|-FunctionDecl 0x555dfc397618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555dfc397438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x555dfc3974b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x555dfc3976c8 <line:647:22>
| `-NonNullAttr 0x555dfc397720 <col:63, col:80> 1 2
|-FunctionDecl 0x555dfc397928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x555dfc397768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x555dfc3977e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x555dfc3979d8 <line:650:22>
| `-NonNullAttr 0x555dfc397a30 <col:63, col:77> 1
|-FunctionDecl 0x555dfc397d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x555dfc397b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x555dfc397c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x555dfc397e28 <line:653:22>
| `-NonNullAttr 0x555dfc397e80 <col:63, col:77> 1
|-FunctionDecl 0x555dfc397fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x555dfc397ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x555dfc398090 <col:69>
|-FunctionDecl 0x555dfc398208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x555dfc3980f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x555dfc3982b0 <col:72>
|-FunctionDecl 0x555dfc3984e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x555dfc398318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x555dfc3983c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x555dfc398598 <col:44>
|-FunctionDecl 0x555dfc3987b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x555dfc398600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555dfc398678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x555dfc398868 <line:660:22>
| `-NonNullAttr 0x555dfc3988c0 <col:63, col:77> 2
|-FunctionDecl 0x555dfc398d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x555dfc3989a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x555dfc398ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x555dfc398bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x555dfc398dc0 <col:47>
|-FunctionDecl 0x555dfc399f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x555dfc398e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x555dfc39a0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x555dfc39a020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x555dfc39a210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x555dfc39a178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x555dfc39a368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x555dfc39a2d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x555dfc39a430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x555dfc39a4f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x555dfc39a5b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x555dfc39a668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x555dfc39a6e8 prev 0x555dfc39a668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x555dfc39a750 <col:24> 'int' 0
|-VarDecl 0x555dfc39a788 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x555dfc39a808 prev 0x555dfc39a788 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x555dfc39a870 <col:27> 'int' 0
|-VarDecl 0x555dfc39a8a8 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x555dfc39a928 prev 0x555dfc39a8a8 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x555dfc39a990 <col:27> 'int' 0
|-VarDecl 0x555dfc39a9c8 <line:678:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x555dfc39aa48 prev 0x555dfc39a9c8 <line:679:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x555dfc39aab0 <col:27> 'int' 0
|-VarDecl 0x555dfc39aae8 <line:680:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x555dfc39ab68 prev 0x555dfc39aae8 <line:681:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x555dfc39abd0 <col:27> 'int' 0
|-VarDecl 0x555dfc39ac08 <line:682:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x555dfc39ac88 prev 0x555dfc39ac08 <line:683:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x555dfc39acf0 <col:27> 'int' 0
|-VarDecl 0x555dfc39ad28 <line:684:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x555dfc39ada8 prev 0x555dfc39ad28 <line:685:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x555dfc39ae10 <col:27> 'int' 0
|-VarDecl 0x555dfc39ae48 <line:686:1, col:5> col:5 used a 'int'
|-VarDecl 0x555dfc39aec8 prev 0x555dfc39ae48 <line:687:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x555dfc39af30 <col:9> 'int' 0
|-VarDecl 0x555dfc39af70 <line:688:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x555dfc39aff0 <line:689:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x555dfc39b068 <line:690:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x555dfc39b0e0 <line:691:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x555dfc39b158 <line:692:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x555dfc39b1d0 <line:693:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x555dfc39b248 <line:694:1, col:7> col:7 used a$r_buff0_thd4 '_Bool'
|-VarDecl 0x555dfc39b2c0 <line:695:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x555dfc39b338 <line:696:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x555dfc39b3b0 <line:697:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x555dfc39b428 <line:698:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x555dfc39b4a0 <line:699:1, col:7> col:7 used a$r_buff1_thd4 '_Bool'
|-VarDecl 0x555dfc39b518 <line:700:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x555dfc39b598 <line:701:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x555dfc39b618 <line:702:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x555dfc39b690 <line:703:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x555dfc39b710 <line:704:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x555dfc39b788 <line:705:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x555dfc39b800 <line:706:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x555dfc39b878 <line:707:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x555dfc39b8f8 <line:708:1, col:5> col:5 used x 'int'
|-VarDecl 0x555dfc39b978 prev 0x555dfc39b8f8 <line:709:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x555dfc39b9e0 <col:9> 'int' 0
|-VarDecl 0x555dfc39ba18 <line:710:1, col:5> col:5 used y 'int'
|-VarDecl 0x555dfc39ba98 prev 0x555dfc39ba18 <line:711:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x555dfc39bb00 <col:9> 'int' 0
|-VarDecl 0x555dfc39bb38 <line:712:1, col:5> col:5 used z 'int'
|-VarDecl 0x555dfc39bbb8 prev 0x555dfc39bb38 <line:713:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x555dfc39bc20 <col:9> 'int' 0
|-VarDecl 0x555dfc39bc50 <line:714:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x555dfc39bcc8 <line:715:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x555dfc39bde0 prev 0x555dfc399f60 <line:716:1, line:745:1> line:716:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x555dfc39bd48 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x555dfc39d698 <line:717:1, line:745:1>
|   |-CallExpr 0x555dfc39bef8 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555dfc39bee0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc39be88 <col:3> 'void ()' Function 0x555dfc341350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555dfc39bf80 <line:719:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x555dfc39bf18 <col:3> 'int' lvalue Var 0x555dfc39b710 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x555dfc39bf58 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555dfc39bf38 <col:15> 'int' lvalue Var 0x555dfc39b618 'a$w_buff0' 'int'
|   |-BinaryOperator 0x555dfc39bfe0 <line:720:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x555dfc39bfa0 <col:3> 'int' lvalue Var 0x555dfc39b618 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x555dfc39bfc0 <col:15> 'int' 1
|   |-BinaryOperator 0x555dfc39c058 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc39c000 <col:3> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555dfc39c040 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555dfc39c020 <col:20> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555dfc39c0f0 <line:722:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc39c078 <col:3> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x555dfc39c0c8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x555dfc39c098 <col:27> 'int' 1
|   |-CallExpr 0x555dfc39c278 <line:723:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x555dfc39c260 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x555dfc39c110 <col:3> 'void (int)' Function 0x555dfc3410d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x555dfc39c210 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x555dfc39c1f0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x555dfc39c1d0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x555dfc39c188 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x555dfc39c170 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x555dfc39c130 <col:23> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x555dfc39c1b8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x555dfc39c1a0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x555dfc39c150 <col:41> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555dfc39c2f8 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc39c2a0 <col:3> '_Bool' lvalue Var 0x555dfc39b2c0 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x555dfc39c2e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555dfc39c2c0 <col:20> '_Bool' lvalue Var 0x555dfc39b068 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x555dfc39c370 <line:725:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc39c318 <col:3> '_Bool' lvalue Var 0x555dfc39b338 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x555dfc39c358 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555dfc39c338 <col:20> '_Bool' lvalue Var 0x555dfc39b0e0 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x555dfc39c3e8 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc39c390 <col:3> '_Bool' lvalue Var 0x555dfc39b3b0 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x555dfc39c3d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555dfc39c3b0 <col:20> '_Bool' lvalue Var 0x555dfc39b158 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x555dfc39c460 <line:727:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc39c408 <col:3> '_Bool' lvalue Var 0x555dfc39b428 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x555dfc39c448 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555dfc39c428 <col:20> '_Bool' lvalue Var 0x555dfc39b1d0 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x555dfc39c4d8 <line:728:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc39c480 <col:3> '_Bool' lvalue Var 0x555dfc39b4a0 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x555dfc39c4c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555dfc39c4a0 <col:20> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x555dfc39c570 <line:729:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc39c4f8 <col:3> '_Bool' lvalue Var 0x555dfc39b0e0 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x555dfc39c548 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x555dfc39c518 <col:27> 'int' 1
|   |-CallExpr 0x555dfc39c5c8 <line:730:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555dfc39c5b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc39c590 <col:3> 'void ()' Function 0x555dfc341410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555dfc39c620 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555dfc39c608 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc39c5e8 <col:3> 'void ()' Function 0x555dfc341350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555dfc39c698 <line:732:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x555dfc39c640 <col:3> 'int' lvalue Var 0x555dfc39a808 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x555dfc39c680 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555dfc39c660 <col:25> 'int' lvalue Var 0x555dfc39b978 'x' 'int'
|   |-CallExpr 0x555dfc39c6f0 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555dfc39c6d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc39c6b8 <col:3> 'void ()' Function 0x555dfc341410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555dfc39c748 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555dfc39c730 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc39c710 <col:3> 'void ()' Function 0x555dfc341350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555dfc39ca30 <line:735:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x555dfc39c768 <col:3> 'int' lvalue Var 0x555dfc39aec8 'a' 'int'
|   | `-ConditionalOperator 0x555dfc39ca00 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x555dfc39c828 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x555dfc39c7e0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x555dfc39c7c8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x555dfc39c788 <col:7> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x555dfc39c810 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x555dfc39c7f8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x555dfc39c7a8 <col:25> '_Bool' lvalue Var 0x555dfc39b0e0 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x555dfc39c9e8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555dfc39c848 <col:42> 'int' lvalue Var 0x555dfc39b618 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x555dfc39c9c8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x555dfc39c998 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x555dfc39c908 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x555dfc39c8c0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x555dfc39c8a8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x555dfc39c868 <col:55> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x555dfc39c8f0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x555dfc39c8d8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x555dfc39c888 <col:73> '_Bool' lvalue Var 0x555dfc39b338 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x555dfc39c968 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555dfc39c928 <col:90> 'int' lvalue Var 0x555dfc39b710 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x555dfc39c980 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x555dfc39c948 <col:102> 'int' lvalue Var 0x555dfc39aec8 'a' 'int'
|   |-BinaryOperator 0x555dfc39cc38 <line:736:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc39ca50 <col:3> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x555dfc39cc20 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555dfc39cbf0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555dfc39cb10 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555dfc39cac8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555dfc39cab0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555dfc39ca70 <col:20> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555dfc39caf8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555dfc39cae0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555dfc39ca90 <col:38> '_Bool' lvalue Var 0x555dfc39b0e0 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x555dfc39cba8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555dfc39cb60 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555dfc39cb30 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555dfc39cbd8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555dfc39cbc0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555dfc39cb88 <col:66> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555dfc39cf20 <line:737:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc39cc58 <col:3> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555dfc39cf08 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555dfc39ced8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555dfc39cdf8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555dfc39cd18 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555dfc39ccd0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555dfc39ccb8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555dfc39cc78 <col:20> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555dfc39cd00 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555dfc39cce8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555dfc39cc98 <col:38> '_Bool' lvalue Var 0x555dfc39b0e0 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x555dfc39cdd8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555dfc39cd90 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555dfc39cd78 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555dfc39cd38 <col:56> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555dfc39cdc0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555dfc39cda8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555dfc39cd58 <col:74> '_Bool' lvalue Var 0x555dfc39b338 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x555dfc39ce90 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555dfc39ce48 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555dfc39ce18 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555dfc39cec0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555dfc39cea8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555dfc39ce70 <col:102> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x555dfc39d138 <line:738:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc39cf40 <col:3> '_Bool' lvalue Var 0x555dfc39b0e0 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x555dfc39d120 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555dfc39d0f0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555dfc39d010 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555dfc39cfc8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555dfc39cfb0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555dfc39cf60 <col:20> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555dfc39cff8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555dfc39cfe0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555dfc39cf90 <col:38> '_Bool' lvalue Var 0x555dfc39b0e0 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x555dfc39d0a8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555dfc39d060 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555dfc39d030 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555dfc39d0d8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555dfc39d0c0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555dfc39d088 <col:66> '_Bool' lvalue Var 0x555dfc39b0e0 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x555dfc39d420 <line:739:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc39d158 <col:3> '_Bool' lvalue Var 0x555dfc39b338 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x555dfc39d408 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555dfc39d3d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555dfc39d2f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555dfc39d218 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555dfc39d1d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555dfc39d1b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555dfc39d178 <col:20> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555dfc39d200 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555dfc39d1e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555dfc39d198 <col:38> '_Bool' lvalue Var 0x555dfc39b0e0 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x555dfc39d2d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555dfc39d290 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555dfc39d278 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555dfc39d238 <col:56> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555dfc39d2c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555dfc39d2a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555dfc39d258 <col:74> '_Bool' lvalue Var 0x555dfc39b338 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x555dfc39d390 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555dfc39d348 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555dfc39d318 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555dfc39d3c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555dfc39d3a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555dfc39d370 <col:102> '_Bool' lvalue Var 0x555dfc39b338 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x555dfc39d478 <line:740:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555dfc39d460 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc39d440 <col:3> 'void ()' Function 0x555dfc341410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555dfc39d4d0 <line:741:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555dfc39d4b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc39d498 <col:3> 'void ()' Function 0x555dfc341350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555dfc39d588 <line:742:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x555dfc39d4f0 <col:3> 'int' lvalue Var 0x555dfc39a6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x555dfc39d568 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x555dfc39d550 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555dfc39d510 <col:22> 'int' lvalue Var 0x555dfc39a6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x555dfc39d530 <col:41> 'int' 1
|   |-CallExpr 0x555dfc39d5e0 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555dfc39d5c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc39d5a8 <col:3> 'void ()' Function 0x555dfc341410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x555dfc39d688 <line:744:3, col:36>
|     `-CallExpr 0x555dfc39d668 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x555dfc39d650 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x555dfc39d600 <col:10> 'void *(void)' Function 0x555dfc340e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x555dfc39d830 prev 0x555dfc39a0b8 <line:746:1, line:768:1> line:746:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x555dfc39d798 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x555dfc39eba8 <line:747:1, line:768:1>
|   |-CallExpr 0x555dfc39d910 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555dfc39d8f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc39d8d8 <col:3> 'void ()' Function 0x555dfc341350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555dfc39d970 <line:749:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x555dfc39d930 <col:3> 'int' lvalue Var 0x555dfc39b978 'x' 'int'
|   | `-IntegerLiteral 0x555dfc39d950 <col:7> 'int' 1
|   |-CallExpr 0x555dfc39d9c8 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555dfc39d9b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc39d990 <col:3> 'void ()' Function 0x555dfc341410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555dfc39da20 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555dfc39da08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc39d9e8 <col:3> 'void ()' Function 0x555dfc341350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555dfc39da98 <line:752:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x555dfc39da40 <col:3> 'int' lvalue Var 0x555dfc39a928 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x555dfc39da80 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555dfc39da60 <col:25> 'int' lvalue Var 0x555dfc39b978 'x' 'int'
|   |-CallExpr 0x555dfc39daf0 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555dfc39dad8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc39dab8 <col:3> 'void ()' Function 0x555dfc341410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555dfc39db48 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555dfc39db30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc39db10 <col:3> 'void ()' Function 0x555dfc341350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555dfc39dbc0 <line:755:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x555dfc39db68 <col:3> 'int' lvalue Var 0x555dfc39aa48 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x555dfc39dba8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555dfc39db88 <col:25> 'int' lvalue Var 0x555dfc39ba98 'y' 'int'
|   |-CallExpr 0x555dfc39dc18 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555dfc39dc00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc39dbe0 <col:3> 'void ()' Function 0x555dfc341410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555dfc39dc70 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555dfc39dc58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc39dc38 <col:3> 'void ()' Function 0x555dfc341350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555dfc39df58 <line:758:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x555dfc39dc90 <col:3> 'int' lvalue Var 0x555dfc39aec8 'a' 'int'
|   | `-ConditionalOperator 0x555dfc39df28 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x555dfc39dd50 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x555dfc39dd08 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x555dfc39dcf0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x555dfc39dcb0 <col:7> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x555dfc39dd38 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x555dfc39dd20 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x555dfc39dcd0 <col:25> '_Bool' lvalue Var 0x555dfc39b158 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x555dfc39df10 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555dfc39dd70 <col:42> 'int' lvalue Var 0x555dfc39b618 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x555dfc39def0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x555dfc39dec0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x555dfc39de30 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x555dfc39dde8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x555dfc39ddd0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x555dfc39dd90 <col:55> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x555dfc39de18 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x555dfc39de00 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x555dfc39ddb0 <col:73> '_Bool' lvalue Var 0x555dfc39b3b0 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x555dfc39de90 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555dfc39de50 <col:90> 'int' lvalue Var 0x555dfc39b710 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x555dfc39dea8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x555dfc39de70 <col:102> 'int' lvalue Var 0x555dfc39aec8 'a' 'int'
|   |-BinaryOperator 0x555dfc39e188 <line:759:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc39dfa0 <col:3> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x555dfc39e170 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555dfc39e140 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555dfc39e060 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555dfc39e018 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555dfc39e000 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555dfc39dfc0 <col:20> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555dfc39e048 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555dfc39e030 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555dfc39dfe0 <col:38> '_Bool' lvalue Var 0x555dfc39b158 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x555dfc39e0f8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555dfc39e0b0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555dfc39e080 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555dfc39e128 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555dfc39e110 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555dfc39e0d8 <col:66> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555dfc39e470 <line:760:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc39e1a8 <col:3> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555dfc39e458 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555dfc39e428 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555dfc39e348 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555dfc39e268 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555dfc39e220 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555dfc39e208 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555dfc39e1c8 <col:20> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555dfc39e250 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555dfc39e238 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555dfc39e1e8 <col:38> '_Bool' lvalue Var 0x555dfc39b158 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x555dfc39e328 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555dfc39e2e0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555dfc39e2c8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555dfc39e288 <col:56> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555dfc39e310 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555dfc39e2f8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555dfc39e2a8 <col:74> '_Bool' lvalue Var 0x555dfc39b3b0 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x555dfc39e3e0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555dfc39e398 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555dfc39e368 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555dfc39e410 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555dfc39e3f8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555dfc39e3c0 <col:102> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x555dfc39e678 <line:761:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc39e490 <col:3> '_Bool' lvalue Var 0x555dfc39b158 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x555dfc39e660 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555dfc39e630 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555dfc39e550 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555dfc39e508 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555dfc39e4f0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555dfc39e4b0 <col:20> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555dfc39e538 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555dfc39e520 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555dfc39e4d0 <col:38> '_Bool' lvalue Var 0x555dfc39b158 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x555dfc39e5e8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555dfc39e5a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555dfc39e570 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555dfc39e618 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555dfc39e600 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555dfc39e5c8 <col:66> '_Bool' lvalue Var 0x555dfc39b158 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x555dfc39e960 <line:762:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc39e698 <col:3> '_Bool' lvalue Var 0x555dfc39b3b0 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x555dfc39e948 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555dfc39e918 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555dfc39e838 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555dfc39e758 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555dfc39e710 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555dfc39e6f8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555dfc39e6b8 <col:20> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555dfc39e740 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555dfc39e728 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555dfc39e6d8 <col:38> '_Bool' lvalue Var 0x555dfc39b158 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x555dfc39e818 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555dfc39e7d0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555dfc39e7b8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555dfc39e778 <col:56> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555dfc39e800 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555dfc39e7e8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555dfc39e798 <col:74> '_Bool' lvalue Var 0x555dfc39b3b0 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x555dfc39e8d0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555dfc39e888 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555dfc39e858 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555dfc39e900 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555dfc39e8e8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555dfc39e8b0 <col:102> '_Bool' lvalue Var 0x555dfc39b3b0 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x555dfc39e9b8 <line:763:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555dfc39e9a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc39e980 <col:3> 'void ()' Function 0x555dfc341410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555dfc39ea10 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555dfc39e9f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc39e9d8 <col:3> 'void ()' Function 0x555dfc341350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555dfc39eac8 <line:765:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x555dfc39ea30 <col:3> 'int' lvalue Var 0x555dfc39a6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x555dfc39eaa8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x555dfc39ea90 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555dfc39ea50 <col:22> 'int' lvalue Var 0x555dfc39a6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x555dfc39ea70 <col:41> 'int' 1
|   |-CallExpr 0x555dfc39eb20 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555dfc39eb08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc39eae8 <col:3> 'void ()' Function 0x555dfc341410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x555dfc39eb98 <line:767:3, col:36>
|     `-CallExpr 0x555dfc39eb78 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x555dfc39eb60 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x555dfc39eb40 <col:10> 'void *(void)' Function 0x555dfc340e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x555dfc39ed08 prev 0x555dfc39a210 <line:769:1, line:788:1> line:769:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x555dfc39ec70 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x555dfc39ffc0 <line:770:1, line:788:1>
|   |-CallExpr 0x555dfc39ede8 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555dfc39edd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc39edb0 <col:3> 'void ()' Function 0x555dfc341350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555dfc39ee48 <line:772:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x555dfc39ee08 <col:3> 'int' lvalue Var 0x555dfc39ba98 'y' 'int'
|   | `-IntegerLiteral 0x555dfc39ee28 <col:7> 'int' 1
|   |-CallExpr 0x555dfc39eea0 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555dfc39ee88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc39ee68 <col:3> 'void ()' Function 0x555dfc341410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555dfc39eef8 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555dfc39eee0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc39eec0 <col:3> 'void ()' Function 0x555dfc341350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555dfc39ef70 <line:775:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x555dfc39ef18 <col:3> 'int' lvalue Var 0x555dfc39ab68 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x555dfc39ef58 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555dfc39ef38 <col:25> 'int' lvalue Var 0x555dfc39bbb8 'z' 'int'
|   |-CallExpr 0x555dfc39efe8 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555dfc39efd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc39efb0 <col:3> 'void ()' Function 0x555dfc341410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555dfc39f040 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555dfc39f028 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc39f008 <col:3> 'void ()' Function 0x555dfc341350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555dfc39f328 <line:778:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x555dfc39f060 <col:3> 'int' lvalue Var 0x555dfc39aec8 'a' 'int'
|   | `-ConditionalOperator 0x555dfc39f2f8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x555dfc39f120 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x555dfc39f0d8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x555dfc39f0c0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x555dfc39f080 <col:7> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x555dfc39f108 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x555dfc39f0f0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x555dfc39f0a0 <col:25> '_Bool' lvalue Var 0x555dfc39b1d0 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x555dfc39f2e0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555dfc39f140 <col:42> 'int' lvalue Var 0x555dfc39b618 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x555dfc39f2c0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x555dfc39f290 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x555dfc39f200 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x555dfc39f1b8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x555dfc39f1a0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x555dfc39f160 <col:55> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x555dfc39f1e8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x555dfc39f1d0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x555dfc39f180 <col:73> '_Bool' lvalue Var 0x555dfc39b428 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x555dfc39f260 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555dfc39f220 <col:90> 'int' lvalue Var 0x555dfc39b710 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x555dfc39f278 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x555dfc39f240 <col:102> 'int' lvalue Var 0x555dfc39aec8 'a' 'int'
|   |-BinaryOperator 0x555dfc39f530 <line:779:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc39f348 <col:3> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x555dfc39f518 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555dfc39f4e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555dfc39f408 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555dfc39f3c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555dfc39f3a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555dfc39f368 <col:20> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555dfc39f3f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555dfc39f3d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555dfc39f388 <col:38> '_Bool' lvalue Var 0x555dfc39b1d0 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x555dfc39f4a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555dfc39f458 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555dfc39f428 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555dfc39f4d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555dfc39f4b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555dfc39f480 <col:66> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555dfc39f818 <line:780:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc39f550 <col:3> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555dfc39f800 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555dfc39f7d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555dfc39f6f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555dfc39f610 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555dfc39f5c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555dfc39f5b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555dfc39f570 <col:20> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555dfc39f5f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555dfc39f5e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555dfc39f590 <col:38> '_Bool' lvalue Var 0x555dfc39b1d0 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x555dfc39f6d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555dfc39f688 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555dfc39f670 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555dfc39f630 <col:56> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555dfc39f6b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555dfc39f6a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555dfc39f650 <col:74> '_Bool' lvalue Var 0x555dfc39b428 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x555dfc39f788 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555dfc39f740 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555dfc39f710 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555dfc39f7b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555dfc39f7a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555dfc39f768 <col:102> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x555dfc39fa20 <line:781:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc39f838 <col:3> '_Bool' lvalue Var 0x555dfc39b1d0 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x555dfc39fa08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555dfc39f9d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555dfc39f8f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555dfc39f8b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555dfc39f898 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555dfc39f858 <col:20> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555dfc39f8e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555dfc39f8c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555dfc39f878 <col:38> '_Bool' lvalue Var 0x555dfc39b1d0 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x555dfc39f990 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555dfc39f948 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555dfc39f918 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555dfc39f9c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555dfc39f9a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555dfc39f970 <col:66> '_Bool' lvalue Var 0x555dfc39b1d0 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x555dfc39fd08 <line:782:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc39fa40 <col:3> '_Bool' lvalue Var 0x555dfc39b428 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x555dfc39fcf0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555dfc39fcc0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555dfc39fbe0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555dfc39fb00 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555dfc39fab8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555dfc39faa0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555dfc39fa60 <col:20> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555dfc39fae8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555dfc39fad0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555dfc39fa80 <col:38> '_Bool' lvalue Var 0x555dfc39b1d0 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x555dfc39fbc0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555dfc39fb78 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555dfc39fb60 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555dfc39fb20 <col:56> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555dfc39fba8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555dfc39fb90 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555dfc39fb40 <col:74> '_Bool' lvalue Var 0x555dfc39b428 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x555dfc39fc78 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555dfc39fc30 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555dfc39fc00 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555dfc39fca8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555dfc39fc90 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555dfc39fc58 <col:102> '_Bool' lvalue Var 0x555dfc39b428 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x555dfc39fd60 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555dfc39fd48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc39fd28 <col:3> 'void ()' Function 0x555dfc341410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555dfc39fdb8 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555dfc39fda0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc39fd80 <col:3> 'void ()' Function 0x555dfc341350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555dfc39fe70 <line:785:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x555dfc39fdd8 <col:3> 'int' lvalue Var 0x555dfc39a6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x555dfc39fe50 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x555dfc39fe38 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555dfc39fdf8 <col:22> 'int' lvalue Var 0x555dfc39a6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x555dfc39fe18 <col:41> 'int' 1
|   |-CallExpr 0x555dfc39fec8 <line:786:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555dfc39feb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc39fe90 <col:3> 'void ()' Function 0x555dfc341410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x555dfc39ff40 <line:787:3, col:36>
|     `-CallExpr 0x555dfc39ff20 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x555dfc39ff08 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x555dfc39fee8 <col:10> 'void *(void)' Function 0x555dfc340e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x555dfc3a0108 prev 0x555dfc39a368 <line:789:1, line:824:1> line:789:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x555dfc3a0070 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x555dfc3a3e00 <line:790:1, line:824:1>
|   |-CallExpr 0x555dfc3a01e8 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555dfc3a01d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc3a01b0 <col:3> 'void ()' Function 0x555dfc341350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555dfc3a0248 <line:792:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x555dfc3a0208 <col:3> 'int' lvalue Var 0x555dfc39bbb8 'z' 'int'
|   | `-IntegerLiteral 0x555dfc3a0228 <col:7> 'int' 1
|   |-CallExpr 0x555dfc3a02a0 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555dfc3a0288 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc3a0268 <col:3> 'void ()' Function 0x555dfc341410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555dfc3a02f8 <line:794:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555dfc3a02e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc3a02c0 <col:3> 'void ()' Function 0x555dfc341350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555dfc3a0370 <line:795:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x555dfc3a0318 <col:3> 'int' lvalue Var 0x555dfc39ac88 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x555dfc3a0358 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555dfc3a0338 <col:25> 'int' lvalue Var 0x555dfc39bbb8 'z' 'int'
|   |-CallExpr 0x555dfc3a03c8 <line:796:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555dfc3a03b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc3a0390 <col:3> 'void ()' Function 0x555dfc341410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555dfc3a0420 <line:797:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555dfc3a0408 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc3a03e8 <col:3> 'void ()' Function 0x555dfc341350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555dfc3a04d0 <line:798:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc3a0440 <col:3> '_Bool' lvalue Var 0x555dfc39bc50 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x555dfc3a04b8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x555dfc3a0498 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x555dfc3a0480 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x555dfc3a0460 <col:19> 'void *(void)' Function 0x555dfc340e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x555dfc3a0580 <line:799:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc3a04f0 <col:3> '_Bool' lvalue Var 0x555dfc39bcc8 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x555dfc3a0568 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x555dfc3a0548 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x555dfc3a0530 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x555dfc3a0510 <col:19> 'void *(void)' Function 0x555dfc340e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x555dfc3a05f8 <line:800:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc3a05a0 <col:3> '_Bool' lvalue Var 0x555dfc39af70 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x555dfc3a05e0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555dfc3a05c0 <col:21> '_Bool' lvalue Var 0x555dfc39bcc8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x555dfc3a0670 <line:801:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x555dfc3a0618 <col:3> 'int' lvalue Var 0x555dfc39aff0 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x555dfc3a0658 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555dfc3a0638 <col:15> 'int' lvalue Var 0x555dfc39aec8 'a' 'int'
|   |-BinaryOperator 0x555dfc3a0aa8 <line:802:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x555dfc3a0690 <col:3> 'int' lvalue Var 0x555dfc39aec8 'a' 'int'
|   | `-ConditionalOperator 0x555dfc3a0a78 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x555dfc3a08a0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x555dfc3a07c0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x555dfc3a06e8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x555dfc3a06d0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x555dfc3a06b0 <col:8> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x555dfc3a07a0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x555dfc3a0738 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x555dfc3a0720 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x555dfc3a0700 <col:27> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x555dfc3a0788 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x555dfc3a0770 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x555dfc3a0750 <col:46> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x555dfc3a0880 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x555dfc3a0818 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x555dfc3a0800 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x555dfc3a07e0 <col:65> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x555dfc3a0868 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x555dfc3a0850 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x555dfc3a0830 <col:84> '_Bool' lvalue Var 0x555dfc39b4a0 'a$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x555dfc3a0a60 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555dfc3a08c0 <col:101> 'int' lvalue Var 0x555dfc39aec8 'a' 'int'
|   |   `-ParenExpr 0x555dfc3a0a40 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x555dfc3a0a10 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x555dfc3a0980 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x555dfc3a0938 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x555dfc3a0920 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x555dfc3a08e0 <col:106> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x555dfc3a0968 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x555dfc3a0950 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x555dfc3a0900 <col:124> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x555dfc3a09e0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555dfc3a09a0 <col:141> 'int' lvalue Var 0x555dfc39b618 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x555dfc3a09f8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x555dfc3a09c0 <col:153> 'int' lvalue Var 0x555dfc39b710 'a$w_buff1' 'int'
|   |-BinaryOperator 0x555dfc3a0fd0 <line:803:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x555dfc3a0ac8 <col:3> 'int' lvalue Var 0x555dfc39b618 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x555dfc3a0f88 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x555dfc3a0f58 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x555dfc3a0f40 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x555dfc3a0ae8 <col:15> '_Bool' lvalue Var 0x555dfc39bcc8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x555dfc3a0f70 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555dfc3a0b08 <col:31> 'int' lvalue Var 0x555dfc39b618 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x555dfc3a0f20 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x555dfc3a0ef0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x555dfc3a0d18 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x555dfc3a0c38 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x555dfc3a0b60 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x555dfc3a0b48 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x555dfc3a0b28 <col:45> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x555dfc3a0c18 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x555dfc3a0bb0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x555dfc3a0b98 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x555dfc3a0b78 <col:64> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x555dfc3a0c00 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x555dfc3a0be8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x555dfc3a0bc8 <col:83> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x555dfc3a0cf8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x555dfc3a0c90 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x555dfc3a0c78 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x555dfc3a0c58 <col:102> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x555dfc3a0ce0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x555dfc3a0cc8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x555dfc3a0ca8 <col:121> '_Bool' lvalue Var 0x555dfc39b4a0 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x555dfc3a0ed8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555dfc3a0d38 <col:138> 'int' lvalue Var 0x555dfc39b618 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x555dfc3a0eb8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x555dfc3a0e88 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x555dfc3a0df8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x555dfc3a0db0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x555dfc3a0d98 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x555dfc3a0d58 <col:151> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x555dfc3a0de0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x555dfc3a0dc8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x555dfc3a0d78 <col:169> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x555dfc3a0e58 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x555dfc3a0e18 <col:186> 'int' lvalue Var 0x555dfc39b618 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x555dfc3a0e70 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x555dfc3a0e38 <col:198> 'int' lvalue Var 0x555dfc39b618 'a$w_buff0' 'int'
|   |-BinaryOperator 0x555dfc3a14e0 <line:804:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x555dfc3a0ff0 <col:3> 'int' lvalue Var 0x555dfc39b710 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x555dfc3a14b0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x555dfc3a1480 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x555dfc3a1468 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x555dfc3a1010 <col:15> '_Bool' lvalue Var 0x555dfc39bcc8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x555dfc3a1498 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555dfc3a1030 <col:31> 'int' lvalue Var 0x555dfc39b710 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x555dfc3a1448 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x555dfc3a1418 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x555dfc3a1240 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x555dfc3a1160 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x555dfc3a1088 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x555dfc3a1070 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x555dfc3a1050 <col:45> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x555dfc3a1140 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x555dfc3a10d8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x555dfc3a10c0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x555dfc3a10a0 <col:64> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x555dfc3a1128 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x555dfc3a1110 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x555dfc3a10f0 <col:83> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x555dfc3a1220 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x555dfc3a11b8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x555dfc3a11a0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x555dfc3a1180 <col:102> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x555dfc3a1208 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x555dfc3a11f0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x555dfc3a11d0 <col:121> '_Bool' lvalue Var 0x555dfc39b4a0 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x555dfc3a1400 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555dfc3a1260 <col:138> 'int' lvalue Var 0x555dfc39b710 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x555dfc3a13e0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x555dfc3a13b0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x555dfc3a1320 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x555dfc3a12d8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x555dfc3a12c0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x555dfc3a1280 <col:151> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x555dfc3a1308 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x555dfc3a12f0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x555dfc3a12a0 <col:169> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x555dfc3a1380 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x555dfc3a1340 <col:186> 'int' lvalue Var 0x555dfc39b710 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x555dfc3a1398 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x555dfc3a1360 <col:198> 'int' lvalue Var 0x555dfc39b710 'a$w_buff1' 'int'
|   |-BinaryOperator 0x555dfc3a1a88 <line:805:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc3a1500 <col:3> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x555dfc3a1a70 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555dfc3a1a40 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x555dfc3a19f8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555dfc3a19e0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555dfc3a1520 <col:20> '_Bool' lvalue Var 0x555dfc39bcc8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x555dfc3a1a28 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555dfc3a1a10 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555dfc3a1540 <col:36> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x555dfc3a19c0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x555dfc3a1990 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x555dfc3a1750 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x555dfc3a1670 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x555dfc3a1598 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x555dfc3a1580 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x555dfc3a1560 <col:55> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x555dfc3a1650 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x555dfc3a15e8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x555dfc3a15d0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x555dfc3a15b0 <col:74> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x555dfc3a1638 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x555dfc3a1620 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x555dfc3a1600 <col:93> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x555dfc3a1730 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x555dfc3a16c8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x555dfc3a16b0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x555dfc3a1690 <col:112> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x555dfc3a1718 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x555dfc3a1700 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x555dfc3a16e0 <col:131> '_Bool' lvalue Var 0x555dfc39b4a0 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x555dfc3a1978 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x555dfc3a1960 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x555dfc3a1770 <col:148> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x555dfc3a1940 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x555dfc3a1910 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x555dfc3a1830 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x555dfc3a17e8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x555dfc3a17d0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x555dfc3a1790 <col:166> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x555dfc3a1818 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x555dfc3a1800 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x555dfc3a17b0 <col:184> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x555dfc3a18c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x555dfc3a1880 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x555dfc3a1850 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x555dfc3a18f8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x555dfc3a18e0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x555dfc3a18a8 <col:212> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555dfc3a2070 <line:806:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc3a1aa8 <col:3> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555dfc3a2058 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555dfc3a2028 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x555dfc3a1fe0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555dfc3a1fa8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555dfc3a1ac8 <col:20> '_Bool' lvalue Var 0x555dfc39bcc8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x555dfc3a2010 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555dfc3a1ff8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555dfc3a1ae8 <col:36> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x555dfc3a1f88 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x555dfc3a1f58 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x555dfc3a1cf8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x555dfc3a1c18 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x555dfc3a1b40 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x555dfc3a1b28 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x555dfc3a1b08 <col:55> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x555dfc3a1bf8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x555dfc3a1b90 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x555dfc3a1b78 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x555dfc3a1b58 <col:74> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x555dfc3a1be0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x555dfc3a1bc8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x555dfc3a1ba8 <col:93> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x555dfc3a1cd8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x555dfc3a1c70 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x555dfc3a1c58 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x555dfc3a1c38 <col:112> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x555dfc3a1cc0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x555dfc3a1ca8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x555dfc3a1c88 <col:131> '_Bool' lvalue Var 0x555dfc39b4a0 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x555dfc3a1f40 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x555dfc3a1f28 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x555dfc3a1d18 <col:148> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x555dfc3a1f08 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x555dfc3a1ed8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x555dfc3a1dd8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x555dfc3a1d90 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x555dfc3a1d78 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x555dfc3a1d38 <col:166> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x555dfc3a1dc0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x555dfc3a1da8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x555dfc3a1d58 <col:184> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x555dfc3a1ea8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x555dfc3a1e28 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x555dfc3a1df8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x555dfc3a1ec0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x555dfc3a1e80 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x555dfc3a1e50 <col:219> 'int' 0
|   |-BinaryOperator 0x555dfc3a2618 <line:807:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc3a2090 <col:3> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x555dfc3a2600 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555dfc3a25d0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x555dfc3a2588 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555dfc3a2570 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555dfc3a20b0 <col:20> '_Bool' lvalue Var 0x555dfc39bcc8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x555dfc3a25b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555dfc3a25a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555dfc3a20d0 <col:36> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x555dfc3a2550 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x555dfc3a2520 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x555dfc3a22e0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x555dfc3a2200 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x555dfc3a2128 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x555dfc3a2110 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x555dfc3a20f0 <col:55> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x555dfc3a21e0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x555dfc3a2178 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x555dfc3a2160 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x555dfc3a2140 <col:74> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x555dfc3a21c8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x555dfc3a21b0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x555dfc3a2190 <col:93> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x555dfc3a22c0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x555dfc3a2258 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x555dfc3a2240 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x555dfc3a2220 <col:112> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x555dfc3a22a8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x555dfc3a2290 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x555dfc3a2270 <col:131> '_Bool' lvalue Var 0x555dfc39b4a0 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x555dfc3a2508 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x555dfc3a24f0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x555dfc3a2300 <col:148> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x555dfc3a24d0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x555dfc3a24a0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x555dfc3a23c0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x555dfc3a2378 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x555dfc3a2360 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x555dfc3a2320 <col:166> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x555dfc3a23a8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x555dfc3a2390 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x555dfc3a2340 <col:184> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x555dfc3a2458 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x555dfc3a2410 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x555dfc3a23e0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x555dfc3a2488 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x555dfc3a2470 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x555dfc3a2438 <col:212> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x555dfc3a2be0 <line:808:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc3a2638 <col:3> '_Bool' lvalue Var 0x555dfc39b4a0 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x555dfc3a2bc8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555dfc3a2b98 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x555dfc3a2b50 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555dfc3a2b38 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555dfc3a2658 <col:20> '_Bool' lvalue Var 0x555dfc39bcc8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x555dfc3a2b80 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555dfc3a2b68 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555dfc3a2678 <col:36> '_Bool' lvalue Var 0x555dfc39b4a0 'a$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x555dfc3a2b18 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x555dfc3a2ae8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x555dfc3a2888 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x555dfc3a27a8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x555dfc3a26d0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x555dfc3a26b8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x555dfc3a2698 <col:55> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x555dfc3a2788 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x555dfc3a2720 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x555dfc3a2708 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x555dfc3a26e8 <col:74> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x555dfc3a2770 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x555dfc3a2758 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x555dfc3a2738 <col:93> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x555dfc3a2868 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x555dfc3a2800 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x555dfc3a27e8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x555dfc3a27c8 <col:112> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x555dfc3a2850 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x555dfc3a2838 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x555dfc3a2818 <col:131> '_Bool' lvalue Var 0x555dfc39b4a0 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x555dfc3a2ad0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x555dfc3a2ab8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x555dfc3a28a8 <col:148> '_Bool' lvalue Var 0x555dfc39b4a0 'a$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x555dfc3a2a98 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x555dfc3a2a68 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x555dfc3a2968 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x555dfc3a2920 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x555dfc3a2908 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x555dfc3a28c8 <col:166> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x555dfc3a2950 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x555dfc3a2938 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x555dfc3a28e8 <col:184> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x555dfc3a2a38 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x555dfc3a29b8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x555dfc3a2988 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x555dfc3a2a50 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x555dfc3a2a10 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x555dfc3a29e0 <col:219> 'int' 0
|   |-BinaryOperator 0x555dfc3a2c58 <line:809:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x555dfc3a2c00 <col:3> 'int' lvalue Var 0x555dfc39ada8 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x555dfc3a2c40 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555dfc3a2c20 <col:25> 'int' lvalue Var 0x555dfc39aec8 'a' 'int'
|   |-BinaryOperator 0x555dfc3a2d88 <line:810:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x555dfc3a2c78 <col:3> 'int' lvalue Var 0x555dfc39aec8 'a' 'int'
|   | `-ConditionalOperator 0x555dfc3a2d58 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x555dfc3a2d10 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x555dfc3a2cf8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x555dfc3a2c98 <col:7> '_Bool' lvalue Var 0x555dfc39af70 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x555dfc3a2d28 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555dfc3a2cb8 <col:25> 'int' lvalue Var 0x555dfc39aff0 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x555dfc3a2d40 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x555dfc3a2cd8 <col:37> 'int' lvalue Var 0x555dfc39aec8 'a' 'int'
|   |-BinaryOperator 0x555dfc3a2e20 <line:811:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc3a2da8 <col:3> '_Bool' lvalue Var 0x555dfc39af70 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x555dfc3a2df8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x555dfc3a2dc8 <col:28> 'int' 0
|   |-CallExpr 0x555dfc3a2e78 <line:812:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555dfc3a2e60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc3a2e40 <col:3> 'void ()' Function 0x555dfc341410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555dfc3a2ed0 <line:813:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555dfc3a2eb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc3a2e98 <col:3> 'void ()' Function 0x555dfc341350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555dfc3a31d8 <line:814:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x555dfc3a2ef0 <col:3> 'int' lvalue Var 0x555dfc39aec8 'a' 'int'
|   | `-ConditionalOperator 0x555dfc3a31a8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x555dfc3a2fb0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x555dfc3a2f68 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x555dfc3a2f50 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x555dfc3a2f10 <col:7> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x555dfc3a2f98 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x555dfc3a2f80 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x555dfc3a2f30 <col:25> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x555dfc3a3190 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555dfc3a2ff0 <col:42> 'int' lvalue Var 0x555dfc39b618 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x555dfc3a3170 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x555dfc3a3140 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x555dfc3a30b0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x555dfc3a3068 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x555dfc3a3050 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x555dfc3a3010 <col:55> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x555dfc3a3098 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x555dfc3a3080 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x555dfc3a3030 <col:73> '_Bool' lvalue Var 0x555dfc39b4a0 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x555dfc3a3110 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555dfc3a30d0 <col:90> 'int' lvalue Var 0x555dfc39b710 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x555dfc3a3128 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x555dfc3a30f0 <col:102> 'int' lvalue Var 0x555dfc39aec8 'a' 'int'
|   |-BinaryOperator 0x555dfc3a33e0 <line:815:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc3a31f8 <col:3> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x555dfc3a33c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555dfc3a3398 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555dfc3a32b8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555dfc3a3270 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555dfc3a3258 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555dfc3a3218 <col:20> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555dfc3a32a0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555dfc3a3288 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555dfc3a3238 <col:38> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x555dfc3a3350 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555dfc3a3308 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555dfc3a32d8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555dfc3a3380 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555dfc3a3368 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555dfc3a3330 <col:66> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555dfc3a36c8 <line:816:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc3a3400 <col:3> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555dfc3a36b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555dfc3a3680 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555dfc3a35a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555dfc3a34c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555dfc3a3478 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555dfc3a3460 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555dfc3a3420 <col:20> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555dfc3a34a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555dfc3a3490 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555dfc3a3440 <col:38> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x555dfc3a3580 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555dfc3a3538 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555dfc3a3520 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555dfc3a34e0 <col:56> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555dfc3a3568 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555dfc3a3550 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555dfc3a3500 <col:74> '_Bool' lvalue Var 0x555dfc39b4a0 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x555dfc3a3638 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555dfc3a35f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555dfc3a35c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555dfc3a3668 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555dfc3a3650 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555dfc3a3618 <col:102> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x555dfc3a38d0 <line:817:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc3a36e8 <col:3> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x555dfc3a38b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555dfc3a3888 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555dfc3a37a8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555dfc3a3760 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555dfc3a3748 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555dfc3a3708 <col:20> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555dfc3a3790 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555dfc3a3778 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555dfc3a3728 <col:38> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x555dfc3a3840 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555dfc3a37f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555dfc3a37c8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555dfc3a3870 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555dfc3a3858 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555dfc3a3820 <col:66> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x555dfc3a3bb8 <line:818:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555dfc3a38f0 <col:3> '_Bool' lvalue Var 0x555dfc39b4a0 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x555dfc3a3ba0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555dfc3a3b70 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555dfc3a3a90 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555dfc3a39b0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555dfc3a3968 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555dfc3a3950 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555dfc3a3910 <col:20> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555dfc3a3998 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555dfc3a3980 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555dfc3a3930 <col:38> '_Bool' lvalue Var 0x555dfc39b248 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x555dfc3a3a70 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555dfc3a3a28 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555dfc3a3a10 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555dfc3a39d0 <col:56> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555dfc3a3a58 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555dfc3a3a40 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555dfc3a39f0 <col:74> '_Bool' lvalue Var 0x555dfc39b4a0 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x555dfc3a3b28 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555dfc3a3ae0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555dfc3a3ab0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555dfc3a3b58 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555dfc3a3b40 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555dfc3a3b08 <col:102> '_Bool' lvalue Var 0x555dfc39b4a0 'a$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x555dfc3a3c10 <line:819:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555dfc3a3bf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc3a3bd8 <col:3> 'void ()' Function 0x555dfc341410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555dfc3a3c68 <line:820:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555dfc3a3c50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc3a3c30 <col:3> 'void ()' Function 0x555dfc341350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555dfc3a3d20 <line:821:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x555dfc3a3c88 <col:3> 'int' lvalue Var 0x555dfc39a6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x555dfc3a3d00 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x555dfc3a3ce8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555dfc3a3ca8 <col:22> 'int' lvalue Var 0x555dfc39a6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x555dfc3a3cc8 <col:41> 'int' 1
|   |-CallExpr 0x555dfc3a3d78 <line:822:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555dfc3a3d60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555dfc3a3d40 <col:3> 'void ()' Function 0x555dfc341410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x555dfc3a3df0 <line:823:3, col:36>
|     `-CallExpr 0x555dfc3a3dd0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x555dfc3a3db8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x555dfc3a3d98 <col:10> 'void *(void)' Function 0x555dfc340e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x555dfc3a3f38 prev 0x555dfc39a430 <line:825:1, line:827:1> line:825:6 fence 'void ()'
| `-CompoundStmt 0x555dfc3a3fd8 <line:826:1, line:827:1>
|-FunctionDecl 0x555dfc3a4020 prev 0x555dfc39a4f0 <line:828:1, line:830:1> line:828:6 isync 'void ()'
| `-CompoundStmt 0x555dfc3a40c0 <line:829:1, line:830:1>
|-FunctionDecl 0x555dfc3a40f0 prev 0x555dfc39a5b0 <line:831:1, line:833:1> line:831:6 lwfence 'void ()'
| `-CompoundStmt 0x555dfc3a4190 <line:832:1, line:833:1>
`-FunctionDecl 0x555dfc3a41f8 <line:834:1, line:860:1> line:834:5 main 'int ()'
  `-CompoundStmt 0x555dfc3a62a0 <line:835:1, line:860:1>
    |-DeclStmt 0x555dfc3a4310 <line:836:3, col:17>
    | `-VarDecl 0x555dfc3a42a8 <col:3, col:13> col:13 used t347 'pthread_t':'unsigned long'
    |-CallExpr 0x555dfc3a4518 <line:837:3, col:53> 'int'
    | |-ImplicitCastExpr 0x555dfc3a4500 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555dfc3a4328 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x555dfc3818f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x555dfc3a4368 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x555dfc3a4348 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x555dfc3a42a8 't347' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x555dfc3a4558 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x555dfc3a43e0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x555dfc3a43b8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x555dfc3a4380 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x555dfc3a4570 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555dfc3a4400 <col:38> 'void *(void *)' Function 0x555dfc39bde0 'P0' 'void *(void *)'
    | `-ParenExpr 0x555dfc3a4480 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x555dfc3a4458 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x555dfc3a4420 <col:51> 'int' 0
    |-DeclStmt 0x555dfc3a4600 <line:838:3, col:17>
    | `-VarDecl 0x555dfc3a4598 <col:3, col:13> col:13 used t348 'pthread_t':'unsigned long'
    |-CallExpr 0x555dfc3a47a8 <line:839:3, col:53> 'int'
    | |-ImplicitCastExpr 0x555dfc3a4790 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555dfc3a4618 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x555dfc3818f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x555dfc3a4658 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x555dfc3a4638 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x555dfc3a4598 't348' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x555dfc3a47e8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x555dfc3a46d0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x555dfc3a46a8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x555dfc3a4670 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x555dfc3a4800 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555dfc3a46f0 <col:38> 'void *(void *)' Function 0x555dfc39d830 'P1' 'void *(void *)'
    | `-ParenExpr 0x555dfc3a4770 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x555dfc3a4748 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x555dfc3a4710 <col:51> 'int' 0
    |-DeclStmt 0x555dfc3a4890 <line:840:3, col:17>
    | `-VarDecl 0x555dfc3a4828 <col:3, col:13> col:13 used t349 'pthread_t':'unsigned long'
    |-CallExpr 0x555dfc3a4a38 <line:841:3, col:53> 'int'
    | |-ImplicitCastExpr 0x555dfc3a4a20 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555dfc3a48a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x555dfc3818f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x555dfc3a48e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x555dfc3a48c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x555dfc3a4828 't349' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x555dfc3a4a78 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x555dfc3a4960 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x555dfc3a4938 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x555dfc3a4900 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x555dfc3a4a90 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555dfc3a4980 <col:38> 'void *(void *)' Function 0x555dfc39ed08 'P2' 'void *(void *)'
    | `-ParenExpr 0x555dfc3a4a00 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x555dfc3a49d8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x555dfc3a49a0 <col:51> 'int' 0
    |-DeclStmt 0x555dfc3a4b20 <line:842:3, col:17>
    | `-VarDecl 0x555dfc3a4ab8 <col:3, col:13> col:13 used t350 'pthread_t':'unsigned long'
    |-CallExpr 0x555dfc3a4cc8 <line:843:3, col:53> 'int'
    | |-ImplicitCastExpr 0x555dfc3a4cb0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555dfc3a4b38 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x555dfc3818f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x555dfc3a4b78 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x555dfc3a4b58 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x555dfc3a4ab8 't350' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x555dfc3a4d08 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x555dfc3a4bf0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x555dfc3a4bc8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x555dfc3a4b90 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x555dfc3a4d20 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555dfc3a4c10 <col:38> 'void *(void *)' Function 0x555dfc3a0108 'P3' 'void *(void *)'
    | `-ParenExpr 0x555dfc3a4c90 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x555dfc3a4c68 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x555dfc3a4c30 <col:51> 'int' 0
    |-CallExpr 0x555dfc3a4d70 <line:844:3, col:27> 'void'
    | `-ImplicitCastExpr 0x555dfc3a4d58 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555dfc3a4d38 <col:3> 'void ()' Function 0x555dfc341350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x555dfc3a4e40 <line:845:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x555dfc3a4d90 <col:3> '_Bool' lvalue Var 0x555dfc39b800 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x555dfc3a4e28 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x555dfc3a4e08 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x555dfc3a4df0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x555dfc3a4db0 <col:21> 'int' lvalue Var 0x555dfc39a6e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x555dfc3a4dd0 <col:41> 'int' 4
    |-CallExpr 0x555dfc3a4e98 <line:846:3, col:25> 'void'
    | `-ImplicitCastExpr 0x555dfc3a4e80 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555dfc3a4e60 <col:3> 'void ()' Function 0x555dfc341410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x555dfc3a4f10 <line:847:3, col:36> 'void'
    | |-ImplicitCastExpr 0x555dfc3a4ef8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555dfc3a4eb8 <col:3> 'void (int)' Function 0x555dfc340ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x555dfc3a4f50 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x555dfc3a4f38 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x555dfc3a4ed8 <col:21> '_Bool' lvalue Var 0x555dfc39b800 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x555dfc3a4fa0 <line:848:3, col:27> 'void'
    | `-ImplicitCastExpr 0x555dfc3a4f88 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555dfc3a4f68 <col:3> 'void ()' Function 0x555dfc341350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x555dfc3a5298 <line:849:3, col:103> 'int' '='
    | |-DeclRefExpr 0x555dfc3a4fc0 <col:3> 'int' lvalue Var 0x555dfc39aec8 'a' 'int'
    | `-ConditionalOperator 0x555dfc3a5268 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x555dfc3a5090 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x555dfc3a5048 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x555dfc3a5030 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x555dfc3a4fe0 <col:7> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x555dfc3a5078 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x555dfc3a5060 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x555dfc3a5010 <col:25> '_Bool' lvalue Var 0x555dfc39b068 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x555dfc3a5250 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x555dfc3a50b0 <col:42> 'int' lvalue Var 0x555dfc39b618 'a$w_buff0' 'int'
    |   `-ParenExpr 0x555dfc3a5230 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x555dfc3a5200 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x555dfc3a5170 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x555dfc3a5128 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x555dfc3a5110 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x555dfc3a50d0 <col:55> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x555dfc3a5158 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x555dfc3a5140 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x555dfc3a50f0 <col:73> '_Bool' lvalue Var 0x555dfc39b2c0 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x555dfc3a51d0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x555dfc3a5190 <col:90> 'int' lvalue Var 0x555dfc39b710 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x555dfc3a51e8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x555dfc3a51b0 <col:102> 'int' lvalue Var 0x555dfc39aec8 'a' 'int'
    |-BinaryOperator 0x555dfc3a54a0 <line:850:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x555dfc3a52b8 <col:3> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x555dfc3a5488 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555dfc3a5458 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x555dfc3a5378 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x555dfc3a5330 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x555dfc3a5318 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x555dfc3a52d8 <col:20> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x555dfc3a5360 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x555dfc3a5348 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x555dfc3a52f8 <col:38> '_Bool' lvalue Var 0x555dfc39b068 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x555dfc3a5410 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x555dfc3a53c8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x555dfc3a5398 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x555dfc3a5440 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x555dfc3a5428 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x555dfc3a53f0 <col:66> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x555dfc3a5788 <line:851:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x555dfc3a54c0 <col:3> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x555dfc3a5770 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555dfc3a5740 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x555dfc3a5660 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x555dfc3a5580 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x555dfc3a5538 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x555dfc3a5520 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x555dfc3a54e0 <col:20> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x555dfc3a5568 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x555dfc3a5550 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x555dfc3a5500 <col:38> '_Bool' lvalue Var 0x555dfc39b068 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x555dfc3a5640 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x555dfc3a55f8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x555dfc3a55e0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x555dfc3a55a0 <col:56> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x555dfc3a5628 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x555dfc3a5610 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x555dfc3a55c0 <col:74> '_Bool' lvalue Var 0x555dfc39b2c0 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x555dfc3a56f8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x555dfc3a56b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x555dfc3a5680 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x555dfc3a5728 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x555dfc3a5710 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x555dfc3a56d8 <col:102> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x555dfc3a5990 <line:852:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x555dfc3a57a8 <col:3> '_Bool' lvalue Var 0x555dfc39b068 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x555dfc3a5978 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555dfc3a5948 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x555dfc3a5868 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x555dfc3a5820 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x555dfc3a5808 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x555dfc3a57c8 <col:20> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x555dfc3a5850 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x555dfc3a5838 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x555dfc3a57e8 <col:38> '_Bool' lvalue Var 0x555dfc39b068 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x555dfc3a5900 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x555dfc3a58b8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x555dfc3a5888 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x555dfc3a5930 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x555dfc3a5918 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x555dfc3a58e0 <col:66> '_Bool' lvalue Var 0x555dfc39b068 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x555dfc3a5c78 <line:853:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x555dfc3a59b0 <col:3> '_Bool' lvalue Var 0x555dfc39b2c0 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x555dfc3a5c60 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555dfc3a5c30 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x555dfc3a5b50 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x555dfc3a5a70 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x555dfc3a5a28 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x555dfc3a5a10 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x555dfc3a59d0 <col:20> '_Bool' lvalue Var 0x555dfc39b690 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x555dfc3a5a58 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x555dfc3a5a40 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x555dfc3a59f0 <col:38> '_Bool' lvalue Var 0x555dfc39b068 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x555dfc3a5b30 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x555dfc3a5ae8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x555dfc3a5ad0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x555dfc3a5a90 <col:56> '_Bool' lvalue Var 0x555dfc39b788 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x555dfc3a5b18 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x555dfc3a5b00 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x555dfc3a5ab0 <col:74> '_Bool' lvalue Var 0x555dfc39b2c0 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x555dfc3a5be8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x555dfc3a5ba0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x555dfc3a5b70 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x555dfc3a5c18 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x555dfc3a5c00 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x555dfc3a5bc8 <col:102> '_Bool' lvalue Var 0x555dfc39b2c0 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x555dfc3a5cd0 <line:854:3, col:25> 'void'
    | `-ImplicitCastExpr 0x555dfc3a5cb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555dfc3a5c98 <col:3> 'void ()' Function 0x555dfc341410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x555dfc3a5d28 <line:855:3, col:27> 'void'
    | `-ImplicitCastExpr 0x555dfc3a5d10 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555dfc3a5cf0 <col:3> 'void ()' Function 0x555dfc341350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x555dfc3a6148 <line:856:3, col:187> '_Bool' '='
    | |-DeclRefExpr 0x555dfc3a5d48 <col:3> '_Bool' lvalue Var 0x555dfc39b878 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x555dfc3a6130 <col:21, col:187> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x555dfc3a6118 <col:21, col:187> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x555dfc3a60f8 <col:22, col:187> 'int'
    |       `-BinaryOperator 0x555dfc3a60d8 <col:23, col:186> 'int' '&&'
    |         |-BinaryOperator 0x555dfc3a6040 <col:23, col:158> 'int' '&&'
    |         | |-BinaryOperator 0x555dfc3a5f88 <col:23, col:130> 'int' '&&'
    |         | | |-BinaryOperator 0x555dfc3a5ef0 <col:23, col:102> 'int' '&&'
    |         | | | |-BinaryOperator 0x555dfc3a5e58 <col:23, col:74> 'int' '&&'
    |         | | | | |-BinaryOperator 0x555dfc3a5dc0 <col:23, col:46> 'int' '=='
    |         | | | | | |-ImplicitCastExpr 0x555dfc3a5da8 <col:23> 'int' <LValueToRValue>
    |         | | | | | | `-DeclRefExpr 0x555dfc3a5d68 <col:23> 'int' lvalue Var 0x555dfc39a808 '__unbuffered_p0_EAX' 'int'
    |         | | | | | `-IntegerLiteral 0x555dfc3a5d88 <col:46> 'int' 0
    |         | | | | `-BinaryOperator 0x555dfc3a5e38 <col:51, col:74> 'int' '=='
    |         | | | |   |-ImplicitCastExpr 0x555dfc3a5e20 <col:51> 'int' <LValueToRValue>
    |         | | | |   | `-DeclRefExpr 0x555dfc3a5de0 <col:51> 'int' lvalue Var 0x555dfc39a928 '__unbuffered_p1_EAX' 'int'
    |         | | | |   `-IntegerLiteral 0x555dfc3a5e00 <col:74> 'int' 1
    |         | | | `-BinaryOperator 0x555dfc3a5ed0 <col:79, col:102> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x555dfc3a5eb8 <col:79> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x555dfc3a5e78 <col:79> 'int' lvalue Var 0x555dfc39aa48 '__unbuffered_p1_EBX' 'int'
    |         | | |   `-IntegerLiteral 0x555dfc3a5e98 <col:102> 'int' 0
    |         | | `-BinaryOperator 0x555dfc3a5f68 <col:107, col:130> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x555dfc3a5f50 <col:107> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x555dfc3a5f10 <col:107> 'int' lvalue Var 0x555dfc39ab68 '__unbuffered_p2_EAX' 'int'
    |         | |   `-IntegerLiteral 0x555dfc3a5f30 <col:130> 'int' 0
    |         | `-BinaryOperator 0x555dfc3a6020 <col:135, col:158> 'int' '=='
    |         |   |-ImplicitCastExpr 0x555dfc3a5fe8 <col:135> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x555dfc3a5fa8 <col:135> 'int' lvalue Var 0x555dfc39ac88 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x555dfc3a5fc8 <col:158> 'int' 1
    |         `-BinaryOperator 0x555dfc3a60b8 <col:163, col:186> 'int' '=='
    |           |-ImplicitCastExpr 0x555dfc3a60a0 <col:163> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x555dfc3a6060 <col:163> 'int' lvalue Var 0x555dfc39ada8 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x555dfc3a6080 <col:186> 'int' 0
    |-CallExpr 0x555dfc3a61a0 <line:857:3, col:25> 'void'
    | `-ImplicitCastExpr 0x555dfc3a6188 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555dfc3a6168 <col:3> 'void ()' Function 0x555dfc341410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x555dfc3a6218 <line:858:3, col:36> 'void'
    | |-ImplicitCastExpr 0x555dfc3a6200 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555dfc3a61c0 <col:3> 'void (int)' Function 0x555dfc3410d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x555dfc3a6258 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x555dfc3a6240 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x555dfc3a61e0 <col:21> '_Bool' lvalue Var 0x555dfc39b878 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x555dfc3a6290 <line:859:3, col:10>
      `-IntegerLiteral 0x555dfc3a6270 <col:10> 'int' 0
