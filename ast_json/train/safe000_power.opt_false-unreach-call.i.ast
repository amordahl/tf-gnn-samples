TranslationUnitDecl 0x55fb3c0b1f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55fb3c0b2848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55fb3c0b2520 '__int128'
|-TypedefDecl 0x55fb3c0b28b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55fb3c0b2540 'unsigned __int128'
|-TypedefDecl 0x55fb3c0b2bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55fb3c0b2990 'struct __NSConstantString_tag'
|   `-Record 0x55fb3c0b2910 '__NSConstantString_tag'
|-TypedefDecl 0x55fb3c0b2c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55fb3c0b2c20 'char *'
|   `-BuiltinType 0x55fb3c0b2020 'char'
|-TypedefDecl 0x55fb3c0f1b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55fb3c0b2f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55fb3c0b2d40 'struct __va_list_tag'
|     `-Record 0x55fb3c0b2cc0 '__va_list_tag'
|-FunctionDecl 0x55fb3c0f1ca0 <pthread-wmm/safe000_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55fb3c0f1bd0 <col:31> col:34 'int'
|-FunctionDecl 0x55fb3c0f1e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55fb3c0f1f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55fb3c0f20d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55fb3c0f2048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55fb3c0f2308 <col:40, col:99>
|   |-IfStmt 0x55fb3c0f22d8 <col:42, col:88>
|   | |-UnaryOperator 0x55fb3c0f21b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55fb3c0f21a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55fb3c0f2180 <col:47> 'int' lvalue ParmVar 0x55fb3c0f2048 'expression' 'int'
|   | `-CompoundStmt 0x55fb3c0f22c0 <col:59, col:88>
|   |   `-LabelStmt 0x55fb3c0f22a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55fb3c0f2238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55fb3c0f2220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55fb3c0f21d0 <col:68> 'void () __attribute__((noreturn))' Function 0x55fb3c0f1f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55fb3c0f22f0 <col:89>
|   `-ReturnStmt 0x55fb3c0f22f8 <col:91>
|-FunctionDecl 0x55fb3c0f2350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55fb3c0f2410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55fb3c0f2790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55fb3c0f24c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55fb3c0f2548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55fb3c0f25c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55fb3c0f2648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55fb3c0f2850 <line:10:22>
|-FunctionDecl 0x55fb3c1188a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55fb3c0f28c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55fb3c0f2940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55fb3c0f29c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55fb3c0f2a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55fb3c118960 <line:13:22>
|-FunctionDecl 0x55fb3c118c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55fb3c1189d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55fb3c118a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55fb3c118ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55fb3c118cc8 <line:15:22>
|-TypedefDecl 0x55fb3c118d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55fb3c0b20e0 'unsigned char'
|-TypedefDecl 0x55fb3c118da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55fb3c0b2100 'unsigned short'
|-TypedefDecl 0x55fb3c118e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55fb3c0b2120 'unsigned int'
|-TypedefDecl 0x55fb3c118e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55fb3c0b2140 'unsigned long'
|-TypedefDecl 0x55fb3c118ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55fb3c0b2040 'signed char'
|-TypedefDecl 0x55fb3c118f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55fb3c0b20e0 'unsigned char'
|-TypedefDecl 0x55fb3c118fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55fb3c0b2060 'short'
|-TypedefDecl 0x55fb3c119048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55fb3c0b2100 'unsigned short'
|-TypedefDecl 0x55fb3c1190b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55fb3c0b2080 'int'
|-TypedefDecl 0x55fb3c119128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55fb3c0b2120 'unsigned int'
|-TypedefDecl 0x55fb3c119198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55fb3c0b20a0 'long'
|-TypedefDecl 0x55fb3c119208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55fb3c0b2140 'unsigned long'
|-TypedefDecl 0x55fb3c119278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55fb3c0b20a0 'long'
|-TypedefDecl 0x55fb3c1192e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55fb3c0b2140 'unsigned long'
|-TypedefDecl 0x55fb3c119358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55fb3c0b2140 'unsigned long'
|-TypedefDecl 0x55fb3c1193c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55fb3c0b2120 'unsigned int'
|-TypedefDecl 0x55fb3c119438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55fb3c0b2120 'unsigned int'
|-TypedefDecl 0x55fb3c1194a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55fb3c0b2140 'unsigned long'
|-TypedefDecl 0x55fb3c119518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55fb3c0b2140 'unsigned long'
|-TypedefDecl 0x55fb3c119588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55fb3c0b2120 'unsigned int'
|-TypedefDecl 0x55fb3c1195f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55fb3c0b2140 'unsigned long'
|-TypedefDecl 0x55fb3c119668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55fb3c0b20a0 'long'
|-TypedefDecl 0x55fb3c1196d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55fb3c0b20a0 'long'
|-TypedefDecl 0x55fb3c119748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55fb3c0b2080 'int'
|-RecordDecl 0x55fb3c1197a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55fb3c119918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55fb3c1199d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55fb3c119970 'struct __fsid_t' sugar
|   `-RecordType 0x55fb3c119820 '__fsid_t'
|     `-Record 0x55fb3c1197a0 ''
|-TypedefDecl 0x55fb3c119a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55fb3c0b20a0 'long'
|-TypedefDecl 0x55fb3c119ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55fb3c0b2140 'unsigned long'
|-TypedefDecl 0x55fb3c119b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55fb3c0b2140 'unsigned long'
|-TypedefDecl 0x55fb3c119ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55fb3c0b2120 'unsigned int'
|-TypedefDecl 0x55fb3c119c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55fb3c0b20a0 'long'
|-TypedefDecl 0x55fb3c119c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55fb3c0b2120 'unsigned int'
|-TypedefDecl 0x55fb3c119cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55fb3c0b20a0 'long'
|-TypedefDecl 0x55fb3c119d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55fb3c0b2080 'int'
|-TypedefDecl 0x55fb3c119dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55fb3c0b2080 'int'
|-TypedefDecl 0x55fb3c119e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55fb3c0b2080 'int'
|-TypedefDecl 0x55fb3c119eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55fb3c0b27a0 'void *'
|   `-BuiltinType 0x55fb3c0b1fe0 'void'
|-TypedefDecl 0x55fb3c119f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55fb3c0b20a0 'long'
|-TypedefDecl 0x55fb3c119f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55fb3c0b20a0 'long'
|-TypedefDecl 0x55fb3c11a008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55fb3c0b20a0 'long'
|-TypedefDecl 0x55fb3c11a078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55fb3c0b2140 'unsigned long'
|-TypedefDecl 0x55fb3c11a0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55fb3c0b2140 'unsigned long'
|-TypedefDecl 0x55fb3c11a158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55fb3c0b2140 'unsigned long'
|-TypedefDecl 0x55fb3c11a1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55fb3c0b2140 'unsigned long'
|-TypedefDecl 0x55fb3c11a238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55fb3c0b20a0 'long'
|-TypedefDecl 0x55fb3c11a2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55fb3c0b20a0 'long'
|-TypedefDecl 0x55fb3c11a318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55fb3c0b20a0 'long'
|-TypedefDecl 0x55fb3c11a388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55fb3c0b2140 'unsigned long'
|-TypedefDecl 0x55fb3c11a418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55fb3c11a3e0 '__off64_t' sugar
|   |-Typedef 0x55fb3c1196d8 '__off64_t'
|   `-BuiltinType 0x55fb3c0b20a0 'long'
|-TypedefDecl 0x55fb3c11a510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55fb3c11a4d0 '__quad_t *'
|   `-TypedefType 0x55fb3c11a470 '__quad_t' sugar
|     |-Typedef 0x55fb3c119278 '__quad_t'
|     `-BuiltinType 0x55fb3c0b20a0 'long'
|-TypedefDecl 0x55fb3c11a580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55fb3c0b2c20 'char *'
|   `-BuiltinType 0x55fb3c0b2020 'char'
|-TypedefDecl 0x55fb3c11a5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55fb3c0b20a0 'long'
|-TypedefDecl 0x55fb3c11a660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55fb3c0b2120 'unsigned int'
|-FunctionDecl 0x55fb3c11a7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55fb3c11a6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55fb3c11aae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55fb3c11aad8 <line:72:3, col:34>
|     `-CallExpr 0x55fb3c11aa98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55fb3c11aa80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55fb3c11aa10 <col:10> '<builtin fn type>' Function 0x55fb3c11a880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55fb3c11aac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55fb3c11aa30 <col:29> 'unsigned int' lvalue ParmVar 0x55fb3c11a6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55fb3c11a880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55fb3c11a920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55fb3c11a990 <col:10> Implicit
| `-ConstAttr 0x55fb3c11a9e8 <col:10> Implicit
|-FunctionDecl 0x55fb3c11ac40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55fb3c11ab38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55fb3c11af58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55fb3c11af48 <line:77:3, col:34>
|     `-CallExpr 0x55fb3c11af08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55fb3c11aef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55fb3c11ae78 <col:10> '<builtin fn type>' Function 0x55fb3c11ace8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55fb3c11af30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55fb3c11ae98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55fb3c11ab38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55fb3c11ace8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55fb3c11ad88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55fb3c11adf8 <col:10> Implicit
| `-ConstAttr 0x55fb3c11ae50 <col:10> Implicit
|-TypedefDecl 0x55fb3c11af88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55fb3c0b2140 'unsigned long'
|-TypedefDecl 0x55fb3c11b018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55fb3c11afe0 '__time_t' sugar
|   |-Typedef 0x55fb3c119c18 '__time_t'
|   `-BuiltinType 0x55fb3c0b20a0 'long'
|-RecordDecl 0x55fb3c11b070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55fb3c11b128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55fb3c11b1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55fb3c11b248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55fb3c11b210 '__pid_t' sugar
|   |-Typedef 0x55fb3c119748 '__pid_t'
|   `-BuiltinType 0x55fb3c0b2080 'int'
|-RecordDecl 0x55fb3c11b2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55fb3c11b360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55fb3c11b3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55fb3c11b470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55fb3c11b4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55fb3c0b2140 'unsigned long'
|-RecordDecl 0x55fb3c11b530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55fb3c11b7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55fb3c11d8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55fb3c11b810 'struct cpu_set_t' sugar
|   `-RecordType 0x55fb3c11b5b0 'cpu_set_t'
|     `-Record 0x55fb3c11b530 ''
|-FunctionDecl 0x55fb3c11db88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55fb3c11d958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55fb3c11da60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55fb3c11dc38 <line:107:19>
|-FunctionDecl 0x55fb3c11de10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55fb3c11dca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55fb3c11deb8 <col:69>
|-FunctionDecl 0x55fb3c11e030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55fb3c11df20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55fb3c11e0d8 <col:64>
|-FunctionDecl 0x55fb3c11e398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55fb3c11e140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55fb3c11e278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55fb3c11e448 <line:113:22>
|-FunctionDecl 0x55fb3c11e6c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55fb3c11e4b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55fb3c11e5a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55fb3c11e778 <col:88>
|-FunctionDecl 0x55fb3c11ea98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55fb3c11e7e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55fb3c11e8c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55fb3c11e950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55fb3c11eb50 <col:62>
|-FunctionDecl 0x55fb3c11ecc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55fb3c11ebb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55fb3c11ed70 <col:63>
|-FunctionDecl 0x55fb3c11ee98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55fb3c11ef38 <col:47>
|-FunctionDecl 0x55fb3c11f040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55fb3c11efa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55fb3c11f0e8 <col:69>
|-FunctionDecl 0x55fb3c11f1f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55fb3c11f158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55fb3c11f298 <col:69>
|-FunctionDecl 0x55fb3c11f558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55fb3c11f300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55fb3c11f438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55fb3c11f608 <col:88>
|-TypedefDecl 0x55fb3c11f698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55fb3c11f660 '__clock_t' sugar
|   |-Typedef 0x55fb3c119a58 '__clock_t'
|   `-BuiltinType 0x55fb3c0b20a0 'long'
|-TypedefDecl 0x55fb3c11f728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55fb3c11f6f0 '__clockid_t' sugar
|   |-Typedef 0x55fb3c119e48 '__clockid_t'
|   `-BuiltinType 0x55fb3c0b2080 'int'
|-TypedefDecl 0x55fb3c11f7b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55fb3c11f780 '__timer_t' sugar
|   |-Typedef 0x55fb3c119eb8 '__timer_t'
|   `-PointerType 0x55fb3c0b27a0 'void *'
|     `-BuiltinType 0x55fb3c0b1fe0 'void'
|-RecordDecl 0x55fb3c11f810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55fb3c11f8e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55fb3c11f950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55fb3c11f9b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55fb3c11fa20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55fb3c11fa88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55fb3c11faf0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55fb3c11fb58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55fb3c11fbc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55fb3c11fc28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55fb3c11fc90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55fb3c11fcf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55fb3c11fd48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55fb3c11fe18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55fb3c11fe88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55fb3c11ff30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55fb3c120100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55fb3c1201a0 <col:45>
|-FunctionDecl 0x55fb3c120380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55fb3c120270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55fb3c120428 <col:54>
|-FunctionDecl 0x55fb3c120628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55fb3c120490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55fb3c120508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55fb3c1206d8 <line:157:22>
| `-ConstAttr 0x55fb3c120730 <col:63>
|-FunctionDecl 0x55fb3c121560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55fb3c120828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55fb3c121608 <col:56>
|-FunctionDecl 0x55fb3c1219b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55fb3c121678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55fb3c1216f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55fb3c121770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55fb3c121868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55fb3c121a70 <col:54>
|-RecordDecl 0x55fb3c121ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55fb3c121b78 parent 0x55fb3c0b1f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55fb3c121dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55fb3c121e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55fb3c121ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55fb3c121f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55fb3c122038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55fb3c122158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55fb3c122100 'struct __locale_struct *'
|   `-ElaboratedType 0x55fb3c122090 'struct __locale_struct' sugar
|     `-RecordType 0x55fb3c121b50 'struct __locale_struct'
|       `-Record 0x55fb3c121ac8 '__locale_struct'
|-TypedefDecl 0x55fb3c122208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55fb3c1221d0 '__locale_t' sugar
|   |-Typedef 0x55fb3c122158 '__locale_t'
|   `-PointerType 0x55fb3c122100 'struct __locale_struct *'
|     `-ElaboratedType 0x55fb3c122090 'struct __locale_struct' sugar
|       `-RecordType 0x55fb3c121b50 'struct __locale_struct'
|         `-Record 0x55fb3c121ac8 '__locale_struct'
|-FunctionDecl 0x55fb3c122610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55fb3c122278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55fb3c1222f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55fb3c122370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55fb3c122400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55fb3c122478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55fb3c1226d8 <col:40>
|-FunctionDecl 0x55fb3c1228c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55fb3c1227a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55fb3c122970 <col:66>
|-FunctionDecl 0x55fb3c122a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55fb3c1229d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55fb3c122b28 <col:69>
|-FunctionDecl 0x55fb3c122d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55fb3c122b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55fb3c122c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55fb3c122e08 <col:52>
|-FunctionDecl 0x55fb3c122fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55fb3c122e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55fb3c122f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55fb3c123060 <col:55>
|-FunctionDecl 0x55fb3c1231f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55fb3c1230e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55fb3c1232a0 <col:62>
|-FunctionDecl 0x55fb3c123418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55fb3c123308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55fb3c1234c0 <col:60>
|-FunctionDecl 0x55fb3c123718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55fb3c123578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55fb3c1235f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55fb3c1237c8 <col:44>
|-FunctionDecl 0x55fb3c1239d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55fb3c123830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55fb3c1238b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55fb3c123a88 <col:49>
|-VarDecl 0x55fb3c123b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55fb3c123c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55fb3c123c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55fb3c123d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55fb3c123e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55fb3c123f20 <col:42>
|-VarDecl 0x55fb3c123f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55fb3c124010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55fb3c124198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55fb3c124088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55fb3c124240 <col:57>
|-FunctionDecl 0x55fb3c124350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55fb3c1242c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55fb3c1243f8 <col:56>
|-FunctionDecl 0x55fb3c125540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55fb3c124478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55fb3c1255e8 <col:59>
|-FunctionDecl 0x55fb3c1256f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55fb3c125658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55fb3c125798 <col:48>
| `-ConstAttr 0x55fb3c1257f0 <col:89>
|-FunctionDecl 0x55fb3c125a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55fb3c1258a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55fb3c125938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55fb3c125cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55fb3c125b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55fb3c125bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55fb3c125d68 <col:88>
|-FunctionDecl 0x55fb3c125f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55fb3c125dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55fb3c125e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55fb3c125fb0 <col:88>
|-FunctionDecl 0x55fb3c1261c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55fb3c126018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55fb3c1260a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55fb3c126278 <line:208:22>
|-FunctionDecl 0x55fb3c1265e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55fb3c1262e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55fb3c126360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55fb3c1263f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55fb3c126480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55fb3c1268e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55fb3c1266e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55fb3c1267c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55fb3c126998 <col:85>
|-FunctionDecl 0x55fb3c126d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55fb3c126a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55fb3c126b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55fb3c126c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55fb3c126e40 <col:52>
|-FunctionDecl 0x55fb3c126fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55fb3c126ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55fb3c127060 <col:61>
|-FunctionDecl 0x55fb3c127560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55fb3c1270c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55fb3c127148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55fb3c127278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55fb3c127368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55fb3c127620 <col:62>
|-FunctionDecl 0x55fb3c127838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55fb3c127688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55fb3c127718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55fb3c1278e8 <line:221:22>
|-FunctionDecl 0x55fb3c1279e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55fb3c127950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55fb3c127a90 <col:65>
|-TypedefDecl 0x55fb3c127b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55fb3c0b2140 'unsigned long'
|-RecordDecl 0x55fb3c127b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55fb3c127ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55fb3c127d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55fb3c127db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55fb3c127d60 'union pthread_attr_t' sugar
|   `-RecordType 0x55fb3c127be0 'union pthread_attr_t'
|     `-Record 0x55fb3c127b58 'pthread_attr_t'
|-RecordDecl 0x55fb3c127e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55fb3c127f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55fb3c128000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55fb3c1280b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55fb3c128050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55fb3c127e90 'struct __pthread_internal_list'
|     `-Record 0x55fb3c127e10 '__pthread_internal_list'
|-RecordDecl 0x55fb3c128120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55fb3c1281c8 parent 0x55fb3c0b1f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55fb3c1282a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55fb3c128308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55fb3c128370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55fb3c1283d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55fb3c128440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55fb3c1284a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55fb3c12c580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55fb3c12c630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55fb3c12c720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55fb3c12c788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55fb3c12c910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55fb3c12c8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55fb3c1281a0 'pthread_mutex_t'
|     `-Record 0x55fb3c128120 ''
|-RecordDecl 0x55fb3c12c980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55fb3c12cac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55fb3c12cb28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55fb3c12cbe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55fb3c12cb80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55fb3c12ca00 'pthread_mutexattr_t'
|     `-Record 0x55fb3c12c980 ''
|-RecordDecl 0x55fb3c12cc50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55fb3c12ccf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55fb3c12cdc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55fb3c12ce28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55fb3c12ce90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55fb3c12cef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55fb3c12cf60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55fb3c12cfc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55fb3c12d030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55fb3c12d098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55fb3c12d150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe000_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe000_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55fb3c12d240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55fb3c12d2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55fb3c12d3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55fb3c12d380 'union pthread_cond_t' sugar
|   `-RecordType 0x55fb3c12ccd0 'pthread_cond_t'
|     `-Record 0x55fb3c12cc50 ''
|-RecordDecl 0x55fb3c12d450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55fb3c12d590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55fb3c12d5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55fb3c12d6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55fb3c12d650 'union pthread_condattr_t' sugar
|   `-RecordType 0x55fb3c12d4d0 'pthread_condattr_t'
|     `-Record 0x55fb3c12d450 ''
|-TypedefDecl 0x55fb3c12d738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55fb3c0b2120 'unsigned int'
|-TypedefDecl 0x55fb3c12d7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55fb3c0b2080 'int'
|-RecordDecl 0x55fb3c12d800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55fb3c12d8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55fb3c12d970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55fb3c12d9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55fb3c12da40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55fb3c12daa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55fb3c12db10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55fb3c12db78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55fb3c12dbe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55fb3c12dc48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55fb3c12dcb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55fb3c12dd18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55fb3c12dd80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55fb3c12de30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe000_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe000_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55fb3c12ded8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55fb3c12df40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55fb3c12e090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55fb3c12e030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55fb3c12d880 'pthread_rwlock_t'
|     `-Record 0x55fb3c12d800 ''
|-RecordDecl 0x55fb3c12e100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55fb3c12e240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55fb3c12e2a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55fb3c12e360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55fb3c12e300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55fb3c12e180 'pthread_rwlockattr_t'
|     `-Record 0x55fb3c12e100 ''
|-TypedefDecl 0x55fb3c12e3e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55fb3c0b2084 'volatile int' volatile
|   `-BuiltinType 0x55fb3c0b2080 'int'
|-RecordDecl 0x55fb3c12e440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55fb3c1305b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55fb3c130618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55fb3c1306d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55fb3c130670 'union pthread_barrier_t' sugar
|   `-RecordType 0x55fb3c12e4c0 'pthread_barrier_t'
|     `-Record 0x55fb3c12e440 ''
|-RecordDecl 0x55fb3c130740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55fb3c130840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55fb3c1308a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55fb3c130960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55fb3c130900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55fb3c1307c0 'pthread_barrierattr_t'
|     `-Record 0x55fb3c130740 ''
|-TypedefDecl 0x55fb3c130a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55fb3c130a10 'long [8]' 8 
|   `-BuiltinType 0x55fb3c0b20a0 'long'
|-EnumDecl 0x55fb3c130ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55fb3c130b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55fb3c130be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55fb3c130c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55fb3c130d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55fb3c130d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55fb3c130da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55fb3c130df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55fb3c130e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55fb3c130e68 <col:26> 'int'
| |   `-DeclRefExpr 0x55fb3c130e48 <col:26> 'int' EnumConstant 0x55fb3c130d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55fb3c130f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55fb3c130ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x55fb3c130ed0 <col:29> 'int' EnumConstant 0x55fb3c130d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55fb3c130f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55fb3c130f78 <col:30> 'int'
| |   `-DeclRefExpr 0x55fb3c130f58 <col:30> 'int' EnumConstant 0x55fb3c130da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55fb3c131018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55fb3c131000 <col:27> 'int'
|     `-DeclRefExpr 0x55fb3c130fe0 <col:27> 'int' EnumConstant 0x55fb3c130e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55fb3c131068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55fb3c131138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55fb3c1311c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55fb3c1311a8 <col:30> 'int'
| |   `-DeclRefExpr 0x55fb3c131188 <col:30> 'int' EnumConstant 0x55fb3c131138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55fb3c131210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55fb3c131298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55fb3c131280 <col:29> 'int'
|     `-DeclRefExpr 0x55fb3c131260 <col:29> 'int' EnumConstant 0x55fb3c131210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55fb3c1312e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55fb3c1313b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55fb3c131408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55fb3c131458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55fb3c1314a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55fb3c1315c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55fb3c131610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55fb3c131660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55fb3c1316e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55fb3c1316d0 <col:31> 'int'
|     `-DeclRefExpr 0x55fb3c1316b0 <col:31> 'int' EnumConstant 0x55fb3c1315c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55fb3c131738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55fb3c131808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55fb3c131858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55fb3c1318a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55fb3c131978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55fb3c1319c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55fb3c131a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55fb3c131ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55fb3c131b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55fb3c131b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55fb3c131dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55fb3c131e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55fb3c131e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55fb3c131fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55fb3c132008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55fb3c1320d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55fb3c132128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55fb3c132178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55fb3c132248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55fb3c132298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55fb3c1328f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55fb3c132390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55fb3c1324a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fb3c1326e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55fb3c132760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55fb3c1329b8 <col:47>
| |-NonNullAttr 0x55fb3c132a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x55fb3c132a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55fb3c132b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55fb3c132aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55fb3c132dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55fb3c132c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55fb3c132ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55fb3c132f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55fb3c132e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55fb3c133040 <col:60>
|-FunctionDecl 0x55fb3c133190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55fb3c133230 <col:54>
| `-ConstAttr 0x55fb3c133288 <col:95>
|-FunctionDecl 0x55fb3c133458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55fb3c1332c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55fb3c133338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55fb3c133508 <line:394:19>
| `-ConstAttr 0x55fb3c133560 <col:60>
|-FunctionDecl 0x55fb3c133f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55fb3c133e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55fb3c134010 <col:71>
| `-NonNullAttr 0x55fb3c134068 <col:112, col:126> 1
|-FunctionDecl 0x55fb3c134170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55fb3c1340b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55fb3c134218 <line:397:22>
| `-NonNullAttr 0x55fb3c134270 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c134498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55fb3c1342b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55fb3c134338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55fb3c134548 <line:400:22>
| `-NonNullAttr 0x55fb3c1345a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55fb3c1347a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55fb3c1345e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fb3c134668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55fb3c134858 <line:403:22>
| `-NonNullAttr 0x55fb3c1348b0 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c134b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55fb3c1348f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55fb3c1349a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55fb3c134bb8 <line:406:22>
| `-NonNullAttr 0x55fb3c134c10 <col:63, col:80> 1 2
|-FunctionDecl 0x55fb3c135e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55fb3c134c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fb3c134cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55fb3c135ef8 <line:409:22>
| `-NonNullAttr 0x55fb3c135f50 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c136188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55fb3c135f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fb3c136028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55fb3c136238 <line:412:22>
| `-NonNullAttr 0x55fb3c136290 <col:63, col:80> 1 2
|-FunctionDecl 0x55fb3c1364c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55fb3c1362d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fb3c136368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55fb3c136578 <col:37>
| `-NonNullAttr 0x55fb3c1365d0 <col:78, col:95> 1 2
|-FunctionDecl 0x55fb3c1367b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fb3c136618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fb3c136698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55fb3c136868 <line:418:22>
| `-NonNullAttr 0x55fb3c1368c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55fb3c136a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55fb3c136908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fb3c136988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55fb3c136af8 <line:420:22>
| `-NonNullAttr 0x55fb3c136b50 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c136cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fb3c136b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fb3c136c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55fb3c136da8 <line:423:22>
| `-NonNullAttr 0x55fb3c137e30 <col:63, col:80> 1 2
|-FunctionDecl 0x55fb3c137fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55fb3c137e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fb3c137ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55fb3c138068 <line:426:22>
| `-NonNullAttr 0x55fb3c1380c0 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c138268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fb3c138108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fb3c138188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55fb3c138318 <line:429:22>
| `-NonNullAttr 0x55fb3c138370 <col:63, col:80> 1 2
|-FunctionDecl 0x55fb3c1384f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55fb3c1383b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fb3c138438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55fb3c1385a8 <line:431:22>
| `-NonNullAttr 0x55fb3c138600 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c138828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55fb3c138648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fb3c1386c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55fb3c1388d8 <line:434:22>
| |-NonNullAttr 0x55fb3c138930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55fb3c138968 <col:100> "" ""
|-FunctionDecl 0x55fb3c138b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55fb3c1389b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fb3c138a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55fb3c138c28 <line:437:22>
| |-NonNullAttr 0x55fb3c138c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x55fb3c138cb8 <col:97> "" ""
|-FunctionDecl 0x55fb3c138eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55fb3c138d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fb3c138d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55fb3c138f68 <line:440:22>
| `-NonNullAttr 0x55fb3c138fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x55fb3c139140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55fb3c139008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fb3c139080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55fb3c1391f0 <line:443:22>
| `-NonNullAttr 0x55fb3c139248 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c139538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55fb3c139298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fb3c139318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55fb3c139390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55fb3c1395f0 <line:447:22>
| `-NonNullAttr 0x55fb3c139648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55fb3c1398f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55fb3c1396a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fb3c139720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55fb3c139798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55fb3c1399b0 <col:43>
| `-NonNullAttr 0x55fb3c139a08 <col:84, col:98> 1
|-FunctionDecl 0x55fb3c139cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55fb3c139a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55fb3c139ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55fb3c139b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55fb3c139d80 <line:452:22>
| `-NonNullAttr 0x55fb3c139dd8 <col:63, col:77> 3
|-FunctionDecl 0x55fb3c13a0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55fb3c139e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55fb3c139ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55fb3c139f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55fb3c13a1a0 <line:456:22>
| `-NonNullAttr 0x55fb3c13a1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x55fb3c13a3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55fb3c13a248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55fb3c13a2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55fb3c13a498 <line:458:22>
|-FunctionDecl 0x55fb3c13a868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55fb3c13a560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55fb3c13a700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55fb3c13a918 <col:52, col:69> 1 2
|-FunctionDecl 0x55fb3c13aac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55fb3c13a9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55fb3c13aa20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55fb3c13aca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55fb3c13ab88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55fb3c13ac08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55fb3c13ae60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55fb3c13ad68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55fb3c13afa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55fb3c13b040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55fb3c13b0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55fb3c13b1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55fb3c13b240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55fb3c13b410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe000_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55fb3c13b508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55fb3c13b5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55fb3c13b560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55fb3c13b0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x55fb3c13b040 ''
| `-AlignedAttr 0x55fb3c13b618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55fb3c13b690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55fb3c13b7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55fb3c13b858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55fb3c13b8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55fb3c13b928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55fb3c13bb30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55fb3c13ba20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55fb3c13bc78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55fb3c13bbe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55fb3c13be70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55fb3c13bd30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55fb3c13bf18 <line:487:22>
|-RecordDecl 0x55fb3c13bf70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55fb3c13c288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55fb3c13c0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55fb3c13c168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55fb3c13c338 <col:86>
| `-ReturnsTwiceAttr 0x55fb3c13c390 <col:12> Implicit
|-FunctionDecl 0x55fb3c13c6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55fb3c13c460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55fb3c13c570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55fb3c13c768 <line:493:22>
| `-NonNullAttr 0x55fb3c13c7c0 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c13c938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55fb3c13c808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55fb3c13c9e0 <line:495:22>
| `-NonNullAttr 0x55fb3c13ca38 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c13cb40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55fb3c13ca88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55fb3c13cbe8 <line:497:22>
| `-NonNullAttr 0x55fb3c13cc40 <col:52, col:66> 1
|-FunctionDecl 0x55fb3c13cd40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55fb3c13cc88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55fb3c13cde8 <line:499:22>
| `-NonNullAttr 0x55fb3c13ce40 <col:52, col:66> 1
|-FunctionDecl 0x55fb3c13d088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55fb3c13ce98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55fb3c13cf28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55fb3c13d138 <col:36>
| `-NonNullAttr 0x55fb3c13d190 <col:66, col:83> 1 2
|-FunctionDecl 0x55fb3c13d290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55fb3c13d1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55fb3c13d338 <line:504:22>
| `-NonNullAttr 0x55fb3c13d390 <col:52, col:66> 1
|-FunctionDecl 0x55fb3c13d628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fb3c13d440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55fb3c13d4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55fb3c13d6d8 <line:508:22>
| `-NonNullAttr 0x55fb3c13d730 <col:63, col:80> 1 2
|-FunctionDecl 0x55fb3c13d9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55fb3c13d778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55fb3c13d7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55fb3c13d878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55fb3c13dab0 <line:512:22>
| `-NonNullAttr 0x55fb3c13db08 <col:63, col:80> 1 3
|-FunctionDecl 0x55fb3c13dc10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55fb3c13db58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55fb3c13dcb8 <line:514:22>
| `-NonNullAttr 0x55fb3c13dd10 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c13df38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55fb3c13ddc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55fb3c13dfe0 <line:516:22>
| `-NonNullAttr 0x55fb3c13e038 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c13e140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55fb3c13e088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55fb3c13e1e8 <line:518:22>
| `-NonNullAttr 0x55fb3c13e240 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c13e468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fb3c13e288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55fb3c13e308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55fb3c13e518 <line:522:22>
| `-NonNullAttr 0x55fb3c13e570 <col:63, col:80> 1 2
|-FunctionDecl 0x55fb3c13e778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55fb3c13e5b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55fb3c13e638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55fb3c13e828 <line:525:22>
| `-NonNullAttr 0x55fb3c13e880 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c13ea28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fb3c13e8c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55fb3c13e948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55fb3c13ead8 <line:528:22>
| `-NonNullAttr 0x55fb3c13eb30 <col:63, col:80> 1 2
|-FunctionDecl 0x55fb3c13ecb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55fb3c13eb78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55fb3c13ebf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55fb3c13ed68 <line:530:22>
| `-NonNullAttr 0x55fb3c13edc0 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c13ff90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fb3c13ee08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55fb3c13feb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55fb3c140040 <line:534:22>
| `-NonNullAttr 0x55fb3c140098 <col:63, col:80> 1 2
|-FunctionDecl 0x55fb3c140228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55fb3c1400e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55fb3c140168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55fb3c1402d8 <line:537:22>
| `-NonNullAttr 0x55fb3c140330 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c1404d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fb3c140378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55fb3c1403f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55fb3c140588 <line:541:22>
| `-NonNullAttr 0x55fb3c1405e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55fb3c140768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55fb3c140628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55fb3c1406a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55fb3c140818 <line:544:22>
| `-NonNullAttr 0x55fb3c140870 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c140a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55fb3c1408b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55fb3c140938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55fb3c140b08 <line:547:22>
| `-NonNullAttr 0x55fb3c140b60 <col:63, col:80> 1 2
|-FunctionDecl 0x55fb3c140ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55fb3c140ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55fb3c140c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55fb3c140d98 <line:550:22>
| `-NonNullAttr 0x55fb3c140df0 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c142168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55fb3c141f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55fb3c142020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55fb3c142218 <col:29>
| `-NonNullAttr 0x55fb3c142270 <col:70, col:84> 1
|-FunctionDecl 0x55fb3c1423e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55fb3c1422b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55fb3c142490 <line:555:22>
| `-NonNullAttr 0x55fb3c1424e8 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c1425f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55fb3c142538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55fb3c142698 <line:557:22>
| `-NonNullAttr 0x55fb3c1426f0 <col:52, col:66> 1
|-FunctionDecl 0x55fb3c1427f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55fb3c142738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55fb3c142898 <line:559:19>
| `-NonNullAttr 0x55fb3c1428f0 <col:49, col:63> 1
|-FunctionDecl 0x55fb3c142b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55fb3c142938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55fb3c1429c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55fb3c142bd8 <col:39>
| `-NonNullAttr 0x55fb3c142c30 <col:69, col:86> 1 2
|-FunctionDecl 0x55fb3c142d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55fb3c142c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55fb3c142dd8 <line:564:22>
| `-NonNullAttr 0x55fb3c142e30 <col:52, col:66> 1
|-FunctionDecl 0x55fb3c142f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55fb3c142ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55fb3c143040 <line:566:22>
| `-NonNullAttr 0x55fb3c143098 <col:52, col:66> 1
|-FunctionDecl 0x55fb3c143258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55fb3c1430e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55fb3c143178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55fb3c143308 <col:39>
| `-NonNullAttr 0x55fb3c143360 <col:69, col:86> 1 2
|-FunctionDecl 0x55fb3c143460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55fb3c1433a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55fb3c143508 <line:571:22>
| `-NonNullAttr 0x55fb3c143560 <col:52, col:66> 1
|-FunctionDecl 0x55fb3c143748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55fb3c143610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55fb3c1437f0 <line:573:22>
| `-NonNullAttr 0x55fb3c143848 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c143950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55fb3c143898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55fb3c1439f8 <line:575:22>
| `-NonNullAttr 0x55fb3c143a50 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c143c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fb3c143a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55fb3c143b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55fb3c143d28 <line:579:22>
| `-NonNullAttr 0x55fb3c143d80 <col:63, col:80> 1 2
|-FunctionDecl 0x55fb3c143fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55fb3c143dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55fb3c143e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55fb3c144058 <line:582:22>
| `-NonNullAttr 0x55fb3c1440b0 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c144258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fb3c1440f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55fb3c144178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55fb3c144308 <line:586:22>
| `-NonNullAttr 0x55fb3c144360 <col:63, col:80> 1 2
|-FunctionDecl 0x55fb3c1444e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55fb3c1443a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55fb3c144428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55fb3c144598 <col:36>
| `-NonNullAttr 0x55fb3c1445f0 <col:77, col:91> 1
|-FunctionDecl 0x55fb3c144928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55fb3c1446d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55fb3c1447e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55fb3c1449d8 <line:591:22>
| `-NonNullAttr 0x55fb3c144a30 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c144ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55fb3c144a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55fb3c144c50 <line:593:22>
| `-NonNullAttr 0x55fb3c144ca8 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c144db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55fb3c144cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55fb3c144e58 <line:595:22>
| `-NonNullAttr 0x55fb3c144eb0 <col:52, col:66> 1
|-FunctionDecl 0x55fb3c144fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55fb3c144f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55fb3c145070 <line:597:22>
| `-NonNullAttr 0x55fb3c1450c8 <col:52, col:66> 1
|-FunctionDecl 0x55fb3c1452f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55fb3c145118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55fb3c145190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55fb3c1453a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55fb3c1456d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55fb3c145428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55fb3c1454a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55fb3c145530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55fb3c145790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55fb3c1459a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55fb3c145870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55fb3c145a50 <line:606:22>
| `-NonNullAttr 0x55fb3c145aa8 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c145bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55fb3c145af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55fb3c145c58 <line:608:22>
| `-NonNullAttr 0x55fb3c145cb0 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c145f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fb3c145cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55fb3c145d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55fb3c145fc0 <line:612:22>
| `-NonNullAttr 0x55fb3c146018 <col:63, col:80> 1 2
|-FunctionDecl 0x55fb3c146228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55fb3c146068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55fb3c1460e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55fb3c1462d8 <col:37>
| `-NonNullAttr 0x55fb3c146330 <col:78, col:92> 1
|-FunctionDecl 0x55fb3c146548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55fb3c146378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55fb3c146420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55fb3c1465f8 <line:618:22>
| `-NonNullAttr 0x55fb3c146650 <col:63, col:80> 1 2
|-FunctionDecl 0x55fb3c146818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55fb3c146698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55fb3c146710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55fb3c1468c8 <line:621:22>
| `-NonNullAttr 0x55fb3c146920 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c146bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55fb3c146a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55fb3c146a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55fb3c146c78 <line:623:22>
| `-NonNullAttr 0x55fb3c146cd0 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c146e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55fb3c146d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55fb3c146f20 <line:625:22>
| `-NonNullAttr 0x55fb3c146f78 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c147080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55fb3c146fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55fb3c147128 <line:627:22>
| `-NonNullAttr 0x55fb3c147180 <col:52, col:66> 1
|-FunctionDecl 0x55fb3c147280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55fb3c1471c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55fb3c147328 <line:629:22>
| `-NonNullAttr 0x55fb3c147380 <col:52, col:66> 1
|-FunctionDecl 0x55fb3c147480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55fb3c1473c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55fb3c147528 <line:631:22>
| `-NonNullAttr 0x55fb3c147580 <col:52, col:66> 1
|-FunctionDecl 0x55fb3c147958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55fb3c147660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55fb3c147770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55fb3c1477f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55fb3c147a10 <line:635:22>
| `-NonNullAttr 0x55fb3c147a68 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c147be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55fb3c147ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55fb3c147c90 <line:637:22>
| `-NonNullAttr 0x55fb3c147ce8 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c147df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55fb3c147d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55fb3c147e98 <line:639:22>
| `-NonNullAttr 0x55fb3c147ef0 <col:52, col:66> 1
|-FunctionDecl 0x55fb3c1480e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55fb3c147fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55fb3c148190 <line:641:22>
| `-NonNullAttr 0x55fb3c1481e8 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c1482f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55fb3c148238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55fb3c148398 <line:643:22>
| `-NonNullAttr 0x55fb3c1483f0 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c148618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fb3c148438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55fb3c1484b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55fb3c1486c8 <line:647:22>
| `-NonNullAttr 0x55fb3c148720 <col:63, col:80> 1 2
|-FunctionDecl 0x55fb3c148928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55fb3c148768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55fb3c1487e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55fb3c1489d8 <line:650:22>
| `-NonNullAttr 0x55fb3c148a30 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c148d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55fb3c148b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55fb3c148c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55fb3c148e28 <line:653:22>
| `-NonNullAttr 0x55fb3c148e80 <col:63, col:77> 1
|-FunctionDecl 0x55fb3c148fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55fb3c148ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55fb3c149090 <col:69>
|-FunctionDecl 0x55fb3c149208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55fb3c1490f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55fb3c1492b0 <col:72>
|-FunctionDecl 0x55fb3c1494e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55fb3c149318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55fb3c1493c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55fb3c149598 <col:44>
|-FunctionDecl 0x55fb3c1497b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55fb3c149600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55fb3c149678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55fb3c149868 <line:660:22>
| `-NonNullAttr 0x55fb3c1498c0 <col:63, col:77> 2
|-FunctionDecl 0x55fb3c149d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55fb3c1499a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55fb3c149ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55fb3c149bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55fb3c149dc0 <col:47>
|-FunctionDecl 0x55fb3c14af60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55fb3c149e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55fb3c14b0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55fb3c14b020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55fb3c14b210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55fb3c14b178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55fb3c14b2d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55fb3c14b398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55fb3c14b458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55fb3c14b510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55fb3c14b590 prev 0x55fb3c14b510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55fb3c14b5f8 <col:24> 'int' 0
|-VarDecl 0x55fb3c14b630 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55fb3c14b6b0 prev 0x55fb3c14b630 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55fb3c14b718 <col:27> 'int' 0
|-VarDecl 0x55fb3c14b750 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55fb3c14b7d0 prev 0x55fb3c14b750 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55fb3c14b838 <col:27> 'int' 0
|-VarDecl 0x55fb3c14b868 <line:677:1, col:7> col:7 __unbuffered_p1_EAX$flush_delayed '_Bool'
|-VarDecl 0x55fb3c14b8e8 <line:678:1, col:5> col:5 __unbuffered_p1_EAX$mem_tmp 'int'
|-VarDecl 0x55fb3c14b960 <line:679:1, col:7> col:7 __unbuffered_p1_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x55fb3c14b9d8 <line:680:1, col:7> col:7 __unbuffered_p1_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x55fb3c14ba50 <line:681:1, col:7> col:7 __unbuffered_p1_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x55fb3c14bac8 <line:682:1, col:7> col:7 __unbuffered_p1_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x55fb3c14bb40 <line:683:1, col:7> col:7 __unbuffered_p1_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x55fb3c14bbb8 <line:684:1, col:7> col:7 __unbuffered_p1_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x55fb3c14bc30 <line:685:1, col:7> col:7 __unbuffered_p1_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x55fb3c14bca8 <line:686:1, col:7> col:7 __unbuffered_p1_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x55fb3c14bd20 <line:687:1, col:7> col:7 used __unbuffered_p1_EAX$read_delayed '_Bool'
|-VarDecl 0x55fb3c14bda0 <line:688:1, col:6> col:6 used __unbuffered_p1_EAX$read_delayed_var 'int *'
|-VarDecl 0x55fb3c14be20 <line:689:1, col:5> col:5 __unbuffered_p1_EAX$w_buff0 'int'
|-VarDecl 0x55fb3c14be98 <line:690:1, col:7> col:7 __unbuffered_p1_EAX$w_buff0_used '_Bool'
|-VarDecl 0x55fb3c14bf70 <line:691:1, col:5> col:5 __unbuffered_p1_EAX$w_buff1 'int'
|-VarDecl 0x55fb3c14bfe8 <line:692:1, col:7> col:7 __unbuffered_p1_EAX$w_buff1_used '_Bool'
|-VarDecl 0x55fb3c14c068 <line:693:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55fb3c14c0e8 prev 0x55fb3c14c068 <line:694:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55fb3c14c150 <col:27> 'int' 0
|-VarDecl 0x55fb3c14c180 <line:695:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55fb3c14c1f8 <line:696:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55fb3c14c278 <line:697:1, col:5> col:5 used x 'int'
|-VarDecl 0x55fb3c14c2f8 prev 0x55fb3c14c278 <line:698:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55fb3c14c360 <col:9> 'int' 0
|-VarDecl 0x55fb3c14c390 <line:699:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x55fb3c14c410 <line:700:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x55fb3c14c488 <line:701:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x55fb3c14c500 <line:702:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x55fb3c14c578 <line:703:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x55fb3c14c5f0 <line:704:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x55fb3c14c668 <line:705:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x55fb3c14c6e0 <line:706:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x55fb3c14c758 <line:707:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x55fb3c14c7d0 <line:708:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x55fb3c14c848 <line:709:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x55fb3c14c8c8 <line:710:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x55fb3c14c948 <line:711:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x55fb3c14c9c0 <line:712:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x55fb3c14ca40 <line:713:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x55fb3c14cab8 <line:714:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x55fb3c14cb38 <line:715:1, col:5> col:5 used y 'int'
|-VarDecl 0x55fb3c14cbb8 prev 0x55fb3c14cb38 <line:716:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55fb3c14cc20 <col:9> 'int' 0
|-VarDecl 0x55fb3c14cc50 <line:717:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55fb3c14ccc8 <line:718:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x55fb3c14cd40 <line:719:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55fb3c14ce58 prev 0x55fb3c14af60 <line:720:1, line:748:1> line:720:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55fb3c14cdc0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55fb3c14e698 <line:721:1, line:748:1>
|   |-CallExpr 0x55fb3c14cf80 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fb3c14cf50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fb3c14cf00 <col:3> 'void ()' Function 0x55fb3c0f2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fb3c14cff8 <line:723:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55fb3c14cfa0 <col:3> 'int' lvalue Var 0x55fb3c14b6b0 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55fb3c14cfe0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fb3c14cfc0 <col:25> 'int' lvalue Var 0x55fb3c14cbb8 'y' 'int'
|   |-CallExpr 0x55fb3c14d050 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fb3c14d038 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fb3c14d018 <col:3> 'void ()' Function 0x55fb3c0f2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fb3c14d0a8 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fb3c14d090 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fb3c14d070 <col:3> 'void ()' Function 0x55fb3c0f2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fb3c14d120 <line:726:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55fb3c14d0c8 <col:3> 'int' lvalue Var 0x55fb3c14ca40 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55fb3c14d108 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fb3c14d0e8 <col:15> 'int' lvalue Var 0x55fb3c14c948 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55fb3c14d180 <line:727:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55fb3c14d140 <col:3> 'int' lvalue Var 0x55fb3c14c948 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x55fb3c14d160 <col:15> 'int' 1
|   |-BinaryOperator 0x55fb3c14d1f8 <line:728:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55fb3c14d1a0 <col:3> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fb3c14d1e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fb3c14d1c0 <col:20> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55fb3c14d290 <line:729:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55fb3c14d218 <col:3> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55fb3c14d268 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55fb3c14d238 <col:27> 'int' 1
|   |-CallExpr 0x55fb3c14d418 <line:730:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55fb3c14d400 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55fb3c14d2b0 <col:3> 'void (int)' Function 0x55fb3c0f20d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55fb3c14d3b0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55fb3c14d390 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55fb3c14d370 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55fb3c14d328 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55fb3c14d310 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55fb3c14d2d0 <col:23> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55fb3c14d358 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55fb3c14d340 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55fb3c14d2f0 <col:41> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55fb3c14d498 <line:731:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55fb3c14d440 <col:3> '_Bool' lvalue Var 0x55fb3c14c668 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55fb3c14d480 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fb3c14d460 <col:20> '_Bool' lvalue Var 0x55fb3c14c488 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55fb3c14d510 <line:732:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55fb3c14d4b8 <col:3> '_Bool' lvalue Var 0x55fb3c14c6e0 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55fb3c14d4f8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fb3c14d4d8 <col:20> '_Bool' lvalue Var 0x55fb3c14c500 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55fb3c14d588 <line:733:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55fb3c14d530 <col:3> '_Bool' lvalue Var 0x55fb3c14c758 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55fb3c14d570 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fb3c14d550 <col:20> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55fb3c14d600 <line:734:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55fb3c14d5a8 <col:3> '_Bool' lvalue Var 0x55fb3c14c7d0 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55fb3c14d5e8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fb3c14d5c8 <col:20> '_Bool' lvalue Var 0x55fb3c14c5f0 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55fb3c14d698 <line:735:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55fb3c14d620 <col:3> '_Bool' lvalue Var 0x55fb3c14c500 'x$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x55fb3c14d670 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55fb3c14d640 <col:27> 'int' 1
|   |-CallExpr 0x55fb3c14d6f0 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fb3c14d6d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fb3c14d6b8 <col:3> 'void ()' Function 0x55fb3c0f2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fb3c14d748 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fb3c14d730 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fb3c14d710 <col:3> 'void ()' Function 0x55fb3c0f2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fb3c14da30 <line:738:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55fb3c14d768 <col:3> 'int' lvalue Var 0x55fb3c14c2f8 'x' 'int'
|   | `-ConditionalOperator 0x55fb3c14da00 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55fb3c14d828 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55fb3c14d7e0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55fb3c14d7c8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55fb3c14d788 <col:7> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55fb3c14d810 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55fb3c14d7f8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55fb3c14d7a8 <col:25> '_Bool' lvalue Var 0x55fb3c14c500 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55fb3c14d9e8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fb3c14d848 <col:42> 'int' lvalue Var 0x55fb3c14c948 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55fb3c14d9c8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55fb3c14d998 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55fb3c14d908 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55fb3c14d8c0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55fb3c14d8a8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55fb3c14d868 <col:55> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55fb3c14d8f0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55fb3c14d8d8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55fb3c14d888 <col:73> '_Bool' lvalue Var 0x55fb3c14c6e0 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55fb3c14d968 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fb3c14d928 <col:90> 'int' lvalue Var 0x55fb3c14ca40 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55fb3c14d980 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fb3c14d948 <col:102> 'int' lvalue Var 0x55fb3c14c2f8 'x' 'int'
|   |-BinaryOperator 0x55fb3c14dc38 <line:739:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55fb3c14da50 <col:3> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fb3c14dc20 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fb3c14dbf0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55fb3c14db10 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55fb3c14dac8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55fb3c14dab0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55fb3c14da70 <col:20> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55fb3c14daf8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55fb3c14dae0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55fb3c14da90 <col:38> '_Bool' lvalue Var 0x55fb3c14c500 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55fb3c14dba8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fb3c14db60 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fb3c14db30 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55fb3c14dbd8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fb3c14dbc0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fb3c14db88 <col:66> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55fb3c14df20 <line:740:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55fb3c14dc58 <col:3> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fb3c14df08 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fb3c14ded8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55fb3c14ddf8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55fb3c14dd18 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55fb3c14dcd0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55fb3c14dcb8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55fb3c14dc78 <col:20> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55fb3c14dd00 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55fb3c14dce8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55fb3c14dc98 <col:38> '_Bool' lvalue Var 0x55fb3c14c500 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55fb3c14ddd8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55fb3c14dd90 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55fb3c14dd78 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55fb3c14dd38 <col:56> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55fb3c14ddc0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55fb3c14dda8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55fb3c14dd58 <col:74> '_Bool' lvalue Var 0x55fb3c14c6e0 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55fb3c14de90 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fb3c14de48 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fb3c14de18 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55fb3c14dec0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fb3c14dea8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fb3c14de70 <col:102> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55fb3c14e138 <line:741:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55fb3c14df40 <col:3> '_Bool' lvalue Var 0x55fb3c14c500 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55fb3c14e120 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fb3c14e0f0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55fb3c14e010 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55fb3c14dfc8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55fb3c14dfb0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55fb3c14df60 <col:20> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55fb3c14dff8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55fb3c14dfe0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55fb3c14df90 <col:38> '_Bool' lvalue Var 0x55fb3c14c500 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55fb3c14e0a8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fb3c14e060 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fb3c14e030 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55fb3c14e0d8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fb3c14e0c0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fb3c14e088 <col:66> '_Bool' lvalue Var 0x55fb3c14c500 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55fb3c14e420 <line:742:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55fb3c14e158 <col:3> '_Bool' lvalue Var 0x55fb3c14c6e0 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55fb3c14e408 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fb3c14e3d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55fb3c14e2f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55fb3c14e218 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55fb3c14e1d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55fb3c14e1b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55fb3c14e178 <col:20> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55fb3c14e200 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55fb3c14e1e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55fb3c14e198 <col:38> '_Bool' lvalue Var 0x55fb3c14c500 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55fb3c14e2d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55fb3c14e290 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55fb3c14e278 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55fb3c14e238 <col:56> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55fb3c14e2c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55fb3c14e2a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55fb3c14e258 <col:74> '_Bool' lvalue Var 0x55fb3c14c6e0 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55fb3c14e390 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fb3c14e348 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fb3c14e318 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55fb3c14e3c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fb3c14e3a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fb3c14e370 <col:102> '_Bool' lvalue Var 0x55fb3c14c6e0 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55fb3c14e478 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fb3c14e460 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fb3c14e440 <col:3> 'void ()' Function 0x55fb3c0f2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fb3c14e4d0 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fb3c14e4b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fb3c14e498 <col:3> 'void ()' Function 0x55fb3c0f2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fb3c14e588 <line:745:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55fb3c14e4f0 <col:3> 'int' lvalue Var 0x55fb3c14b590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55fb3c14e568 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55fb3c14e550 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fb3c14e510 <col:22> 'int' lvalue Var 0x55fb3c14b590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55fb3c14e530 <col:41> 'int' 1
|   |-CallExpr 0x55fb3c14e5e0 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fb3c14e5c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fb3c14e5a8 <col:3> 'void ()' Function 0x55fb3c0f2410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55fb3c14e688 <line:747:3, col:36>
|     `-CallExpr 0x55fb3c14e668 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55fb3c14e650 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55fb3c14e600 <col:10> 'void *(void)' Function 0x55fb3c0f1e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55fb3c14e828 prev 0x55fb3c14b0b8 <line:749:1, line:784:1> line:749:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55fb3c14e790 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55fb3c153e10 <line:750:1, line:784:1>
|   |-CallExpr 0x55fb3c14e908 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fb3c14e8f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fb3c14e8d0 <col:3> 'void ()' Function 0x55fb3c0f2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fb3c14e9b8 <line:752:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55fb3c14e928 <col:3> '_Bool' lvalue Var 0x55fb3c14cc50 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55fb3c14e9a0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55fb3c14e980 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55fb3c14e968 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55fb3c14e948 <col:19> 'void *(void)' Function 0x55fb3c0f1e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55fb3c14ea68 <line:753:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55fb3c14e9d8 <col:3> '_Bool' lvalue Var 0x55fb3c14cd40 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55fb3c14ea50 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55fb3c14ea30 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55fb3c14ea18 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55fb3c14e9f8 <col:19> 'void *(void)' Function 0x55fb3c0f1e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55fb3c14eae0 <line:754:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55fb3c14ea88 <col:3> '_Bool' lvalue Var 0x55fb3c14c390 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55fb3c14eac8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fb3c14eaa8 <col:21> '_Bool' lvalue Var 0x55fb3c14cd40 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55fb3c14eb58 <line:755:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55fb3c14eb00 <col:3> 'int' lvalue Var 0x55fb3c14c410 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55fb3c14eb40 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fb3c14eb20 <col:15> 'int' lvalue Var 0x55fb3c14c2f8 'x' 'int'
|   |-BinaryOperator 0x55fb3c14ec08 <line:756:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55fb3c14eb78 <col:3> '_Bool' lvalue Var 0x55fb3c14ccc8 'weak$$choice1' '_Bool'
|   | `-ImplicitCastExpr 0x55fb3c14ebf0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55fb3c14ebd0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55fb3c14ebb8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55fb3c14eb98 <col:19> 'void *(void)' Function 0x55fb3c0f1e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55fb3c14f658 <line:757:3, col:363> 'int' '='
|   | |-DeclRefExpr 0x55fb3c14ec28 <col:3> 'int' lvalue Var 0x55fb3c14c2f8 'x' 'int'
|   | `-ConditionalOperator 0x55fb3c14f628 <col:7, col:363> 'int'
|   |   |-UnaryOperator 0x55fb3c14ec80 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | `-ImplicitCastExpr 0x55fb3c14ec68 <col:8> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55fb3c14ec48 <col:8> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |   |-ImplicitCastExpr 0x55fb3c14f610 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fb3c14ec98 <col:25> 'int' lvalue Var 0x55fb3c14c2f8 'x' 'int'
|   |   `-ParenExpr 0x55fb3c14f5f0 <col:29, col:363> 'int'
|   |     `-ConditionalOperator 0x55fb3c14f5c0 <col:30, col:362> 'int'
|   |       |-BinaryOperator 0x55fb3c14ed58 <col:30, col:48> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55fb3c14ed10 <col:30> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55fb3c14ecf8 <col:30> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55fb3c14ecb8 <col:30> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55fb3c14ed40 <col:48> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55fb3c14ed28 <col:48> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55fb3c14ecd8 <col:48> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55fb3c14f5a8 <col:65> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fb3c14ed78 <col:65> 'int' lvalue Var 0x55fb3c14c948 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55fb3c14f588 <col:77, col:362> 'int'
|   |         `-ConditionalOperator 0x55fb3c14f558 <col:78, col:361> 'int'
|   |           |-BinaryOperator 0x55fb3c14ef18 <col:78, col:134> 'int' '&&'
|   |           | |-BinaryOperator 0x55fb3c14eea8 <col:78, col:115> 'int' '&&'
|   |           | | |-BinaryOperator 0x55fb3c14ee38 <col:78, col:97> 'int' '&&'
|   |           | | | |-ImplicitCastExpr 0x55fb3c14ee20 <col:78> 'int' <IntegralCast>
|   |           | | | | `-ImplicitCastExpr 0x55fb3c14ee08 <col:78> '_Bool' <LValueToRValue>
|   |           | | | |   `-DeclRefExpr 0x55fb3c14ed98 <col:78> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |           | | | `-UnaryOperator 0x55fb3c14edf0 <col:96, col:97> 'int' prefix '!' cannot overflow
|   |           | | |   `-ImplicitCastExpr 0x55fb3c14edd8 <col:97> '_Bool' <LValueToRValue>
|   |           | | |     `-DeclRefExpr 0x55fb3c14edb8 <col:97> '_Bool' lvalue Var 0x55fb3c14c758 'x$r_buff1_thd2' '_Bool'
|   |           | | `-ImplicitCastExpr 0x55fb3c14ee90 <col:115> 'int' <IntegralCast>
|   |           | |   `-ImplicitCastExpr 0x55fb3c14ee78 <col:115> '_Bool' <LValueToRValue>
|   |           | |     `-DeclRefExpr 0x55fb3c14ee58 <col:115> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   |           | `-UnaryOperator 0x55fb3c14ef00 <col:133, col:134> 'int' prefix '!' cannot overflow
|   |           |   `-ImplicitCastExpr 0x55fb3c14eee8 <col:134> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55fb3c14eec8 <col:134> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |           |-ParenExpr 0x55fb3c14f128 <col:151, col:211> 'int'
|   |           | `-ConditionalOperator 0x55fb3c14f0f8 <col:152, col:210> 'int'
|   |           |   |-ImplicitCastExpr 0x55fb3c14f0c8 <col:152> 'int' <IntegralCast>
|   |           |   | `-ImplicitCastExpr 0x55fb3c14f0b0 <col:152> '_Bool' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x55fb3c14ef38 <col:152> '_Bool' lvalue Var 0x55fb3c14cc50 'weak$$choice0' '_Bool'
|   |           |   |-ImplicitCastExpr 0x55fb3c14f0e0 <col:168> 'int' <LValueToRValue>
|   |           |   | `-DeclRefExpr 0x55fb3c14ef58 <col:168> 'int' lvalue Var 0x55fb3c14c2f8 'x' 'int'
|   |           |   `-ParenExpr 0x55fb3c14f090 <col:172, col:210> 'int'
|   |           |     `-ConditionalOperator 0x55fb3c14f060 <col:173, col:201> 'int'
|   |           |       |-ImplicitCastExpr 0x55fb3c14f018 <col:173> 'int' <IntegralCast>
|   |           |       | `-ImplicitCastExpr 0x55fb3c14f000 <col:173> '_Bool' <LValueToRValue>
|   |           |       |   `-DeclRefExpr 0x55fb3c14efa0 <col:173> '_Bool' lvalue Var 0x55fb3c14ccc8 'weak$$choice1' '_Bool'
|   |           |       |-ImplicitCastExpr 0x55fb3c14f030 <col:189> 'int' <LValueToRValue>
|   |           |       | `-DeclRefExpr 0x55fb3c14efc0 <col:189> 'int' lvalue Var 0x55fb3c14c948 'x$w_buff0' 'int'
|   |           |       `-ImplicitCastExpr 0x55fb3c14f048 <col:201> 'int' <LValueToRValue>
|   |           |         `-DeclRefExpr 0x55fb3c14efe0 <col:201> 'int' lvalue Var 0x55fb3c14ca40 'x$w_buff1' 'int'
|   |           `-ParenExpr 0x55fb3c14f538 <col:215, col:361> 'int'
|   |             `-ConditionalOperator 0x55fb3c14f508 <col:216, col:360> 'int'
|   |               |-BinaryOperator 0x55fb3c14f2c8 <col:216, col:271> 'int' '&&'
|   |               | |-BinaryOperator 0x55fb3c14f258 <col:216, col:252> 'int' '&&'
|   |               | | |-BinaryOperator 0x55fb3c14f1e8 <col:216, col:234> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55fb3c14f1a0 <col:216> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55fb3c14f188 <col:216> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55fb3c14f148 <col:216> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |               | | | `-ImplicitCastExpr 0x55fb3c14f1d0 <col:234> 'int' <IntegralCast>
|   |               | | |   `-ImplicitCastExpr 0x55fb3c14f1b8 <col:234> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55fb3c14f168 <col:234> '_Bool' lvalue Var 0x55fb3c14c758 'x$r_buff1_thd2' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55fb3c14f240 <col:252> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55fb3c14f228 <col:252> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55fb3c14f208 <col:252> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55fb3c14f2b0 <col:270, col:271> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55fb3c14f298 <col:271> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55fb3c14f278 <col:271> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |               |-ParenExpr 0x55fb3c14f3d8 <col:288, col:326> 'int'
|   |               | `-ConditionalOperator 0x55fb3c14f3a8 <col:289, col:317> 'int'
|   |               |   |-ImplicitCastExpr 0x55fb3c14f360 <col:289> 'int' <IntegralCast>
|   |               |   | `-ImplicitCastExpr 0x55fb3c14f348 <col:289> '_Bool' <LValueToRValue>
|   |               |   |   `-DeclRefExpr 0x55fb3c14f2e8 <col:289> '_Bool' lvalue Var 0x55fb3c14cc50 'weak$$choice0' '_Bool'
|   |               |   |-ImplicitCastExpr 0x55fb3c14f378 <col:305> 'int' <LValueToRValue>
|   |               |   | `-DeclRefExpr 0x55fb3c14f308 <col:305> 'int' lvalue Var 0x55fb3c14ca40 'x$w_buff1' 'int'
|   |               |   `-ImplicitCastExpr 0x55fb3c14f390 <col:317> 'int' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55fb3c14f328 <col:317> 'int' lvalue Var 0x55fb3c14c948 'x$w_buff0' 'int'
|   |               `-ParenExpr 0x55fb3c14f4e8 <col:330, col:360> 'int'
|   |                 `-ConditionalOperator 0x55fb3c14f4b8 <col:331, col:359> 'int'
|   |                   |-ImplicitCastExpr 0x55fb3c14f470 <col:331> 'int' <IntegralCast>
|   |                   | `-ImplicitCastExpr 0x55fb3c14f458 <col:331> '_Bool' <LValueToRValue>
|   |                   |   `-DeclRefExpr 0x55fb3c14f3f8 <col:331> '_Bool' lvalue Var 0x55fb3c14cc50 'weak$$choice0' '_Bool'
|   |                   |-ImplicitCastExpr 0x55fb3c14f488 <col:347> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55fb3c14f418 <col:347> 'int' lvalue Var 0x55fb3c14c948 'x$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x55fb3c14f4a0 <col:359> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55fb3c14f438 <col:359> 'int' lvalue Var 0x55fb3c14c2f8 'x' 'int'
|   |-BinaryOperator 0x55fb3c14fdf8 <line:758:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x55fb3c14f678 <col:3> 'int' lvalue Var 0x55fb3c14c948 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55fb3c14fdc8 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x55fb3c14fd98 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55fb3c14fd80 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55fb3c14f698 <col:15> '_Bool' lvalue Var 0x55fb3c14cd40 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55fb3c14fdb0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fb3c14f6b8 <col:31> 'int' lvalue Var 0x55fb3c14c948 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55fb3c14fd60 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x55fb3c14fd30 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x55fb3c14f710 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x55fb3c14f6f8 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55fb3c14f6d8 <col:45> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x55fb3c14fd18 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fb3c14f728 <col:62> 'int' lvalue Var 0x55fb3c14c948 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55fb3c14fcf8 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x55fb3c14fcc8 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x55fb3c14f7e8 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55fb3c14f7a0 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55fb3c14f788 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55fb3c14f748 <col:75> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55fb3c14f7d0 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55fb3c14f7b8 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55fb3c14f768 <col:93> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55fb3c14fcb0 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55fb3c14f808 <col:110> 'int' lvalue Var 0x55fb3c14c948 'x$w_buff0' 'int'
|   |           `-ParenExpr 0x55fb3c14fc90 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x55fb3c14fc60 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x55fb3c14f9a8 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x55fb3c14f938 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x55fb3c14f8c8 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55fb3c14f8b0 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55fb3c14f898 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55fb3c14f828 <col:123> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x55fb3c14f880 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x55fb3c14f868 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55fb3c14f848 <col:142> '_Bool' lvalue Var 0x55fb3c14c758 'x$r_buff1_thd2' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55fb3c14f920 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55fb3c14f908 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55fb3c14f8e8 <col:160> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55fb3c14f990 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55fb3c14f978 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55fb3c14f958 <col:179> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |               |-ImplicitCastExpr 0x55fb3c14fc48 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x55fb3c14f9c8 <col:196> 'int' lvalue Var 0x55fb3c14c948 'x$w_buff0' 'int'
|   |               `-ParenExpr 0x55fb3c14fc28 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x55fb3c14fbf8 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x55fb3c14fb68 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x55fb3c14faf8 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x55fb3c14fa88 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x55fb3c14fa40 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x55fb3c14fa28 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x55fb3c14f9e8 <col:209> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x55fb3c14fa70 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x55fb3c14fa58 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x55fb3c14fa08 <col:227> '_Bool' lvalue Var 0x55fb3c14c758 'x$r_buff1_thd2' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x55fb3c14fae0 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x55fb3c14fac8 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x55fb3c14faa8 <col:245> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x55fb3c14fb50 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x55fb3c14fb38 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x55fb3c14fb18 <col:264> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |                   |-ImplicitCastExpr 0x55fb3c14fbc8 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55fb3c14fb88 <col:281> 'int' lvalue Var 0x55fb3c14c948 'x$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x55fb3c14fbe0 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55fb3c14fba8 <col:293> 'int' lvalue Var 0x55fb3c14c948 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55fb3c1505c0 <line:759:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x55fb3c14fe18 <col:3> 'int' lvalue Var 0x55fb3c14ca40 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55fb3c150590 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x55fb3c150560 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55fb3c150548 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55fb3c14fe38 <col:15> '_Bool' lvalue Var 0x55fb3c14cd40 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55fb3c150578 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fb3c14fe58 <col:31> 'int' lvalue Var 0x55fb3c14ca40 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55fb3c150528 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x55fb3c1504f8 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x55fb3c14feb0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x55fb3c14fe98 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55fb3c14fe78 <col:45> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x55fb3c1504e0 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fb3c14fec8 <col:62> 'int' lvalue Var 0x55fb3c14ca40 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55fb3c1504c0 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x55fb3c150490 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x55fb3c14ffb0 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55fb3c14ff40 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55fb3c14ff28 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55fb3c14fee8 <col:75> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55fb3c14ff70 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55fb3c14ff58 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55fb3c14ff08 <col:93> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55fb3c150478 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55fb3c14ffd0 <col:110> 'int' lvalue Var 0x55fb3c14ca40 'x$w_buff1' 'int'
|   |           `-ParenExpr 0x55fb3c150458 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x55fb3c150428 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x55fb3c150170 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x55fb3c150100 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x55fb3c150090 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55fb3c150078 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55fb3c150060 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55fb3c14fff0 <col:123> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x55fb3c150048 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x55fb3c150030 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55fb3c150010 <col:142> '_Bool' lvalue Var 0x55fb3c14c758 'x$r_buff1_thd2' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55fb3c1500e8 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55fb3c1500d0 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55fb3c1500b0 <col:160> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55fb3c150158 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55fb3c150140 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55fb3c150120 <col:179> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |               |-ImplicitCastExpr 0x55fb3c150410 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x55fb3c150190 <col:196> 'int' lvalue Var 0x55fb3c14ca40 'x$w_buff1' 'int'
|   |               `-ParenExpr 0x55fb3c1503f0 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x55fb3c1503c0 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x55fb3c150330 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x55fb3c1502c0 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x55fb3c150250 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x55fb3c150208 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x55fb3c1501f0 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x55fb3c1501b0 <col:209> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x55fb3c150238 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x55fb3c150220 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x55fb3c1501d0 <col:227> '_Bool' lvalue Var 0x55fb3c14c758 'x$r_buff1_thd2' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x55fb3c1502a8 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x55fb3c150290 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x55fb3c150270 <col:245> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x55fb3c150318 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x55fb3c150300 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x55fb3c1502e0 <col:264> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |                   |-ImplicitCastExpr 0x55fb3c150390 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55fb3c150350 <col:281> 'int' lvalue Var 0x55fb3c14ca40 'x$w_buff1' 'int'
|   |                   `-ImplicitCastExpr 0x55fb3c1503a8 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55fb3c150370 <col:293> 'int' lvalue Var 0x55fb3c14ca40 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55fb3c150e98 <line:760:3, col:349> '_Bool' '='
|   | |-DeclRefExpr 0x55fb3c1505e0 <col:3> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fb3c150e80 <col:20, col:349> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fb3c150e50 <col:20, col:349> 'int'
|   |     |-ImplicitCastExpr 0x55fb3c150e08 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fb3c150df0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fb3c150600 <col:20> '_Bool' lvalue Var 0x55fb3c14cd40 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fb3c150e38 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fb3c150e20 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fb3c150620 <col:36> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55fb3c150dd0 <col:53, col:349> 'int'
|   |       `-ConditionalOperator 0x55fb3c150da0 <col:54, col:348> 'int'
|   |         |-UnaryOperator 0x55fb3c150678 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55fb3c150660 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55fb3c150640 <col:55> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55fb3c150d88 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55fb3c150d70 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55fb3c150690 <col:72> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55fb3c150d50 <col:89, col:348> 'int'
|   |           `-ConditionalOperator 0x55fb3c150d20 <col:90, col:347> 'int'
|   |             |-BinaryOperator 0x55fb3c150750 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55fb3c150708 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55fb3c1506f0 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55fb3c1506b0 <col:90> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55fb3c150738 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55fb3c150720 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55fb3c1506d0 <col:108> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55fb3c150d08 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55fb3c1507a0 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55fb3c150770 <col:132> 'int' 0
|   |             `-ParenExpr 0x55fb3c150ce8 <col:136, col:347> 'int'
|   |               `-ConditionalOperator 0x55fb3c150cb8 <col:137, col:346> 'int'
|   |                 |-BinaryOperator 0x55fb3c150948 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55fb3c1508d8 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55fb3c150868 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55fb3c150850 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55fb3c150838 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55fb3c1507c8 <col:137> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55fb3c150820 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55fb3c150808 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55fb3c1507e8 <col:156> '_Bool' lvalue Var 0x55fb3c14c758 'x$r_buff1_thd2' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55fb3c1508c0 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55fb3c1508a8 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55fb3c150888 <col:174> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55fb3c150930 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55fb3c150918 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55fb3c1508f8 <col:193> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |                 |-BinaryOperator 0x55fb3c150a08 <col:210, col:228> 'int' '||'
|   |                 | |-ImplicitCastExpr 0x55fb3c1509f0 <col:210> 'int' <IntegralCast>
|   |                 | | `-ImplicitCastExpr 0x55fb3c1509d8 <col:210> '_Bool' <LValueToRValue>
|   |                 | |   `-DeclRefExpr 0x55fb3c150968 <col:210> '_Bool' lvalue Var 0x55fb3c14cc50 'weak$$choice0' '_Bool'
|   |                 | `-UnaryOperator 0x55fb3c1509c0 <col:227, col:228> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55fb3c1509a8 <col:228> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55fb3c150988 <col:228> '_Bool' lvalue Var 0x55fb3c14ccc8 'weak$$choice1' '_Bool'
|   |                 `-ParenExpr 0x55fb3c150c98 <col:244, col:346> 'int'
|   |                   `-ConditionalOperator 0x55fb3c150c68 <col:245, col:333> 'int'
|   |                     |-BinaryOperator 0x55fb3c150ba8 <col:245, col:300> 'int' '&&'
|   |                     | |-BinaryOperator 0x55fb3c150b38 <col:245, col:281> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55fb3c150ac8 <col:245, col:263> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55fb3c150a80 <col:245> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55fb3c150a68 <col:245> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55fb3c150a28 <col:245> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55fb3c150ab0 <col:263> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55fb3c150a98 <col:263> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55fb3c150a48 <col:263> '_Bool' lvalue Var 0x55fb3c14c758 'x$r_buff1_thd2' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55fb3c150b20 <col:281> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55fb3c150b08 <col:281> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55fb3c150ae8 <col:281> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55fb3c150b90 <col:299, col:300> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55fb3c150b78 <col:300> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55fb3c150b58 <col:300> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |                     |-ImplicitCastExpr 0x55fb3c150c20 <col:317> 'int' <IntegralCast>
|   |                     | `-ImplicitCastExpr 0x55fb3c150c08 <col:317> '_Bool' <LValueToRValue>
|   |                     |   `-DeclRefExpr 0x55fb3c150bc8 <col:317> '_Bool' lvalue Var 0x55fb3c14cc50 'weak$$choice0' '_Bool'
|   |                     `-ImplicitCastExpr 0x55fb3c150c50 <col:333> 'int' <IntegralCast>
|   |                       `-ImplicitCastExpr 0x55fb3c150c38 <col:333> '_Bool' <LValueToRValue>
|   |                         `-DeclRefExpr 0x55fb3c150be8 <col:333> '_Bool' lvalue Var 0x55fb3c14cc50 'weak$$choice0' '_Bool'
|   |-BinaryOperator 0x55fb3c151758 <line:761:3, col:321> '_Bool' '='
|   | |-DeclRefExpr 0x55fb3c150eb8 <col:3> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fb3c151740 <col:20, col:321> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fb3c151710 <col:20, col:321> 'int'
|   |     |-ImplicitCastExpr 0x55fb3c1516c8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fb3c1516b0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fb3c150ed8 <col:20> '_Bool' lvalue Var 0x55fb3c14cd40 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fb3c1516f8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fb3c1516e0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fb3c150ef8 <col:36> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55fb3c151690 <col:53, col:321> 'int'
|   |       `-ConditionalOperator 0x55fb3c151660 <col:54, col:320> 'int'
|   |         |-UnaryOperator 0x55fb3c150f50 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55fb3c150f38 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55fb3c150f18 <col:55> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55fb3c151648 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55fb3c151630 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55fb3c150f68 <col:72> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55fb3c151610 <col:89, col:320> 'int'
|   |           `-ConditionalOperator 0x55fb3c1515e0 <col:90, col:319> 'int'
|   |             |-BinaryOperator 0x55fb3c151040 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55fb3c150ff8 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55fb3c150fe0 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55fb3c150f88 <col:90> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55fb3c151028 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55fb3c151010 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55fb3c150fc0 <col:108> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55fb3c1515c8 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55fb3c151090 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55fb3c151060 <col:132> 'int' 0
|   |             `-ParenExpr 0x55fb3c1515a8 <col:136, col:319> 'int'
|   |               `-ConditionalOperator 0x55fb3c151578 <col:137, col:318> 'int'
|   |                 |-BinaryOperator 0x55fb3c151238 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55fb3c1511c8 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55fb3c151158 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55fb3c151140 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55fb3c151128 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55fb3c1510b8 <col:137> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55fb3c151110 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55fb3c1510f8 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55fb3c1510d8 <col:156> '_Bool' lvalue Var 0x55fb3c14c758 'x$r_buff1_thd2' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55fb3c1511b0 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55fb3c151198 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55fb3c151178 <col:174> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55fb3c151220 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55fb3c151208 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55fb3c1511e8 <col:193> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |                 |-ImplicitCastExpr 0x55fb3c151560 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x55fb3c151548 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x55fb3c151258 <col:210> '_Bool' lvalue Var 0x55fb3c14cc50 'weak$$choice0' '_Bool'
|   |                 `-ParenExpr 0x55fb3c151528 <col:226, col:318> 'int'
|   |                   `-ConditionalOperator 0x55fb3c1514f8 <col:227, col:317> 'int'
|   |                     |-BinaryOperator 0x55fb3c1513f8 <col:227, col:282> 'int' '&&'
|   |                     | |-BinaryOperator 0x55fb3c151388 <col:227, col:263> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55fb3c151318 <col:227, col:245> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55fb3c1512d0 <col:227> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55fb3c1512b8 <col:227> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55fb3c151278 <col:227> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55fb3c151300 <col:245> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55fb3c1512e8 <col:245> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55fb3c151298 <col:245> '_Bool' lvalue Var 0x55fb3c14c758 'x$r_buff1_thd2' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55fb3c151370 <col:263> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55fb3c151358 <col:263> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55fb3c151338 <col:263> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55fb3c1513e0 <col:281, col:282> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55fb3c1513c8 <col:282> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55fb3c1513a8 <col:282> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |                     |-ImplicitCastExpr 0x55fb3c1514c8 <col:299, col:306> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55fb3c151448 <col:299, col:306> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55fb3c151418 <col:306> 'int' 0
|   |                     `-ImplicitCastExpr 0x55fb3c1514e0 <col:310, col:317> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55fb3c1514a0 <col:310, col:317> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55fb3c151470 <col:317> 'int' 0
|   |-BinaryOperator 0x55fb3c152018 <line:762:3, col:322> '_Bool' '='
|   | |-DeclRefExpr 0x55fb3c151778 <col:3> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55fb3c152000 <col:20, col:322> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fb3c151fd0 <col:20, col:322> 'int'
|   |     |-ImplicitCastExpr 0x55fb3c151f70 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fb3c151f58 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fb3c151798 <col:20> '_Bool' lvalue Var 0x55fb3c14cd40 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fb3c151fa0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fb3c151f88 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fb3c1517b8 <col:36> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55fb3c151f38 <col:53, col:322> 'int'
|   |       `-ConditionalOperator 0x55fb3c151f08 <col:54, col:321> 'int'
|   |         |-UnaryOperator 0x55fb3c151810 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55fb3c1517f8 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55fb3c1517d8 <col:55> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55fb3c151ef0 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55fb3c151ed8 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55fb3c151828 <col:72> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55fb3c151eb8 <col:89, col:321> 'int'
|   |           `-ConditionalOperator 0x55fb3c151e88 <col:90, col:320> 'int'
|   |             |-BinaryOperator 0x55fb3c1518e8 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55fb3c1518a0 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55fb3c151888 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55fb3c151848 <col:90> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55fb3c1518d0 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55fb3c1518b8 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55fb3c151868 <col:108> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55fb3c151e70 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55fb3c151938 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55fb3c151908 <col:132> 'int' 0
|   |             `-ParenExpr 0x55fb3c151e50 <col:136, col:320> 'int'
|   |               `-ConditionalOperator 0x55fb3c151e20 <col:137, col:319> 'int'
|   |                 |-BinaryOperator 0x55fb3c151ae0 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55fb3c151a70 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55fb3c151a00 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55fb3c1519e8 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55fb3c1519d0 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55fb3c151960 <col:137> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55fb3c1519b8 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55fb3c1519a0 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55fb3c151980 <col:156> '_Bool' lvalue Var 0x55fb3c14c758 'x$r_buff1_thd2' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55fb3c151a58 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55fb3c151a40 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55fb3c151a20 <col:174> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55fb3c151ac8 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55fb3c151ab0 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55fb3c151a90 <col:193> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |                 |-ImplicitCastExpr 0x55fb3c151e08 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x55fb3c151df0 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x55fb3c151b00 <col:210> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |                 `-ParenExpr 0x55fb3c151dd0 <col:227, col:319> 'int'
|   |                   `-ConditionalOperator 0x55fb3c151da0 <col:228, col:318> 'int'
|   |                     |-BinaryOperator 0x55fb3c151ca0 <col:228, col:283> 'int' '&&'
|   |                     | |-BinaryOperator 0x55fb3c151c30 <col:228, col:264> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55fb3c151bc0 <col:228, col:246> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55fb3c151b78 <col:228> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55fb3c151b60 <col:228> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55fb3c151b20 <col:228> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55fb3c151ba8 <col:246> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55fb3c151b90 <col:246> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55fb3c151b40 <col:246> '_Bool' lvalue Var 0x55fb3c14c758 'x$r_buff1_thd2' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55fb3c151c18 <col:264> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55fb3c151c00 <col:264> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55fb3c151be0 <col:264> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55fb3c151c88 <col:282, col:283> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55fb3c151c70 <col:283> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55fb3c151c50 <col:283> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |                     |-ImplicitCastExpr 0x55fb3c151d70 <col:300, col:307> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55fb3c151cf0 <col:300, col:307> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55fb3c151cc0 <col:307> 'int' 0
|   |                     `-ImplicitCastExpr 0x55fb3c151d88 <col:311, col:318> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55fb3c151d48 <col:311, col:318> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55fb3c151d18 <col:318> 'int' 0
|   |-BinaryOperator 0x55fb3c1529d0 <line:763:3, col:351> '_Bool' '='
|   | |-DeclRefExpr 0x55fb3c152038 <col:3> '_Bool' lvalue Var 0x55fb3c14c758 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55fb3c1529b8 <col:20, col:351> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fb3c152988 <col:20, col:351> 'int'
|   |     |-ImplicitCastExpr 0x55fb3c152940 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fb3c152928 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fb3c152058 <col:20> '_Bool' lvalue Var 0x55fb3c14cd40 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fb3c152970 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fb3c152958 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fb3c152078 <col:36> '_Bool' lvalue Var 0x55fb3c14c758 'x$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x55fb3c152908 <col:53, col:351> 'int'
|   |       `-ConditionalOperator 0x55fb3c1528d8 <col:54, col:350> 'int'
|   |         |-UnaryOperator 0x55fb3c1520d0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55fb3c1520b8 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55fb3c152098 <col:55> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55fb3c1528c0 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55fb3c1528a8 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55fb3c1520e8 <col:72> '_Bool' lvalue Var 0x55fb3c14c758 'x$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x55fb3c152888 <col:89, col:350> 'int'
|   |           `-ConditionalOperator 0x55fb3c152858 <col:90, col:349> 'int'
|   |             |-BinaryOperator 0x55fb3c1521a8 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55fb3c152160 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55fb3c152148 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55fb3c152108 <col:90> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55fb3c152190 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55fb3c152178 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55fb3c152128 <col:108> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55fb3c152840 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55fb3c1521f8 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55fb3c1521c8 <col:132> 'int' 0
|   |             `-ParenExpr 0x55fb3c152820 <col:136, col:349> 'int'
|   |               `-ConditionalOperator 0x55fb3c1527f0 <col:137, col:348> 'int'
|   |                 |-BinaryOperator 0x55fb3c1523a0 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55fb3c152330 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55fb3c1522c0 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55fb3c1522a8 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55fb3c152290 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55fb3c152220 <col:137> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55fb3c152278 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55fb3c152260 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55fb3c152240 <col:156> '_Bool' lvalue Var 0x55fb3c14c758 'x$r_buff1_thd2' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55fb3c152318 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55fb3c152300 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55fb3c1522e0 <col:174> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55fb3c152388 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55fb3c152370 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55fb3c152350 <col:193> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |                 |-ParenExpr 0x55fb3c152500 <col:210, col:252> 'int'
|   |                 | `-ConditionalOperator 0x55fb3c1524d0 <col:211, col:251> 'int'
|   |                 |   |-ImplicitCastExpr 0x55fb3c152470 <col:211> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x55fb3c152458 <col:211> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x55fb3c1523c0 <col:211> '_Bool' lvalue Var 0x55fb3c14cc50 'weak$$choice0' '_Bool'
|   |                 |   |-ImplicitCastExpr 0x55fb3c1524a0 <col:227> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x55fb3c152488 <col:227> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x55fb3c1523e0 <col:227> '_Bool' lvalue Var 0x55fb3c14c758 'x$r_buff1_thd2' '_Bool'
|   |                 |   `-ImplicitCastExpr 0x55fb3c1524b8 <col:244, col:251> 'int' <IntegralCast>
|   |                 |     `-CStyleCastExpr 0x55fb3c152430 <col:244, col:251> '_Bool' <IntegralToBoolean>
|   |                 |       `-IntegerLiteral 0x55fb3c152400 <col:251> 'int' 0
|   |                 `-ParenExpr 0x55fb3c1527d0 <col:256, col:348> 'int'
|   |                   `-ConditionalOperator 0x55fb3c1527a0 <col:257, col:347> 'int'
|   |                     |-BinaryOperator 0x55fb3c1526a0 <col:257, col:312> 'int' '&&'
|   |                     | |-BinaryOperator 0x55fb3c152630 <col:257, col:293> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55fb3c1525c0 <col:257, col:275> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55fb3c152578 <col:257> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55fb3c152560 <col:257> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55fb3c152520 <col:257> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55fb3c1525a8 <col:275> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55fb3c152590 <col:275> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55fb3c152540 <col:275> '_Bool' lvalue Var 0x55fb3c14c758 'x$r_buff1_thd2' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55fb3c152618 <col:293> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55fb3c152600 <col:293> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55fb3c1525e0 <col:293> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55fb3c152688 <col:311, col:312> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55fb3c152670 <col:312> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55fb3c152650 <col:312> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |                     |-ImplicitCastExpr 0x55fb3c152770 <col:329, col:336> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55fb3c1526f0 <col:329, col:336> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55fb3c1526c0 <col:336> 'int' 0
|   |                     `-ImplicitCastExpr 0x55fb3c152788 <col:340, col:347> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55fb3c152748 <col:340, col:347> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55fb3c152718 <col:347> 'int' 0
|   |-BinaryOperator 0x55fb3c152a68 <line:764:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55fb3c1529f0 <col:3> '_Bool' lvalue Var 0x55fb3c14bd20 '__unbuffered_p1_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55fb3c152a40 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55fb3c152a10 <col:45> 'int' 1
|   |-BinaryOperator 0x55fb3c152ae0 <line:765:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x55fb3c152a88 <col:3> 'int *' lvalue Var 0x55fb3c14bda0 '__unbuffered_p1_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x55fb3c152ac8 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x55fb3c152aa8 <col:43> 'int' lvalue Var 0x55fb3c14c2f8 'x' 'int'
|   |-BinaryOperator 0x55fb3c152b58 <line:766:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55fb3c152b00 <col:3> 'int' lvalue Var 0x55fb3c14b7d0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55fb3c152b40 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fb3c152b20 <col:25> 'int' lvalue Var 0x55fb3c14c2f8 'x' 'int'
|   |-BinaryOperator 0x55fb3c152c88 <line:767:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55fb3c152b78 <col:3> 'int' lvalue Var 0x55fb3c14c2f8 'x' 'int'
|   | `-ConditionalOperator 0x55fb3c152c58 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55fb3c152c10 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55fb3c152bf8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55fb3c152b98 <col:7> '_Bool' lvalue Var 0x55fb3c14c390 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55fb3c152c28 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fb3c152bb8 <col:25> 'int' lvalue Var 0x55fb3c14c410 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55fb3c152c40 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55fb3c152bd8 <col:37> 'int' lvalue Var 0x55fb3c14c2f8 'x' 'int'
|   |-BinaryOperator 0x55fb3c152d20 <line:768:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55fb3c152ca8 <col:3> '_Bool' lvalue Var 0x55fb3c14c390 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55fb3c152cf8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55fb3c152cc8 <col:28> 'int' 0
|   |-CallExpr 0x55fb3c152d78 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fb3c152d60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fb3c152d40 <col:3> 'void ()' Function 0x55fb3c0f2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fb3c152dd0 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fb3c152db8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fb3c152d98 <col:3> 'void ()' Function 0x55fb3c0f2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fb3c152e30 <line:771:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55fb3c152df0 <col:3> 'int' lvalue Var 0x55fb3c14cbb8 'y' 'int'
|   | `-IntegerLiteral 0x55fb3c152e10 <col:7> 'int' 1
|   |-CallExpr 0x55fb3c152e88 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fb3c152e70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fb3c152e50 <col:3> 'void ()' Function 0x55fb3c0f2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fb3c152ee0 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fb3c152ec8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fb3c152ea8 <col:3> 'void ()' Function 0x55fb3c0f2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fb3c1531e8 <line:774:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55fb3c152f00 <col:3> 'int' lvalue Var 0x55fb3c14c2f8 'x' 'int'
|   | `-ConditionalOperator 0x55fb3c1531b8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55fb3c152fe0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55fb3c152f78 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55fb3c152f60 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55fb3c152f20 <col:7> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55fb3c152fa8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55fb3c152f90 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55fb3c152f40 <col:25> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55fb3c1531a0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fb3c153000 <col:42> 'int' lvalue Var 0x55fb3c14c948 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55fb3c153180 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55fb3c153150 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55fb3c1530c0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55fb3c153078 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55fb3c153060 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55fb3c153020 <col:55> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55fb3c1530a8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55fb3c153090 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55fb3c153040 <col:73> '_Bool' lvalue Var 0x55fb3c14c758 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55fb3c153120 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fb3c1530e0 <col:90> 'int' lvalue Var 0x55fb3c14ca40 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55fb3c153138 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fb3c153100 <col:102> 'int' lvalue Var 0x55fb3c14c2f8 'x' 'int'
|   |-BinaryOperator 0x55fb3c1533f0 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55fb3c153208 <col:3> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fb3c1533d8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fb3c1533a8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55fb3c1532c8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55fb3c153280 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55fb3c153268 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55fb3c153228 <col:20> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55fb3c1532b0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55fb3c153298 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55fb3c153248 <col:38> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fb3c153360 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fb3c153318 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fb3c1532e8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55fb3c153390 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fb3c153378 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fb3c153340 <col:66> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55fb3c1536d8 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55fb3c153410 <col:3> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fb3c1536c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fb3c153690 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55fb3c1535b0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55fb3c1534d0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55fb3c153488 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55fb3c153470 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55fb3c153430 <col:20> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55fb3c1534b8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55fb3c1534a0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55fb3c153450 <col:38> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55fb3c153590 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55fb3c153548 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55fb3c153530 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55fb3c1534f0 <col:56> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55fb3c153578 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55fb3c153560 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55fb3c153510 <col:74> '_Bool' lvalue Var 0x55fb3c14c758 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fb3c153648 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fb3c153600 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fb3c1535d0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55fb3c153678 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fb3c153660 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fb3c153628 <col:102> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55fb3c1538e0 <line:777:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55fb3c1536f8 <col:3> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55fb3c1538c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fb3c153898 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55fb3c1537b8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55fb3c153770 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55fb3c153758 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55fb3c153718 <col:20> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55fb3c1537a0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55fb3c153788 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55fb3c153738 <col:38> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fb3c153850 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fb3c153808 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fb3c1537d8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55fb3c153880 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fb3c153868 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fb3c153830 <col:66> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55fb3c153bc8 <line:778:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55fb3c153900 <col:3> '_Bool' lvalue Var 0x55fb3c14c758 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55fb3c153bb0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fb3c153b80 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55fb3c153aa0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55fb3c1539c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55fb3c153978 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55fb3c153960 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55fb3c153920 <col:20> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55fb3c1539a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55fb3c153990 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55fb3c153940 <col:38> '_Bool' lvalue Var 0x55fb3c14c578 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55fb3c153a80 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55fb3c153a38 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55fb3c153a20 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55fb3c1539e0 <col:56> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55fb3c153a68 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55fb3c153a50 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55fb3c153a00 <col:74> '_Bool' lvalue Var 0x55fb3c14c758 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fb3c153b38 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fb3c153af0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fb3c153ac0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55fb3c153b68 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fb3c153b50 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fb3c153b18 <col:102> '_Bool' lvalue Var 0x55fb3c14c758 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55fb3c153c20 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fb3c153c08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fb3c153be8 <col:3> 'void ()' Function 0x55fb3c0f2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fb3c153c78 <line:780:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fb3c153c60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fb3c153c40 <col:3> 'void ()' Function 0x55fb3c0f2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fb3c153d30 <line:781:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55fb3c153c98 <col:3> 'int' lvalue Var 0x55fb3c14b590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55fb3c153d10 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55fb3c153cf8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fb3c153cb8 <col:22> 'int' lvalue Var 0x55fb3c14b590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55fb3c153cd8 <col:41> 'int' 1
|   |-CallExpr 0x55fb3c153d88 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fb3c153d70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fb3c153d50 <col:3> 'void ()' Function 0x55fb3c0f2410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55fb3c153e00 <line:783:3, col:36>
|     `-CallExpr 0x55fb3c153de0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55fb3c153dc8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55fb3c153da8 <col:10> 'void *(void)' Function 0x55fb3c0f1e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55fb3c153ff0 prev 0x55fb3c14b210 <line:785:1, line:804:1> line:785:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55fb3c153f40 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55fb3c155228 <line:786:1, line:804:1>
|   |-CallExpr 0x55fb3c1540d0 <line:787:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fb3c1540b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fb3c154098 <col:3> 'void ()' Function 0x55fb3c0f2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fb3c154148 <line:788:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55fb3c1540f0 <col:3> 'int' lvalue Var 0x55fb3c14c0e8 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55fb3c154130 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fb3c154110 <col:25> 'int' lvalue Var 0x55fb3c14cbb8 'y' 'int'
|   |-CallExpr 0x55fb3c1541a0 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fb3c154188 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fb3c154168 <col:3> 'void ()' Function 0x55fb3c0f2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fb3c1541f8 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fb3c1541e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fb3c1541c0 <col:3> 'void ()' Function 0x55fb3c0f2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fb3c154258 <line:791:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55fb3c154218 <col:3> 'int' lvalue Var 0x55fb3c14cbb8 'y' 'int'
|   | `-IntegerLiteral 0x55fb3c154238 <col:7> 'int' 2
|   |-CallExpr 0x55fb3c1542b0 <line:792:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fb3c154298 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fb3c154278 <col:3> 'void ()' Function 0x55fb3c0f2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fb3c154308 <line:793:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fb3c1542f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fb3c1542d0 <col:3> 'void ()' Function 0x55fb3c0f2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fb3c1545f0 <line:794:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55fb3c154328 <col:3> 'int' lvalue Var 0x55fb3c14c2f8 'x' 'int'
|   | `-ConditionalOperator 0x55fb3c1545c0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55fb3c1543e8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55fb3c1543a0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55fb3c154388 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55fb3c154348 <col:7> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55fb3c1543d0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55fb3c1543b8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55fb3c154368 <col:25> '_Bool' lvalue Var 0x55fb3c14c5f0 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55fb3c1545a8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fb3c154408 <col:42> 'int' lvalue Var 0x55fb3c14c948 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55fb3c154588 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55fb3c154558 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55fb3c1544c8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55fb3c154480 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55fb3c154468 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55fb3c154428 <col:55> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55fb3c1544b0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55fb3c154498 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55fb3c154448 <col:73> '_Bool' lvalue Var 0x55fb3c14c7d0 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55fb3c154528 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fb3c1544e8 <col:90> 'int' lvalue Var 0x55fb3c14ca40 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55fb3c154540 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fb3c154508 <col:102> 'int' lvalue Var 0x55fb3c14c2f8 'x' 'int'
|   |-BinaryOperator 0x55fb3c1547f8 <line:795:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55fb3c154610 <col:3> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fb3c1547e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fb3c1547b0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55fb3c1546d0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55fb3c154688 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55fb3c154670 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55fb3c154630 <col:20> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55fb3c1546b8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55fb3c1546a0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55fb3c154650 <col:38> '_Bool' lvalue Var 0x55fb3c14c5f0 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55fb3c154768 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fb3c154720 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fb3c1546f0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55fb3c154798 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fb3c154780 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fb3c154748 <col:66> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55fb3c154ae0 <line:796:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55fb3c154818 <col:3> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fb3c154ac8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fb3c154a98 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55fb3c1549b8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55fb3c1548d8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55fb3c154890 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55fb3c154878 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55fb3c154838 <col:20> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55fb3c1548c0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55fb3c1548a8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55fb3c154858 <col:38> '_Bool' lvalue Var 0x55fb3c14c5f0 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55fb3c154998 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55fb3c154950 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55fb3c154938 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55fb3c1548f8 <col:56> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55fb3c154980 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55fb3c154968 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55fb3c154918 <col:74> '_Bool' lvalue Var 0x55fb3c14c7d0 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55fb3c154a50 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fb3c154a08 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fb3c1549d8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55fb3c154a80 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fb3c154a68 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fb3c154a30 <col:102> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55fb3c154ce8 <line:797:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55fb3c154b00 <col:3> '_Bool' lvalue Var 0x55fb3c14c5f0 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55fb3c154cd0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fb3c154ca0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55fb3c154bc0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55fb3c154b78 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55fb3c154b60 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55fb3c154b20 <col:20> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55fb3c154ba8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55fb3c154b90 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55fb3c154b40 <col:38> '_Bool' lvalue Var 0x55fb3c14c5f0 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55fb3c154c58 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fb3c154c10 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fb3c154be0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55fb3c154c88 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fb3c154c70 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fb3c154c38 <col:66> '_Bool' lvalue Var 0x55fb3c14c5f0 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55fb3c154fd0 <line:798:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55fb3c154d08 <col:3> '_Bool' lvalue Var 0x55fb3c14c7d0 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55fb3c154fb8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fb3c154f88 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55fb3c154ea8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55fb3c154dc8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55fb3c154d80 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55fb3c154d68 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55fb3c154d28 <col:20> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55fb3c154db0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55fb3c154d98 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55fb3c154d48 <col:38> '_Bool' lvalue Var 0x55fb3c14c5f0 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55fb3c154e88 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55fb3c154e40 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55fb3c154e28 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55fb3c154de8 <col:56> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55fb3c154e70 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55fb3c154e58 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55fb3c154e08 <col:74> '_Bool' lvalue Var 0x55fb3c14c7d0 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55fb3c154f40 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fb3c154ef8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fb3c154ec8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55fb3c154f70 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fb3c154f58 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fb3c154f20 <col:102> '_Bool' lvalue Var 0x55fb3c14c7d0 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55fb3c155038 <line:799:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fb3c155020 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fb3c155000 <col:3> 'void ()' Function 0x55fb3c0f2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fb3c155090 <line:800:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fb3c155078 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fb3c155058 <col:3> 'void ()' Function 0x55fb3c0f2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fb3c155148 <line:801:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55fb3c1550b0 <col:3> 'int' lvalue Var 0x55fb3c14b590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55fb3c155128 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55fb3c155110 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fb3c1550d0 <col:22> 'int' lvalue Var 0x55fb3c14b590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55fb3c1550f0 <col:41> 'int' 1
|   |-CallExpr 0x55fb3c1551a0 <line:802:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fb3c155188 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fb3c155168 <col:3> 'void ()' Function 0x55fb3c0f2410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55fb3c155218 <line:803:3, col:36>
|     `-CallExpr 0x55fb3c1551f8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55fb3c1551e0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55fb3c1551c0 <col:10> 'void *(void)' Function 0x55fb3c0f1e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55fb3c1552e0 prev 0x55fb3c14b2d8 <line:805:1, line:807:1> line:805:6 fence 'void ()'
| `-CompoundStmt 0x55fb3c155380 <line:806:1, line:807:1>
|-FunctionDecl 0x55fb3c1553b0 prev 0x55fb3c14b398 <line:808:1, line:810:1> line:808:6 isync 'void ()'
| `-CompoundStmt 0x55fb3c155450 <line:809:1, line:810:1>
|-FunctionDecl 0x55fb3c155480 prev 0x55fb3c14b458 <line:811:1, line:813:1> line:811:6 lwfence 'void ()'
| `-CompoundStmt 0x55fb3c155520 <line:812:1, line:813:1>
`-FunctionDecl 0x55fb3c155588 <line:814:1, line:840:1> line:814:5 main 'int ()'
  `-CompoundStmt 0x55fb3c157560 <line:815:1, line:840:1>
    |-DeclStmt 0x55fb3c1556a0 <line:816:3, col:18>
    | `-VarDecl 0x55fb3c155638 <col:3, col:13> col:13 used t1782 'pthread_t':'unsigned long'
    |-CallExpr 0x55fb3c1558a8 <line:817:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55fb3c155890 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fb3c1556b8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55fb3c1328f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55fb3c1556f8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55fb3c1556d8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55fb3c155638 't1782' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55fb3c1558e8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55fb3c155770 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55fb3c155748 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55fb3c155710 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55fb3c155900 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fb3c155790 <col:39> 'void *(void *)' Function 0x55fb3c14ce58 'P0' 'void *(void *)'
    | `-ParenExpr 0x55fb3c155810 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55fb3c1557e8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55fb3c1557b0 <col:52> 'int' 0
    |-DeclStmt 0x55fb3c155990 <line:818:3, col:18>
    | `-VarDecl 0x55fb3c155928 <col:3, col:13> col:13 used t1783 'pthread_t':'unsigned long'
    |-CallExpr 0x55fb3c155b38 <line:819:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55fb3c155b20 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fb3c1559a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55fb3c1328f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55fb3c1559e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55fb3c1559c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55fb3c155928 't1783' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55fb3c155b78 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55fb3c155a60 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55fb3c155a38 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55fb3c155a00 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55fb3c155b90 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fb3c155a80 <col:39> 'void *(void *)' Function 0x55fb3c14e828 'P1' 'void *(void *)'
    | `-ParenExpr 0x55fb3c155b00 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55fb3c155ad8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55fb3c155aa0 <col:52> 'int' 0
    |-DeclStmt 0x55fb3c155c20 <line:820:3, col:18>
    | `-VarDecl 0x55fb3c155bb8 <col:3, col:13> col:13 used t1784 'pthread_t':'unsigned long'
    |-CallExpr 0x55fb3c155dc8 <line:821:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55fb3c155db0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fb3c155c38 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55fb3c1328f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55fb3c155c78 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55fb3c155c58 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55fb3c155bb8 't1784' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55fb3c155e08 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55fb3c155cf0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55fb3c155cc8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55fb3c155c90 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55fb3c155e20 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fb3c155d10 <col:39> 'void *(void *)' Function 0x55fb3c153ff0 'P2' 'void *(void *)'
    | `-ParenExpr 0x55fb3c155d90 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55fb3c155d68 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55fb3c155d30 <col:52> 'int' 0
    |-CallExpr 0x55fb3c155e70 <line:822:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55fb3c155e58 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55fb3c155e38 <col:3> 'void ()' Function 0x55fb3c0f2350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55fb3c155f40 <line:823:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55fb3c155e90 <col:3> '_Bool' lvalue Var 0x55fb3c14c180 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55fb3c155f28 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55fb3c155f08 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55fb3c155ef0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55fb3c155eb0 <col:21> 'int' lvalue Var 0x55fb3c14b590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55fb3c155ed0 <col:41> 'int' 3
    |-CallExpr 0x55fb3c155f98 <line:824:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55fb3c155f80 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55fb3c155f60 <col:3> 'void ()' Function 0x55fb3c0f2410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55fb3c156028 <line:825:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55fb3c156010 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fb3c155fb8 <col:3> 'void (int)' Function 0x55fb3c0f1ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55fb3c156068 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55fb3c156050 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55fb3c155fd8 <col:21> '_Bool' lvalue Var 0x55fb3c14c180 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55fb3c1560b8 <line:826:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55fb3c1560a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55fb3c156080 <col:3> 'void ()' Function 0x55fb3c0f2350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55fb3c1563a0 <line:827:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55fb3c1560d8 <col:3> 'int' lvalue Var 0x55fb3c14c2f8 'x' 'int'
    | `-ConditionalOperator 0x55fb3c156370 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55fb3c156198 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55fb3c156150 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55fb3c156138 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55fb3c1560f8 <col:7> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55fb3c156180 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55fb3c156168 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55fb3c156118 <col:25> '_Bool' lvalue Var 0x55fb3c14c488 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55fb3c156358 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55fb3c1561b8 <col:42> 'int' lvalue Var 0x55fb3c14c948 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55fb3c156338 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55fb3c156308 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55fb3c156278 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55fb3c156230 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55fb3c156218 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55fb3c1561d8 <col:55> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55fb3c156260 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55fb3c156248 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55fb3c1561f8 <col:73> '_Bool' lvalue Var 0x55fb3c14c668 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55fb3c1562d8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55fb3c156298 <col:90> 'int' lvalue Var 0x55fb3c14ca40 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55fb3c1562f0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55fb3c1562b8 <col:102> 'int' lvalue Var 0x55fb3c14c2f8 'x' 'int'
    |-BinaryOperator 0x55fb3c1565a8 <line:828:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55fb3c1563c0 <col:3> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55fb3c156590 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55fb3c156560 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55fb3c156480 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55fb3c156438 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55fb3c156420 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55fb3c1563e0 <col:20> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55fb3c156468 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55fb3c156450 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55fb3c156400 <col:38> '_Bool' lvalue Var 0x55fb3c14c488 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55fb3c156518 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55fb3c1564d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55fb3c1564a0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55fb3c156548 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55fb3c156530 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55fb3c1564f8 <col:66> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55fb3c156890 <line:829:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55fb3c1565c8 <col:3> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55fb3c156878 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55fb3c156848 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55fb3c156768 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55fb3c156688 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55fb3c156640 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55fb3c156628 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55fb3c1565e8 <col:20> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55fb3c156670 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55fb3c156658 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55fb3c156608 <col:38> '_Bool' lvalue Var 0x55fb3c14c488 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55fb3c156748 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55fb3c156700 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55fb3c1566e8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55fb3c1566a8 <col:56> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55fb3c156730 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55fb3c156718 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55fb3c1566c8 <col:74> '_Bool' lvalue Var 0x55fb3c14c668 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55fb3c156800 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55fb3c1567b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55fb3c156788 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55fb3c156830 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55fb3c156818 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55fb3c1567e0 <col:102> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55fb3c156a98 <line:830:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55fb3c1568b0 <col:3> '_Bool' lvalue Var 0x55fb3c14c488 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55fb3c156a80 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55fb3c156a50 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55fb3c156970 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55fb3c156928 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55fb3c156910 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55fb3c1568d0 <col:20> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55fb3c156958 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55fb3c156940 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55fb3c1568f0 <col:38> '_Bool' lvalue Var 0x55fb3c14c488 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55fb3c156a08 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55fb3c1569c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55fb3c156990 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55fb3c156a38 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55fb3c156a20 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55fb3c1569e8 <col:66> '_Bool' lvalue Var 0x55fb3c14c488 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55fb3c156d80 <line:831:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55fb3c156ab8 <col:3> '_Bool' lvalue Var 0x55fb3c14c668 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55fb3c156d68 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55fb3c156d38 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55fb3c156c58 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55fb3c156b78 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55fb3c156b30 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55fb3c156b18 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55fb3c156ad8 <col:20> '_Bool' lvalue Var 0x55fb3c14c9c0 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55fb3c156b60 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55fb3c156b48 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55fb3c156af8 <col:38> '_Bool' lvalue Var 0x55fb3c14c488 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55fb3c156c38 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55fb3c156bf0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55fb3c156bd8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55fb3c156b98 <col:56> '_Bool' lvalue Var 0x55fb3c14cab8 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55fb3c156c20 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55fb3c156c08 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55fb3c156bb8 <col:74> '_Bool' lvalue Var 0x55fb3c14c668 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55fb3c156cf0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55fb3c156ca8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55fb3c156c78 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55fb3c156d20 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55fb3c156d08 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55fb3c156cd0 <col:102> '_Bool' lvalue Var 0x55fb3c14c668 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55fb3c156dd8 <line:832:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55fb3c156dc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55fb3c156da0 <col:3> 'void ()' Function 0x55fb3c0f2410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55fb3c156e30 <line:833:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55fb3c156e18 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55fb3c156df8 <col:3> 'void ()' Function 0x55fb3c0f2350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55fb3c156ee0 <line:834:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x55fb3c156e50 <col:3> '_Bool' lvalue Var 0x55fb3c14ccc8 'weak$$choice1' '_Bool'
    | `-ImplicitCastExpr 0x55fb3c156ec8 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x55fb3c156ea8 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x55fb3c156e90 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55fb3c156e70 <col:19> 'void *(void)' Function 0x55fb3c0f1e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x55fb3c157138 <line:835:3, col:140> 'int' '='
    | |-DeclRefExpr 0x55fb3c156f00 <col:3> 'int' lvalue Var 0x55fb3c14b7d0 '__unbuffered_p1_EAX' 'int'
    | `-ConditionalOperator 0x55fb3c157108 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x55fb3c1570d8 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55fb3c1570c0 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55fb3c156f20 <col:25> '_Bool' lvalue Var 0x55fb3c14bd20 '__unbuffered_p1_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x55fb3c157080 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x55fb3c157050 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x55fb3c156fe8 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x55fb3c156fd0 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55fb3c156f40 <col:61> '_Bool' lvalue Var 0x55fb3c14ccc8 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x55fb3c157020 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x55fb3c156f98 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x55fb3c156f80 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x55fb3c156f60 <col:78> 'int *' lvalue Var 0x55fb3c14bda0 '__unbuffered_p1_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x55fb3c157038 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55fb3c156fb0 <col:117> 'int' lvalue Var 0x55fb3c14b7d0 '__unbuffered_p1_EAX' 'int'
    |   `-ImplicitCastExpr 0x55fb3c1570f0 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55fb3c1570a0 <col:140> 'int' lvalue Var 0x55fb3c14b7d0 '__unbuffered_p1_EAX' 'int'
    |-BinaryOperator 0x55fb3c157408 <line:836:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x55fb3c157158 <col:3> '_Bool' lvalue Var 0x55fb3c14c1f8 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55fb3c1573f0 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55fb3c1573d8 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55fb3c1573b8 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x55fb3c157398 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x55fb3c157300 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x55fb3c157268 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x55fb3c1571d0 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55fb3c1571b8 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55fb3c157178 <col:23> 'int' lvalue Var 0x55fb3c14cbb8 'y' 'int'
    |         | | | `-IntegerLiteral 0x55fb3c157198 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x55fb3c157248 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55fb3c157230 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55fb3c1571f0 <col:33> 'int' lvalue Var 0x55fb3c14b6b0 '__unbuffered_p0_EAX' 'int'
    |         | |   `-IntegerLiteral 0x55fb3c157210 <col:56> 'int' 2
    |         | `-BinaryOperator 0x55fb3c1572e0 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55fb3c1572c8 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55fb3c157288 <col:61> 'int' lvalue Var 0x55fb3c14b7d0 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x55fb3c1572a8 <col:84> 'int' 1
    |         `-BinaryOperator 0x55fb3c157378 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x55fb3c157360 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55fb3c157320 <col:89> 'int' lvalue Var 0x55fb3c14c0e8 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x55fb3c157340 <col:112> 'int' 1
    |-CallExpr 0x55fb3c157460 <line:837:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55fb3c157448 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55fb3c157428 <col:3> 'void ()' Function 0x55fb3c0f2410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55fb3c1574d8 <line:838:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55fb3c1574c0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fb3c157480 <col:3> 'void (int)' Function 0x55fb3c0f20d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55fb3c157518 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55fb3c157500 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55fb3c1574a0 <col:21> '_Bool' lvalue Var 0x55fb3c14c1f8 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55fb3c157550 <line:839:3, col:10>
      `-IntegerLiteral 0x55fb3c157530 <col:10> 'int' 0
