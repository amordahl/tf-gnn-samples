TranslationUnitDecl 0x56415d3abf88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x56415d3ac848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x56415d3ac520 '__int128'
|-TypedefDecl 0x56415d3ac8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x56415d3ac540 'unsigned __int128'
|-TypedefDecl 0x56415d3acbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x56415d3ac990 'struct __NSConstantString_tag'
|   `-Record 0x56415d3ac910 '__NSConstantString_tag'
|-TypedefDecl 0x56415d3acc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x56415d3acc20 'char *'
|   `-BuiltinType 0x56415d3ac020 'char'
|-TypedefDecl 0x56415d3ebb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x56415d3acf00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x56415d3acd40 'struct __va_list_tag'
|     `-Record 0x56415d3accc0 '__va_list_tag'
|-FunctionDecl 0x56415d3ebca0 <pthread-wmm/mix029_power.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x56415d3ebbd0 <col:31> col:34 'int'
|-FunctionDecl 0x56415d3ebe68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x56415d3ebf90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x56415d3ec0d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x56415d3ec048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x56415d3ec308 <col:40, col:99>
|   |-IfStmt 0x56415d3ec2d8 <col:42, col:88>
|   | |-UnaryOperator 0x56415d3ec1b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x56415d3ec1a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x56415d3ec180 <col:47> 'int' lvalue ParmVar 0x56415d3ec048 'expression' 'int'
|   | `-CompoundStmt 0x56415d3ec2c0 <col:59, col:88>
|   |   `-LabelStmt 0x56415d3ec2a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x56415d3ec238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x56415d3ec220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x56415d3ec1d0 <col:68> 'void () __attribute__((noreturn))' Function 0x56415d3ebf90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x56415d3ec2f0 <col:89>
|   `-ReturnStmt 0x56415d3ec2f8 <col:91>
|-FunctionDecl 0x56415d3ec350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x56415d3ec410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x56415d3ec790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56415d3ec4c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x56415d3ec548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x56415d3ec5c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56415d3ec648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56415d3ec850 <line:10:22>
|-FunctionDecl 0x56415d4128a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56415d3ec8c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x56415d3ec940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x56415d3ec9c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56415d3eca40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56415d412960 <line:13:22>
|-FunctionDecl 0x56415d412c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56415d4129d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x56415d412a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x56415d412ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x56415d412cc8 <line:15:22>
|-TypedefDecl 0x56415d412d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x56415d3ac0e0 'unsigned char'
|-TypedefDecl 0x56415d412da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x56415d3ac100 'unsigned short'
|-TypedefDecl 0x56415d412e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x56415d3ac120 'unsigned int'
|-TypedefDecl 0x56415d412e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x56415d3ac140 'unsigned long'
|-TypedefDecl 0x56415d412ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x56415d3ac040 'signed char'
|-TypedefDecl 0x56415d412f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x56415d3ac0e0 'unsigned char'
|-TypedefDecl 0x56415d412fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x56415d3ac060 'short'
|-TypedefDecl 0x56415d413048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x56415d3ac100 'unsigned short'
|-TypedefDecl 0x56415d4130b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x56415d3ac080 'int'
|-TypedefDecl 0x56415d413128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x56415d3ac120 'unsigned int'
|-TypedefDecl 0x56415d413198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x56415d3ac0a0 'long'
|-TypedefDecl 0x56415d413208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x56415d3ac140 'unsigned long'
|-TypedefDecl 0x56415d413278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x56415d3ac0a0 'long'
|-TypedefDecl 0x56415d4132e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x56415d3ac140 'unsigned long'
|-TypedefDecl 0x56415d413358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x56415d3ac140 'unsigned long'
|-TypedefDecl 0x56415d4133c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x56415d3ac120 'unsigned int'
|-TypedefDecl 0x56415d413438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x56415d3ac120 'unsigned int'
|-TypedefDecl 0x56415d4134a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x56415d3ac140 'unsigned long'
|-TypedefDecl 0x56415d413518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x56415d3ac140 'unsigned long'
|-TypedefDecl 0x56415d413588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x56415d3ac120 'unsigned int'
|-TypedefDecl 0x56415d4135f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x56415d3ac140 'unsigned long'
|-TypedefDecl 0x56415d413668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x56415d3ac0a0 'long'
|-TypedefDecl 0x56415d4136d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x56415d3ac0a0 'long'
|-TypedefDecl 0x56415d413748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x56415d3ac080 'int'
|-RecordDecl 0x56415d4137a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x56415d413918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x56415d4139d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x56415d413970 'struct __fsid_t' sugar
|   `-RecordType 0x56415d413820 '__fsid_t'
|     `-Record 0x56415d4137a0 ''
|-TypedefDecl 0x56415d413a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x56415d3ac0a0 'long'
|-TypedefDecl 0x56415d413ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x56415d3ac140 'unsigned long'
|-TypedefDecl 0x56415d413b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x56415d3ac140 'unsigned long'
|-TypedefDecl 0x56415d413ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x56415d3ac120 'unsigned int'
|-TypedefDecl 0x56415d413c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x56415d3ac0a0 'long'
|-TypedefDecl 0x56415d413c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x56415d3ac120 'unsigned int'
|-TypedefDecl 0x56415d413cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x56415d3ac0a0 'long'
|-TypedefDecl 0x56415d413d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x56415d3ac080 'int'
|-TypedefDecl 0x56415d413dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x56415d3ac080 'int'
|-TypedefDecl 0x56415d413e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x56415d3ac080 'int'
|-TypedefDecl 0x56415d413eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x56415d3ac7a0 'void *'
|   `-BuiltinType 0x56415d3abfe0 'void'
|-TypedefDecl 0x56415d413f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x56415d3ac0a0 'long'
|-TypedefDecl 0x56415d413f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x56415d3ac0a0 'long'
|-TypedefDecl 0x56415d414008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x56415d3ac0a0 'long'
|-TypedefDecl 0x56415d414078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x56415d3ac140 'unsigned long'
|-TypedefDecl 0x56415d4140e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x56415d3ac140 'unsigned long'
|-TypedefDecl 0x56415d414158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x56415d3ac140 'unsigned long'
|-TypedefDecl 0x56415d4141c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x56415d3ac140 'unsigned long'
|-TypedefDecl 0x56415d414238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x56415d3ac0a0 'long'
|-TypedefDecl 0x56415d4142a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x56415d3ac0a0 'long'
|-TypedefDecl 0x56415d414318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x56415d3ac0a0 'long'
|-TypedefDecl 0x56415d414388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x56415d3ac140 'unsigned long'
|-TypedefDecl 0x56415d414418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x56415d4143e0 '__off64_t' sugar
|   |-Typedef 0x56415d4136d8 '__off64_t'
|   `-BuiltinType 0x56415d3ac0a0 'long'
|-TypedefDecl 0x56415d414510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x56415d4144d0 '__quad_t *'
|   `-TypedefType 0x56415d414470 '__quad_t' sugar
|     |-Typedef 0x56415d413278 '__quad_t'
|     `-BuiltinType 0x56415d3ac0a0 'long'
|-TypedefDecl 0x56415d414580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x56415d3acc20 'char *'
|   `-BuiltinType 0x56415d3ac020 'char'
|-TypedefDecl 0x56415d4145f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x56415d3ac0a0 'long'
|-TypedefDecl 0x56415d414660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x56415d3ac120 'unsigned int'
|-FunctionDecl 0x56415d4147a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x56415d4146d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x56415d414ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x56415d414ad8 <line:72:3, col:34>
|     `-CallExpr 0x56415d414a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x56415d414a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56415d414a10 <col:10> '<builtin fn type>' Function 0x56415d414880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x56415d414ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56415d414a30 <col:29> 'unsigned int' lvalue ParmVar 0x56415d4146d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x56415d414880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x56415d414920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x56415d414990 <col:10> Implicit
| `-ConstAttr 0x56415d4149e8 <col:10> Implicit
|-FunctionDecl 0x56415d414c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x56415d414b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x56415d414f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x56415d414f48 <line:77:3, col:34>
|     `-CallExpr 0x56415d414f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x56415d414ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56415d414e78 <col:10> '<builtin fn type>' Function 0x56415d414ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x56415d414f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x56415d414e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x56415d414b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x56415d414ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x56415d414d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x56415d414df8 <col:10> Implicit
| `-ConstAttr 0x56415d414e50 <col:10> Implicit
|-TypedefDecl 0x56415d414f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x56415d3ac140 'unsigned long'
|-TypedefDecl 0x56415d415018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x56415d414fe0 '__time_t' sugar
|   |-Typedef 0x56415d413c18 '__time_t'
|   `-BuiltinType 0x56415d3ac0a0 'long'
|-RecordDecl 0x56415d415070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x56415d415128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x56415d4151b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x56415d415248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x56415d415210 '__pid_t' sugar
|   |-Typedef 0x56415d413748 '__pid_t'
|   `-BuiltinType 0x56415d3ac080 'int'
|-RecordDecl 0x56415d4152a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x56415d415360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x56415d4153b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x56415d415470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x56415d4154d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x56415d3ac140 'unsigned long'
|-RecordDecl 0x56415d415530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x56415d4157c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x56415d4178b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x56415d415810 'struct cpu_set_t' sugar
|   `-RecordType 0x56415d4155b0 'cpu_set_t'
|     `-Record 0x56415d415530 ''
|-FunctionDecl 0x56415d417b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x56415d417958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56415d417a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x56415d417c38 <line:107:19>
|-FunctionDecl 0x56415d417e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x56415d417ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x56415d417eb8 <col:69>
|-FunctionDecl 0x56415d418030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x56415d417f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x56415d4180d8 <col:64>
|-FunctionDecl 0x56415d418398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x56415d418140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56415d418278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56415d418448 <line:113:22>
|-FunctionDecl 0x56415d4186c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x56415d4184b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56415d4185a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x56415d418778 <col:88>
|-FunctionDecl 0x56415d418a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56415d4187e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56415d4188c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x56415d418950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56415d418b50 <col:62>
|-FunctionDecl 0x56415d418cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x56415d418bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x56415d418d70 <col:63>
|-FunctionDecl 0x56415d418e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x56415d418f38 <col:47>
|-FunctionDecl 0x56415d419040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x56415d418fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56415d4190e8 <col:69>
|-FunctionDecl 0x56415d4191f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x56415d419158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56415d419298 <col:69>
|-FunctionDecl 0x56415d419558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56415d419300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56415d419438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x56415d419608 <col:88>
|-TypedefDecl 0x56415d419698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x56415d419660 '__clock_t' sugar
|   |-Typedef 0x56415d413a58 '__clock_t'
|   `-BuiltinType 0x56415d3ac0a0 'long'
|-TypedefDecl 0x56415d419728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x56415d4196f0 '__clockid_t' sugar
|   |-Typedef 0x56415d413e48 '__clockid_t'
|   `-BuiltinType 0x56415d3ac080 'int'
|-TypedefDecl 0x56415d4197b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x56415d419780 '__timer_t' sugar
|   |-Typedef 0x56415d413eb8 '__timer_t'
|   `-PointerType 0x56415d3ac7a0 'void *'
|     `-BuiltinType 0x56415d3abfe0 'void'
|-RecordDecl 0x56415d419810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x56415d4198e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x56415d419950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x56415d4199b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x56415d419a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x56415d419a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x56415d419af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x56415d419b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x56415d419bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x56415d419c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x56415d419c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x56415d419cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x56415d419d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x56415d419e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x56415d419e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x56415d419f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x56415d41a100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x56415d41a1a0 <col:45>
|-FunctionDecl 0x56415d41a380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x56415d41a270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x56415d41a428 <col:54>
|-FunctionDecl 0x56415d41a628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x56415d41a490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x56415d41a508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x56415d41a6d8 <line:157:22>
| `-ConstAttr 0x56415d41a730 <col:63>
|-FunctionDecl 0x56415d41b560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56415d41a828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56415d41b608 <col:56>
|-FunctionDecl 0x56415d41b9b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x56415d41b678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x56415d41b6f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56415d41b770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x56415d41b868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x56415d41ba70 <col:54>
|-RecordDecl 0x56415d41bac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x56415d41bb78 parent 0x56415d3abf88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x56415d41bdd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x56415d41be78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x56415d41bee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x56415d41bf48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x56415d41c038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x56415d41c158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x56415d41c100 'struct __locale_struct *'
|   `-ElaboratedType 0x56415d41c090 'struct __locale_struct' sugar
|     `-RecordType 0x56415d41bb50 'struct __locale_struct'
|       `-Record 0x56415d41bac8 '__locale_struct'
|-TypedefDecl 0x56415d41c208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x56415d41c1d0 '__locale_t' sugar
|   |-Typedef 0x56415d41c158 '__locale_t'
|   `-PointerType 0x56415d41c100 'struct __locale_struct *'
|     `-ElaboratedType 0x56415d41c090 'struct __locale_struct' sugar
|       `-RecordType 0x56415d41bb50 'struct __locale_struct'
|         `-Record 0x56415d41bac8 '__locale_struct'
|-FunctionDecl 0x56415d41c610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x56415d41c278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x56415d41c2f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56415d41c370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x56415d41c400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56415d41c478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x56415d41c6d8 <col:40>
|-FunctionDecl 0x56415d41c8c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56415d41c7a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x56415d41c970 <col:66>
|-FunctionDecl 0x56415d41ca80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56415d41c9d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x56415d41cb28 <col:69>
|-FunctionDecl 0x56415d41cd58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56415d41cb90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56415d41cc20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56415d41ce08 <col:52>
|-FunctionDecl 0x56415d41cfb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56415d41ce70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56415d41cf00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56415d41d060 <col:55>
|-FunctionDecl 0x56415d41d1f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x56415d41d0e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x56415d41d2a0 <col:62>
|-FunctionDecl 0x56415d41d418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x56415d41d308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x56415d41d4c0 <col:60>
|-FunctionDecl 0x56415d41d718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56415d41d578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56415d41d5f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x56415d41d7c8 <col:44>
|-FunctionDecl 0x56415d41d9d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56415d41d830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56415d41d8b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x56415d41da88 <col:49>
|-VarDecl 0x56415d41db88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x56415d41dc08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x56415d41dc88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x56415d41dd50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x56415d41de80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x56415d41df20 <col:42>
|-VarDecl 0x56415d41df90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x56415d41e010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x56415d41e198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x56415d41e088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x56415d41e240 <col:57>
|-FunctionDecl 0x56415d41e350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56415d41e2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56415d41e3f8 <col:56>
|-FunctionDecl 0x56415d41f540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56415d41e478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x56415d41f5e8 <col:59>
|-FunctionDecl 0x56415d41f6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x56415d41f658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x56415d41f798 <col:48>
| `-ConstAttr 0x56415d41f7f0 <col:89>
|-FunctionDecl 0x56415d41fa58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56415d41f8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x56415d41f938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x56415d41fcb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56415d41fb48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56415d41fbd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x56415d41fd68 <col:88>
|-FunctionDecl 0x56415d41ff00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56415d41fdd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56415d41fe60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x56415d41ffb0 <col:88>
|-FunctionDecl 0x56415d4201c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x56415d420018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56415d4200a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x56415d420278 <line:208:22>
|-FunctionDecl 0x56415d4205e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56415d4202e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56415d420360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x56415d4203f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x56415d420480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x56415d4208e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x56415d4206e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x56415d4207c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x56415d420998 <col:85>
|-FunctionDecl 0x56415d420d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x56415d420a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56415d420b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x56415d420c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x56415d420e40 <col:52>
|-FunctionDecl 0x56415d420fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x56415d420ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56415d421060 <col:61>
|-FunctionDecl 0x56415d421560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x56415d4210c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56415d421148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x56415d421278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x56415d421368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x56415d421620 <col:62>
|-FunctionDecl 0x56415d421838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x56415d421688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56415d421718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x56415d4218e8 <line:221:22>
|-FunctionDecl 0x56415d4219e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x56415d421950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56415d421a90 <col:65>
|-TypedefDecl 0x56415d421b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x56415d3ac140 'unsigned long'
|-RecordDecl 0x56415d421b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x56415d421ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56415d421d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56415d421db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x56415d421d60 'union pthread_attr_t' sugar
|   `-RecordType 0x56415d421be0 'union pthread_attr_t'
|     `-Record 0x56415d421b58 'pthread_attr_t'
|-RecordDecl 0x56415d421e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x56415d421f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x56415d422000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x56415d4220b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x56415d422050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x56415d421e90 'struct __pthread_internal_list'
|     `-Record 0x56415d421e10 '__pthread_internal_list'
|-RecordDecl 0x56415d422120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x56415d4221c8 parent 0x56415d3abf88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x56415d4222a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56415d422308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x56415d422370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x56415d4223d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x56415d422440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x56415d4224a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x56415d426580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x56415d426630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x56415d426720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x56415d426788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56415d426910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x56415d4268b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x56415d4221a0 'pthread_mutex_t'
|     `-Record 0x56415d422120 ''
|-RecordDecl 0x56415d426980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x56415d426ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56415d426b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56415d426be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x56415d426b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x56415d426a00 'pthread_mutexattr_t'
|     `-Record 0x56415d426980 ''
|-RecordDecl 0x56415d426c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x56415d426cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x56415d426dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56415d426e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x56415d426e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x56415d426ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x56415d426f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x56415d426fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x56415d427030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x56415d427098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x56415d427150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix029_power.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix029_power.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x56415d427240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x56415d4272a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x56415d4273e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x56415d427380 'union pthread_cond_t' sugar
|   `-RecordType 0x56415d426cd0 'pthread_cond_t'
|     `-Record 0x56415d426c50 ''
|-RecordDecl 0x56415d427450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x56415d427590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56415d4275f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56415d4276b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x56415d427650 'union pthread_condattr_t' sugar
|   `-RecordType 0x56415d4274d0 'pthread_condattr_t'
|     `-Record 0x56415d427450 ''
|-TypedefDecl 0x56415d427738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x56415d3ac120 'unsigned int'
|-TypedefDecl 0x56415d4277a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x56415d3ac080 'int'
|-RecordDecl 0x56415d427800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x56415d4278a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x56415d427970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56415d4279d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x56415d427a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x56415d427aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x56415d427b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x56415d427b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x56415d427be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x56415d427c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x56415d427cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x56415d427d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x56415d427d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x56415d427e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix029_power.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix029_power.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x56415d427ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56415d427f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56415d428090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x56415d428030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x56415d427880 'pthread_rwlock_t'
|     `-Record 0x56415d427800 ''
|-RecordDecl 0x56415d428100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x56415d428240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x56415d4282a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56415d428360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x56415d428300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x56415d428180 'pthread_rwlockattr_t'
|     `-Record 0x56415d428100 ''
|-TypedefDecl 0x56415d4283e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x56415d3ac084 'volatile int' volatile
|   `-BuiltinType 0x56415d3ac080 'int'
|-RecordDecl 0x56415d428440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x56415d42a5b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x56415d42a618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56415d42a6d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x56415d42a670 'union pthread_barrier_t' sugar
|   `-RecordType 0x56415d4284c0 'pthread_barrier_t'
|     `-Record 0x56415d428440 ''
|-RecordDecl 0x56415d42a740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x56415d42a840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56415d42a8a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56415d42a960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x56415d42a900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x56415d42a7c0 'pthread_barrierattr_t'
|     `-Record 0x56415d42a740 ''
|-TypedefDecl 0x56415d42aa78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x56415d42aa10 'long [8]' 8 
|   `-BuiltinType 0x56415d3ac0a0 'long'
|-EnumDecl 0x56415d42aad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x56415d42ab98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x56415d42abe8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x56415d42ac38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x56415d42ad08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x56415d42ad58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x56415d42ada8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x56415d42adf8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x56415d42ae80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x56415d42ae68 <col:26> 'int'
| |   `-DeclRefExpr 0x56415d42ae48 <col:26> 'int' EnumConstant 0x56415d42ad08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x56415d42af08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x56415d42aef0 <col:29> 'int'
| |   `-DeclRefExpr 0x56415d42aed0 <col:29> 'int' EnumConstant 0x56415d42ad58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x56415d42af90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x56415d42af78 <col:30> 'int'
| |   `-DeclRefExpr 0x56415d42af58 <col:30> 'int' EnumConstant 0x56415d42ada8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x56415d42b018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x56415d42b000 <col:27> 'int'
|     `-DeclRefExpr 0x56415d42afe0 <col:27> 'int' EnumConstant 0x56415d42ae80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x56415d42b068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x56415d42b138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x56415d42b1c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x56415d42b1a8 <col:30> 'int'
| |   `-DeclRefExpr 0x56415d42b188 <col:30> 'int' EnumConstant 0x56415d42b138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x56415d42b210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x56415d42b298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x56415d42b280 <col:29> 'int'
|     `-DeclRefExpr 0x56415d42b260 <col:29> 'int' EnumConstant 0x56415d42b210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x56415d42b2e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x56415d42b3b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x56415d42b408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x56415d42b458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x56415d42b4a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x56415d42b5c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x56415d42b610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x56415d42b660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x56415d42b6e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x56415d42b6d0 <col:31> 'int'
|     `-DeclRefExpr 0x56415d42b6b0 <col:31> 'int' EnumConstant 0x56415d42b5c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x56415d42b738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x56415d42b808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x56415d42b858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x56415d42b8a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x56415d42b978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x56415d42b9c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x56415d42ba18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x56415d42bae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x56415d42bb38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x56415d42bb88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x56415d42bdc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x56415d42be30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x56415d42be98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x56415d42bfb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x56415d42c008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x56415d42c0d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x56415d42c128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x56415d42c178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x56415d42c248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x56415d42c298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x56415d42c8f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x56415d42c390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x56415d42c4a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56415d42c6e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x56415d42c760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x56415d42c9b8 <col:47>
| |-NonNullAttr 0x56415d42ca10 <col:77, col:94> 1 3
| `-CallbackAttr 0x56415d42ca48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x56415d42cb70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x56415d42caa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x56415d42cdc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x56415d42cc28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x56415d42cca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x56415d42cf98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x56415d42ce88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x56415d42d040 <col:60>
|-FunctionDecl 0x56415d42d190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x56415d42d230 <col:54>
| `-ConstAttr 0x56415d42d288 <col:95>
|-FunctionDecl 0x56415d42d458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x56415d42d2c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56415d42d338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x56415d42d508 <line:394:19>
| `-ConstAttr 0x56415d42d560 <col:60>
|-FunctionDecl 0x56415d42df68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56415d42de30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56415d42e010 <col:71>
| `-NonNullAttr 0x56415d42e068 <col:112, col:126> 1
|-FunctionDecl 0x56415d42e170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56415d42e0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56415d42e218 <line:397:22>
| `-NonNullAttr 0x56415d42e270 <col:63, col:77> 1
|-FunctionDecl 0x56415d42e498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x56415d42e2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56415d42e338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x56415d42e548 <line:400:22>
| `-NonNullAttr 0x56415d42e5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x56415d42e7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56415d42e5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56415d42e668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x56415d42e858 <line:403:22>
| `-NonNullAttr 0x56415d42e8b0 <col:63, col:77> 1
|-FunctionDecl 0x56415d42eb08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x56415d42e8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56415d42e9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x56415d42ebb8 <line:406:22>
| `-NonNullAttr 0x56415d42ec10 <col:63, col:80> 1 2
|-FunctionDecl 0x56415d42fe48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56415d42ec58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56415d42ecd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56415d42fef8 <line:409:22>
| `-NonNullAttr 0x56415d42ff50 <col:63, col:77> 1
|-FunctionDecl 0x56415d430188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56415d42ff98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56415d430028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56415d430238 <line:412:22>
| `-NonNullAttr 0x56415d430290 <col:63, col:80> 1 2
|-FunctionDecl 0x56415d4304c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56415d4302d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x56415d430368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x56415d430578 <col:37>
| `-NonNullAttr 0x56415d4305d0 <col:78, col:95> 1 2
|-FunctionDecl 0x56415d4307b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56415d430618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56415d430698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x56415d430868 <line:418:22>
| `-NonNullAttr 0x56415d4308c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56415d430a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56415d430908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56415d430988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x56415d430af8 <line:420:22>
| `-NonNullAttr 0x56415d430b50 <col:63, col:77> 1
|-FunctionDecl 0x56415d430cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56415d430b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56415d430c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x56415d430da8 <line:423:22>
| `-NonNullAttr 0x56415d431e30 <col:63, col:80> 1 2
|-FunctionDecl 0x56415d431fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56415d431e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56415d431ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x56415d432068 <line:426:22>
| `-NonNullAttr 0x56415d4320c0 <col:63, col:77> 1
|-FunctionDecl 0x56415d432268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56415d432108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56415d432188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x56415d432318 <line:429:22>
| `-NonNullAttr 0x56415d432370 <col:63, col:80> 1 2
|-FunctionDecl 0x56415d4324f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56415d4323b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56415d432438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x56415d4325a8 <line:431:22>
| `-NonNullAttr 0x56415d432600 <col:63, col:77> 1
|-FunctionDecl 0x56415d432828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x56415d432648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56415d4326c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x56415d4328d8 <line:434:22>
| |-NonNullAttr 0x56415d432930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x56415d432968 <col:100> "" ""
|-FunctionDecl 0x56415d432b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x56415d4329b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56415d432a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x56415d432c28 <line:437:22>
| |-NonNullAttr 0x56415d432c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x56415d432cb8 <col:97> "" ""
|-FunctionDecl 0x56415d432eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56415d432d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56415d432d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56415d432f68 <line:440:22>
| `-NonNullAttr 0x56415d432fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x56415d433140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56415d433008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56415d433080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56415d4331f0 <line:443:22>
| `-NonNullAttr 0x56415d433248 <col:63, col:77> 1
|-FunctionDecl 0x56415d433538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56415d433298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56415d433318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x56415d433390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56415d4335f0 <line:447:22>
| `-NonNullAttr 0x56415d433648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x56415d4338f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x56415d4336a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56415d433720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x56415d433798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56415d4339b0 <col:43>
| `-NonNullAttr 0x56415d433a08 <col:84, col:98> 1
|-FunctionDecl 0x56415d433cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56415d433a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56415d433ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x56415d433b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x56415d433d80 <line:452:22>
| `-NonNullAttr 0x56415d433dd8 <col:63, col:77> 3
|-FunctionDecl 0x56415d4340e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56415d433e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56415d433ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x56415d433f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56415d4341a0 <line:456:22>
| `-NonNullAttr 0x56415d4341f8 <col:63, col:80> 2 3
|-FunctionDecl 0x56415d4343e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x56415d434248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56415d4342c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x56415d434498 <line:458:22>
|-FunctionDecl 0x56415d434868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x56415d434560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x56415d434700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x56415d434918 <col:52, col:69> 1 2
|-FunctionDecl 0x56415d434ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x56415d4349a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x56415d434a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x56415d434ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x56415d434b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x56415d434c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x56415d434e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x56415d434d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x56415d434fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x56415d435040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x56415d4350e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x56415d4351d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x56415d435240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x56415d435410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix029_power.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x56415d435508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x56415d4355c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x56415d435560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x56415d4350c0 '__pthread_unwind_buf_t'
| |   `-Record 0x56415d435040 ''
| `-AlignedAttr 0x56415d435618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x56415d435690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x56415d4357f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x56415d435858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x56415d4358c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x56415d435928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x56415d435b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56415d435a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56415d435c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56415d435be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56415d435e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56415d435d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x56415d435f18 <line:487:22>
|-RecordDecl 0x56415d435f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x56415d436288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x56415d4360e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x56415d436168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x56415d436338 <col:86>
| `-ReturnsTwiceAttr 0x56415d436390 <col:12> Implicit
|-FunctionDecl 0x56415d4366b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56415d436460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x56415d436570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x56415d436768 <line:493:22>
| `-NonNullAttr 0x56415d4367c0 <col:63, col:77> 1
|-FunctionDecl 0x56415d436938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56415d436808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56415d4369e0 <line:495:22>
| `-NonNullAttr 0x56415d436a38 <col:63, col:77> 1
|-FunctionDecl 0x56415d436b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56415d436a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56415d436be8 <line:497:22>
| `-NonNullAttr 0x56415d436c40 <col:52, col:66> 1
|-FunctionDecl 0x56415d436d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56415d436c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56415d436de8 <line:499:22>
| `-NonNullAttr 0x56415d436e40 <col:52, col:66> 1
|-FunctionDecl 0x56415d437088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56415d436e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56415d436f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56415d437138 <col:36>
| `-NonNullAttr 0x56415d437190 <col:66, col:83> 1 2
|-FunctionDecl 0x56415d437290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56415d4371d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56415d437338 <line:504:22>
| `-NonNullAttr 0x56415d437390 <col:52, col:66> 1
|-FunctionDecl 0x56415d437628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56415d437440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56415d4374c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56415d4376d8 <line:508:22>
| `-NonNullAttr 0x56415d437730 <col:63, col:80> 1 2
|-FunctionDecl 0x56415d4379f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x56415d437778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56415d4377f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x56415d437878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x56415d437ab0 <line:512:22>
| `-NonNullAttr 0x56415d437b08 <col:63, col:80> 1 3
|-FunctionDecl 0x56415d437c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56415d437b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56415d437cb8 <line:514:22>
| `-NonNullAttr 0x56415d437d10 <col:63, col:77> 1
|-FunctionDecl 0x56415d437f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56415d437dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56415d437fe0 <line:516:22>
| `-NonNullAttr 0x56415d438038 <col:63, col:77> 1
|-FunctionDecl 0x56415d438140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56415d438088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56415d4381e8 <line:518:22>
| `-NonNullAttr 0x56415d438240 <col:63, col:77> 1
|-FunctionDecl 0x56415d438468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56415d438288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56415d438308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x56415d438518 <line:522:22>
| `-NonNullAttr 0x56415d438570 <col:63, col:80> 1 2
|-FunctionDecl 0x56415d438778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56415d4385b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56415d438638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x56415d438828 <line:525:22>
| `-NonNullAttr 0x56415d438880 <col:63, col:77> 1
|-FunctionDecl 0x56415d438a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56415d4388c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56415d438948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x56415d438ad8 <line:528:22>
| `-NonNullAttr 0x56415d438b30 <col:63, col:80> 1 2
|-FunctionDecl 0x56415d438cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56415d438b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56415d438bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x56415d438d68 <line:530:22>
| `-NonNullAttr 0x56415d438dc0 <col:63, col:77> 1
|-FunctionDecl 0x56415d439f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56415d438e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56415d439eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x56415d43a040 <line:534:22>
| `-NonNullAttr 0x56415d43a098 <col:63, col:80> 1 2
|-FunctionDecl 0x56415d43a228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56415d43a0e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56415d43a168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x56415d43a2d8 <line:537:22>
| `-NonNullAttr 0x56415d43a330 <col:63, col:77> 1
|-FunctionDecl 0x56415d43a4d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56415d43a378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56415d43a3f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56415d43a588 <line:541:22>
| `-NonNullAttr 0x56415d43a5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x56415d43a768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56415d43a628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56415d43a6a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x56415d43a818 <line:544:22>
| `-NonNullAttr 0x56415d43a870 <col:63, col:77> 1
|-FunctionDecl 0x56415d43aa58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x56415d43a8b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x56415d43a938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x56415d43ab08 <line:547:22>
| `-NonNullAttr 0x56415d43ab60 <col:63, col:80> 1 2
|-FunctionDecl 0x56415d43ace8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56415d43aba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56415d43ac28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x56415d43ad98 <line:550:22>
| `-NonNullAttr 0x56415d43adf0 <col:63, col:77> 1
|-FunctionDecl 0x56415d43c168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x56415d43bf10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56415d43c020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x56415d43c218 <col:29>
| `-NonNullAttr 0x56415d43c270 <col:70, col:84> 1
|-FunctionDecl 0x56415d43c3e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56415d43c2b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56415d43c490 <line:555:22>
| `-NonNullAttr 0x56415d43c4e8 <col:63, col:77> 1
|-FunctionDecl 0x56415d43c5f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56415d43c538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56415d43c698 <line:557:22>
| `-NonNullAttr 0x56415d43c6f0 <col:52, col:66> 1
|-FunctionDecl 0x56415d43c7f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56415d43c738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56415d43c898 <line:559:19>
| `-NonNullAttr 0x56415d43c8f0 <col:49, col:63> 1
|-FunctionDecl 0x56415d43cb28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56415d43c938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56415d43c9c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56415d43cbd8 <col:39>
| `-NonNullAttr 0x56415d43cc30 <col:69, col:86> 1 2
|-FunctionDecl 0x56415d43cd30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56415d43cc78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56415d43cdd8 <line:564:22>
| `-NonNullAttr 0x56415d43ce30 <col:52, col:66> 1
|-FunctionDecl 0x56415d43cf98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56415d43cee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56415d43d040 <line:566:22>
| `-NonNullAttr 0x56415d43d098 <col:52, col:66> 1
|-FunctionDecl 0x56415d43d258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56415d43d0e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56415d43d178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56415d43d308 <col:39>
| `-NonNullAttr 0x56415d43d360 <col:69, col:86> 1 2
|-FunctionDecl 0x56415d43d460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56415d43d3a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56415d43d508 <line:571:22>
| `-NonNullAttr 0x56415d43d560 <col:52, col:66> 1
|-FunctionDecl 0x56415d43d748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56415d43d610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56415d43d7f0 <line:573:22>
| `-NonNullAttr 0x56415d43d848 <col:63, col:77> 1
|-FunctionDecl 0x56415d43d950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56415d43d898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56415d43d9f8 <line:575:22>
| `-NonNullAttr 0x56415d43da50 <col:63, col:77> 1
|-FunctionDecl 0x56415d43dc78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56415d43da98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56415d43db18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x56415d43dd28 <line:579:22>
| `-NonNullAttr 0x56415d43dd80 <col:63, col:80> 1 2
|-FunctionDecl 0x56415d43dfa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56415d43ddc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56415d43de48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x56415d43e058 <line:582:22>
| `-NonNullAttr 0x56415d43e0b0 <col:63, col:77> 1
|-FunctionDecl 0x56415d43e258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56415d43e0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56415d43e178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x56415d43e308 <line:586:22>
| `-NonNullAttr 0x56415d43e360 <col:63, col:80> 1 2
|-FunctionDecl 0x56415d43e4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56415d43e3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56415d43e428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x56415d43e598 <col:36>
| `-NonNullAttr 0x56415d43e5f0 <col:77, col:91> 1
|-FunctionDecl 0x56415d43e928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x56415d43e6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56415d43e7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x56415d43e9d8 <line:591:22>
| `-NonNullAttr 0x56415d43ea30 <col:63, col:77> 1
|-FunctionDecl 0x56415d43eba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56415d43ea78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56415d43ec50 <line:593:22>
| `-NonNullAttr 0x56415d43eca8 <col:63, col:77> 1
|-FunctionDecl 0x56415d43edb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56415d43ecf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56415d43ee58 <line:595:22>
| `-NonNullAttr 0x56415d43eeb0 <col:52, col:66> 1
|-FunctionDecl 0x56415d43efc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56415d43ef10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56415d43f070 <line:597:22>
| `-NonNullAttr 0x56415d43f0c8 <col:52, col:66> 1
|-FunctionDecl 0x56415d43f2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x56415d43f118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56415d43f190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x56415d43f3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x56415d43f6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56415d43f428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56415d43f4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56415d43f530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x56415d43f790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x56415d43f9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56415d43f870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56415d43fa50 <line:606:22>
| `-NonNullAttr 0x56415d43faa8 <col:63, col:77> 1
|-FunctionDecl 0x56415d43fbb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56415d43faf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56415d43fc58 <line:608:22>
| `-NonNullAttr 0x56415d43fcb0 <col:63, col:77> 1
|-FunctionDecl 0x56415d43ff10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56415d43fcf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56415d43fd78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x56415d43ffc0 <line:612:22>
| `-NonNullAttr 0x56415d440018 <col:63, col:80> 1 2
|-FunctionDecl 0x56415d440228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x56415d440068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56415d4400e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x56415d4402d8 <col:37>
| `-NonNullAttr 0x56415d440330 <col:78, col:92> 1
|-FunctionDecl 0x56415d440548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x56415d440378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56415d440420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x56415d4405f8 <line:618:22>
| `-NonNullAttr 0x56415d440650 <col:63, col:80> 1 2
|-FunctionDecl 0x56415d440818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x56415d440698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56415d440710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x56415d4408c8 <line:621:22>
| `-NonNullAttr 0x56415d440920 <col:63, col:77> 1
|-FunctionDecl 0x56415d440bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x56415d440a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x56415d440a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x56415d440c78 <line:623:22>
| `-NonNullAttr 0x56415d440cd0 <col:63, col:77> 1
|-FunctionDecl 0x56415d440e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56415d440d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56415d440f20 <line:625:22>
| `-NonNullAttr 0x56415d440f78 <col:63, col:77> 1
|-FunctionDecl 0x56415d441080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56415d440fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56415d441128 <line:627:22>
| `-NonNullAttr 0x56415d441180 <col:52, col:66> 1
|-FunctionDecl 0x56415d441280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56415d4411c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56415d441328 <line:629:22>
| `-NonNullAttr 0x56415d441380 <col:52, col:66> 1
|-FunctionDecl 0x56415d441480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56415d4413c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56415d441528 <line:631:22>
| `-NonNullAttr 0x56415d441580 <col:52, col:66> 1
|-FunctionDecl 0x56415d441958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x56415d441660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x56415d441770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56415d4417f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x56415d441a10 <line:635:22>
| `-NonNullAttr 0x56415d441a68 <col:63, col:77> 1
|-FunctionDecl 0x56415d441be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56415d441ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56415d441c90 <line:637:22>
| `-NonNullAttr 0x56415d441ce8 <col:63, col:77> 1
|-FunctionDecl 0x56415d441df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56415d441d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56415d441e98 <line:639:22>
| `-NonNullAttr 0x56415d441ef0 <col:52, col:66> 1
|-FunctionDecl 0x56415d4420e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56415d441fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56415d442190 <line:641:22>
| `-NonNullAttr 0x56415d4421e8 <col:63, col:77> 1
|-FunctionDecl 0x56415d4422f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56415d442238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56415d442398 <line:643:22>
| `-NonNullAttr 0x56415d4423f0 <col:63, col:77> 1
|-FunctionDecl 0x56415d442618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56415d442438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56415d4424b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x56415d4426c8 <line:647:22>
| `-NonNullAttr 0x56415d442720 <col:63, col:80> 1 2
|-FunctionDecl 0x56415d442928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x56415d442768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x56415d4427e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x56415d4429d8 <line:650:22>
| `-NonNullAttr 0x56415d442a30 <col:63, col:77> 1
|-FunctionDecl 0x56415d442d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x56415d442b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x56415d442c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x56415d442e28 <line:653:22>
| `-NonNullAttr 0x56415d442e80 <col:63, col:77> 1
|-FunctionDecl 0x56415d442fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x56415d442ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56415d443090 <col:69>
|-FunctionDecl 0x56415d443208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x56415d4430f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56415d4432b0 <col:72>
|-FunctionDecl 0x56415d4434e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x56415d443318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x56415d4433c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x56415d443598 <col:44>
|-FunctionDecl 0x56415d4437b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x56415d443600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56415d443678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x56415d443868 <line:660:22>
| `-NonNullAttr 0x56415d4438c0 <col:63, col:77> 2
|-FunctionDecl 0x56415d443d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x56415d4439a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x56415d443ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x56415d443bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x56415d443dc0 <col:47>
|-FunctionDecl 0x56415d444f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x56415d443e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56415d4450b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x56415d445020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56415d445210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x56415d445178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56415d445368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x56415d4452d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56415d445430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x56415d4454f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x56415d4455b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x56415d445668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x56415d4456e8 prev 0x56415d445668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x56415d445750 <col:24> 'int' 0
|-VarDecl 0x56415d445788 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x56415d445808 prev 0x56415d445788 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x56415d445870 <col:27> 'int' 0
|-VarDecl 0x56415d4458a8 <line:676:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x56415d445928 prev 0x56415d4458a8 <line:677:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x56415d445990 <col:27> 'int' 0
|-VarDecl 0x56415d4459c8 <line:678:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x56415d445a48 prev 0x56415d4459c8 <line:679:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x56415d445ab0 <col:27> 'int' 0
|-VarDecl 0x56415d445ae8 <line:680:1, col:5> col:5 used a 'int'
|-VarDecl 0x56415d445b68 prev 0x56415d445ae8 <line:681:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x56415d445bd0 <col:9> 'int' 0
|-VarDecl 0x56415d445c00 <line:682:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x56415d445c80 <line:683:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x56415d445cf8 <line:684:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x56415d445d70 <line:685:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x56415d445de8 <line:686:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x56415d445e60 <line:687:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x56415d445ed8 <line:688:1, col:7> col:7 used a$r_buff0_thd4 '_Bool'
|-VarDecl 0x56415d445f70 <line:689:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x56415d445fe8 <line:690:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x56415d446060 <line:691:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x56415d4460d8 <line:692:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x56415d446150 <line:693:1, col:7> col:7 used a$r_buff1_thd4 '_Bool'
|-VarDecl 0x56415d4461c8 <line:694:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x56415d446248 <line:695:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x56415d4462c8 <line:696:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x56415d446340 <line:697:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x56415d4463c0 <line:698:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x56415d446438 <line:699:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x56415d4464b0 <line:700:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x56415d446528 <line:701:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x56415d4465a8 <line:702:1, col:5> col:5 used x 'int'
|-VarDecl 0x56415d446628 prev 0x56415d4465a8 <line:703:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x56415d446690 <col:9> 'int' 0
|-VarDecl 0x56415d4466c8 <line:704:1, col:5> col:5 used y 'int'
|-VarDecl 0x56415d446748 prev 0x56415d4466c8 <line:705:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x56415d4467b0 <col:9> 'int' 0
|-VarDecl 0x56415d4467e8 <line:706:1, col:5> col:5 used z 'int'
|-VarDecl 0x56415d446868 prev 0x56415d4467e8 <line:707:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x56415d4468d0 <col:9> 'int' 0
|-VarDecl 0x56415d446900 <line:708:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x56415d446978 <line:709:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x56415d446a90 prev 0x56415d444f60 <line:710:1, line:739:1> line:710:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x56415d4469f8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56415d448368 <line:711:1, line:739:1>
|   |-CallExpr 0x56415d446ba8 <line:712:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56415d446b90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d446b38 <col:3> 'void ()' Function 0x56415d3ec350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56415d446c20 <line:713:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56415d446bc8 <col:3> 'int' lvalue Var 0x56415d4463c0 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x56415d446c08 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56415d446be8 <col:15> 'int' lvalue Var 0x56415d4462c8 'a$w_buff0' 'int'
|   |-BinaryOperator 0x56415d446c80 <line:714:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56415d446c40 <col:3> 'int' lvalue Var 0x56415d4462c8 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x56415d446c60 <col:15> 'int' 1
|   |-BinaryOperator 0x56415d446cf8 <line:715:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56415d446ca0 <col:3> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56415d446ce0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56415d446cc0 <col:20> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56415d446d90 <line:716:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56415d446d18 <col:3> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x56415d446d68 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56415d446d38 <col:27> 'int' 1
|   |-CallExpr 0x56415d446f18 <line:717:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x56415d446f00 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x56415d446db0 <col:3> 'void (int)' Function 0x56415d3ec0d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x56415d446eb0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x56415d446e90 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x56415d446e70 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x56415d446e28 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x56415d446e10 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x56415d446dd0 <col:23> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x56415d446e58 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x56415d446e40 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x56415d446df0 <col:41> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56415d446fb8 <line:718:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56415d446f40 <col:3> '_Bool' lvalue Var 0x56415d445f70 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x56415d446fa0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56415d446f80 <col:20> '_Bool' lvalue Var 0x56415d445cf8 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x56415d447030 <line:719:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56415d446fd8 <col:3> '_Bool' lvalue Var 0x56415d445fe8 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56415d447018 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56415d446ff8 <col:20> '_Bool' lvalue Var 0x56415d445d70 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56415d4470a8 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56415d447050 <col:3> '_Bool' lvalue Var 0x56415d446060 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56415d447090 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56415d447070 <col:20> '_Bool' lvalue Var 0x56415d445de8 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56415d447120 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56415d4470c8 <col:3> '_Bool' lvalue Var 0x56415d4460d8 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56415d447108 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56415d4470e8 <col:20> '_Bool' lvalue Var 0x56415d445e60 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56415d447198 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56415d447140 <col:3> '_Bool' lvalue Var 0x56415d446150 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56415d447180 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56415d447160 <col:20> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x56415d447230 <line:723:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56415d4471b8 <col:3> '_Bool' lvalue Var 0x56415d445d70 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x56415d447208 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56415d4471d8 <col:27> 'int' 1
|   |-CallExpr 0x56415d447288 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56415d447270 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d447250 <col:3> 'void ()' Function 0x56415d3ec410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56415d4472e0 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56415d4472c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d4472a8 <col:3> 'void ()' Function 0x56415d3ec350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56415d447358 <line:726:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56415d447300 <col:3> 'int' lvalue Var 0x56415d445808 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x56415d447340 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56415d447320 <col:25> 'int' lvalue Var 0x56415d446628 'x' 'int'
|   |-CallExpr 0x56415d4473b0 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56415d447398 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d447378 <col:3> 'void ()' Function 0x56415d3ec410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56415d447408 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56415d4473f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d4473d0 <col:3> 'void ()' Function 0x56415d3ec350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56415d4476f0 <line:729:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56415d447428 <col:3> 'int' lvalue Var 0x56415d445b68 'a' 'int'
|   | `-ConditionalOperator 0x56415d4476c0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56415d4474e8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56415d4474a0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56415d447488 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56415d447448 <col:7> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56415d4474d0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56415d4474b8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56415d447468 <col:25> '_Bool' lvalue Var 0x56415d445d70 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x56415d4476a8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56415d447508 <col:42> 'int' lvalue Var 0x56415d4462c8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x56415d447688 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56415d447658 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56415d4475c8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56415d447580 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56415d447568 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56415d447528 <col:55> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56415d4475b0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56415d447598 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56415d447548 <col:73> '_Bool' lvalue Var 0x56415d445fe8 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x56415d447628 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56415d4475e8 <col:90> 'int' lvalue Var 0x56415d4463c0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56415d447640 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56415d447608 <col:102> 'int' lvalue Var 0x56415d445b68 'a' 'int'
|   |-BinaryOperator 0x56415d4478f8 <line:730:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56415d447710 <col:3> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56415d4478e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56415d4478b0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56415d4477d0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56415d447788 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56415d447770 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56415d447730 <col:20> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56415d4477b8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56415d4477a0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56415d447750 <col:38> '_Bool' lvalue Var 0x56415d445d70 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56415d447868 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56415d447820 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56415d4477f0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56415d447898 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56415d447880 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56415d447848 <col:66> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56415d447be0 <line:731:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56415d447918 <col:3> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56415d447bc8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56415d447b98 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56415d447ab8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56415d4479d8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56415d447990 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56415d447978 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56415d447938 <col:20> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56415d4479c0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56415d4479a8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56415d447958 <col:38> '_Bool' lvalue Var 0x56415d445d70 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x56415d447a98 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56415d447a50 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56415d447a38 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56415d4479f8 <col:56> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56415d447a80 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56415d447a68 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56415d447a18 <col:74> '_Bool' lvalue Var 0x56415d445fe8 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56415d447b50 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56415d447b08 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56415d447ad8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56415d447b80 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56415d447b68 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56415d447b30 <col:102> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56415d447de8 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56415d447c00 <col:3> '_Bool' lvalue Var 0x56415d445d70 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56415d447dd0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56415d447da0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56415d447cc0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56415d447c78 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56415d447c60 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56415d447c20 <col:20> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56415d447ca8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56415d447c90 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56415d447c40 <col:38> '_Bool' lvalue Var 0x56415d445d70 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56415d447d58 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56415d447d10 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56415d447ce0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56415d447d88 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56415d447d70 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56415d447d38 <col:66> '_Bool' lvalue Var 0x56415d445d70 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56415d4480f0 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56415d447e08 <col:3> '_Bool' lvalue Var 0x56415d445fe8 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56415d4480d8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56415d4480a8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56415d447fc8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56415d447ec8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56415d447e80 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56415d447e68 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56415d447e28 <col:20> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56415d447eb0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56415d447e98 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56415d447e48 <col:38> '_Bool' lvalue Var 0x56415d445d70 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x56415d447fa8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56415d447f40 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56415d447f28 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56415d447ee8 <col:56> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56415d447f90 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56415d447f58 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56415d447f08 <col:74> '_Bool' lvalue Var 0x56415d445fe8 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56415d448060 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56415d448018 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56415d447fe8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56415d448090 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56415d448078 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56415d448040 <col:102> '_Bool' lvalue Var 0x56415d445fe8 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x56415d448148 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56415d448130 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d448110 <col:3> 'void ()' Function 0x56415d3ec410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56415d4481a0 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56415d448188 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d448168 <col:3> 'void ()' Function 0x56415d3ec350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56415d448258 <line:736:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56415d4481c0 <col:3> 'int' lvalue Var 0x56415d4456e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56415d448238 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56415d448220 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56415d4481e0 <col:22> 'int' lvalue Var 0x56415d4456e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56415d448200 <col:41> 'int' 1
|   |-CallExpr 0x56415d4482b0 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56415d448298 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d448278 <col:3> 'void ()' Function 0x56415d3ec410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56415d448358 <line:738:3, col:36>
|     `-CallExpr 0x56415d448338 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56415d448320 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56415d4482d0 <col:10> 'void *(void)' Function 0x56415d3ebe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56415d448500 prev 0x56415d4450b8 <line:740:1, line:759:1> line:740:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x56415d448468 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56415d449720 <line:741:1, line:759:1>
|   |-CallExpr 0x56415d4485e0 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56415d4485c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d4485a8 <col:3> 'void ()' Function 0x56415d3ec350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56415d448640 <line:743:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56415d448600 <col:3> 'int' lvalue Var 0x56415d446628 'x' 'int'
|   | `-IntegerLiteral 0x56415d448620 <col:7> 'int' 1
|   |-CallExpr 0x56415d448698 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56415d448680 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d448660 <col:3> 'void ()' Function 0x56415d3ec410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56415d4486f0 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56415d4486d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d4486b8 <col:3> 'void ()' Function 0x56415d3ec350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56415d448750 <line:746:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56415d448710 <col:3> 'int' lvalue Var 0x56415d446748 'y' 'int'
|   | `-IntegerLiteral 0x56415d448730 <col:7> 'int' 1
|   |-CallExpr 0x56415d4487a8 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56415d448790 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d448770 <col:3> 'void ()' Function 0x56415d3ec410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56415d448800 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56415d4487e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d4487c8 <col:3> 'void ()' Function 0x56415d3ec350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56415d448ae8 <line:749:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56415d448820 <col:3> 'int' lvalue Var 0x56415d445b68 'a' 'int'
|   | `-ConditionalOperator 0x56415d448ab8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56415d4488e0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56415d448898 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56415d448880 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56415d448840 <col:7> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56415d4488c8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56415d4488b0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56415d448860 <col:25> '_Bool' lvalue Var 0x56415d445de8 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x56415d448aa0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56415d448900 <col:42> 'int' lvalue Var 0x56415d4462c8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x56415d448a80 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56415d448a50 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56415d4489c0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56415d448978 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56415d448960 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56415d448920 <col:55> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56415d4489a8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56415d448990 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56415d448940 <col:73> '_Bool' lvalue Var 0x56415d446060 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x56415d448a20 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56415d4489e0 <col:90> 'int' lvalue Var 0x56415d4463c0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56415d448a38 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56415d448a00 <col:102> 'int' lvalue Var 0x56415d445b68 'a' 'int'
|   |-BinaryOperator 0x56415d448cf0 <line:750:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56415d448b08 <col:3> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56415d448cd8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56415d448ca8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56415d448bc8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56415d448b80 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56415d448b68 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56415d448b28 <col:20> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56415d448bb0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56415d448b98 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56415d448b48 <col:38> '_Bool' lvalue Var 0x56415d445de8 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56415d448c60 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56415d448c18 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56415d448be8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56415d448c90 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56415d448c78 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56415d448c40 <col:66> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56415d448fe8 <line:751:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56415d448d10 <col:3> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56415d448fd0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56415d448fa0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56415d448eb0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56415d448dd0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56415d448d88 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56415d448d70 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56415d448d30 <col:20> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56415d448db8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56415d448da0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56415d448d50 <col:38> '_Bool' lvalue Var 0x56415d445de8 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56415d448e90 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56415d448e48 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56415d448e30 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56415d448df0 <col:56> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56415d448e78 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56415d448e60 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56415d448e10 <col:74> '_Bool' lvalue Var 0x56415d446060 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56415d448f48 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56415d448f00 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56415d448ed0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56415d448f78 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56415d448f60 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56415d448f28 <col:102> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56415d4491f0 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56415d449008 <col:3> '_Bool' lvalue Var 0x56415d445de8 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56415d4491d8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56415d4491a8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56415d4490c8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56415d449080 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56415d449068 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56415d449028 <col:20> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56415d4490b0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56415d449098 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56415d449048 <col:38> '_Bool' lvalue Var 0x56415d445de8 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56415d449160 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56415d449118 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56415d4490e8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56415d449190 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56415d449178 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56415d449140 <col:66> '_Bool' lvalue Var 0x56415d445de8 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56415d4494d8 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56415d449210 <col:3> '_Bool' lvalue Var 0x56415d446060 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56415d4494c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56415d449490 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56415d4493b0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56415d4492d0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56415d449288 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56415d449270 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56415d449230 <col:20> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56415d4492b8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56415d4492a0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56415d449250 <col:38> '_Bool' lvalue Var 0x56415d445de8 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56415d449390 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56415d449348 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56415d449330 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56415d4492f0 <col:56> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56415d449378 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56415d449360 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56415d449310 <col:74> '_Bool' lvalue Var 0x56415d446060 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56415d449448 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56415d449400 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56415d4493d0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56415d449478 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56415d449460 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56415d449428 <col:102> '_Bool' lvalue Var 0x56415d446060 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x56415d449530 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56415d449518 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d4494f8 <col:3> 'void ()' Function 0x56415d3ec410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56415d449588 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56415d449570 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d449550 <col:3> 'void ()' Function 0x56415d3ec350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56415d449640 <line:756:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56415d4495a8 <col:3> 'int' lvalue Var 0x56415d4456e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56415d449620 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56415d449608 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56415d4495c8 <col:22> 'int' lvalue Var 0x56415d4456e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56415d4495e8 <col:41> 'int' 1
|   |-CallExpr 0x56415d449698 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56415d449680 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d449660 <col:3> 'void ()' Function 0x56415d3ec410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56415d449710 <line:758:3, col:36>
|     `-CallExpr 0x56415d4496f0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56415d4496d8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56415d4496b8 <col:10> 'void *(void)' Function 0x56415d3ebe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56415d449868 prev 0x56415d445210 <line:760:1, line:779:1> line:760:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x56415d4497d0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56415d44aaa8 <line:761:1, line:779:1>
|   |-CallExpr 0x56415d449948 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56415d449930 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d449910 <col:3> 'void ()' Function 0x56415d3ec350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56415d4499a8 <line:763:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56415d449968 <col:3> 'int' lvalue Var 0x56415d446748 'y' 'int'
|   | `-IntegerLiteral 0x56415d449988 <col:7> 'int' 2
|   |-CallExpr 0x56415d449a00 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56415d4499e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d4499c8 <col:3> 'void ()' Function 0x56415d3ec410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56415d449a58 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56415d449a40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d449a20 <col:3> 'void ()' Function 0x56415d3ec350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56415d449ab8 <line:766:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56415d449a78 <col:3> 'int' lvalue Var 0x56415d446868 'z' 'int'
|   | `-IntegerLiteral 0x56415d449a98 <col:7> 'int' 1
|   |-CallExpr 0x56415d449b10 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56415d449af8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d449ad8 <col:3> 'void ()' Function 0x56415d3ec410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56415d449b68 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56415d449b50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d449b30 <col:3> 'void ()' Function 0x56415d3ec350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56415d449e50 <line:769:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56415d449b88 <col:3> 'int' lvalue Var 0x56415d445b68 'a' 'int'
|   | `-ConditionalOperator 0x56415d449e20 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56415d449c48 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56415d449c00 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56415d449be8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56415d449ba8 <col:7> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56415d449c30 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56415d449c18 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56415d449bc8 <col:25> '_Bool' lvalue Var 0x56415d445e60 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x56415d449e08 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56415d449c68 <col:42> 'int' lvalue Var 0x56415d4462c8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x56415d449de8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56415d449db8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56415d449d28 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56415d449ce0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56415d449cc8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56415d449c88 <col:55> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56415d449d10 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56415d449cf8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56415d449ca8 <col:73> '_Bool' lvalue Var 0x56415d4460d8 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56415d449d88 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56415d449d48 <col:90> 'int' lvalue Var 0x56415d4463c0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56415d449da0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56415d449d68 <col:102> 'int' lvalue Var 0x56415d445b68 'a' 'int'
|   |-BinaryOperator 0x56415d44a088 <line:770:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56415d449e70 <col:3> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56415d44a070 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56415d44a040 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56415d449f30 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56415d449ee8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56415d449ed0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56415d449e90 <col:20> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56415d449f18 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56415d449f00 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56415d449eb0 <col:38> '_Bool' lvalue Var 0x56415d445e60 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56415d449ff8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56415d449fb0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56415d449f50 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56415d44a028 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56415d44a010 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56415d449fd8 <col:66> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56415d44a370 <line:771:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56415d44a0a8 <col:3> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56415d44a358 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56415d44a328 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56415d44a248 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56415d44a168 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56415d44a120 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56415d44a108 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56415d44a0c8 <col:20> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56415d44a150 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56415d44a138 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56415d44a0e8 <col:38> '_Bool' lvalue Var 0x56415d445e60 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x56415d44a228 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56415d44a1e0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56415d44a1c8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56415d44a188 <col:56> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56415d44a210 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56415d44a1f8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56415d44a1a8 <col:74> '_Bool' lvalue Var 0x56415d4460d8 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56415d44a2e0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56415d44a298 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56415d44a268 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56415d44a310 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56415d44a2f8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56415d44a2c0 <col:102> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56415d44a578 <line:772:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56415d44a390 <col:3> '_Bool' lvalue Var 0x56415d445e60 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56415d44a560 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56415d44a530 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56415d44a450 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56415d44a408 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56415d44a3f0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56415d44a3b0 <col:20> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56415d44a438 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56415d44a420 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56415d44a3d0 <col:38> '_Bool' lvalue Var 0x56415d445e60 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56415d44a4e8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56415d44a4a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56415d44a470 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56415d44a518 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56415d44a500 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56415d44a4c8 <col:66> '_Bool' lvalue Var 0x56415d445e60 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56415d44a860 <line:773:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56415d44a598 <col:3> '_Bool' lvalue Var 0x56415d4460d8 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56415d44a848 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56415d44a818 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56415d44a738 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56415d44a658 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56415d44a610 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56415d44a5f8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56415d44a5b8 <col:20> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56415d44a640 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56415d44a628 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56415d44a5d8 <col:38> '_Bool' lvalue Var 0x56415d445e60 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x56415d44a718 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56415d44a6d0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56415d44a6b8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56415d44a678 <col:56> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56415d44a700 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56415d44a6e8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56415d44a698 <col:74> '_Bool' lvalue Var 0x56415d4460d8 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56415d44a7d0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56415d44a788 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56415d44a758 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56415d44a800 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56415d44a7e8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56415d44a7b0 <col:102> '_Bool' lvalue Var 0x56415d4460d8 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x56415d44a8b8 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56415d44a8a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d44a880 <col:3> 'void ()' Function 0x56415d3ec410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56415d44a910 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56415d44a8f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d44a8d8 <col:3> 'void ()' Function 0x56415d3ec350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56415d44a9c8 <line:776:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56415d44a930 <col:3> 'int' lvalue Var 0x56415d4456e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56415d44a9a8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56415d44a990 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56415d44a950 <col:22> 'int' lvalue Var 0x56415d4456e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56415d44a970 <col:41> 'int' 1
|   |-CallExpr 0x56415d44aa20 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56415d44aa08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d44a9e8 <col:3> 'void ()' Function 0x56415d3ec410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56415d44aa98 <line:778:3, col:36>
|     `-CallExpr 0x56415d44aa78 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56415d44aa60 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56415d44aa40 <col:10> 'void *(void)' Function 0x56415d3ebe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56415d44abf0 prev 0x56415d445368 <line:780:1, line:815:1> line:780:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x56415d44ab58 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56415d44e910 <line:781:1, line:815:1>
|   |-CallExpr 0x56415d44acd0 <line:782:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56415d44acb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d44ac98 <col:3> 'void ()' Function 0x56415d3ec350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56415d44ad30 <line:783:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56415d44acf0 <col:3> 'int' lvalue Var 0x56415d446868 'z' 'int'
|   | `-IntegerLiteral 0x56415d44ad10 <col:7> 'int' 2
|   |-CallExpr 0x56415d44ad88 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56415d44ad70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d44ad50 <col:3> 'void ()' Function 0x56415d3ec410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56415d44ade0 <line:785:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56415d44adc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d44ada8 <col:3> 'void ()' Function 0x56415d3ec350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56415d44ae58 <line:786:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56415d44ae00 <col:3> 'int' lvalue Var 0x56415d445928 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x56415d44ae40 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56415d44ae20 <col:25> 'int' lvalue Var 0x56415d446868 'z' 'int'
|   |-CallExpr 0x56415d44aeb0 <line:787:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56415d44ae98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d44ae78 <col:3> 'void ()' Function 0x56415d3ec410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56415d44af08 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56415d44aef0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d44aed0 <col:3> 'void ()' Function 0x56415d3ec350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56415d44afd8 <line:789:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56415d44af28 <col:3> '_Bool' lvalue Var 0x56415d446900 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x56415d44afc0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56415d44af80 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56415d44af68 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56415d44af48 <col:19> 'void *(void)' Function 0x56415d3ebe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56415d44b088 <line:790:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56415d44aff8 <col:3> '_Bool' lvalue Var 0x56415d446978 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x56415d44b070 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56415d44b050 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56415d44b038 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56415d44b018 <col:19> 'void *(void)' Function 0x56415d3ebe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56415d44b100 <line:791:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x56415d44b0a8 <col:3> '_Bool' lvalue Var 0x56415d445c00 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x56415d44b0e8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56415d44b0c8 <col:21> '_Bool' lvalue Var 0x56415d446978 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x56415d44b178 <line:792:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56415d44b120 <col:3> 'int' lvalue Var 0x56415d445c80 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x56415d44b160 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56415d44b140 <col:15> 'int' lvalue Var 0x56415d445b68 'a' 'int'
|   |-BinaryOperator 0x56415d44b5b0 <line:793:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x56415d44b198 <col:3> 'int' lvalue Var 0x56415d445b68 'a' 'int'
|   | `-ConditionalOperator 0x56415d44b580 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x56415d44b3a8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x56415d44b2c8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x56415d44b1f0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x56415d44b1d8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x56415d44b1b8 <col:8> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x56415d44b2a8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x56415d44b240 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x56415d44b228 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x56415d44b208 <col:27> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x56415d44b290 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x56415d44b278 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x56415d44b258 <col:46> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x56415d44b388 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x56415d44b320 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x56415d44b308 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x56415d44b2e8 <col:65> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x56415d44b370 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x56415d44b358 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x56415d44b338 <col:84> '_Bool' lvalue Var 0x56415d446150 'a$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x56415d44b568 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56415d44b3c8 <col:101> 'int' lvalue Var 0x56415d445b68 'a' 'int'
|   |   `-ParenExpr 0x56415d44b548 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x56415d44b518 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x56415d44b488 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56415d44b440 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56415d44b428 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56415d44b3e8 <col:106> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56415d44b470 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56415d44b458 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56415d44b408 <col:124> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56415d44b4e8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56415d44b4a8 <col:141> 'int' lvalue Var 0x56415d4462c8 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x56415d44b500 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56415d44b4c8 <col:153> 'int' lvalue Var 0x56415d4463c0 'a$w_buff1' 'int'
|   |-BinaryOperator 0x56415d44bac0 <line:794:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56415d44b5d0 <col:3> 'int' lvalue Var 0x56415d4462c8 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x56415d44ba90 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56415d44ba60 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56415d44ba48 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56415d44b5f0 <col:15> '_Bool' lvalue Var 0x56415d446978 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56415d44ba78 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56415d44b610 <col:31> 'int' lvalue Var 0x56415d4462c8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x56415d44ba28 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56415d44b9f8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56415d44b820 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56415d44b740 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56415d44b668 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56415d44b650 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56415d44b630 <col:45> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56415d44b720 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56415d44b6b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56415d44b6a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56415d44b680 <col:64> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x56415d44b708 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56415d44b6f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56415d44b6d0 <col:83> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56415d44b800 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56415d44b798 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56415d44b780 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56415d44b760 <col:102> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x56415d44b7e8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56415d44b7d0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56415d44b7b0 <col:121> '_Bool' lvalue Var 0x56415d446150 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56415d44b9e0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56415d44b840 <col:138> 'int' lvalue Var 0x56415d4462c8 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x56415d44b9c0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56415d44b990 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56415d44b900 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56415d44b8b8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56415d44b8a0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56415d44b860 <col:151> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56415d44b8e8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56415d44b8d0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56415d44b880 <col:169> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x56415d44b960 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56415d44b920 <col:186> 'int' lvalue Var 0x56415d4462c8 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x56415d44b978 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56415d44b940 <col:198> 'int' lvalue Var 0x56415d4462c8 'a$w_buff0' 'int'
|   |-BinaryOperator 0x56415d44c000 <line:795:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56415d44bae0 <col:3> 'int' lvalue Var 0x56415d4463c0 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x56415d44bfd0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56415d44bf70 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56415d44bf58 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56415d44bb00 <col:15> '_Bool' lvalue Var 0x56415d446978 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56415d44bf88 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56415d44bb20 <col:31> 'int' lvalue Var 0x56415d4463c0 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x56415d44bf38 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56415d44bf08 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56415d44bd30 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56415d44bc50 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56415d44bb78 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56415d44bb60 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56415d44bb40 <col:45> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56415d44bc30 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56415d44bbc8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56415d44bbb0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56415d44bb90 <col:64> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x56415d44bc18 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56415d44bc00 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56415d44bbe0 <col:83> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56415d44bd10 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56415d44bca8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56415d44bc90 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56415d44bc70 <col:102> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x56415d44bcf8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56415d44bce0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56415d44bcc0 <col:121> '_Bool' lvalue Var 0x56415d446150 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56415d44bef0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56415d44bd50 <col:138> 'int' lvalue Var 0x56415d4463c0 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x56415d44bed0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56415d44bea0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56415d44be10 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56415d44bdc8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56415d44bdb0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56415d44bd70 <col:151> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56415d44bdf8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56415d44bde0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56415d44bd90 <col:169> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x56415d44be70 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56415d44be30 <col:186> 'int' lvalue Var 0x56415d4463c0 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x56415d44be88 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56415d44be50 <col:198> 'int' lvalue Var 0x56415d4463c0 'a$w_buff1' 'int'
|   |-BinaryOperator 0x56415d44c5a8 <line:796:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56415d44c020 <col:3> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56415d44c590 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56415d44c560 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56415d44c518 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56415d44c500 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56415d44c040 <col:20> '_Bool' lvalue Var 0x56415d446978 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56415d44c548 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56415d44c530 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56415d44c060 <col:36> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x56415d44c4e0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56415d44c4b0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56415d44c270 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56415d44c190 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56415d44c0b8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56415d44c0a0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56415d44c080 <col:55> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56415d44c170 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56415d44c108 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56415d44c0f0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56415d44c0d0 <col:74> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x56415d44c158 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56415d44c140 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56415d44c120 <col:93> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56415d44c250 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56415d44c1e8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56415d44c1d0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56415d44c1b0 <col:112> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x56415d44c238 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56415d44c220 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56415d44c200 <col:131> '_Bool' lvalue Var 0x56415d446150 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x56415d44c498 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56415d44c480 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56415d44c290 <col:148> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x56415d44c460 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56415d44c430 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56415d44c350 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56415d44c308 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56415d44c2f0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56415d44c2b0 <col:166> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56415d44c338 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56415d44c320 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56415d44c2d0 <col:184> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x56415d44c3e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56415d44c3a0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56415d44c370 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56415d44c418 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56415d44c400 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56415d44c3c8 <col:212> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56415d44cb70 <line:797:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56415d44c5c8 <col:3> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56415d44cb58 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56415d44cb28 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56415d44cae0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56415d44cac8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56415d44c5e8 <col:20> '_Bool' lvalue Var 0x56415d446978 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56415d44cb10 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56415d44caf8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56415d44c608 <col:36> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x56415d44caa8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56415d44ca78 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56415d44c818 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56415d44c738 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56415d44c660 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56415d44c648 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56415d44c628 <col:55> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56415d44c718 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56415d44c6b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56415d44c698 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56415d44c678 <col:74> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x56415d44c700 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56415d44c6e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56415d44c6c8 <col:93> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56415d44c7f8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56415d44c790 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56415d44c778 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56415d44c758 <col:112> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x56415d44c7e0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56415d44c7c8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56415d44c7a8 <col:131> '_Bool' lvalue Var 0x56415d446150 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x56415d44ca60 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56415d44ca48 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56415d44c838 <col:148> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x56415d44ca28 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56415d44c9f8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56415d44c8f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56415d44c8b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56415d44c898 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56415d44c858 <col:166> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56415d44c8e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56415d44c8c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56415d44c878 <col:184> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x56415d44c9c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56415d44c948 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56415d44c918 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56415d44c9e0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56415d44c9a0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56415d44c970 <col:219> 'int' 0
|   |-BinaryOperator 0x56415d44d128 <line:798:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56415d44cb90 <col:3> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56415d44d110 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56415d44d0e0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56415d44d098 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56415d44d080 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56415d44cbb0 <col:20> '_Bool' lvalue Var 0x56415d446978 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56415d44d0c8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56415d44d0b0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56415d44cbd0 <col:36> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x56415d44d060 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56415d44d030 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56415d44cde0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56415d44cd00 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56415d44cc28 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56415d44cc10 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56415d44cbf0 <col:55> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56415d44cce0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56415d44cc78 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56415d44cc60 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56415d44cc40 <col:74> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x56415d44ccc8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56415d44ccb0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56415d44cc90 <col:93> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56415d44cdc0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56415d44cd58 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56415d44cd40 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56415d44cd20 <col:112> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x56415d44cda8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56415d44cd90 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56415d44cd70 <col:131> '_Bool' lvalue Var 0x56415d446150 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x56415d44d018 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56415d44d000 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56415d44ce00 <col:148> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x56415d44cfe0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56415d44cfa0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56415d44cec0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56415d44ce78 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56415d44ce60 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56415d44ce20 <col:166> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56415d44cea8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56415d44ce90 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56415d44ce40 <col:184> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x56415d44cf58 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56415d44cf10 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56415d44cee0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56415d44cf88 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56415d44cf70 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56415d44cf38 <col:212> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x56415d44d6f0 <line:799:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56415d44d148 <col:3> '_Bool' lvalue Var 0x56415d446150 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56415d44d6d8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56415d44d6a8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56415d44d660 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56415d44d648 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56415d44d168 <col:20> '_Bool' lvalue Var 0x56415d446978 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56415d44d690 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56415d44d678 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56415d44d188 <col:36> '_Bool' lvalue Var 0x56415d446150 'a$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x56415d44d628 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56415d44d5f8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56415d44d398 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56415d44d2b8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56415d44d1e0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56415d44d1c8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56415d44d1a8 <col:55> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56415d44d298 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56415d44d230 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56415d44d218 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56415d44d1f8 <col:74> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x56415d44d280 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56415d44d268 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56415d44d248 <col:93> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56415d44d378 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56415d44d310 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56415d44d2f8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56415d44d2d8 <col:112> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x56415d44d360 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56415d44d348 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56415d44d328 <col:131> '_Bool' lvalue Var 0x56415d446150 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x56415d44d5e0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56415d44d5c8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56415d44d3b8 <col:148> '_Bool' lvalue Var 0x56415d446150 'a$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x56415d44d5a8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56415d44d578 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56415d44d478 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56415d44d430 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56415d44d418 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56415d44d3d8 <col:166> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56415d44d460 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56415d44d448 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56415d44d3f8 <col:184> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x56415d44d548 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56415d44d4c8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56415d44d498 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56415d44d560 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56415d44d520 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56415d44d4f0 <col:219> 'int' 0
|   |-BinaryOperator 0x56415d44d768 <line:800:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56415d44d710 <col:3> 'int' lvalue Var 0x56415d445a48 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x56415d44d750 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56415d44d730 <col:25> 'int' lvalue Var 0x56415d445b68 'a' 'int'
|   |-BinaryOperator 0x56415d44d898 <line:801:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x56415d44d788 <col:3> 'int' lvalue Var 0x56415d445b68 'a' 'int'
|   | `-ConditionalOperator 0x56415d44d868 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x56415d44d820 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56415d44d808 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56415d44d7a8 <col:7> '_Bool' lvalue Var 0x56415d445c00 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x56415d44d838 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56415d44d7c8 <col:25> 'int' lvalue Var 0x56415d445c80 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x56415d44d850 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x56415d44d7e8 <col:37> 'int' lvalue Var 0x56415d445b68 'a' 'int'
|   |-BinaryOperator 0x56415d44d930 <line:802:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x56415d44d8b8 <col:3> '_Bool' lvalue Var 0x56415d445c00 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x56415d44d908 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56415d44d8d8 <col:28> 'int' 0
|   |-CallExpr 0x56415d44d988 <line:803:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56415d44d970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d44d950 <col:3> 'void ()' Function 0x56415d3ec410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56415d44d9e0 <line:804:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56415d44d9c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d44d9a8 <col:3> 'void ()' Function 0x56415d3ec350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56415d44dcc8 <line:805:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56415d44da00 <col:3> 'int' lvalue Var 0x56415d445b68 'a' 'int'
|   | `-ConditionalOperator 0x56415d44dc98 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56415d44dac0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56415d44da78 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56415d44da60 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56415d44da20 <col:7> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56415d44daa8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56415d44da90 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56415d44da40 <col:25> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x56415d44dc80 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56415d44dae0 <col:42> 'int' lvalue Var 0x56415d4462c8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x56415d44dc60 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56415d44dc30 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56415d44dba0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56415d44db58 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56415d44db40 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56415d44db00 <col:55> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56415d44db88 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56415d44db70 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56415d44db20 <col:73> '_Bool' lvalue Var 0x56415d446150 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56415d44dc00 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56415d44dbc0 <col:90> 'int' lvalue Var 0x56415d4463c0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56415d44dc18 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56415d44dbe0 <col:102> 'int' lvalue Var 0x56415d445b68 'a' 'int'
|   |-BinaryOperator 0x56415d44ded0 <line:806:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56415d44dce8 <col:3> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56415d44deb8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56415d44de88 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56415d44dda8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56415d44dd60 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56415d44dd48 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56415d44dd08 <col:20> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56415d44dd90 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56415d44dd78 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56415d44dd28 <col:38> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56415d44de40 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56415d44ddf8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56415d44ddc8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56415d44de70 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56415d44de58 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56415d44de20 <col:66> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56415d44e1d8 <line:807:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56415d44def0 <col:3> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56415d44e1c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56415d44e190 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56415d44e0b0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56415d44dfb0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56415d44df68 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56415d44df50 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56415d44df10 <col:20> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56415d44df98 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56415d44df80 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56415d44df30 <col:38> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x56415d44e090 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56415d44e048 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56415d44e030 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56415d44dff0 <col:56> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56415d44e078 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56415d44e060 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56415d44e010 <col:74> '_Bool' lvalue Var 0x56415d446150 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56415d44e148 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56415d44e100 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56415d44e0d0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56415d44e178 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56415d44e160 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56415d44e128 <col:102> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56415d44e3e0 <line:808:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56415d44e1f8 <col:3> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56415d44e3c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56415d44e398 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56415d44e2b8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56415d44e270 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56415d44e258 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56415d44e218 <col:20> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56415d44e2a0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56415d44e288 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56415d44e238 <col:38> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56415d44e350 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56415d44e308 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56415d44e2d8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56415d44e380 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56415d44e368 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56415d44e330 <col:66> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x56415d44e6c8 <line:809:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56415d44e400 <col:3> '_Bool' lvalue Var 0x56415d446150 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56415d44e6b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56415d44e680 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56415d44e5a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56415d44e4c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56415d44e478 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56415d44e460 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56415d44e420 <col:20> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56415d44e4a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56415d44e490 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56415d44e440 <col:38> '_Bool' lvalue Var 0x56415d445ed8 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x56415d44e580 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56415d44e538 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56415d44e520 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56415d44e4e0 <col:56> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56415d44e568 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56415d44e550 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56415d44e500 <col:74> '_Bool' lvalue Var 0x56415d446150 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56415d44e638 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56415d44e5f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56415d44e5c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56415d44e668 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56415d44e650 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56415d44e618 <col:102> '_Bool' lvalue Var 0x56415d446150 'a$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x56415d44e720 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56415d44e708 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d44e6e8 <col:3> 'void ()' Function 0x56415d3ec410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56415d44e778 <line:811:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56415d44e760 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d44e740 <col:3> 'void ()' Function 0x56415d3ec350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56415d44e830 <line:812:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56415d44e798 <col:3> 'int' lvalue Var 0x56415d4456e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56415d44e810 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56415d44e7f8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56415d44e7b8 <col:22> 'int' lvalue Var 0x56415d4456e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56415d44e7d8 <col:41> 'int' 1
|   |-CallExpr 0x56415d44e888 <line:813:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56415d44e870 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56415d44e850 <col:3> 'void ()' Function 0x56415d3ec410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56415d44e900 <line:814:3, col:36>
|     `-CallExpr 0x56415d44e8e0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56415d44e8c8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56415d44e8a8 <col:10> 'void *(void)' Function 0x56415d3ebe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56415d44ea48 prev 0x56415d445430 <line:816:1, line:818:1> line:816:6 fence 'void ()'
| `-CompoundStmt 0x56415d44eae8 <line:817:1, line:818:1>
|-FunctionDecl 0x56415d44eb18 prev 0x56415d4454f0 <line:819:1, line:821:1> line:819:6 isync 'void ()'
| `-CompoundStmt 0x56415d44ebb8 <line:820:1, line:821:1>
|-FunctionDecl 0x56415d44ebe8 prev 0x56415d4455b0 <line:822:1, line:824:1> line:822:6 lwfence 'void ()'
| `-CompoundStmt 0x56415d44ec88 <line:823:1, line:824:1>
`-FunctionDecl 0x56415d44ecf8 <line:825:1, line:851:1> line:825:5 main 'int ()'
  `-CompoundStmt 0x56415d450d18 <line:826:1, line:851:1>
    |-DeclStmt 0x56415d44ee10 <line:827:3, col:17>
    | `-VarDecl 0x56415d44eda8 <col:3, col:13> col:13 used t771 'pthread_t':'unsigned long'
    |-CallExpr 0x56415d44f048 <line:828:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56415d44f030 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56415d44ee28 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56415d42c8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56415d44ee68 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56415d44ee48 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56415d44eda8 't771' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56415d44f088 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56415d44eee0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56415d44eeb8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56415d44ee80 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56415d44f0a0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56415d44ef00 <col:38> 'void *(void *)' Function 0x56415d446a90 'P0' 'void *(void *)'
    | `-ParenExpr 0x56415d44ef80 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56415d44ef58 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56415d44ef20 <col:51> 'int' 0
    |-DeclStmt 0x56415d44f130 <line:829:3, col:17>
    | `-VarDecl 0x56415d44f0c8 <col:3, col:13> col:13 used t772 'pthread_t':'unsigned long'
    |-CallExpr 0x56415d44f2d8 <line:830:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56415d44f2c0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56415d44f148 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56415d42c8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56415d44f188 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56415d44f168 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56415d44f0c8 't772' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56415d44f318 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56415d44f200 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56415d44f1d8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56415d44f1a0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56415d44f330 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56415d44f220 <col:38> 'void *(void *)' Function 0x56415d448500 'P1' 'void *(void *)'
    | `-ParenExpr 0x56415d44f2a0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56415d44f278 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56415d44f240 <col:51> 'int' 0
    |-DeclStmt 0x56415d44f3c0 <line:831:3, col:17>
    | `-VarDecl 0x56415d44f358 <col:3, col:13> col:13 used t773 'pthread_t':'unsigned long'
    |-CallExpr 0x56415d44f568 <line:832:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56415d44f550 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56415d44f3d8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56415d42c8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56415d44f418 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56415d44f3f8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56415d44f358 't773' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56415d44f5a8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56415d44f490 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56415d44f468 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56415d44f430 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56415d44f5c0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56415d44f4b0 <col:38> 'void *(void *)' Function 0x56415d449868 'P2' 'void *(void *)'
    | `-ParenExpr 0x56415d44f530 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56415d44f508 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56415d44f4d0 <col:51> 'int' 0
    |-DeclStmt 0x56415d44f650 <line:833:3, col:17>
    | `-VarDecl 0x56415d44f5e8 <col:3, col:13> col:13 used t774 'pthread_t':'unsigned long'
    |-CallExpr 0x56415d44f7f8 <line:834:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56415d44f7e0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56415d44f668 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56415d42c8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56415d44f6a8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56415d44f688 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56415d44f5e8 't774' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56415d44f838 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56415d44f720 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56415d44f6f8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56415d44f6c0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56415d44f850 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56415d44f740 <col:38> 'void *(void *)' Function 0x56415d44abf0 'P3' 'void *(void *)'
    | `-ParenExpr 0x56415d44f7c0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56415d44f798 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56415d44f760 <col:51> 'int' 0
    |-CallExpr 0x56415d44f8a0 <line:835:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56415d44f888 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56415d44f868 <col:3> 'void ()' Function 0x56415d3ec350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56415d44f970 <line:836:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x56415d44f8c0 <col:3> '_Bool' lvalue Var 0x56415d4464b0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x56415d44f958 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x56415d44f938 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x56415d44f920 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x56415d44f8e0 <col:21> 'int' lvalue Var 0x56415d4456e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x56415d44f900 <col:41> 'int' 4
    |-CallExpr 0x56415d44f9c8 <line:837:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56415d44f9b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56415d44f990 <col:3> 'void ()' Function 0x56415d3ec410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56415d44fa40 <line:838:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56415d44fa28 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56415d44f9e8 <col:3> 'void (int)' Function 0x56415d3ebca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x56415d44fa80 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56415d44fa68 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56415d44fa08 <col:21> '_Bool' lvalue Var 0x56415d4464b0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x56415d44fad0 <line:839:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56415d44fab8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56415d44fa98 <col:3> 'void ()' Function 0x56415d3ec350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56415d44fdb8 <line:840:3, col:103> 'int' '='
    | |-DeclRefExpr 0x56415d44faf0 <col:3> 'int' lvalue Var 0x56415d445b68 'a' 'int'
    | `-ConditionalOperator 0x56415d44fd88 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x56415d44fbb0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x56415d44fb68 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x56415d44fb50 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x56415d44fb10 <col:7> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x56415d44fb98 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x56415d44fb80 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x56415d44fb30 <col:25> '_Bool' lvalue Var 0x56415d445cf8 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x56415d44fd70 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56415d44fbd0 <col:42> 'int' lvalue Var 0x56415d4462c8 'a$w_buff0' 'int'
    |   `-ParenExpr 0x56415d44fd50 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x56415d44fd20 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x56415d44fc90 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x56415d44fc48 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x56415d44fc30 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x56415d44fbf0 <col:55> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x56415d44fc78 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x56415d44fc60 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x56415d44fc10 <col:73> '_Bool' lvalue Var 0x56415d445f70 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56415d44fcf0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56415d44fcb0 <col:90> 'int' lvalue Var 0x56415d4463c0 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x56415d44fd08 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x56415d44fcd0 <col:102> 'int' lvalue Var 0x56415d445b68 'a' 'int'
    |-BinaryOperator 0x56415d44ffc0 <line:841:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56415d44fdd8 <col:3> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x56415d44ffa8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56415d44ff78 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56415d44fe98 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56415d44fe50 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56415d44fe38 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56415d44fdf8 <col:20> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56415d44fe80 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56415d44fe68 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56415d44fe18 <col:38> '_Bool' lvalue Var 0x56415d445cf8 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56415d44ff30 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56415d44fee8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56415d44feb8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56415d44ff60 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56415d44ff48 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56415d44ff10 <col:66> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x56415d4502b8 <line:842:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56415d44ffe0 <col:3> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x56415d4502a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56415d450270 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56415d450190 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56415d4500b0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56415d450068 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56415d450050 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56415d450010 <col:20> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56415d450098 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56415d450080 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56415d450030 <col:38> '_Bool' lvalue Var 0x56415d445cf8 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56415d450170 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56415d450128 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56415d450110 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56415d4500d0 <col:56> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56415d450158 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56415d450140 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56415d4500f0 <col:74> '_Bool' lvalue Var 0x56415d445f70 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56415d450228 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56415d4501e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56415d4501b0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56415d450258 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56415d450240 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56415d450208 <col:102> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x56415d4504c0 <line:843:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56415d4502d8 <col:3> '_Bool' lvalue Var 0x56415d445cf8 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56415d4504a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56415d450478 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56415d450398 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56415d450350 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56415d450338 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56415d4502f8 <col:20> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56415d450380 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56415d450368 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56415d450318 <col:38> '_Bool' lvalue Var 0x56415d445cf8 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56415d450430 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56415d4503e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56415d4503b8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56415d450460 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56415d450448 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56415d450410 <col:66> '_Bool' lvalue Var 0x56415d445cf8 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x56415d4507a8 <line:844:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56415d4504e0 <col:3> '_Bool' lvalue Var 0x56415d445f70 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56415d450790 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56415d450760 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56415d450680 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56415d4505a0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56415d450558 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56415d450540 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56415d450500 <col:20> '_Bool' lvalue Var 0x56415d446340 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56415d450588 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56415d450570 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56415d450520 <col:38> '_Bool' lvalue Var 0x56415d445cf8 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56415d450660 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56415d450618 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56415d450600 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56415d4505c0 <col:56> '_Bool' lvalue Var 0x56415d446438 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56415d450648 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56415d450630 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56415d4505e0 <col:74> '_Bool' lvalue Var 0x56415d445f70 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56415d450718 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56415d4506d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56415d4506a0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56415d450748 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56415d450730 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56415d4506f8 <col:102> '_Bool' lvalue Var 0x56415d445f70 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x56415d450800 <line:845:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56415d4507e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56415d4507c8 <col:3> 'void ()' Function 0x56415d3ec410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56415d450858 <line:846:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56415d450840 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56415d450820 <col:3> 'void ()' Function 0x56415d3ec350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56415d450bc0 <line:847:3, col:123> '_Bool' '='
    | |-DeclRefExpr 0x56415d450878 <col:3> '_Bool' lvalue Var 0x56415d446528 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x56415d450ba8 <col:21, col:123> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x56415d450b90 <col:21, col:123> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x56415d450b70 <col:22, col:123> 'int'
    |       `-BinaryOperator 0x56415d450b50 <col:23, col:122> 'int' '&&'
    |         |-BinaryOperator 0x56415d450ab8 <col:23, col:94> 'int' '&&'
    |         | |-BinaryOperator 0x56415d450a20 <col:23, col:66> 'int' '&&'
    |         | | |-BinaryOperator 0x56415d450988 <col:23, col:38> 'int' '&&'
    |         | | | |-BinaryOperator 0x56415d4508f0 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x56415d4508d8 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x56415d450898 <col:23> 'int' lvalue Var 0x56415d446748 'y' 'int'
    |         | | | | `-IntegerLiteral 0x56415d4508b8 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x56415d450968 <col:33, col:38> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x56415d450950 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x56415d450910 <col:33> 'int' lvalue Var 0x56415d446868 'z' 'int'
    |         | | |   `-IntegerLiteral 0x56415d450930 <col:38> 'int' 2
    |         | | `-BinaryOperator 0x56415d450a00 <col:43, col:66> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x56415d4509e8 <col:43> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x56415d4509a8 <col:43> 'int' lvalue Var 0x56415d445808 '__unbuffered_p0_EAX' 'int'
    |         | |   `-IntegerLiteral 0x56415d4509c8 <col:66> 'int' 0
    |         | `-BinaryOperator 0x56415d450a98 <col:71, col:94> 'int' '=='
    |         |   |-ImplicitCastExpr 0x56415d450a80 <col:71> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x56415d450a40 <col:71> 'int' lvalue Var 0x56415d445928 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x56415d450a60 <col:94> 'int' 2
    |         `-BinaryOperator 0x56415d450b30 <col:99, col:122> 'int' '=='
    |           |-ImplicitCastExpr 0x56415d450b18 <col:99> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56415d450ad8 <col:99> 'int' lvalue Var 0x56415d445a48 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x56415d450af8 <col:122> 'int' 0
    |-CallExpr 0x56415d450c18 <line:848:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56415d450c00 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56415d450be0 <col:3> 'void ()' Function 0x56415d3ec410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56415d450c90 <line:849:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56415d450c78 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56415d450c38 <col:3> 'void (int)' Function 0x56415d3ec0d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x56415d450cd0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56415d450cb8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56415d450c58 <col:21> '_Bool' lvalue Var 0x56415d446528 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x56415d450d08 <line:850:3, col:10>
      `-IntegerLiteral 0x56415d450ce8 <col:10> 'int' 0
