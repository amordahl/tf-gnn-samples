TranslationUnitDecl 0x562770dbbf88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x562770dbc848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x562770dbc520 '__int128'
|-TypedefDecl 0x562770dbc8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x562770dbc540 'unsigned __int128'
|-TypedefDecl 0x562770dbcbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x562770dbc990 'struct __NSConstantString_tag'
|   `-Record 0x562770dbc910 '__NSConstantString_tag'
|-TypedefDecl 0x562770dbcc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x562770dbcc20 'char *'
|   `-BuiltinType 0x562770dbc020 'char'
|-TypedefDecl 0x562770dfbb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x562770dbcf00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x562770dbcd40 'struct __va_list_tag'
|     `-Record 0x562770dbccc0 '__va_list_tag'
|-FunctionDecl 0x562770dfbca0 <pthread-wmm/mix001_tso.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x562770dfbbd0 <col:31> col:34 'int'
|-FunctionDecl 0x562770dfbe68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x562770dfbf90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x562770dfc0d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x562770dfc048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x562770dfc308 <col:40, col:99>
|   |-IfStmt 0x562770dfc2d8 <col:42, col:88>
|   | |-UnaryOperator 0x562770dfc1b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x562770dfc1a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x562770dfc180 <col:47> 'int' lvalue ParmVar 0x562770dfc048 'expression' 'int'
|   | `-CompoundStmt 0x562770dfc2c0 <col:59, col:88>
|   |   `-LabelStmt 0x562770dfc2a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x562770dfc238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x562770dfc220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x562770dfc1d0 <col:68> 'void () __attribute__((noreturn))' Function 0x562770dfbf90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x562770dfc2f0 <col:89>
|   `-ReturnStmt 0x562770dfc2f8 <col:91>
|-FunctionDecl 0x562770dfc350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x562770dfc410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x562770dfc790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562770dfc4c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x562770dfc548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x562770dfc5c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x562770dfc648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x562770dfc850 <line:10:22>
|-FunctionDecl 0x562770e228a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562770dfc8c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x562770dfc940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x562770dfc9c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x562770dfca40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x562770e22960 <line:13:22>
|-FunctionDecl 0x562770e22c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562770e229d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x562770e22a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x562770e22ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x562770e22cc8 <line:15:22>
|-TypedefDecl 0x562770e22d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x562770dbc0e0 'unsigned char'
|-TypedefDecl 0x562770e22da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x562770dbc100 'unsigned short'
|-TypedefDecl 0x562770e22e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x562770dbc120 'unsigned int'
|-TypedefDecl 0x562770e22e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x562770dbc140 'unsigned long'
|-TypedefDecl 0x562770e22ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x562770dbc040 'signed char'
|-TypedefDecl 0x562770e22f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x562770dbc0e0 'unsigned char'
|-TypedefDecl 0x562770e22fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x562770dbc060 'short'
|-TypedefDecl 0x562770e23048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x562770dbc100 'unsigned short'
|-TypedefDecl 0x562770e230b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x562770dbc080 'int'
|-TypedefDecl 0x562770e23128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x562770dbc120 'unsigned int'
|-TypedefDecl 0x562770e23198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x562770dbc0a0 'long'
|-TypedefDecl 0x562770e23208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x562770dbc140 'unsigned long'
|-TypedefDecl 0x562770e23278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x562770dbc0a0 'long'
|-TypedefDecl 0x562770e232e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x562770dbc140 'unsigned long'
|-TypedefDecl 0x562770e23358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x562770dbc140 'unsigned long'
|-TypedefDecl 0x562770e233c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x562770dbc120 'unsigned int'
|-TypedefDecl 0x562770e23438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x562770dbc120 'unsigned int'
|-TypedefDecl 0x562770e234a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x562770dbc140 'unsigned long'
|-TypedefDecl 0x562770e23518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x562770dbc140 'unsigned long'
|-TypedefDecl 0x562770e23588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x562770dbc120 'unsigned int'
|-TypedefDecl 0x562770e235f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x562770dbc140 'unsigned long'
|-TypedefDecl 0x562770e23668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x562770dbc0a0 'long'
|-TypedefDecl 0x562770e236d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x562770dbc0a0 'long'
|-TypedefDecl 0x562770e23748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x562770dbc080 'int'
|-RecordDecl 0x562770e237a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x562770e23918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x562770e239d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x562770e23970 'struct __fsid_t' sugar
|   `-RecordType 0x562770e23820 '__fsid_t'
|     `-Record 0x562770e237a0 ''
|-TypedefDecl 0x562770e23a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x562770dbc0a0 'long'
|-TypedefDecl 0x562770e23ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x562770dbc140 'unsigned long'
|-TypedefDecl 0x562770e23b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x562770dbc140 'unsigned long'
|-TypedefDecl 0x562770e23ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x562770dbc120 'unsigned int'
|-TypedefDecl 0x562770e23c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x562770dbc0a0 'long'
|-TypedefDecl 0x562770e23c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x562770dbc120 'unsigned int'
|-TypedefDecl 0x562770e23cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x562770dbc0a0 'long'
|-TypedefDecl 0x562770e23d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x562770dbc080 'int'
|-TypedefDecl 0x562770e23dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x562770dbc080 'int'
|-TypedefDecl 0x562770e23e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x562770dbc080 'int'
|-TypedefDecl 0x562770e23eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x562770dbc7a0 'void *'
|   `-BuiltinType 0x562770dbbfe0 'void'
|-TypedefDecl 0x562770e23f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x562770dbc0a0 'long'
|-TypedefDecl 0x562770e23f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x562770dbc0a0 'long'
|-TypedefDecl 0x562770e24008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x562770dbc0a0 'long'
|-TypedefDecl 0x562770e24078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x562770dbc140 'unsigned long'
|-TypedefDecl 0x562770e240e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x562770dbc140 'unsigned long'
|-TypedefDecl 0x562770e24158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x562770dbc140 'unsigned long'
|-TypedefDecl 0x562770e241c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x562770dbc140 'unsigned long'
|-TypedefDecl 0x562770e24238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x562770dbc0a0 'long'
|-TypedefDecl 0x562770e242a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x562770dbc0a0 'long'
|-TypedefDecl 0x562770e24318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x562770dbc0a0 'long'
|-TypedefDecl 0x562770e24388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x562770dbc140 'unsigned long'
|-TypedefDecl 0x562770e24418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x562770e243e0 '__off64_t' sugar
|   |-Typedef 0x562770e236d8 '__off64_t'
|   `-BuiltinType 0x562770dbc0a0 'long'
|-TypedefDecl 0x562770e24510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x562770e244d0 '__quad_t *'
|   `-TypedefType 0x562770e24470 '__quad_t' sugar
|     |-Typedef 0x562770e23278 '__quad_t'
|     `-BuiltinType 0x562770dbc0a0 'long'
|-TypedefDecl 0x562770e24580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x562770dbcc20 'char *'
|   `-BuiltinType 0x562770dbc020 'char'
|-TypedefDecl 0x562770e245f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x562770dbc0a0 'long'
|-TypedefDecl 0x562770e24660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x562770dbc120 'unsigned int'
|-FunctionDecl 0x562770e247a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x562770e246d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x562770e24ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x562770e24ad8 <line:72:3, col:34>
|     `-CallExpr 0x562770e24a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x562770e24a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x562770e24a10 <col:10> '<builtin fn type>' Function 0x562770e24880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x562770e24ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x562770e24a30 <col:29> 'unsigned int' lvalue ParmVar 0x562770e246d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x562770e24880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x562770e24920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x562770e24990 <col:10> Implicit
| `-ConstAttr 0x562770e249e8 <col:10> Implicit
|-FunctionDecl 0x562770e24c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x562770e24b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x562770e24f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x562770e24f48 <line:77:3, col:34>
|     `-CallExpr 0x562770e24f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x562770e24ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x562770e24e78 <col:10> '<builtin fn type>' Function 0x562770e24ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x562770e24f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x562770e24e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x562770e24b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x562770e24ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x562770e24d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x562770e24df8 <col:10> Implicit
| `-ConstAttr 0x562770e24e50 <col:10> Implicit
|-TypedefDecl 0x562770e24f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x562770dbc140 'unsigned long'
|-TypedefDecl 0x562770e25018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x562770e24fe0 '__time_t' sugar
|   |-Typedef 0x562770e23c18 '__time_t'
|   `-BuiltinType 0x562770dbc0a0 'long'
|-RecordDecl 0x562770e25070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x562770e25128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x562770e251b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x562770e25248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x562770e25210 '__pid_t' sugar
|   |-Typedef 0x562770e23748 '__pid_t'
|   `-BuiltinType 0x562770dbc080 'int'
|-RecordDecl 0x562770e252a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x562770e25360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x562770e253b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x562770e25470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x562770e254d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x562770dbc140 'unsigned long'
|-RecordDecl 0x562770e25530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x562770e257c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x562770e278b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x562770e25810 'struct cpu_set_t' sugar
|   `-RecordType 0x562770e255b0 'cpu_set_t'
|     `-Record 0x562770e25530 ''
|-FunctionDecl 0x562770e27b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x562770e27958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562770e27a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x562770e27c38 <line:107:19>
|-FunctionDecl 0x562770e27e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x562770e27ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x562770e27eb8 <col:69>
|-FunctionDecl 0x562770e28030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x562770e27f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x562770e280d8 <col:64>
|-FunctionDecl 0x562770e28398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x562770e28140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562770e28278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x562770e28448 <line:113:22>
|-FunctionDecl 0x562770e286c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x562770e284b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562770e285a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x562770e28778 <col:88>
|-FunctionDecl 0x562770e28a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x562770e287e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562770e288c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x562770e28950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x562770e28b50 <col:62>
|-FunctionDecl 0x562770e28cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x562770e28bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x562770e28d70 <col:63>
|-FunctionDecl 0x562770e28e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x562770e28f38 <col:47>
|-FunctionDecl 0x562770e29040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x562770e28fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x562770e290e8 <col:69>
|-FunctionDecl 0x562770e291f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x562770e29158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x562770e29298 <col:69>
|-FunctionDecl 0x562770e29558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562770e29300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562770e29438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x562770e29608 <col:88>
|-TypedefDecl 0x562770e29698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x562770e29660 '__clock_t' sugar
|   |-Typedef 0x562770e23a58 '__clock_t'
|   `-BuiltinType 0x562770dbc0a0 'long'
|-TypedefDecl 0x562770e29728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x562770e296f0 '__clockid_t' sugar
|   |-Typedef 0x562770e23e48 '__clockid_t'
|   `-BuiltinType 0x562770dbc080 'int'
|-TypedefDecl 0x562770e297b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x562770e29780 '__timer_t' sugar
|   |-Typedef 0x562770e23eb8 '__timer_t'
|   `-PointerType 0x562770dbc7a0 'void *'
|     `-BuiltinType 0x562770dbbfe0 'void'
|-RecordDecl 0x562770e29810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x562770e298e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x562770e29950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x562770e299b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x562770e29a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x562770e29a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x562770e29af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x562770e29b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x562770e29bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x562770e29c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x562770e29c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x562770e29cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x562770e29d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x562770e29e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x562770e29e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x562770e29f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x562770e2a100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x562770e2a1a0 <col:45>
|-FunctionDecl 0x562770e2a380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x562770e2a270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x562770e2a428 <col:54>
|-FunctionDecl 0x562770e2a628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x562770e2a490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x562770e2a508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x562770e2a6d8 <line:157:22>
| `-ConstAttr 0x562770e2a730 <col:63>
|-FunctionDecl 0x562770e2b560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562770e2a828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x562770e2b608 <col:56>
|-FunctionDecl 0x562770e2b9b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x562770e2b678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x562770e2b6f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562770e2b770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x562770e2b868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x562770e2ba70 <col:54>
|-RecordDecl 0x562770e2bac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x562770e2bb78 parent 0x562770dbbf88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x562770e2bdd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x562770e2be78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x562770e2bee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x562770e2bf48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x562770e2c038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x562770e2c158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x562770e2c100 'struct __locale_struct *'
|   `-ElaboratedType 0x562770e2c090 'struct __locale_struct' sugar
|     `-RecordType 0x562770e2bb50 'struct __locale_struct'
|       `-Record 0x562770e2bac8 '__locale_struct'
|-TypedefDecl 0x562770e2c208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x562770e2c1d0 '__locale_t' sugar
|   |-Typedef 0x562770e2c158 '__locale_t'
|   `-PointerType 0x562770e2c100 'struct __locale_struct *'
|     `-ElaboratedType 0x562770e2c090 'struct __locale_struct' sugar
|       `-RecordType 0x562770e2bb50 'struct __locale_struct'
|         `-Record 0x562770e2bac8 '__locale_struct'
|-FunctionDecl 0x562770e2c610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x562770e2c278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x562770e2c2f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562770e2c370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x562770e2c400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x562770e2c478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x562770e2c6d8 <col:40>
|-FunctionDecl 0x562770e2c8c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x562770e2c7a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x562770e2c970 <col:66>
|-FunctionDecl 0x562770e2ca80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x562770e2c9d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x562770e2cb28 <col:69>
|-FunctionDecl 0x562770e2cd58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x562770e2cb90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562770e2cc20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x562770e2ce08 <col:52>
|-FunctionDecl 0x562770e2cfb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x562770e2ce70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562770e2cf00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x562770e2d060 <col:55>
|-FunctionDecl 0x562770e2d1f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x562770e2d0e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x562770e2d2a0 <col:62>
|-FunctionDecl 0x562770e2d418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x562770e2d308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x562770e2d4c0 <col:60>
|-FunctionDecl 0x562770e2d718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x562770e2d578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x562770e2d5f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x562770e2d7c8 <col:44>
|-FunctionDecl 0x562770e2d9d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x562770e2d830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562770e2d8b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x562770e2da88 <col:49>
|-VarDecl 0x562770e2db88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x562770e2dc08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x562770e2dc88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x562770e2dd50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x562770e2de80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x562770e2df20 <col:42>
|-VarDecl 0x562770e2df90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x562770e2e010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x562770e2e198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x562770e2e088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x562770e2e240 <col:57>
|-FunctionDecl 0x562770e2e350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562770e2e2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x562770e2e3f8 <col:56>
|-FunctionDecl 0x562770e2f540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562770e2e478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x562770e2f5e8 <col:59>
|-FunctionDecl 0x562770e2f6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x562770e2f658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x562770e2f798 <col:48>
| `-ConstAttr 0x562770e2f7f0 <col:89>
|-FunctionDecl 0x562770e2fa58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x562770e2f8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x562770e2f938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x562770e2fcb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562770e2fb48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562770e2fbd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x562770e2fd68 <col:88>
|-FunctionDecl 0x562770e2ff00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562770e2fdd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562770e2fe60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x562770e2ffb0 <col:88>
|-FunctionDecl 0x562770e301c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x562770e30018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562770e300a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x562770e30278 <line:208:22>
|-FunctionDecl 0x562770e305e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x562770e302e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562770e30360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x562770e303f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x562770e30480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x562770e308e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x562770e306e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x562770e307c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x562770e30998 <col:85>
|-FunctionDecl 0x562770e30d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x562770e30a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562770e30b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x562770e30c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x562770e30e40 <col:52>
|-FunctionDecl 0x562770e30fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x562770e30ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x562770e31060 <col:61>
|-FunctionDecl 0x562770e31560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x562770e310c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x562770e31148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x562770e31278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x562770e31368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x562770e31620 <col:62>
|-FunctionDecl 0x562770e31838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x562770e31688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x562770e31718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x562770e318e8 <line:221:22>
|-FunctionDecl 0x562770e319e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x562770e31950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x562770e31a90 <col:65>
|-TypedefDecl 0x562770e31b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x562770dbc140 'unsigned long'
|-RecordDecl 0x562770e31b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x562770e31ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x562770e31d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562770e31db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x562770e31d60 'union pthread_attr_t' sugar
|   `-RecordType 0x562770e31be0 'union pthread_attr_t'
|     `-Record 0x562770e31b58 'pthread_attr_t'
|-RecordDecl 0x562770e31e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x562770e31f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x562770e32000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x562770e320b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x562770e32050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x562770e31e90 'struct __pthread_internal_list'
|     `-Record 0x562770e31e10 '__pthread_internal_list'
|-RecordDecl 0x562770e32120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x562770e321c8 parent 0x562770dbbf88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x562770e322a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562770e32308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x562770e32370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x562770e323d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x562770e32440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x562770e324a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x562770e36580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x562770e36630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x562770e36720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x562770e36788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562770e36910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x562770e368b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x562770e321a0 'pthread_mutex_t'
|     `-Record 0x562770e32120 ''
|-RecordDecl 0x562770e36980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x562770e36ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562770e36b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562770e36be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x562770e36b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x562770e36a00 'pthread_mutexattr_t'
|     `-Record 0x562770e36980 ''
|-RecordDecl 0x562770e36c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x562770e36cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x562770e36dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562770e36e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x562770e36e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x562770e36ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x562770e36f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x562770e36fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x562770e37030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x562770e37098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x562770e37150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix001_tso.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix001_tso.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x562770e37240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x562770e372a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x562770e373e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x562770e37380 'union pthread_cond_t' sugar
|   `-RecordType 0x562770e36cd0 'pthread_cond_t'
|     `-Record 0x562770e36c50 ''
|-RecordDecl 0x562770e37450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x562770e37590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562770e375f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562770e376b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x562770e37650 'union pthread_condattr_t' sugar
|   `-RecordType 0x562770e374d0 'pthread_condattr_t'
|     `-Record 0x562770e37450 ''
|-TypedefDecl 0x562770e37738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x562770dbc120 'unsigned int'
|-TypedefDecl 0x562770e377a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x562770dbc080 'int'
|-RecordDecl 0x562770e37800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x562770e378a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x562770e37970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562770e379d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x562770e37a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x562770e37aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x562770e37b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x562770e37b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x562770e37be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x562770e37c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x562770e37cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x562770e37d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x562770e37d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x562770e37e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix001_tso.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix001_tso.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x562770e37ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x562770e37f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562770e38090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x562770e38030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x562770e37880 'pthread_rwlock_t'
|     `-Record 0x562770e37800 ''
|-RecordDecl 0x562770e38100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x562770e38240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x562770e382a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562770e38360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x562770e38300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x562770e38180 'pthread_rwlockattr_t'
|     `-Record 0x562770e38100 ''
|-TypedefDecl 0x562770e383e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x562770dbc084 'volatile int' volatile
|   `-BuiltinType 0x562770dbc080 'int'
|-RecordDecl 0x562770e38440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x562770e3a5b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x562770e3a618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562770e3a6d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x562770e3a670 'union pthread_barrier_t' sugar
|   `-RecordType 0x562770e384c0 'pthread_barrier_t'
|     `-Record 0x562770e38440 ''
|-RecordDecl 0x562770e3a740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x562770e3a840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562770e3a8a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562770e3a960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x562770e3a900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x562770e3a7c0 'pthread_barrierattr_t'
|     `-Record 0x562770e3a740 ''
|-TypedefDecl 0x562770e3aa78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x562770e3aa10 'long [8]' 8 
|   `-BuiltinType 0x562770dbc0a0 'long'
|-EnumDecl 0x562770e3aad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x562770e3ab98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x562770e3abe8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x562770e3ac38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x562770e3ad08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x562770e3ad58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x562770e3ada8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x562770e3adf8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x562770e3ae80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x562770e3ae68 <col:26> 'int'
| |   `-DeclRefExpr 0x562770e3ae48 <col:26> 'int' EnumConstant 0x562770e3ad08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x562770e3af08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x562770e3aef0 <col:29> 'int'
| |   `-DeclRefExpr 0x562770e3aed0 <col:29> 'int' EnumConstant 0x562770e3ad58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x562770e3af90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x562770e3af78 <col:30> 'int'
| |   `-DeclRefExpr 0x562770e3af58 <col:30> 'int' EnumConstant 0x562770e3ada8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x562770e3b018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x562770e3b000 <col:27> 'int'
|     `-DeclRefExpr 0x562770e3afe0 <col:27> 'int' EnumConstant 0x562770e3ae80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x562770e3b068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x562770e3b138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x562770e3b1c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x562770e3b1a8 <col:30> 'int'
| |   `-DeclRefExpr 0x562770e3b188 <col:30> 'int' EnumConstant 0x562770e3b138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x562770e3b210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x562770e3b298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x562770e3b280 <col:29> 'int'
|     `-DeclRefExpr 0x562770e3b260 <col:29> 'int' EnumConstant 0x562770e3b210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x562770e3b2e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x562770e3b3b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x562770e3b408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x562770e3b458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x562770e3b4a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x562770e3b5c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x562770e3b610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x562770e3b660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x562770e3b6e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x562770e3b6d0 <col:31> 'int'
|     `-DeclRefExpr 0x562770e3b6b0 <col:31> 'int' EnumConstant 0x562770e3b5c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x562770e3b738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x562770e3b808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x562770e3b858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x562770e3b8a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x562770e3b978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x562770e3b9c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x562770e3ba18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x562770e3bae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x562770e3bb38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x562770e3bb88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x562770e3bdc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x562770e3be30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x562770e3be98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x562770e3bfb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x562770e3c008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x562770e3c0d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x562770e3c128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x562770e3c178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x562770e3c248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x562770e3c298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x562770e3c8f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x562770e3c390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x562770e3c4a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562770e3c6e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x562770e3c760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x562770e3c9b8 <col:47>
| |-NonNullAttr 0x562770e3ca10 <col:77, col:94> 1 3
| `-CallbackAttr 0x562770e3ca48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x562770e3cb70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x562770e3caa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x562770e3cdc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x562770e3cc28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x562770e3cca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x562770e3cf98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x562770e3ce88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x562770e3d040 <col:60>
|-FunctionDecl 0x562770e3d190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x562770e3d230 <col:54>
| `-ConstAttr 0x562770e3d288 <col:95>
|-FunctionDecl 0x562770e3d458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x562770e3d2c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562770e3d338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x562770e3d508 <line:394:19>
| `-ConstAttr 0x562770e3d560 <col:60>
|-FunctionDecl 0x562770e3df68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x562770e3de30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x562770e3e010 <col:71>
| `-NonNullAttr 0x562770e3e068 <col:112, col:126> 1
|-FunctionDecl 0x562770e3e170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x562770e3e0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x562770e3e218 <line:397:22>
| `-NonNullAttr 0x562770e3e270 <col:63, col:77> 1
|-FunctionDecl 0x562770e3e498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x562770e3e2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x562770e3e338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x562770e3e548 <line:400:22>
| `-NonNullAttr 0x562770e3e5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x562770e3e7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562770e3e5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562770e3e668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x562770e3e858 <line:403:22>
| `-NonNullAttr 0x562770e3e8b0 <col:63, col:77> 1
|-FunctionDecl 0x562770e3eb08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x562770e3e8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x562770e3e9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x562770e3ebb8 <line:406:22>
| `-NonNullAttr 0x562770e3ec10 <col:63, col:80> 1 2
|-FunctionDecl 0x562770e3fe48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x562770e3ec58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562770e3ecd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562770e3fef8 <line:409:22>
| `-NonNullAttr 0x562770e3ff50 <col:63, col:77> 1
|-FunctionDecl 0x562770e40188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562770e3ff98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562770e40028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x562770e40238 <line:412:22>
| `-NonNullAttr 0x562770e40290 <col:63, col:80> 1 2
|-FunctionDecl 0x562770e404c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562770e402d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x562770e40368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x562770e40578 <col:37>
| `-NonNullAttr 0x562770e405d0 <col:78, col:95> 1 2
|-FunctionDecl 0x562770e407b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562770e40618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562770e40698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x562770e40868 <line:418:22>
| `-NonNullAttr 0x562770e408c0 <col:63, col:80> 1 2
|-FunctionDecl 0x562770e40a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562770e40908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562770e40988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x562770e40af8 <line:420:22>
| `-NonNullAttr 0x562770e40b50 <col:63, col:77> 1
|-FunctionDecl 0x562770e40cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562770e40b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562770e40c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x562770e40da8 <line:423:22>
| `-NonNullAttr 0x562770e41e30 <col:63, col:80> 1 2
|-FunctionDecl 0x562770e41fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562770e41e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562770e41ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x562770e42068 <line:426:22>
| `-NonNullAttr 0x562770e420c0 <col:63, col:77> 1
|-FunctionDecl 0x562770e42268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562770e42108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562770e42188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x562770e42318 <line:429:22>
| `-NonNullAttr 0x562770e42370 <col:63, col:80> 1 2
|-FunctionDecl 0x562770e424f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562770e423b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562770e42438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x562770e425a8 <line:431:22>
| `-NonNullAttr 0x562770e42600 <col:63, col:77> 1
|-FunctionDecl 0x562770e42828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x562770e42648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562770e426c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x562770e428d8 <line:434:22>
| |-NonNullAttr 0x562770e42930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x562770e42968 <col:100> "" ""
|-FunctionDecl 0x562770e42b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x562770e429b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562770e42a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x562770e42c28 <line:437:22>
| |-NonNullAttr 0x562770e42c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x562770e42cb8 <col:97> "" ""
|-FunctionDecl 0x562770e42eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x562770e42d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562770e42d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x562770e42f68 <line:440:22>
| `-NonNullAttr 0x562770e42fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x562770e43140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x562770e43008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562770e43080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562770e431f0 <line:443:22>
| `-NonNullAttr 0x562770e43248 <col:63, col:77> 1
|-FunctionDecl 0x562770e43538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x562770e43298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562770e43318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x562770e43390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x562770e435f0 <line:447:22>
| `-NonNullAttr 0x562770e43648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x562770e438f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x562770e436a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562770e43720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x562770e43798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562770e439b0 <col:43>
| `-NonNullAttr 0x562770e43a08 <col:84, col:98> 1
|-FunctionDecl 0x562770e43cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x562770e43a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562770e43ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x562770e43b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x562770e43d80 <line:452:22>
| `-NonNullAttr 0x562770e43dd8 <col:63, col:77> 3
|-FunctionDecl 0x562770e440e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562770e43e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562770e43ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x562770e43f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x562770e441a0 <line:456:22>
| `-NonNullAttr 0x562770e441f8 <col:63, col:80> 2 3
|-FunctionDecl 0x562770e443e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x562770e44248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562770e442c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x562770e44498 <line:458:22>
|-FunctionDecl 0x562770e44868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x562770e44560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x562770e44700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x562770e44918 <col:52, col:69> 1 2
|-FunctionDecl 0x562770e44ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x562770e449a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x562770e44a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x562770e44ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x562770e44b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x562770e44c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x562770e44e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x562770e44d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x562770e44fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x562770e45040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x562770e450e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x562770e451d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x562770e45240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x562770e45410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix001_tso.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x562770e45508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x562770e455c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x562770e45560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x562770e450c0 '__pthread_unwind_buf_t'
| |   `-Record 0x562770e45040 ''
| `-AlignedAttr 0x562770e45618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x562770e45690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x562770e457f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x562770e45858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x562770e458c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x562770e45928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x562770e45b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x562770e45a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x562770e45c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x562770e45be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x562770e45e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562770e45d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x562770e45f18 <line:487:22>
|-RecordDecl 0x562770e45f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x562770e46288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x562770e460e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x562770e46168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x562770e46338 <col:86>
| `-ReturnsTwiceAttr 0x562770e46390 <col:12> Implicit
|-FunctionDecl 0x562770e466b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562770e46460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x562770e46570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x562770e46768 <line:493:22>
| `-NonNullAttr 0x562770e467c0 <col:63, col:77> 1
|-FunctionDecl 0x562770e46938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562770e46808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562770e469e0 <line:495:22>
| `-NonNullAttr 0x562770e46a38 <col:63, col:77> 1
|-FunctionDecl 0x562770e46b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562770e46a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562770e46be8 <line:497:22>
| `-NonNullAttr 0x562770e46c40 <col:52, col:66> 1
|-FunctionDecl 0x562770e46d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562770e46c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562770e46de8 <line:499:22>
| `-NonNullAttr 0x562770e46e40 <col:52, col:66> 1
|-FunctionDecl 0x562770e47088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562770e46e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562770e46f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562770e47138 <col:36>
| `-NonNullAttr 0x562770e47190 <col:66, col:83> 1 2
|-FunctionDecl 0x562770e47290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562770e471d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562770e47338 <line:504:22>
| `-NonNullAttr 0x562770e47390 <col:52, col:66> 1
|-FunctionDecl 0x562770e47628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562770e47440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562770e474c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x562770e476d8 <line:508:22>
| `-NonNullAttr 0x562770e47730 <col:63, col:80> 1 2
|-FunctionDecl 0x562770e479f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x562770e47778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562770e477f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x562770e47878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x562770e47ab0 <line:512:22>
| `-NonNullAttr 0x562770e47b08 <col:63, col:80> 1 3
|-FunctionDecl 0x562770e47c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562770e47b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562770e47cb8 <line:514:22>
| `-NonNullAttr 0x562770e47d10 <col:63, col:77> 1
|-FunctionDecl 0x562770e47f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562770e47dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x562770e47fe0 <line:516:22>
| `-NonNullAttr 0x562770e48038 <col:63, col:77> 1
|-FunctionDecl 0x562770e48140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562770e48088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x562770e481e8 <line:518:22>
| `-NonNullAttr 0x562770e48240 <col:63, col:77> 1
|-FunctionDecl 0x562770e48468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562770e48288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562770e48308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x562770e48518 <line:522:22>
| `-NonNullAttr 0x562770e48570 <col:63, col:80> 1 2
|-FunctionDecl 0x562770e48778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562770e485b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562770e48638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x562770e48828 <line:525:22>
| `-NonNullAttr 0x562770e48880 <col:63, col:77> 1
|-FunctionDecl 0x562770e48a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562770e488c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562770e48948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x562770e48ad8 <line:528:22>
| `-NonNullAttr 0x562770e48b30 <col:63, col:80> 1 2
|-FunctionDecl 0x562770e48cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562770e48b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562770e48bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x562770e48d68 <line:530:22>
| `-NonNullAttr 0x562770e48dc0 <col:63, col:77> 1
|-FunctionDecl 0x562770e49f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562770e48e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562770e49eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x562770e4a040 <line:534:22>
| `-NonNullAttr 0x562770e4a098 <col:63, col:80> 1 2
|-FunctionDecl 0x562770e4a228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562770e4a0e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562770e4a168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x562770e4a2d8 <line:537:22>
| `-NonNullAttr 0x562770e4a330 <col:63, col:77> 1
|-FunctionDecl 0x562770e4a4d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562770e4a378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562770e4a3f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x562770e4a588 <line:541:22>
| `-NonNullAttr 0x562770e4a5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x562770e4a768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562770e4a628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562770e4a6a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x562770e4a818 <line:544:22>
| `-NonNullAttr 0x562770e4a870 <col:63, col:77> 1
|-FunctionDecl 0x562770e4aa58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x562770e4a8b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x562770e4a938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x562770e4ab08 <line:547:22>
| `-NonNullAttr 0x562770e4ab60 <col:63, col:80> 1 2
|-FunctionDecl 0x562770e4ace8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562770e4aba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562770e4ac28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x562770e4ad98 <line:550:22>
| `-NonNullAttr 0x562770e4adf0 <col:63, col:77> 1
|-FunctionDecl 0x562770e4c168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x562770e4bf10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562770e4c020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x562770e4c218 <col:29>
| `-NonNullAttr 0x562770e4c270 <col:70, col:84> 1
|-FunctionDecl 0x562770e4c3e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562770e4c2b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562770e4c490 <line:555:22>
| `-NonNullAttr 0x562770e4c4e8 <col:63, col:77> 1
|-FunctionDecl 0x562770e4c5f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562770e4c538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562770e4c698 <line:557:22>
| `-NonNullAttr 0x562770e4c6f0 <col:52, col:66> 1
|-FunctionDecl 0x562770e4c7f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562770e4c738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562770e4c898 <line:559:19>
| `-NonNullAttr 0x562770e4c8f0 <col:49, col:63> 1
|-FunctionDecl 0x562770e4cb28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562770e4c938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562770e4c9c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562770e4cbd8 <col:39>
| `-NonNullAttr 0x562770e4cc30 <col:69, col:86> 1 2
|-FunctionDecl 0x562770e4cd30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562770e4cc78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562770e4cdd8 <line:564:22>
| `-NonNullAttr 0x562770e4ce30 <col:52, col:66> 1
|-FunctionDecl 0x562770e4cf98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562770e4cee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562770e4d040 <line:566:22>
| `-NonNullAttr 0x562770e4d098 <col:52, col:66> 1
|-FunctionDecl 0x562770e4d258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562770e4d0e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562770e4d178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562770e4d308 <col:39>
| `-NonNullAttr 0x562770e4d360 <col:69, col:86> 1 2
|-FunctionDecl 0x562770e4d460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562770e4d3a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562770e4d508 <line:571:22>
| `-NonNullAttr 0x562770e4d560 <col:52, col:66> 1
|-FunctionDecl 0x562770e4d748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x562770e4d610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x562770e4d7f0 <line:573:22>
| `-NonNullAttr 0x562770e4d848 <col:63, col:77> 1
|-FunctionDecl 0x562770e4d950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x562770e4d898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x562770e4d9f8 <line:575:22>
| `-NonNullAttr 0x562770e4da50 <col:63, col:77> 1
|-FunctionDecl 0x562770e4dc78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562770e4da98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x562770e4db18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x562770e4dd28 <line:579:22>
| `-NonNullAttr 0x562770e4dd80 <col:63, col:80> 1 2
|-FunctionDecl 0x562770e4dfa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x562770e4ddc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x562770e4de48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x562770e4e058 <line:582:22>
| `-NonNullAttr 0x562770e4e0b0 <col:63, col:77> 1
|-FunctionDecl 0x562770e4e258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562770e4e0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x562770e4e178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x562770e4e308 <line:586:22>
| `-NonNullAttr 0x562770e4e360 <col:63, col:80> 1 2
|-FunctionDecl 0x562770e4e4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x562770e4e3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x562770e4e428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x562770e4e598 <col:36>
| `-NonNullAttr 0x562770e4e5f0 <col:77, col:91> 1
|-FunctionDecl 0x562770e4e928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x562770e4e6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562770e4e7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x562770e4e9d8 <line:591:22>
| `-NonNullAttr 0x562770e4ea30 <col:63, col:77> 1
|-FunctionDecl 0x562770e4eba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562770e4ea78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562770e4ec50 <line:593:22>
| `-NonNullAttr 0x562770e4eca8 <col:63, col:77> 1
|-FunctionDecl 0x562770e4edb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562770e4ecf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562770e4ee58 <line:595:22>
| `-NonNullAttr 0x562770e4eeb0 <col:52, col:66> 1
|-FunctionDecl 0x562770e4efc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562770e4ef10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562770e4f070 <line:597:22>
| `-NonNullAttr 0x562770e4f0c8 <col:52, col:66> 1
|-FunctionDecl 0x562770e4f2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x562770e4f118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562770e4f190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x562770e4f3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x562770e4f6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562770e4f428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562770e4f4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562770e4f530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x562770e4f790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x562770e4f9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x562770e4f870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x562770e4fa50 <line:606:22>
| `-NonNullAttr 0x562770e4faa8 <col:63, col:77> 1
|-FunctionDecl 0x562770e4fbb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x562770e4faf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x562770e4fc58 <line:608:22>
| `-NonNullAttr 0x562770e4fcb0 <col:63, col:77> 1
|-FunctionDecl 0x562770e4ff10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562770e4fcf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x562770e4fd78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x562770e4ffc0 <line:612:22>
| `-NonNullAttr 0x562770e50018 <col:63, col:80> 1 2
|-FunctionDecl 0x562770e50228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x562770e50068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x562770e500e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x562770e502d8 <col:37>
| `-NonNullAttr 0x562770e50330 <col:78, col:92> 1
|-FunctionDecl 0x562770e50548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x562770e50378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x562770e50420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x562770e505f8 <line:618:22>
| `-NonNullAttr 0x562770e50650 <col:63, col:80> 1 2
|-FunctionDecl 0x562770e50818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x562770e50698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x562770e50710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x562770e508c8 <line:621:22>
| `-NonNullAttr 0x562770e50920 <col:63, col:77> 1
|-FunctionDecl 0x562770e50bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x562770e50a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x562770e50a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x562770e50c78 <line:623:22>
| `-NonNullAttr 0x562770e50cd0 <col:63, col:77> 1
|-FunctionDecl 0x562770e50e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562770e50d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562770e50f20 <line:625:22>
| `-NonNullAttr 0x562770e50f78 <col:63, col:77> 1
|-FunctionDecl 0x562770e51080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562770e50fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562770e51128 <line:627:22>
| `-NonNullAttr 0x562770e51180 <col:52, col:66> 1
|-FunctionDecl 0x562770e51280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562770e511c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562770e51328 <line:629:22>
| `-NonNullAttr 0x562770e51380 <col:52, col:66> 1
|-FunctionDecl 0x562770e51480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562770e513c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562770e51528 <line:631:22>
| `-NonNullAttr 0x562770e51580 <col:52, col:66> 1
|-FunctionDecl 0x562770e51958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x562770e51660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x562770e51770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x562770e517f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x562770e51a10 <line:635:22>
| `-NonNullAttr 0x562770e51a68 <col:63, col:77> 1
|-FunctionDecl 0x562770e51be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x562770e51ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x562770e51c90 <line:637:22>
| `-NonNullAttr 0x562770e51ce8 <col:63, col:77> 1
|-FunctionDecl 0x562770e51df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x562770e51d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x562770e51e98 <line:639:22>
| `-NonNullAttr 0x562770e51ef0 <col:52, col:66> 1
|-FunctionDecl 0x562770e520e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x562770e51fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x562770e52190 <line:641:22>
| `-NonNullAttr 0x562770e521e8 <col:63, col:77> 1
|-FunctionDecl 0x562770e522f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x562770e52238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x562770e52398 <line:643:22>
| `-NonNullAttr 0x562770e523f0 <col:63, col:77> 1
|-FunctionDecl 0x562770e52618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562770e52438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x562770e524b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x562770e526c8 <line:647:22>
| `-NonNullAttr 0x562770e52720 <col:63, col:80> 1 2
|-FunctionDecl 0x562770e52928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x562770e52768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x562770e527e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x562770e529d8 <line:650:22>
| `-NonNullAttr 0x562770e52a30 <col:63, col:77> 1
|-FunctionDecl 0x562770e52d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x562770e52b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x562770e52c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x562770e52e28 <line:653:22>
| `-NonNullAttr 0x562770e52e80 <col:63, col:77> 1
|-FunctionDecl 0x562770e52fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x562770e52ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x562770e53090 <col:69>
|-FunctionDecl 0x562770e53208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x562770e530f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x562770e532b0 <col:72>
|-FunctionDecl 0x562770e534e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x562770e53318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x562770e533c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x562770e53598 <col:44>
|-FunctionDecl 0x562770e537b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x562770e53600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562770e53678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x562770e53868 <line:660:22>
| `-NonNullAttr 0x562770e538c0 <col:63, col:77> 2
|-FunctionDecl 0x562770e53d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x562770e539a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x562770e53ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x562770e53bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x562770e53dc0 <col:47>
|-FunctionDecl 0x562770e54f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x562770e53e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562770e550b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x562770e55020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562770e55210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x562770e55178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562770e552d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x562770e55398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x562770e55458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x562770e55510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x562770e55590 prev 0x562770e55510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x562770e555f8 <col:24> 'int' 0
|-VarDecl 0x562770e55630 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x562770e556b0 prev 0x562770e55630 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x562770e55718 <col:27> 'int' 0
|-VarDecl 0x562770e55750 <line:675:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x562770e557d0 prev 0x562770e55750 <line:676:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x562770e55838 <col:27> 'int' 0
|-VarDecl 0x562770e55870 <line:677:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x562770e558f0 prev 0x562770e55870 <line:678:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x562770e55958 <col:27> 'int' 0
|-VarDecl 0x562770e55990 <line:679:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x562770e55a10 prev 0x562770e55990 <line:680:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x562770e55a78 <col:27> 'int' 0
|-VarDecl 0x562770e55ab0 <line:681:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x562770e55b30 prev 0x562770e55ab0 <line:682:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x562770e55b98 <col:27> 'int' 0
|-VarDecl 0x562770e55bd0 <line:683:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x562770e55c50 prev 0x562770e55bd0 <line:684:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x562770e55cb8 <col:27> 'int' 0
|-VarDecl 0x562770e55ce8 <line:685:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x562770e55d60 <line:686:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x562770e55de0 <line:687:1, col:5> col:5 used x 'int'
|-VarDecl 0x562770e55e60 prev 0x562770e55de0 <line:688:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x562770e55ec8 <col:9> 'int' 0
|-VarDecl 0x562770e55f70 <line:689:1, col:5> col:5 used y 'int'
|-VarDecl 0x562770e55ff0 prev 0x562770e55f70 <line:690:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x562770e56058 <col:9> 'int' 0
|-VarDecl 0x562770e56088 <line:691:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x562770e56108 <line:692:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x562770e56180 <line:693:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x562770e561f8 <line:694:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x562770e56270 <line:695:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x562770e562e8 <line:696:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x562770e56360 <line:697:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x562770e563d8 <line:698:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x562770e56450 <line:699:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x562770e564c8 <line:700:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x562770e56540 <line:701:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x562770e565c0 <line:702:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x562770e56640 <line:703:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x562770e566b8 <line:704:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x562770e56738 <line:705:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x562770e567b0 <line:706:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x562770e56830 <line:707:1, col:5> col:5 used z 'int'
|-VarDecl 0x562770e568b0 prev 0x562770e56830 <line:708:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x562770e56918 <col:9> 'int' 0
|-VarDecl 0x562770e56948 <line:709:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x562770e569c0 <line:710:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x562770e56ad8 prev 0x562770e54f60 <line:711:1, line:728:1> line:711:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x562770e56a40 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562770e571d8 <line:712:1, line:728:1>
|   |-CallExpr 0x562770e56be8 <line:713:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562770e56bd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e56b80 <col:3> 'void ()' Function 0x562770dfc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562770e56c48 <line:714:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562770e56c08 <col:3> 'int' lvalue Var 0x562770e568b0 'z' 'int'
|   | `-IntegerLiteral 0x562770e56c28 <col:7> 'int' 1
|   |-CallExpr 0x562770e56ca0 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562770e56c88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e56c68 <col:3> 'void ()' Function 0x562770dfc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562770e56cf8 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562770e56ce0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e56cc0 <col:3> 'void ()' Function 0x562770dfc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562770e56d70 <line:717:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562770e56d18 <col:3> 'int' lvalue Var 0x562770e556b0 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x562770e56d58 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562770e56d38 <col:25> 'int' lvalue Var 0x562770e568b0 'z' 'int'
|   |-CallExpr 0x562770e56dc8 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562770e56db0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e56d90 <col:3> 'void ()' Function 0x562770dfc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562770e56e20 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562770e56e08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e56de8 <col:3> 'void ()' Function 0x562770dfc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562770e56e98 <line:720:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562770e56e40 <col:3> 'int' lvalue Var 0x562770e557d0 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x562770e56e80 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562770e56e60 <col:25> 'int' lvalue Var 0x562770e55e60 'x' 'int'
|   |-CallExpr 0x562770e56ef0 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562770e56ed8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e56eb8 <col:3> 'void ()' Function 0x562770dfc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562770e56f48 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562770e56f30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e56f10 <col:3> 'void ()' Function 0x562770dfc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x562770e56fb8 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562770e56fa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e56f80 <col:3> 'void ()' Function 0x562770dfc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562770e57010 <line:724:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562770e56ff8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e56fd8 <col:3> 'void ()' Function 0x562770dfc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562770e570c8 <line:725:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562770e57030 <col:3> 'int' lvalue Var 0x562770e55590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562770e570a8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562770e57090 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562770e57050 <col:22> 'int' lvalue Var 0x562770e55590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562770e57070 <col:41> 'int' 1
|   |-CallExpr 0x562770e57120 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562770e57108 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e570e8 <col:3> 'void ()' Function 0x562770dfc410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562770e571c8 <line:727:3, col:36>
|     `-CallExpr 0x562770e571a8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562770e57190 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562770e57140 <col:10> 'void *(void)' Function 0x562770dfbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562770e57310 prev 0x562770e550b8 <line:729:1, line:759:1> line:729:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x562770e57278 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562770e5a320 <line:730:1, line:759:1>
|   |-CallExpr 0x562770e573f0 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562770e573d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e573b8 <col:3> 'void ()' Function 0x562770dfc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562770e57450 <line:732:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562770e57410 <col:3> 'int' lvalue Var 0x562770e55e60 'x' 'int'
|   | `-IntegerLiteral 0x562770e57430 <col:7> 'int' 1
|   |-CallExpr 0x562770e574a8 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562770e57490 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e57470 <col:3> 'void ()' Function 0x562770dfc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562770e57500 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562770e574e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e574c8 <col:3> 'void ()' Function 0x562770dfc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562770e57578 <line:735:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562770e57520 <col:3> 'int' lvalue Var 0x562770e558f0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x562770e57560 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562770e57540 <col:25> 'int' lvalue Var 0x562770e55e60 'x' 'int'
|   |-CallExpr 0x562770e575d0 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562770e575b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e57598 <col:3> 'void ()' Function 0x562770dfc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562770e57628 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562770e57610 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e575f0 <col:3> 'void ()' Function 0x562770dfc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562770e576d8 <line:738:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x562770e57648 <col:3> '_Bool' lvalue Var 0x562770e56948 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x562770e576c0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x562770e576a0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x562770e57688 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x562770e57668 <col:19> 'void *(void)' Function 0x562770dfbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x562770e57788 <line:739:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x562770e576f8 <col:3> '_Bool' lvalue Var 0x562770e569c0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x562770e57770 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x562770e57750 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x562770e57738 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x562770e57718 <col:19> 'void *(void)' Function 0x562770dfbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x562770e57800 <line:740:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x562770e577a8 <col:3> '_Bool' lvalue Var 0x562770e56088 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x562770e577e8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562770e577c8 <col:21> '_Bool' lvalue Var 0x562770e569c0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x562770e57878 <line:741:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562770e57820 <col:3> 'int' lvalue Var 0x562770e56108 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x562770e57860 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562770e57840 <col:15> 'int' lvalue Var 0x562770e55ff0 'y' 'int'
|   |-BinaryOperator 0x562770e57cb0 <line:742:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x562770e57898 <col:3> 'int' lvalue Var 0x562770e55ff0 'y' 'int'
|   | `-ConditionalOperator 0x562770e57c80 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x562770e57aa8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x562770e579c8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x562770e578f0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x562770e578d8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x562770e578b8 <col:8> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x562770e579a8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x562770e57940 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x562770e57928 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x562770e57908 <col:27> '_Bool' lvalue Var 0x562770e56270 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x562770e57990 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x562770e57978 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x562770e57958 <col:46> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x562770e57a88 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x562770e57a20 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x562770e57a08 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x562770e579e8 <col:65> '_Bool' lvalue Var 0x562770e56270 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x562770e57a70 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x562770e57a58 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x562770e57a38 <col:84> '_Bool' lvalue Var 0x562770e56450 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x562770e57c68 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562770e57ac8 <col:101> 'int' lvalue Var 0x562770e55ff0 'y' 'int'
|   |   `-ParenExpr 0x562770e57c48 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x562770e57c18 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x562770e57b88 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562770e57b40 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562770e57b28 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562770e57ae8 <col:106> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562770e57b70 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562770e57b58 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562770e57b08 <col:124> '_Bool' lvalue Var 0x562770e56270 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x562770e57be8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562770e57ba8 <col:141> 'int' lvalue Var 0x562770e56640 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x562770e57c00 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562770e57bc8 <col:153> 'int' lvalue Var 0x562770e56738 'y$w_buff1' 'int'
|   |-BinaryOperator 0x562770e581d0 <line:743:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x562770e57cd0 <col:3> 'int' lvalue Var 0x562770e56640 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x562770e581a0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562770e58170 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562770e58158 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562770e57cf0 <col:15> '_Bool' lvalue Var 0x562770e569c0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562770e58188 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562770e57d10 <col:31> 'int' lvalue Var 0x562770e56640 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x562770e58138 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x562770e58108 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562770e57f20 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x562770e57e40 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562770e57d68 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562770e57d50 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x562770e57d30 <col:45> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x562770e57e20 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x562770e57db8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x562770e57da0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562770e57d80 <col:64> '_Bool' lvalue Var 0x562770e56270 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x562770e57e08 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x562770e57df0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x562770e57dd0 <col:83> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x562770e57f00 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x562770e57e98 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562770e57e80 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562770e57e60 <col:102> '_Bool' lvalue Var 0x562770e56270 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x562770e57ee8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x562770e57ed0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x562770e57eb0 <col:121> '_Bool' lvalue Var 0x562770e56450 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x562770e580f0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562770e57f40 <col:138> 'int' lvalue Var 0x562770e56640 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x562770e580d0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562770e580a0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x562770e58010 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x562770e57fc8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x562770e57fb0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562770e57f60 <col:151> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x562770e57ff8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x562770e57fe0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562770e57f90 <col:169> '_Bool' lvalue Var 0x562770e56270 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x562770e58070 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x562770e58030 <col:186> 'int' lvalue Var 0x562770e56640 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x562770e58088 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562770e58050 <col:198> 'int' lvalue Var 0x562770e56640 'y$w_buff0' 'int'
|   |-BinaryOperator 0x562770e586e0 <line:744:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x562770e581f0 <col:3> 'int' lvalue Var 0x562770e56738 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x562770e586b0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562770e58680 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562770e58668 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562770e58210 <col:15> '_Bool' lvalue Var 0x562770e569c0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562770e58698 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562770e58230 <col:31> 'int' lvalue Var 0x562770e56738 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x562770e58648 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x562770e58618 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562770e58440 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x562770e58360 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562770e58288 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562770e58270 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x562770e58250 <col:45> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x562770e58340 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x562770e582d8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x562770e582c0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562770e582a0 <col:64> '_Bool' lvalue Var 0x562770e56270 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x562770e58328 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x562770e58310 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x562770e582f0 <col:83> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x562770e58420 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x562770e583b8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562770e583a0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562770e58380 <col:102> '_Bool' lvalue Var 0x562770e56270 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x562770e58408 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x562770e583f0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x562770e583d0 <col:121> '_Bool' lvalue Var 0x562770e56450 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x562770e58600 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562770e58460 <col:138> 'int' lvalue Var 0x562770e56738 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x562770e585e0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562770e585b0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x562770e58520 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x562770e584d8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x562770e584c0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562770e58480 <col:151> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x562770e58508 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x562770e584f0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562770e584a0 <col:169> '_Bool' lvalue Var 0x562770e56270 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x562770e58580 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x562770e58540 <col:186> 'int' lvalue Var 0x562770e56738 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x562770e58598 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562770e58560 <col:198> 'int' lvalue Var 0x562770e56738 'y$w_buff1' 'int'
|   |-BinaryOperator 0x562770e58c88 <line:745:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x562770e58700 <col:3> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562770e58c70 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562770e58c40 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x562770e58bf8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562770e58be0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562770e58720 <col:20> '_Bool' lvalue Var 0x562770e569c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562770e58c28 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562770e58c10 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562770e58740 <col:36> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x562770e58bc0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x562770e58b90 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x562770e58950 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562770e58870 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562770e58798 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562770e58780 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562770e58760 <col:55> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562770e58850 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562770e587e8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562770e587d0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562770e587b0 <col:74> '_Bool' lvalue Var 0x562770e56270 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x562770e58838 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562770e58820 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562770e58800 <col:93> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562770e58930 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562770e588c8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562770e588b0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562770e58890 <col:112> '_Bool' lvalue Var 0x562770e56270 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x562770e58918 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562770e58900 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562770e588e0 <col:131> '_Bool' lvalue Var 0x562770e56450 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x562770e58b78 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562770e58b60 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562770e58970 <col:148> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x562770e58b40 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x562770e58b10 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x562770e58a30 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562770e589e8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562770e589d0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562770e58990 <col:166> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562770e58a18 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562770e58a00 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562770e589b0 <col:184> '_Bool' lvalue Var 0x562770e56270 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x562770e58ac8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562770e58a80 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562770e58a50 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562770e58af8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562770e58ae0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562770e58aa8 <col:212> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562770e59260 <line:746:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x562770e58ca8 <col:3> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562770e59248 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562770e59218 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x562770e591d0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562770e591b8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562770e58cc8 <col:20> '_Bool' lvalue Var 0x562770e569c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562770e59200 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562770e591e8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562770e58ce8 <col:36> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x562770e59198 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562770e59168 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x562770e58ef8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562770e58e18 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562770e58d40 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562770e58d28 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562770e58d08 <col:55> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562770e58df8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562770e58d90 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562770e58d78 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562770e58d58 <col:74> '_Bool' lvalue Var 0x562770e56270 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x562770e58de0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562770e58dc8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562770e58da8 <col:93> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562770e58ed8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562770e58e70 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562770e58e58 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562770e58e38 <col:112> '_Bool' lvalue Var 0x562770e56270 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x562770e58ec0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562770e58ea8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562770e58e88 <col:131> '_Bool' lvalue Var 0x562770e56450 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x562770e59150 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562770e59138 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562770e58f18 <col:148> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x562770e59118 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x562770e590e8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x562770e58fe8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562770e58fa0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562770e58f78 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562770e58f38 <col:166> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562770e58fd0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562770e58fb8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562770e58f58 <col:184> '_Bool' lvalue Var 0x562770e56270 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x562770e590b8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562770e59038 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562770e59008 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562770e590d0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x562770e59090 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562770e59060 <col:219> 'int' 0
|   |-BinaryOperator 0x562770e59808 <line:747:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x562770e59280 <col:3> '_Bool' lvalue Var 0x562770e56270 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562770e597f0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562770e597c0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x562770e59778 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562770e59760 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562770e592a0 <col:20> '_Bool' lvalue Var 0x562770e569c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562770e597a8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562770e59790 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562770e592c0 <col:36> '_Bool' lvalue Var 0x562770e56270 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x562770e59740 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x562770e59710 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x562770e594d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562770e593f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562770e59318 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562770e59300 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562770e592e0 <col:55> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562770e593d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562770e59368 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562770e59350 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562770e59330 <col:74> '_Bool' lvalue Var 0x562770e56270 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x562770e593b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562770e593a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562770e59380 <col:93> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562770e594b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562770e59448 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562770e59430 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562770e59410 <col:112> '_Bool' lvalue Var 0x562770e56270 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x562770e59498 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562770e59480 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562770e59460 <col:131> '_Bool' lvalue Var 0x562770e56450 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x562770e596f8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562770e596e0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562770e594f0 <col:148> '_Bool' lvalue Var 0x562770e56270 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x562770e596c0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x562770e59690 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x562770e595b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562770e59568 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562770e59550 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562770e59510 <col:166> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562770e59598 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562770e59580 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562770e59530 <col:184> '_Bool' lvalue Var 0x562770e56270 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x562770e59648 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562770e59600 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562770e595d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562770e59678 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562770e59660 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562770e59628 <col:212> '_Bool' lvalue Var 0x562770e56270 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x562770e59dd0 <line:748:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x562770e59828 <col:3> '_Bool' lvalue Var 0x562770e56450 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562770e59db8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562770e59d88 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x562770e59d40 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562770e59d28 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562770e59848 <col:20> '_Bool' lvalue Var 0x562770e569c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562770e59d70 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562770e59d58 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562770e59868 <col:36> '_Bool' lvalue Var 0x562770e56450 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x562770e59d08 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562770e59cd8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x562770e59a78 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562770e59998 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562770e598c0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562770e598a8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562770e59888 <col:55> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562770e59978 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562770e59910 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562770e598f8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562770e598d8 <col:74> '_Bool' lvalue Var 0x562770e56270 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x562770e59960 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562770e59948 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562770e59928 <col:93> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562770e59a58 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562770e599f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562770e599d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562770e599b8 <col:112> '_Bool' lvalue Var 0x562770e56270 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x562770e59a40 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562770e59a28 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562770e59a08 <col:131> '_Bool' lvalue Var 0x562770e56450 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x562770e59cc0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562770e59ca8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562770e59a98 <col:148> '_Bool' lvalue Var 0x562770e56450 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x562770e59c88 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x562770e59c58 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x562770e59b58 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562770e59b10 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562770e59af8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562770e59ab8 <col:166> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562770e59b40 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562770e59b28 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562770e59ad8 <col:184> '_Bool' lvalue Var 0x562770e56270 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x562770e59c28 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562770e59ba8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562770e59b78 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562770e59c40 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x562770e59c00 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562770e59bd0 <col:219> 'int' 0
|   |-BinaryOperator 0x562770e59e48 <line:749:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562770e59df0 <col:3> 'int' lvalue Var 0x562770e55a10 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x562770e59e30 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562770e59e10 <col:25> 'int' lvalue Var 0x562770e55ff0 'y' 'int'
|   |-BinaryOperator 0x562770e59f78 <line:750:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x562770e59e68 <col:3> 'int' lvalue Var 0x562770e55ff0 'y' 'int'
|   | `-ConditionalOperator 0x562770e59f48 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x562770e59f00 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562770e59ee8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562770e59e88 <col:7> '_Bool' lvalue Var 0x562770e56088 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x562770e59f18 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562770e59ea8 <col:25> 'int' lvalue Var 0x562770e56108 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x562770e59f30 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x562770e59ec8 <col:37> 'int' lvalue Var 0x562770e55ff0 'y' 'int'
|   |-BinaryOperator 0x562770e5a028 <line:751:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x562770e59fb0 <col:3> '_Bool' lvalue Var 0x562770e56088 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x562770e5a000 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562770e59fd0 <col:28> 'int' 0
|   |-CallExpr 0x562770e5a080 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562770e5a068 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e5a048 <col:3> 'void ()' Function 0x562770dfc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562770e5a0d8 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562770e5a0c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e5a0a0 <col:3> 'void ()' Function 0x562770dfc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x562770e5a130 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562770e5a118 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e5a0f8 <col:3> 'void ()' Function 0x562770dfc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562770e5a188 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562770e5a170 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e5a150 <col:3> 'void ()' Function 0x562770dfc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562770e5a240 <line:756:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562770e5a1a8 <col:3> 'int' lvalue Var 0x562770e55590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562770e5a220 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562770e5a208 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562770e5a1c8 <col:22> 'int' lvalue Var 0x562770e55590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562770e5a1e8 <col:41> 'int' 1
|   |-CallExpr 0x562770e5a298 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562770e5a280 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e5a260 <col:3> 'void ()' Function 0x562770dfc410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562770e5a310 <line:758:3, col:36>
|     `-CallExpr 0x562770e5a2f0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562770e5a2d8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562770e5a2b8 <col:10> 'void *(void)' Function 0x562770dfbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562770e5a4c0 prev 0x562770e55210 <line:760:1, line:804:1> line:760:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x562770e5a428 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562770e5e770 <line:761:1, line:804:1>
|   |-CallExpr 0x562770e5a5a0 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562770e5a588 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e5a568 <col:3> 'void ()' Function 0x562770dfc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562770e5a618 <line:763:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562770e5a5c0 <col:3> 'int' lvalue Var 0x562770e56738 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x562770e5a600 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562770e5a5e0 <col:15> 'int' lvalue Var 0x562770e56640 'y$w_buff0' 'int'
|   |-BinaryOperator 0x562770e5a678 <line:764:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562770e5a638 <col:3> 'int' lvalue Var 0x562770e56640 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x562770e5a658 <col:15> 'int' 1
|   |-BinaryOperator 0x562770e5a6f0 <line:765:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562770e5a698 <col:3> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562770e5a6d8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562770e5a6b8 <col:20> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562770e5a788 <line:766:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x562770e5a710 <col:3> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x562770e5a760 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562770e5a730 <col:27> 'int' 1
|   |-CallExpr 0x562770e5a908 <line:767:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x562770e5a8f0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x562770e5a7a8 <col:3> 'void (int)' Function 0x562770dfc0d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x562770e5a8a8 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x562770e5a888 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x562770e5a868 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x562770e5a820 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x562770e5a808 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x562770e5a7c8 <col:23> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x562770e5a850 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x562770e5a838 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x562770e5a7e8 <col:41> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562770e5a988 <line:768:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562770e5a930 <col:3> '_Bool' lvalue Var 0x562770e56360 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x562770e5a970 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562770e5a950 <col:20> '_Bool' lvalue Var 0x562770e56180 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x562770e5aa00 <line:769:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562770e5a9a8 <col:3> '_Bool' lvalue Var 0x562770e563d8 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562770e5a9e8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562770e5a9c8 <col:20> '_Bool' lvalue Var 0x562770e561f8 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x562770e5aa78 <line:770:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562770e5aa20 <col:3> '_Bool' lvalue Var 0x562770e56450 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562770e5aa60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562770e5aa40 <col:20> '_Bool' lvalue Var 0x562770e56270 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x562770e5aaf0 <line:771:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562770e5aa98 <col:3> '_Bool' lvalue Var 0x562770e564c8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562770e5aad8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562770e5aab8 <col:20> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x562770e5ab88 <line:772:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x562770e5ab10 <col:3> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x562770e5ab60 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562770e5ab30 <col:27> 'int' 1
|   |-CallExpr 0x562770e5abe0 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562770e5abc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e5aba8 <col:3> 'void ()' Function 0x562770dfc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562770e5ac38 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562770e5ac20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e5ac00 <col:3> 'void ()' Function 0x562770dfc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562770e5ace8 <line:775:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x562770e5ac58 <col:3> '_Bool' lvalue Var 0x562770e56948 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x562770e5acd0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x562770e5acb0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x562770e5ac98 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x562770e5ac78 <col:19> 'void *(void)' Function 0x562770dfbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x562770e5ad98 <line:776:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x562770e5ad08 <col:3> '_Bool' lvalue Var 0x562770e569c0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x562770e5ad80 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x562770e5ad60 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x562770e5ad48 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x562770e5ad28 <col:19> 'void *(void)' Function 0x562770dfbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x562770e5ae10 <line:777:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x562770e5adb8 <col:3> '_Bool' lvalue Var 0x562770e56088 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x562770e5adf8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562770e5add8 <col:21> '_Bool' lvalue Var 0x562770e569c0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x562770e5ae88 <line:778:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562770e5ae30 <col:3> 'int' lvalue Var 0x562770e56108 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x562770e5ae70 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562770e5ae50 <col:15> 'int' lvalue Var 0x562770e55ff0 'y' 'int'
|   |-BinaryOperator 0x562770e5b2e0 <line:779:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x562770e5aea8 <col:3> 'int' lvalue Var 0x562770e55ff0 'y' 'int'
|   | `-ConditionalOperator 0x562770e5b2b0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x562770e5b0d8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x562770e5aff8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x562770e5af00 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x562770e5aee8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x562770e5aec8 <col:8> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x562770e5afd8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x562770e5af50 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x562770e5af38 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x562770e5af18 <col:27> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x562770e5afc0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x562770e5af88 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x562770e5af68 <col:46> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x562770e5b0b8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x562770e5b050 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x562770e5b038 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x562770e5b018 <col:65> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x562770e5b0a0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x562770e5b088 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x562770e5b068 <col:84> '_Bool' lvalue Var 0x562770e564c8 'y$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x562770e5b298 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562770e5b0f8 <col:101> 'int' lvalue Var 0x562770e55ff0 'y' 'int'
|   |   `-ParenExpr 0x562770e5b278 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x562770e5b248 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x562770e5b1b8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562770e5b170 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562770e5b158 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562770e5b118 <col:106> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562770e5b1a0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562770e5b188 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562770e5b138 <col:124> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x562770e5b218 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562770e5b1d8 <col:141> 'int' lvalue Var 0x562770e56640 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x562770e5b230 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562770e5b1f8 <col:153> 'int' lvalue Var 0x562770e56738 'y$w_buff1' 'int'
|   |-BinaryOperator 0x562770e5b7f0 <line:780:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x562770e5b300 <col:3> 'int' lvalue Var 0x562770e56640 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x562770e5b7c0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562770e5b790 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562770e5b778 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562770e5b320 <col:15> '_Bool' lvalue Var 0x562770e569c0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562770e5b7a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562770e5b340 <col:31> 'int' lvalue Var 0x562770e56640 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x562770e5b758 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x562770e5b728 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562770e5b550 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x562770e5b470 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562770e5b398 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562770e5b380 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x562770e5b360 <col:45> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x562770e5b450 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x562770e5b3e8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x562770e5b3d0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562770e5b3b0 <col:64> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x562770e5b438 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x562770e5b420 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x562770e5b400 <col:83> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x562770e5b530 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x562770e5b4c8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562770e5b4b0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562770e5b490 <col:102> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x562770e5b518 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x562770e5b500 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x562770e5b4e0 <col:121> '_Bool' lvalue Var 0x562770e564c8 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x562770e5b710 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562770e5b570 <col:138> 'int' lvalue Var 0x562770e56640 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x562770e5b6f0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562770e5b6c0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x562770e5b630 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x562770e5b5e8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x562770e5b5d0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562770e5b590 <col:151> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x562770e5b618 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x562770e5b600 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562770e5b5b0 <col:169> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x562770e5b690 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x562770e5b650 <col:186> 'int' lvalue Var 0x562770e56640 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x562770e5b6a8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562770e5b670 <col:198> 'int' lvalue Var 0x562770e56640 'y$w_buff0' 'int'
|   |-BinaryOperator 0x562770e5bd00 <line:781:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x562770e5b810 <col:3> 'int' lvalue Var 0x562770e56738 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x562770e5bcd0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562770e5bca0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562770e5bc88 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562770e5b830 <col:15> '_Bool' lvalue Var 0x562770e569c0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562770e5bcb8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562770e5b850 <col:31> 'int' lvalue Var 0x562770e56738 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x562770e5bc68 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x562770e5bc38 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562770e5ba60 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x562770e5b980 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562770e5b8a8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562770e5b890 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x562770e5b870 <col:45> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x562770e5b960 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x562770e5b8f8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x562770e5b8e0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562770e5b8c0 <col:64> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x562770e5b948 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x562770e5b930 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x562770e5b910 <col:83> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x562770e5ba40 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x562770e5b9d8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562770e5b9c0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562770e5b9a0 <col:102> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x562770e5ba28 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x562770e5ba10 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x562770e5b9f0 <col:121> '_Bool' lvalue Var 0x562770e564c8 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x562770e5bc20 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562770e5ba80 <col:138> 'int' lvalue Var 0x562770e56738 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x562770e5bc00 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562770e5bbd0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x562770e5bb40 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x562770e5baf8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x562770e5bae0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562770e5baa0 <col:151> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x562770e5bb28 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x562770e5bb10 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562770e5bac0 <col:169> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x562770e5bba0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x562770e5bb60 <col:186> 'int' lvalue Var 0x562770e56738 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x562770e5bbb8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562770e5bb80 <col:198> 'int' lvalue Var 0x562770e56738 'y$w_buff1' 'int'
|   |-BinaryOperator 0x562770e5c2c8 <line:782:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x562770e5bd20 <col:3> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562770e5c2b0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562770e5c280 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x562770e5c238 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562770e5c220 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562770e5bd40 <col:20> '_Bool' lvalue Var 0x562770e569c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562770e5c268 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562770e5c250 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562770e5bd60 <col:36> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x562770e5c200 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x562770e5c1d0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x562770e5bf70 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562770e5be90 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562770e5bdb8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562770e5bda0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562770e5bd80 <col:55> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562770e5be70 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562770e5be08 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562770e5bdf0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562770e5bdd0 <col:74> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x562770e5be58 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562770e5be40 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562770e5be20 <col:93> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562770e5bf50 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562770e5bee8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562770e5bed0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562770e5beb0 <col:112> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x562770e5bf38 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562770e5bf20 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562770e5bf00 <col:131> '_Bool' lvalue Var 0x562770e564c8 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x562770e5c1b8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562770e5c1a0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562770e5bf90 <col:148> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x562770e5c180 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x562770e5c150 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x562770e5c070 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562770e5c028 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562770e5c010 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562770e5bfd0 <col:166> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562770e5c058 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562770e5c040 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562770e5bff0 <col:184> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x562770e5c108 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562770e5c0c0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562770e5c090 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562770e5c138 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562770e5c120 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562770e5c0e8 <col:212> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562770e5c890 <line:783:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x562770e5c2e8 <col:3> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562770e5c878 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562770e5c848 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x562770e5c800 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562770e5c7e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562770e5c308 <col:20> '_Bool' lvalue Var 0x562770e569c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562770e5c830 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562770e5c818 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562770e5c328 <col:36> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x562770e5c7c8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562770e5c798 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x562770e5c538 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562770e5c458 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562770e5c380 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562770e5c368 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562770e5c348 <col:55> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562770e5c438 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562770e5c3d0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562770e5c3b8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562770e5c398 <col:74> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x562770e5c420 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562770e5c408 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562770e5c3e8 <col:93> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562770e5c518 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562770e5c4b0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562770e5c498 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562770e5c478 <col:112> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x562770e5c500 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562770e5c4e8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562770e5c4c8 <col:131> '_Bool' lvalue Var 0x562770e564c8 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x562770e5c780 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562770e5c768 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562770e5c558 <col:148> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x562770e5c748 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x562770e5c718 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x562770e5c618 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562770e5c5d0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562770e5c5b8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562770e5c578 <col:166> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562770e5c600 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562770e5c5e8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562770e5c598 <col:184> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x562770e5c6e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562770e5c668 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562770e5c638 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562770e5c700 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x562770e5c6c0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562770e5c690 <col:219> 'int' 0
|   |-BinaryOperator 0x562770e5ce38 <line:784:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x562770e5c8b0 <col:3> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562770e5ce20 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562770e5cdf0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x562770e5cda8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562770e5cd90 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562770e5c8d0 <col:20> '_Bool' lvalue Var 0x562770e569c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562770e5cdd8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562770e5cdc0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562770e5c8f0 <col:36> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x562770e5cd70 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x562770e5cd40 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x562770e5cb00 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562770e5ca20 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562770e5c948 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562770e5c930 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562770e5c910 <col:55> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562770e5ca00 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562770e5c998 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562770e5c980 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562770e5c960 <col:74> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x562770e5c9e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562770e5c9d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562770e5c9b0 <col:93> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562770e5cae0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562770e5ca78 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562770e5ca60 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562770e5ca40 <col:112> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x562770e5cac8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562770e5cab0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562770e5ca90 <col:131> '_Bool' lvalue Var 0x562770e564c8 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x562770e5cd28 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562770e5cd10 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562770e5cb20 <col:148> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x562770e5ccf0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x562770e5ccc0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x562770e5cbe0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562770e5cb98 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562770e5cb80 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562770e5cb40 <col:166> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562770e5cbc8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562770e5cbb0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562770e5cb60 <col:184> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x562770e5cc78 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562770e5cc30 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562770e5cc00 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562770e5cca8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562770e5cc90 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562770e5cc58 <col:212> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x562770e5d418 <line:785:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x562770e5ce58 <col:3> '_Bool' lvalue Var 0x562770e564c8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562770e5d400 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562770e5d3d0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x562770e5d388 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562770e5d370 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562770e5ce78 <col:20> '_Bool' lvalue Var 0x562770e569c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562770e5d3b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562770e5d3a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562770e5ce98 <col:36> '_Bool' lvalue Var 0x562770e564c8 'y$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x562770e5d350 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562770e5d320 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x562770e5d0c0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562770e5cfe0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562770e5cef0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562770e5ced8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562770e5ceb8 <col:55> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562770e5cfa8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562770e5cf40 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562770e5cf28 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562770e5cf08 <col:74> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x562770e5cf90 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562770e5cf78 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562770e5cf58 <col:93> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562770e5d0a0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562770e5d038 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562770e5d020 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562770e5d000 <col:112> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x562770e5d088 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562770e5d070 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562770e5d050 <col:131> '_Bool' lvalue Var 0x562770e564c8 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x562770e5d308 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562770e5d2f0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562770e5d0e0 <col:148> '_Bool' lvalue Var 0x562770e564c8 'y$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x562770e5d2d0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x562770e5d2a0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x562770e5d1a0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562770e5d158 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562770e5d140 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562770e5d100 <col:166> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562770e5d188 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562770e5d170 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562770e5d120 <col:184> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x562770e5d270 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562770e5d1f0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562770e5d1c0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562770e5d288 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x562770e5d248 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562770e5d218 <col:219> 'int' 0
|   |-BinaryOperator 0x562770e5d490 <line:786:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562770e5d438 <col:3> 'int' lvalue Var 0x562770e55b30 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x562770e5d478 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562770e5d458 <col:25> 'int' lvalue Var 0x562770e55ff0 'y' 'int'
|   |-BinaryOperator 0x562770e5d5c0 <line:787:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x562770e5d4b0 <col:3> 'int' lvalue Var 0x562770e55ff0 'y' 'int'
|   | `-ConditionalOperator 0x562770e5d590 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x562770e5d548 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562770e5d530 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562770e5d4d0 <col:7> '_Bool' lvalue Var 0x562770e56088 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x562770e5d560 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562770e5d4f0 <col:25> 'int' lvalue Var 0x562770e56108 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x562770e5d578 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x562770e5d510 <col:37> 'int' lvalue Var 0x562770e55ff0 'y' 'int'
|   |-BinaryOperator 0x562770e5d658 <line:788:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x562770e5d5e0 <col:3> '_Bool' lvalue Var 0x562770e56088 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x562770e5d630 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562770e5d600 <col:28> 'int' 0
|   |-CallExpr 0x562770e5d6b0 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562770e5d698 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e5d678 <col:3> 'void ()' Function 0x562770dfc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562770e5d708 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562770e5d6f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e5d6d0 <col:3> 'void ()' Function 0x562770dfc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562770e5d780 <line:791:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562770e5d728 <col:3> 'int' lvalue Var 0x562770e55c50 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x562770e5d768 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562770e5d748 <col:25> 'int' lvalue Var 0x562770e568b0 'z' 'int'
|   |-CallExpr 0x562770e5d7d8 <line:792:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562770e5d7c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e5d7a0 <col:3> 'void ()' Function 0x562770dfc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562770e5d830 <line:793:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562770e5d818 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e5d7f8 <col:3> 'void ()' Function 0x562770dfc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562770e5db18 <line:794:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562770e5d850 <col:3> 'int' lvalue Var 0x562770e55ff0 'y' 'int'
|   | `-ConditionalOperator 0x562770e5dae8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562770e5d910 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562770e5d8c8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562770e5d8b0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562770e5d870 <col:7> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562770e5d8f8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562770e5d8e0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562770e5d890 <col:25> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x562770e5dad0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562770e5d930 <col:42> 'int' lvalue Var 0x562770e56640 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x562770e5dab0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562770e5da80 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562770e5d9f0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562770e5d9a8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562770e5d990 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562770e5d950 <col:55> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562770e5d9d8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562770e5d9c0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562770e5d970 <col:73> '_Bool' lvalue Var 0x562770e564c8 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x562770e5da50 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562770e5da10 <col:90> 'int' lvalue Var 0x562770e56738 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562770e5da68 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562770e5da30 <col:102> 'int' lvalue Var 0x562770e55ff0 'y' 'int'
|   |-BinaryOperator 0x562770e5dd20 <line:795:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562770e5db38 <col:3> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562770e5dd08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562770e5dcd8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562770e5dbf8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562770e5dbb0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562770e5db98 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562770e5db58 <col:20> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562770e5dbe0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562770e5dbc8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562770e5db78 <col:38> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562770e5dc90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562770e5dc48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562770e5dc18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562770e5dcc0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562770e5dca8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562770e5dc70 <col:66> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562770e5e038 <line:796:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562770e5dd40 <col:3> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562770e5e020 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562770e5dff0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562770e5dee0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562770e5de00 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562770e5ddb8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562770e5dda0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562770e5dd60 <col:20> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562770e5dde8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562770e5ddd0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562770e5dd80 <col:38> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x562770e5dec0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562770e5de78 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562770e5de60 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562770e5de20 <col:56> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562770e5dea8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562770e5de90 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562770e5de40 <col:74> '_Bool' lvalue Var 0x562770e564c8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562770e5df78 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562770e5df30 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562770e5df00 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562770e5dfa8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562770e5df90 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562770e5df58 <col:102> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562770e5e240 <line:797:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562770e5e058 <col:3> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562770e5e228 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562770e5e1f8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562770e5e118 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562770e5e0d0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562770e5e0b8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562770e5e078 <col:20> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562770e5e100 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562770e5e0e8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562770e5e098 <col:38> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562770e5e1b0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562770e5e168 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562770e5e138 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562770e5e1e0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562770e5e1c8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562770e5e190 <col:66> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x562770e5e528 <line:798:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562770e5e260 <col:3> '_Bool' lvalue Var 0x562770e564c8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562770e5e510 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562770e5e4e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562770e5e400 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562770e5e320 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562770e5e2d8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562770e5e2c0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562770e5e280 <col:20> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562770e5e308 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562770e5e2f0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562770e5e2a0 <col:38> '_Bool' lvalue Var 0x562770e562e8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x562770e5e3e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562770e5e398 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562770e5e380 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562770e5e340 <col:56> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562770e5e3c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562770e5e3b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562770e5e360 <col:74> '_Bool' lvalue Var 0x562770e564c8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562770e5e498 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562770e5e450 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562770e5e420 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562770e5e4c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562770e5e4b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562770e5e478 <col:102> '_Bool' lvalue Var 0x562770e564c8 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x562770e5e580 <line:799:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562770e5e568 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e5e548 <col:3> 'void ()' Function 0x562770dfc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562770e5e5d8 <line:800:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562770e5e5c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e5e5a0 <col:3> 'void ()' Function 0x562770dfc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562770e5e690 <line:801:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562770e5e5f8 <col:3> 'int' lvalue Var 0x562770e55590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562770e5e670 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562770e5e658 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562770e5e618 <col:22> 'int' lvalue Var 0x562770e55590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562770e5e638 <col:41> 'int' 1
|   |-CallExpr 0x562770e5e6e8 <line:802:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562770e5e6d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562770e5e6b0 <col:3> 'void ()' Function 0x562770dfc410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562770e5e760 <line:803:3, col:36>
|     `-CallExpr 0x562770e5e740 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562770e5e728 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562770e5e708 <col:10> 'void *(void)' Function 0x562770dfbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562770e5e8f0 prev 0x562770e552d8 <line:805:1, line:807:1> line:805:6 fence 'void ()'
| `-CompoundStmt 0x562770e5e990 <line:806:1, line:807:1>
|-FunctionDecl 0x562770e5e9c0 prev 0x562770e55398 <line:808:1, line:810:1> line:808:6 isync 'void ()'
| `-CompoundStmt 0x562770e5ea60 <line:809:1, line:810:1>
|-FunctionDecl 0x562770e5ea90 prev 0x562770e55458 <line:811:1, line:813:1> line:811:6 lwfence 'void ()'
| `-CompoundStmt 0x562770e5eb30 <line:812:1, line:813:1>
`-FunctionDecl 0x562770e5eb98 <line:814:1, line:838:1> line:814:5 main 'int ()'
  `-CompoundStmt 0x562770e609d8 <line:815:1, line:838:1>
    |-DeclStmt 0x562770e5ecb0 <line:816:3, col:16>
    | `-VarDecl 0x562770e5ec48 <col:3, col:13> col:13 used t37 'pthread_t':'unsigned long'
    |-CallExpr 0x562770e5eeb8 <line:817:3, col:52> 'int'
    | |-ImplicitCastExpr 0x562770e5eea0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562770e5ecc8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562770e3c8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562770e5ed08 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562770e5ece8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562770e5ec48 't37' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562770e5eef8 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562770e5ed80 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x562770e5ed58 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562770e5ed20 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x562770e5ef10 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562770e5eda0 <col:37> 'void *(void *)' Function 0x562770e56ad8 'P0' 'void *(void *)'
    | `-ParenExpr 0x562770e5ee20 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x562770e5edf8 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562770e5edc0 <col:50> 'int' 0
    |-DeclStmt 0x562770e5efa0 <line:818:3, col:16>
    | `-VarDecl 0x562770e5ef38 <col:3, col:13> col:13 used t38 'pthread_t':'unsigned long'
    |-CallExpr 0x562770e5f170 <line:819:3, col:52> 'int'
    | |-ImplicitCastExpr 0x562770e5f158 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562770e5efb8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562770e3c8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562770e5f020 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562770e5f000 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562770e5ef38 't38' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562770e5f1b0 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562770e5f098 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x562770e5f070 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562770e5f038 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x562770e5f1c8 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562770e5f0b8 <col:37> 'void *(void *)' Function 0x562770e57310 'P1' 'void *(void *)'
    | `-ParenExpr 0x562770e5f138 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x562770e5f110 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562770e5f0d8 <col:50> 'int' 0
    |-DeclStmt 0x562770e5f258 <line:820:3, col:16>
    | `-VarDecl 0x562770e5f1f0 <col:3, col:13> col:13 used t39 'pthread_t':'unsigned long'
    |-CallExpr 0x562770e5f400 <line:821:3, col:52> 'int'
    | |-ImplicitCastExpr 0x562770e5f3e8 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562770e5f270 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562770e3c8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562770e5f2b0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562770e5f290 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562770e5f1f0 't39' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562770e5f440 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562770e5f328 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x562770e5f300 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562770e5f2c8 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x562770e5f458 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562770e5f348 <col:37> 'void *(void *)' Function 0x562770e5a4c0 'P2' 'void *(void *)'
    | `-ParenExpr 0x562770e5f3c8 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x562770e5f3a0 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562770e5f368 <col:50> 'int' 0
    |-CallExpr 0x562770e5f4a8 <line:822:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562770e5f490 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562770e5f470 <col:3> 'void ()' Function 0x562770dfc350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562770e5f578 <line:823:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x562770e5f4c8 <col:3> '_Bool' lvalue Var 0x562770e55ce8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x562770e5f560 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x562770e5f540 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x562770e5f528 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x562770e5f4e8 <col:21> 'int' lvalue Var 0x562770e55590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x562770e5f508 <col:41> 'int' 3
    |-CallExpr 0x562770e5f5d0 <line:824:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562770e5f5b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562770e5f598 <col:3> 'void ()' Function 0x562770dfc410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562770e5f648 <line:825:3, col:36> 'void'
    | |-ImplicitCastExpr 0x562770e5f630 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562770e5f5f0 <col:3> 'void (int)' Function 0x562770dfbca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x562770e5f688 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x562770e5f670 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x562770e5f610 <col:21> '_Bool' lvalue Var 0x562770e55ce8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x562770e5f6d8 <line:826:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562770e5f6c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562770e5f6a0 <col:3> 'void ()' Function 0x562770dfc350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562770e5f9c0 <line:827:3, col:103> 'int' '='
    | |-DeclRefExpr 0x562770e5f6f8 <col:3> 'int' lvalue Var 0x562770e55ff0 'y' 'int'
    | `-ConditionalOperator 0x562770e5f990 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x562770e5f7b8 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x562770e5f770 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x562770e5f758 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x562770e5f718 <col:7> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x562770e5f7a0 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x562770e5f788 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x562770e5f738 <col:25> '_Bool' lvalue Var 0x562770e56180 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x562770e5f978 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x562770e5f7d8 <col:42> 'int' lvalue Var 0x562770e56640 'y$w_buff0' 'int'
    |   `-ParenExpr 0x562770e5f958 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x562770e5f928 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x562770e5f898 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x562770e5f850 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x562770e5f838 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x562770e5f7f8 <col:55> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x562770e5f880 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x562770e5f868 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x562770e5f818 <col:73> '_Bool' lvalue Var 0x562770e56360 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x562770e5f8f8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x562770e5f8b8 <col:90> 'int' lvalue Var 0x562770e56738 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x562770e5f910 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x562770e5f8d8 <col:102> 'int' lvalue Var 0x562770e55ff0 'y' 'int'
    |-BinaryOperator 0x562770e5fbc8 <line:828:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x562770e5f9e0 <col:3> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x562770e5fbb0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562770e5fb80 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x562770e5faa0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x562770e5fa58 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x562770e5fa40 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x562770e5fa00 <col:20> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x562770e5fa88 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x562770e5fa70 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x562770e5fa20 <col:38> '_Bool' lvalue Var 0x562770e56180 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562770e5fb38 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562770e5faf0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562770e5fac0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x562770e5fb68 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562770e5fb50 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562770e5fb18 <col:66> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x562770e5feb0 <line:829:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x562770e5fbe8 <col:3> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x562770e5fe98 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562770e5fe68 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x562770e5fd88 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x562770e5fca8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x562770e5fc60 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x562770e5fc48 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x562770e5fc08 <col:20> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x562770e5fc90 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x562770e5fc78 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x562770e5fc28 <col:38> '_Bool' lvalue Var 0x562770e56180 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x562770e5fd68 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x562770e5fd20 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x562770e5fd08 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x562770e5fcc8 <col:56> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x562770e5fd50 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x562770e5fd38 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x562770e5fce8 <col:74> '_Bool' lvalue Var 0x562770e56360 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562770e5fe20 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562770e5fdd8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562770e5fda8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x562770e5fe50 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562770e5fe38 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562770e5fe00 <col:102> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x562770e600e8 <line:830:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x562770e5fed0 <col:3> '_Bool' lvalue Var 0x562770e56180 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562770e600d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562770e600a0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x562770e5ff90 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x562770e5ff48 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x562770e5ff30 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x562770e5fef0 <col:20> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x562770e5ff78 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x562770e5ff60 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x562770e5ff10 <col:38> '_Bool' lvalue Var 0x562770e56180 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562770e60058 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562770e60010 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562770e5ffb0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x562770e60088 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562770e60070 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562770e60038 <col:66> '_Bool' lvalue Var 0x562770e56180 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x562770e603d0 <line:831:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x562770e60108 <col:3> '_Bool' lvalue Var 0x562770e56360 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562770e603b8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562770e60388 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x562770e602a8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x562770e601c8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x562770e60180 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x562770e60168 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x562770e60128 <col:20> '_Bool' lvalue Var 0x562770e566b8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x562770e601b0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x562770e60198 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x562770e60148 <col:38> '_Bool' lvalue Var 0x562770e56180 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x562770e60288 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x562770e60240 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x562770e60228 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x562770e601e8 <col:56> '_Bool' lvalue Var 0x562770e567b0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x562770e60270 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x562770e60258 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x562770e60208 <col:74> '_Bool' lvalue Var 0x562770e56360 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562770e60340 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562770e602f8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562770e602c8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x562770e60370 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562770e60358 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562770e60320 <col:102> '_Bool' lvalue Var 0x562770e56360 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x562770e60428 <line:832:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562770e60410 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562770e603f0 <col:3> 'void ()' Function 0x562770dfc410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562770e60480 <line:833:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562770e60468 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562770e60448 <col:3> 'void ()' Function 0x562770dfc350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562770e60880 <line:834:3, col:187> '_Bool' '='
    | |-DeclRefExpr 0x562770e604a0 <col:3> '_Bool' lvalue Var 0x562770e55d60 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x562770e60868 <col:21, col:187> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x562770e60850 <col:21, col:187> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x562770e60830 <col:22, col:187> 'int'
    |       `-BinaryOperator 0x562770e60810 <col:23, col:186> 'int' '&&'
    |         |-BinaryOperator 0x562770e60778 <col:23, col:158> 'int' '&&'
    |         | |-BinaryOperator 0x562770e606e0 <col:23, col:130> 'int' '&&'
    |         | | |-BinaryOperator 0x562770e60648 <col:23, col:102> 'int' '&&'
    |         | | | |-BinaryOperator 0x562770e605b0 <col:23, col:74> 'int' '&&'
    |         | | | | |-BinaryOperator 0x562770e60518 <col:23, col:46> 'int' '=='
    |         | | | | | |-ImplicitCastExpr 0x562770e60500 <col:23> 'int' <LValueToRValue>
    |         | | | | | | `-DeclRefExpr 0x562770e604c0 <col:23> 'int' lvalue Var 0x562770e556b0 '__unbuffered_p0_EAX' 'int'
    |         | | | | | `-IntegerLiteral 0x562770e604e0 <col:46> 'int' 1
    |         | | | | `-BinaryOperator 0x562770e60590 <col:51, col:74> 'int' '=='
    |         | | | |   |-ImplicitCastExpr 0x562770e60578 <col:51> 'int' <LValueToRValue>
    |         | | | |   | `-DeclRefExpr 0x562770e60538 <col:51> 'int' lvalue Var 0x562770e557d0 '__unbuffered_p0_EBX' 'int'
    |         | | | |   `-IntegerLiteral 0x562770e60558 <col:74> 'int' 0
    |         | | | `-BinaryOperator 0x562770e60628 <col:79, col:102> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x562770e60610 <col:79> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x562770e605d0 <col:79> 'int' lvalue Var 0x562770e558f0 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x562770e605f0 <col:102> 'int' 1
    |         | | `-BinaryOperator 0x562770e606c0 <col:107, col:130> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x562770e606a8 <col:107> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x562770e60668 <col:107> 'int' lvalue Var 0x562770e55a10 '__unbuffered_p1_EBX' 'int'
    |         | |   `-IntegerLiteral 0x562770e60688 <col:130> 'int' 0
    |         | `-BinaryOperator 0x562770e60758 <col:135, col:158> 'int' '=='
    |         |   |-ImplicitCastExpr 0x562770e60740 <col:135> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x562770e60700 <col:135> 'int' lvalue Var 0x562770e55b30 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x562770e60720 <col:158> 'int' 1
    |         `-BinaryOperator 0x562770e607f0 <col:163, col:186> 'int' '=='
    |           |-ImplicitCastExpr 0x562770e607d8 <col:163> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x562770e60798 <col:163> 'int' lvalue Var 0x562770e55c50 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x562770e607b8 <col:186> 'int' 0
    |-CallExpr 0x562770e608d8 <line:835:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562770e608c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562770e608a0 <col:3> 'void ()' Function 0x562770dfc410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562770e60950 <line:836:3, col:36> 'void'
    | |-ImplicitCastExpr 0x562770e60938 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562770e608f8 <col:3> 'void (int)' Function 0x562770dfc0d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x562770e60990 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x562770e60978 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x562770e60918 <col:21> '_Bool' lvalue Var 0x562770e55d60 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x562770e609c8 <line:837:3, col:10>
      `-IntegerLiteral 0x562770e609a8 <col:10> 'int' 0
