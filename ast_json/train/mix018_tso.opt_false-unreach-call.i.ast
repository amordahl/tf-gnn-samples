TranslationUnitDecl 0x55e1b377bf88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55e1b377c848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55e1b377c520 '__int128'
|-TypedefDecl 0x55e1b377c8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55e1b377c540 'unsigned __int128'
|-TypedefDecl 0x55e1b377cbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55e1b377c990 'struct __NSConstantString_tag'
|   `-Record 0x55e1b377c910 '__NSConstantString_tag'
|-TypedefDecl 0x55e1b377cc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55e1b377cc20 'char *'
|   `-BuiltinType 0x55e1b377c020 'char'
|-TypedefDecl 0x55e1b37bbb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55e1b377cf00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55e1b377cd40 'struct __va_list_tag'
|     `-Record 0x55e1b377ccc0 '__va_list_tag'
|-FunctionDecl 0x55e1b37bbca0 <pthread-wmm/mix018_tso.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55e1b37bbbd0 <col:31> col:34 'int'
|-FunctionDecl 0x55e1b37bbe68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55e1b37bbf90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55e1b37bc0d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55e1b37bc048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55e1b37bc308 <col:40, col:99>
|   |-IfStmt 0x55e1b37bc2d8 <col:42, col:88>
|   | |-UnaryOperator 0x55e1b37bc1b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55e1b37bc1a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55e1b37bc180 <col:47> 'int' lvalue ParmVar 0x55e1b37bc048 'expression' 'int'
|   | `-CompoundStmt 0x55e1b37bc2c0 <col:59, col:88>
|   |   `-LabelStmt 0x55e1b37bc2a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55e1b37bc238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55e1b37bc220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55e1b37bc1d0 <col:68> 'void () __attribute__((noreturn))' Function 0x55e1b37bbf90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55e1b37bc2f0 <col:89>
|   `-ReturnStmt 0x55e1b37bc2f8 <col:91>
|-FunctionDecl 0x55e1b37bc350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55e1b37bc410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55e1b37bc790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55e1b37bc4c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55e1b37bc548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55e1b37bc5c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55e1b37bc648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55e1b37bc850 <line:10:22>
|-FunctionDecl 0x55e1b37e28a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55e1b37bc8c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55e1b37bc940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55e1b37bc9c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55e1b37bca40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55e1b37e2960 <line:13:22>
|-FunctionDecl 0x55e1b37e2c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55e1b37e29d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55e1b37e2a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55e1b37e2ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55e1b37e2cc8 <line:15:22>
|-TypedefDecl 0x55e1b37e2d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55e1b377c0e0 'unsigned char'
|-TypedefDecl 0x55e1b37e2da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55e1b377c100 'unsigned short'
|-TypedefDecl 0x55e1b37e2e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55e1b377c120 'unsigned int'
|-TypedefDecl 0x55e1b37e2e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55e1b377c140 'unsigned long'
|-TypedefDecl 0x55e1b37e2ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55e1b377c040 'signed char'
|-TypedefDecl 0x55e1b37e2f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55e1b377c0e0 'unsigned char'
|-TypedefDecl 0x55e1b37e2fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55e1b377c060 'short'
|-TypedefDecl 0x55e1b37e3048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55e1b377c100 'unsigned short'
|-TypedefDecl 0x55e1b37e30b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55e1b377c080 'int'
|-TypedefDecl 0x55e1b37e3128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55e1b377c120 'unsigned int'
|-TypedefDecl 0x55e1b37e3198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55e1b377c0a0 'long'
|-TypedefDecl 0x55e1b37e3208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55e1b377c140 'unsigned long'
|-TypedefDecl 0x55e1b37e3278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55e1b377c0a0 'long'
|-TypedefDecl 0x55e1b37e32e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55e1b377c140 'unsigned long'
|-TypedefDecl 0x55e1b37e3358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55e1b377c140 'unsigned long'
|-TypedefDecl 0x55e1b37e33c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55e1b377c120 'unsigned int'
|-TypedefDecl 0x55e1b37e3438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55e1b377c120 'unsigned int'
|-TypedefDecl 0x55e1b37e34a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55e1b377c140 'unsigned long'
|-TypedefDecl 0x55e1b37e3518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55e1b377c140 'unsigned long'
|-TypedefDecl 0x55e1b37e3588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55e1b377c120 'unsigned int'
|-TypedefDecl 0x55e1b37e35f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55e1b377c140 'unsigned long'
|-TypedefDecl 0x55e1b37e3668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55e1b377c0a0 'long'
|-TypedefDecl 0x55e1b37e36d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55e1b377c0a0 'long'
|-TypedefDecl 0x55e1b37e3748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55e1b377c080 'int'
|-RecordDecl 0x55e1b37e37a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55e1b37e3918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55e1b37e39d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55e1b37e3970 'struct __fsid_t' sugar
|   `-RecordType 0x55e1b37e3820 '__fsid_t'
|     `-Record 0x55e1b37e37a0 ''
|-TypedefDecl 0x55e1b37e3a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55e1b377c0a0 'long'
|-TypedefDecl 0x55e1b37e3ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55e1b377c140 'unsigned long'
|-TypedefDecl 0x55e1b37e3b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55e1b377c140 'unsigned long'
|-TypedefDecl 0x55e1b37e3ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55e1b377c120 'unsigned int'
|-TypedefDecl 0x55e1b37e3c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55e1b377c0a0 'long'
|-TypedefDecl 0x55e1b37e3c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55e1b377c120 'unsigned int'
|-TypedefDecl 0x55e1b37e3cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55e1b377c0a0 'long'
|-TypedefDecl 0x55e1b37e3d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55e1b377c080 'int'
|-TypedefDecl 0x55e1b37e3dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55e1b377c080 'int'
|-TypedefDecl 0x55e1b37e3e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55e1b377c080 'int'
|-TypedefDecl 0x55e1b37e3eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55e1b377c7a0 'void *'
|   `-BuiltinType 0x55e1b377bfe0 'void'
|-TypedefDecl 0x55e1b37e3f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55e1b377c0a0 'long'
|-TypedefDecl 0x55e1b37e3f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55e1b377c0a0 'long'
|-TypedefDecl 0x55e1b37e4008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55e1b377c0a0 'long'
|-TypedefDecl 0x55e1b37e4078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55e1b377c140 'unsigned long'
|-TypedefDecl 0x55e1b37e40e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55e1b377c140 'unsigned long'
|-TypedefDecl 0x55e1b37e4158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55e1b377c140 'unsigned long'
|-TypedefDecl 0x55e1b37e41c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55e1b377c140 'unsigned long'
|-TypedefDecl 0x55e1b37e4238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55e1b377c0a0 'long'
|-TypedefDecl 0x55e1b37e42a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55e1b377c0a0 'long'
|-TypedefDecl 0x55e1b37e4318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55e1b377c0a0 'long'
|-TypedefDecl 0x55e1b37e4388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55e1b377c140 'unsigned long'
|-TypedefDecl 0x55e1b37e4418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55e1b37e43e0 '__off64_t' sugar
|   |-Typedef 0x55e1b37e36d8 '__off64_t'
|   `-BuiltinType 0x55e1b377c0a0 'long'
|-TypedefDecl 0x55e1b37e4510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55e1b37e44d0 '__quad_t *'
|   `-TypedefType 0x55e1b37e4470 '__quad_t' sugar
|     |-Typedef 0x55e1b37e3278 '__quad_t'
|     `-BuiltinType 0x55e1b377c0a0 'long'
|-TypedefDecl 0x55e1b37e4580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55e1b377cc20 'char *'
|   `-BuiltinType 0x55e1b377c020 'char'
|-TypedefDecl 0x55e1b37e45f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55e1b377c0a0 'long'
|-TypedefDecl 0x55e1b37e4660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55e1b377c120 'unsigned int'
|-FunctionDecl 0x55e1b37e47a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55e1b37e46d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55e1b37e4ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55e1b37e4ad8 <line:72:3, col:34>
|     `-CallExpr 0x55e1b37e4a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55e1b37e4a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55e1b37e4a10 <col:10> '<builtin fn type>' Function 0x55e1b37e4880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55e1b37e4ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55e1b37e4a30 <col:29> 'unsigned int' lvalue ParmVar 0x55e1b37e46d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55e1b37e4880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55e1b37e4920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55e1b37e4990 <col:10> Implicit
| `-ConstAttr 0x55e1b37e49e8 <col:10> Implicit
|-FunctionDecl 0x55e1b37e4c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55e1b37e4b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55e1b37e4f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55e1b37e4f48 <line:77:3, col:34>
|     `-CallExpr 0x55e1b37e4f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55e1b37e4ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55e1b37e4e78 <col:10> '<builtin fn type>' Function 0x55e1b37e4ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55e1b37e4f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55e1b37e4e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55e1b37e4b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55e1b37e4ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55e1b37e4d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55e1b37e4df8 <col:10> Implicit
| `-ConstAttr 0x55e1b37e4e50 <col:10> Implicit
|-TypedefDecl 0x55e1b37e4f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55e1b377c140 'unsigned long'
|-TypedefDecl 0x55e1b37e5018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55e1b37e4fe0 '__time_t' sugar
|   |-Typedef 0x55e1b37e3c18 '__time_t'
|   `-BuiltinType 0x55e1b377c0a0 'long'
|-RecordDecl 0x55e1b37e5070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55e1b37e5128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55e1b37e51b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55e1b37e5248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55e1b37e5210 '__pid_t' sugar
|   |-Typedef 0x55e1b37e3748 '__pid_t'
|   `-BuiltinType 0x55e1b377c080 'int'
|-RecordDecl 0x55e1b37e52a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55e1b37e5360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55e1b37e53b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55e1b37e5470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55e1b37e54d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55e1b377c140 'unsigned long'
|-RecordDecl 0x55e1b37e5530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55e1b37e57c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55e1b37e78b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55e1b37e5810 'struct cpu_set_t' sugar
|   `-RecordType 0x55e1b37e55b0 'cpu_set_t'
|     `-Record 0x55e1b37e5530 ''
|-FunctionDecl 0x55e1b37e7b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55e1b37e7958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55e1b37e7a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55e1b37e7c38 <line:107:19>
|-FunctionDecl 0x55e1b37e7e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55e1b37e7ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55e1b37e7eb8 <col:69>
|-FunctionDecl 0x55e1b37e8030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55e1b37e7f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55e1b37e80d8 <col:64>
|-FunctionDecl 0x55e1b37e8398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55e1b37e8140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55e1b37e8278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55e1b37e8448 <line:113:22>
|-FunctionDecl 0x55e1b37e86c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55e1b37e84b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55e1b37e85a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55e1b37e8778 <col:88>
|-FunctionDecl 0x55e1b37e8a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55e1b37e87e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55e1b37e88c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55e1b37e8950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55e1b37e8b50 <col:62>
|-FunctionDecl 0x55e1b37e8cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55e1b37e8bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55e1b37e8d70 <col:63>
|-FunctionDecl 0x55e1b37e8e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55e1b37e8f38 <col:47>
|-FunctionDecl 0x55e1b37e9040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55e1b37e8fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55e1b37e90e8 <col:69>
|-FunctionDecl 0x55e1b37e91f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55e1b37e9158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55e1b37e9298 <col:69>
|-FunctionDecl 0x55e1b37e9558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55e1b37e9300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55e1b37e9438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55e1b37e9608 <col:88>
|-TypedefDecl 0x55e1b37e9698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55e1b37e9660 '__clock_t' sugar
|   |-Typedef 0x55e1b37e3a58 '__clock_t'
|   `-BuiltinType 0x55e1b377c0a0 'long'
|-TypedefDecl 0x55e1b37e9728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55e1b37e96f0 '__clockid_t' sugar
|   |-Typedef 0x55e1b37e3e48 '__clockid_t'
|   `-BuiltinType 0x55e1b377c080 'int'
|-TypedefDecl 0x55e1b37e97b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55e1b37e9780 '__timer_t' sugar
|   |-Typedef 0x55e1b37e3eb8 '__timer_t'
|   `-PointerType 0x55e1b377c7a0 'void *'
|     `-BuiltinType 0x55e1b377bfe0 'void'
|-RecordDecl 0x55e1b37e9810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55e1b37e98e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55e1b37e9950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55e1b37e99b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55e1b37e9a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55e1b37e9a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55e1b37e9af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55e1b37e9b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55e1b37e9bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55e1b37e9c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55e1b37e9c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55e1b37e9cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55e1b37e9d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55e1b37e9e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55e1b37e9e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55e1b37e9f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55e1b37ea100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55e1b37ea1a0 <col:45>
|-FunctionDecl 0x55e1b37ea380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55e1b37ea270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55e1b37ea428 <col:54>
|-FunctionDecl 0x55e1b37ea628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55e1b37ea490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55e1b37ea508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55e1b37ea6d8 <line:157:22>
| `-ConstAttr 0x55e1b37ea730 <col:63>
|-FunctionDecl 0x55e1b37eb560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55e1b37ea828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55e1b37eb608 <col:56>
|-FunctionDecl 0x55e1b37eb9b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55e1b37eb678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55e1b37eb6f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55e1b37eb770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55e1b37eb868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55e1b37eba70 <col:54>
|-RecordDecl 0x55e1b37ebac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55e1b37ebb78 parent 0x55e1b377bf88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55e1b37ebdd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55e1b37ebe78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55e1b37ebee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55e1b37ebf48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55e1b37ec038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55e1b37ec158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55e1b37ec100 'struct __locale_struct *'
|   `-ElaboratedType 0x55e1b37ec090 'struct __locale_struct' sugar
|     `-RecordType 0x55e1b37ebb50 'struct __locale_struct'
|       `-Record 0x55e1b37ebac8 '__locale_struct'
|-TypedefDecl 0x55e1b37ec208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55e1b37ec1d0 '__locale_t' sugar
|   |-Typedef 0x55e1b37ec158 '__locale_t'
|   `-PointerType 0x55e1b37ec100 'struct __locale_struct *'
|     `-ElaboratedType 0x55e1b37ec090 'struct __locale_struct' sugar
|       `-RecordType 0x55e1b37ebb50 'struct __locale_struct'
|         `-Record 0x55e1b37ebac8 '__locale_struct'
|-FunctionDecl 0x55e1b37ec610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55e1b37ec278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55e1b37ec2f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55e1b37ec370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55e1b37ec400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55e1b37ec478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55e1b37ec6d8 <col:40>
|-FunctionDecl 0x55e1b37ec8c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55e1b37ec7a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55e1b37ec970 <col:66>
|-FunctionDecl 0x55e1b37eca80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55e1b37ec9d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55e1b37ecb28 <col:69>
|-FunctionDecl 0x55e1b37ecd58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55e1b37ecb90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55e1b37ecc20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55e1b37ece08 <col:52>
|-FunctionDecl 0x55e1b37ecfb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55e1b37ece70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55e1b37ecf00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55e1b37ed060 <col:55>
|-FunctionDecl 0x55e1b37ed1f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55e1b37ed0e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55e1b37ed2a0 <col:62>
|-FunctionDecl 0x55e1b37ed418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55e1b37ed308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55e1b37ed4c0 <col:60>
|-FunctionDecl 0x55e1b37ed718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55e1b37ed578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55e1b37ed5f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55e1b37ed7c8 <col:44>
|-FunctionDecl 0x55e1b37ed9d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55e1b37ed830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55e1b37ed8b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55e1b37eda88 <col:49>
|-VarDecl 0x55e1b37edb88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55e1b37edc08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55e1b37edc88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55e1b37edd50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55e1b37ede80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55e1b37edf20 <col:42>
|-VarDecl 0x55e1b37edf90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55e1b37ee010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55e1b37ee198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55e1b37ee088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55e1b37ee240 <col:57>
|-FunctionDecl 0x55e1b37ee350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55e1b37ee2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55e1b37ee3f8 <col:56>
|-FunctionDecl 0x55e1b37ef540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55e1b37ee478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55e1b37ef5e8 <col:59>
|-FunctionDecl 0x55e1b37ef6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55e1b37ef658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55e1b37ef798 <col:48>
| `-ConstAttr 0x55e1b37ef7f0 <col:89>
|-FunctionDecl 0x55e1b37efa58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55e1b37ef8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55e1b37ef938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55e1b37efcb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55e1b37efb48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55e1b37efbd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55e1b37efd68 <col:88>
|-FunctionDecl 0x55e1b37eff00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55e1b37efdd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55e1b37efe60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55e1b37effb0 <col:88>
|-FunctionDecl 0x55e1b37f01c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55e1b37f0018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55e1b37f00a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55e1b37f0278 <line:208:22>
|-FunctionDecl 0x55e1b37f05e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55e1b37f02e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55e1b37f0360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55e1b37f03f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55e1b37f0480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55e1b37f08e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55e1b37f06e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55e1b37f07c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55e1b37f0998 <col:85>
|-FunctionDecl 0x55e1b37f0d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55e1b37f0a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55e1b37f0b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55e1b37f0c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55e1b37f0e40 <col:52>
|-FunctionDecl 0x55e1b37f0fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55e1b37f0ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55e1b37f1060 <col:61>
|-FunctionDecl 0x55e1b37f1560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55e1b37f10c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55e1b37f1148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55e1b37f1278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55e1b37f1368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55e1b37f1620 <col:62>
|-FunctionDecl 0x55e1b37f1838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55e1b37f1688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55e1b37f1718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55e1b37f18e8 <line:221:22>
|-FunctionDecl 0x55e1b37f19e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55e1b37f1950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55e1b37f1a90 <col:65>
|-TypedefDecl 0x55e1b37f1b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55e1b377c140 'unsigned long'
|-RecordDecl 0x55e1b37f1b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55e1b37f1ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55e1b37f1d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55e1b37f1db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55e1b37f1d60 'union pthread_attr_t' sugar
|   `-RecordType 0x55e1b37f1be0 'union pthread_attr_t'
|     `-Record 0x55e1b37f1b58 'pthread_attr_t'
|-RecordDecl 0x55e1b37f1e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55e1b37f1f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55e1b37f2000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55e1b37f20b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55e1b37f2050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55e1b37f1e90 'struct __pthread_internal_list'
|     `-Record 0x55e1b37f1e10 '__pthread_internal_list'
|-RecordDecl 0x55e1b37f2120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55e1b37f21c8 parent 0x55e1b377bf88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55e1b37f22a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55e1b37f2308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55e1b37f2370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55e1b37f23d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55e1b37f2440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55e1b37f24a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55e1b37f6580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55e1b37f6630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55e1b37f6720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55e1b37f6788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55e1b37f6910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55e1b37f68b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55e1b37f21a0 'pthread_mutex_t'
|     `-Record 0x55e1b37f2120 ''
|-RecordDecl 0x55e1b37f6980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55e1b37f6ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55e1b37f6b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55e1b37f6be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55e1b37f6b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55e1b37f6a00 'pthread_mutexattr_t'
|     `-Record 0x55e1b37f6980 ''
|-RecordDecl 0x55e1b37f6c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55e1b37f6cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55e1b37f6dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55e1b37f6e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55e1b37f6e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55e1b37f6ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55e1b37f6f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55e1b37f6fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55e1b37f7030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55e1b37f7098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55e1b37f7150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix018_tso.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix018_tso.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55e1b37f7240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55e1b37f72a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55e1b37f73e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55e1b37f7380 'union pthread_cond_t' sugar
|   `-RecordType 0x55e1b37f6cd0 'pthread_cond_t'
|     `-Record 0x55e1b37f6c50 ''
|-RecordDecl 0x55e1b37f7450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55e1b37f7590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55e1b37f75f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55e1b37f76b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55e1b37f7650 'union pthread_condattr_t' sugar
|   `-RecordType 0x55e1b37f74d0 'pthread_condattr_t'
|     `-Record 0x55e1b37f7450 ''
|-TypedefDecl 0x55e1b37f7738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55e1b377c120 'unsigned int'
|-TypedefDecl 0x55e1b37f77a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55e1b377c080 'int'
|-RecordDecl 0x55e1b37f7800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55e1b37f78a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55e1b37f7970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55e1b37f79d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55e1b37f7a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55e1b37f7aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55e1b37f7b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55e1b37f7b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55e1b37f7be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55e1b37f7c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55e1b37f7cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55e1b37f7d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55e1b37f7d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55e1b37f7e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix018_tso.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix018_tso.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55e1b37f7ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55e1b37f7f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55e1b37f8090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55e1b37f8030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55e1b37f7880 'pthread_rwlock_t'
|     `-Record 0x55e1b37f7800 ''
|-RecordDecl 0x55e1b37f8100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55e1b37f8240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55e1b37f82a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55e1b37f8360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55e1b37f8300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55e1b37f8180 'pthread_rwlockattr_t'
|     `-Record 0x55e1b37f8100 ''
|-TypedefDecl 0x55e1b37f83e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55e1b377c084 'volatile int' volatile
|   `-BuiltinType 0x55e1b377c080 'int'
|-RecordDecl 0x55e1b37f8440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55e1b37fa5b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55e1b37fa618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55e1b37fa6d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55e1b37fa670 'union pthread_barrier_t' sugar
|   `-RecordType 0x55e1b37f84c0 'pthread_barrier_t'
|     `-Record 0x55e1b37f8440 ''
|-RecordDecl 0x55e1b37fa740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55e1b37fa840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55e1b37fa8a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55e1b37fa960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55e1b37fa900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55e1b37fa7c0 'pthread_barrierattr_t'
|     `-Record 0x55e1b37fa740 ''
|-TypedefDecl 0x55e1b37faa78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55e1b37faa10 'long [8]' 8 
|   `-BuiltinType 0x55e1b377c0a0 'long'
|-EnumDecl 0x55e1b37faad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55e1b37fab98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55e1b37fabe8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55e1b37fac38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55e1b37fad08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55e1b37fad58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55e1b37fada8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55e1b37fadf8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55e1b37fae80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55e1b37fae68 <col:26> 'int'
| |   `-DeclRefExpr 0x55e1b37fae48 <col:26> 'int' EnumConstant 0x55e1b37fad08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55e1b37faf08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55e1b37faef0 <col:29> 'int'
| |   `-DeclRefExpr 0x55e1b37faed0 <col:29> 'int' EnumConstant 0x55e1b37fad58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55e1b37faf90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55e1b37faf78 <col:30> 'int'
| |   `-DeclRefExpr 0x55e1b37faf58 <col:30> 'int' EnumConstant 0x55e1b37fada8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55e1b37fb018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55e1b37fb000 <col:27> 'int'
|     `-DeclRefExpr 0x55e1b37fafe0 <col:27> 'int' EnumConstant 0x55e1b37fae80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55e1b37fb068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55e1b37fb138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55e1b37fb1c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55e1b37fb1a8 <col:30> 'int'
| |   `-DeclRefExpr 0x55e1b37fb188 <col:30> 'int' EnumConstant 0x55e1b37fb138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55e1b37fb210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55e1b37fb298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55e1b37fb280 <col:29> 'int'
|     `-DeclRefExpr 0x55e1b37fb260 <col:29> 'int' EnumConstant 0x55e1b37fb210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55e1b37fb2e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55e1b37fb3b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55e1b37fb408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55e1b37fb458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55e1b37fb4a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55e1b37fb5c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55e1b37fb610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55e1b37fb660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55e1b37fb6e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55e1b37fb6d0 <col:31> 'int'
|     `-DeclRefExpr 0x55e1b37fb6b0 <col:31> 'int' EnumConstant 0x55e1b37fb5c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55e1b37fb738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55e1b37fb808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55e1b37fb858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55e1b37fb8a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55e1b37fb978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55e1b37fb9c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55e1b37fba18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55e1b37fbae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55e1b37fbb38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55e1b37fbb88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55e1b37fbdc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55e1b37fbe30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55e1b37fbe98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55e1b37fbfb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55e1b37fc008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55e1b37fc0d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55e1b37fc128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55e1b37fc178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55e1b37fc248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55e1b37fc298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55e1b37fc8f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55e1b37fc390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55e1b37fc4a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e1b37fc6e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55e1b37fc760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55e1b37fc9b8 <col:47>
| |-NonNullAttr 0x55e1b37fca10 <col:77, col:94> 1 3
| `-CallbackAttr 0x55e1b37fca48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55e1b37fcb70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55e1b37fcaa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55e1b37fcdc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55e1b37fcc28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55e1b37fcca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55e1b37fcf98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55e1b37fce88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55e1b37fd040 <col:60>
|-FunctionDecl 0x55e1b37fd190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55e1b37fd230 <col:54>
| `-ConstAttr 0x55e1b37fd288 <col:95>
|-FunctionDecl 0x55e1b37fd458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55e1b37fd2c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55e1b37fd338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55e1b37fd508 <line:394:19>
| `-ConstAttr 0x55e1b37fd560 <col:60>
|-FunctionDecl 0x55e1b37fdf68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55e1b37fde30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55e1b37fe010 <col:71>
| `-NonNullAttr 0x55e1b37fe068 <col:112, col:126> 1
|-FunctionDecl 0x55e1b37fe170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55e1b37fe0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55e1b37fe218 <line:397:22>
| `-NonNullAttr 0x55e1b37fe270 <col:63, col:77> 1
|-FunctionDecl 0x55e1b37fe498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55e1b37fe2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55e1b37fe338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55e1b37fe548 <line:400:22>
| `-NonNullAttr 0x55e1b37fe5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e1b37fe7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55e1b37fe5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e1b37fe668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55e1b37fe858 <line:403:22>
| `-NonNullAttr 0x55e1b37fe8b0 <col:63, col:77> 1
|-FunctionDecl 0x55e1b37feb08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55e1b37fe8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55e1b37fe9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55e1b37febb8 <line:406:22>
| `-NonNullAttr 0x55e1b37fec10 <col:63, col:80> 1 2
|-FunctionDecl 0x55e1b37ffe48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55e1b37fec58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e1b37fecd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55e1b37ffef8 <line:409:22>
| `-NonNullAttr 0x55e1b37fff50 <col:63, col:77> 1
|-FunctionDecl 0x55e1b3800188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55e1b37fff98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e1b3800028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55e1b3800238 <line:412:22>
| `-NonNullAttr 0x55e1b3800290 <col:63, col:80> 1 2
|-FunctionDecl 0x55e1b38004c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55e1b38002d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e1b3800368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55e1b3800578 <col:37>
| `-NonNullAttr 0x55e1b38005d0 <col:78, col:95> 1 2
|-FunctionDecl 0x55e1b38007b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e1b3800618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e1b3800698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55e1b3800868 <line:418:22>
| `-NonNullAttr 0x55e1b38008c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e1b3800a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55e1b3800908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e1b3800988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55e1b3800af8 <line:420:22>
| `-NonNullAttr 0x55e1b3800b50 <col:63, col:77> 1
|-FunctionDecl 0x55e1b3800cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e1b3800b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e1b3800c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55e1b3800da8 <line:423:22>
| `-NonNullAttr 0x55e1b3801e30 <col:63, col:80> 1 2
|-FunctionDecl 0x55e1b3801fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55e1b3801e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e1b3801ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55e1b3802068 <line:426:22>
| `-NonNullAttr 0x55e1b38020c0 <col:63, col:77> 1
|-FunctionDecl 0x55e1b3802268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e1b3802108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e1b3802188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55e1b3802318 <line:429:22>
| `-NonNullAttr 0x55e1b3802370 <col:63, col:80> 1 2
|-FunctionDecl 0x55e1b38024f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55e1b38023b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e1b3802438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55e1b38025a8 <line:431:22>
| `-NonNullAttr 0x55e1b3802600 <col:63, col:77> 1
|-FunctionDecl 0x55e1b3802828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55e1b3802648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e1b38026c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55e1b38028d8 <line:434:22>
| |-NonNullAttr 0x55e1b3802930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55e1b3802968 <col:100> "" ""
|-FunctionDecl 0x55e1b3802b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55e1b38029b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e1b3802a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55e1b3802c28 <line:437:22>
| |-NonNullAttr 0x55e1b3802c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x55e1b3802cb8 <col:97> "" ""
|-FunctionDecl 0x55e1b3802eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55e1b3802d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e1b3802d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55e1b3802f68 <line:440:22>
| `-NonNullAttr 0x55e1b3802fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e1b3803140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55e1b3803008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e1b3803080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55e1b38031f0 <line:443:22>
| `-NonNullAttr 0x55e1b3803248 <col:63, col:77> 1
|-FunctionDecl 0x55e1b3803538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55e1b3803298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e1b3803318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55e1b3803390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55e1b38035f0 <line:447:22>
| `-NonNullAttr 0x55e1b3803648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55e1b38038f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55e1b38036a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e1b3803720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55e1b3803798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55e1b38039b0 <col:43>
| `-NonNullAttr 0x55e1b3803a08 <col:84, col:98> 1
|-FunctionDecl 0x55e1b3803cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55e1b3803a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55e1b3803ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55e1b3803b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55e1b3803d80 <line:452:22>
| `-NonNullAttr 0x55e1b3803dd8 <col:63, col:77> 3
|-FunctionDecl 0x55e1b38040e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55e1b3803e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55e1b3803ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55e1b3803f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55e1b38041a0 <line:456:22>
| `-NonNullAttr 0x55e1b38041f8 <col:63, col:80> 2 3
|-FunctionDecl 0x55e1b38043e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55e1b3804248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55e1b38042c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55e1b3804498 <line:458:22>
|-FunctionDecl 0x55e1b3804868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55e1b3804560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55e1b3804700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55e1b3804918 <col:52, col:69> 1 2
|-FunctionDecl 0x55e1b3804ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55e1b38049a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55e1b3804a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55e1b3804ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55e1b3804b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55e1b3804c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55e1b3804e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55e1b3804d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55e1b3804fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55e1b3805040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55e1b38050e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55e1b38051d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55e1b3805240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55e1b3805410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix018_tso.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55e1b3805508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55e1b38055c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55e1b3805560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55e1b38050c0 '__pthread_unwind_buf_t'
| |   `-Record 0x55e1b3805040 ''
| `-AlignedAttr 0x55e1b3805618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55e1b3805690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55e1b38057f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55e1b3805858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55e1b38058c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55e1b3805928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55e1b3805b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55e1b3805a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55e1b3805c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55e1b3805be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55e1b3805e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55e1b3805d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55e1b3805f18 <line:487:22>
|-RecordDecl 0x55e1b3805f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55e1b3806288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55e1b38060e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55e1b3806168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55e1b3806338 <col:86>
| `-ReturnsTwiceAttr 0x55e1b3806390 <col:12> Implicit
|-FunctionDecl 0x55e1b38066b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55e1b3806460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55e1b3806570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55e1b3806768 <line:493:22>
| `-NonNullAttr 0x55e1b38067c0 <col:63, col:77> 1
|-FunctionDecl 0x55e1b3806938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55e1b3806808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55e1b38069e0 <line:495:22>
| `-NonNullAttr 0x55e1b3806a38 <col:63, col:77> 1
|-FunctionDecl 0x55e1b3806b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55e1b3806a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55e1b3806be8 <line:497:22>
| `-NonNullAttr 0x55e1b3806c40 <col:52, col:66> 1
|-FunctionDecl 0x55e1b3806d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55e1b3806c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55e1b3806de8 <line:499:22>
| `-NonNullAttr 0x55e1b3806e40 <col:52, col:66> 1
|-FunctionDecl 0x55e1b3807088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55e1b3806e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55e1b3806f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55e1b3807138 <col:36>
| `-NonNullAttr 0x55e1b3807190 <col:66, col:83> 1 2
|-FunctionDecl 0x55e1b3807290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55e1b38071d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55e1b3807338 <line:504:22>
| `-NonNullAttr 0x55e1b3807390 <col:52, col:66> 1
|-FunctionDecl 0x55e1b3807628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e1b3807440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55e1b38074c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55e1b38076d8 <line:508:22>
| `-NonNullAttr 0x55e1b3807730 <col:63, col:80> 1 2
|-FunctionDecl 0x55e1b38079f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55e1b3807778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55e1b38077f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55e1b3807878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55e1b3807ab0 <line:512:22>
| `-NonNullAttr 0x55e1b3807b08 <col:63, col:80> 1 3
|-FunctionDecl 0x55e1b3807c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55e1b3807b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55e1b3807cb8 <line:514:22>
| `-NonNullAttr 0x55e1b3807d10 <col:63, col:77> 1
|-FunctionDecl 0x55e1b3807f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55e1b3807dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55e1b3807fe0 <line:516:22>
| `-NonNullAttr 0x55e1b3808038 <col:63, col:77> 1
|-FunctionDecl 0x55e1b3808140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55e1b3808088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55e1b38081e8 <line:518:22>
| `-NonNullAttr 0x55e1b3808240 <col:63, col:77> 1
|-FunctionDecl 0x55e1b3808468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e1b3808288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55e1b3808308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55e1b3808518 <line:522:22>
| `-NonNullAttr 0x55e1b3808570 <col:63, col:80> 1 2
|-FunctionDecl 0x55e1b3808778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55e1b38085b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e1b3808638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55e1b3808828 <line:525:22>
| `-NonNullAttr 0x55e1b3808880 <col:63, col:77> 1
|-FunctionDecl 0x55e1b3808a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e1b38088c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55e1b3808948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55e1b3808ad8 <line:528:22>
| `-NonNullAttr 0x55e1b3808b30 <col:63, col:80> 1 2
|-FunctionDecl 0x55e1b3808cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55e1b3808b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e1b3808bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55e1b3808d68 <line:530:22>
| `-NonNullAttr 0x55e1b3808dc0 <col:63, col:77> 1
|-FunctionDecl 0x55e1b3809f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e1b3808e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55e1b3809eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55e1b380a040 <line:534:22>
| `-NonNullAttr 0x55e1b380a098 <col:63, col:80> 1 2
|-FunctionDecl 0x55e1b380a228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55e1b380a0e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e1b380a168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55e1b380a2d8 <line:537:22>
| `-NonNullAttr 0x55e1b380a330 <col:63, col:77> 1
|-FunctionDecl 0x55e1b380a4d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e1b380a378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55e1b380a3f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55e1b380a588 <line:541:22>
| `-NonNullAttr 0x55e1b380a5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e1b380a768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55e1b380a628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e1b380a6a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55e1b380a818 <line:544:22>
| `-NonNullAttr 0x55e1b380a870 <col:63, col:77> 1
|-FunctionDecl 0x55e1b380aa58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55e1b380a8b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e1b380a938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55e1b380ab08 <line:547:22>
| `-NonNullAttr 0x55e1b380ab60 <col:63, col:80> 1 2
|-FunctionDecl 0x55e1b380ace8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55e1b380aba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e1b380ac28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55e1b380ad98 <line:550:22>
| `-NonNullAttr 0x55e1b380adf0 <col:63, col:77> 1
|-FunctionDecl 0x55e1b380c168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55e1b380bf10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55e1b380c020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55e1b380c218 <col:29>
| `-NonNullAttr 0x55e1b380c270 <col:70, col:84> 1
|-FunctionDecl 0x55e1b380c3e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e1b380c2b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e1b380c490 <line:555:22>
| `-NonNullAttr 0x55e1b380c4e8 <col:63, col:77> 1
|-FunctionDecl 0x55e1b380c5f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e1b380c538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e1b380c698 <line:557:22>
| `-NonNullAttr 0x55e1b380c6f0 <col:52, col:66> 1
|-FunctionDecl 0x55e1b380c7f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e1b380c738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e1b380c898 <line:559:19>
| `-NonNullAttr 0x55e1b380c8f0 <col:49, col:63> 1
|-FunctionDecl 0x55e1b380cb28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55e1b380c938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55e1b380c9c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55e1b380cbd8 <col:39>
| `-NonNullAttr 0x55e1b380cc30 <col:69, col:86> 1 2
|-FunctionDecl 0x55e1b380cd30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e1b380cc78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e1b380cdd8 <line:564:22>
| `-NonNullAttr 0x55e1b380ce30 <col:52, col:66> 1
|-FunctionDecl 0x55e1b380cf98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e1b380cee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e1b380d040 <line:566:22>
| `-NonNullAttr 0x55e1b380d098 <col:52, col:66> 1
|-FunctionDecl 0x55e1b380d258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55e1b380d0e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55e1b380d178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55e1b380d308 <col:39>
| `-NonNullAttr 0x55e1b380d360 <col:69, col:86> 1 2
|-FunctionDecl 0x55e1b380d460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e1b380d3a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e1b380d508 <line:571:22>
| `-NonNullAttr 0x55e1b380d560 <col:52, col:66> 1
|-FunctionDecl 0x55e1b380d748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55e1b380d610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55e1b380d7f0 <line:573:22>
| `-NonNullAttr 0x55e1b380d848 <col:63, col:77> 1
|-FunctionDecl 0x55e1b380d950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55e1b380d898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55e1b380d9f8 <line:575:22>
| `-NonNullAttr 0x55e1b380da50 <col:63, col:77> 1
|-FunctionDecl 0x55e1b380dc78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e1b380da98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55e1b380db18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55e1b380dd28 <line:579:22>
| `-NonNullAttr 0x55e1b380dd80 <col:63, col:80> 1 2
|-FunctionDecl 0x55e1b380dfa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55e1b380ddc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55e1b380de48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55e1b380e058 <line:582:22>
| `-NonNullAttr 0x55e1b380e0b0 <col:63, col:77> 1
|-FunctionDecl 0x55e1b380e258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e1b380e0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55e1b380e178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55e1b380e308 <line:586:22>
| `-NonNullAttr 0x55e1b380e360 <col:63, col:80> 1 2
|-FunctionDecl 0x55e1b380e4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55e1b380e3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55e1b380e428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55e1b380e598 <col:36>
| `-NonNullAttr 0x55e1b380e5f0 <col:77, col:91> 1
|-FunctionDecl 0x55e1b380e928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55e1b380e6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55e1b380e7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55e1b380e9d8 <line:591:22>
| `-NonNullAttr 0x55e1b380ea30 <col:63, col:77> 1
|-FunctionDecl 0x55e1b380eba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55e1b380ea78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55e1b380ec50 <line:593:22>
| `-NonNullAttr 0x55e1b380eca8 <col:63, col:77> 1
|-FunctionDecl 0x55e1b380edb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55e1b380ecf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55e1b380ee58 <line:595:22>
| `-NonNullAttr 0x55e1b380eeb0 <col:52, col:66> 1
|-FunctionDecl 0x55e1b380efc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55e1b380ef10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55e1b380f070 <line:597:22>
| `-NonNullAttr 0x55e1b380f0c8 <col:52, col:66> 1
|-FunctionDecl 0x55e1b380f2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55e1b380f118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55e1b380f190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55e1b380f3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55e1b380f6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55e1b380f428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55e1b380f4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55e1b380f530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55e1b380f790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55e1b380f9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55e1b380f870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55e1b380fa50 <line:606:22>
| `-NonNullAttr 0x55e1b380faa8 <col:63, col:77> 1
|-FunctionDecl 0x55e1b380fbb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55e1b380faf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55e1b380fc58 <line:608:22>
| `-NonNullAttr 0x55e1b380fcb0 <col:63, col:77> 1
|-FunctionDecl 0x55e1b380ff10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e1b380fcf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55e1b380fd78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55e1b380ffc0 <line:612:22>
| `-NonNullAttr 0x55e1b3810018 <col:63, col:80> 1 2
|-FunctionDecl 0x55e1b3810228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55e1b3810068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55e1b38100e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55e1b38102d8 <col:37>
| `-NonNullAttr 0x55e1b3810330 <col:78, col:92> 1
|-FunctionDecl 0x55e1b3810548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55e1b3810378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55e1b3810420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55e1b38105f8 <line:618:22>
| `-NonNullAttr 0x55e1b3810650 <col:63, col:80> 1 2
|-FunctionDecl 0x55e1b3810818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55e1b3810698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55e1b3810710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55e1b38108c8 <line:621:22>
| `-NonNullAttr 0x55e1b3810920 <col:63, col:77> 1
|-FunctionDecl 0x55e1b3810bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55e1b3810a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55e1b3810a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55e1b3810c78 <line:623:22>
| `-NonNullAttr 0x55e1b3810cd0 <col:63, col:77> 1
|-FunctionDecl 0x55e1b3810e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55e1b3810d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55e1b3810f20 <line:625:22>
| `-NonNullAttr 0x55e1b3810f78 <col:63, col:77> 1
|-FunctionDecl 0x55e1b3811080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55e1b3810fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55e1b3811128 <line:627:22>
| `-NonNullAttr 0x55e1b3811180 <col:52, col:66> 1
|-FunctionDecl 0x55e1b3811280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55e1b38111c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55e1b3811328 <line:629:22>
| `-NonNullAttr 0x55e1b3811380 <col:52, col:66> 1
|-FunctionDecl 0x55e1b3811480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55e1b38113c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55e1b3811528 <line:631:22>
| `-NonNullAttr 0x55e1b3811580 <col:52, col:66> 1
|-FunctionDecl 0x55e1b3811958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55e1b3811660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55e1b3811770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55e1b38117f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55e1b3811a10 <line:635:22>
| `-NonNullAttr 0x55e1b3811a68 <col:63, col:77> 1
|-FunctionDecl 0x55e1b3811be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55e1b3811ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55e1b3811c90 <line:637:22>
| `-NonNullAttr 0x55e1b3811ce8 <col:63, col:77> 1
|-FunctionDecl 0x55e1b3811df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55e1b3811d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55e1b3811e98 <line:639:22>
| `-NonNullAttr 0x55e1b3811ef0 <col:52, col:66> 1
|-FunctionDecl 0x55e1b38120e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55e1b3811fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55e1b3812190 <line:641:22>
| `-NonNullAttr 0x55e1b38121e8 <col:63, col:77> 1
|-FunctionDecl 0x55e1b38122f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55e1b3812238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55e1b3812398 <line:643:22>
| `-NonNullAttr 0x55e1b38123f0 <col:63, col:77> 1
|-FunctionDecl 0x55e1b3812618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e1b3812438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55e1b38124b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55e1b38126c8 <line:647:22>
| `-NonNullAttr 0x55e1b3812720 <col:63, col:80> 1 2
|-FunctionDecl 0x55e1b3812928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55e1b3812768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55e1b38127e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55e1b38129d8 <line:650:22>
| `-NonNullAttr 0x55e1b3812a30 <col:63, col:77> 1
|-FunctionDecl 0x55e1b3812d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55e1b3812b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55e1b3812c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55e1b3812e28 <line:653:22>
| `-NonNullAttr 0x55e1b3812e80 <col:63, col:77> 1
|-FunctionDecl 0x55e1b3812fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55e1b3812ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55e1b3813090 <col:69>
|-FunctionDecl 0x55e1b3813208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55e1b38130f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55e1b38132b0 <col:72>
|-FunctionDecl 0x55e1b38134e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55e1b3813318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55e1b38133c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55e1b3813598 <col:44>
|-FunctionDecl 0x55e1b38137b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55e1b3813600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55e1b3813678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55e1b3813868 <line:660:22>
| `-NonNullAttr 0x55e1b38138c0 <col:63, col:77> 2
|-FunctionDecl 0x55e1b3813d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55e1b38139a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55e1b3813ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55e1b3813bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55e1b3813dc0 <col:47>
|-FunctionDecl 0x55e1b3814f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55e1b3813e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55e1b38150b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55e1b3815020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55e1b3815210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55e1b3815178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55e1b3815368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x55e1b38152d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55e1b3815430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55e1b38154f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55e1b38155b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55e1b3815668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55e1b38156e8 prev 0x55e1b3815668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55e1b3815750 <col:24> 'int' 0
|-VarDecl 0x55e1b3815788 <line:674:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55e1b3815808 prev 0x55e1b3815788 <line:675:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55e1b3815870 <col:27> 'int' 0
|-VarDecl 0x55e1b38158a8 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55e1b3815928 prev 0x55e1b38158a8 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55e1b3815990 <col:27> 'int' 0
|-VarDecl 0x55e1b38159c8 <line:678:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x55e1b3815a48 prev 0x55e1b38159c8 <line:679:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x55e1b3815ab0 <col:27> 'int' 0
|-VarDecl 0x55e1b3815ae8 <line:680:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x55e1b3815b68 prev 0x55e1b3815ae8 <line:681:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x55e1b3815bd0 <col:27> 'int' 0
|-VarDecl 0x55e1b3815c08 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x55e1b3815c88 prev 0x55e1b3815c08 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x55e1b3815cf0 <col:9> 'int' 0
|-VarDecl 0x55e1b3815d20 <line:684:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55e1b3815d98 <line:685:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55e1b3815e18 <line:686:1, col:5> col:5 used x 'int'
|-VarDecl 0x55e1b3815e98 prev 0x55e1b3815e18 <line:687:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55e1b3815f00 <col:9> 'int' 0
|-VarDecl 0x55e1b3815f70 <line:688:1, col:5> col:5 used y 'int'
|-VarDecl 0x55e1b3815ff0 prev 0x55e1b3815f70 <line:689:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55e1b3816058 <col:9> 'int' 0
|-VarDecl 0x55e1b3816090 <line:690:1, col:5> col:5 used z 'int'
|-VarDecl 0x55e1b3816110 prev 0x55e1b3816090 <line:691:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55e1b3816178 <col:9> 'int' 0
|-VarDecl 0x55e1b38161a8 <line:692:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x55e1b3816228 <line:693:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x55e1b38162a0 <line:694:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x55e1b3816318 <line:695:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x55e1b3816390 <line:696:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x55e1b3816408 <line:697:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x55e1b3816480 <line:698:1, col:7> col:7 used z$r_buff0_thd4 '_Bool'
|-VarDecl 0x55e1b38164f8 <line:699:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x55e1b3816570 <line:700:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x55e1b38165e8 <line:701:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x55e1b3816660 <line:702:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x55e1b38166d8 <line:703:1, col:7> col:7 used z$r_buff1_thd4 '_Bool'
|-VarDecl 0x55e1b3816750 <line:704:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x55e1b38167d0 <line:705:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x55e1b3816850 <line:706:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x55e1b38168c8 <line:707:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x55e1b3816948 <line:708:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x55e1b38169c0 <line:709:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x55e1b3816a38 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55e1b3816ab0 <line:711:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55e1b3816bc8 prev 0x55e1b3814f60 <line:712:1, line:726:1> line:712:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55e1b3816b30 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55e1b3817188 <line:713:1, line:726:1>
|   |-CallExpr 0x55e1b3816cd8 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e1b3816cc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b3816c70 <col:3> 'void ()' Function 0x55e1b37bc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e1b3816d38 <line:715:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55e1b3816cf8 <col:3> 'int' lvalue Var 0x55e1b3815c88 'a' 'int'
|   | `-IntegerLiteral 0x55e1b3816d18 <col:7> 'int' 1
|   |-CallExpr 0x55e1b3816d90 <line:716:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e1b3816d78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b3816d58 <col:3> 'void ()' Function 0x55e1b37bc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e1b3816de8 <line:717:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e1b3816dd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b3816db0 <col:3> 'void ()' Function 0x55e1b37bc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e1b3816e48 <line:718:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55e1b3816e08 <col:3> 'int' lvalue Var 0x55e1b3815e98 'x' 'int'
|   | `-IntegerLiteral 0x55e1b3816e28 <col:7> 'int' 1
|   |-CallExpr 0x55e1b3816ea0 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e1b3816e88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b3816e68 <col:3> 'void ()' Function 0x55e1b37bc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e1b3816ef8 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e1b3816ee0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b3816ec0 <col:3> 'void ()' Function 0x55e1b37bc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55e1b3816f50 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e1b3816f38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b3816f18 <col:3> 'void ()' Function 0x55e1b37bc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e1b3816fb8 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e1b3816fa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b3816f80 <col:3> 'void ()' Function 0x55e1b37bc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e1b3817070 <line:723:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55e1b3816fd8 <col:3> 'int' lvalue Var 0x55e1b38156e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55e1b3817050 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55e1b3817038 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e1b3816ff8 <col:22> 'int' lvalue Var 0x55e1b38156e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55e1b3817018 <col:41> 'int' 1
|   |-CallExpr 0x55e1b38170c8 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e1b38170b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b3817090 <col:3> 'void ()' Function 0x55e1b37bc410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55e1b3817178 <line:725:3, col:36>
|     `-CallExpr 0x55e1b3817158 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55e1b3817140 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55e1b38170e8 <col:10> 'void *(void)' Function 0x55e1b37bbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55e1b38172a8 prev 0x55e1b38150b8 <line:727:1, line:741:1> line:727:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55e1b3817210 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55e1b3817808 <line:728:1, line:741:1>
|   |-CallExpr 0x55e1b3817388 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e1b3817370 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b3817350 <col:3> 'void ()' Function 0x55e1b37bc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e1b38173e8 <line:730:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55e1b38173a8 <col:3> 'int' lvalue Var 0x55e1b3815e98 'x' 'int'
|   | `-IntegerLiteral 0x55e1b38173c8 <col:7> 'int' 2
|   |-CallExpr 0x55e1b3817440 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e1b3817428 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b3817408 <col:3> 'void ()' Function 0x55e1b37bc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e1b3817498 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e1b3817480 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b3817460 <col:3> 'void ()' Function 0x55e1b37bc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e1b3817510 <line:733:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55e1b38174b8 <col:3> 'int' lvalue Var 0x55e1b3815808 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55e1b38174f8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e1b38174d8 <col:25> 'int' lvalue Var 0x55e1b3815ff0 'y' 'int'
|   |-CallExpr 0x55e1b3817568 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e1b3817550 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b3817530 <col:3> 'void ()' Function 0x55e1b37bc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e1b38175c0 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e1b38175a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b3817588 <col:3> 'void ()' Function 0x55e1b37bc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55e1b3817618 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e1b3817600 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b38175e0 <col:3> 'void ()' Function 0x55e1b37bc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e1b3817670 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e1b3817658 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b3817638 <col:3> 'void ()' Function 0x55e1b37bc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e1b3817728 <line:738:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55e1b3817690 <col:3> 'int' lvalue Var 0x55e1b38156e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55e1b3817708 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55e1b38176f0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e1b38176b0 <col:22> 'int' lvalue Var 0x55e1b38156e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55e1b38176d0 <col:41> 'int' 1
|   |-CallExpr 0x55e1b3817780 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e1b3817768 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b3817748 <col:3> 'void ()' Function 0x55e1b37bc410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55e1b38177f8 <line:740:3, col:36>
|     `-CallExpr 0x55e1b38177d8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55e1b38177c0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55e1b38177a0 <col:10> 'void *(void)' Function 0x55e1b37bbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55e1b3817928 prev 0x55e1b3815210 <line:742:1, line:769:1> line:742:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55e1b3817890 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55e1b381a840 <line:743:1, line:769:1>
|   |-CallExpr 0x55e1b3817a08 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e1b38179f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b38179d0 <col:3> 'void ()' Function 0x55e1b37bc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e1b3817a68 <line:745:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55e1b3817a28 <col:3> 'int' lvalue Var 0x55e1b3815ff0 'y' 'int'
|   | `-IntegerLiteral 0x55e1b3817a48 <col:7> 'int' 1
|   |-CallExpr 0x55e1b3817ac0 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e1b3817aa8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b3817a88 <col:3> 'void ()' Function 0x55e1b37bc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e1b3817b18 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e1b3817b00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b3817ae0 <col:3> 'void ()' Function 0x55e1b37bc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e1b3817bc8 <line:748:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55e1b3817b38 <col:3> '_Bool' lvalue Var 0x55e1b3816a38 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55e1b3817bb0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55e1b3817b90 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55e1b3817b78 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55e1b3817b58 <col:19> 'void *(void)' Function 0x55e1b37bbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55e1b3817c78 <line:749:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55e1b3817be8 <col:3> '_Bool' lvalue Var 0x55e1b3816ab0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55e1b3817c60 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55e1b3817c40 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55e1b3817c28 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55e1b3817c08 <col:19> 'void *(void)' Function 0x55e1b37bbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55e1b3817cf0 <line:750:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55e1b3817c98 <col:3> '_Bool' lvalue Var 0x55e1b38161a8 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55e1b3817cd8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e1b3817cb8 <col:21> '_Bool' lvalue Var 0x55e1b3816ab0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55e1b3817d68 <line:751:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55e1b3817d10 <col:3> 'int' lvalue Var 0x55e1b3816228 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55e1b3817d50 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e1b3817d30 <col:15> 'int' lvalue Var 0x55e1b3816110 'z' 'int'
|   |-BinaryOperator 0x55e1b38181b8 <line:752:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55e1b3817d88 <col:3> 'int' lvalue Var 0x55e1b3816110 'z' 'int'
|   | `-ConditionalOperator 0x55e1b3818188 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55e1b3817fb0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55e1b3817eb8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55e1b3817de0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55e1b3817dc8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55e1b3817da8 <col:8> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55e1b3817e98 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55e1b3817e30 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55e1b3817e18 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55e1b3817df8 <col:27> '_Bool' lvalue Var 0x55e1b3816408 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x55e1b3817e80 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55e1b3817e68 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55e1b3817e48 <col:46> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55e1b3817f90 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55e1b3817f10 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55e1b3817ef8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55e1b3817ed8 <col:65> '_Bool' lvalue Var 0x55e1b3816408 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x55e1b3817f60 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55e1b3817f48 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55e1b3817f28 <col:84> '_Bool' lvalue Var 0x55e1b3816660 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55e1b3818170 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e1b3817fd0 <col:101> 'int' lvalue Var 0x55e1b3816110 'z' 'int'
|   |   `-ParenExpr 0x55e1b3818150 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55e1b3818120 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55e1b3818090 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55e1b3818048 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55e1b3818030 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55e1b3817ff0 <col:106> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55e1b3818078 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55e1b3818060 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55e1b3818010 <col:124> '_Bool' lvalue Var 0x55e1b3816408 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55e1b38180f0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e1b38180b0 <col:141> 'int' lvalue Var 0x55e1b3816850 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55e1b3818108 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e1b38180d0 <col:153> 'int' lvalue Var 0x55e1b3816948 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55e1b38186c8 <line:753:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55e1b38181d8 <col:3> 'int' lvalue Var 0x55e1b3816850 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x55e1b3818698 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55e1b3818668 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55e1b3818650 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55e1b38181f8 <col:15> '_Bool' lvalue Var 0x55e1b3816ab0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55e1b3818680 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e1b3818218 <col:31> 'int' lvalue Var 0x55e1b3816850 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55e1b3818630 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55e1b3818600 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55e1b3818428 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55e1b3818348 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55e1b3818270 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55e1b3818258 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55e1b3818238 <col:45> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55e1b3818328 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55e1b38182c0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55e1b38182a8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55e1b3818288 <col:64> '_Bool' lvalue Var 0x55e1b3816408 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55e1b3818310 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55e1b38182f8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55e1b38182d8 <col:83> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55e1b3818408 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55e1b38183a0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55e1b3818388 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55e1b3818368 <col:102> '_Bool' lvalue Var 0x55e1b3816408 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55e1b38183f0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55e1b38183d8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55e1b38183b8 <col:121> '_Bool' lvalue Var 0x55e1b3816660 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55e1b38185e8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e1b3818448 <col:138> 'int' lvalue Var 0x55e1b3816850 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x55e1b38185c8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55e1b3818598 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55e1b3818508 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55e1b38184c0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55e1b38184a8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55e1b3818468 <col:151> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55e1b38184f0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55e1b38184d8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55e1b3818488 <col:169> '_Bool' lvalue Var 0x55e1b3816408 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55e1b3818568 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55e1b3818528 <col:186> 'int' lvalue Var 0x55e1b3816850 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55e1b3818580 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55e1b3818548 <col:198> 'int' lvalue Var 0x55e1b3816850 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55e1b3818bd8 <line:754:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55e1b38186e8 <col:3> 'int' lvalue Var 0x55e1b3816948 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x55e1b3818ba8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55e1b3818b78 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55e1b3818b60 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55e1b3818708 <col:15> '_Bool' lvalue Var 0x55e1b3816ab0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55e1b3818b90 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e1b3818728 <col:31> 'int' lvalue Var 0x55e1b3816948 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x55e1b3818b40 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55e1b3818b10 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55e1b3818938 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55e1b3818858 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55e1b3818780 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55e1b3818768 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55e1b3818748 <col:45> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55e1b3818838 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55e1b38187d0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55e1b38187b8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55e1b3818798 <col:64> '_Bool' lvalue Var 0x55e1b3816408 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55e1b3818820 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55e1b3818808 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55e1b38187e8 <col:83> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55e1b3818918 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55e1b38188b0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55e1b3818898 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55e1b3818878 <col:102> '_Bool' lvalue Var 0x55e1b3816408 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55e1b3818900 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55e1b38188e8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55e1b38188c8 <col:121> '_Bool' lvalue Var 0x55e1b3816660 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55e1b3818af8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e1b3818958 <col:138> 'int' lvalue Var 0x55e1b3816948 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x55e1b3818ad8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55e1b3818aa8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55e1b3818a18 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55e1b38189d0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55e1b38189b8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55e1b3818978 <col:151> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55e1b3818a00 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55e1b38189e8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55e1b3818998 <col:169> '_Bool' lvalue Var 0x55e1b3816408 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55e1b3818a78 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55e1b3818a38 <col:186> 'int' lvalue Var 0x55e1b3816948 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55e1b3818a90 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55e1b3818a58 <col:198> 'int' lvalue Var 0x55e1b3816948 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55e1b38191a8 <line:755:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55e1b3818bf8 <col:3> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e1b3819190 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e1b3819160 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55e1b3819118 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e1b3819100 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e1b3818c18 <col:20> '_Bool' lvalue Var 0x55e1b3816ab0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e1b3819148 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e1b3819130 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e1b3818c38 <col:36> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55e1b38190e0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55e1b38190b0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55e1b3818e48 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55e1b3818d68 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55e1b3818c90 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55e1b3818c78 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55e1b3818c58 <col:55> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55e1b3818d48 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55e1b3818ce0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55e1b3818cc8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55e1b3818ca8 <col:74> '_Bool' lvalue Var 0x55e1b3816408 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55e1b3818d30 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55e1b3818d18 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55e1b3818cf8 <col:93> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55e1b3818e28 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55e1b3818dc0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55e1b3818da8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55e1b3818d88 <col:112> '_Bool' lvalue Var 0x55e1b3816408 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55e1b3818e10 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55e1b3818df8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55e1b3818dd8 <col:131> '_Bool' lvalue Var 0x55e1b3816660 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55e1b3819098 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55e1b3819080 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e1b3818e68 <col:148> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55e1b3819060 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55e1b3819030 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55e1b3818f28 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55e1b3818ee0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55e1b3818ec8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55e1b3818e88 <col:166> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55e1b3818f10 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55e1b3818ef8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55e1b3818ea8 <col:184> '_Bool' lvalue Var 0x55e1b3816408 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55e1b3818fe8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55e1b3818fa0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55e1b3818f48 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55e1b3819018 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55e1b3819000 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55e1b3818fc8 <col:212> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55e1b3819770 <line:756:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55e1b38191c8 <col:3> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e1b3819758 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e1b3819728 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55e1b38196e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e1b38196c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e1b38191e8 <col:20> '_Bool' lvalue Var 0x55e1b3816ab0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e1b3819710 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e1b38196f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e1b3819208 <col:36> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55e1b38196a8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55e1b3819678 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55e1b3819418 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55e1b3819338 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55e1b3819260 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55e1b3819248 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55e1b3819228 <col:55> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55e1b3819318 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55e1b38192b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55e1b3819298 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55e1b3819278 <col:74> '_Bool' lvalue Var 0x55e1b3816408 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55e1b3819300 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55e1b38192e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55e1b38192c8 <col:93> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55e1b38193f8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55e1b3819390 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55e1b3819378 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55e1b3819358 <col:112> '_Bool' lvalue Var 0x55e1b3816408 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55e1b38193e0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55e1b38193c8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55e1b38193a8 <col:131> '_Bool' lvalue Var 0x55e1b3816660 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55e1b3819660 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55e1b3819648 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e1b3819438 <col:148> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55e1b3819628 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55e1b38195f8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55e1b38194f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55e1b38194b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55e1b3819498 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55e1b3819458 <col:166> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55e1b38194e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55e1b38194c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55e1b3819478 <col:184> '_Bool' lvalue Var 0x55e1b3816408 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55e1b38195c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55e1b3819548 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55e1b3819518 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55e1b38195e0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55e1b38195a0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55e1b3819570 <col:219> 'int' 0
|   |-BinaryOperator 0x55e1b3819d18 <line:757:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55e1b3819790 <col:3> '_Bool' lvalue Var 0x55e1b3816408 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55e1b3819d00 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e1b3819cd0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55e1b3819c88 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e1b3819c70 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e1b38197b0 <col:20> '_Bool' lvalue Var 0x55e1b3816ab0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e1b3819cb8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e1b3819ca0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e1b38197d0 <col:36> '_Bool' lvalue Var 0x55e1b3816408 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x55e1b3819c50 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55e1b3819c20 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55e1b38199e0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55e1b3819900 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55e1b3819828 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55e1b3819810 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55e1b38197f0 <col:55> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55e1b38198e0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55e1b3819878 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55e1b3819860 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55e1b3819840 <col:74> '_Bool' lvalue Var 0x55e1b3816408 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55e1b38198c8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55e1b38198b0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55e1b3819890 <col:93> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55e1b38199c0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55e1b3819958 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55e1b3819940 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55e1b3819920 <col:112> '_Bool' lvalue Var 0x55e1b3816408 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55e1b38199a8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55e1b3819990 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55e1b3819970 <col:131> '_Bool' lvalue Var 0x55e1b3816660 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55e1b3819c08 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55e1b3819bf0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e1b3819a00 <col:148> '_Bool' lvalue Var 0x55e1b3816408 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x55e1b3819bd0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55e1b3819ba0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55e1b3819ac0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55e1b3819a78 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55e1b3819a60 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55e1b3819a20 <col:166> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55e1b3819aa8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55e1b3819a90 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55e1b3819a40 <col:184> '_Bool' lvalue Var 0x55e1b3816408 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55e1b3819b58 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55e1b3819b10 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55e1b3819ae0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55e1b3819b88 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55e1b3819b70 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55e1b3819b38 <col:212> '_Bool' lvalue Var 0x55e1b3816408 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55e1b381a308 <line:758:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55e1b3819d38 <col:3> '_Bool' lvalue Var 0x55e1b3816660 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55e1b381a2f0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e1b381a2c0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55e1b381a278 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e1b381a260 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e1b3819d58 <col:20> '_Bool' lvalue Var 0x55e1b3816ab0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e1b381a2a8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e1b381a290 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e1b3819d78 <col:36> '_Bool' lvalue Var 0x55e1b3816660 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x55e1b381a240 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55e1b381a210 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55e1b3819fb0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55e1b3819ea8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55e1b3819dd0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55e1b3819db8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55e1b3819d98 <col:55> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55e1b3819e88 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55e1b3819e20 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55e1b3819e08 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55e1b3819de8 <col:74> '_Bool' lvalue Var 0x55e1b3816408 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55e1b3819e70 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55e1b3819e58 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55e1b3819e38 <col:93> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55e1b3819f68 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55e1b3819f00 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55e1b3819ee8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55e1b3819ec8 <col:112> '_Bool' lvalue Var 0x55e1b3816408 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55e1b3819f50 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55e1b3819f38 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55e1b3819f18 <col:131> '_Bool' lvalue Var 0x55e1b3816660 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55e1b381a1f8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55e1b381a1e0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e1b3819fd0 <col:148> '_Bool' lvalue Var 0x55e1b3816660 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x55e1b381a1c0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55e1b381a190 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55e1b381a090 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55e1b381a048 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55e1b381a030 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55e1b3819ff0 <col:166> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55e1b381a078 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55e1b381a060 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55e1b381a010 <col:184> '_Bool' lvalue Var 0x55e1b3816408 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55e1b381a160 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55e1b381a0e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55e1b381a0b0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55e1b381a178 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55e1b381a138 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55e1b381a108 <col:219> 'int' 0
|   |-BinaryOperator 0x55e1b381a380 <line:759:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55e1b381a328 <col:3> 'int' lvalue Var 0x55e1b3815928 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55e1b381a368 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e1b381a348 <col:25> 'int' lvalue Var 0x55e1b3816110 'z' 'int'
|   |-BinaryOperator 0x55e1b381a4b0 <line:760:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55e1b381a3a0 <col:3> 'int' lvalue Var 0x55e1b3816110 'z' 'int'
|   | `-ConditionalOperator 0x55e1b381a480 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55e1b381a438 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55e1b381a420 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55e1b381a3c0 <col:7> '_Bool' lvalue Var 0x55e1b38161a8 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55e1b381a450 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e1b381a3e0 <col:25> 'int' lvalue Var 0x55e1b3816228 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55e1b381a468 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55e1b381a400 <col:37> 'int' lvalue Var 0x55e1b3816110 'z' 'int'
|   |-BinaryOperator 0x55e1b381a548 <line:761:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55e1b381a4d0 <col:3> '_Bool' lvalue Var 0x55e1b38161a8 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55e1b381a520 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55e1b381a4f0 <col:28> 'int' 0
|   |-CallExpr 0x55e1b381a5a0 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e1b381a588 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b381a568 <col:3> 'void ()' Function 0x55e1b37bc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e1b381a5f8 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e1b381a5e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b381a5c0 <col:3> 'void ()' Function 0x55e1b37bc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55e1b381a650 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e1b381a638 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b381a618 <col:3> 'void ()' Function 0x55e1b37bc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e1b381a6a8 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e1b381a690 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b381a670 <col:3> 'void ()' Function 0x55e1b37bc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e1b381a760 <line:766:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55e1b381a6c8 <col:3> 'int' lvalue Var 0x55e1b38156e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55e1b381a740 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55e1b381a728 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e1b381a6e8 <col:22> 'int' lvalue Var 0x55e1b38156e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55e1b381a708 <col:41> 'int' 1
|   |-CallExpr 0x55e1b381a7b8 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e1b381a7a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b381a780 <col:3> 'void ()' Function 0x55e1b37bc410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55e1b381a830 <line:768:3, col:36>
|     `-CallExpr 0x55e1b381a810 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55e1b381a7f8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55e1b381a7d8 <col:10> 'void *(void)' Function 0x55e1b37bbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55e1b381a9c8 prev 0x55e1b3815368 <line:770:1, line:815:1> line:770:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x55e1b381a930 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55e1b381ecc8 <line:771:1, line:815:1>
|   |-CallExpr 0x55e1b381aaa8 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e1b381aa90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b381aa70 <col:3> 'void ()' Function 0x55e1b37bc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e1b381ab20 <line:773:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55e1b381aac8 <col:3> 'int' lvalue Var 0x55e1b3816948 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55e1b381ab08 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e1b381aae8 <col:15> 'int' lvalue Var 0x55e1b3816850 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55e1b381ab80 <line:774:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55e1b381ab40 <col:3> 'int' lvalue Var 0x55e1b3816850 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x55e1b381ab60 <col:15> 'int' 1
|   |-BinaryOperator 0x55e1b381abf8 <line:775:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55e1b381aba0 <col:3> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e1b381abe0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e1b381abc0 <col:20> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55e1b381ac90 <line:776:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55e1b381ac18 <col:3> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55e1b381ac68 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55e1b381ac38 <col:27> 'int' 1
|   |-CallExpr 0x55e1b381ae18 <line:777:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55e1b381ae00 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55e1b381acb0 <col:3> 'void (int)' Function 0x55e1b37bc0d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55e1b381adb0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55e1b381ad90 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55e1b381ad70 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55e1b381ad28 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55e1b381ad10 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55e1b381acd0 <col:23> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55e1b381ad58 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55e1b381ad40 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55e1b381acf0 <col:41> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55e1b381ae98 <line:778:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55e1b381ae40 <col:3> '_Bool' lvalue Var 0x55e1b38164f8 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55e1b381ae80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e1b381ae60 <col:20> '_Bool' lvalue Var 0x55e1b38162a0 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55e1b381af10 <line:779:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55e1b381aeb8 <col:3> '_Bool' lvalue Var 0x55e1b3816570 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55e1b381aef8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e1b381aed8 <col:20> '_Bool' lvalue Var 0x55e1b3816318 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55e1b381af88 <line:780:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55e1b381af30 <col:3> '_Bool' lvalue Var 0x55e1b38165e8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55e1b381af70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e1b381af50 <col:20> '_Bool' lvalue Var 0x55e1b3816390 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55e1b381b018 <line:781:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55e1b381afc0 <col:3> '_Bool' lvalue Var 0x55e1b3816660 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55e1b381b000 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e1b381afe0 <col:20> '_Bool' lvalue Var 0x55e1b3816408 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55e1b381b090 <line:782:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55e1b381b038 <col:3> '_Bool' lvalue Var 0x55e1b38166d8 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55e1b381b078 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e1b381b058 <col:20> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55e1b381b128 <line:783:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55e1b381b0b0 <col:3> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   | `-CStyleCastExpr 0x55e1b381b100 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55e1b381b0d0 <col:27> 'int' 1
|   |-CallExpr 0x55e1b381b180 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e1b381b168 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b381b148 <col:3> 'void ()' Function 0x55e1b37bc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e1b381b1d8 <line:785:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e1b381b1c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b381b1a0 <col:3> 'void ()' Function 0x55e1b37bc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e1b381b288 <line:786:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55e1b381b1f8 <col:3> '_Bool' lvalue Var 0x55e1b3816a38 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55e1b381b270 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55e1b381b250 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55e1b381b238 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55e1b381b218 <col:19> 'void *(void)' Function 0x55e1b37bbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55e1b381b338 <line:787:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55e1b381b2a8 <col:3> '_Bool' lvalue Var 0x55e1b3816ab0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55e1b381b320 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55e1b381b300 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55e1b381b2e8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55e1b381b2c8 <col:19> 'void *(void)' Function 0x55e1b37bbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55e1b381b3b0 <line:788:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55e1b381b358 <col:3> '_Bool' lvalue Var 0x55e1b38161a8 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55e1b381b398 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e1b381b378 <col:21> '_Bool' lvalue Var 0x55e1b3816ab0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55e1b381b428 <line:789:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55e1b381b3d0 <col:3> 'int' lvalue Var 0x55e1b3816228 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55e1b381b410 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e1b381b3f0 <col:15> 'int' lvalue Var 0x55e1b3816110 'z' 'int'
|   |-BinaryOperator 0x55e1b381b860 <line:790:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55e1b381b448 <col:3> 'int' lvalue Var 0x55e1b3816110 'z' 'int'
|   | `-ConditionalOperator 0x55e1b381b830 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55e1b381b658 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55e1b381b578 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55e1b381b4a0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55e1b381b488 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55e1b381b468 <col:8> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55e1b381b558 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55e1b381b4f0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55e1b381b4d8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55e1b381b4b8 <col:27> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x55e1b381b540 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55e1b381b528 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55e1b381b508 <col:46> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55e1b381b638 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55e1b381b5d0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55e1b381b5b8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55e1b381b598 <col:65> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x55e1b381b620 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55e1b381b608 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55e1b381b5e8 <col:84> '_Bool' lvalue Var 0x55e1b38166d8 'z$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55e1b381b818 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e1b381b678 <col:101> 'int' lvalue Var 0x55e1b3816110 'z' 'int'
|   |   `-ParenExpr 0x55e1b381b7f8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55e1b381b7c8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55e1b381b738 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55e1b381b6f0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55e1b381b6d8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55e1b381b698 <col:106> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55e1b381b720 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55e1b381b708 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55e1b381b6b8 <col:124> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55e1b381b798 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e1b381b758 <col:141> 'int' lvalue Var 0x55e1b3816850 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55e1b381b7b0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e1b381b778 <col:153> 'int' lvalue Var 0x55e1b3816948 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55e1b381bd70 <line:791:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55e1b381b880 <col:3> 'int' lvalue Var 0x55e1b3816850 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x55e1b381bd40 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55e1b381bd10 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55e1b381bcf8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55e1b381b8a0 <col:15> '_Bool' lvalue Var 0x55e1b3816ab0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55e1b381bd28 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e1b381b8c0 <col:31> 'int' lvalue Var 0x55e1b3816850 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55e1b381bcd8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55e1b381bca8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55e1b381bad0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55e1b381b9f0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55e1b381b918 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55e1b381b900 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55e1b381b8e0 <col:45> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55e1b381b9d0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55e1b381b968 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55e1b381b950 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55e1b381b930 <col:64> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x55e1b381b9b8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55e1b381b9a0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55e1b381b980 <col:83> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55e1b381bab0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55e1b381ba48 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55e1b381ba30 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55e1b381ba10 <col:102> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x55e1b381ba98 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55e1b381ba80 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55e1b381ba60 <col:121> '_Bool' lvalue Var 0x55e1b38166d8 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55e1b381bc90 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e1b381baf0 <col:138> 'int' lvalue Var 0x55e1b3816850 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x55e1b381bc70 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55e1b381bc40 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55e1b381bbb0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55e1b381bb68 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55e1b381bb50 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55e1b381bb10 <col:151> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55e1b381bb98 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55e1b381bb80 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55e1b381bb30 <col:169> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x55e1b381bc10 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55e1b381bbd0 <col:186> 'int' lvalue Var 0x55e1b3816850 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55e1b381bc28 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55e1b381bbf0 <col:198> 'int' lvalue Var 0x55e1b3816850 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55e1b381c290 <line:792:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55e1b381bd90 <col:3> 'int' lvalue Var 0x55e1b3816948 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x55e1b381c260 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55e1b381c230 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55e1b381c218 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55e1b381bdb0 <col:15> '_Bool' lvalue Var 0x55e1b3816ab0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55e1b381c248 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e1b381bdd0 <col:31> 'int' lvalue Var 0x55e1b3816948 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x55e1b381c1f8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55e1b381c1c8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55e1b381bff0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55e1b381bf00 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55e1b381be28 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55e1b381be10 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55e1b381bdf0 <col:45> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55e1b381bee0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55e1b381be78 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55e1b381be60 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55e1b381be40 <col:64> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x55e1b381bec8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55e1b381beb0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55e1b381be90 <col:83> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55e1b381bfd0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55e1b381bf58 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55e1b381bf40 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55e1b381bf20 <col:102> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x55e1b381bfa8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55e1b381bf90 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55e1b381bf70 <col:121> '_Bool' lvalue Var 0x55e1b38166d8 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55e1b381c1b0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e1b381c010 <col:138> 'int' lvalue Var 0x55e1b3816948 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x55e1b381c190 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55e1b381c160 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55e1b381c0d0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55e1b381c088 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55e1b381c070 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55e1b381c030 <col:151> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55e1b381c0b8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55e1b381c0a0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55e1b381c050 <col:169> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x55e1b381c130 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55e1b381c0f0 <col:186> 'int' lvalue Var 0x55e1b3816948 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55e1b381c148 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55e1b381c110 <col:198> 'int' lvalue Var 0x55e1b3816948 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55e1b381c838 <line:793:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55e1b381c2b0 <col:3> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e1b381c820 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e1b381c7f0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55e1b381c7a8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e1b381c790 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e1b381c2d0 <col:20> '_Bool' lvalue Var 0x55e1b3816ab0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e1b381c7d8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e1b381c7c0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e1b381c2f0 <col:36> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55e1b381c770 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55e1b381c740 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55e1b381c500 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55e1b381c420 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55e1b381c348 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55e1b381c330 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55e1b381c310 <col:55> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55e1b381c400 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55e1b381c398 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55e1b381c380 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55e1b381c360 <col:74> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55e1b381c3e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55e1b381c3d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55e1b381c3b0 <col:93> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55e1b381c4e0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55e1b381c478 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55e1b381c460 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55e1b381c440 <col:112> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55e1b381c4c8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55e1b381c4b0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55e1b381c490 <col:131> '_Bool' lvalue Var 0x55e1b38166d8 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55e1b381c728 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55e1b381c710 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e1b381c520 <col:148> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55e1b381c6f0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55e1b381c6c0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55e1b381c5e0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55e1b381c598 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55e1b381c580 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55e1b381c540 <col:166> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55e1b381c5c8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55e1b381c5b0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55e1b381c560 <col:184> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55e1b381c678 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55e1b381c630 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55e1b381c600 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55e1b381c6a8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55e1b381c690 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55e1b381c658 <col:212> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55e1b381ce00 <line:794:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55e1b381c858 <col:3> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e1b381cde8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e1b381cdb8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55e1b381cd70 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e1b381cd58 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e1b381c878 <col:20> '_Bool' lvalue Var 0x55e1b3816ab0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e1b381cda0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e1b381cd88 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e1b381c898 <col:36> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55e1b381cd38 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55e1b381cd08 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55e1b381caa8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55e1b381c9c8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55e1b381c8f0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55e1b381c8d8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55e1b381c8b8 <col:55> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55e1b381c9a8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55e1b381c940 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55e1b381c928 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55e1b381c908 <col:74> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55e1b381c990 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55e1b381c978 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55e1b381c958 <col:93> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55e1b381ca88 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55e1b381ca20 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55e1b381ca08 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55e1b381c9e8 <col:112> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55e1b381ca70 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55e1b381ca58 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55e1b381ca38 <col:131> '_Bool' lvalue Var 0x55e1b38166d8 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55e1b381ccf0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55e1b381ccd8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e1b381cac8 <col:148> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55e1b381ccb8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55e1b381cc88 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55e1b381cb88 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55e1b381cb40 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55e1b381cb28 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55e1b381cae8 <col:166> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55e1b381cb70 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55e1b381cb58 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55e1b381cb08 <col:184> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55e1b381cc58 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55e1b381cbd8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55e1b381cba8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55e1b381cc70 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55e1b381cc30 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55e1b381cc00 <col:219> 'int' 0
|   |-BinaryOperator 0x55e1b381d3b8 <line:795:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55e1b381ce20 <col:3> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55e1b381d3a0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e1b381d370 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55e1b381d328 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e1b381d310 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e1b381ce40 <col:20> '_Bool' lvalue Var 0x55e1b3816ab0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e1b381d358 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e1b381d340 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e1b381ce60 <col:36> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x55e1b381d2f0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55e1b381d2c0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55e1b381d080 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55e1b381cf90 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55e1b381ceb8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55e1b381cea0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55e1b381ce80 <col:55> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55e1b381cf70 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55e1b381cf08 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55e1b381cef0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55e1b381ced0 <col:74> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55e1b381cf58 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55e1b381cf40 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55e1b381cf20 <col:93> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55e1b381d060 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55e1b381cff8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55e1b381cfe0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55e1b381cfb0 <col:112> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55e1b381d048 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55e1b381d030 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55e1b381d010 <col:131> '_Bool' lvalue Var 0x55e1b38166d8 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55e1b381d2a8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55e1b381d290 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e1b381d0a0 <col:148> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x55e1b381d270 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55e1b381d240 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55e1b381d160 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55e1b381d118 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55e1b381d100 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55e1b381d0c0 <col:166> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55e1b381d148 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55e1b381d130 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55e1b381d0e0 <col:184> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55e1b381d1f8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55e1b381d1b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55e1b381d180 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55e1b381d228 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55e1b381d210 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55e1b381d1d8 <col:212> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55e1b381d980 <line:796:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55e1b381d3d8 <col:3> '_Bool' lvalue Var 0x55e1b38166d8 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55e1b381d968 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e1b381d938 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55e1b381d8f0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e1b381d8d8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e1b381d3f8 <col:20> '_Bool' lvalue Var 0x55e1b3816ab0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e1b381d920 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e1b381d908 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e1b381d418 <col:36> '_Bool' lvalue Var 0x55e1b38166d8 'z$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x55e1b381d8b8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55e1b381d888 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55e1b381d628 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55e1b381d548 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55e1b381d470 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55e1b381d458 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55e1b381d438 <col:55> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55e1b381d528 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55e1b381d4c0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55e1b381d4a8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55e1b381d488 <col:74> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55e1b381d510 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55e1b381d4f8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55e1b381d4d8 <col:93> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55e1b381d608 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55e1b381d5a0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55e1b381d588 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55e1b381d568 <col:112> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55e1b381d5f0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55e1b381d5d8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55e1b381d5b8 <col:131> '_Bool' lvalue Var 0x55e1b38166d8 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55e1b381d870 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55e1b381d858 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e1b381d648 <col:148> '_Bool' lvalue Var 0x55e1b38166d8 'z$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x55e1b381d838 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55e1b381d808 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55e1b381d708 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55e1b381d6c0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55e1b381d6a8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55e1b381d668 <col:166> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55e1b381d6f0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55e1b381d6d8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55e1b381d688 <col:184> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55e1b381d7d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55e1b381d758 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55e1b381d728 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55e1b381d7f0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55e1b381d7b0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55e1b381d780 <col:219> 'int' 0
|   |-BinaryOperator 0x55e1b381d9f8 <line:797:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55e1b381d9a0 <col:3> 'int' lvalue Var 0x55e1b3815a48 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x55e1b381d9e0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e1b381d9c0 <col:25> 'int' lvalue Var 0x55e1b3816110 'z' 'int'
|   |-BinaryOperator 0x55e1b381db28 <line:798:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55e1b381da18 <col:3> 'int' lvalue Var 0x55e1b3816110 'z' 'int'
|   | `-ConditionalOperator 0x55e1b381daf8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55e1b381dab0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55e1b381da98 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55e1b381da38 <col:7> '_Bool' lvalue Var 0x55e1b38161a8 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55e1b381dac8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e1b381da58 <col:25> 'int' lvalue Var 0x55e1b3816228 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55e1b381dae0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55e1b381da78 <col:37> 'int' lvalue Var 0x55e1b3816110 'z' 'int'
|   |-BinaryOperator 0x55e1b381dbc0 <line:799:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55e1b381db48 <col:3> '_Bool' lvalue Var 0x55e1b38161a8 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55e1b381db98 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55e1b381db68 <col:28> 'int' 0
|   |-CallExpr 0x55e1b381dc18 <line:800:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e1b381dc00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b381dbe0 <col:3> 'void ()' Function 0x55e1b37bc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e1b381dc70 <line:801:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e1b381dc58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b381dc38 <col:3> 'void ()' Function 0x55e1b37bc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e1b381dce8 <line:802:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55e1b381dc90 <col:3> 'int' lvalue Var 0x55e1b3815b68 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x55e1b381dcd0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e1b381dcb0 <col:25> 'int' lvalue Var 0x55e1b3815c88 'a' 'int'
|   |-CallExpr 0x55e1b381dd40 <line:803:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e1b381dd28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b381dd08 <col:3> 'void ()' Function 0x55e1b37bc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e1b381dd98 <line:804:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e1b381dd80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b381dd60 <col:3> 'void ()' Function 0x55e1b37bc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e1b381e0a0 <line:805:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55e1b381ddb8 <col:3> 'int' lvalue Var 0x55e1b3816110 'z' 'int'
|   | `-ConditionalOperator 0x55e1b381e070 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55e1b381de78 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55e1b381de30 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55e1b381de18 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55e1b381ddd8 <col:7> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55e1b381de60 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55e1b381de48 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55e1b381ddf8 <col:25> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55e1b381e058 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e1b381de98 <col:42> 'int' lvalue Var 0x55e1b3816850 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55e1b381e038 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55e1b381e008 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55e1b381df58 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55e1b381df10 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55e1b381def8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55e1b381deb8 <col:55> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55e1b381df40 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55e1b381df28 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55e1b381ded8 <col:73> '_Bool' lvalue Var 0x55e1b38166d8 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55e1b381dfb8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e1b381df78 <col:90> 'int' lvalue Var 0x55e1b3816948 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55e1b381dff0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e1b381df98 <col:102> 'int' lvalue Var 0x55e1b3816110 'z' 'int'
|   |-BinaryOperator 0x55e1b381e2a8 <line:806:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55e1b381e0c0 <col:3> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e1b381e290 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e1b381e260 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55e1b381e180 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55e1b381e138 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55e1b381e120 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55e1b381e0e0 <col:20> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55e1b381e168 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55e1b381e150 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55e1b381e100 <col:38> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55e1b381e218 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e1b381e1d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e1b381e1a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55e1b381e248 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e1b381e230 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e1b381e1f8 <col:66> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55e1b381e590 <line:807:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55e1b381e2c8 <col:3> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e1b381e578 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e1b381e548 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55e1b381e468 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55e1b381e388 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55e1b381e340 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55e1b381e328 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55e1b381e2e8 <col:20> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55e1b381e370 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55e1b381e358 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55e1b381e308 <col:38> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55e1b381e448 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55e1b381e400 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55e1b381e3e8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55e1b381e3a8 <col:56> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55e1b381e430 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55e1b381e418 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55e1b381e3c8 <col:74> '_Bool' lvalue Var 0x55e1b38166d8 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55e1b381e500 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e1b381e4b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e1b381e488 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55e1b381e530 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e1b381e518 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e1b381e4e0 <col:102> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55e1b381e798 <line:808:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55e1b381e5b0 <col:3> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55e1b381e780 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e1b381e750 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55e1b381e670 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55e1b381e628 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55e1b381e610 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55e1b381e5d0 <col:20> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55e1b381e658 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55e1b381e640 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55e1b381e5f0 <col:38> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55e1b381e708 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e1b381e6c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e1b381e690 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55e1b381e738 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e1b381e720 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e1b381e6e8 <col:66> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55e1b381ea80 <line:809:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55e1b381e7b8 <col:3> '_Bool' lvalue Var 0x55e1b38166d8 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55e1b381ea68 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e1b381ea38 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55e1b381e958 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55e1b381e878 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55e1b381e830 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55e1b381e818 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55e1b381e7d8 <col:20> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55e1b381e860 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55e1b381e848 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55e1b381e7f8 <col:38> '_Bool' lvalue Var 0x55e1b3816480 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55e1b381e938 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55e1b381e8f0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55e1b381e8d8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55e1b381e898 <col:56> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55e1b381e920 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55e1b381e908 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55e1b381e8b8 <col:74> '_Bool' lvalue Var 0x55e1b38166d8 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55e1b381e9f0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e1b381e9a8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e1b381e978 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55e1b381ea20 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e1b381ea08 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e1b381e9d0 <col:102> '_Bool' lvalue Var 0x55e1b38166d8 'z$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x55e1b381ead8 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e1b381eac0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b381eaa0 <col:3> 'void ()' Function 0x55e1b37bc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e1b381eb30 <line:811:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e1b381eb18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b381eaf8 <col:3> 'void ()' Function 0x55e1b37bc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e1b381ebe8 <line:812:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55e1b381eb50 <col:3> 'int' lvalue Var 0x55e1b38156e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55e1b381ebc8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55e1b381ebb0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e1b381eb70 <col:22> 'int' lvalue Var 0x55e1b38156e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55e1b381eb90 <col:41> 'int' 1
|   |-CallExpr 0x55e1b381ec40 <line:813:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e1b381ec28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e1b381ec08 <col:3> 'void ()' Function 0x55e1b37bc410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55e1b381ecb8 <line:814:3, col:36>
|     `-CallExpr 0x55e1b381ec98 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55e1b381ec80 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55e1b381ec60 <col:10> 'void *(void)' Function 0x55e1b37bbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55e1b381ee50 prev 0x55e1b3815430 <line:816:1, line:818:1> line:816:6 fence 'void ()'
| `-CompoundStmt 0x55e1b381eef0 <line:817:1, line:818:1>
|-FunctionDecl 0x55e1b381ef20 prev 0x55e1b38154f0 <line:819:1, line:821:1> line:819:6 isync 'void ()'
| `-CompoundStmt 0x55e1b381efc0 <line:820:1, line:821:1>
|-FunctionDecl 0x55e1b381f000 prev 0x55e1b38155b0 <line:822:1, line:824:1> line:822:6 lwfence 'void ()'
| `-CompoundStmt 0x55e1b381f0a0 <line:823:1, line:824:1>
`-FunctionDecl 0x55e1b381f108 <line:825:1, line:851:1> line:825:5 main 'int ()'
  `-CompoundStmt 0x55e1b3821120 <line:826:1, line:851:1>
    |-DeclStmt 0x55e1b381f220 <line:827:3, col:17>
    | `-VarDecl 0x55e1b381f1b8 <col:3, col:13> col:13 used t495 'pthread_t':'unsigned long'
    |-CallExpr 0x55e1b381f428 <line:828:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55e1b381f410 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e1b381f238 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55e1b37fc8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55e1b381f278 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55e1b381f258 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55e1b381f1b8 't495' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55e1b381f468 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55e1b381f2f0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55e1b381f2c8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55e1b381f290 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55e1b381f480 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e1b381f310 <col:38> 'void *(void *)' Function 0x55e1b3816bc8 'P0' 'void *(void *)'
    | `-ParenExpr 0x55e1b381f390 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55e1b381f368 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55e1b381f330 <col:51> 'int' 0
    |-DeclStmt 0x55e1b381f510 <line:829:3, col:17>
    | `-VarDecl 0x55e1b381f4a8 <col:3, col:13> col:13 used t496 'pthread_t':'unsigned long'
    |-CallExpr 0x55e1b381f6b8 <line:830:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55e1b381f6a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e1b381f528 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55e1b37fc8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55e1b381f568 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55e1b381f548 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55e1b381f4a8 't496' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55e1b381f6f8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55e1b381f5e0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55e1b381f5b8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55e1b381f580 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55e1b381f710 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e1b381f600 <col:38> 'void *(void *)' Function 0x55e1b38172a8 'P1' 'void *(void *)'
    | `-ParenExpr 0x55e1b381f680 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55e1b381f658 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55e1b381f620 <col:51> 'int' 0
    |-DeclStmt 0x55e1b381f7a0 <line:831:3, col:17>
    | `-VarDecl 0x55e1b381f738 <col:3, col:13> col:13 used t497 'pthread_t':'unsigned long'
    |-CallExpr 0x55e1b381f948 <line:832:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55e1b381f930 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e1b381f7b8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55e1b37fc8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55e1b381f7f8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55e1b381f7d8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55e1b381f738 't497' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55e1b381f988 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55e1b381f870 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55e1b381f848 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55e1b381f810 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55e1b381f9a0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e1b381f890 <col:38> 'void *(void *)' Function 0x55e1b3817928 'P2' 'void *(void *)'
    | `-ParenExpr 0x55e1b381f910 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55e1b381f8e8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55e1b381f8b0 <col:51> 'int' 0
    |-DeclStmt 0x55e1b381fa30 <line:833:3, col:17>
    | `-VarDecl 0x55e1b381f9c8 <col:3, col:13> col:13 used t498 'pthread_t':'unsigned long'
    |-CallExpr 0x55e1b381fbd8 <line:834:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55e1b381fbc0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e1b381fa48 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55e1b37fc8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55e1b381fa88 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55e1b381fa68 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55e1b381f9c8 't498' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55e1b381fc18 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55e1b381fb00 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55e1b381fad8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55e1b381faa0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55e1b381fc30 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e1b381fb20 <col:38> 'void *(void *)' Function 0x55e1b381a9c8 'P3' 'void *(void *)'
    | `-ParenExpr 0x55e1b381fba0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55e1b381fb78 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55e1b381fb40 <col:51> 'int' 0
    |-CallExpr 0x55e1b381fc80 <line:835:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55e1b381fc68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e1b381fc48 <col:3> 'void ()' Function 0x55e1b37bc350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55e1b381fd50 <line:836:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55e1b381fca0 <col:3> '_Bool' lvalue Var 0x55e1b3815d20 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55e1b381fd38 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55e1b381fd18 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55e1b381fd00 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55e1b381fcc0 <col:21> 'int' lvalue Var 0x55e1b38156e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55e1b381fce0 <col:41> 'int' 4
    |-CallExpr 0x55e1b381fda8 <line:837:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55e1b381fd90 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e1b381fd70 <col:3> 'void ()' Function 0x55e1b37bc410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55e1b381fe20 <line:838:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55e1b381fe08 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e1b381fdc8 <col:3> 'void (int)' Function 0x55e1b37bbca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55e1b381fe60 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55e1b381fe48 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55e1b381fde8 <col:21> '_Bool' lvalue Var 0x55e1b3815d20 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55e1b381feb0 <line:839:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55e1b381fe98 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e1b381fe78 <col:3> 'void ()' Function 0x55e1b37bc350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55e1b38201b8 <line:840:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55e1b381fed0 <col:3> 'int' lvalue Var 0x55e1b3816110 'z' 'int'
    | `-ConditionalOperator 0x55e1b3820188 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55e1b381ff90 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55e1b381ff48 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55e1b381ff30 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55e1b381fef0 <col:7> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55e1b381ff78 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55e1b381ff60 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55e1b381ff10 <col:25> '_Bool' lvalue Var 0x55e1b38162a0 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55e1b3820170 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55e1b381ffb0 <col:42> 'int' lvalue Var 0x55e1b3816850 'z$w_buff0' 'int'
    |   `-ParenExpr 0x55e1b3820150 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55e1b3820120 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55e1b3820090 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55e1b3820048 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55e1b3820030 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55e1b381ffd0 <col:55> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55e1b3820078 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55e1b3820060 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55e1b3820010 <col:73> '_Bool' lvalue Var 0x55e1b38164f8 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55e1b38200f0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55e1b38200b0 <col:90> 'int' lvalue Var 0x55e1b3816948 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55e1b3820108 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55e1b38200d0 <col:102> 'int' lvalue Var 0x55e1b3816110 'z' 'int'
    |-BinaryOperator 0x55e1b38203c0 <line:841:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55e1b38201d8 <col:3> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55e1b38203a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55e1b3820378 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55e1b3820298 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55e1b3820250 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55e1b3820238 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55e1b38201f8 <col:20> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55e1b3820280 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55e1b3820268 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55e1b3820218 <col:38> '_Bool' lvalue Var 0x55e1b38162a0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55e1b3820330 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55e1b38202e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55e1b38202b8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55e1b3820360 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55e1b3820348 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55e1b3820310 <col:66> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55e1b38206a8 <line:842:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55e1b38203e0 <col:3> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55e1b3820690 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55e1b3820660 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55e1b3820580 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55e1b38204a0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55e1b3820458 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55e1b3820440 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55e1b3820400 <col:20> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55e1b3820488 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55e1b3820470 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55e1b3820420 <col:38> '_Bool' lvalue Var 0x55e1b38162a0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55e1b3820560 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55e1b3820518 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55e1b3820500 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55e1b38204c0 <col:56> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55e1b3820548 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55e1b3820530 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55e1b38204e0 <col:74> '_Bool' lvalue Var 0x55e1b38164f8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55e1b3820618 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55e1b38205d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55e1b38205a0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55e1b3820648 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55e1b3820630 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55e1b38205f8 <col:102> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55e1b38208b0 <line:843:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55e1b38206c8 <col:3> '_Bool' lvalue Var 0x55e1b38162a0 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55e1b3820898 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55e1b3820868 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55e1b3820788 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55e1b3820740 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55e1b3820728 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55e1b38206e8 <col:20> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55e1b3820770 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55e1b3820758 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55e1b3820708 <col:38> '_Bool' lvalue Var 0x55e1b38162a0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55e1b3820820 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55e1b38207d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55e1b38207a8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55e1b3820850 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55e1b3820838 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55e1b3820800 <col:66> '_Bool' lvalue Var 0x55e1b38162a0 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55e1b3820b98 <line:844:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55e1b38208d0 <col:3> '_Bool' lvalue Var 0x55e1b38164f8 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55e1b3820b80 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55e1b3820b50 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55e1b3820a70 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55e1b3820990 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55e1b3820948 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55e1b3820930 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55e1b38208f0 <col:20> '_Bool' lvalue Var 0x55e1b38168c8 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55e1b3820978 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55e1b3820960 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55e1b3820910 <col:38> '_Bool' lvalue Var 0x55e1b38162a0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55e1b3820a50 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55e1b3820a08 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55e1b38209f0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55e1b38209b0 <col:56> '_Bool' lvalue Var 0x55e1b38169c0 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55e1b3820a38 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55e1b3820a20 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55e1b38209d0 <col:74> '_Bool' lvalue Var 0x55e1b38164f8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55e1b3820b08 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55e1b3820ac0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55e1b3820a90 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55e1b3820b38 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55e1b3820b20 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55e1b3820ae8 <col:102> '_Bool' lvalue Var 0x55e1b38164f8 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55e1b3820bf0 <line:845:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55e1b3820bd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e1b3820bb8 <col:3> 'void ()' Function 0x55e1b37bc410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55e1b3820c48 <line:846:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55e1b3820c30 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e1b3820c10 <col:3> 'void ()' Function 0x55e1b37bc350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55e1b3820fb0 <line:847:3, col:141> '_Bool' '='
    | |-DeclRefExpr 0x55e1b3820c68 <col:3> '_Bool' lvalue Var 0x55e1b3815d98 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55e1b3820f98 <col:21, col:141> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55e1b3820f80 <col:21, col:141> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55e1b3820f60 <col:22, col:141> 'int'
    |       `-BinaryOperator 0x55e1b3820f40 <col:23, col:140> 'int' '&&'
    |         |-BinaryOperator 0x55e1b3820ea8 <col:23, col:112> 'int' '&&'
    |         | |-BinaryOperator 0x55e1b3820e10 <col:23, col:84> 'int' '&&'
    |         | | |-BinaryOperator 0x55e1b3820d78 <col:23, col:56> 'int' '&&'
    |         | | | |-BinaryOperator 0x55e1b3820ce0 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x55e1b3820cc8 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x55e1b3820c88 <col:23> 'int' lvalue Var 0x55e1b3815e98 'x' 'int'
    |         | | | | `-IntegerLiteral 0x55e1b3820ca8 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x55e1b3820d58 <col:33, col:56> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x55e1b3820d40 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x55e1b3820d00 <col:33> 'int' lvalue Var 0x55e1b3815808 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x55e1b3820d20 <col:56> 'int' 0
    |         | | `-BinaryOperator 0x55e1b3820df0 <col:61, col:84> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55e1b3820dd8 <col:61> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55e1b3820d98 <col:61> 'int' lvalue Var 0x55e1b3815928 '__unbuffered_p2_EAX' 'int'
    |         | |   `-IntegerLiteral 0x55e1b3820db8 <col:84> 'int' 0
    |         | `-BinaryOperator 0x55e1b3820e88 <col:89, col:112> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55e1b3820e70 <col:89> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55e1b3820e30 <col:89> 'int' lvalue Var 0x55e1b3815a48 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x55e1b3820e50 <col:112> 'int' 1
    |         `-BinaryOperator 0x55e1b3820f20 <col:117, col:140> 'int' '=='
    |           |-ImplicitCastExpr 0x55e1b3820f08 <col:117> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55e1b3820ec8 <col:117> 'int' lvalue Var 0x55e1b3815b68 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x55e1b3820ee8 <col:140> 'int' 0
    |-CallExpr 0x55e1b3821020 <line:848:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55e1b3820ff0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e1b3820fd0 <col:3> 'void ()' Function 0x55e1b37bc410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55e1b3821098 <line:849:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55e1b3821080 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e1b3821040 <col:3> 'void (int)' Function 0x55e1b37bc0d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55e1b38210d8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55e1b38210c0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55e1b3821060 <col:21> '_Bool' lvalue Var 0x55e1b3815d98 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55e1b3821110 <line:850:3, col:10>
      `-IntegerLiteral 0x55e1b38210f0 <col:10> 'int' 0
