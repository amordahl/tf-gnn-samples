TranslationUnitDecl 0x55782bc64f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55782bc65848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55782bc65520 '__int128'
|-TypedefDecl 0x55782bc658b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55782bc65540 'unsigned __int128'
|-TypedefDecl 0x55782bc65bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55782bc65990 'struct __NSConstantString_tag'
|   `-Record 0x55782bc65910 '__NSConstantString_tag'
|-TypedefDecl 0x55782bc65c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55782bc65c20 'char *'
|   `-BuiltinType 0x55782bc65020 'char'
|-TypedefDecl 0x55782bca4b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55782bc65f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55782bc65d40 'struct __va_list_tag'
|     `-Record 0x55782bc65cc0 '__va_list_tag'
|-FunctionDecl 0x55782bca4ca0 <pthread-wmm/mix036_rmo.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55782bca4bd0 <col:31> col:34 'int'
|-FunctionDecl 0x55782bca4e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55782bca4f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55782bca50d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55782bca5048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55782bca5308 <col:40, col:99>
|   |-IfStmt 0x55782bca52d8 <col:42, col:88>
|   | |-UnaryOperator 0x55782bca51b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55782bca51a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55782bca5180 <col:47> 'int' lvalue ParmVar 0x55782bca5048 'expression' 'int'
|   | `-CompoundStmt 0x55782bca52c0 <col:59, col:88>
|   |   `-LabelStmt 0x55782bca52a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55782bca5238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55782bca5220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55782bca51d0 <col:68> 'void () __attribute__((noreturn))' Function 0x55782bca4f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55782bca52f0 <col:89>
|   `-ReturnStmt 0x55782bca52f8 <col:91>
|-FunctionDecl 0x55782bca5350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55782bca5410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55782bca5790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55782bca54c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55782bca5548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55782bca55c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55782bca5648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55782bca5850 <line:10:22>
|-FunctionDecl 0x55782bccb8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55782bca58c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55782bca5940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55782bca59c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55782bca5a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55782bccb960 <line:13:22>
|-FunctionDecl 0x55782bccbc10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55782bccb9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55782bccba50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55782bccbad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55782bccbcc8 <line:15:22>
|-TypedefDecl 0x55782bccbd38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55782bc650e0 'unsigned char'
|-TypedefDecl 0x55782bccbda8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55782bc65100 'unsigned short'
|-TypedefDecl 0x55782bccbe18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55782bc65120 'unsigned int'
|-TypedefDecl 0x55782bccbe88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55782bc65140 'unsigned long'
|-TypedefDecl 0x55782bccbef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55782bc65040 'signed char'
|-TypedefDecl 0x55782bccbf68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55782bc650e0 'unsigned char'
|-TypedefDecl 0x55782bccbfd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55782bc65060 'short'
|-TypedefDecl 0x55782bccc048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55782bc65100 'unsigned short'
|-TypedefDecl 0x55782bccc0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55782bc65080 'int'
|-TypedefDecl 0x55782bccc128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55782bc65120 'unsigned int'
|-TypedefDecl 0x55782bccc198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55782bc650a0 'long'
|-TypedefDecl 0x55782bccc208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55782bc65140 'unsigned long'
|-TypedefDecl 0x55782bccc278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55782bc650a0 'long'
|-TypedefDecl 0x55782bccc2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55782bc65140 'unsigned long'
|-TypedefDecl 0x55782bccc358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55782bc65140 'unsigned long'
|-TypedefDecl 0x55782bccc3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55782bc65120 'unsigned int'
|-TypedefDecl 0x55782bccc438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55782bc65120 'unsigned int'
|-TypedefDecl 0x55782bccc4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55782bc65140 'unsigned long'
|-TypedefDecl 0x55782bccc518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55782bc65140 'unsigned long'
|-TypedefDecl 0x55782bccc588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55782bc65120 'unsigned int'
|-TypedefDecl 0x55782bccc5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55782bc65140 'unsigned long'
|-TypedefDecl 0x55782bccc668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55782bc650a0 'long'
|-TypedefDecl 0x55782bccc6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55782bc650a0 'long'
|-TypedefDecl 0x55782bccc748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55782bc65080 'int'
|-RecordDecl 0x55782bccc7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55782bccc918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55782bccc9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55782bccc970 'struct __fsid_t' sugar
|   `-RecordType 0x55782bccc820 '__fsid_t'
|     `-Record 0x55782bccc7a0 ''
|-TypedefDecl 0x55782bccca58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55782bc650a0 'long'
|-TypedefDecl 0x55782bcccac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55782bc65140 'unsigned long'
|-TypedefDecl 0x55782bcccb38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55782bc65140 'unsigned long'
|-TypedefDecl 0x55782bcccba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55782bc65120 'unsigned int'
|-TypedefDecl 0x55782bcccc18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55782bc650a0 'long'
|-TypedefDecl 0x55782bcccc88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55782bc65120 'unsigned int'
|-TypedefDecl 0x55782bccccf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55782bc650a0 'long'
|-TypedefDecl 0x55782bcccd68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55782bc65080 'int'
|-TypedefDecl 0x55782bcccdd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55782bc65080 'int'
|-TypedefDecl 0x55782bccce48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55782bc65080 'int'
|-TypedefDecl 0x55782bccceb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55782bc657a0 'void *'
|   `-BuiltinType 0x55782bc64fe0 'void'
|-TypedefDecl 0x55782bcccf28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55782bc650a0 'long'
|-TypedefDecl 0x55782bcccf98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55782bc650a0 'long'
|-TypedefDecl 0x55782bccd008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55782bc650a0 'long'
|-TypedefDecl 0x55782bccd078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55782bc65140 'unsigned long'
|-TypedefDecl 0x55782bccd0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55782bc65140 'unsigned long'
|-TypedefDecl 0x55782bccd158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55782bc65140 'unsigned long'
|-TypedefDecl 0x55782bccd1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55782bc65140 'unsigned long'
|-TypedefDecl 0x55782bccd238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55782bc650a0 'long'
|-TypedefDecl 0x55782bccd2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55782bc650a0 'long'
|-TypedefDecl 0x55782bccd318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55782bc650a0 'long'
|-TypedefDecl 0x55782bccd388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55782bc65140 'unsigned long'
|-TypedefDecl 0x55782bccd418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55782bccd3e0 '__off64_t' sugar
|   |-Typedef 0x55782bccc6d8 '__off64_t'
|   `-BuiltinType 0x55782bc650a0 'long'
|-TypedefDecl 0x55782bccd510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55782bccd4d0 '__quad_t *'
|   `-TypedefType 0x55782bccd470 '__quad_t' sugar
|     |-Typedef 0x55782bccc278 '__quad_t'
|     `-BuiltinType 0x55782bc650a0 'long'
|-TypedefDecl 0x55782bccd580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55782bc65c20 'char *'
|   `-BuiltinType 0x55782bc65020 'char'
|-TypedefDecl 0x55782bccd5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55782bc650a0 'long'
|-TypedefDecl 0x55782bccd660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55782bc65120 'unsigned int'
|-FunctionDecl 0x55782bccd7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55782bccd6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55782bccdae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55782bccdad8 <line:72:3, col:34>
|     `-CallExpr 0x55782bccda98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55782bccda80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55782bccda10 <col:10> '<builtin fn type>' Function 0x55782bccd880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55782bccdac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55782bccda30 <col:29> 'unsigned int' lvalue ParmVar 0x55782bccd6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55782bccd880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55782bccd920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55782bccd990 <col:10> Implicit
| `-ConstAttr 0x55782bccd9e8 <col:10> Implicit
|-FunctionDecl 0x55782bccdc40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55782bccdb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55782bccdf58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55782bccdf48 <line:77:3, col:34>
|     `-CallExpr 0x55782bccdf08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55782bccdef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55782bccde78 <col:10> '<builtin fn type>' Function 0x55782bccdce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55782bccdf30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55782bccde98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55782bccdb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55782bccdce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55782bccdd88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55782bccddf8 <col:10> Implicit
| `-ConstAttr 0x55782bccde50 <col:10> Implicit
|-TypedefDecl 0x55782bccdf88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55782bc65140 'unsigned long'
|-TypedefDecl 0x55782bcce018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55782bccdfe0 '__time_t' sugar
|   |-Typedef 0x55782bcccc18 '__time_t'
|   `-BuiltinType 0x55782bc650a0 'long'
|-RecordDecl 0x55782bcce070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55782bcce128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55782bcce1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55782bcce248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55782bcce210 '__pid_t' sugar
|   |-Typedef 0x55782bccc748 '__pid_t'
|   `-BuiltinType 0x55782bc65080 'int'
|-RecordDecl 0x55782bcce2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55782bcce360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55782bcce3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55782bcce470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55782bcce4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55782bc65140 'unsigned long'
|-RecordDecl 0x55782bcce530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55782bcce7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55782bcd08b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55782bcce810 'struct cpu_set_t' sugar
|   `-RecordType 0x55782bcce5b0 'cpu_set_t'
|     `-Record 0x55782bcce530 ''
|-FunctionDecl 0x55782bcd0b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55782bcd0958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55782bcd0a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55782bcd0c38 <line:107:19>
|-FunctionDecl 0x55782bcd0e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55782bcd0ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55782bcd0eb8 <col:69>
|-FunctionDecl 0x55782bcd1030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55782bcd0f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55782bcd10d8 <col:64>
|-FunctionDecl 0x55782bcd1398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55782bcd1140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55782bcd1278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55782bcd1448 <line:113:22>
|-FunctionDecl 0x55782bcd16c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55782bcd14b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55782bcd15a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55782bcd1778 <col:88>
|-FunctionDecl 0x55782bcd1a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55782bcd17e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55782bcd18c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55782bcd1950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55782bcd1b50 <col:62>
|-FunctionDecl 0x55782bcd1cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55782bcd1bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55782bcd1d70 <col:63>
|-FunctionDecl 0x55782bcd1e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55782bcd1f38 <col:47>
|-FunctionDecl 0x55782bcd2040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55782bcd1fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55782bcd20e8 <col:69>
|-FunctionDecl 0x55782bcd21f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55782bcd2158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55782bcd2298 <col:69>
|-FunctionDecl 0x55782bcd2558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55782bcd2300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55782bcd2438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55782bcd2608 <col:88>
|-TypedefDecl 0x55782bcd2698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55782bcd2660 '__clock_t' sugar
|   |-Typedef 0x55782bccca58 '__clock_t'
|   `-BuiltinType 0x55782bc650a0 'long'
|-TypedefDecl 0x55782bcd2728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55782bcd26f0 '__clockid_t' sugar
|   |-Typedef 0x55782bccce48 '__clockid_t'
|   `-BuiltinType 0x55782bc65080 'int'
|-TypedefDecl 0x55782bcd27b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55782bcd2780 '__timer_t' sugar
|   |-Typedef 0x55782bccceb8 '__timer_t'
|   `-PointerType 0x55782bc657a0 'void *'
|     `-BuiltinType 0x55782bc64fe0 'void'
|-RecordDecl 0x55782bcd2810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55782bcd28e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55782bcd2950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55782bcd29b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55782bcd2a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55782bcd2a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55782bcd2af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55782bcd2b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55782bcd2bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55782bcd2c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55782bcd2c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55782bcd2cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55782bcd2d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55782bcd2e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55782bcd2e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55782bcd2f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55782bcd3100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55782bcd31a0 <col:45>
|-FunctionDecl 0x55782bcd3380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55782bcd3270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55782bcd3428 <col:54>
|-FunctionDecl 0x55782bcd3628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55782bcd3490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55782bcd3508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55782bcd36d8 <line:157:22>
| `-ConstAttr 0x55782bcd3730 <col:63>
|-FunctionDecl 0x55782bcd4560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55782bcd3828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55782bcd4608 <col:56>
|-FunctionDecl 0x55782bcd49b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55782bcd4678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55782bcd46f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55782bcd4770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55782bcd4868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55782bcd4a70 <col:54>
|-RecordDecl 0x55782bcd4ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55782bcd4b78 parent 0x55782bc64f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55782bcd4dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55782bcd4e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55782bcd4ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55782bcd4f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55782bcd5038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55782bcd5158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55782bcd5100 'struct __locale_struct *'
|   `-ElaboratedType 0x55782bcd5090 'struct __locale_struct' sugar
|     `-RecordType 0x55782bcd4b50 'struct __locale_struct'
|       `-Record 0x55782bcd4ac8 '__locale_struct'
|-TypedefDecl 0x55782bcd5208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55782bcd51d0 '__locale_t' sugar
|   |-Typedef 0x55782bcd5158 '__locale_t'
|   `-PointerType 0x55782bcd5100 'struct __locale_struct *'
|     `-ElaboratedType 0x55782bcd5090 'struct __locale_struct' sugar
|       `-RecordType 0x55782bcd4b50 'struct __locale_struct'
|         `-Record 0x55782bcd4ac8 '__locale_struct'
|-FunctionDecl 0x55782bcd5610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55782bcd5278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55782bcd52f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55782bcd5370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55782bcd5400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55782bcd5478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55782bcd56d8 <col:40>
|-FunctionDecl 0x55782bcd58c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55782bcd57a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55782bcd5970 <col:66>
|-FunctionDecl 0x55782bcd5a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55782bcd59d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55782bcd5b28 <col:69>
|-FunctionDecl 0x55782bcd5d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55782bcd5b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55782bcd5c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55782bcd5e08 <col:52>
|-FunctionDecl 0x55782bcd5fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55782bcd5e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55782bcd5f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55782bcd6060 <col:55>
|-FunctionDecl 0x55782bcd61f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55782bcd60e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55782bcd62a0 <col:62>
|-FunctionDecl 0x55782bcd6418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55782bcd6308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55782bcd64c0 <col:60>
|-FunctionDecl 0x55782bcd6718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55782bcd6578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55782bcd65f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55782bcd67c8 <col:44>
|-FunctionDecl 0x55782bcd69d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55782bcd6830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55782bcd68b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55782bcd6a88 <col:49>
|-VarDecl 0x55782bcd6b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55782bcd6c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55782bcd6c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55782bcd6d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55782bcd6e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55782bcd6f20 <col:42>
|-VarDecl 0x55782bcd6f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55782bcd7010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55782bcd7198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55782bcd7088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55782bcd7240 <col:57>
|-FunctionDecl 0x55782bcd7350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55782bcd72c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55782bcd73f8 <col:56>
|-FunctionDecl 0x55782bcd8540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55782bcd7478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55782bcd85e8 <col:59>
|-FunctionDecl 0x55782bcd86f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55782bcd8658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55782bcd8798 <col:48>
| `-ConstAttr 0x55782bcd87f0 <col:89>
|-FunctionDecl 0x55782bcd8a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55782bcd88a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55782bcd8938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55782bcd8cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55782bcd8b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55782bcd8bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55782bcd8d68 <col:88>
|-FunctionDecl 0x55782bcd8f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55782bcd8dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55782bcd8e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55782bcd8fb0 <col:88>
|-FunctionDecl 0x55782bcd91c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55782bcd9018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55782bcd90a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55782bcd9278 <line:208:22>
|-FunctionDecl 0x55782bcd95e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55782bcd92e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55782bcd9360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55782bcd93f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55782bcd9480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55782bcd98e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55782bcd96e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55782bcd97c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55782bcd9998 <col:85>
|-FunctionDecl 0x55782bcd9d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55782bcd9a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55782bcd9b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55782bcd9c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55782bcd9e40 <col:52>
|-FunctionDecl 0x55782bcd9fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55782bcd9ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55782bcda060 <col:61>
|-FunctionDecl 0x55782bcda560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55782bcda0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55782bcda148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55782bcda278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55782bcda368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55782bcda620 <col:62>
|-FunctionDecl 0x55782bcda838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55782bcda688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55782bcda718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55782bcda8e8 <line:221:22>
|-FunctionDecl 0x55782bcda9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55782bcda950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55782bcdaa90 <col:65>
|-TypedefDecl 0x55782bcdab00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55782bc65140 'unsigned long'
|-RecordDecl 0x55782bcdab58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55782bcdaca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55782bcdad08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55782bcdadb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55782bcdad60 'union pthread_attr_t' sugar
|   `-RecordType 0x55782bcdabe0 'union pthread_attr_t'
|     `-Record 0x55782bcdab58 'pthread_attr_t'
|-RecordDecl 0x55782bcdae10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55782bcdaf88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55782bcdb000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55782bcdb0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55782bcdb050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55782bcdae90 'struct __pthread_internal_list'
|     `-Record 0x55782bcdae10 '__pthread_internal_list'
|-RecordDecl 0x55782bcdb120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55782bcdb1c8 parent 0x55782bc64f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55782bcdb2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55782bcdb308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55782bcdb370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55782bcdb3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55782bcdb440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55782bcdb4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55782bcdf580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55782bcdf630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55782bcdf720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55782bcdf788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55782bcdf910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55782bcdf8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55782bcdb1a0 'pthread_mutex_t'
|     `-Record 0x55782bcdb120 ''
|-RecordDecl 0x55782bcdf980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55782bcdfac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55782bcdfb28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55782bcdfbe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55782bcdfb80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55782bcdfa00 'pthread_mutexattr_t'
|     `-Record 0x55782bcdf980 ''
|-RecordDecl 0x55782bcdfc50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55782bcdfcf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55782bcdfdc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55782bcdfe28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55782bcdfe90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55782bcdfef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55782bcdff60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55782bcdffc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55782bce0030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55782bce0098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55782bce0150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix036_rmo.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix036_rmo.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55782bce0240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55782bce02a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55782bce03e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55782bce0380 'union pthread_cond_t' sugar
|   `-RecordType 0x55782bcdfcd0 'pthread_cond_t'
|     `-Record 0x55782bcdfc50 ''
|-RecordDecl 0x55782bce0450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55782bce0590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55782bce05f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55782bce06b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55782bce0650 'union pthread_condattr_t' sugar
|   `-RecordType 0x55782bce04d0 'pthread_condattr_t'
|     `-Record 0x55782bce0450 ''
|-TypedefDecl 0x55782bce0738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55782bc65120 'unsigned int'
|-TypedefDecl 0x55782bce07a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55782bc65080 'int'
|-RecordDecl 0x55782bce0800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55782bce08a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55782bce0970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55782bce09d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55782bce0a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55782bce0aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55782bce0b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55782bce0b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55782bce0be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55782bce0c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55782bce0cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55782bce0d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55782bce0d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55782bce0e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix036_rmo.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix036_rmo.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55782bce0ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55782bce0f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55782bce1090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55782bce1030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55782bce0880 'pthread_rwlock_t'
|     `-Record 0x55782bce0800 ''
|-RecordDecl 0x55782bce1100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55782bce1240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55782bce12a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55782bce1360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55782bce1300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55782bce1180 'pthread_rwlockattr_t'
|     `-Record 0x55782bce1100 ''
|-TypedefDecl 0x55782bce13e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55782bc65084 'volatile int' volatile
|   `-BuiltinType 0x55782bc65080 'int'
|-RecordDecl 0x55782bce1440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55782bce35b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55782bce3618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55782bce36d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55782bce3670 'union pthread_barrier_t' sugar
|   `-RecordType 0x55782bce14c0 'pthread_barrier_t'
|     `-Record 0x55782bce1440 ''
|-RecordDecl 0x55782bce3740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55782bce3840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55782bce38a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55782bce3960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55782bce3900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55782bce37c0 'pthread_barrierattr_t'
|     `-Record 0x55782bce3740 ''
|-TypedefDecl 0x55782bce3a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55782bce3a10 'long [8]' 8 
|   `-BuiltinType 0x55782bc650a0 'long'
|-EnumDecl 0x55782bce3ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55782bce3b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55782bce3be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55782bce3c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55782bce3d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55782bce3d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55782bce3da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55782bce3df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55782bce3e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55782bce3e68 <col:26> 'int'
| |   `-DeclRefExpr 0x55782bce3e48 <col:26> 'int' EnumConstant 0x55782bce3d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55782bce3f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55782bce3ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x55782bce3ed0 <col:29> 'int' EnumConstant 0x55782bce3d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55782bce3f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55782bce3f78 <col:30> 'int'
| |   `-DeclRefExpr 0x55782bce3f58 <col:30> 'int' EnumConstant 0x55782bce3da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55782bce4018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55782bce4000 <col:27> 'int'
|     `-DeclRefExpr 0x55782bce3fe0 <col:27> 'int' EnumConstant 0x55782bce3e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55782bce4068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55782bce4138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55782bce41c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55782bce41a8 <col:30> 'int'
| |   `-DeclRefExpr 0x55782bce4188 <col:30> 'int' EnumConstant 0x55782bce4138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55782bce4210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55782bce4298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55782bce4280 <col:29> 'int'
|     `-DeclRefExpr 0x55782bce4260 <col:29> 'int' EnumConstant 0x55782bce4210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55782bce42e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55782bce43b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55782bce4408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55782bce4458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55782bce44a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55782bce45c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55782bce4610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55782bce4660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55782bce46e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55782bce46d0 <col:31> 'int'
|     `-DeclRefExpr 0x55782bce46b0 <col:31> 'int' EnumConstant 0x55782bce45c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55782bce4738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55782bce4808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55782bce4858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55782bce48a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55782bce4978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55782bce49c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55782bce4a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55782bce4ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55782bce4b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55782bce4b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55782bce4dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55782bce4e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55782bce4e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55782bce4fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55782bce5008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55782bce50d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55782bce5128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55782bce5178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55782bce5248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55782bce5298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55782bce58f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55782bce5390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55782bce54a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55782bce56e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55782bce5760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55782bce59b8 <col:47>
| |-NonNullAttr 0x55782bce5a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x55782bce5a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55782bce5b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55782bce5aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55782bce5dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55782bce5c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55782bce5ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55782bce5f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55782bce5e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55782bce6040 <col:60>
|-FunctionDecl 0x55782bce6190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55782bce6230 <col:54>
| `-ConstAttr 0x55782bce6288 <col:95>
|-FunctionDecl 0x55782bce6458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55782bce62c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55782bce6338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55782bce6508 <line:394:19>
| `-ConstAttr 0x55782bce6560 <col:60>
|-FunctionDecl 0x55782bce6f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55782bce6e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55782bce7010 <col:71>
| `-NonNullAttr 0x55782bce7068 <col:112, col:126> 1
|-FunctionDecl 0x55782bce7170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55782bce70b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55782bce7218 <line:397:22>
| `-NonNullAttr 0x55782bce7270 <col:63, col:77> 1
|-FunctionDecl 0x55782bce7498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55782bce72b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55782bce7338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55782bce7548 <line:400:22>
| `-NonNullAttr 0x55782bce75a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55782bce77a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55782bce75e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55782bce7668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55782bce7858 <line:403:22>
| `-NonNullAttr 0x55782bce78b0 <col:63, col:77> 1
|-FunctionDecl 0x55782bce7b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55782bce78f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55782bce79a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55782bce7bb8 <line:406:22>
| `-NonNullAttr 0x55782bce7c10 <col:63, col:80> 1 2
|-FunctionDecl 0x55782bce8e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55782bce7c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55782bce7cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55782bce8ef8 <line:409:22>
| `-NonNullAttr 0x55782bce8f50 <col:63, col:77> 1
|-FunctionDecl 0x55782bce9188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55782bce8f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55782bce9028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55782bce9238 <line:412:22>
| `-NonNullAttr 0x55782bce9290 <col:63, col:80> 1 2
|-FunctionDecl 0x55782bce94c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55782bce92d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55782bce9368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55782bce9578 <col:37>
| `-NonNullAttr 0x55782bce95d0 <col:78, col:95> 1 2
|-FunctionDecl 0x55782bce97b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55782bce9618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55782bce9698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55782bce9868 <line:418:22>
| `-NonNullAttr 0x55782bce98c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55782bce9a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55782bce9908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55782bce9988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55782bce9af8 <line:420:22>
| `-NonNullAttr 0x55782bce9b50 <col:63, col:77> 1
|-FunctionDecl 0x55782bce9cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55782bce9b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55782bce9c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55782bce9da8 <line:423:22>
| `-NonNullAttr 0x55782bceae30 <col:63, col:80> 1 2
|-FunctionDecl 0x55782bceafb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55782bceae78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55782bceaef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55782bceb068 <line:426:22>
| `-NonNullAttr 0x55782bceb0c0 <col:63, col:77> 1
|-FunctionDecl 0x55782bceb268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55782bceb108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55782bceb188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55782bceb318 <line:429:22>
| `-NonNullAttr 0x55782bceb370 <col:63, col:80> 1 2
|-FunctionDecl 0x55782bceb4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55782bceb3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55782bceb438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55782bceb5a8 <line:431:22>
| `-NonNullAttr 0x55782bceb600 <col:63, col:77> 1
|-FunctionDecl 0x55782bceb828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55782bceb648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55782bceb6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55782bceb8d8 <line:434:22>
| |-NonNullAttr 0x55782bceb930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55782bceb968 <col:100> "" ""
|-FunctionDecl 0x55782bcebb78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55782bceb9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55782bceba38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55782bcebc28 <line:437:22>
| |-NonNullAttr 0x55782bcebc80 <col:63, col:77> 1
| `-DeprecatedAttr 0x55782bcebcb8 <col:97> "" ""
|-FunctionDecl 0x55782bcebeb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55782bcebd08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55782bcebd80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55782bcebf68 <line:440:22>
| `-NonNullAttr 0x55782bcebfc0 <col:63, col:80> 1 2
|-FunctionDecl 0x55782bcec140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55782bcec008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55782bcec080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55782bcec1f0 <line:443:22>
| `-NonNullAttr 0x55782bcec248 <col:63, col:77> 1
|-FunctionDecl 0x55782bcec538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55782bcec298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55782bcec318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55782bcec390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55782bcec5f0 <line:447:22>
| `-NonNullAttr 0x55782bcec648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55782bcec8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55782bcec6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55782bcec720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55782bcec798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55782bcec9b0 <col:43>
| `-NonNullAttr 0x55782bceca08 <col:84, col:98> 1
|-FunctionDecl 0x55782bceccc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55782bceca58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55782bcecad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55782bcecb68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55782bcecd80 <line:452:22>
| `-NonNullAttr 0x55782bcecdd8 <col:63, col:77> 3
|-FunctionDecl 0x55782bced0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55782bcece50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55782bceced0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55782bcecf60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55782bced1a0 <line:456:22>
| `-NonNullAttr 0x55782bced1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x55782bced3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55782bced248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55782bced2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55782bced498 <line:458:22>
|-FunctionDecl 0x55782bced868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55782bced560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55782bced700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55782bced918 <col:52, col:69> 1 2
|-FunctionDecl 0x55782bcedac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55782bced9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55782bceda20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55782bcedca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55782bcedb88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55782bcedc08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55782bcede60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55782bcedd68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55782bcedfa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55782bcee040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55782bcee0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55782bcee1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55782bcee240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55782bcee410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix036_rmo.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55782bcee508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55782bcee5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55782bcee560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55782bcee0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x55782bcee040 ''
| `-AlignedAttr 0x55782bcee618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55782bcee690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55782bcee7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55782bcee858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55782bcee8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55782bcee928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55782bceeb30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55782bceea20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55782bceec78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55782bceebe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55782bceee70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55782bceed30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55782bceef18 <line:487:22>
|-RecordDecl 0x55782bceef70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55782bcef288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55782bcef0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55782bcef168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55782bcef338 <col:86>
| `-ReturnsTwiceAttr 0x55782bcef390 <col:12> Implicit
|-FunctionDecl 0x55782bcef6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55782bcef460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55782bcef570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55782bcef768 <line:493:22>
| `-NonNullAttr 0x55782bcef7c0 <col:63, col:77> 1
|-FunctionDecl 0x55782bcef938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55782bcef808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55782bcef9e0 <line:495:22>
| `-NonNullAttr 0x55782bcefa38 <col:63, col:77> 1
|-FunctionDecl 0x55782bcefb40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55782bcefa88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55782bcefbe8 <line:497:22>
| `-NonNullAttr 0x55782bcefc40 <col:52, col:66> 1
|-FunctionDecl 0x55782bcefd40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55782bcefc88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55782bcefde8 <line:499:22>
| `-NonNullAttr 0x55782bcefe40 <col:52, col:66> 1
|-FunctionDecl 0x55782bcf0088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55782bcefe98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55782bceff28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55782bcf0138 <col:36>
| `-NonNullAttr 0x55782bcf0190 <col:66, col:83> 1 2
|-FunctionDecl 0x55782bcf0290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55782bcf01d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55782bcf0338 <line:504:22>
| `-NonNullAttr 0x55782bcf0390 <col:52, col:66> 1
|-FunctionDecl 0x55782bcf0628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55782bcf0440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55782bcf04c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55782bcf06d8 <line:508:22>
| `-NonNullAttr 0x55782bcf0730 <col:63, col:80> 1 2
|-FunctionDecl 0x55782bcf09f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55782bcf0778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55782bcf07f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55782bcf0878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55782bcf0ab0 <line:512:22>
| `-NonNullAttr 0x55782bcf0b08 <col:63, col:80> 1 3
|-FunctionDecl 0x55782bcf0c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55782bcf0b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55782bcf0cb8 <line:514:22>
| `-NonNullAttr 0x55782bcf0d10 <col:63, col:77> 1
|-FunctionDecl 0x55782bcf0f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55782bcf0dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55782bcf0fe0 <line:516:22>
| `-NonNullAttr 0x55782bcf1038 <col:63, col:77> 1
|-FunctionDecl 0x55782bcf1140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55782bcf1088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55782bcf11e8 <line:518:22>
| `-NonNullAttr 0x55782bcf1240 <col:63, col:77> 1
|-FunctionDecl 0x55782bcf1468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55782bcf1288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55782bcf1308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55782bcf1518 <line:522:22>
| `-NonNullAttr 0x55782bcf1570 <col:63, col:80> 1 2
|-FunctionDecl 0x55782bcf1778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55782bcf15b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55782bcf1638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55782bcf1828 <line:525:22>
| `-NonNullAttr 0x55782bcf1880 <col:63, col:77> 1
|-FunctionDecl 0x55782bcf1a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55782bcf18c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55782bcf1948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55782bcf1ad8 <line:528:22>
| `-NonNullAttr 0x55782bcf1b30 <col:63, col:80> 1 2
|-FunctionDecl 0x55782bcf1cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55782bcf1b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55782bcf1bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55782bcf1d68 <line:530:22>
| `-NonNullAttr 0x55782bcf1dc0 <col:63, col:77> 1
|-FunctionDecl 0x55782bcf2f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55782bcf1e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55782bcf2eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55782bcf3040 <line:534:22>
| `-NonNullAttr 0x55782bcf3098 <col:63, col:80> 1 2
|-FunctionDecl 0x55782bcf3228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55782bcf30e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55782bcf3168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55782bcf32d8 <line:537:22>
| `-NonNullAttr 0x55782bcf3330 <col:63, col:77> 1
|-FunctionDecl 0x55782bcf34d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55782bcf3378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55782bcf33f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55782bcf3588 <line:541:22>
| `-NonNullAttr 0x55782bcf35e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55782bcf3768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55782bcf3628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55782bcf36a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55782bcf3818 <line:544:22>
| `-NonNullAttr 0x55782bcf3870 <col:63, col:77> 1
|-FunctionDecl 0x55782bcf3a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55782bcf38b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55782bcf3938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55782bcf3b08 <line:547:22>
| `-NonNullAttr 0x55782bcf3b60 <col:63, col:80> 1 2
|-FunctionDecl 0x55782bcf3ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55782bcf3ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55782bcf3c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55782bcf3d98 <line:550:22>
| `-NonNullAttr 0x55782bcf3df0 <col:63, col:77> 1
|-FunctionDecl 0x55782bcf5168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55782bcf4f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55782bcf5020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55782bcf5218 <col:29>
| `-NonNullAttr 0x55782bcf5270 <col:70, col:84> 1
|-FunctionDecl 0x55782bcf53e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55782bcf52b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55782bcf5490 <line:555:22>
| `-NonNullAttr 0x55782bcf54e8 <col:63, col:77> 1
|-FunctionDecl 0x55782bcf55f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55782bcf5538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55782bcf5698 <line:557:22>
| `-NonNullAttr 0x55782bcf56f0 <col:52, col:66> 1
|-FunctionDecl 0x55782bcf57f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55782bcf5738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55782bcf5898 <line:559:19>
| `-NonNullAttr 0x55782bcf58f0 <col:49, col:63> 1
|-FunctionDecl 0x55782bcf5b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55782bcf5938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55782bcf59c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55782bcf5bd8 <col:39>
| `-NonNullAttr 0x55782bcf5c30 <col:69, col:86> 1 2
|-FunctionDecl 0x55782bcf5d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55782bcf5c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55782bcf5dd8 <line:564:22>
| `-NonNullAttr 0x55782bcf5e30 <col:52, col:66> 1
|-FunctionDecl 0x55782bcf5f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55782bcf5ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55782bcf6040 <line:566:22>
| `-NonNullAttr 0x55782bcf6098 <col:52, col:66> 1
|-FunctionDecl 0x55782bcf6258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55782bcf60e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55782bcf6178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55782bcf6308 <col:39>
| `-NonNullAttr 0x55782bcf6360 <col:69, col:86> 1 2
|-FunctionDecl 0x55782bcf6460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55782bcf63a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55782bcf6508 <line:571:22>
| `-NonNullAttr 0x55782bcf6560 <col:52, col:66> 1
|-FunctionDecl 0x55782bcf6748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55782bcf6610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55782bcf67f0 <line:573:22>
| `-NonNullAttr 0x55782bcf6848 <col:63, col:77> 1
|-FunctionDecl 0x55782bcf6950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55782bcf6898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55782bcf69f8 <line:575:22>
| `-NonNullAttr 0x55782bcf6a50 <col:63, col:77> 1
|-FunctionDecl 0x55782bcf6c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55782bcf6a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55782bcf6b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55782bcf6d28 <line:579:22>
| `-NonNullAttr 0x55782bcf6d80 <col:63, col:80> 1 2
|-FunctionDecl 0x55782bcf6fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55782bcf6dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55782bcf6e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55782bcf7058 <line:582:22>
| `-NonNullAttr 0x55782bcf70b0 <col:63, col:77> 1
|-FunctionDecl 0x55782bcf7258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55782bcf70f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55782bcf7178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55782bcf7308 <line:586:22>
| `-NonNullAttr 0x55782bcf7360 <col:63, col:80> 1 2
|-FunctionDecl 0x55782bcf74e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55782bcf73a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55782bcf7428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55782bcf7598 <col:36>
| `-NonNullAttr 0x55782bcf75f0 <col:77, col:91> 1
|-FunctionDecl 0x55782bcf7928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55782bcf76d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55782bcf77e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55782bcf79d8 <line:591:22>
| `-NonNullAttr 0x55782bcf7a30 <col:63, col:77> 1
|-FunctionDecl 0x55782bcf7ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55782bcf7a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55782bcf7c50 <line:593:22>
| `-NonNullAttr 0x55782bcf7ca8 <col:63, col:77> 1
|-FunctionDecl 0x55782bcf7db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55782bcf7cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55782bcf7e58 <line:595:22>
| `-NonNullAttr 0x55782bcf7eb0 <col:52, col:66> 1
|-FunctionDecl 0x55782bcf7fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55782bcf7f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55782bcf8070 <line:597:22>
| `-NonNullAttr 0x55782bcf80c8 <col:52, col:66> 1
|-FunctionDecl 0x55782bcf82f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55782bcf8118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55782bcf8190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55782bcf83a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55782bcf86d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55782bcf8428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55782bcf84a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55782bcf8530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55782bcf8790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55782bcf89a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55782bcf8870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55782bcf8a50 <line:606:22>
| `-NonNullAttr 0x55782bcf8aa8 <col:63, col:77> 1
|-FunctionDecl 0x55782bcf8bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55782bcf8af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55782bcf8c58 <line:608:22>
| `-NonNullAttr 0x55782bcf8cb0 <col:63, col:77> 1
|-FunctionDecl 0x55782bcf8f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55782bcf8cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55782bcf8d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55782bcf8fc0 <line:612:22>
| `-NonNullAttr 0x55782bcf9018 <col:63, col:80> 1 2
|-FunctionDecl 0x55782bcf9228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55782bcf9068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55782bcf90e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55782bcf92d8 <col:37>
| `-NonNullAttr 0x55782bcf9330 <col:78, col:92> 1
|-FunctionDecl 0x55782bcf9548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55782bcf9378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55782bcf9420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55782bcf95f8 <line:618:22>
| `-NonNullAttr 0x55782bcf9650 <col:63, col:80> 1 2
|-FunctionDecl 0x55782bcf9818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55782bcf9698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55782bcf9710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55782bcf98c8 <line:621:22>
| `-NonNullAttr 0x55782bcf9920 <col:63, col:77> 1
|-FunctionDecl 0x55782bcf9bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55782bcf9a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55782bcf9a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55782bcf9c78 <line:623:22>
| `-NonNullAttr 0x55782bcf9cd0 <col:63, col:77> 1
|-FunctionDecl 0x55782bcf9e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55782bcf9d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55782bcf9f20 <line:625:22>
| `-NonNullAttr 0x55782bcf9f78 <col:63, col:77> 1
|-FunctionDecl 0x55782bcfa080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55782bcf9fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55782bcfa128 <line:627:22>
| `-NonNullAttr 0x55782bcfa180 <col:52, col:66> 1
|-FunctionDecl 0x55782bcfa280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55782bcfa1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55782bcfa328 <line:629:22>
| `-NonNullAttr 0x55782bcfa380 <col:52, col:66> 1
|-FunctionDecl 0x55782bcfa480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55782bcfa3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55782bcfa528 <line:631:22>
| `-NonNullAttr 0x55782bcfa580 <col:52, col:66> 1
|-FunctionDecl 0x55782bcfa958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55782bcfa660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55782bcfa770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55782bcfa7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55782bcfaa10 <line:635:22>
| `-NonNullAttr 0x55782bcfaa68 <col:63, col:77> 1
|-FunctionDecl 0x55782bcfabe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55782bcfaab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55782bcfac90 <line:637:22>
| `-NonNullAttr 0x55782bcface8 <col:63, col:77> 1
|-FunctionDecl 0x55782bcfadf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55782bcfad38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55782bcfae98 <line:639:22>
| `-NonNullAttr 0x55782bcfaef0 <col:52, col:66> 1
|-FunctionDecl 0x55782bcfb0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55782bcfafb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55782bcfb190 <line:641:22>
| `-NonNullAttr 0x55782bcfb1e8 <col:63, col:77> 1
|-FunctionDecl 0x55782bcfb2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55782bcfb238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55782bcfb398 <line:643:22>
| `-NonNullAttr 0x55782bcfb3f0 <col:63, col:77> 1
|-FunctionDecl 0x55782bcfb618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55782bcfb438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55782bcfb4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55782bcfb6c8 <line:647:22>
| `-NonNullAttr 0x55782bcfb720 <col:63, col:80> 1 2
|-FunctionDecl 0x55782bcfb928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55782bcfb768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55782bcfb7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55782bcfb9d8 <line:650:22>
| `-NonNullAttr 0x55782bcfba30 <col:63, col:77> 1
|-FunctionDecl 0x55782bcfbd78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55782bcfbb10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55782bcfbc30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55782bcfbe28 <line:653:22>
| `-NonNullAttr 0x55782bcfbe80 <col:63, col:77> 1
|-FunctionDecl 0x55782bcfbfe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55782bcfbec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55782bcfc090 <col:69>
|-FunctionDecl 0x55782bcfc208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55782bcfc0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55782bcfc2b0 <col:72>
|-FunctionDecl 0x55782bcfc4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55782bcfc318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55782bcfc3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55782bcfc598 <col:44>
|-FunctionDecl 0x55782bcfc7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55782bcfc600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55782bcfc678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55782bcfc868 <line:660:22>
| `-NonNullAttr 0x55782bcfc8c0 <col:63, col:77> 2
|-FunctionDecl 0x55782bcfcd08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55782bcfc9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55782bcfcab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55782bcfcbc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55782bcfcdc0 <col:47>
|-FunctionDecl 0x55782bcfdf60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55782bcfce30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55782bcfe0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55782bcfe020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55782bcfe210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55782bcfe178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55782bcfe368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x55782bcfe2d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55782bcfe430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55782bcfe4f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55782bcfe5b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55782bcfe668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55782bcfe6e8 prev 0x55782bcfe668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55782bcfe750 <col:24> 'int' 0
|-VarDecl 0x55782bcfe788 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55782bcfe808 prev 0x55782bcfe788 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55782bcfe870 <col:27> 'int' 0
|-VarDecl 0x55782bcfe8a8 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55782bcfe928 prev 0x55782bcfe8a8 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55782bcfe990 <col:27> 'int' 0
|-VarDecl 0x55782bcfe9c8 <line:678:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55782bcfea48 prev 0x55782bcfe9c8 <line:679:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55782bcfeab0 <col:27> 'int' 0
|-VarDecl 0x55782bcfeae8 <line:680:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x55782bcfeb68 prev 0x55782bcfeae8 <line:681:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x55782bcfebd0 <col:27> 'int' 0
|-VarDecl 0x55782bcfec08 <line:682:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x55782bcfec88 prev 0x55782bcfec08 <line:683:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x55782bcfecf0 <col:27> 'int' 0
|-VarDecl 0x55782bcfed28 <line:684:1, col:5> col:5 used a 'int'
|-VarDecl 0x55782bcfeda8 prev 0x55782bcfed28 <line:685:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x55782bcfee10 <col:9> 'int' 0
|-VarDecl 0x55782bcfee48 <line:686:1, col:5> col:5 used b 'int'
|-VarDecl 0x55782bcfeec8 prev 0x55782bcfee48 <line:687:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x55782bcfef30 <col:9> 'int' 0
|-VarDecl 0x55782bcfef70 <line:688:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55782bcfefe8 <line:689:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55782bcff068 <line:690:1, col:5> col:5 used x 'int'
|-VarDecl 0x55782bcff0e8 prev 0x55782bcff068 <line:691:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55782bcff150 <col:9> 'int' 0
|-VarDecl 0x55782bcff188 <line:692:1, col:5> col:5 used y 'int'
|-VarDecl 0x55782bcff208 prev 0x55782bcff188 <line:693:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55782bcff270 <col:9> 'int' 0
|-VarDecl 0x55782bcff2a0 <line:694:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x55782bcff320 <line:695:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x55782bcff398 <line:696:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x55782bcff410 <line:697:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x55782bcff488 <line:698:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x55782bcff500 <line:699:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x55782bcff578 <line:700:1, col:7> col:7 used y$r_buff0_thd4 '_Bool'
|-VarDecl 0x55782bcff5f0 <line:701:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x55782bcff668 <line:702:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x55782bcff6e0 <line:703:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x55782bcff758 <line:704:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x55782bcff7d0 <line:705:1, col:7> col:7 used y$r_buff1_thd4 '_Bool'
|-VarDecl 0x55782bcff848 <line:706:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x55782bcff8c8 <line:707:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x55782bcff948 <line:708:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x55782bcff9c0 <line:709:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x55782bcffa40 <line:710:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x55782bcffab8 <line:711:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x55782bcffb38 <line:712:1, col:5> col:5 used z 'int'
|-VarDecl 0x55782bcffbb8 prev 0x55782bcffb38 <line:713:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55782bcffc20 <col:9> 'int' 0
|-VarDecl 0x55782bcffc50 <line:714:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55782bcffcc8 <line:715:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55782bcffde0 prev 0x55782bcfdf60 <line:716:1, line:730:1> line:716:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55782bcffd48 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55782bd003d8 <line:717:1, line:730:1>
|   |-CallExpr 0x55782bcffef8 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55782bcffee0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bcffe88 <col:3> 'void ()' Function 0x55782bca5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55782bcfff80 <line:719:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55782bcfff18 <col:3> 'int' lvalue Var 0x55782bcfeec8 'b' 'int'
|   | `-IntegerLiteral 0x55782bcfff38 <col:7> 'int' 1
|   |-CallExpr 0x55782bcfffd8 <line:720:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55782bcfffc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bcfffa0 <col:3> 'void ()' Function 0x55782bca5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55782bd00030 <line:721:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55782bd00018 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bcffff8 <col:3> 'void ()' Function 0x55782bca5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55782bd000a8 <line:722:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55782bd00050 <col:3> 'int' lvalue Var 0x55782bcfe808 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55782bd00090 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55782bd00070 <col:25> 'int' lvalue Var 0x55782bcff0e8 'x' 'int'
|   |-CallExpr 0x55782bd00100 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55782bd000e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd000c8 <col:3> 'void ()' Function 0x55782bca5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55782bd00158 <line:724:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55782bd00140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd00120 <col:3> 'void ()' Function 0x55782bca5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55782bd001b0 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55782bd00198 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd00178 <col:3> 'void ()' Function 0x55782bca5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55782bd00208 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55782bd001f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd001d0 <col:3> 'void ()' Function 0x55782bca5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55782bd002c0 <line:727:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55782bd00228 <col:3> 'int' lvalue Var 0x55782bcfe6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55782bd002a0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55782bd00288 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55782bd00248 <col:22> 'int' lvalue Var 0x55782bcfe6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55782bd00268 <col:41> 'int' 1
|   |-CallExpr 0x55782bd00318 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55782bd00300 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd002e0 <col:3> 'void ()' Function 0x55782bca5410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55782bd003c8 <line:729:3, col:36>
|     `-CallExpr 0x55782bd003a8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55782bd00390 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55782bd00338 <col:10> 'void *(void)' Function 0x55782bca4e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55782bd004f8 prev 0x55782bcfe0b8 <line:731:1, line:758:1> line:731:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55782bd00460 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55782bd033f0 <line:732:1, line:758:1>
|   |-CallExpr 0x55782bd005d8 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55782bd005c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd005a0 <col:3> 'void ()' Function 0x55782bca5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55782bd00638 <line:734:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55782bd005f8 <col:3> 'int' lvalue Var 0x55782bcff0e8 'x' 'int'
|   | `-IntegerLiteral 0x55782bd00618 <col:7> 'int' 1
|   |-CallExpr 0x55782bd00690 <line:735:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55782bd00678 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd00658 <col:3> 'void ()' Function 0x55782bca5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55782bd006e8 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55782bd006d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd006b0 <col:3> 'void ()' Function 0x55782bca5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55782bd00798 <line:737:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55782bd00708 <col:3> '_Bool' lvalue Var 0x55782bcffc50 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55782bd00780 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55782bd00760 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55782bd00748 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55782bd00728 <col:19> 'void *(void)' Function 0x55782bca4e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55782bd00848 <line:738:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55782bd007b8 <col:3> '_Bool' lvalue Var 0x55782bcffcc8 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55782bd00830 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55782bd00810 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55782bd007f8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55782bd007d8 <col:19> 'void *(void)' Function 0x55782bca4e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55782bd008c0 <line:739:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55782bd00868 <col:3> '_Bool' lvalue Var 0x55782bcff2a0 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55782bd008a8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55782bd00888 <col:21> '_Bool' lvalue Var 0x55782bcffcc8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55782bd00938 <line:740:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55782bd008e0 <col:3> 'int' lvalue Var 0x55782bcff320 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55782bd00920 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55782bd00900 <col:15> 'int' lvalue Var 0x55782bcff208 'y' 'int'
|   |-BinaryOperator 0x55782bd00d70 <line:741:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55782bd00958 <col:3> 'int' lvalue Var 0x55782bcff208 'y' 'int'
|   | `-ConditionalOperator 0x55782bd00d40 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55782bd00b68 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55782bd00a88 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55782bd009b0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55782bd00998 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55782bd00978 <col:8> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55782bd00a68 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55782bd00a00 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55782bd009e8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55782bd009c8 <col:27> '_Bool' lvalue Var 0x55782bcff488 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x55782bd00a50 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55782bd00a38 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55782bd00a18 <col:46> '_Bool' lvalue Var 0x55782bcffab8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55782bd00b48 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55782bd00ae0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55782bd00ac8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55782bd00aa8 <col:65> '_Bool' lvalue Var 0x55782bcff488 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x55782bd00b30 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55782bd00b18 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55782bd00af8 <col:84> '_Bool' lvalue Var 0x55782bcff6e0 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55782bd00d28 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55782bd00b88 <col:101> 'int' lvalue Var 0x55782bcff208 'y' 'int'
|   |   `-ParenExpr 0x55782bd00d08 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55782bd00cd8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55782bd00c48 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55782bd00c00 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55782bd00be8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55782bd00ba8 <col:106> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55782bd00c30 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55782bd00c18 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55782bd00bc8 <col:124> '_Bool' lvalue Var 0x55782bcff488 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55782bd00ca8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55782bd00c68 <col:141> 'int' lvalue Var 0x55782bcff948 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55782bd00cc0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55782bd00c88 <col:153> 'int' lvalue Var 0x55782bcffa40 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55782bd012a0 <line:742:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55782bd00d90 <col:3> 'int' lvalue Var 0x55782bcff948 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55782bd01270 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55782bd01240 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55782bd01228 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55782bd00db0 <col:15> '_Bool' lvalue Var 0x55782bcffcc8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55782bd01258 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55782bd00dd0 <col:31> 'int' lvalue Var 0x55782bcff948 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55782bd01208 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55782bd011d8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55782bd01000 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55782bd00f00 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55782bd00e28 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55782bd00e10 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55782bd00df0 <col:45> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55782bd00ee0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55782bd00e78 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55782bd00e60 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55782bd00e40 <col:64> '_Bool' lvalue Var 0x55782bcff488 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55782bd00ec8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55782bd00eb0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55782bd00e90 <col:83> '_Bool' lvalue Var 0x55782bcffab8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55782bd00fe0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55782bd00f58 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55782bd00f40 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55782bd00f20 <col:102> '_Bool' lvalue Var 0x55782bcff488 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55782bd00fc8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55782bd00fb0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55782bd00f90 <col:121> '_Bool' lvalue Var 0x55782bcff6e0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55782bd011c0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55782bd01020 <col:138> 'int' lvalue Var 0x55782bcff948 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55782bd011a0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55782bd01170 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55782bd010e0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55782bd01098 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55782bd01080 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55782bd01040 <col:151> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55782bd010c8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55782bd010b0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55782bd01060 <col:169> '_Bool' lvalue Var 0x55782bcff488 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55782bd01140 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55782bd01100 <col:186> 'int' lvalue Var 0x55782bcff948 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55782bd01158 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55782bd01120 <col:198> 'int' lvalue Var 0x55782bcff948 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55782bd017b0 <line:743:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55782bd012c0 <col:3> 'int' lvalue Var 0x55782bcffa40 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55782bd01780 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55782bd01750 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55782bd01738 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55782bd012e0 <col:15> '_Bool' lvalue Var 0x55782bcffcc8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55782bd01768 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55782bd01300 <col:31> 'int' lvalue Var 0x55782bcffa40 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55782bd01718 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55782bd016e8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55782bd01510 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55782bd01430 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55782bd01358 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55782bd01340 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55782bd01320 <col:45> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55782bd01410 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55782bd013a8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55782bd01390 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55782bd01370 <col:64> '_Bool' lvalue Var 0x55782bcff488 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55782bd013f8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55782bd013e0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55782bd013c0 <col:83> '_Bool' lvalue Var 0x55782bcffab8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55782bd014f0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55782bd01488 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55782bd01470 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55782bd01450 <col:102> '_Bool' lvalue Var 0x55782bcff488 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55782bd014d8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55782bd014c0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55782bd014a0 <col:121> '_Bool' lvalue Var 0x55782bcff6e0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55782bd016d0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55782bd01530 <col:138> 'int' lvalue Var 0x55782bcffa40 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55782bd016b0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55782bd01680 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55782bd015f0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55782bd015a8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55782bd01590 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55782bd01550 <col:151> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55782bd015d8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55782bd015c0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55782bd01570 <col:169> '_Bool' lvalue Var 0x55782bcff488 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55782bd01650 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55782bd01610 <col:186> 'int' lvalue Var 0x55782bcffa40 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55782bd01668 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55782bd01630 <col:198> 'int' lvalue Var 0x55782bcffa40 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55782bd01d58 <line:744:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55782bd017d0 <col:3> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55782bd01d40 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55782bd01d10 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55782bd01cc8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55782bd01cb0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55782bd017f0 <col:20> '_Bool' lvalue Var 0x55782bcffcc8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55782bd01cf8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55782bd01ce0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55782bd01810 <col:36> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55782bd01c90 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55782bd01c60 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55782bd01a20 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55782bd01940 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55782bd01868 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55782bd01850 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55782bd01830 <col:55> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55782bd01920 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55782bd018b8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55782bd018a0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55782bd01880 <col:74> '_Bool' lvalue Var 0x55782bcff488 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55782bd01908 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55782bd018f0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55782bd018d0 <col:93> '_Bool' lvalue Var 0x55782bcffab8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55782bd01a00 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55782bd01998 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55782bd01980 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55782bd01960 <col:112> '_Bool' lvalue Var 0x55782bcff488 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55782bd019e8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55782bd019d0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55782bd019b0 <col:131> '_Bool' lvalue Var 0x55782bcff6e0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55782bd01c48 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55782bd01c30 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55782bd01a40 <col:148> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55782bd01c10 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55782bd01be0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55782bd01b00 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55782bd01ab8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55782bd01aa0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55782bd01a60 <col:166> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55782bd01ae8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55782bd01ad0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55782bd01a80 <col:184> '_Bool' lvalue Var 0x55782bcff488 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55782bd01b98 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55782bd01b50 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55782bd01b20 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55782bd01bc8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55782bd01bb0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55782bd01b78 <col:212> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55782bd02330 <line:745:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55782bd01d78 <col:3> '_Bool' lvalue Var 0x55782bcffab8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55782bd02318 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55782bd022e8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55782bd022a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55782bd02288 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55782bd01d98 <col:20> '_Bool' lvalue Var 0x55782bcffcc8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55782bd022d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55782bd022b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55782bd01db8 <col:36> '_Bool' lvalue Var 0x55782bcffab8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55782bd02268 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55782bd02238 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55782bd01fd8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55782bd01ee8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55782bd01e10 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55782bd01df8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55782bd01dd8 <col:55> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55782bd01ec8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55782bd01e60 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55782bd01e48 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55782bd01e28 <col:74> '_Bool' lvalue Var 0x55782bcff488 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55782bd01eb0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55782bd01e98 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55782bd01e78 <col:93> '_Bool' lvalue Var 0x55782bcffab8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55782bd01fb8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55782bd01f40 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55782bd01f28 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55782bd01f08 <col:112> '_Bool' lvalue Var 0x55782bcff488 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55782bd01fa0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55782bd01f78 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55782bd01f58 <col:131> '_Bool' lvalue Var 0x55782bcff6e0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55782bd02220 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55782bd02208 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55782bd01ff8 <col:148> '_Bool' lvalue Var 0x55782bcffab8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55782bd021e8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55782bd021b8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55782bd020b8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55782bd02070 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55782bd02058 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55782bd02018 <col:166> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55782bd020a0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55782bd02088 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55782bd02038 <col:184> '_Bool' lvalue Var 0x55782bcff488 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55782bd02188 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55782bd02108 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55782bd020d8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55782bd021a0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55782bd02160 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55782bd02130 <col:219> 'int' 0
|   |-BinaryOperator 0x55782bd028d8 <line:746:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55782bd02350 <col:3> '_Bool' lvalue Var 0x55782bcff488 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55782bd028c0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55782bd02890 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55782bd02848 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55782bd02830 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55782bd02370 <col:20> '_Bool' lvalue Var 0x55782bcffcc8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55782bd02878 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55782bd02860 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55782bd02390 <col:36> '_Bool' lvalue Var 0x55782bcff488 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55782bd02810 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55782bd027e0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55782bd025a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55782bd024c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55782bd023e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55782bd023d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55782bd023b0 <col:55> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55782bd024a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55782bd02438 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55782bd02420 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55782bd02400 <col:74> '_Bool' lvalue Var 0x55782bcff488 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55782bd02488 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55782bd02470 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55782bd02450 <col:93> '_Bool' lvalue Var 0x55782bcffab8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55782bd02580 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55782bd02518 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55782bd02500 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55782bd024e0 <col:112> '_Bool' lvalue Var 0x55782bcff488 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55782bd02568 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55782bd02550 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55782bd02530 <col:131> '_Bool' lvalue Var 0x55782bcff6e0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55782bd027c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55782bd027b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55782bd025c0 <col:148> '_Bool' lvalue Var 0x55782bcff488 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55782bd02790 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55782bd02760 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55782bd02680 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55782bd02638 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55782bd02620 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55782bd025e0 <col:166> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55782bd02668 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55782bd02650 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55782bd02600 <col:184> '_Bool' lvalue Var 0x55782bcff488 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55782bd02718 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55782bd026d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55782bd026a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55782bd02748 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55782bd02730 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55782bd026f8 <col:212> '_Bool' lvalue Var 0x55782bcff488 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55782bd02ea0 <line:747:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55782bd028f8 <col:3> '_Bool' lvalue Var 0x55782bcff6e0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55782bd02e88 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55782bd02e58 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55782bd02e10 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55782bd02df8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55782bd02918 <col:20> '_Bool' lvalue Var 0x55782bcffcc8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55782bd02e40 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55782bd02e28 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55782bd02938 <col:36> '_Bool' lvalue Var 0x55782bcff6e0 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x55782bd02dd8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55782bd02da8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55782bd02b48 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55782bd02a68 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55782bd02990 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55782bd02978 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55782bd02958 <col:55> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55782bd02a48 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55782bd029e0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55782bd029c8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55782bd029a8 <col:74> '_Bool' lvalue Var 0x55782bcff488 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55782bd02a30 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55782bd02a18 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55782bd029f8 <col:93> '_Bool' lvalue Var 0x55782bcffab8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55782bd02b28 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55782bd02ac0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55782bd02aa8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55782bd02a88 <col:112> '_Bool' lvalue Var 0x55782bcff488 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55782bd02b10 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55782bd02af8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55782bd02ad8 <col:131> '_Bool' lvalue Var 0x55782bcff6e0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55782bd02d90 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55782bd02d78 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55782bd02b68 <col:148> '_Bool' lvalue Var 0x55782bcff6e0 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x55782bd02d58 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55782bd02d28 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55782bd02c28 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55782bd02be0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55782bd02bc8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55782bd02b88 <col:166> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55782bd02c10 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55782bd02bf8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55782bd02ba8 <col:184> '_Bool' lvalue Var 0x55782bcff488 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55782bd02cf8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55782bd02c78 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55782bd02c48 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55782bd02d10 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55782bd02cd0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55782bd02ca0 <col:219> 'int' 0
|   |-BinaryOperator 0x55782bd02f18 <line:748:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55782bd02ec0 <col:3> 'int' lvalue Var 0x55782bcfe928 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55782bd02f00 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55782bd02ee0 <col:25> 'int' lvalue Var 0x55782bcff208 'y' 'int'
|   |-BinaryOperator 0x55782bd03060 <line:749:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55782bd02f38 <col:3> 'int' lvalue Var 0x55782bcff208 'y' 'int'
|   | `-ConditionalOperator 0x55782bd03030 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55782bd02fe8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55782bd02fd0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55782bd02f58 <col:7> '_Bool' lvalue Var 0x55782bcff2a0 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55782bd03000 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55782bd02f78 <col:25> 'int' lvalue Var 0x55782bcff320 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55782bd03018 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55782bd02fb0 <col:37> 'int' lvalue Var 0x55782bcff208 'y' 'int'
|   |-BinaryOperator 0x55782bd030f8 <line:750:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55782bd03080 <col:3> '_Bool' lvalue Var 0x55782bcff2a0 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55782bd030d0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55782bd030a0 <col:28> 'int' 0
|   |-CallExpr 0x55782bd03150 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55782bd03138 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd03118 <col:3> 'void ()' Function 0x55782bca5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55782bd031a8 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55782bd03190 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd03170 <col:3> 'void ()' Function 0x55782bca5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55782bd03200 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55782bd031e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd031c8 <col:3> 'void ()' Function 0x55782bca5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55782bd03258 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55782bd03240 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd03220 <col:3> 'void ()' Function 0x55782bca5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55782bd03310 <line:755:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55782bd03278 <col:3> 'int' lvalue Var 0x55782bcfe6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55782bd032f0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55782bd032d8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55782bd03298 <col:22> 'int' lvalue Var 0x55782bcfe6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55782bd032b8 <col:41> 'int' 1
|   |-CallExpr 0x55782bd03368 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55782bd03350 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd03330 <col:3> 'void ()' Function 0x55782bca5410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55782bd033e0 <line:757:3, col:36>
|     `-CallExpr 0x55782bd033c0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55782bd033a8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55782bd03388 <col:10> 'void *(void)' Function 0x55782bca4e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55782bd03578 prev 0x55782bcfe210 <line:759:1, line:788:1> line:759:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55782bd034e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55782bd04dd0 <line:760:1, line:788:1>
|   |-CallExpr 0x55782bd03658 <line:761:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55782bd03640 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd03620 <col:3> 'void ()' Function 0x55782bca5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55782bd036d0 <line:762:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55782bd03678 <col:3> 'int' lvalue Var 0x55782bcffa40 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55782bd036b8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55782bd03698 <col:15> 'int' lvalue Var 0x55782bcff948 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55782bd03730 <line:763:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55782bd036f0 <col:3> 'int' lvalue Var 0x55782bcff948 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x55782bd03710 <col:15> 'int' 1
|   |-BinaryOperator 0x55782bd037a8 <line:764:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55782bd03750 <col:3> '_Bool' lvalue Var 0x55782bcffab8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55782bd03790 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55782bd03770 <col:20> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55782bd03840 <line:765:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55782bd037c8 <col:3> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55782bd03818 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55782bd037e8 <col:27> 'int' 1
|   |-CallExpr 0x55782bd039c8 <line:766:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55782bd039b0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55782bd03860 <col:3> 'void (int)' Function 0x55782bca50d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55782bd03960 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55782bd03940 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55782bd03920 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55782bd038d8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55782bd038c0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55782bd03880 <col:23> '_Bool' lvalue Var 0x55782bcffab8 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55782bd03908 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55782bd038f0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55782bd038a0 <col:41> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55782bd03a48 <line:767:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55782bd039f0 <col:3> '_Bool' lvalue Var 0x55782bcff5f0 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55782bd03a30 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55782bd03a10 <col:20> '_Bool' lvalue Var 0x55782bcff398 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55782bd03ac0 <line:768:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55782bd03a68 <col:3> '_Bool' lvalue Var 0x55782bcff668 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55782bd03aa8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55782bd03a88 <col:20> '_Bool' lvalue Var 0x55782bcff410 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55782bd03b38 <line:769:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55782bd03ae0 <col:3> '_Bool' lvalue Var 0x55782bcff6e0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55782bd03b20 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55782bd03b00 <col:20> '_Bool' lvalue Var 0x55782bcff488 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55782bd03bb0 <line:770:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55782bd03b58 <col:3> '_Bool' lvalue Var 0x55782bcff758 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55782bd03b98 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55782bd03b78 <col:20> '_Bool' lvalue Var 0x55782bcff500 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55782bd03c28 <line:771:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55782bd03bd0 <col:3> '_Bool' lvalue Var 0x55782bcff7d0 'y$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55782bd03c10 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55782bd03bf0 <col:20> '_Bool' lvalue Var 0x55782bcff578 'y$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55782bd03cc0 <line:772:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55782bd03c48 <col:3> '_Bool' lvalue Var 0x55782bcff500 'y$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x55782bd03c98 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55782bd03c68 <col:27> 'int' 1
|   |-CallExpr 0x55782bd03d18 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55782bd03d00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd03ce0 <col:3> 'void ()' Function 0x55782bca5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55782bd03d70 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55782bd03d58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd03d38 <col:3> 'void ()' Function 0x55782bca5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55782bd03de8 <line:775:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55782bd03d90 <col:3> 'int' lvalue Var 0x55782bcfea48 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55782bd03dd0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55782bd03db0 <col:25> 'int' lvalue Var 0x55782bcffbb8 'z' 'int'
|   |-CallExpr 0x55782bd03e40 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55782bd03e28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd03e08 <col:3> 'void ()' Function 0x55782bca5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55782bd03e98 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55782bd03e80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd03e60 <col:3> 'void ()' Function 0x55782bca5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55782bd041a8 <line:778:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55782bd03eb8 <col:3> 'int' lvalue Var 0x55782bcff208 'y' 'int'
|   | `-ConditionalOperator 0x55782bd04178 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55782bd03f78 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55782bd03f30 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55782bd03f18 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55782bd03ed8 <col:7> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55782bd03f60 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55782bd03f48 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55782bd03ef8 <col:25> '_Bool' lvalue Var 0x55782bcff500 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55782bd04160 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55782bd03fc0 <col:42> 'int' lvalue Var 0x55782bcff948 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55782bd04140 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55782bd04110 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55782bd04080 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55782bd04038 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55782bd04020 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55782bd03fe0 <col:55> '_Bool' lvalue Var 0x55782bcffab8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55782bd04068 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55782bd04050 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55782bd04000 <col:73> '_Bool' lvalue Var 0x55782bcff758 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55782bd040e0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55782bd040a0 <col:90> 'int' lvalue Var 0x55782bcffa40 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55782bd040f8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55782bd040c0 <col:102> 'int' lvalue Var 0x55782bcff208 'y' 'int'
|   |-BinaryOperator 0x55782bd043b0 <line:779:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55782bd041c8 <col:3> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55782bd04398 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55782bd04368 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55782bd04288 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55782bd04240 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55782bd04228 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55782bd041e8 <col:20> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55782bd04270 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55782bd04258 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55782bd04208 <col:38> '_Bool' lvalue Var 0x55782bcff500 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55782bd04320 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55782bd042d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55782bd042a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55782bd04350 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55782bd04338 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55782bd04300 <col:66> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55782bd04698 <line:780:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55782bd043d0 <col:3> '_Bool' lvalue Var 0x55782bcffab8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55782bd04680 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55782bd04650 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55782bd04570 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55782bd04490 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55782bd04448 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55782bd04430 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55782bd043f0 <col:20> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55782bd04478 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55782bd04460 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55782bd04410 <col:38> '_Bool' lvalue Var 0x55782bcff500 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55782bd04550 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55782bd04508 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55782bd044f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55782bd044b0 <col:56> '_Bool' lvalue Var 0x55782bcffab8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55782bd04538 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55782bd04520 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55782bd044d0 <col:74> '_Bool' lvalue Var 0x55782bcff758 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55782bd04608 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55782bd045c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55782bd04590 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55782bd04638 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55782bd04620 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55782bd045e8 <col:102> '_Bool' lvalue Var 0x55782bcffab8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55782bd048a0 <line:781:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55782bd046b8 <col:3> '_Bool' lvalue Var 0x55782bcff500 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55782bd04888 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55782bd04858 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55782bd04778 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55782bd04730 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55782bd04718 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55782bd046d8 <col:20> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55782bd04760 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55782bd04748 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55782bd046f8 <col:38> '_Bool' lvalue Var 0x55782bcff500 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55782bd04810 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55782bd047c8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55782bd04798 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55782bd04840 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55782bd04828 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55782bd047f0 <col:66> '_Bool' lvalue Var 0x55782bcff500 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55782bd04b88 <line:782:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55782bd048c0 <col:3> '_Bool' lvalue Var 0x55782bcff758 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55782bd04b70 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55782bd04b40 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55782bd04a60 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55782bd04980 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55782bd04938 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55782bd04920 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55782bd048e0 <col:20> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55782bd04968 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55782bd04950 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55782bd04900 <col:38> '_Bool' lvalue Var 0x55782bcff500 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55782bd04a40 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55782bd049f8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55782bd049e0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55782bd049a0 <col:56> '_Bool' lvalue Var 0x55782bcffab8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55782bd04a28 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55782bd04a10 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55782bd049c0 <col:74> '_Bool' lvalue Var 0x55782bcff758 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55782bd04af8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55782bd04ab0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55782bd04a80 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55782bd04b28 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55782bd04b10 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55782bd04ad8 <col:102> '_Bool' lvalue Var 0x55782bcff758 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55782bd04be0 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55782bd04bc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd04ba8 <col:3> 'void ()' Function 0x55782bca5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55782bd04c38 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55782bd04c20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd04c00 <col:3> 'void ()' Function 0x55782bca5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55782bd04cf0 <line:785:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55782bd04c58 <col:3> 'int' lvalue Var 0x55782bcfe6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55782bd04cd0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55782bd04cb8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55782bd04c78 <col:22> 'int' lvalue Var 0x55782bcfe6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55782bd04c98 <col:41> 'int' 1
|   |-CallExpr 0x55782bd04d48 <line:786:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55782bd04d30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd04d10 <col:3> 'void ()' Function 0x55782bca5410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55782bd04dc0 <line:787:3, col:36>
|     `-CallExpr 0x55782bd04da0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55782bd04d88 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55782bd04d68 <col:10> 'void *(void)' Function 0x55782bca4e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55782bd04fd0 prev 0x55782bcfe368 <line:789:1, line:814:1> line:789:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x55782bd04ed0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55782bd06448 <line:790:1, line:814:1>
|   |-CallExpr 0x55782bd050b0 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55782bd05098 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd05078 <col:3> 'void ()' Function 0x55782bca5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55782bd05110 <line:792:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55782bd050d0 <col:3> 'int' lvalue Var 0x55782bcffbb8 'z' 'int'
|   | `-IntegerLiteral 0x55782bd050f0 <col:7> 'int' 1
|   |-CallExpr 0x55782bd05168 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55782bd05150 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd05130 <col:3> 'void ()' Function 0x55782bca5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55782bd051c0 <line:794:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55782bd051a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd05188 <col:3> 'void ()' Function 0x55782bca5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55782bd05220 <line:795:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55782bd051e0 <col:3> 'int' lvalue Var 0x55782bcfeda8 'a' 'int'
|   | `-IntegerLiteral 0x55782bd05200 <col:7> 'int' 1
|   |-CallExpr 0x55782bd05278 <line:796:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55782bd05260 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd05240 <col:3> 'void ()' Function 0x55782bca5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55782bd052d0 <line:797:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55782bd052b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd05298 <col:3> 'void ()' Function 0x55782bca5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55782bd05348 <line:798:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55782bd052f0 <col:3> 'int' lvalue Var 0x55782bcfeb68 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x55782bd05330 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55782bd05310 <col:25> 'int' lvalue Var 0x55782bcfeda8 'a' 'int'
|   |-CallExpr 0x55782bd053a0 <line:799:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55782bd05388 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd05368 <col:3> 'void ()' Function 0x55782bca5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55782bd053f8 <line:800:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55782bd053e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd053c0 <col:3> 'void ()' Function 0x55782bca5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55782bd05470 <line:801:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55782bd05418 <col:3> 'int' lvalue Var 0x55782bcfec88 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x55782bd05458 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55782bd05438 <col:25> 'int' lvalue Var 0x55782bcfeec8 'b' 'int'
|   |-CallExpr 0x55782bd054c8 <line:802:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55782bd054b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd05490 <col:3> 'void ()' Function 0x55782bca5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55782bd05520 <line:803:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55782bd05508 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd054e8 <col:3> 'void ()' Function 0x55782bca5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55782bd05808 <line:804:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55782bd05540 <col:3> 'int' lvalue Var 0x55782bcff208 'y' 'int'
|   | `-ConditionalOperator 0x55782bd057d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55782bd05600 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55782bd055b8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55782bd055a0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55782bd05560 <col:7> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55782bd055e8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55782bd055d0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55782bd05580 <col:25> '_Bool' lvalue Var 0x55782bcff578 'y$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55782bd057c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55782bd05620 <col:42> 'int' lvalue Var 0x55782bcff948 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55782bd057a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55782bd05770 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55782bd056e0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55782bd05698 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55782bd05680 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55782bd05640 <col:55> '_Bool' lvalue Var 0x55782bcffab8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55782bd056c8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55782bd056b0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55782bd05660 <col:73> '_Bool' lvalue Var 0x55782bcff7d0 'y$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55782bd05740 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55782bd05700 <col:90> 'int' lvalue Var 0x55782bcffa40 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55782bd05758 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55782bd05720 <col:102> 'int' lvalue Var 0x55782bcff208 'y' 'int'
|   |-BinaryOperator 0x55782bd05a10 <line:805:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55782bd05828 <col:3> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55782bd059f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55782bd059c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55782bd058e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55782bd058a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55782bd05888 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55782bd05848 <col:20> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55782bd058d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55782bd058b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55782bd05868 <col:38> '_Bool' lvalue Var 0x55782bcff578 'y$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55782bd05980 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55782bd05938 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55782bd05908 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55782bd059b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55782bd05998 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55782bd05960 <col:66> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55782bd05cf8 <line:806:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55782bd05a30 <col:3> '_Bool' lvalue Var 0x55782bcffab8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55782bd05ce0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55782bd05cb0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55782bd05bd0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55782bd05af0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55782bd05aa8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55782bd05a90 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55782bd05a50 <col:20> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55782bd05ad8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55782bd05ac0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55782bd05a70 <col:38> '_Bool' lvalue Var 0x55782bcff578 'y$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55782bd05bb0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55782bd05b68 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55782bd05b50 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55782bd05b10 <col:56> '_Bool' lvalue Var 0x55782bcffab8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55782bd05b98 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55782bd05b80 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55782bd05b30 <col:74> '_Bool' lvalue Var 0x55782bcff7d0 'y$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55782bd05c68 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55782bd05c20 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55782bd05bf0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55782bd05c98 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55782bd05c80 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55782bd05c48 <col:102> '_Bool' lvalue Var 0x55782bcffab8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55782bd05f00 <line:807:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55782bd05d18 <col:3> '_Bool' lvalue Var 0x55782bcff578 'y$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55782bd05ee8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55782bd05eb8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55782bd05dd8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55782bd05d90 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55782bd05d78 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55782bd05d38 <col:20> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55782bd05dc0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55782bd05da8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55782bd05d58 <col:38> '_Bool' lvalue Var 0x55782bcff578 'y$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55782bd05e70 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55782bd05e28 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55782bd05df8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55782bd05ea0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55782bd05e88 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55782bd05e50 <col:66> '_Bool' lvalue Var 0x55782bcff578 'y$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55782bd06200 <line:808:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55782bd05f20 <col:3> '_Bool' lvalue Var 0x55782bcff7d0 'y$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55782bd061e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55782bd061b8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55782bd060d8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55782bd05ff8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55782bd05f98 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55782bd05f80 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55782bd05f40 <col:20> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55782bd05fe0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55782bd05fb0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55782bd05f60 <col:38> '_Bool' lvalue Var 0x55782bcff578 'y$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55782bd060b8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55782bd06070 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55782bd06058 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55782bd06018 <col:56> '_Bool' lvalue Var 0x55782bcffab8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55782bd060a0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55782bd06088 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55782bd06038 <col:74> '_Bool' lvalue Var 0x55782bcff7d0 'y$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55782bd06170 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55782bd06128 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55782bd060f8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55782bd061a0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55782bd06188 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55782bd06150 <col:102> '_Bool' lvalue Var 0x55782bcff7d0 'y$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x55782bd06258 <line:809:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55782bd06240 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd06220 <col:3> 'void ()' Function 0x55782bca5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55782bd062b0 <line:810:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55782bd06298 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd06278 <col:3> 'void ()' Function 0x55782bca5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55782bd06368 <line:811:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55782bd062d0 <col:3> 'int' lvalue Var 0x55782bcfe6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55782bd06348 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55782bd06330 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55782bd062f0 <col:22> 'int' lvalue Var 0x55782bcfe6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55782bd06310 <col:41> 'int' 1
|   |-CallExpr 0x55782bd063c0 <line:812:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55782bd063a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55782bd06388 <col:3> 'void ()' Function 0x55782bca5410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55782bd06438 <line:813:3, col:36>
|     `-CallExpr 0x55782bd06418 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55782bd06400 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55782bd063e0 <col:10> 'void *(void)' Function 0x55782bca4e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55782bd06530 prev 0x55782bcfe430 <line:815:1, line:817:1> line:815:6 fence 'void ()'
| `-CompoundStmt 0x55782bd065d0 <line:816:1, line:817:1>
|-FunctionDecl 0x55782bd06600 prev 0x55782bcfe4f0 <line:818:1, line:820:1> line:818:6 isync 'void ()'
| `-CompoundStmt 0x55782bd066a0 <line:819:1, line:820:1>
|-FunctionDecl 0x55782bd066d0 prev 0x55782bcfe5b0 <line:821:1, line:823:1> line:821:6 lwfence 'void ()'
| `-CompoundStmt 0x55782bd06770 <line:822:1, line:823:1>
`-FunctionDecl 0x55782bd067d8 <line:824:1, line:850:1> line:824:5 main 'int ()'
  `-CompoundStmt 0x55782bd087d8 <line:825:1, line:850:1>
    |-DeclStmt 0x55782bd068f0 <line:826:3, col:17>
    | `-VarDecl 0x55782bd06888 <col:3, col:13> col:13 used t959 'pthread_t':'unsigned long'
    |-CallExpr 0x55782bd06af8 <line:827:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55782bd06ae0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55782bd06908 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55782bce58f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55782bd06948 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55782bd06928 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55782bd06888 't959' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55782bd06b38 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55782bd069c0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55782bd06998 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55782bd06960 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55782bd06b50 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55782bd069e0 <col:38> 'void *(void *)' Function 0x55782bcffde0 'P0' 'void *(void *)'
    | `-ParenExpr 0x55782bd06a60 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55782bd06a38 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55782bd06a00 <col:51> 'int' 0
    |-DeclStmt 0x55782bd06be0 <line:828:3, col:17>
    | `-VarDecl 0x55782bd06b78 <col:3, col:13> col:13 used t960 'pthread_t':'unsigned long'
    |-CallExpr 0x55782bd06d88 <line:829:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55782bd06d70 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55782bd06bf8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55782bce58f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55782bd06c38 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55782bd06c18 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55782bd06b78 't960' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55782bd06dc8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55782bd06cb0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55782bd06c88 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55782bd06c50 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55782bd06de0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55782bd06cd0 <col:38> 'void *(void *)' Function 0x55782bd004f8 'P1' 'void *(void *)'
    | `-ParenExpr 0x55782bd06d50 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55782bd06d28 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55782bd06cf0 <col:51> 'int' 0
    |-DeclStmt 0x55782bd06e70 <line:830:3, col:17>
    | `-VarDecl 0x55782bd06e08 <col:3, col:13> col:13 used t961 'pthread_t':'unsigned long'
    |-CallExpr 0x55782bd07028 <line:831:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55782bd07010 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55782bd06e88 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55782bce58f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55782bd06ec8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55782bd06ea8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55782bd06e08 't961' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55782bd07068 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55782bd06f40 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55782bd06f18 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55782bd06ee0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55782bd07080 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55782bd06f60 <col:38> 'void *(void *)' Function 0x55782bd03578 'P2' 'void *(void *)'
    | `-ParenExpr 0x55782bd06ff0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55782bd06fb8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55782bd06f80 <col:51> 'int' 0
    |-DeclStmt 0x55782bd07110 <line:832:3, col:17>
    | `-VarDecl 0x55782bd070a8 <col:3, col:13> col:13 used t962 'pthread_t':'unsigned long'
    |-CallExpr 0x55782bd072b8 <line:833:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55782bd072a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55782bd07128 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55782bce58f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55782bd07168 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55782bd07148 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55782bd070a8 't962' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55782bd072f8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55782bd071e0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55782bd071b8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55782bd07180 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55782bd07310 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55782bd07200 <col:38> 'void *(void *)' Function 0x55782bd04fd0 'P3' 'void *(void *)'
    | `-ParenExpr 0x55782bd07280 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55782bd07258 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55782bd07220 <col:51> 'int' 0
    |-CallExpr 0x55782bd07360 <line:834:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55782bd07348 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55782bd07328 <col:3> 'void ()' Function 0x55782bca5350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55782bd07430 <line:835:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55782bd07380 <col:3> '_Bool' lvalue Var 0x55782bcfef70 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55782bd07418 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55782bd073f8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55782bd073e0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55782bd073a0 <col:21> 'int' lvalue Var 0x55782bcfe6e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55782bd073c0 <col:41> 'int' 4
    |-CallExpr 0x55782bd07488 <line:836:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55782bd07470 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55782bd07450 <col:3> 'void ()' Function 0x55782bca5410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55782bd07500 <line:837:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55782bd074e8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55782bd074a8 <col:3> 'void (int)' Function 0x55782bca4ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55782bd07540 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55782bd07528 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55782bd074c8 <col:21> '_Bool' lvalue Var 0x55782bcfef70 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55782bd07590 <line:838:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55782bd07578 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55782bd07558 <col:3> 'void ()' Function 0x55782bca5350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55782bd07878 <line:839:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55782bd075b0 <col:3> 'int' lvalue Var 0x55782bcff208 'y' 'int'
    | `-ConditionalOperator 0x55782bd07848 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55782bd07670 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55782bd07628 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55782bd07610 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55782bd075d0 <col:7> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55782bd07658 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55782bd07640 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55782bd075f0 <col:25> '_Bool' lvalue Var 0x55782bcff398 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55782bd07830 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55782bd07690 <col:42> 'int' lvalue Var 0x55782bcff948 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55782bd07810 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55782bd077e0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55782bd07750 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55782bd07708 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55782bd076f0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55782bd076b0 <col:55> '_Bool' lvalue Var 0x55782bcffab8 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55782bd07738 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55782bd07720 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55782bd076d0 <col:73> '_Bool' lvalue Var 0x55782bcff5f0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55782bd077b0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55782bd07770 <col:90> 'int' lvalue Var 0x55782bcffa40 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55782bd077c8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55782bd07790 <col:102> 'int' lvalue Var 0x55782bcff208 'y' 'int'
    |-BinaryOperator 0x55782bd07a80 <line:840:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55782bd07898 <col:3> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55782bd07a68 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55782bd07a38 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55782bd07958 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55782bd07910 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55782bd078f8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55782bd078b8 <col:20> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55782bd07940 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55782bd07928 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55782bd078d8 <col:38> '_Bool' lvalue Var 0x55782bcff398 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55782bd079f0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55782bd079a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55782bd07978 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55782bd07a20 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55782bd07a08 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55782bd079d0 <col:66> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55782bd07d68 <line:841:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55782bd07aa0 <col:3> '_Bool' lvalue Var 0x55782bcffab8 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55782bd07d50 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55782bd07d20 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55782bd07c40 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55782bd07b60 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55782bd07b18 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55782bd07b00 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55782bd07ac0 <col:20> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55782bd07b48 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55782bd07b30 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55782bd07ae0 <col:38> '_Bool' lvalue Var 0x55782bcff398 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55782bd07c20 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55782bd07bd8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55782bd07bc0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55782bd07b80 <col:56> '_Bool' lvalue Var 0x55782bcffab8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55782bd07c08 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55782bd07bf0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55782bd07ba0 <col:74> '_Bool' lvalue Var 0x55782bcff5f0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55782bd07cd8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55782bd07c90 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55782bd07c60 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55782bd07d08 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55782bd07cf0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55782bd07cb8 <col:102> '_Bool' lvalue Var 0x55782bcffab8 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55782bd07f70 <line:842:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55782bd07d88 <col:3> '_Bool' lvalue Var 0x55782bcff398 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55782bd07f58 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55782bd07f28 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55782bd07e48 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55782bd07e00 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55782bd07de8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55782bd07da8 <col:20> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55782bd07e30 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55782bd07e18 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55782bd07dc8 <col:38> '_Bool' lvalue Var 0x55782bcff398 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55782bd07ee0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55782bd07e98 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55782bd07e68 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55782bd07f10 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55782bd07ef8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55782bd07ec0 <col:66> '_Bool' lvalue Var 0x55782bcff398 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55782bd08268 <line:843:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55782bd07f90 <col:3> '_Bool' lvalue Var 0x55782bcff5f0 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55782bd08250 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55782bd08220 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55782bd08140 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55782bd08060 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55782bd08018 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55782bd08000 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55782bd07fb0 <col:20> '_Bool' lvalue Var 0x55782bcff9c0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55782bd08048 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55782bd08030 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55782bd07fd0 <col:38> '_Bool' lvalue Var 0x55782bcff398 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55782bd08120 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55782bd080d8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55782bd080c0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55782bd08080 <col:56> '_Bool' lvalue Var 0x55782bcffab8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55782bd08108 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55782bd080f0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55782bd080a0 <col:74> '_Bool' lvalue Var 0x55782bcff5f0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55782bd081d8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55782bd08190 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55782bd08160 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55782bd08208 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55782bd081f0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55782bd081b8 <col:102> '_Bool' lvalue Var 0x55782bcff5f0 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55782bd082c0 <line:844:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55782bd082a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55782bd08288 <col:3> 'void ()' Function 0x55782bca5410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55782bd08318 <line:845:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55782bd08300 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55782bd082e0 <col:3> 'void ()' Function 0x55782bca5350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55782bd08680 <line:846:3, col:159> '_Bool' '='
    | |-DeclRefExpr 0x55782bd08338 <col:3> '_Bool' lvalue Var 0x55782bcfefe8 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55782bd08668 <col:21, col:159> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55782bd08650 <col:21, col:159> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55782bd08630 <col:22, col:159> 'int'
    |       `-BinaryOperator 0x55782bd08610 <col:23, col:158> 'int' '&&'
    |         |-BinaryOperator 0x55782bd08578 <col:23, col:130> 'int' '&&'
    |         | |-BinaryOperator 0x55782bd084e0 <col:23, col:102> 'int' '&&'
    |         | | |-BinaryOperator 0x55782bd08448 <col:23, col:74> 'int' '&&'
    |         | | | |-BinaryOperator 0x55782bd083b0 <col:23, col:46> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x55782bd08398 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x55782bd08358 <col:23> 'int' lvalue Var 0x55782bcfe808 '__unbuffered_p0_EAX' 'int'
    |         | | | | `-IntegerLiteral 0x55782bd08378 <col:46> 'int' 0
    |         | | | `-BinaryOperator 0x55782bd08428 <col:51, col:74> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x55782bd08410 <col:51> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x55782bd083d0 <col:51> 'int' lvalue Var 0x55782bcfe928 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x55782bd083f0 <col:74> 'int' 0
    |         | | `-BinaryOperator 0x55782bd084c0 <col:79, col:102> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55782bd084a8 <col:79> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55782bd08468 <col:79> 'int' lvalue Var 0x55782bcfea48 '__unbuffered_p2_EAX' 'int'
    |         | |   `-IntegerLiteral 0x55782bd08488 <col:102> 'int' 0
    |         | `-BinaryOperator 0x55782bd08558 <col:107, col:130> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55782bd08540 <col:107> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55782bd08500 <col:107> 'int' lvalue Var 0x55782bcfeb68 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x55782bd08520 <col:130> 'int' 1
    |         `-BinaryOperator 0x55782bd085f0 <col:135, col:158> 'int' '=='
    |           |-ImplicitCastExpr 0x55782bd085d8 <col:135> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55782bd08598 <col:135> 'int' lvalue Var 0x55782bcfec88 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x55782bd085b8 <col:158> 'int' 0
    |-CallExpr 0x55782bd086d8 <line:847:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55782bd086c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55782bd086a0 <col:3> 'void ()' Function 0x55782bca5410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55782bd08750 <line:848:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55782bd08738 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55782bd086f8 <col:3> 'void (int)' Function 0x55782bca50d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55782bd08790 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55782bd08778 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55782bd08718 <col:21> '_Bool' lvalue Var 0x55782bcfefe8 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55782bd087c8 <line:849:3, col:10>
      `-IntegerLiteral 0x55782bd087a8 <col:10> 'int' 0
