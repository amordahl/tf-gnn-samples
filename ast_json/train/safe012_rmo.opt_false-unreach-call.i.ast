TranslationUnitDecl 0x556a813b0f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x556a813b1848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x556a813b1520 '__int128'
|-TypedefDecl 0x556a813b18b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x556a813b1540 'unsigned __int128'
|-TypedefDecl 0x556a813b1bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x556a813b1990 'struct __NSConstantString_tag'
|   `-Record 0x556a813b1910 '__NSConstantString_tag'
|-TypedefDecl 0x556a813b1c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x556a813b1c20 'char *'
|   `-BuiltinType 0x556a813b1020 'char'
|-TypedefDecl 0x556a813f0b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x556a813b1f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x556a813b1d40 'struct __va_list_tag'
|     `-Record 0x556a813b1cc0 '__va_list_tag'
|-FunctionDecl 0x556a813f0c80 <pthread-wmm/safe012_rmo.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x556a813f0e50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x556a813f0d80 <col:31> col:34 'int'
|-FunctionDecl 0x556a813f0fc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x556a813f10f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x556a813f1238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x556a813f11a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x556a813f1468 <col:40, col:99>
|   |-IfStmt 0x556a813f1438 <col:42, col:88>
|   | |-UnaryOperator 0x556a813f1318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x556a813f1300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x556a813f12e0 <col:47> 'int' lvalue ParmVar 0x556a813f11a8 'expression' 'int'
|   | `-CompoundStmt 0x556a813f1420 <col:59, col:88>
|   |   `-LabelStmt 0x556a813f1408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x556a813f1398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x556a813f1380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x556a813f1330 <col:68> 'void () __attribute__((noreturn))' Function 0x556a813f10f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x556a813f1450 <col:89>
|   `-ReturnStmt 0x556a813f1458 <col:91>
|-FunctionDecl 0x556a813f14b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x556a813f1570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x556a813f18f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x556a813f1628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x556a813f16a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x556a813f1728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x556a813f17a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x556a813f19b0 <line:11:22>
|-FunctionDecl 0x556a81416f10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x556a813f1a20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x556a813f1aa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x556a81416d40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x556a81416dc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x556a81416fd0 <line:14:22>
|-FunctionDecl 0x556a81417280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x556a81417040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x556a814170c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x556a81417140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x556a81417338 <line:16:22>
|-TypedefDecl 0x556a814173a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x556a813b10e0 'unsigned char'
|-TypedefDecl 0x556a81417418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x556a813b1100 'unsigned short'
|-TypedefDecl 0x556a81417488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x556a813b1120 'unsigned int'
|-TypedefDecl 0x556a814174f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x556a813b1140 'unsigned long'
|-TypedefDecl 0x556a81417568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x556a813b1040 'signed char'
|-TypedefDecl 0x556a814175d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x556a813b10e0 'unsigned char'
|-TypedefDecl 0x556a81417648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x556a813b1060 'short'
|-TypedefDecl 0x556a814176b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x556a813b1100 'unsigned short'
|-TypedefDecl 0x556a81417728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x556a813b1080 'int'
|-TypedefDecl 0x556a81417798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x556a813b1120 'unsigned int'
|-TypedefDecl 0x556a81417808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x556a813b10a0 'long'
|-TypedefDecl 0x556a81417878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x556a813b1140 'unsigned long'
|-TypedefDecl 0x556a814178e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x556a813b10a0 'long'
|-TypedefDecl 0x556a81417958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x556a813b1140 'unsigned long'
|-TypedefDecl 0x556a814179c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x556a813b1140 'unsigned long'
|-TypedefDecl 0x556a81417a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x556a813b1120 'unsigned int'
|-TypedefDecl 0x556a81417aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x556a813b1120 'unsigned int'
|-TypedefDecl 0x556a81417b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x556a813b1140 'unsigned long'
|-TypedefDecl 0x556a81417b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x556a813b1140 'unsigned long'
|-TypedefDecl 0x556a81417bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x556a813b1120 'unsigned int'
|-TypedefDecl 0x556a81417c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x556a813b1140 'unsigned long'
|-TypedefDecl 0x556a81417cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x556a813b10a0 'long'
|-TypedefDecl 0x556a81417d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x556a813b10a0 'long'
|-TypedefDecl 0x556a81417dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x556a813b1080 'int'
|-RecordDecl 0x556a81417e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x556a81417f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x556a81418030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x556a81417fd0 'struct __fsid_t' sugar
|   `-RecordType 0x556a81417eb0 '__fsid_t'
|     `-Record 0x556a81417e30 ''
|-TypedefDecl 0x556a814180b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x556a813b10a0 'long'
|-TypedefDecl 0x556a81418128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x556a813b1140 'unsigned long'
|-TypedefDecl 0x556a81418198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x556a813b1140 'unsigned long'
|-TypedefDecl 0x556a81418208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x556a813b1120 'unsigned int'
|-TypedefDecl 0x556a81418278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x556a813b10a0 'long'
|-TypedefDecl 0x556a814182e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x556a813b1120 'unsigned int'
|-TypedefDecl 0x556a81418358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x556a813b10a0 'long'
|-TypedefDecl 0x556a814183c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x556a813b1080 'int'
|-TypedefDecl 0x556a81418438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x556a813b1080 'int'
|-TypedefDecl 0x556a814184a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x556a813b1080 'int'
|-TypedefDecl 0x556a81418518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x556a813b17a0 'void *'
|   `-BuiltinType 0x556a813b0fe0 'void'
|-TypedefDecl 0x556a81418588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x556a813b10a0 'long'
|-TypedefDecl 0x556a814185f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x556a813b10a0 'long'
|-TypedefDecl 0x556a81418668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x556a813b10a0 'long'
|-TypedefDecl 0x556a814186d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x556a813b1140 'unsigned long'
|-TypedefDecl 0x556a81418748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x556a813b1140 'unsigned long'
|-TypedefDecl 0x556a814187b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x556a813b1140 'unsigned long'
|-TypedefDecl 0x556a81418828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x556a813b1140 'unsigned long'
|-TypedefDecl 0x556a81418898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x556a813b10a0 'long'
|-TypedefDecl 0x556a81418908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x556a813b10a0 'long'
|-TypedefDecl 0x556a81418978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x556a813b10a0 'long'
|-TypedefDecl 0x556a814189e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x556a813b1140 'unsigned long'
|-TypedefDecl 0x556a81418a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x556a81418a40 '__off64_t' sugar
|   |-Typedef 0x556a81417d68 '__off64_t'
|   `-BuiltinType 0x556a813b10a0 'long'
|-TypedefDecl 0x556a81418b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x556a81418b30 '__quad_t *'
|   `-TypedefType 0x556a81418ad0 '__quad_t' sugar
|     |-Typedef 0x556a814178e8 '__quad_t'
|     `-BuiltinType 0x556a813b10a0 'long'
|-TypedefDecl 0x556a81418be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x556a813b1c20 'char *'
|   `-BuiltinType 0x556a813b1020 'char'
|-TypedefDecl 0x556a81418c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x556a813b10a0 'long'
|-TypedefDecl 0x556a81418cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x556a813b1120 'unsigned int'
|-FunctionDecl 0x556a81418e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x556a81418d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x556a81419148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x556a81419138 <line:73:3, col:34>
|     `-CallExpr 0x556a814190f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x556a814190e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x556a81419070 <col:10> '<builtin fn type>' Function 0x556a81418ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x556a81419120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x556a81419090 <col:29> 'unsigned int' lvalue ParmVar 0x556a81418d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x556a81418ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x556a81418f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x556a81418ff0 <col:10> Implicit
| `-ConstAttr 0x556a81419048 <col:10> Implicit
|-FunctionDecl 0x556a814192a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x556a81419198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x556a814195b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x556a814195a8 <line:78:3, col:34>
|     `-CallExpr 0x556a81419568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x556a81419550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x556a814194d8 <col:10> '<builtin fn type>' Function 0x556a81419348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x556a81419590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x556a814194f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x556a81419198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x556a81419348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x556a814193e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x556a81419458 <col:10> Implicit
| `-ConstAttr 0x556a814194b0 <col:10> Implicit
|-TypedefDecl 0x556a814195e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x556a813b1140 'unsigned long'
|-TypedefDecl 0x556a81419678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x556a81419640 '__time_t' sugar
|   |-Typedef 0x556a81418278 '__time_t'
|   `-BuiltinType 0x556a813b10a0 'long'
|-RecordDecl 0x556a814196d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x556a81419788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x556a81419818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x556a814198a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x556a81419870 '__pid_t' sugar
|   |-Typedef 0x556a81417dd8 '__pid_t'
|   `-BuiltinType 0x556a813b1080 'int'
|-RecordDecl 0x556a81419900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x556a814199c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x556a81419a10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x556a81419ad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x556a81419b38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x556a813b1140 'unsigned long'
|-RecordDecl 0x556a81419b90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x556a8141be70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x556a8141bf20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x556a8141bec0 'struct cpu_set_t' sugar
|   `-RecordType 0x556a81419c10 'cpu_set_t'
|     `-Record 0x556a81419b90 ''
|-FunctionDecl 0x556a8141c1f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x556a8141bfc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x556a8141c0d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x556a8141c2a8 <line:108:19>
|-FunctionDecl 0x556a8141c480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x556a8141c310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x556a8141c528 <col:69>
|-FunctionDecl 0x556a8141c6a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x556a8141c590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x556a8141c748 <col:64>
|-FunctionDecl 0x556a8141ca08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x556a8141c7b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x556a8141c8e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x556a8141cab8 <line:114:22>
|-FunctionDecl 0x556a8141ce60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x556a8141cb20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x556a8141cc18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x556a8141cf10 <col:88>
|-FunctionDecl 0x556a8141d1c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x556a8141cf78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x556a8141cff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x556a8141d088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x556a8141d280 <col:62>
|-FunctionDecl 0x556a8141d3f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x556a8141d2e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x556a8141d4a0 <col:63>
|-FunctionDecl 0x556a8141d5c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x556a8141d668 <col:47>
|-FunctionDecl 0x556a8141d770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x556a8141d6d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x556a8141d818 <col:69>
|-FunctionDecl 0x556a8141d920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x556a8141d888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x556a8141d9c8 <col:69>
|-FunctionDecl 0x556a8141dc88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x556a8141da30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x556a8141db68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x556a8141dd38 <col:88>
|-TypedefDecl 0x556a8141ddc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x556a8141dd90 '__clock_t' sugar
|   |-Typedef 0x556a814180b8 '__clock_t'
|   `-BuiltinType 0x556a813b10a0 'long'
|-TypedefDecl 0x556a8141e7e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x556a8141de20 '__clockid_t' sugar
|   |-Typedef 0x556a814184a8 '__clockid_t'
|   `-BuiltinType 0x556a813b1080 'int'
|-TypedefDecl 0x556a8141e878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x556a8141e840 '__timer_t' sugar
|   |-Typedef 0x556a81418518 '__timer_t'
|   `-PointerType 0x556a813b17a0 'void *'
|     `-BuiltinType 0x556a813b0fe0 'void'
|-RecordDecl 0x556a8141e8d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x556a8141e990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x556a8141e9f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x556a8141ea60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x556a8141eac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x556a8141eb30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x556a8141eb98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x556a8141ec00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x556a8141ec68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x556a8141ecd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x556a8141ed38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x556a8141eda0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x556a8141edf0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x556a8141eeb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x556a8141ef28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x556a8141efd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x556a8141f1a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x556a8141f240 <col:45>
|-FunctionDecl 0x556a8141f420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x556a8141f310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x556a8141f4c8 <col:54>
|-FunctionDecl 0x556a8141f6c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x556a8141f530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x556a8141f5a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x556a8141f778 <line:158:22>
| `-ConstAttr 0x556a81420410 <col:63>
|-FunctionDecl 0x556a81420610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x556a81420508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x556a814206b8 <col:56>
|-FunctionDecl 0x556a81420a60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x556a81420728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x556a814207a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x556a81420820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x556a81420918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x556a81420b20 <col:54>
|-RecordDecl 0x556a81420b78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x556a81420c28 parent 0x556a813b0f88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x556a81420e88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x556a81420f28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x556a81420f90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x556a81420ff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x556a814210e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x556a81421208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x556a814211b0 'struct __locale_struct *'
|   `-ElaboratedType 0x556a81421140 'struct __locale_struct' sugar
|     `-RecordType 0x556a81420c00 'struct __locale_struct'
|       `-Record 0x556a81420b78 '__locale_struct'
|-TypedefDecl 0x556a814212b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x556a81421280 '__locale_t' sugar
|   |-Typedef 0x556a81421208 '__locale_t'
|   `-PointerType 0x556a814211b0 'struct __locale_struct *'
|     `-ElaboratedType 0x556a81421140 'struct __locale_struct' sugar
|       `-RecordType 0x556a81420c00 'struct __locale_struct'
|         `-Record 0x556a81420b78 '__locale_struct'
|-FunctionDecl 0x556a814216b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x556a81421328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x556a814213a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x556a81421438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x556a814214c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x556a81421540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x556a81421778 <col:40>
|-FunctionDecl 0x556a81421968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x556a81421840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x556a81421a10 <col:66>
|-FunctionDecl 0x556a81421b20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x556a81421a78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x556a81421bc8 <col:69>
|-FunctionDecl 0x556a81421df8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x556a81421c30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x556a81421cc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x556a81421ea8 <col:52>
|-FunctionDecl 0x556a81422050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x556a81421f10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x556a81421fa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x556a81422100 <col:55>
|-FunctionDecl 0x556a81422298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x556a81422180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x556a81422340 <col:62>
|-FunctionDecl 0x556a81422578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x556a814223a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x556a81422620 <col:60>
|-FunctionDecl 0x556a81422848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x556a814226a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x556a81422720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x556a814228f8 <col:44>
|-FunctionDecl 0x556a81422b08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x556a81422960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x556a814229e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x556a81422bb8 <col:49>
|-VarDecl 0x556a81422cb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x556a81422d38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x556a81422db8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x556a81422e80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x556a81422fb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x556a81423050 <col:42>
|-VarDecl 0x556a814230c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x556a81423140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x556a814232c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x556a814231b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x556a81423370 <col:57>
|-FunctionDecl 0x556a814244f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x556a814233f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x556a81424598 <col:56>
|-FunctionDecl 0x556a814246a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x556a81424618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x556a81424750 <col:59>
|-FunctionDecl 0x556a81424858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x556a814247c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x556a81424900 <col:48>
| `-ConstAttr 0x556a81424958 <col:89>
|-FunctionDecl 0x556a81424bb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x556a81424a08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x556a81424a98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x556a81424e18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x556a81424ca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556a81424d38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x556a81424ec8 <col:88>
|-FunctionDecl 0x556a81425060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x556a81424f30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556a81424fc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x556a81425110 <col:88>
|-FunctionDecl 0x556a81425328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x556a81425178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556a81425208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x556a814253d8 <line:209:22>
|-FunctionDecl 0x556a81425778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x556a81425440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556a81425500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x556a81425590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x556a81425620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x556a81425a78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x556a81425878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x556a81425950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x556a81425b28 <col:85>
|-FunctionDecl 0x556a81425f18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x556a81425b90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556a81425cc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x556a81425dd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x556a81425fd0 <col:52>
|-FunctionDecl 0x556a81426148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x556a81426038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x556a814261f0 <col:61>
|-FunctionDecl 0x556a81426668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x556a81426258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x556a814262d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x556a81426408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x556a81426510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x556a81426728 <col:62>
|-FunctionDecl 0x556a81426948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x556a81426790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x556a81426820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x556a814269f8 <line:222:22>
|-FunctionDecl 0x556a81426af8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x556a81426a60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x556a81426ba0 <col:65>
|-TypedefDecl 0x556a81426c10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x556a813b1140 'unsigned long'
|-RecordDecl 0x556a81426c68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x556a81426db0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x556a81426e18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556a81426ec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x556a81426e70 'union pthread_attr_t' sugar
|   `-RecordType 0x556a81426cf0 'union pthread_attr_t'
|     `-Record 0x556a81426c68 'pthread_attr_t'
|-RecordDecl 0x556a81426f20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x556a81427098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x556a81427110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x556a814271c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x556a81427160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x556a81426fa0 'struct __pthread_internal_list'
|     `-Record 0x556a81426f20 '__pthread_internal_list'
|-RecordDecl 0x556a81427230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x556a814272d8 parent 0x556a813b0f88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x556a814273b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x556a81427418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x556a81427480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x556a8142b530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x556a8142b598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x556a8142b600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x556a8142b688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x556a8142b740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x556a8142b830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x556a8142b898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556a8142ba20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x556a8142b9c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x556a814272b0 'pthread_mutex_t'
|     `-Record 0x556a81427230 ''
|-RecordDecl 0x556a8142ba90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x556a8142bbd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x556a8142bc38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x556a8142bcf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x556a8142bc90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x556a8142bb10 'pthread_mutexattr_t'
|     `-Record 0x556a8142ba90 ''
|-RecordDecl 0x556a8142bd60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x556a8142be08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x556a8142bed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x556a8142bf38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x556a8142bfa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x556a8142c008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x556a8142c070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x556a8142c0d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x556a8142c140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x556a8142c1a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x556a8142c260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe012_rmo.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe012_rmo.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x556a8142c350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x556a8142c3b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x556a8142c540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x556a8142c490 'union pthread_cond_t' sugar
|   `-RecordType 0x556a8142bde0 'pthread_cond_t'
|     `-Record 0x556a8142bd60 ''
|-RecordDecl 0x556a8142c5b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x556a8142c6b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x556a8142c718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x556a8142c7d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x556a8142c770 'union pthread_condattr_t' sugar
|   `-RecordType 0x556a8142c630 'pthread_condattr_t'
|     `-Record 0x556a8142c5b0 ''
|-TypedefDecl 0x556a8142c858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x556a813b1120 'unsigned int'
|-TypedefDecl 0x556a8142c8c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x556a813b1080 'int'
|-RecordDecl 0x556a8142c920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x556a8142c9c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x556a8142ca90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x556a8142caf8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x556a8142cb60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x556a8142cbc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x556a8142cc30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x556a8142cc98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x556a8142cd00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x556a8142cd68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x556a8142cdd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x556a8142ce38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x556a8142cea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x556a8142cf50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe012_rmo.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe012_rmo.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x556a8142cff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x556a8142d060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556a8142d1b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x556a8142d150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x556a8142c9a0 'pthread_rwlock_t'
|     `-Record 0x556a8142c920 ''
|-RecordDecl 0x556a8142d220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x556a8142d360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x556a8142d3c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556a8142d480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x556a8142d420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x556a8142d2a0 'pthread_rwlockattr_t'
|     `-Record 0x556a8142d220 ''
|-TypedefDecl 0x556a8142f560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x556a813b1084 'volatile int' volatile
|   `-BuiltinType 0x556a813b1080 'int'
|-RecordDecl 0x556a8142f5b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x556a8142f700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x556a8142f768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556a8142f820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x556a8142f7c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x556a8142f640 'pthread_barrier_t'
|     `-Record 0x556a8142f5b8 ''
|-RecordDecl 0x556a8142f890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x556a8142f990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x556a8142f9f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x556a8142fab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x556a8142fa50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x556a8142f910 'pthread_barrierattr_t'
|     `-Record 0x556a8142f890 ''
|-TypedefDecl 0x556a8142fbc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x556a8142fb60 'long [8]' 8 
|   `-BuiltinType 0x556a813b10a0 'long'
|-EnumDecl 0x556a8142fc20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x556a8142fce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x556a8142fd38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x556a8142fd88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x556a8142fe58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x556a8142fea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x556a8142fef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x556a8142ff48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x556a8142ffd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x556a8142ffb8 <col:26> 'int'
| |   `-DeclRefExpr 0x556a8142ff98 <col:26> 'int' EnumConstant 0x556a8142fe58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x556a81430058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x556a81430040 <col:29> 'int'
| |   `-DeclRefExpr 0x556a81430020 <col:29> 'int' EnumConstant 0x556a8142fea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x556a814300e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x556a814300c8 <col:30> 'int'
| |   `-DeclRefExpr 0x556a814300a8 <col:30> 'int' EnumConstant 0x556a8142fef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x556a81430168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x556a81430150 <col:27> 'int'
|     `-DeclRefExpr 0x556a81430130 <col:27> 'int' EnumConstant 0x556a8142ffd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x556a814301b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x556a81430288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x556a81430310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x556a814302f8 <col:30> 'int'
| |   `-DeclRefExpr 0x556a814302d8 <col:30> 'int' EnumConstant 0x556a81430288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x556a81430360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x556a814303e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x556a814303d0 <col:29> 'int'
|     `-DeclRefExpr 0x556a814303b0 <col:29> 'int' EnumConstant 0x556a81430360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x556a81430438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x556a81430508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x556a81430570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x556a814305c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x556a81430610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x556a814306d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x556a81430728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x556a81430778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x556a81430800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x556a814307e8 <col:31> 'int'
|     `-DeclRefExpr 0x556a814307c8 <col:31> 'int' EnumConstant 0x556a814306d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x556a81430850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x556a81430918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x556a81430968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x556a814309b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x556a81430a88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x556a81430ad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x556a81430b28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x556a81430bf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x556a81430c48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x556a81430c98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x556a81430ed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x556a81430f40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x556a81430fa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x556a814310c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x556a81431118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x556a814311e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x556a81431238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x556a81431288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x556a81431358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x556a814313a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x556a814319d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x556a814314a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x556a814315c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556a814317c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x556a81431840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x556a81431a98 <col:47>
| |-NonNullAttr 0x556a81431af0 <col:77, col:94> 1 3
| `-CallbackAttr 0x556a81431b28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x556a81431c50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x556a81431b80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x556a81431ea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x556a81431d08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x556a81431d88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x556a81432078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x556a81431f68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x556a81432120 <col:60>
|-FunctionDecl 0x556a81432270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x556a81432310 <col:54>
| `-ConstAttr 0x556a81432368 <col:95>
|-FunctionDecl 0x556a81432da0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x556a814323a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556a81432418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x556a81432e50 <line:395:19>
| `-ConstAttr 0x556a81432ea8 <col:60>
|-FunctionDecl 0x556a81433078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x556a81432f40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x556a81433120 <col:71>
| `-NonNullAttr 0x556a81433178 <col:112, col:126> 1
|-FunctionDecl 0x556a81433280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x556a814331c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x556a81433328 <line:398:22>
| `-NonNullAttr 0x556a81433380 <col:63, col:77> 1
|-FunctionDecl 0x556a814335a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x556a814333c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x556a81433448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x556a81433658 <line:401:22>
| `-NonNullAttr 0x556a814336b0 <col:63, col:80> 1 2
|-FunctionDecl 0x556a814338b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x556a814336f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556a81433778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x556a81433968 <line:404:22>
| `-NonNullAttr 0x556a814339c0 <col:63, col:77> 1
|-FunctionDecl 0x556a81433c18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x556a81433a08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x556a81433ab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x556a81433cc8 <line:407:22>
| `-NonNullAttr 0x556a81433d20 <col:63, col:80> 1 2
|-FunctionDecl 0x556a81434f78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x556a81434dc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556a81434e38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x556a81435028 <line:410:22>
| `-NonNullAttr 0x556a81435080 <col:63, col:77> 1
|-FunctionDecl 0x556a814352b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x556a814350c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556a81435158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x556a81435368 <line:413:22>
| `-NonNullAttr 0x556a814353c0 <col:63, col:80> 1 2
|-FunctionDecl 0x556a814355f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x556a81435408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x556a81435498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x556a814356a8 <col:37>
| `-NonNullAttr 0x556a81435700 <col:78, col:95> 1 2
|-FunctionDecl 0x556a814358e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556a81435748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556a814357c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x556a81435998 <line:419:22>
| `-NonNullAttr 0x556a814359f0 <col:63, col:80> 1 2
|-FunctionDecl 0x556a81435b78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x556a81435a38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556a81435ab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x556a81435c28 <line:421:22>
| `-NonNullAttr 0x556a81435c80 <col:63, col:77> 1
|-FunctionDecl 0x556a81436e58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556a81435cc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556a81435d48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x556a81436f08 <line:424:22>
| `-NonNullAttr 0x556a81436f60 <col:63, col:80> 1 2
|-FunctionDecl 0x556a814370e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x556a81436fa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556a81437028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x556a81437198 <line:427:22>
| `-NonNullAttr 0x556a814371f0 <col:63, col:77> 1
|-FunctionDecl 0x556a81437398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556a81437238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556a814372b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x556a81437448 <line:430:22>
| `-NonNullAttr 0x556a814374a0 <col:63, col:80> 1 2
|-FunctionDecl 0x556a81437628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x556a814374e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556a81437568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x556a814376d8 <line:432:22>
| `-NonNullAttr 0x556a81437730 <col:63, col:77> 1
|-FunctionDecl 0x556a81437958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x556a81437778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556a814377f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x556a81437a08 <line:435:22>
| |-NonNullAttr 0x556a81437a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x556a81437a98 <col:100> "" ""
|-FunctionDecl 0x556a81437ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x556a81437ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556a81437b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x556a81437d58 <line:438:22>
| |-NonNullAttr 0x556a81437db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x556a81437df8 <col:97> "" ""
|-FunctionDecl 0x556a81437fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x556a81437e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556a81437ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x556a81438098 <line:441:22>
| `-NonNullAttr 0x556a814380f0 <col:63, col:80> 1 2
|-FunctionDecl 0x556a81438270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x556a81438138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556a814381b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x556a81438320 <line:444:22>
| `-NonNullAttr 0x556a81438378 <col:63, col:77> 1
|-FunctionDecl 0x556a81438668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x556a814383c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556a81438448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x556a814384c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x556a81438720 <line:448:22>
| `-NonNullAttr 0x556a81438778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x556a81438a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x556a814387d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556a81438850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x556a814388c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x556a81438ae0 <col:43>
| `-NonNullAttr 0x556a81438b38 <col:84, col:98> 1
|-FunctionDecl 0x556a81438e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x556a81438b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556a81438c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x556a81438c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x556a81438ef8 <line:453:22>
| `-NonNullAttr 0x556a81438f50 <col:63, col:77> 3
|-FunctionDecl 0x556a81439228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x556a81438f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556a81439018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x556a814390a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x556a814392e0 <line:457:22>
| `-NonNullAttr 0x556a81439338 <col:63, col:80> 2 3
|-FunctionDecl 0x556a81439528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x556a81439388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556a81439408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x556a814395d8 <line:459:22>
|-FunctionDecl 0x556a814399a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x556a814396a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x556a81439840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x556a81439a58 <col:52, col:69> 1 2
|-FunctionDecl 0x556a81439c00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x556a81439ae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x556a81439b60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x556a81439e10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x556a81439cc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x556a81439d48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x556a81439f68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x556a81439ed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x556a8143a0a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x556a8143a148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x556a8143a1f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x556a8143a2e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x556a8143a350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x556a8143a520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe012_rmo.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x556a8143a618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x556a8143a6d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x556a8143a670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x556a8143a1d0 '__pthread_unwind_buf_t'
| |   `-Record 0x556a8143a148 ''
| `-AlignedAttr 0x556a8143a728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x556a8143a7a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x556a8143a900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x556a8143a968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x556a8143a9d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x556a8143aa38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x556a8143ac40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x556a8143ab30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x556a8143ae20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x556a8143acf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x556a8143afe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x556a8143aed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x556a8143b088 <line:488:22>
|-RecordDecl 0x556a8143b0e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x556a8143b3f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x556a8143b258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x556a8143b2d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x556a8143b4a8 <col:86>
| `-ReturnsTwiceAttr 0x556a8143b500 <col:12> Implicit
|-FunctionDecl 0x556a8143b828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x556a8143b5d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x556a8143b6e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x556a8143b8d8 <line:494:22>
| `-NonNullAttr 0x556a8143b930 <col:63, col:77> 1
|-FunctionDecl 0x556a8143baa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556a8143b978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556a8143bb50 <line:496:22>
| `-NonNullAttr 0x556a8143bba8 <col:63, col:77> 1
|-FunctionDecl 0x556a8143bcb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556a8143bbf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556a8143bd58 <line:498:22>
| `-NonNullAttr 0x556a8143bdb0 <col:52, col:66> 1
|-FunctionDecl 0x556a8143bee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556a8143be30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556a8143bf90 <line:500:22>
| `-NonNullAttr 0x556a8143bfe8 <col:52, col:66> 1
|-FunctionDecl 0x556a8143c228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x556a8143c038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x556a8143c0c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x556a8143c2d8 <col:36>
| `-NonNullAttr 0x556a8143c330 <col:66, col:83> 1 2
|-FunctionDecl 0x556a8143c430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556a8143c378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556a8143c4d8 <line:505:22>
| `-NonNullAttr 0x556a8143c530 <col:52, col:66> 1
|-FunctionDecl 0x556a8143c7c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556a8143c5e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x556a8143c660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x556a8143c878 <line:509:22>
| `-NonNullAttr 0x556a8143c8d0 <col:63, col:80> 1 2
|-FunctionDecl 0x556a8143cb98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x556a8143c918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x556a8143c998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x556a8143ca18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x556a8143cc50 <line:513:22>
| `-NonNullAttr 0x556a8143cca8 <col:63, col:80> 1 3
|-FunctionDecl 0x556a8143ce40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556a8143ccf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556a8143cee8 <line:515:22>
| `-NonNullAttr 0x556a8143cf40 <col:63, col:77> 1
|-FunctionDecl 0x556a8143d128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x556a8143cff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x556a8143d1d0 <line:517:22>
| `-NonNullAttr 0x556a8143d228 <col:63, col:77> 1
|-FunctionDecl 0x556a8143d330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x556a8143d278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x556a8143d3d8 <line:519:22>
| `-NonNullAttr 0x556a8143d430 <col:63, col:77> 1
|-FunctionDecl 0x556a8143d658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556a8143d478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x556a8143d4f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x556a8143d708 <line:523:22>
| `-NonNullAttr 0x556a8143d760 <col:63, col:80> 1 2
|-FunctionDecl 0x556a8143d968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556a8143d7a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556a8143d828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x556a8143da18 <line:526:22>
| `-NonNullAttr 0x556a8143da70 <col:63, col:77> 1
|-FunctionDecl 0x556a8143dc18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556a8143dab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x556a8143db38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x556a8143dcc8 <line:529:22>
| `-NonNullAttr 0x556a8143dd20 <col:63, col:80> 1 2
|-FunctionDecl 0x556a8143ef20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556a8143dd68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556a8143ee60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x556a8143efd0 <line:531:22>
| `-NonNullAttr 0x556a8143f028 <col:63, col:77> 1
|-FunctionDecl 0x556a8143f1d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556a8143f078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x556a8143f0f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x556a8143f288 <line:535:22>
| `-NonNullAttr 0x556a8143f2e0 <col:63, col:80> 1 2
|-FunctionDecl 0x556a8143f468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556a8143f328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556a8143f3a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x556a8143f518 <line:538:22>
| `-NonNullAttr 0x556a8143f570 <col:63, col:77> 1
|-FunctionDecl 0x556a8143f718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556a8143f5b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x556a8143f638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x556a8143f7c8 <line:542:22>
| `-NonNullAttr 0x556a8143f820 <col:63, col:80> 1 2
|-FunctionDecl 0x556a8143f9a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556a8143f868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556a8143f8e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x556a8143fa58 <line:545:22>
| `-NonNullAttr 0x556a8143fab0 <col:63, col:77> 1
|-FunctionDecl 0x556a8143fc98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x556a8143faf8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x556a8143fb78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x556a8143fd48 <line:548:22>
| `-NonNullAttr 0x556a8143fda0 <col:63, col:80> 1 2
|-FunctionDecl 0x556a81440f58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556a8143fde8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556a81440e98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x556a81441008 <line:551:22>
| `-NonNullAttr 0x556a81441060 <col:63, col:77> 1
|-FunctionDecl 0x556a81441398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x556a81441140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x556a81441250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x556a81441448 <col:29>
| `-NonNullAttr 0x556a814414a0 <col:70, col:84> 1
|-FunctionDecl 0x556a81441618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556a814414e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556a814416c0 <line:556:22>
| `-NonNullAttr 0x556a81441718 <col:63, col:77> 1
|-FunctionDecl 0x556a81441820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556a81441768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556a814418c8 <line:558:22>
| `-NonNullAttr 0x556a81441920 <col:52, col:66> 1
|-FunctionDecl 0x556a81441a20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556a81441968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556a81441ac8 <line:560:19>
| `-NonNullAttr 0x556a81441b20 <col:49, col:63> 1
|-FunctionDecl 0x556a81441d58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x556a81441b68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x556a81441bf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x556a81441e08 <col:39>
| `-NonNullAttr 0x556a81441e90 <col:69, col:86> 1 2
|-FunctionDecl 0x556a81441f90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556a81441ed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556a81442038 <line:565:22>
| `-NonNullAttr 0x556a81442090 <col:52, col:66> 1
|-FunctionDecl 0x556a81442190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556a814420d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556a81442238 <line:567:22>
| `-NonNullAttr 0x556a81442290 <col:52, col:66> 1
|-FunctionDecl 0x556a81442448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x556a814422d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x556a81442368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x556a814424f8 <col:39>
| `-NonNullAttr 0x556a81442550 <col:69, col:86> 1 2
|-FunctionDecl 0x556a81442650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556a81442598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556a814426f8 <line:572:22>
| `-NonNullAttr 0x556a81442750 <col:52, col:66> 1
|-FunctionDecl 0x556a81442938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x556a81442800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x556a814429e0 <line:574:22>
| `-NonNullAttr 0x556a81442a38 <col:63, col:77> 1
|-FunctionDecl 0x556a81442b40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x556a81442a88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x556a81442be8 <line:576:22>
| `-NonNullAttr 0x556a81442c40 <col:63, col:77> 1
|-FunctionDecl 0x556a81442ea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556a81442c88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x556a81442d08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x556a81442f50 <line:580:22>
| `-NonNullAttr 0x556a81442fa8 <col:63, col:80> 1 2
|-FunctionDecl 0x556a814431b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x556a81442ff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x556a81443078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x556a81443268 <line:583:22>
| `-NonNullAttr 0x556a814432c0 <col:63, col:77> 1
|-FunctionDecl 0x556a81443468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556a81443308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x556a81443388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x556a81443518 <line:587:22>
| `-NonNullAttr 0x556a81443570 <col:63, col:80> 1 2
|-FunctionDecl 0x556a814436f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x556a814435b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x556a81443638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x556a814437a8 <col:36>
| `-NonNullAttr 0x556a81443800 <col:77, col:91> 1
|-FunctionDecl 0x556a81443b38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x556a814438e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x556a814439f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x556a81443be8 <line:592:22>
| `-NonNullAttr 0x556a81443c40 <col:63, col:77> 1
|-FunctionDecl 0x556a81443db8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x556a81443c88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x556a81443e60 <line:594:22>
| `-NonNullAttr 0x556a81443ee0 <col:63, col:77> 1
|-FunctionDecl 0x556a81443fe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x556a81443f28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x556a81444088 <line:596:22>
| `-NonNullAttr 0x556a814440e0 <col:52, col:66> 1
|-FunctionDecl 0x556a814441e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x556a81444128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x556a81444288 <line:598:22>
| `-NonNullAttr 0x556a814442e0 <col:52, col:66> 1
|-FunctionDecl 0x556a81444508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x556a81444328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x556a814443a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x556a814445b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x556a814448e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x556a81444638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x556a814446b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x556a81444740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x556a814449a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x556a81444bb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x556a81444a80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x556a81444c60 <line:607:22>
| `-NonNullAttr 0x556a81444cb8 <col:63, col:77> 1
|-FunctionDecl 0x556a81444dc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x556a81444d08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x556a81444e68 <line:609:22>
| `-NonNullAttr 0x556a81444ef0 <col:63, col:77> 1
|-FunctionDecl 0x556a81445118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556a81444f38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x556a81444fb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x556a814451c8 <line:613:22>
| `-NonNullAttr 0x556a81445220 <col:63, col:80> 1 2
|-FunctionDecl 0x556a81445428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x556a81445268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x556a814452e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x556a814454d8 <col:37>
| `-NonNullAttr 0x556a81445530 <col:78, col:92> 1
|-FunctionDecl 0x556a81445748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x556a81445578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x556a81445620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x556a814457f8 <line:619:22>
| `-NonNullAttr 0x556a81445850 <col:63, col:80> 1 2
|-FunctionDecl 0x556a81445a18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x556a81445898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x556a81445910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x556a81445ac8 <line:622:22>
| `-NonNullAttr 0x556a81445b20 <col:63, col:77> 1
|-FunctionDecl 0x556a81445dc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x556a81445c00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x556a81445c80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x556a81445e78 <line:624:22>
| `-NonNullAttr 0x556a81445f00 <col:63, col:77> 1
|-FunctionDecl 0x556a81446078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x556a81445f48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x556a81446120 <line:626:22>
| `-NonNullAttr 0x556a81446178 <col:63, col:77> 1
|-FunctionDecl 0x556a81446280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x556a814461c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x556a81446328 <line:628:22>
| `-NonNullAttr 0x556a81446380 <col:52, col:66> 1
|-FunctionDecl 0x556a81446480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x556a814463c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x556a81446528 <line:630:22>
| `-NonNullAttr 0x556a81446580 <col:52, col:66> 1
|-FunctionDecl 0x556a81446680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x556a814465c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x556a81446728 <line:632:22>
| `-NonNullAttr 0x556a81446780 <col:52, col:66> 1
|-FunctionDecl 0x556a81446b58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x556a81446860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x556a81446970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x556a814469f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x556a81446c10 <line:636:22>
| `-NonNullAttr 0x556a81446c68 <col:63, col:77> 1
|-FunctionDecl 0x556a81446de8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x556a81446cb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x556a81446e90 <line:638:22>
| `-NonNullAttr 0x556a81446f10 <col:63, col:77> 1
|-FunctionDecl 0x556a81447010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x556a81446f58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x556a814470b8 <line:640:22>
| `-NonNullAttr 0x556a81447110 <col:52, col:66> 1
|-FunctionDecl 0x556a814472f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x556a814471c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x556a814473a0 <line:642:22>
| `-NonNullAttr 0x556a814473f8 <col:63, col:77> 1
|-FunctionDecl 0x556a81447500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x556a81447448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x556a814475a8 <line:644:22>
| `-NonNullAttr 0x556a81447600 <col:63, col:77> 1
|-FunctionDecl 0x556a81447828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556a81447648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x556a814476c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x556a814478d8 <line:648:22>
| `-NonNullAttr 0x556a81447930 <col:63, col:80> 1 2
|-FunctionDecl 0x556a81447b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x556a81447978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x556a814479f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x556a81447be8 <line:651:22>
| `-NonNullAttr 0x556a81447c40 <col:63, col:77> 1
|-FunctionDecl 0x556a81447fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x556a81447d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x556a81447e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x556a81448058 <line:654:22>
| `-NonNullAttr 0x556a814480b0 <col:63, col:77> 1
|-FunctionDecl 0x556a81448208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x556a814480f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x556a814482b0 <col:69>
|-FunctionDecl 0x556a81448428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x556a81448318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x556a814484d0 <col:72>
|-FunctionDecl 0x556a81448708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x556a81448538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x556a814485e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x556a814487b8 <col:44>
|-FunctionDecl 0x556a814489d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x556a81448820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556a81448898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x556a81448a88 <line:661:22>
| `-NonNullAttr 0x556a81448ae0 <col:63, col:77> 2
|-FunctionDecl 0x556a81449f50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x556a81448bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x556a81448cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x556a81448de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x556a8144a008 <col:47>
|-FunctionDecl 0x556a8144a110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x556a8144a078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x556a8144a268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x556a8144a1d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x556a8144a3c0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x556a8144a328 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x556a8144a488 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x556a8144a548 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x556a8144a608 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x556a8144a6c0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x556a8144a740 prev 0x556a8144a6c0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x556a8144a7a8 <col:24> 'int' 0
|-VarDecl 0x556a8144a7e0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x556a8144a860 prev 0x556a8144a7e0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x556a8144a8c8 <col:27> 'int' 0
|-VarDecl 0x556a8144a900 <line:676:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x556a8144a980 prev 0x556a8144a900 <line:677:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x556a8144a9e8 <col:27> 'int' 0
|-VarDecl 0x556a8144aa20 <line:678:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x556a8144aaa0 prev 0x556a8144aa20 <line:679:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x556a8144ab08 <col:27> 'int' 0
|-VarDecl 0x556a8144ab38 <line:680:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x556a8144abb0 <line:681:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x556a8144ac30 <line:682:1, col:5> col:5 used x 'int'
|-VarDecl 0x556a8144acb0 prev 0x556a8144ac30 <line:683:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x556a8144ad18 <col:9> 'int' 0
|-VarDecl 0x556a8144ad48 <line:684:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x556a8144adc8 <line:685:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x556a8144ae40 <line:686:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x556a8144af20 <line:687:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x556a8144af98 <line:688:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x556a8144b010 <line:689:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x556a8144b088 <line:690:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x556a8144b100 <line:691:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x556a8144b178 <line:692:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x556a8144b1f0 <line:693:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x556a8144b268 <line:694:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x556a8144b2e8 <line:695:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x556a8144b368 <line:696:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x556a8144b3e0 <line:697:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x556a8144b460 <line:698:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x556a8144b4d8 <line:699:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x556a8144b558 <line:700:1, col:5> col:5 used y 'int'
|-VarDecl 0x556a8144b5d8 prev 0x556a8144b558 <line:701:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x556a8144b640 <col:9> 'int' 0
|-VarDecl 0x556a8144b678 <line:702:1, col:5> col:5 used z 'int'
|-VarDecl 0x556a8144b6f8 prev 0x556a8144b678 <line:703:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x556a8144b760 <col:9> 'int' 0
|-VarDecl 0x556a8144b790 <line:704:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x556a8144b808 <line:705:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x556a8144b920 prev 0x556a8144a110 <line:706:1, line:733:1> line:706:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x556a8144b888 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x556a8144e898 <line:707:1, line:733:1>
|   |-CallExpr 0x556a8144ba38 <line:708:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556a8144ba20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556a8144b9c8 <col:3> 'void ()' Function 0x556a813f14b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556a8144bab0 <line:709:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x556a8144ba58 <col:3> 'int' lvalue Var 0x556a8144a860 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x556a8144ba98 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556a8144ba78 <col:25> 'int' lvalue Var 0x556a8144b6f8 'z' 'int'
|   |-CallExpr 0x556a8144bb08 <line:710:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556a8144baf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556a8144bad0 <col:3> 'void ()' Function 0x556a813f1570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556a8144bb60 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556a8144bb48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556a8144bb28 <col:3> 'void ()' Function 0x556a813f14b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556a8144bc28 <line:712:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x556a8144bb80 <col:3> '_Bool' lvalue Var 0x556a8144b790 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x556a8144bc08 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x556a8144bbf0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x556a8144bba0 <col:19> '_Bool (void)' Function 0x556a813f0c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x556a8144bcc0 <line:713:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x556a8144bc48 <col:3> '_Bool' lvalue Var 0x556a8144b808 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x556a8144bca0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x556a8144bc88 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x556a8144bc68 <col:19> '_Bool (void)' Function 0x556a813f0c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x556a8144bd38 <line:714:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x556a8144bce0 <col:3> '_Bool' lvalue Var 0x556a8144ad48 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x556a8144bd20 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556a8144bd00 <col:21> '_Bool' lvalue Var 0x556a8144b808 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x556a8144bdb0 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x556a8144bd58 <col:3> 'int' lvalue Var 0x556a8144adc8 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x556a8144bd98 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556a8144bd78 <col:15> 'int' lvalue Var 0x556a8144acb0 'x' 'int'
|   |-BinaryOperator 0x556a8144c1f8 <line:716:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x556a8144bdd0 <col:3> 'int' lvalue Var 0x556a8144acb0 'x' 'int'
|   | `-ConditionalOperator 0x556a8144c1c8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x556a8144bff0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x556a8144bf00 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x556a8144be28 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x556a8144be10 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x556a8144bdf0 <col:8> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x556a8144bee0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x556a8144be78 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x556a8144be60 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x556a8144be40 <col:27> '_Bool' lvalue Var 0x556a8144af20 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x556a8144bec8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x556a8144beb0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x556a8144be90 <col:46> '_Bool' lvalue Var 0x556a8144b4d8 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x556a8144bfd0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x556a8144bf68 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x556a8144bf50 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x556a8144bf30 <col:65> '_Bool' lvalue Var 0x556a8144af20 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x556a8144bfb8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x556a8144bfa0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x556a8144bf80 <col:84> '_Bool' lvalue Var 0x556a8144b100 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x556a8144c1b0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556a8144c010 <col:101> 'int' lvalue Var 0x556a8144acb0 'x' 'int'
|   |   `-ParenExpr 0x556a8144c190 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x556a8144c160 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x556a8144c0d0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x556a8144c088 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556a8144c070 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556a8144c030 <col:106> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x556a8144c0b8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x556a8144c0a0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556a8144c050 <col:124> '_Bool' lvalue Var 0x556a8144af20 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x556a8144c130 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556a8144c0f0 <col:141> 'int' lvalue Var 0x556a8144b368 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x556a8144c148 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556a8144c110 <col:153> 'int' lvalue Var 0x556a8144b460 'x$w_buff1' 'int'
|   |-BinaryOperator 0x556a8144c708 <line:717:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x556a8144c218 <col:3> 'int' lvalue Var 0x556a8144b368 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x556a8144c6d8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x556a8144c6a8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556a8144c690 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556a8144c238 <col:15> '_Bool' lvalue Var 0x556a8144b808 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x556a8144c6c0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556a8144c258 <col:31> 'int' lvalue Var 0x556a8144b368 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x556a8144c670 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x556a8144c640 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x556a8144c468 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x556a8144c388 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x556a8144c2b0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x556a8144c298 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x556a8144c278 <col:45> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x556a8144c368 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x556a8144c300 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x556a8144c2e8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x556a8144c2c8 <col:64> '_Bool' lvalue Var 0x556a8144af20 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x556a8144c350 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x556a8144c338 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x556a8144c318 <col:83> '_Bool' lvalue Var 0x556a8144b4d8 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x556a8144c448 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x556a8144c3e0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x556a8144c3c8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x556a8144c3a8 <col:102> '_Bool' lvalue Var 0x556a8144af20 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x556a8144c430 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x556a8144c418 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x556a8144c3f8 <col:121> '_Bool' lvalue Var 0x556a8144b100 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x556a8144c628 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556a8144c488 <col:138> 'int' lvalue Var 0x556a8144b368 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x556a8144c608 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x556a8144c5d8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x556a8144c548 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x556a8144c500 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x556a8144c4e8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x556a8144c4a8 <col:151> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x556a8144c530 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x556a8144c518 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x556a8144c4c8 <col:169> '_Bool' lvalue Var 0x556a8144af20 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x556a8144c5a8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x556a8144c568 <col:186> 'int' lvalue Var 0x556a8144b368 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x556a8144c5c0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x556a8144c588 <col:198> 'int' lvalue Var 0x556a8144b368 'x$w_buff0' 'int'
|   |-BinaryOperator 0x556a8144cc18 <line:718:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x556a8144c728 <col:3> 'int' lvalue Var 0x556a8144b460 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x556a8144cbe8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x556a8144cbb8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556a8144cba0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556a8144c748 <col:15> '_Bool' lvalue Var 0x556a8144b808 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x556a8144cbd0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556a8144c768 <col:31> 'int' lvalue Var 0x556a8144b460 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x556a8144cb80 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x556a8144cb50 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x556a8144c978 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x556a8144c898 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x556a8144c7c0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x556a8144c7a8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x556a8144c788 <col:45> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x556a8144c878 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x556a8144c810 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x556a8144c7f8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x556a8144c7d8 <col:64> '_Bool' lvalue Var 0x556a8144af20 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x556a8144c860 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x556a8144c848 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x556a8144c828 <col:83> '_Bool' lvalue Var 0x556a8144b4d8 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x556a8144c958 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x556a8144c8f0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x556a8144c8d8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x556a8144c8b8 <col:102> '_Bool' lvalue Var 0x556a8144af20 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x556a8144c940 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x556a8144c928 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x556a8144c908 <col:121> '_Bool' lvalue Var 0x556a8144b100 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x556a8144cb38 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556a8144c998 <col:138> 'int' lvalue Var 0x556a8144b460 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x556a8144cb18 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x556a8144cae8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x556a8144ca58 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x556a8144ca10 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x556a8144c9f8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x556a8144c9b8 <col:151> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x556a8144ca40 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x556a8144ca28 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x556a8144c9d8 <col:169> '_Bool' lvalue Var 0x556a8144af20 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x556a8144cab8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x556a8144ca78 <col:186> 'int' lvalue Var 0x556a8144b460 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x556a8144cad0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x556a8144ca98 <col:198> 'int' lvalue Var 0x556a8144b460 'x$w_buff1' 'int'
|   |-BinaryOperator 0x556a8144d1e0 <line:719:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x556a8144cc38 <col:3> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x556a8144d1c8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556a8144d198 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x556a8144d150 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556a8144d138 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556a8144cc58 <col:20> '_Bool' lvalue Var 0x556a8144b808 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556a8144d180 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556a8144d168 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556a8144cc78 <col:36> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x556a8144d118 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x556a8144d0e8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x556a8144ce88 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556a8144cda8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556a8144ccd0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556a8144ccb8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556a8144cc98 <col:55> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556a8144cd88 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556a8144cd20 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556a8144cd08 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556a8144cce8 <col:74> '_Bool' lvalue Var 0x556a8144af20 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x556a8144cd70 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556a8144cd58 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556a8144cd38 <col:93> '_Bool' lvalue Var 0x556a8144b4d8 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556a8144ce68 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556a8144ce00 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556a8144cde8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556a8144cdc8 <col:112> '_Bool' lvalue Var 0x556a8144af20 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x556a8144ce50 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556a8144ce38 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556a8144ce18 <col:131> '_Bool' lvalue Var 0x556a8144b100 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x556a8144d0d0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556a8144d0b8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556a8144cea8 <col:148> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x556a8144d098 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x556a8144d068 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x556a8144cf88 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556a8144cf40 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556a8144cf08 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556a8144cec8 <col:166> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556a8144cf70 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556a8144cf58 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556a8144cee8 <col:184> '_Bool' lvalue Var 0x556a8144af20 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x556a8144d020 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556a8144cfd8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556a8144cfa8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556a8144d050 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x556a8144d038 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x556a8144d000 <col:212> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556a8144d7a8 <line:720:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x556a8144d200 <col:3> '_Bool' lvalue Var 0x556a8144b4d8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556a8144d790 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556a8144d760 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x556a8144d718 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556a8144d700 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556a8144d220 <col:20> '_Bool' lvalue Var 0x556a8144b808 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556a8144d748 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556a8144d730 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556a8144d240 <col:36> '_Bool' lvalue Var 0x556a8144b4d8 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x556a8144d6e0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x556a8144d6b0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x556a8144d450 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556a8144d370 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556a8144d298 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556a8144d280 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556a8144d260 <col:55> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556a8144d350 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556a8144d2e8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556a8144d2d0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556a8144d2b0 <col:74> '_Bool' lvalue Var 0x556a8144af20 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x556a8144d338 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556a8144d320 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556a8144d300 <col:93> '_Bool' lvalue Var 0x556a8144b4d8 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556a8144d430 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556a8144d3c8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556a8144d3b0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556a8144d390 <col:112> '_Bool' lvalue Var 0x556a8144af20 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x556a8144d418 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556a8144d400 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556a8144d3e0 <col:131> '_Bool' lvalue Var 0x556a8144b100 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x556a8144d698 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556a8144d680 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556a8144d470 <col:148> '_Bool' lvalue Var 0x556a8144b4d8 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x556a8144d660 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x556a8144d630 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x556a8144d530 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556a8144d4e8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556a8144d4d0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556a8144d490 <col:166> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556a8144d518 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556a8144d500 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556a8144d4b0 <col:184> '_Bool' lvalue Var 0x556a8144af20 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x556a8144d600 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556a8144d580 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556a8144d550 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556a8144d618 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x556a8144d5d8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x556a8144d5a8 <col:219> 'int' 0
|   |-BinaryOperator 0x556a8144dd50 <line:721:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x556a8144d7c8 <col:3> '_Bool' lvalue Var 0x556a8144af20 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x556a8144dd38 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556a8144dd08 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x556a8144dcc0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556a8144dca8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556a8144d7e8 <col:20> '_Bool' lvalue Var 0x556a8144b808 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556a8144dcf0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556a8144dcd8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556a8144d808 <col:36> '_Bool' lvalue Var 0x556a8144af20 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x556a8144dc88 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x556a8144dc58 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x556a8144da18 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556a8144d938 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556a8144d860 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556a8144d848 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556a8144d828 <col:55> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556a8144d918 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556a8144d8b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556a8144d898 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556a8144d878 <col:74> '_Bool' lvalue Var 0x556a8144af20 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x556a8144d900 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556a8144d8e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556a8144d8c8 <col:93> '_Bool' lvalue Var 0x556a8144b4d8 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556a8144d9f8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556a8144d990 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556a8144d978 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556a8144d958 <col:112> '_Bool' lvalue Var 0x556a8144af20 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x556a8144d9e0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556a8144d9c8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556a8144d9a8 <col:131> '_Bool' lvalue Var 0x556a8144b100 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x556a8144dc40 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556a8144dc28 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556a8144da38 <col:148> '_Bool' lvalue Var 0x556a8144af20 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x556a8144dc08 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x556a8144dbd8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x556a8144daf8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556a8144dab0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556a8144da98 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556a8144da58 <col:166> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556a8144dae0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556a8144dac8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556a8144da78 <col:184> '_Bool' lvalue Var 0x556a8144af20 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x556a8144db90 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556a8144db48 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556a8144db18 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556a8144dbc0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x556a8144dba8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x556a8144db70 <col:212> '_Bool' lvalue Var 0x556a8144af20 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x556a8144e330 <line:722:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x556a8144dd70 <col:3> '_Bool' lvalue Var 0x556a8144b100 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x556a8144e318 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556a8144e2e8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x556a8144e2a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556a8144e288 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556a8144dd90 <col:20> '_Bool' lvalue Var 0x556a8144b808 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556a8144e2d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556a8144e2b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556a8144ddb0 <col:36> '_Bool' lvalue Var 0x556a8144b100 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x556a8144e268 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x556a8144e238 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x556a8144dfd8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556a8144dee0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556a8144de08 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556a8144ddf0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556a8144ddd0 <col:55> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556a8144dec0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556a8144de58 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556a8144de40 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556a8144de20 <col:74> '_Bool' lvalue Var 0x556a8144af20 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x556a8144dea8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556a8144de90 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556a8144de70 <col:93> '_Bool' lvalue Var 0x556a8144b4d8 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556a8144dfb8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556a8144df50 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556a8144df20 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556a8144df00 <col:112> '_Bool' lvalue Var 0x556a8144af20 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x556a8144dfa0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556a8144df88 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556a8144df68 <col:131> '_Bool' lvalue Var 0x556a8144b100 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x556a8144e220 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556a8144e208 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556a8144dff8 <col:148> '_Bool' lvalue Var 0x556a8144b100 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x556a8144e1e8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x556a8144e1b8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x556a8144e0b8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556a8144e070 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556a8144e058 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556a8144e018 <col:166> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556a8144e0a0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556a8144e088 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556a8144e038 <col:184> '_Bool' lvalue Var 0x556a8144af20 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x556a8144e188 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556a8144e108 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556a8144e0d8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556a8144e1a0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x556a8144e160 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x556a8144e130 <col:219> 'int' 0
|   |-BinaryOperator 0x556a8144e3a8 <line:723:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x556a8144e350 <col:3> 'int' lvalue Var 0x556a8144a980 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x556a8144e390 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556a8144e370 <col:25> 'int' lvalue Var 0x556a8144acb0 'x' 'int'
|   |-BinaryOperator 0x556a8144e4d8 <line:724:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x556a8144e3c8 <col:3> 'int' lvalue Var 0x556a8144acb0 'x' 'int'
|   | `-ConditionalOperator 0x556a8144e4a8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x556a8144e460 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556a8144e448 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556a8144e3e8 <col:7> '_Bool' lvalue Var 0x556a8144ad48 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x556a8144e478 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556a8144e408 <col:25> 'int' lvalue Var 0x556a8144adc8 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x556a8144e490 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x556a8144e428 <col:37> 'int' lvalue Var 0x556a8144acb0 'x' 'int'
|   |-BinaryOperator 0x556a8144e570 <line:725:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x556a8144e4f8 <col:3> '_Bool' lvalue Var 0x556a8144ad48 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x556a8144e548 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x556a8144e518 <col:28> 'int' 0
|   |-CallExpr 0x556a8144e5c8 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556a8144e5b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556a8144e590 <col:3> 'void ()' Function 0x556a813f1570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556a8144e620 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556a8144e608 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556a8144e5e8 <col:3> 'void ()' Function 0x556a813f14b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x556a8144e678 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556a8144e660 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556a8144e640 <col:3> 'void ()' Function 0x556a813f1570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556a8144e6d0 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556a8144e6b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556a8144e698 <col:3> 'void ()' Function 0x556a813f14b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556a8144e788 <line:730:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x556a8144e6f0 <col:3> 'int' lvalue Var 0x556a8144a740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x556a8144e768 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x556a8144e750 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556a8144e710 <col:22> 'int' lvalue Var 0x556a8144a740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x556a8144e730 <col:41> 'int' 1
|   |-CallExpr 0x556a8144e7e0 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556a8144e7c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556a8144e7a8 <col:3> 'void ()' Function 0x556a813f1570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x556a8144e888 <line:732:3, col:36>
|     `-CallExpr 0x556a8144e868 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x556a8144e850 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x556a8144e800 <col:10> 'void *(void)' Function 0x556a813f0fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x556a8144ea20 prev 0x556a8144a268 <line:734:1, line:762:1> line:734:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x556a8144e988 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x556a81450200 <line:735:1, line:762:1>
|   |-CallExpr 0x556a8144eb00 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556a8144eae8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556a8144eac8 <col:3> 'void ()' Function 0x556a813f14b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556a8144eb78 <line:737:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x556a8144eb20 <col:3> 'int' lvalue Var 0x556a8144b460 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x556a8144eb60 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556a8144eb40 <col:15> 'int' lvalue Var 0x556a8144b368 'x$w_buff0' 'int'
|   |-BinaryOperator 0x556a8144ebd8 <line:738:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x556a8144eb98 <col:3> 'int' lvalue Var 0x556a8144b368 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x556a8144ebb8 <col:15> 'int' 1
|   |-BinaryOperator 0x556a8144ec50 <line:739:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556a8144ebf8 <col:3> '_Bool' lvalue Var 0x556a8144b4d8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556a8144ec38 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556a8144ec18 <col:20> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556a8144ece8 <line:740:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x556a8144ec70 <col:3> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x556a8144ecc0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x556a8144ec90 <col:27> 'int' 1
|   |-CallExpr 0x556a8144ee68 <line:741:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x556a8144ee50 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x556a8144ed08 <col:3> 'void (int)' Function 0x556a813f1238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x556a8144ee08 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x556a8144ede8 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x556a8144edc8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x556a8144ed80 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x556a8144ed68 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x556a8144ed28 <col:23> '_Bool' lvalue Var 0x556a8144b4d8 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x556a8144edb0 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x556a8144ed98 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x556a8144ed48 <col:41> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556a8144eee8 <line:742:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556a8144ee90 <col:3> '_Bool' lvalue Var 0x556a8144b088 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x556a8144eed0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556a8144eeb0 <col:20> '_Bool' lvalue Var 0x556a8144ae40 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x556a8144ef78 <line:743:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556a8144ef08 <col:3> '_Bool' lvalue Var 0x556a8144b100 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x556a8144ef60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556a8144ef28 <col:20> '_Bool' lvalue Var 0x556a8144af20 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x556a8144eff0 <line:744:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556a8144ef98 <col:3> '_Bool' lvalue Var 0x556a8144b178 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556a8144efd8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556a8144efb8 <col:20> '_Bool' lvalue Var 0x556a8144af98 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x556a8144f068 <line:745:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556a8144f010 <col:3> '_Bool' lvalue Var 0x556a8144b1f0 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x556a8144f050 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556a8144f030 <col:20> '_Bool' lvalue Var 0x556a8144b010 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x556a8144f100 <line:746:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x556a8144f088 <col:3> '_Bool' lvalue Var 0x556a8144af98 'x$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x556a8144f0d8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x556a8144f0a8 <col:27> 'int' 1
|   |-CallExpr 0x556a8144f158 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556a8144f140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556a8144f120 <col:3> 'void ()' Function 0x556a813f1570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556a8144f1b0 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556a8144f198 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556a8144f178 <col:3> 'void ()' Function 0x556a813f14b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556a8144f210 <line:749:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x556a8144f1d0 <col:3> 'int' lvalue Var 0x556a8144b5d8 'y' 'int'
|   | `-IntegerLiteral 0x556a8144f1f0 <col:7> 'int' 1
|   |-CallExpr 0x556a8144f268 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556a8144f250 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556a8144f230 <col:3> 'void ()' Function 0x556a813f1570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556a8144f2c0 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556a8144f2a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556a8144f288 <col:3> 'void ()' Function 0x556a813f14b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556a8144f5a8 <line:752:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x556a8144f2e0 <col:3> 'int' lvalue Var 0x556a8144acb0 'x' 'int'
|   | `-ConditionalOperator 0x556a8144f578 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x556a8144f3a0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x556a8144f358 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x556a8144f340 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x556a8144f300 <col:7> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x556a8144f388 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x556a8144f370 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x556a8144f320 <col:25> '_Bool' lvalue Var 0x556a8144af98 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x556a8144f560 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556a8144f3c0 <col:42> 'int' lvalue Var 0x556a8144b368 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x556a8144f540 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x556a8144f510 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x556a8144f480 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x556a8144f438 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556a8144f420 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556a8144f3e0 <col:55> '_Bool' lvalue Var 0x556a8144b4d8 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x556a8144f468 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x556a8144f450 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556a8144f400 <col:73> '_Bool' lvalue Var 0x556a8144b178 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x556a8144f4e0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556a8144f4a0 <col:90> 'int' lvalue Var 0x556a8144b460 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x556a8144f4f8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556a8144f4c0 <col:102> 'int' lvalue Var 0x556a8144acb0 'x' 'int'
|   |-BinaryOperator 0x556a8144f7b0 <line:753:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556a8144f5c8 <col:3> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x556a8144f798 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556a8144f768 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556a8144f688 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556a8144f640 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556a8144f628 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556a8144f5e8 <col:20> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556a8144f670 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556a8144f658 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556a8144f608 <col:38> '_Bool' lvalue Var 0x556a8144af98 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556a8144f720 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556a8144f6d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556a8144f6a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556a8144f750 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556a8144f738 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556a8144f700 <col:66> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556a8144fa98 <line:754:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556a8144f7d0 <col:3> '_Bool' lvalue Var 0x556a8144b4d8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556a8144fa80 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556a8144fa50 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556a8144f970 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556a8144f890 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556a8144f848 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556a8144f830 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556a8144f7f0 <col:20> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556a8144f878 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556a8144f860 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556a8144f810 <col:38> '_Bool' lvalue Var 0x556a8144af98 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x556a8144f950 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556a8144f908 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556a8144f8f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556a8144f8b0 <col:56> '_Bool' lvalue Var 0x556a8144b4d8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556a8144f938 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556a8144f920 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556a8144f8d0 <col:74> '_Bool' lvalue Var 0x556a8144b178 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556a8144fa08 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556a8144f9c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556a8144f990 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556a8144fa38 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556a8144fa20 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556a8144f9e8 <col:102> '_Bool' lvalue Var 0x556a8144b4d8 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x556a8144fca0 <line:755:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556a8144fab8 <col:3> '_Bool' lvalue Var 0x556a8144af98 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556a8144fc88 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556a8144fc58 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556a8144fb78 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556a8144fb30 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556a8144fb18 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556a8144fad8 <col:20> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556a8144fb60 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556a8144fb48 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556a8144faf8 <col:38> '_Bool' lvalue Var 0x556a8144af98 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556a8144fc10 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556a8144fbc8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556a8144fb98 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556a8144fc40 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556a8144fc28 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556a8144fbf0 <col:66> '_Bool' lvalue Var 0x556a8144af98 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x556a8144ffb8 <line:756:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556a8144fcc0 <col:3> '_Bool' lvalue Var 0x556a8144b178 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556a8144ffa0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556a8144ff70 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556a8144fe60 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556a8144fd80 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556a8144fd38 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556a8144fd20 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556a8144fce0 <col:20> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556a8144fd68 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556a8144fd50 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556a8144fd00 <col:38> '_Bool' lvalue Var 0x556a8144af98 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x556a8144fe40 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556a8144fdf8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556a8144fde0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556a8144fda0 <col:56> '_Bool' lvalue Var 0x556a8144b4d8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556a8144fe28 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556a8144fe10 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556a8144fdc0 <col:74> '_Bool' lvalue Var 0x556a8144b178 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556a8144fef8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556a8144feb0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556a8144fe80 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556a8144ff28 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556a8144ff10 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556a8144fed8 <col:102> '_Bool' lvalue Var 0x556a8144b178 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x556a81450010 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556a8144fff8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556a8144ffd8 <col:3> 'void ()' Function 0x556a813f1570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556a81450068 <line:758:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556a81450050 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556a81450030 <col:3> 'void ()' Function 0x556a813f14b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556a81450120 <line:759:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x556a81450088 <col:3> 'int' lvalue Var 0x556a8144a740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x556a81450100 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x556a814500e8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556a814500a8 <col:22> 'int' lvalue Var 0x556a8144a740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x556a814500c8 <col:41> 'int' 1
|   |-CallExpr 0x556a81450178 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556a81450160 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556a81450140 <col:3> 'void ()' Function 0x556a813f1570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x556a814501f0 <line:761:3, col:36>
|     `-CallExpr 0x556a814501d0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x556a814501b8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x556a81450198 <col:10> 'void *(void)' Function 0x556a813f0fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x556a81450390 prev 0x556a8144a3c0 <line:763:1, line:782:1> line:763:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x556a814502f8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x556a814515d8 <line:764:1, line:782:1>
|   |-CallExpr 0x556a81450470 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556a81450458 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556a81450438 <col:3> 'void ()' Function 0x556a813f14b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556a814504e8 <line:766:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x556a81450490 <col:3> 'int' lvalue Var 0x556a8144aaa0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x556a814504d0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556a814504b0 <col:25> 'int' lvalue Var 0x556a8144b5d8 'y' 'int'
|   |-CallExpr 0x556a81450540 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556a81450528 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556a81450508 <col:3> 'void ()' Function 0x556a813f1570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556a81450598 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556a81450580 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556a81450560 <col:3> 'void ()' Function 0x556a813f14b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556a814505f8 <line:769:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x556a814505b8 <col:3> 'int' lvalue Var 0x556a8144b6f8 'z' 'int'
|   | `-IntegerLiteral 0x556a814505d8 <col:7> 'int' 1
|   |-CallExpr 0x556a81450650 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556a81450638 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556a81450618 <col:3> 'void ()' Function 0x556a813f1570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556a814506a8 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556a81450690 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556a81450670 <col:3> 'void ()' Function 0x556a813f14b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556a81450990 <line:772:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x556a814506c8 <col:3> 'int' lvalue Var 0x556a8144acb0 'x' 'int'
|   | `-ConditionalOperator 0x556a81450960 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x556a81450788 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x556a81450740 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x556a81450728 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x556a814506e8 <col:7> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x556a81450770 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x556a81450758 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x556a81450708 <col:25> '_Bool' lvalue Var 0x556a8144b010 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x556a81450948 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556a814507a8 <col:42> 'int' lvalue Var 0x556a8144b368 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x556a81450928 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x556a814508f8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x556a81450868 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x556a81450820 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556a81450808 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556a814507c8 <col:55> '_Bool' lvalue Var 0x556a8144b4d8 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x556a81450850 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x556a81450838 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556a814507e8 <col:73> '_Bool' lvalue Var 0x556a8144b1f0 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x556a814508c8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556a81450888 <col:90> 'int' lvalue Var 0x556a8144b460 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x556a814508e0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556a814508a8 <col:102> 'int' lvalue Var 0x556a8144acb0 'x' 'int'
|   |-BinaryOperator 0x556a81450b98 <line:773:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556a814509b0 <col:3> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x556a81450b80 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556a81450b50 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556a81450a70 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556a81450a28 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556a81450a10 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556a814509d0 <col:20> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556a81450a58 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556a81450a40 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556a814509f0 <col:38> '_Bool' lvalue Var 0x556a8144b010 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x556a81450b08 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556a81450ac0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556a81450a90 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556a81450b38 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556a81450b20 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556a81450ae8 <col:66> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556a81450e80 <line:774:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556a81450bb8 <col:3> '_Bool' lvalue Var 0x556a8144b4d8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556a81450e68 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556a81450e38 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556a81450d58 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556a81450c78 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556a81450c30 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556a81450c18 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556a81450bd8 <col:20> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556a81450c60 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556a81450c48 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556a81450bf8 <col:38> '_Bool' lvalue Var 0x556a8144b010 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x556a81450d38 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556a81450cf0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556a81450cd8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556a81450c98 <col:56> '_Bool' lvalue Var 0x556a8144b4d8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556a81450d20 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556a81450d08 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556a81450cb8 <col:74> '_Bool' lvalue Var 0x556a8144b1f0 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x556a81450df0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556a81450da8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556a81450d78 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556a81450e20 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556a81450e08 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556a81450dd0 <col:102> '_Bool' lvalue Var 0x556a8144b4d8 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x556a814510a8 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556a81450ea0 <col:3> '_Bool' lvalue Var 0x556a8144b010 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x556a81451090 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556a81451060 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556a81450f80 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556a81450f18 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556a81450f00 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556a81450ec0 <col:20> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556a81450f48 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556a81450f30 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556a81450ee0 <col:38> '_Bool' lvalue Var 0x556a8144b010 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x556a81451018 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556a81450fd0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556a81450fa0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556a81451048 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556a81451030 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556a81450ff8 <col:66> '_Bool' lvalue Var 0x556a8144b010 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x556a81451390 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556a814510c8 <col:3> '_Bool' lvalue Var 0x556a8144b1f0 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x556a81451378 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556a81451348 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556a81451268 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556a81451188 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556a81451140 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556a81451128 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556a814510e8 <col:20> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556a81451170 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556a81451158 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556a81451108 <col:38> '_Bool' lvalue Var 0x556a8144b010 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x556a81451248 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556a81451200 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556a814511e8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556a814511a8 <col:56> '_Bool' lvalue Var 0x556a8144b4d8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556a81451230 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556a81451218 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556a814511c8 <col:74> '_Bool' lvalue Var 0x556a8144b1f0 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x556a81451300 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556a814512b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556a81451288 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556a81451330 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556a81451318 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556a814512e0 <col:102> '_Bool' lvalue Var 0x556a8144b1f0 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x556a814513e8 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556a814513d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556a814513b0 <col:3> 'void ()' Function 0x556a813f1570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556a81451440 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556a81451428 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556a81451408 <col:3> 'void ()' Function 0x556a813f14b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556a814514f8 <line:779:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x556a81451460 <col:3> 'int' lvalue Var 0x556a8144a740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x556a814514d8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x556a814514c0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556a81451480 <col:22> 'int' lvalue Var 0x556a8144a740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x556a814514a0 <col:41> 'int' 1
|   |-CallExpr 0x556a81451550 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556a81451538 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556a81451518 <col:3> 'void ()' Function 0x556a813f1570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x556a814515c8 <line:781:3, col:36>
|     `-CallExpr 0x556a814515a8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x556a81451590 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x556a81451570 <col:10> 'void *(void)' Function 0x556a813f0fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x556a81451690 prev 0x556a8144a488 <line:783:1, line:785:1> line:783:6 fence 'void ()'
| `-CompoundStmt 0x556a81451730 <line:784:1, line:785:1>
|-FunctionDecl 0x556a81451760 prev 0x556a8144a548 <line:786:1, line:788:1> line:786:6 isync 'void ()'
| `-CompoundStmt 0x556a81451800 <line:787:1, line:788:1>
|-FunctionDecl 0x556a81451830 prev 0x556a8144a608 <line:789:1, line:791:1> line:789:6 lwfence 'void ()'
| `-CompoundStmt 0x556a814518d0 <line:790:1, line:791:1>
`-FunctionDecl 0x556a81451938 <line:792:1, line:816:1> line:792:5 main 'int ()'
  `-CompoundStmt 0x556a814535a8 <line:793:1, line:816:1>
    |-DeclStmt 0x556a81451a50 <line:794:3, col:18>
    | `-VarDecl 0x556a814519e8 <col:3, col:13> col:13 used t2066 'pthread_t':'unsigned long'
    |-CallExpr 0x556a81451c58 <line:795:3, col:54> 'int'
    | |-ImplicitCastExpr 0x556a81451c40 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556a81451a68 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x556a814319d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x556a81451aa8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x556a81451a88 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x556a814519e8 't2066' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x556a81451c98 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x556a81451b20 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x556a81451af8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x556a81451ac0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x556a81451cb0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556a81451b40 <col:39> 'void *(void *)' Function 0x556a8144b920 'P0' 'void *(void *)'
    | `-ParenExpr 0x556a81451bc0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x556a81451b98 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x556a81451b60 <col:52> 'int' 0
    |-DeclStmt 0x556a81451d40 <line:796:3, col:18>
    | `-VarDecl 0x556a81451cd8 <col:3, col:13> col:13 used t2067 'pthread_t':'unsigned long'
    |-CallExpr 0x556a81451ee8 <line:797:3, col:54> 'int'
    | |-ImplicitCastExpr 0x556a81451ed0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556a81451d58 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x556a814319d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x556a81451d98 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x556a81451d78 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x556a81451cd8 't2067' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x556a81451f28 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x556a81451e10 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x556a81451de8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x556a81451db0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x556a81451f40 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556a81451e30 <col:39> 'void *(void *)' Function 0x556a8144ea20 'P1' 'void *(void *)'
    | `-ParenExpr 0x556a81451eb0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x556a81451e88 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x556a81451e50 <col:52> 'int' 0
    |-DeclStmt 0x556a81451ff8 <line:798:3, col:18>
    | `-VarDecl 0x556a81451f90 <col:3, col:13> col:13 used t2068 'pthread_t':'unsigned long'
    |-CallExpr 0x556a814521a0 <line:799:3, col:54> 'int'
    | |-ImplicitCastExpr 0x556a81452188 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556a81452010 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x556a814319d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x556a81452050 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x556a81452030 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x556a81451f90 't2068' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x556a814521e0 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x556a814520c8 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x556a814520a0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x556a81452068 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x556a814521f8 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556a814520e8 <col:39> 'void *(void *)' Function 0x556a81450390 'P2' 'void *(void *)'
    | `-ParenExpr 0x556a81452168 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x556a81452140 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x556a81452108 <col:52> 'int' 0
    |-CallExpr 0x556a81452248 <line:800:3, col:27> 'void'
    | `-ImplicitCastExpr 0x556a81452230 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556a81452210 <col:3> 'void ()' Function 0x556a813f14b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x556a81452318 <line:801:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x556a81452268 <col:3> '_Bool' lvalue Var 0x556a8144ab38 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x556a81452300 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x556a814522e0 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x556a814522c8 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x556a81452288 <col:21> 'int' lvalue Var 0x556a8144a740 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x556a814522a8 <col:41> 'int' 3
    |-CallExpr 0x556a81452370 <line:802:3, col:25> 'void'
    | `-ImplicitCastExpr 0x556a81452358 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556a81452338 <col:3> 'void ()' Function 0x556a813f1570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x556a814523e8 <line:803:3, col:36> 'void'
    | |-ImplicitCastExpr 0x556a814523d0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556a81452390 <col:3> 'void (int)' Function 0x556a813f0e50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x556a81452428 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x556a81452410 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x556a814523b0 <col:21> '_Bool' lvalue Var 0x556a8144ab38 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x556a81452478 <line:804:3, col:27> 'void'
    | `-ImplicitCastExpr 0x556a81452460 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556a81452440 <col:3> 'void ()' Function 0x556a813f14b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x556a81452760 <line:805:3, col:103> 'int' '='
    | |-DeclRefExpr 0x556a81452498 <col:3> 'int' lvalue Var 0x556a8144acb0 'x' 'int'
    | `-ConditionalOperator 0x556a81452730 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x556a81452558 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x556a81452510 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x556a814524f8 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x556a814524b8 <col:7> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x556a81452540 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x556a81452528 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x556a814524d8 <col:25> '_Bool' lvalue Var 0x556a8144ae40 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x556a81452718 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x556a81452578 <col:42> 'int' lvalue Var 0x556a8144b368 'x$w_buff0' 'int'
    |   `-ParenExpr 0x556a814526f8 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x556a814526c8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x556a81452638 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x556a814525f0 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x556a814525d8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x556a81452598 <col:55> '_Bool' lvalue Var 0x556a8144b4d8 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x556a81452620 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x556a81452608 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x556a814525b8 <col:73> '_Bool' lvalue Var 0x556a8144b088 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x556a81452698 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x556a81452658 <col:90> 'int' lvalue Var 0x556a8144b460 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x556a814526b0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x556a81452678 <col:102> 'int' lvalue Var 0x556a8144acb0 'x' 'int'
    |-BinaryOperator 0x556a81452968 <line:806:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x556a81452780 <col:3> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x556a81452950 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556a81452920 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x556a81452840 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x556a814527f8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x556a814527e0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x556a814527a0 <col:20> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x556a81452828 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x556a81452810 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x556a814527c0 <col:38> '_Bool' lvalue Var 0x556a8144ae40 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x556a814528d8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x556a81452890 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x556a81452860 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x556a81452908 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x556a814528f0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x556a814528b8 <col:66> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x556a81452c50 <line:807:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x556a81452988 <col:3> '_Bool' lvalue Var 0x556a8144b4d8 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x556a81452c38 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556a81452c08 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x556a81452b28 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x556a81452a48 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x556a81452a00 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x556a814529e8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x556a814529a8 <col:20> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x556a81452a30 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x556a81452a18 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x556a814529c8 <col:38> '_Bool' lvalue Var 0x556a8144ae40 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x556a81452b08 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x556a81452ac0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x556a81452aa8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x556a81452a68 <col:56> '_Bool' lvalue Var 0x556a8144b4d8 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x556a81452af0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x556a81452ad8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x556a81452a88 <col:74> '_Bool' lvalue Var 0x556a8144b088 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x556a81452bc0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x556a81452b78 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x556a81452b48 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x556a81452bf0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x556a81452bd8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x556a81452ba0 <col:102> '_Bool' lvalue Var 0x556a8144b4d8 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x556a81452e58 <line:808:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x556a81452c70 <col:3> '_Bool' lvalue Var 0x556a8144ae40 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x556a81452e40 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556a81452e10 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x556a81452d30 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x556a81452ce8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x556a81452cd0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x556a81452c90 <col:20> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x556a81452d18 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x556a81452d00 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x556a81452cb0 <col:38> '_Bool' lvalue Var 0x556a8144ae40 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x556a81452dc8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x556a81452d80 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x556a81452d50 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x556a81452df8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x556a81452de0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x556a81452da8 <col:66> '_Bool' lvalue Var 0x556a8144ae40 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x556a81453168 <line:809:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x556a81452e78 <col:3> '_Bool' lvalue Var 0x556a8144b088 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x556a81453150 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556a81453120 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x556a81453040 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x556a81452f38 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x556a81452ef0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x556a81452ed8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x556a81452e98 <col:20> '_Bool' lvalue Var 0x556a8144b3e0 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x556a81452f20 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x556a81452f08 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x556a81452eb8 <col:38> '_Bool' lvalue Var 0x556a8144ae40 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x556a81453020 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x556a81452fd8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x556a81452fc0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x556a81452f58 <col:56> '_Bool' lvalue Var 0x556a8144b4d8 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x556a81453008 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x556a81452ff0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x556a81452fa0 <col:74> '_Bool' lvalue Var 0x556a8144b088 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x556a814530d8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x556a81453090 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x556a81453060 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x556a81453108 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x556a814530f0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x556a814530b8 <col:102> '_Bool' lvalue Var 0x556a8144b088 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x556a814531c0 <line:810:3, col:25> 'void'
    | `-ImplicitCastExpr 0x556a814531a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556a81453188 <col:3> 'void ()' Function 0x556a813f1570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x556a81453218 <line:811:3, col:27> 'void'
    | `-ImplicitCastExpr 0x556a81453200 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556a814531e0 <col:3> 'void ()' Function 0x556a813f14b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x556a81453450 <line:812:3, col:103> '_Bool' '='
    | |-DeclRefExpr 0x556a81453238 <col:3> '_Bool' lvalue Var 0x556a8144abb0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x556a81453438 <col:21, col:103> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x556a81453420 <col:21, col:103> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x556a81453400 <col:22, col:103> 'int'
    |       `-BinaryOperator 0x556a814533e0 <col:23, col:102> 'int' '&&'
    |         |-BinaryOperator 0x556a81453348 <col:23, col:74> 'int' '&&'
    |         | |-BinaryOperator 0x556a814532b0 <col:23, col:46> 'int' '=='
    |         | | |-ImplicitCastExpr 0x556a81453298 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x556a81453258 <col:23> 'int' lvalue Var 0x556a8144a860 '__unbuffered_p0_EAX' 'int'
    |         | | `-IntegerLiteral 0x556a81453278 <col:46> 'int' 1
    |         | `-BinaryOperator 0x556a81453328 <col:51, col:74> 'int' '=='
    |         |   |-ImplicitCastExpr 0x556a81453310 <col:51> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x556a814532d0 <col:51> 'int' lvalue Var 0x556a8144a980 '__unbuffered_p0_EBX' 'int'
    |         |   `-IntegerLiteral 0x556a814532f0 <col:74> 'int' 0
    |         `-BinaryOperator 0x556a814533c0 <col:79, col:102> 'int' '=='
    |           |-ImplicitCastExpr 0x556a814533a8 <col:79> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x556a81453368 <col:79> 'int' lvalue Var 0x556a8144aaa0 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x556a81453388 <col:102> 'int' 1
    |-CallExpr 0x556a814534a8 <line:813:3, col:25> 'void'
    | `-ImplicitCastExpr 0x556a81453490 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556a81453470 <col:3> 'void ()' Function 0x556a813f1570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x556a81453520 <line:814:3, col:36> 'void'
    | |-ImplicitCastExpr 0x556a81453508 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556a814534c8 <col:3> 'void (int)' Function 0x556a813f1238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x556a81453560 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x556a81453548 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x556a814534e8 <col:21> '_Bool' lvalue Var 0x556a8144abb0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x556a81453598 <line:815:3, col:10>
      `-IntegerLiteral 0x556a81453578 <col:10> 'int' 0
