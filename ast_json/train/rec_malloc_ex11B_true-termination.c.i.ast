TranslationUnitDecl 0x557bc8f96da8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x557bc8f97668 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x557bc8f97340 '__int128'
|-TypedefDecl 0x557bc8f976d8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x557bc8f97360 'unsigned __int128'
|-TypedefDecl 0x557bc8f979e0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x557bc8f977b0 'struct __NSConstantString_tag'
|   `-Record 0x557bc8f97730 '__NSConstantString_tag'
|-TypedefDecl 0x557bc8f97a88 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x557bc8f97a40 'char *'
|   `-BuiltinType 0x557bc8f96e40 'char'
|-TypedefDecl 0x557bc8fd6c10 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x557bc8f97d20 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x557bc8f97b60 'struct __va_list_tag'
|     `-Record 0x557bc8f97ae0 '__va_list_tag'
|-TypedefDecl 0x557bc8fd6c80 <termination-recursive-malloc/rec_malloc_ex11B_true-termination.c.i:1:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x557bc8f96f60 'unsigned long'
|-FunctionDecl 0x557bc8fd6e90 <line:3:35> col:35 implicit used malloc 'void *(unsigned long)' extern
| `-ParmVarDecl 0x557bc8fd6f30 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x557bc8fd6fa0 prev 0x557bc8fd6e90 <col:1, col:56> col:35 used malloc 'void *(unsigned long)'
| `-ParmVarDecl 0x557bc8fd6d18 <col:43, col:50> col:50 __size 'size_t':'unsigned long'
|-FunctionDecl 0x557bc8fd7198 <line:4:1, col:45> col:33 used free 'void (void *) __attribute__((cdecl))':'void (void *)'
| `-ParmVarDecl 0x557bc8fd7060 <col:39, col:44> col:45 'void *'
|-FunctionDecl 0x557bc8fd7358 <line:6:1, col:38> col:12 used __VERIFIER_nondet_int 'int (void)' extern
|-FunctionDecl 0x557bc8fd7518 <line:8:1, line:22:1> line:8:5 used rec 'int (int *)'
| |-ParmVarDecl 0x557bc8fd7448 <col:9, col:14> col:14 used op 'int *'
| `-CompoundStmt 0x557bc8ffcf18 <col:18, line:22:1>
|   |-IfStmt 0x557bc8fd78f0 <line:9:2, line:13:2>
|   | |-BinaryOperator 0x557bc8fd7648 <line:9:5, col:11> 'int' '<'
|   | | |-ImplicitCastExpr 0x557bc8fd7630 <col:5, col:6> 'int' <LValueToRValue>
|   | | | `-UnaryOperator 0x557bc8fd75f8 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
|   | | |   `-ImplicitCastExpr 0x557bc8fd75e0 <col:6> 'int *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x557bc8fd75c0 <col:6> 'int *' lvalue ParmVar 0x557bc8fd7448 'op' 'int *'
|   | | `-IntegerLiteral 0x557bc8fd7610 <col:11> 'int' 0
|   | `-CompoundStmt 0x557bc8fd78c8 <col:14, line:13:2>
|   |   |-DeclStmt 0x557bc8fd7750 <line:10:3, col:14>
|   |   | `-VarDecl 0x557bc8fd7680 <col:3, col:12> col:7 used r 'int' cinit
|   |   |   `-ImplicitCastExpr 0x557bc8fd7738 <col:11, col:12> 'int' <LValueToRValue>
|   |   |     `-UnaryOperator 0x557bc8fd7720 <col:11, col:12> 'int' lvalue prefix '*' cannot overflow
|   |   |       `-ImplicitCastExpr 0x557bc8fd7708 <col:12> 'int *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x557bc8fd76e8 <col:12> 'int *' lvalue ParmVar 0x557bc8fd7448 'op' 'int *'
|   |   |-CallExpr 0x557bc8fd7828 <line:11:3, col:10> 'void'
|   |   | |-ImplicitCastExpr 0x557bc8fd7810 <col:3> 'void (*)(void *) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x557bc8fd7768 <col:3> 'void (void *) __attribute__((cdecl))':'void (void *)' Function 0x557bc8fd7198 'free' 'void (void *) __attribute__((cdecl))':'void (void *)'
|   |   | `-ImplicitCastExpr 0x557bc8fd7868 <col:8> 'void *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x557bc8fd7850 <col:8> 'int *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x557bc8fd7788 <col:8> 'int *' lvalue ParmVar 0x557bc8fd7448 'op' 'int *'
|   |   `-ReturnStmt 0x557bc8fd78b8 <line:12:3, col:10>
|   |     `-ImplicitCastExpr 0x557bc8fd78a0 <col:10> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x557bc8fd7880 <col:10> 'int' lvalue Var 0x557bc8fd7680 'r' 'int'
|   |-DeclStmt 0x557bc8fd7a68 <line:14:2, col:31>
|   | `-VarDecl 0x557bc8fd7920 <col:2, col:30> col:7 used ip 'int *' cinit
|   |   `-ImplicitCastExpr 0x557bc8fd7a50 <col:12, col:30> 'int *' <BitCast>
|   |     `-CallExpr 0x557bc8fd7a28 <col:12, col:30> 'void *'
|   |       |-ImplicitCastExpr 0x557bc8fd7a10 <col:12> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x557bc8fd7988 <col:12> 'void *(unsigned long)' Function 0x557bc8fd6fa0 'malloc' 'void *(unsigned long)'
|   |       `-UnaryExprOrTypeTraitExpr 0x557bc8fd79c0 <col:19, col:29> 'unsigned long' sizeof 'int'
|   |-BinaryOperator 0x557bc8fd7b98 <line:16:2, col:16> 'int' '='
|   | |-UnaryOperator 0x557bc8fd7ab8 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x557bc8fd7aa0 <col:3> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x557bc8fd7a80 <col:3> 'int *' lvalue Var 0x557bc8fd7920 'ip' 'int *'
|   | `-BinaryOperator 0x557bc8fd7b78 <col:8, col:16> 'int' '-'
|   |   |-ImplicitCastExpr 0x557bc8fd7b60 <col:8, col:12> 'int' <LValueToRValue>
|   |   | `-ParenExpr 0x557bc8fd7b20 <col:8, col:12> 'int' lvalue
|   |   |   `-UnaryOperator 0x557bc8fd7b08 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   |     `-ImplicitCastExpr 0x557bc8fd7af0 <col:10> 'int *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x557bc8fd7ad0 <col:10> 'int *' lvalue ParmVar 0x557bc8fd7448 'op' 'int *'
|   |   `-IntegerLiteral 0x557bc8fd7b40 <col:16> 'int' 1
|   |-CallExpr 0x557bc8ffcde0 <line:17:2, col:9> 'void'
|   | |-ImplicitCastExpr 0x557bc8fd7bf8 <col:2> 'void (*)(void *) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x557bc8fd7bb8 <col:2> 'void (void *) __attribute__((cdecl))':'void (void *)' Function 0x557bc8fd7198 'free' 'void (void *) __attribute__((cdecl))':'void (void *)'
|   | `-ImplicitCastExpr 0x557bc8ffce20 <col:7> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x557bc8ffce08 <col:7> 'int *' <LValueToRValue>
|   |     `-DeclRefExpr 0x557bc8fd7bd8 <col:7> 'int *' lvalue ParmVar 0x557bc8fd7448 'op' 'int *'
|   `-ReturnStmt 0x557bc8ffcf08 <line:19:2, col:15>
|     `-CallExpr 0x557bc8ffcec8 <col:9, col:15> 'int'
|       |-ImplicitCastExpr 0x557bc8ffceb0 <col:9> 'int (*)(int *)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x557bc8ffce38 <col:9> 'int (int *)' Function 0x557bc8fd7518 'rec' 'int (int *)'
|       `-ImplicitCastExpr 0x557bc8ffcef0 <col:13> 'int *' <LValueToRValue>
|         `-DeclRefExpr 0x557bc8ffce58 <col:13> 'int *' lvalue Var 0x557bc8fd7920 'ip' 'int *'
`-FunctionDecl 0x557bc8ffcfa8 <line:24:1, line:38:1> line:24:5 main 'int ()'
  `-CompoundStmt 0x557bc8ffd848 <col:12, line:38:1>
    |-DeclStmt 0x557bc8ffd178 <line:25:2, col:31>
    | `-VarDecl 0x557bc8ffd060 <col:2, col:30> col:7 used qq 'int *' cinit
    |   `-ImplicitCastExpr 0x557bc8ffd160 <col:12, col:30> 'int *' <BitCast>
    |     `-CallExpr 0x557bc8ffd138 <col:12, col:30> 'void *'
    |       |-ImplicitCastExpr 0x557bc8ffd120 <col:12> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x557bc8ffd0c8 <col:12> 'void *(unsigned long)' Function 0x557bc8fd6fa0 'malloc' 'void *(unsigned long)'
    |       `-UnaryExprOrTypeTraitExpr 0x557bc8ffd100 <col:19, col:29> 'unsigned long' sizeof 'int'
    |-BinaryOperator 0x557bc8ffd268 <line:26:2, col:30> 'int' '='
    | |-UnaryOperator 0x557bc8ffd1c8 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x557bc8ffd1b0 <col:3> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x557bc8ffd190 <col:3> 'int *' lvalue Var 0x557bc8ffd060 'qq' 'int *'
    | `-CallExpr 0x557bc8ffd248 <col:8, col:30> 'int'
    |   `-ImplicitCastExpr 0x557bc8ffd230 <col:8> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x557bc8ffd1e0 <col:8> 'int (void)' Function 0x557bc8fd7358 '__VERIFIER_nondet_int' 'int (void)'
    |-WhileStmt 0x557bc8ffd780 <line:28:2, line:34:2>
    | |-BinaryOperator 0x557bc8ffd310 <line:28:9, col:15> 'int' '>'
    | | |-ImplicitCastExpr 0x557bc8ffd2f8 <col:9, col:10> 'int' <LValueToRValue>
    | | | `-UnaryOperator 0x557bc8ffd2c0 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
    | | |   `-ImplicitCastExpr 0x557bc8ffd2a8 <col:10> 'int *' <LValueToRValue>
    | | |     `-DeclRefExpr 0x557bc8ffd288 <col:10> 'int *' lvalue Var 0x557bc8ffd060 'qq' 'int *'
    | | `-IntegerLiteral 0x557bc8ffd2d8 <col:15> 'int' 1
    | `-CompoundStmt 0x557bc8ffd758 <col:18, line:34:2>
    |   |-DeclStmt 0x557bc8ffd460 <line:29:3, col:32>
    |   | `-VarDecl 0x557bc8ffd348 <col:3, col:31> col:8 used pp 'int *' cinit
    |   |   `-ImplicitCastExpr 0x557bc8ffd448 <col:13, col:31> 'int *' <BitCast>
    |   |     `-CallExpr 0x557bc8ffd420 <col:13, col:31> 'void *'
    |   |       |-ImplicitCastExpr 0x557bc8ffd408 <col:13> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x557bc8ffd3b0 <col:13> 'void *(unsigned long)' Function 0x557bc8fd6fa0 'malloc' 'void *(unsigned long)'
    |   |       `-UnaryExprOrTypeTraitExpr 0x557bc8ffd3e8 <col:20, col:30> 'unsigned long' sizeof 'int'
    |   |-BinaryOperator 0x557bc8ffd520 <line:30:3, col:31> 'int' '='
    |   | |-UnaryOperator 0x557bc8ffd4b0 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x557bc8ffd498 <col:4> 'int *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x557bc8ffd478 <col:4> 'int *' lvalue Var 0x557bc8ffd348 'pp' 'int *'
    |   | `-CallExpr 0x557bc8ffd500 <col:9, col:31> 'int'
    |   |   `-ImplicitCastExpr 0x557bc8ffd4e8 <col:9> 'int (*)(void)' <FunctionToPointerDecay>
    |   |     `-DeclRefExpr 0x557bc8ffd4c8 <col:9> 'int (void)' Function 0x557bc8fd7358 '__VERIFIER_nondet_int' 'int (void)'
    |   `-CompoundAssignOperator 0x557bc8ffd728 <line:33:3, col:33> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-UnaryOperator 0x557bc8ffd578 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    |     | `-ImplicitCastExpr 0x557bc8ffd560 <col:4> 'int *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x557bc8ffd540 <col:4> 'int *' lvalue Var 0x557bc8ffd060 'qq' 'int *'
    |     `-ParenExpr 0x557bc8ffd708 <col:10, col:33> 'int'
    |       `-ConditionalOperator 0x557bc8ffd6d8 <col:11, col:32> 'int'
    |         |-BinaryOperator 0x557bc8ffd660 <col:11, col:23> 'int' '<='
    |         | |-CallExpr 0x557bc8ffd5e8 <col:11, col:17> 'int'
    |         | | |-ImplicitCastExpr 0x557bc8ffd5d0 <col:11> 'int (*)(int *)' <FunctionToPointerDecay>
    |         | | | `-DeclRefExpr 0x557bc8ffd590 <col:11> 'int (int *)' Function 0x557bc8fd7518 'rec' 'int (int *)'
    |         | | `-ImplicitCastExpr 0x557bc8ffd610 <col:15> 'int *' <LValueToRValue>
    |         | |   `-DeclRefExpr 0x557bc8ffd5b0 <col:15> 'int *' lvalue Var 0x557bc8ffd348 'pp' 'int *'
    |         | `-UnaryOperator 0x557bc8ffd648 <col:22, col:23> 'int' prefix '-'
    |         |   `-IntegerLiteral 0x557bc8ffd628 <col:23> 'int' 1
    |         |-UnaryOperator 0x557bc8ffd6a0 <col:27, col:28> 'int' prefix '-'
    |         | `-IntegerLiteral 0x557bc8ffd680 <col:28> 'int' 1
    |         `-IntegerLiteral 0x557bc8ffd6b8 <col:32> 'int' 1
    `-CallExpr 0x557bc8ffd7f0 <line:36:2, col:9> 'void'
      |-ImplicitCastExpr 0x557bc8ffd7d8 <col:2> 'void (*)(void *) __attribute__((cdecl))' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x557bc8ffd798 <col:2> 'void (void *) __attribute__((cdecl))':'void (void *)' Function 0x557bc8fd7198 'free' 'void (void *) __attribute__((cdecl))':'void (void *)'
      `-ImplicitCastExpr 0x557bc8ffd830 <col:7> 'void *' <BitCast>
        `-ImplicitCastExpr 0x557bc8ffd818 <col:7> 'int *' <LValueToRValue>
          `-DeclRefExpr 0x557bc8ffd7b8 <col:7> 'int *' lvalue Var 0x557bc8ffd060 'qq' 'int *'
