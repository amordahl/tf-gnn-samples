TranslationUnitDecl 0x5574218cef88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5574218cf848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5574218cf520 '__int128'
|-TypedefDecl 0x5574218cf8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5574218cf540 'unsigned __int128'
|-TypedefDecl 0x5574218cfbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5574218cf990 'struct __NSConstantString_tag'
|   `-Record 0x5574218cf910 '__NSConstantString_tag'
|-TypedefDecl 0x5574218cfc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5574218cfc20 'char *'
|   `-BuiltinType 0x5574218cf020 'char'
|-TypedefDecl 0x55742190eb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5574218cff00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5574218cfd40 'struct __va_list_tag'
|     `-Record 0x5574218cfcc0 '__va_list_tag'
|-FunctionDecl 0x55742190ec80 <pthread-wmm/mix000_power.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55742190ee50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55742190ed80 <col:31> col:34 'int'
|-FunctionDecl 0x55742190efc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55742190f0f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55742190f238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55742190f1a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55742190f468 <col:40, col:99>
|   |-IfStmt 0x55742190f438 <col:42, col:88>
|   | |-UnaryOperator 0x55742190f318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55742190f300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55742190f2e0 <col:47> 'int' lvalue ParmVar 0x55742190f1a8 'expression' 'int'
|   | `-CompoundStmt 0x55742190f420 <col:59, col:88>
|   |   `-LabelStmt 0x55742190f408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55742190f398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55742190f380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55742190f330 <col:68> 'void () __attribute__((noreturn))' Function 0x55742190f0f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55742190f450 <col:89>
|   `-ReturnStmt 0x55742190f458 <col:91>
|-FunctionDecl 0x55742190f4b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55742190f570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55742190f8f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55742190f628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55742190f6a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55742190f728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55742190f7a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55742190f9b0 <line:11:22>
|-FunctionDecl 0x557421934f10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55742190fa20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55742190faa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x557421934d40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x557421934dc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x557421934fd0 <line:14:22>
|-FunctionDecl 0x557421935280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x557421935040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5574219350c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x557421935140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x557421935338 <line:16:22>
|-TypedefDecl 0x5574219353a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5574218cf0e0 'unsigned char'
|-TypedefDecl 0x557421935418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5574218cf100 'unsigned short'
|-TypedefDecl 0x557421935488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5574218cf120 'unsigned int'
|-TypedefDecl 0x5574219354f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5574218cf140 'unsigned long'
|-TypedefDecl 0x557421935568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5574218cf040 'signed char'
|-TypedefDecl 0x5574219355d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5574218cf0e0 'unsigned char'
|-TypedefDecl 0x557421935648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5574218cf060 'short'
|-TypedefDecl 0x5574219356b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5574218cf100 'unsigned short'
|-TypedefDecl 0x557421935728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5574218cf080 'int'
|-TypedefDecl 0x557421935798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5574218cf120 'unsigned int'
|-TypedefDecl 0x557421935808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5574218cf0a0 'long'
|-TypedefDecl 0x557421935878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5574218cf140 'unsigned long'
|-TypedefDecl 0x5574219358e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5574218cf0a0 'long'
|-TypedefDecl 0x557421935958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5574218cf140 'unsigned long'
|-TypedefDecl 0x5574219359c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5574218cf140 'unsigned long'
|-TypedefDecl 0x557421935a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5574218cf120 'unsigned int'
|-TypedefDecl 0x557421935aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5574218cf120 'unsigned int'
|-TypedefDecl 0x557421935b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5574218cf140 'unsigned long'
|-TypedefDecl 0x557421935b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5574218cf140 'unsigned long'
|-TypedefDecl 0x557421935bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5574218cf120 'unsigned int'
|-TypedefDecl 0x557421935c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5574218cf140 'unsigned long'
|-TypedefDecl 0x557421935cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5574218cf0a0 'long'
|-TypedefDecl 0x557421935d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5574218cf0a0 'long'
|-TypedefDecl 0x557421935dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5574218cf080 'int'
|-RecordDecl 0x557421935e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x557421935f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x557421936030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x557421935fd0 'struct __fsid_t' sugar
|   `-RecordType 0x557421935eb0 '__fsid_t'
|     `-Record 0x557421935e30 ''
|-TypedefDecl 0x5574219360b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5574218cf0a0 'long'
|-TypedefDecl 0x557421936128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5574218cf140 'unsigned long'
|-TypedefDecl 0x557421936198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5574218cf140 'unsigned long'
|-TypedefDecl 0x557421936208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5574218cf120 'unsigned int'
|-TypedefDecl 0x557421936278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5574218cf0a0 'long'
|-TypedefDecl 0x5574219362e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5574218cf120 'unsigned int'
|-TypedefDecl 0x557421936358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5574218cf0a0 'long'
|-TypedefDecl 0x5574219363c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5574218cf080 'int'
|-TypedefDecl 0x557421936438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5574218cf080 'int'
|-TypedefDecl 0x5574219364a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5574218cf080 'int'
|-TypedefDecl 0x557421936518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5574218cf7a0 'void *'
|   `-BuiltinType 0x5574218cefe0 'void'
|-TypedefDecl 0x557421936588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5574218cf0a0 'long'
|-TypedefDecl 0x5574219365f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5574218cf0a0 'long'
|-TypedefDecl 0x557421936668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5574218cf0a0 'long'
|-TypedefDecl 0x5574219366d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5574218cf140 'unsigned long'
|-TypedefDecl 0x557421936748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5574218cf140 'unsigned long'
|-TypedefDecl 0x5574219367b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5574218cf140 'unsigned long'
|-TypedefDecl 0x557421936828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5574218cf140 'unsigned long'
|-TypedefDecl 0x557421936898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5574218cf0a0 'long'
|-TypedefDecl 0x557421936908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5574218cf0a0 'long'
|-TypedefDecl 0x557421936978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5574218cf0a0 'long'
|-TypedefDecl 0x5574219369e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5574218cf140 'unsigned long'
|-TypedefDecl 0x557421936a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x557421936a40 '__off64_t' sugar
|   |-Typedef 0x557421935d68 '__off64_t'
|   `-BuiltinType 0x5574218cf0a0 'long'
|-TypedefDecl 0x557421936b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x557421936b30 '__quad_t *'
|   `-TypedefType 0x557421936ad0 '__quad_t' sugar
|     |-Typedef 0x5574219358e8 '__quad_t'
|     `-BuiltinType 0x5574218cf0a0 'long'
|-TypedefDecl 0x557421936be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5574218cfc20 'char *'
|   `-BuiltinType 0x5574218cf020 'char'
|-TypedefDecl 0x557421936c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5574218cf0a0 'long'
|-TypedefDecl 0x557421936cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5574218cf120 'unsigned int'
|-FunctionDecl 0x557421936e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x557421936d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x557421937148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x557421937138 <line:73:3, col:34>
|     `-CallExpr 0x5574219370f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5574219370e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x557421937070 <col:10> '<builtin fn type>' Function 0x557421936ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x557421937120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x557421937090 <col:29> 'unsigned int' lvalue ParmVar 0x557421936d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x557421936ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x557421936f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x557421936ff0 <col:10> Implicit
| `-ConstAttr 0x557421937048 <col:10> Implicit
|-FunctionDecl 0x5574219372a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x557421937198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5574219375b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x5574219375a8 <line:78:3, col:34>
|     `-CallExpr 0x557421937568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x557421937550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5574219374d8 <col:10> '<builtin fn type>' Function 0x557421937348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x557421937590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5574219374f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x557421937198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x557421937348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5574219373e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x557421937458 <col:10> Implicit
| `-ConstAttr 0x5574219374b0 <col:10> Implicit
|-TypedefDecl 0x5574219375e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5574218cf140 'unsigned long'
|-TypedefDecl 0x557421937678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x557421937640 '__time_t' sugar
|   |-Typedef 0x557421936278 '__time_t'
|   `-BuiltinType 0x5574218cf0a0 'long'
|-RecordDecl 0x5574219376d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x557421937788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x557421937818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5574219378a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x557421937870 '__pid_t' sugar
|   |-Typedef 0x557421935dd8 '__pid_t'
|   `-BuiltinType 0x5574218cf080 'int'
|-RecordDecl 0x557421937900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x5574219379c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x557421937a10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x557421937ad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x557421937b38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5574218cf140 'unsigned long'
|-RecordDecl 0x557421937b90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x557421939e70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x557421939f20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x557421939ec0 'struct cpu_set_t' sugar
|   `-RecordType 0x557421937c10 'cpu_set_t'
|     `-Record 0x557421937b90 ''
|-FunctionDecl 0x55742193a1f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x557421939fc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55742193a0d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55742193a2a8 <line:108:19>
|-FunctionDecl 0x55742193a480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55742193a310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55742193a528 <col:69>
|-FunctionDecl 0x55742193a6a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55742193a590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55742193a748 <col:64>
|-FunctionDecl 0x55742193aa08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55742193a7b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55742193a8e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55742193aab8 <line:114:22>
|-FunctionDecl 0x55742193ae60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55742193ab20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55742193ac18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55742193af10 <col:88>
|-FunctionDecl 0x55742193b1c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55742193af78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55742193aff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55742193b088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55742193b280 <col:62>
|-FunctionDecl 0x55742193b3f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55742193b2e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55742193b4a0 <col:63>
|-FunctionDecl 0x55742193b5c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55742193b668 <col:47>
|-FunctionDecl 0x55742193b770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55742193b6d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55742193b818 <col:69>
|-FunctionDecl 0x55742193b920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55742193b888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55742193b9c8 <col:69>
|-FunctionDecl 0x55742193bc88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55742193ba30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55742193bb68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55742193bd38 <col:88>
|-TypedefDecl 0x55742193bdc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55742193bd90 '__clock_t' sugar
|   |-Typedef 0x5574219360b8 '__clock_t'
|   `-BuiltinType 0x5574218cf0a0 'long'
|-TypedefDecl 0x55742193c7e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55742193be20 '__clockid_t' sugar
|   |-Typedef 0x5574219364a8 '__clockid_t'
|   `-BuiltinType 0x5574218cf080 'int'
|-TypedefDecl 0x55742193c878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55742193c840 '__timer_t' sugar
|   |-Typedef 0x557421936518 '__timer_t'
|   `-PointerType 0x5574218cf7a0 'void *'
|     `-BuiltinType 0x5574218cefe0 'void'
|-RecordDecl 0x55742193c8d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55742193c990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55742193c9f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55742193ca60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55742193cac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55742193cb30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55742193cb98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55742193cc00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55742193cc68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55742193ccd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55742193cd38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55742193cda0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55742193cdf0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55742193ceb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55742193cf28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55742193cfd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55742193d1a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55742193d240 <col:45>
|-FunctionDecl 0x55742193d420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55742193d310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55742193d4c8 <col:54>
|-FunctionDecl 0x55742193d6c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55742193d530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55742193d5a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55742193d778 <line:158:22>
| `-ConstAttr 0x55742193e410 <col:63>
|-FunctionDecl 0x55742193e610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55742193e508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55742193e6b8 <col:56>
|-FunctionDecl 0x55742193ea60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55742193e728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55742193e7a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55742193e820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55742193e918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55742193eb20 <col:54>
|-RecordDecl 0x55742193eb78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55742193ec28 parent 0x5574218cef88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55742193ee88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55742193ef28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55742193ef90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55742193eff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55742193f0e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55742193f208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55742193f1b0 'struct __locale_struct *'
|   `-ElaboratedType 0x55742193f140 'struct __locale_struct' sugar
|     `-RecordType 0x55742193ec00 'struct __locale_struct'
|       `-Record 0x55742193eb78 '__locale_struct'
|-TypedefDecl 0x55742193f2b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55742193f280 '__locale_t' sugar
|   |-Typedef 0x55742193f208 '__locale_t'
|   `-PointerType 0x55742193f1b0 'struct __locale_struct *'
|     `-ElaboratedType 0x55742193f140 'struct __locale_struct' sugar
|       `-RecordType 0x55742193ec00 'struct __locale_struct'
|         `-Record 0x55742193eb78 '__locale_struct'
|-FunctionDecl 0x55742193f6b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55742193f328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55742193f3a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55742193f438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55742193f4c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55742193f540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55742193f778 <col:40>
|-FunctionDecl 0x55742193f968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55742193f840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55742193fa10 <col:66>
|-FunctionDecl 0x55742193fb20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55742193fa78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55742193fbc8 <col:69>
|-FunctionDecl 0x55742193fdf8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55742193fc30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55742193fcc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55742193fea8 <col:52>
|-FunctionDecl 0x557421940050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55742193ff10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55742193ffa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x557421940100 <col:55>
|-FunctionDecl 0x557421940298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x557421940180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x557421940340 <col:62>
|-FunctionDecl 0x557421940578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5574219403a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x557421940620 <col:60>
|-FunctionDecl 0x557421940848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5574219406a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x557421940720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5574219408f8 <col:44>
|-FunctionDecl 0x557421940b08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x557421940960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5574219409e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x557421940bb8 <col:49>
|-VarDecl 0x557421940cb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x557421940d38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x557421940db8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x557421940e80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x557421940fb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x557421941050 <col:42>
|-VarDecl 0x5574219410c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x557421941140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5574219412c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5574219411b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x557421941370 <col:57>
|-FunctionDecl 0x5574219424f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5574219413f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x557421942598 <col:56>
|-FunctionDecl 0x5574219426a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x557421942618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x557421942750 <col:59>
|-FunctionDecl 0x557421942858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5574219427c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x557421942900 <col:48>
| `-ConstAttr 0x557421942958 <col:89>
|-FunctionDecl 0x557421942bb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x557421942a08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x557421942a98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x557421942e18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x557421942ca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557421942d38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x557421942ec8 <col:88>
|-FunctionDecl 0x557421943060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x557421942f30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557421942fc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x557421943110 <col:88>
|-FunctionDecl 0x557421943328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x557421943178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557421943208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5574219433d8 <line:209:22>
|-FunctionDecl 0x557421943778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x557421943440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557421943500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x557421943590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x557421943620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x557421943a78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x557421943878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x557421943950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x557421943b28 <col:85>
|-FunctionDecl 0x557421943f18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x557421943b90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557421943cc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x557421943dd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x557421943fd0 <col:52>
|-FunctionDecl 0x557421944148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x557421944038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5574219441f0 <col:61>
|-FunctionDecl 0x557421944668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x557421944258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5574219442d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x557421944408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x557421944510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x557421944728 <col:62>
|-FunctionDecl 0x557421944948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x557421944790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x557421944820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5574219449f8 <line:222:22>
|-FunctionDecl 0x557421944af8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x557421944a60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x557421944ba0 <col:65>
|-TypedefDecl 0x557421944c10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5574218cf140 'unsigned long'
|-RecordDecl 0x557421944c68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x557421944db0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x557421944e18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557421944ec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x557421944e70 'union pthread_attr_t' sugar
|   `-RecordType 0x557421944cf0 'union pthread_attr_t'
|     `-Record 0x557421944c68 'pthread_attr_t'
|-RecordDecl 0x557421944f20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x557421945098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x557421945110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5574219451c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x557421945160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x557421944fa0 'struct __pthread_internal_list'
|     `-Record 0x557421944f20 '__pthread_internal_list'
|-RecordDecl 0x557421945230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x5574219452d8 parent 0x5574218cef88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5574219453b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x557421945418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x557421945480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x557421949530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x557421949598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x557421949600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x557421949688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x557421949740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x557421949830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x557421949898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557421949a20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5574219499c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5574219452b0 'pthread_mutex_t'
|     `-Record 0x557421945230 ''
|-RecordDecl 0x557421949a90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x557421949bd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x557421949c38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x557421949cf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x557421949c90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x557421949b10 'pthread_mutexattr_t'
|     `-Record 0x557421949a90 ''
|-RecordDecl 0x557421949d60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x557421949e08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x557421949ed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x557421949f38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x557421949fa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55742194a008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55742194a070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55742194a0d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55742194a140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55742194a1a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55742194a260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix000_power.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix000_power.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55742194a350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55742194a3b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55742194a540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55742194a490 'union pthread_cond_t' sugar
|   `-RecordType 0x557421949de0 'pthread_cond_t'
|     `-Record 0x557421949d60 ''
|-RecordDecl 0x55742194a5b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55742194a6b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55742194a718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55742194a7d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55742194a770 'union pthread_condattr_t' sugar
|   `-RecordType 0x55742194a630 'pthread_condattr_t'
|     `-Record 0x55742194a5b0 ''
|-TypedefDecl 0x55742194a858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5574218cf120 'unsigned int'
|-TypedefDecl 0x55742194a8c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5574218cf080 'int'
|-RecordDecl 0x55742194a920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55742194a9c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55742194aa90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55742194aaf8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55742194ab60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55742194abc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55742194ac30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55742194ac98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55742194ad00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55742194ad68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55742194add0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55742194ae38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55742194aea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55742194af50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix000_power.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix000_power.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x55742194aff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55742194b060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55742194b1b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55742194b150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55742194a9a0 'pthread_rwlock_t'
|     `-Record 0x55742194a920 ''
|-RecordDecl 0x55742194b220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55742194b360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55742194b3c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55742194b480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55742194b420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55742194b2a0 'pthread_rwlockattr_t'
|     `-Record 0x55742194b220 ''
|-TypedefDecl 0x55742194d560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5574218cf084 'volatile int' volatile
|   `-BuiltinType 0x5574218cf080 'int'
|-RecordDecl 0x55742194d5b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55742194d700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55742194d768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55742194d820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55742194d7c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55742194d640 'pthread_barrier_t'
|     `-Record 0x55742194d5b8 ''
|-RecordDecl 0x55742194d890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55742194d990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55742194d9f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55742194dab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55742194da50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55742194d910 'pthread_barrierattr_t'
|     `-Record 0x55742194d890 ''
|-TypedefDecl 0x55742194dbc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55742194db60 'long [8]' 8 
|   `-BuiltinType 0x5574218cf0a0 'long'
|-EnumDecl 0x55742194dc20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55742194dce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55742194dd38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55742194dd88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55742194de58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55742194dea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55742194def8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55742194df48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55742194dfd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55742194dfb8 <col:26> 'int'
| |   `-DeclRefExpr 0x55742194df98 <col:26> 'int' EnumConstant 0x55742194de58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55742194e058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55742194e040 <col:29> 'int'
| |   `-DeclRefExpr 0x55742194e020 <col:29> 'int' EnumConstant 0x55742194dea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55742194e0e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55742194e0c8 <col:30> 'int'
| |   `-DeclRefExpr 0x55742194e0a8 <col:30> 'int' EnumConstant 0x55742194def8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55742194e168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55742194e150 <col:27> 'int'
|     `-DeclRefExpr 0x55742194e130 <col:27> 'int' EnumConstant 0x55742194dfd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55742194e1b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55742194e288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55742194e310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55742194e2f8 <col:30> 'int'
| |   `-DeclRefExpr 0x55742194e2d8 <col:30> 'int' EnumConstant 0x55742194e288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55742194e360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55742194e3e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55742194e3d0 <col:29> 'int'
|     `-DeclRefExpr 0x55742194e3b0 <col:29> 'int' EnumConstant 0x55742194e360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55742194e438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55742194e508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55742194e570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55742194e5c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55742194e610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55742194e6d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55742194e728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55742194e778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55742194e800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55742194e7e8 <col:31> 'int'
|     `-DeclRefExpr 0x55742194e7c8 <col:31> 'int' EnumConstant 0x55742194e6d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55742194e850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55742194e918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55742194e968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55742194e9b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55742194ea88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55742194ead8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55742194eb28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55742194ebf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55742194ec48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55742194ec98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55742194eed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55742194ef40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55742194efa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55742194f0c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55742194f118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55742194f1e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55742194f238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55742194f288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55742194f358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55742194f3a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55742194f9d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55742194f4a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55742194f5c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55742194f7c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55742194f840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55742194fa98 <col:47>
| |-NonNullAttr 0x55742194faf0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55742194fb28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55742194fc50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55742194fb80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55742194fea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55742194fd08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55742194fd88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x557421950078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55742194ff68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x557421950120 <col:60>
|-FunctionDecl 0x557421950270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x557421950310 <col:54>
| `-ConstAttr 0x557421950368 <col:95>
|-FunctionDecl 0x557421950da0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5574219503a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557421950418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x557421950e50 <line:395:19>
| `-ConstAttr 0x557421950ea8 <col:60>
|-FunctionDecl 0x557421951078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x557421950f40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x557421951120 <col:71>
| `-NonNullAttr 0x557421951178 <col:112, col:126> 1
|-FunctionDecl 0x557421951280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5574219511c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x557421951328 <line:398:22>
| `-NonNullAttr 0x557421951380 <col:63, col:77> 1
|-FunctionDecl 0x5574219515a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5574219513c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x557421951448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x557421951658 <line:401:22>
| `-NonNullAttr 0x5574219516b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5574219518b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5574219516f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557421951778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x557421951968 <line:404:22>
| `-NonNullAttr 0x5574219519c0 <col:63, col:77> 1
|-FunctionDecl 0x557421951c18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x557421951a08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x557421951ab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x557421951cc8 <line:407:22>
| `-NonNullAttr 0x557421951d20 <col:63, col:80> 1 2
|-FunctionDecl 0x557421952f78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x557421952dc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557421952e38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x557421953028 <line:410:22>
| `-NonNullAttr 0x557421953080 <col:63, col:77> 1
|-FunctionDecl 0x5574219532b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5574219530c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557421953158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x557421953368 <line:413:22>
| `-NonNullAttr 0x5574219533c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5574219535f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x557421953408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x557421953498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5574219536a8 <col:37>
| `-NonNullAttr 0x557421953700 <col:78, col:95> 1 2
|-FunctionDecl 0x5574219538e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557421953748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5574219537c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x557421953998 <line:419:22>
| `-NonNullAttr 0x5574219539f0 <col:63, col:80> 1 2
|-FunctionDecl 0x557421953b78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x557421953a38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557421953ab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x557421953c28 <line:421:22>
| `-NonNullAttr 0x557421953c80 <col:63, col:77> 1
|-FunctionDecl 0x557421954e58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557421953cc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557421953d48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x557421954f08 <line:424:22>
| `-NonNullAttr 0x557421954f60 <col:63, col:80> 1 2
|-FunctionDecl 0x5574219550e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x557421954fa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557421955028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x557421955198 <line:427:22>
| `-NonNullAttr 0x5574219551f0 <col:63, col:77> 1
|-FunctionDecl 0x557421955398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557421955238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5574219552b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x557421955448 <line:430:22>
| `-NonNullAttr 0x5574219554a0 <col:63, col:80> 1 2
|-FunctionDecl 0x557421955628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5574219554e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557421955568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5574219556d8 <line:432:22>
| `-NonNullAttr 0x557421955730 <col:63, col:77> 1
|-FunctionDecl 0x557421955958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x557421955778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5574219557f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x557421955a08 <line:435:22>
| |-NonNullAttr 0x557421955a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x557421955a98 <col:100> "" ""
|-FunctionDecl 0x557421955ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x557421955ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557421955b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x557421955d58 <line:438:22>
| |-NonNullAttr 0x557421955db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x557421955df8 <col:97> "" ""
|-FunctionDecl 0x557421955fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x557421955e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557421955ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x557421956098 <line:441:22>
| `-NonNullAttr 0x5574219560f0 <col:63, col:80> 1 2
|-FunctionDecl 0x557421956270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x557421956138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5574219561b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x557421956320 <line:444:22>
| `-NonNullAttr 0x557421956378 <col:63, col:77> 1
|-FunctionDecl 0x557421956668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5574219563c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557421956448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5574219564c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x557421956720 <line:448:22>
| `-NonNullAttr 0x557421956778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x557421956a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5574219567d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557421956850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5574219568c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x557421956ae0 <col:43>
| `-NonNullAttr 0x557421956b38 <col:84, col:98> 1
|-FunctionDecl 0x557421956e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x557421956b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557421956c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x557421956c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x557421956ef8 <line:453:22>
| `-NonNullAttr 0x557421956f50 <col:63, col:77> 3
|-FunctionDecl 0x557421957228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x557421956f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557421957018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5574219570a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5574219572e0 <line:457:22>
| `-NonNullAttr 0x557421957338 <col:63, col:80> 2 3
|-FunctionDecl 0x557421957528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x557421957388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557421957408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5574219575d8 <line:459:22>
|-FunctionDecl 0x5574219579a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5574219576a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x557421957840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x557421957a58 <col:52, col:69> 1 2
|-FunctionDecl 0x557421957c00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x557421957ae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x557421957b60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x557421957e10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x557421957cc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x557421957d48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x557421957f68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x557421957ed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5574219580a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x557421958148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x5574219581f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x5574219582e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x557421958350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x557421958520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix000_power.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x557421958618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5574219586d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x557421958670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5574219581d0 '__pthread_unwind_buf_t'
| |   `-Record 0x557421958148 ''
| `-AlignedAttr 0x557421958728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5574219587a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x557421958900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x557421958968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5574219589d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x557421958a38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x557421958c40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x557421958b30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x557421958e20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x557421958cf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x557421958fe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x557421958ed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x557421959088 <line:488:22>
|-RecordDecl 0x5574219590e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5574219593f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x557421959258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5574219592d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5574219594a8 <col:86>
| `-ReturnsTwiceAttr 0x557421959500 <col:12> Implicit
|-FunctionDecl 0x557421959828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5574219595d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5574219596e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5574219598d8 <line:494:22>
| `-NonNullAttr 0x557421959930 <col:63, col:77> 1
|-FunctionDecl 0x557421959aa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557421959978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557421959b50 <line:496:22>
| `-NonNullAttr 0x557421959ba8 <col:63, col:77> 1
|-FunctionDecl 0x557421959cb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557421959bf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557421959d58 <line:498:22>
| `-NonNullAttr 0x557421959db0 <col:52, col:66> 1
|-FunctionDecl 0x557421959ee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557421959e30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557421959f90 <line:500:22>
| `-NonNullAttr 0x557421959fe8 <col:52, col:66> 1
|-FunctionDecl 0x55742195a228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55742195a038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55742195a0c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55742195a2d8 <col:36>
| `-NonNullAttr 0x55742195a330 <col:66, col:83> 1 2
|-FunctionDecl 0x55742195a430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55742195a378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55742195a4d8 <line:505:22>
| `-NonNullAttr 0x55742195a530 <col:52, col:66> 1
|-FunctionDecl 0x55742195a7c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55742195a5e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55742195a660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55742195a878 <line:509:22>
| `-NonNullAttr 0x55742195a8d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55742195ab98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55742195a918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55742195a998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55742195aa18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55742195ac50 <line:513:22>
| `-NonNullAttr 0x55742195aca8 <col:63, col:80> 1 3
|-FunctionDecl 0x55742195ae40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55742195acf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55742195aee8 <line:515:22>
| `-NonNullAttr 0x55742195af40 <col:63, col:77> 1
|-FunctionDecl 0x55742195b128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55742195aff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55742195b1d0 <line:517:22>
| `-NonNullAttr 0x55742195b228 <col:63, col:77> 1
|-FunctionDecl 0x55742195b330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55742195b278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55742195b3d8 <line:519:22>
| `-NonNullAttr 0x55742195b430 <col:63, col:77> 1
|-FunctionDecl 0x55742195b658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55742195b478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55742195b4f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55742195b708 <line:523:22>
| `-NonNullAttr 0x55742195b760 <col:63, col:80> 1 2
|-FunctionDecl 0x55742195b968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55742195b7a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55742195b828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55742195ba18 <line:526:22>
| `-NonNullAttr 0x55742195ba70 <col:63, col:77> 1
|-FunctionDecl 0x55742195bc18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55742195bab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55742195bb38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55742195bcc8 <line:529:22>
| `-NonNullAttr 0x55742195bd20 <col:63, col:80> 1 2
|-FunctionDecl 0x55742195cf20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55742195bd68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55742195ce60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55742195cfd0 <line:531:22>
| `-NonNullAttr 0x55742195d028 <col:63, col:77> 1
|-FunctionDecl 0x55742195d1d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55742195d078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55742195d0f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55742195d288 <line:535:22>
| `-NonNullAttr 0x55742195d2e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55742195d468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55742195d328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55742195d3a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55742195d518 <line:538:22>
| `-NonNullAttr 0x55742195d570 <col:63, col:77> 1
|-FunctionDecl 0x55742195d718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55742195d5b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55742195d638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55742195d7c8 <line:542:22>
| `-NonNullAttr 0x55742195d820 <col:63, col:80> 1 2
|-FunctionDecl 0x55742195d9a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55742195d868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55742195d8e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55742195da58 <line:545:22>
| `-NonNullAttr 0x55742195dab0 <col:63, col:77> 1
|-FunctionDecl 0x55742195dc98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55742195daf8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55742195db78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55742195dd48 <line:548:22>
| `-NonNullAttr 0x55742195dda0 <col:63, col:80> 1 2
|-FunctionDecl 0x55742195ef58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55742195dde8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55742195ee98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55742195f008 <line:551:22>
| `-NonNullAttr 0x55742195f060 <col:63, col:77> 1
|-FunctionDecl 0x55742195f398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55742195f140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55742195f250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55742195f448 <col:29>
| `-NonNullAttr 0x55742195f4a0 <col:70, col:84> 1
|-FunctionDecl 0x55742195f618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55742195f4e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55742195f6c0 <line:556:22>
| `-NonNullAttr 0x55742195f718 <col:63, col:77> 1
|-FunctionDecl 0x55742195f820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55742195f768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55742195f8c8 <line:558:22>
| `-NonNullAttr 0x55742195f920 <col:52, col:66> 1
|-FunctionDecl 0x55742195fa20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55742195f968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55742195fac8 <line:560:19>
| `-NonNullAttr 0x55742195fb20 <col:49, col:63> 1
|-FunctionDecl 0x55742195fd58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55742195fb68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55742195fbf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55742195fe08 <col:39>
| `-NonNullAttr 0x55742195fe90 <col:69, col:86> 1 2
|-FunctionDecl 0x55742195ff90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55742195fed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557421960038 <line:565:22>
| `-NonNullAttr 0x557421960090 <col:52, col:66> 1
|-FunctionDecl 0x557421960190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5574219600d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557421960238 <line:567:22>
| `-NonNullAttr 0x557421960290 <col:52, col:66> 1
|-FunctionDecl 0x557421960448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5574219602d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x557421960368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5574219604f8 <col:39>
| `-NonNullAttr 0x557421960550 <col:69, col:86> 1 2
|-FunctionDecl 0x557421960650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557421960598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5574219606f8 <line:572:22>
| `-NonNullAttr 0x557421960750 <col:52, col:66> 1
|-FunctionDecl 0x557421960938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x557421960800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5574219609e0 <line:574:22>
| `-NonNullAttr 0x557421960a38 <col:63, col:77> 1
|-FunctionDecl 0x557421960b40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x557421960a88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x557421960be8 <line:576:22>
| `-NonNullAttr 0x557421960c40 <col:63, col:77> 1
|-FunctionDecl 0x557421960ea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557421960c88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x557421960d08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x557421960f50 <line:580:22>
| `-NonNullAttr 0x557421960fa8 <col:63, col:80> 1 2
|-FunctionDecl 0x5574219611b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x557421960ff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x557421961078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x557421961268 <line:583:22>
| `-NonNullAttr 0x5574219612c0 <col:63, col:77> 1
|-FunctionDecl 0x557421961468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557421961308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x557421961388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x557421961518 <line:587:22>
| `-NonNullAttr 0x557421961570 <col:63, col:80> 1 2
|-FunctionDecl 0x5574219616f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5574219615b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x557421961638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5574219617a8 <col:36>
| `-NonNullAttr 0x557421961800 <col:77, col:91> 1
|-FunctionDecl 0x557421961b38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5574219618e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5574219619f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x557421961be8 <line:592:22>
| `-NonNullAttr 0x557421961c40 <col:63, col:77> 1
|-FunctionDecl 0x557421961db8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x557421961c88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x557421961e60 <line:594:22>
| `-NonNullAttr 0x557421961ee0 <col:63, col:77> 1
|-FunctionDecl 0x557421961fe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x557421961f28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x557421962088 <line:596:22>
| `-NonNullAttr 0x5574219620e0 <col:52, col:66> 1
|-FunctionDecl 0x5574219621e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x557421962128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x557421962288 <line:598:22>
| `-NonNullAttr 0x5574219622e0 <col:52, col:66> 1
|-FunctionDecl 0x557421962508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x557421962328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5574219623a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5574219625b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x5574219628e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x557421962638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5574219626b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x557421962740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5574219629a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x557421962bb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x557421962a80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x557421962c60 <line:607:22>
| `-NonNullAttr 0x557421962cb8 <col:63, col:77> 1
|-FunctionDecl 0x557421962dc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x557421962d08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x557421962e68 <line:609:22>
| `-NonNullAttr 0x557421962ef0 <col:63, col:77> 1
|-FunctionDecl 0x557421963118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557421962f38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x557421962fb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5574219631c8 <line:613:22>
| `-NonNullAttr 0x557421963220 <col:63, col:80> 1 2
|-FunctionDecl 0x557421963428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x557421963268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5574219632e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5574219634d8 <col:37>
| `-NonNullAttr 0x557421963530 <col:78, col:92> 1
|-FunctionDecl 0x557421963748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x557421963578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x557421963620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5574219637f8 <line:619:22>
| `-NonNullAttr 0x557421963850 <col:63, col:80> 1 2
|-FunctionDecl 0x557421963a18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x557421963898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x557421963910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x557421963ac8 <line:622:22>
| `-NonNullAttr 0x557421963b20 <col:63, col:77> 1
|-FunctionDecl 0x557421963dc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x557421963c00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x557421963c80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x557421963e78 <line:624:22>
| `-NonNullAttr 0x557421963f00 <col:63, col:77> 1
|-FunctionDecl 0x557421964078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x557421963f48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557421964120 <line:626:22>
| `-NonNullAttr 0x557421964178 <col:63, col:77> 1
|-FunctionDecl 0x557421964280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5574219641c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557421964328 <line:628:22>
| `-NonNullAttr 0x557421964380 <col:52, col:66> 1
|-FunctionDecl 0x557421964480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5574219643c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557421964528 <line:630:22>
| `-NonNullAttr 0x557421964580 <col:52, col:66> 1
|-FunctionDecl 0x557421964680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5574219645c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557421964728 <line:632:22>
| `-NonNullAttr 0x557421964780 <col:52, col:66> 1
|-FunctionDecl 0x557421964b58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x557421964860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x557421964970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5574219649f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x557421964c10 <line:636:22>
| `-NonNullAttr 0x557421964c68 <col:63, col:77> 1
|-FunctionDecl 0x557421964de8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x557421964cb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x557421964e90 <line:638:22>
| `-NonNullAttr 0x557421964f10 <col:63, col:77> 1
|-FunctionDecl 0x557421965010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x557421964f58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5574219650b8 <line:640:22>
| `-NonNullAttr 0x557421965110 <col:52, col:66> 1
|-FunctionDecl 0x5574219652f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5574219651c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5574219653a0 <line:642:22>
| `-NonNullAttr 0x5574219653f8 <col:63, col:77> 1
|-FunctionDecl 0x557421965500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x557421965448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5574219655a8 <line:644:22>
| `-NonNullAttr 0x557421965600 <col:63, col:77> 1
|-FunctionDecl 0x557421965828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557421965648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5574219656c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5574219658d8 <line:648:22>
| `-NonNullAttr 0x557421965930 <col:63, col:80> 1 2
|-FunctionDecl 0x557421965b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x557421965978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5574219659f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x557421965be8 <line:651:22>
| `-NonNullAttr 0x557421965c40 <col:63, col:77> 1
|-FunctionDecl 0x557421965fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x557421965d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x557421965e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x557421966058 <line:654:22>
| `-NonNullAttr 0x5574219660b0 <col:63, col:77> 1
|-FunctionDecl 0x557421966208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5574219660f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5574219662b0 <col:69>
|-FunctionDecl 0x557421966428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x557421966318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5574219664d0 <col:72>
|-FunctionDecl 0x557421966708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x557421966538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5574219665e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5574219667b8 <col:44>
|-FunctionDecl 0x5574219669d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x557421966820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557421966898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x557421966a88 <line:661:22>
| `-NonNullAttr 0x557421966ae0 <col:63, col:77> 2
|-FunctionDecl 0x557421967f50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x557421966bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x557421966cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x557421966de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x557421968008 <col:47>
|-FunctionDecl 0x557421968110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x557421968078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x557421968268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5574219681d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x557421968330 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5574219683f0 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5574219684b0 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x557421968568 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5574219685e8 prev 0x557421968568 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x557421968650 <col:24> 'int' 0
|-VarDecl 0x557421968688 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x557421968708 prev 0x557421968688 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x557421968770 <col:27> 'int' 0
|-VarDecl 0x5574219687a8 <line:675:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x557421968828 prev 0x5574219687a8 <line:676:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x557421968890 <col:27> 'int' 0
|-VarDecl 0x5574219688c8 <line:677:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x557421968948 prev 0x5574219688c8 <line:678:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5574219689b0 <col:27> 'int' 0
|-VarDecl 0x5574219689e8 <line:679:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x557421968a68 prev 0x5574219689e8 <line:680:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x557421968ad0 <col:27> 'int' 0
|-VarDecl 0x557421968b00 <line:681:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x557421968b78 <line:682:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x557421968bf8 <line:683:1, col:5> col:5 used x 'int'
|-VarDecl 0x557421968c78 prev 0x557421968bf8 <line:684:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x557421968ce0 <col:9> 'int' 0
|-VarDecl 0x557421968d18 <line:685:1, col:5> col:5 used y 'int'
|-VarDecl 0x557421968d98 prev 0x557421968d18 <line:686:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x557421968e00 <col:9> 'int' 0
|-VarDecl 0x557421968e30 <line:687:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x557421968f20 <line:688:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x557421968f98 <line:689:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x557421969010 <line:690:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x557421969088 <line:691:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x557421969100 <line:692:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x557421969178 <line:693:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x5574219691f0 <line:694:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x557421969268 <line:695:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x5574219692e8 <line:696:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x557421969368 <line:697:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x5574219693e0 <line:698:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x557421969460 <line:699:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x5574219694d8 <line:700:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x557421969550 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5574219695c8 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5574219696e0 prev 0x557421968110 <line:703:1, line:746:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x557421969648 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55742196d998 <line:704:1, line:746:1>
|   |-CallExpr 0x5574219697f8 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5574219697e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557421969788 <col:3> 'void ()' Function 0x55742190f4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557421969870 <line:706:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x557421969818 <col:3> 'int' lvalue Var 0x557421969460 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x557421969858 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557421969838 <col:15> 'int' lvalue Var 0x557421969368 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5574219698d0 <line:707:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x557421969890 <col:3> 'int' lvalue Var 0x557421969368 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x5574219698b0 <col:15> 'int' 1
|   |-BinaryOperator 0x557421969948 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5574219698f0 <col:3> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557421969930 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557421969910 <col:20> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5574219699e0 <line:709:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x557421969968 <col:3> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5574219699b8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x557421969988 <col:27> 'int' 1
|   |-CallExpr 0x557421969b68 <line:710:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x557421969b50 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x557421969a00 <col:3> 'void (int)' Function 0x55742190f238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x557421969b00 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x557421969ae0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x557421969ac0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x557421969a78 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x557421969a60 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x557421969a20 <col:23> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x557421969aa8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x557421969a90 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x557421969a40 <col:41> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557421969be8 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557421969b90 <col:3> '_Bool' lvalue Var 0x557421969100 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x557421969bd0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557421969bb0 <col:20> '_Bool' lvalue Var 0x557421968f98 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x557421969c60 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557421969c08 <col:3> '_Bool' lvalue Var 0x557421969178 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x557421969c48 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557421969c28 <col:20> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x557421969cd8 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557421969c80 <col:3> '_Bool' lvalue Var 0x5574219691f0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x557421969cc0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557421969ca0 <col:20> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x557421969d70 <line:714:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x557421969cf8 <col:3> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x557421969d48 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x557421969d18 <col:27> 'int' 1
|   |-CallExpr 0x557421969dc8 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557421969db0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557421969d90 <col:3> 'void ()' Function 0x55742190f570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557421969e20 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557421969e08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557421969de8 <col:3> 'void ()' Function 0x55742190f4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557421969ee8 <line:717:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x557421969e40 <col:3> '_Bool' lvalue Var 0x557421969550 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x557421969ec8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x557421969eb0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x557421969e60 <col:19> '_Bool (void)' Function 0x55742190ec80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x557421969fa8 <line:718:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x557421969f30 <col:3> '_Bool' lvalue Var 0x5574219695c8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x557421969f88 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x557421969f70 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x557421969f50 <col:19> '_Bool (void)' Function 0x55742190ec80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55742196a020 <line:719:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x557421969fc8 <col:3> '_Bool' lvalue Var 0x557421968e30 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55742196a008 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557421969fe8 <col:21> '_Bool' lvalue Var 0x5574219695c8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55742196a098 <line:720:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55742196a040 <col:3> 'int' lvalue Var 0x557421968f20 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55742196a080 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55742196a060 <col:15> 'int' lvalue Var 0x557421968d98 'y' 'int'
|   |-BinaryOperator 0x55742196a4d0 <line:721:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55742196a0b8 <col:3> 'int' lvalue Var 0x557421968d98 'y' 'int'
|   | `-ConditionalOperator 0x55742196a4a0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55742196a2c8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55742196a1e8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55742196a110 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55742196a0f8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55742196a0d8 <col:8> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55742196a1c8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55742196a160 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55742196a148 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55742196a128 <col:27> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x55742196a1b0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55742196a198 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55742196a178 <col:46> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55742196a2a8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55742196a240 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55742196a228 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55742196a208 <col:65> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x55742196a290 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55742196a278 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55742196a258 <col:84> '_Bool' lvalue Var 0x557421969178 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55742196a488 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55742196a2e8 <col:101> 'int' lvalue Var 0x557421968d98 'y' 'int'
|   |   `-ParenExpr 0x55742196a468 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55742196a438 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55742196a3a8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55742196a360 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55742196a348 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55742196a308 <col:106> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55742196a390 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55742196a378 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55742196a328 <col:124> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55742196a408 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55742196a3c8 <col:141> 'int' lvalue Var 0x557421969368 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55742196a420 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55742196a3e8 <col:153> 'int' lvalue Var 0x557421969460 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55742196a9e0 <line:722:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55742196a4f0 <col:3> 'int' lvalue Var 0x557421969368 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55742196a9b0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55742196a980 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55742196a968 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55742196a510 <col:15> '_Bool' lvalue Var 0x5574219695c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55742196a998 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55742196a530 <col:31> 'int' lvalue Var 0x557421969368 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55742196a948 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55742196a918 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55742196a740 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55742196a660 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55742196a588 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55742196a570 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55742196a550 <col:45> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55742196a640 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55742196a5d8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55742196a5c0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55742196a5a0 <col:64> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55742196a628 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55742196a610 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55742196a5f0 <col:83> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55742196a720 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55742196a6b8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55742196a6a0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55742196a680 <col:102> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55742196a708 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55742196a6f0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55742196a6d0 <col:121> '_Bool' lvalue Var 0x557421969178 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55742196a900 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55742196a760 <col:138> 'int' lvalue Var 0x557421969368 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55742196a8e0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55742196a8b0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55742196a820 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55742196a7d8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55742196a7c0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55742196a780 <col:151> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55742196a808 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55742196a7f0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55742196a7a0 <col:169> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55742196a880 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55742196a840 <col:186> 'int' lvalue Var 0x557421969368 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55742196a898 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55742196a860 <col:198> 'int' lvalue Var 0x557421969368 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55742196aef0 <line:723:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55742196aa00 <col:3> 'int' lvalue Var 0x557421969460 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55742196aec0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55742196ae90 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55742196ae78 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55742196aa20 <col:15> '_Bool' lvalue Var 0x5574219695c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55742196aea8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55742196aa40 <col:31> 'int' lvalue Var 0x557421969460 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55742196ae58 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55742196ae28 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55742196ac50 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55742196ab70 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55742196aa98 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55742196aa80 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55742196aa60 <col:45> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55742196ab50 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55742196aae8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55742196aad0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55742196aab0 <col:64> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55742196ab38 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55742196ab20 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55742196ab00 <col:83> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55742196ac30 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55742196abc8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55742196abb0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55742196ab90 <col:102> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55742196ac18 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55742196ac00 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55742196abe0 <col:121> '_Bool' lvalue Var 0x557421969178 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55742196ae10 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55742196ac70 <col:138> 'int' lvalue Var 0x557421969460 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55742196adf0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55742196adc0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55742196ad30 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55742196ace8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55742196acd0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55742196ac90 <col:151> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55742196ad18 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55742196ad00 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55742196acb0 <col:169> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55742196ad90 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55742196ad50 <col:186> 'int' lvalue Var 0x557421969460 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55742196ada8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55742196ad70 <col:198> 'int' lvalue Var 0x557421969460 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55742196b4a8 <line:724:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55742196af10 <col:3> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55742196b490 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55742196b460 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55742196b418 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55742196b400 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55742196af40 <col:20> '_Bool' lvalue Var 0x5574219695c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55742196b448 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55742196b430 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55742196af60 <col:36> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55742196b3e0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55742196b3b0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55742196b170 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55742196b090 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55742196afb8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55742196afa0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55742196af80 <col:55> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55742196b070 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55742196b008 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55742196aff0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55742196afd0 <col:74> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55742196b058 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55742196b040 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55742196b020 <col:93> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55742196b150 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55742196b0e8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55742196b0d0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55742196b0b0 <col:112> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55742196b138 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55742196b120 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55742196b100 <col:131> '_Bool' lvalue Var 0x557421969178 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55742196b398 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55742196b380 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55742196b190 <col:148> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55742196b360 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55742196b330 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55742196b250 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55742196b208 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55742196b1f0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55742196b1b0 <col:166> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55742196b238 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55742196b220 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55742196b1d0 <col:184> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55742196b2e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55742196b2a0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55742196b270 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55742196b318 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55742196b300 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55742196b2c8 <col:212> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55742196ba70 <line:725:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55742196b4c8 <col:3> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55742196ba58 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55742196ba28 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55742196b9e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55742196b9c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55742196b4e8 <col:20> '_Bool' lvalue Var 0x5574219695c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55742196ba10 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55742196b9f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55742196b508 <col:36> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55742196b9a8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55742196b978 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55742196b718 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55742196b638 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55742196b560 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55742196b548 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55742196b528 <col:55> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55742196b618 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55742196b5b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55742196b598 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55742196b578 <col:74> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55742196b600 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55742196b5e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55742196b5c8 <col:93> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55742196b6f8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55742196b690 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55742196b678 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55742196b658 <col:112> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55742196b6e0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55742196b6c8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55742196b6a8 <col:131> '_Bool' lvalue Var 0x557421969178 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55742196b960 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55742196b948 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55742196b738 <col:148> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55742196b928 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55742196b8f8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55742196b7f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55742196b7b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55742196b798 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55742196b758 <col:166> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55742196b7e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55742196b7c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55742196b778 <col:184> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55742196b8c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55742196b848 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55742196b818 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55742196b8e0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55742196b8a0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55742196b870 <col:219> 'int' 0
|   |-BinaryOperator 0x55742196c048 <line:726:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55742196ba90 <col:3> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55742196c030 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55742196c000 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55742196bfb8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55742196bfa0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55742196bab0 <col:20> '_Bool' lvalue Var 0x5574219695c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55742196bfe8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55742196bfd0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55742196bad0 <col:36> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55742196bf80 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55742196bf50 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55742196bce0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55742196bc00 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55742196bb28 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55742196bb10 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55742196baf0 <col:55> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55742196bbe0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55742196bb78 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55742196bb60 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55742196bb40 <col:74> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55742196bbc8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55742196bbb0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55742196bb90 <col:93> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55742196bcc0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55742196bc58 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55742196bc40 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55742196bc20 <col:112> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55742196bca8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55742196bc90 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55742196bc70 <col:131> '_Bool' lvalue Var 0x557421969178 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55742196bf08 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55742196bef0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55742196bd00 <col:148> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55742196bed0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55742196bea0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55742196bdc0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55742196bd78 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55742196bd60 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55742196bd20 <col:166> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55742196bda8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55742196bd90 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55742196bd40 <col:184> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55742196be58 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55742196be10 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55742196bde0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55742196be88 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55742196be70 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55742196be38 <col:212> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55742196c610 <line:727:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55742196c068 <col:3> '_Bool' lvalue Var 0x557421969178 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55742196c5f8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55742196c5c8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55742196c580 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55742196c568 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55742196c088 <col:20> '_Bool' lvalue Var 0x5574219695c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55742196c5b0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55742196c598 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55742196c0a8 <col:36> '_Bool' lvalue Var 0x557421969178 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55742196c548 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55742196c518 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55742196c2b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55742196c1d8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55742196c100 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55742196c0e8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55742196c0c8 <col:55> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55742196c1b8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55742196c150 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55742196c138 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55742196c118 <col:74> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55742196c1a0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55742196c188 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55742196c168 <col:93> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55742196c298 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55742196c230 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55742196c218 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55742196c1f8 <col:112> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55742196c280 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55742196c268 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55742196c248 <col:131> '_Bool' lvalue Var 0x557421969178 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55742196c500 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55742196c4e8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55742196c2d8 <col:148> '_Bool' lvalue Var 0x557421969178 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55742196c4c8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55742196c498 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55742196c398 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55742196c350 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55742196c338 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55742196c2f8 <col:166> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55742196c380 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55742196c368 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55742196c318 <col:184> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55742196c468 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55742196c3e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55742196c3b8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55742196c480 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55742196c440 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55742196c410 <col:219> 'int' 0
|   |-BinaryOperator 0x55742196c688 <line:728:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55742196c630 <col:3> 'int' lvalue Var 0x557421968708 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55742196c670 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55742196c650 <col:25> 'int' lvalue Var 0x557421968d98 'y' 'int'
|   |-BinaryOperator 0x55742196c7b8 <line:729:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55742196c6a8 <col:3> 'int' lvalue Var 0x557421968d98 'y' 'int'
|   | `-ConditionalOperator 0x55742196c788 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55742196c740 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55742196c728 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55742196c6c8 <col:7> '_Bool' lvalue Var 0x557421968e30 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55742196c758 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55742196c6e8 <col:25> 'int' lvalue Var 0x557421968f20 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55742196c770 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55742196c708 <col:37> 'int' lvalue Var 0x557421968d98 'y' 'int'
|   |-BinaryOperator 0x55742196c850 <line:730:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55742196c7d8 <col:3> '_Bool' lvalue Var 0x557421968e30 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55742196c828 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55742196c7f8 <col:28> 'int' 0
|   |-CallExpr 0x55742196c8a8 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55742196c890 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55742196c870 <col:3> 'void ()' Function 0x55742190f570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55742196c900 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55742196c8e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55742196c8c8 <col:3> 'void ()' Function 0x55742190f4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55742196c978 <line:733:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55742196c920 <col:3> 'int' lvalue Var 0x557421968828 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x55742196c960 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55742196c940 <col:25> 'int' lvalue Var 0x557421968c78 'x' 'int'
|   |-CallExpr 0x55742196c9d0 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55742196c9b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55742196c998 <col:3> 'void ()' Function 0x55742190f570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55742196ca28 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55742196ca10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55742196c9f0 <col:3> 'void ()' Function 0x55742190f4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55742196cd10 <line:736:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55742196ca48 <col:3> 'int' lvalue Var 0x557421968d98 'y' 'int'
|   | `-ConditionalOperator 0x55742196cce0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55742196cb08 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55742196cac0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55742196caa8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55742196ca68 <col:7> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55742196caf0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55742196cad8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55742196ca88 <col:25> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55742196ccc8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55742196cb28 <col:42> 'int' lvalue Var 0x557421969368 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55742196cca8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55742196cc78 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55742196cbe8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55742196cba0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55742196cb88 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55742196cb48 <col:55> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55742196cbd0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55742196cbb8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55742196cb68 <col:73> '_Bool' lvalue Var 0x557421969178 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55742196cc48 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55742196cc08 <col:90> 'int' lvalue Var 0x557421969460 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55742196cc60 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55742196cc28 <col:102> 'int' lvalue Var 0x557421968d98 'y' 'int'
|   |-BinaryOperator 0x55742196cf18 <line:737:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55742196cd30 <col:3> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55742196cf00 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55742196ced0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55742196cdf0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55742196cda8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55742196cd90 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55742196cd50 <col:20> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55742196cdd8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55742196cdc0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55742196cd70 <col:38> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55742196ce88 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55742196ce40 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55742196ce10 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55742196ceb8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55742196cea0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55742196ce68 <col:66> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55742196d228 <line:738:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55742196cf60 <col:3> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55742196d210 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55742196d1e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55742196d100 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55742196d020 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55742196cfd8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55742196cfc0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55742196cf80 <col:20> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55742196d008 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55742196cff0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55742196cfa0 <col:38> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55742196d0e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55742196d098 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55742196d080 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55742196d040 <col:56> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55742196d0c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55742196d0b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55742196d060 <col:74> '_Bool' lvalue Var 0x557421969178 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55742196d198 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55742196d150 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55742196d120 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55742196d1c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55742196d1b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55742196d178 <col:102> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55742196d430 <line:739:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55742196d248 <col:3> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55742196d418 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55742196d3e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55742196d308 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55742196d2c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55742196d2a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55742196d268 <col:20> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55742196d2f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55742196d2d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55742196d288 <col:38> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55742196d3a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55742196d358 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55742196d328 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55742196d3d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55742196d3b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55742196d380 <col:66> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55742196d718 <line:740:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55742196d450 <col:3> '_Bool' lvalue Var 0x557421969178 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55742196d700 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55742196d6d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55742196d5f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55742196d510 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55742196d4c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55742196d4b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55742196d470 <col:20> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55742196d4f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55742196d4e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55742196d490 <col:38> '_Bool' lvalue Var 0x557421969010 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55742196d5d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55742196d588 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55742196d570 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55742196d530 <col:56> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55742196d5b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55742196d5a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55742196d550 <col:74> '_Bool' lvalue Var 0x557421969178 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55742196d688 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55742196d640 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55742196d610 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55742196d6b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55742196d6a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55742196d668 <col:102> '_Bool' lvalue Var 0x557421969178 'y$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55742196d770 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55742196d758 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55742196d738 <col:3> 'void ()' Function 0x55742190f570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55742196d7c8 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55742196d7b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55742196d790 <col:3> 'void ()' Function 0x55742190f4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55742196d880 <line:743:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55742196d7e8 <col:3> 'int' lvalue Var 0x5574219685e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55742196d860 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55742196d848 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55742196d808 <col:22> 'int' lvalue Var 0x5574219685e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55742196d828 <col:41> 'int' 1
|   |-CallExpr 0x55742196d8d8 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55742196d8c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55742196d8a0 <col:3> 'void ()' Function 0x55742190f570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55742196d988 <line:745:3, col:36>
|     `-CallExpr 0x55742196d968 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55742196d950 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55742196d8f8 <col:10> 'void *(void)' Function 0x55742190efc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55742196dba0 prev 0x557421968268 <line:747:1, line:782:1> line:747:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55742196db08 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x557421971868 <line:748:1, line:782:1>
|   |-CallExpr 0x55742196dc80 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55742196dc68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55742196dc48 <col:3> 'void ()' Function 0x55742190f4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55742196dce0 <line:750:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55742196dca0 <col:3> 'int' lvalue Var 0x557421968c78 'x' 'int'
|   | `-IntegerLiteral 0x55742196dcc0 <col:7> 'int' 1
|   |-CallExpr 0x55742196dd38 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55742196dd20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55742196dd00 <col:3> 'void ()' Function 0x55742190f570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55742196dd90 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55742196dd78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55742196dd58 <col:3> 'void ()' Function 0x55742190f4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55742196de08 <line:753:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55742196ddb0 <col:3> 'int' lvalue Var 0x557421968948 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55742196ddf0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55742196ddd0 <col:25> 'int' lvalue Var 0x557421968c78 'x' 'int'
|   |-CallExpr 0x55742196de60 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55742196de48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55742196de28 <col:3> 'void ()' Function 0x55742190f570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55742196deb8 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55742196dea0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55742196de80 <col:3> 'void ()' Function 0x55742190f4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55742196df70 <line:756:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55742196ded8 <col:3> '_Bool' lvalue Var 0x557421969550 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55742196df30 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55742196df18 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55742196def8 <col:19> '_Bool (void)' Function 0x55742190ec80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55742196e008 <line:757:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55742196df90 <col:3> '_Bool' lvalue Var 0x5574219695c8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55742196dfe8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55742196dfd0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55742196dfb0 <col:19> '_Bool (void)' Function 0x55742190ec80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55742196e080 <line:758:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55742196e028 <col:3> '_Bool' lvalue Var 0x557421968e30 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55742196e068 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55742196e048 <col:21> '_Bool' lvalue Var 0x5574219695c8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55742196e0f8 <line:759:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55742196e0a0 <col:3> 'int' lvalue Var 0x557421968f20 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55742196e0e0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55742196e0c0 <col:15> 'int' lvalue Var 0x557421968d98 'y' 'int'
|   |-BinaryOperator 0x55742196e530 <line:760:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55742196e118 <col:3> 'int' lvalue Var 0x557421968d98 'y' 'int'
|   | `-ConditionalOperator 0x55742196e500 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55742196e328 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55742196e248 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55742196e170 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55742196e158 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55742196e138 <col:8> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55742196e228 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55742196e1c0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55742196e1a8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55742196e188 <col:27> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x55742196e210 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55742196e1f8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55742196e1d8 <col:46> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55742196e308 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55742196e2a0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55742196e288 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55742196e268 <col:65> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x55742196e2f0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55742196e2d8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55742196e2b8 <col:84> '_Bool' lvalue Var 0x5574219691f0 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55742196e4e8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55742196e348 <col:101> 'int' lvalue Var 0x557421968d98 'y' 'int'
|   |   `-ParenExpr 0x55742196e4c8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55742196e498 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55742196e408 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55742196e3c0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55742196e3a8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55742196e368 <col:106> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55742196e3f0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55742196e3d8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55742196e388 <col:124> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55742196e468 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55742196e428 <col:141> 'int' lvalue Var 0x557421969368 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55742196e480 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55742196e448 <col:153> 'int' lvalue Var 0x557421969460 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55742196ea40 <line:761:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55742196e550 <col:3> 'int' lvalue Var 0x557421969368 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55742196ea10 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55742196e9e0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55742196e9c8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55742196e570 <col:15> '_Bool' lvalue Var 0x5574219695c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55742196e9f8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55742196e590 <col:31> 'int' lvalue Var 0x557421969368 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55742196e9a8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55742196e978 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55742196e7a0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55742196e6c0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55742196e5e8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55742196e5d0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55742196e5b0 <col:45> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55742196e6a0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55742196e638 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55742196e620 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55742196e600 <col:64> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55742196e688 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55742196e670 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55742196e650 <col:83> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55742196e780 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55742196e718 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55742196e700 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55742196e6e0 <col:102> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55742196e768 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55742196e750 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55742196e730 <col:121> '_Bool' lvalue Var 0x5574219691f0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55742196e960 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55742196e7c0 <col:138> 'int' lvalue Var 0x557421969368 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55742196e940 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55742196e910 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55742196e880 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55742196e838 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55742196e820 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55742196e7e0 <col:151> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55742196e868 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55742196e850 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55742196e800 <col:169> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55742196e8e0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55742196e8a0 <col:186> 'int' lvalue Var 0x557421969368 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55742196e8f8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55742196e8c0 <col:198> 'int' lvalue Var 0x557421969368 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55742196ef50 <line:762:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55742196ea60 <col:3> 'int' lvalue Var 0x557421969460 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55742196ef20 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55742196eef0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55742196eed8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55742196ea80 <col:15> '_Bool' lvalue Var 0x5574219695c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55742196ef08 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55742196eaa0 <col:31> 'int' lvalue Var 0x557421969460 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55742196eeb8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55742196ee88 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55742196ecb0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55742196ebd0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55742196eaf8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55742196eae0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55742196eac0 <col:45> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55742196ebb0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55742196eb48 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55742196eb30 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55742196eb10 <col:64> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55742196eb98 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55742196eb80 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55742196eb60 <col:83> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55742196ec90 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55742196ec28 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55742196ec10 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55742196ebf0 <col:102> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55742196ec78 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55742196ec60 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55742196ec40 <col:121> '_Bool' lvalue Var 0x5574219691f0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55742196ee70 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55742196ecd0 <col:138> 'int' lvalue Var 0x557421969460 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55742196ee50 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55742196ee20 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55742196ed90 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55742196ed48 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55742196ed30 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55742196ecf0 <col:151> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55742196ed78 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55742196ed60 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55742196ed10 <col:169> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55742196edf0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55742196edb0 <col:186> 'int' lvalue Var 0x557421969460 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55742196ee08 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55742196edd0 <col:198> 'int' lvalue Var 0x557421969460 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55742196f508 <line:763:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55742196ef80 <col:3> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55742196f4f0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55742196f4c0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55742196f478 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55742196f460 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55742196efa0 <col:20> '_Bool' lvalue Var 0x5574219695c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55742196f4a8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55742196f490 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55742196efc0 <col:36> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55742196f440 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55742196f410 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55742196f1d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55742196f0f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55742196f018 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55742196f000 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55742196efe0 <col:55> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55742196f0d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55742196f068 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55742196f050 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55742196f030 <col:74> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55742196f0b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55742196f0a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55742196f080 <col:93> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55742196f1b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55742196f148 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55742196f130 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55742196f110 <col:112> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55742196f198 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55742196f180 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55742196f160 <col:131> '_Bool' lvalue Var 0x5574219691f0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55742196f3f8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55742196f3e0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55742196f1f0 <col:148> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55742196f3c0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55742196f390 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55742196f2b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55742196f268 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55742196f250 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55742196f210 <col:166> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55742196f298 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55742196f280 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55742196f230 <col:184> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55742196f348 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55742196f300 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55742196f2d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55742196f378 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55742196f360 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55742196f328 <col:212> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55742196fad0 <line:764:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55742196f528 <col:3> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55742196fab8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55742196fa88 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55742196fa40 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55742196fa28 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55742196f548 <col:20> '_Bool' lvalue Var 0x5574219695c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55742196fa70 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55742196fa58 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55742196f568 <col:36> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55742196fa08 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55742196f9d8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55742196f778 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55742196f698 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55742196f5c0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55742196f5a8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55742196f588 <col:55> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55742196f678 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55742196f610 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55742196f5f8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55742196f5d8 <col:74> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55742196f660 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55742196f648 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55742196f628 <col:93> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55742196f758 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55742196f6f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55742196f6d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55742196f6b8 <col:112> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55742196f740 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55742196f728 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55742196f708 <col:131> '_Bool' lvalue Var 0x5574219691f0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55742196f9c0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55742196f9a8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55742196f798 <col:148> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55742196f988 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55742196f958 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55742196f858 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55742196f810 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55742196f7f8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55742196f7b8 <col:166> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55742196f840 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55742196f828 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55742196f7d8 <col:184> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55742196f928 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55742196f8a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55742196f878 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55742196f940 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55742196f900 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55742196f8d0 <col:219> 'int' 0
|   |-BinaryOperator 0x557421970088 <line:765:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55742196faf0 <col:3> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x557421970070 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557421970040 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55742196fff8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55742196ffe0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55742196fb10 <col:20> '_Bool' lvalue Var 0x5574219695c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557421970028 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557421970010 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55742196fb30 <col:36> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55742196ffc0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55742196ff90 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55742196fd40 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55742196fc60 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55742196fb88 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55742196fb70 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55742196fb50 <col:55> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55742196fc40 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55742196fbd8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55742196fbc0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55742196fba0 <col:74> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55742196fc28 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55742196fc10 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55742196fbf0 <col:93> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55742196fd20 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55742196fcb8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55742196fca0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55742196fc80 <col:112> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55742196fd08 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55742196fcf0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55742196fcd0 <col:131> '_Bool' lvalue Var 0x5574219691f0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55742196ff68 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55742196ff50 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55742196fd60 <col:148> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55742196ff30 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55742196ff00 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55742196fe20 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55742196fdd8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55742196fdc0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55742196fd80 <col:166> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55742196fe08 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55742196fdf0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55742196fda0 <col:184> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55742196feb8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55742196fe70 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55742196fe40 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55742196fee8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55742196fed0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55742196fe98 <col:212> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x557421970650 <line:766:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5574219700a8 <col:3> '_Bool' lvalue Var 0x5574219691f0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x557421970638 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557421970608 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5574219705c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5574219705a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5574219700c8 <col:20> '_Bool' lvalue Var 0x5574219695c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5574219705f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5574219705d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5574219700e8 <col:36> '_Bool' lvalue Var 0x5574219691f0 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x557421970588 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x557421970558 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5574219702f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557421970218 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557421970140 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557421970128 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557421970108 <col:55> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5574219701f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557421970190 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557421970178 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557421970158 <col:74> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5574219701e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5574219701c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5574219701a8 <col:93> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5574219702d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557421970270 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557421970258 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557421970238 <col:112> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5574219702c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5574219702a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557421970288 <col:131> '_Bool' lvalue Var 0x5574219691f0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x557421970540 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557421970528 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557421970318 <col:148> '_Bool' lvalue Var 0x5574219691f0 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x557421970508 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5574219704d8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5574219703d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557421970390 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557421970378 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557421970338 <col:166> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5574219703c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5574219703a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557421970358 <col:184> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5574219704a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557421970428 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5574219703f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5574219704c0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x557421970480 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x557421970450 <col:219> 'int' 0
|   |-BinaryOperator 0x5574219706c8 <line:767:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x557421970670 <col:3> 'int' lvalue Var 0x557421968a68 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x5574219706b0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557421970690 <col:25> 'int' lvalue Var 0x557421968d98 'y' 'int'
|   |-BinaryOperator 0x5574219707f8 <line:768:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5574219706e8 <col:3> 'int' lvalue Var 0x557421968d98 'y' 'int'
|   | `-ConditionalOperator 0x5574219707c8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x557421970780 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557421970768 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557421970708 <col:7> '_Bool' lvalue Var 0x557421968e30 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x557421970798 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557421970728 <col:25> 'int' lvalue Var 0x557421968f20 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5574219707b0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x557421970748 <col:37> 'int' lvalue Var 0x557421968d98 'y' 'int'
|   |-BinaryOperator 0x557421970890 <line:769:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x557421970818 <col:3> '_Bool' lvalue Var 0x557421968e30 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x557421970868 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x557421970838 <col:28> 'int' 0
|   |-CallExpr 0x5574219708e8 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5574219708d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5574219708b0 <col:3> 'void ()' Function 0x55742190f570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557421970940 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557421970928 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557421970908 <col:3> 'void ()' Function 0x55742190f4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557421970c28 <line:772:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x557421970960 <col:3> 'int' lvalue Var 0x557421968d98 'y' 'int'
|   | `-ConditionalOperator 0x557421970bf8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x557421970a20 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5574219709d8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5574219709c0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x557421970980 <col:7> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x557421970a08 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5574219709f0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5574219709a0 <col:25> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x557421970be0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557421970a40 <col:42> 'int' lvalue Var 0x557421969368 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x557421970bc0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x557421970b90 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x557421970b00 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x557421970ab8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x557421970aa0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x557421970a60 <col:55> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x557421970ae8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x557421970ad0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x557421970a80 <col:73> '_Bool' lvalue Var 0x5574219691f0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x557421970b60 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557421970b20 <col:90> 'int' lvalue Var 0x557421969460 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x557421970b78 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x557421970b40 <col:102> 'int' lvalue Var 0x557421968d98 'y' 'int'
|   |-BinaryOperator 0x557421970e30 <line:773:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x557421970c48 <col:3> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x557421970e18 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557421970de8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x557421970d08 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x557421970cc0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x557421970ca8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x557421970c68 <col:20> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x557421970cf0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x557421970cd8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x557421970c88 <col:38> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x557421970da0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557421970d58 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557421970d28 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x557421970dd0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557421970db8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557421970d80 <col:66> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557421971130 <line:774:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x557421970e50 <col:3> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557421971118 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5574219710e8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x557421971008 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x557421970f10 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x557421970ec8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x557421970eb0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x557421970e70 <col:20> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x557421970ef8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x557421970ee0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x557421970e90 <col:38> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x557421970fe8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x557421970fa0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x557421970f70 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x557421970f30 <col:56> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x557421970fd0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x557421970fb8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x557421970f50 <col:74> '_Bool' lvalue Var 0x5574219691f0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5574219710a0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557421971058 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557421971028 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5574219710d0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5574219710b8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557421971080 <col:102> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x557421971338 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x557421971150 <col:3> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x557421971320 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5574219712f0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x557421971210 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5574219711c8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5574219711b0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x557421971170 <col:20> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5574219711f8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5574219711e0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x557421971190 <col:38> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5574219712a8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557421971260 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557421971230 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5574219712d8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5574219712c0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557421971288 <col:66> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x557421971620 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x557421971358 <col:3> '_Bool' lvalue Var 0x5574219691f0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x557421971608 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5574219715d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5574219714f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x557421971418 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5574219713d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5574219713b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x557421971378 <col:20> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x557421971400 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5574219713e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x557421971398 <col:38> '_Bool' lvalue Var 0x557421969088 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5574219714d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x557421971490 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x557421971478 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x557421971438 <col:56> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5574219714c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5574219714a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x557421971458 <col:74> '_Bool' lvalue Var 0x5574219691f0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x557421971590 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557421971548 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557421971518 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5574219715c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5574219715a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557421971570 <col:102> '_Bool' lvalue Var 0x5574219691f0 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x557421971678 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557421971660 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557421971640 <col:3> 'void ()' Function 0x55742190f570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5574219716d0 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5574219716b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557421971698 <col:3> 'void ()' Function 0x55742190f4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557421971788 <line:779:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5574219716f0 <col:3> 'int' lvalue Var 0x5574219685e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x557421971768 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x557421971750 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557421971710 <col:22> 'int' lvalue Var 0x5574219685e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x557421971730 <col:41> 'int' 1
|   |-CallExpr 0x5574219717e0 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5574219717c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5574219717a8 <col:3> 'void ()' Function 0x55742190f570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x557421971858 <line:781:3, col:36>
|     `-CallExpr 0x557421971838 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x557421971820 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x557421971800 <col:10> 'void *(void)' Function 0x55742190efc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5574219719a0 prev 0x557421968330 <line:783:1, line:785:1> line:783:6 fence 'void ()'
| `-CompoundStmt 0x557421971a40 <line:784:1, line:785:1>
|-FunctionDecl 0x557421971a70 prev 0x5574219683f0 <line:786:1, line:788:1> line:786:6 isync 'void ()'
| `-CompoundStmt 0x557421971b10 <line:787:1, line:788:1>
|-FunctionDecl 0x557421971b40 prev 0x5574219684b0 <line:789:1, line:791:1> line:789:6 lwfence 'void ()'
| `-CompoundStmt 0x557421971be0 <line:790:1, line:791:1>
`-FunctionDecl 0x557421971c48 <line:792:1, line:814:1> line:792:5 main 'int ()'
  `-CompoundStmt 0x5574219736d0 <line:793:1, line:814:1>
    |-DeclStmt 0x557421971d60 <line:794:3, col:15>
    | `-VarDecl 0x557421971cf8 <col:3, col:13> col:13 used t0 'pthread_t':'unsigned long'
    |-CallExpr 0x557421971fb0 <line:795:3, col:51> 'int'
    | |-ImplicitCastExpr 0x557421971f50 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557421971d78 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55742194f9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x557421971db8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x557421971d98 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x557421971cf8 't0' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x557421971ff0 <col:23, col:33> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x557421971e30 <col:23, col:33> 'void *'
    | |   `-CStyleCastExpr 0x557421971e08 <col:24, col:32> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x557421971dd0 <col:32> 'int' 0
    | |-ImplicitCastExpr 0x557421972008 <col:36> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557421971e50 <col:36> 'void *(void *)' Function 0x5574219696e0 'P0' 'void *(void *)'
    | `-ParenExpr 0x557421971ed0 <col:40, col:50> 'void *'
    |   `-CStyleCastExpr 0x557421971ea8 <col:41, col:49> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x557421971e70 <col:49> 'int' 0
    |-DeclStmt 0x557421972098 <line:796:3, col:15>
    | `-VarDecl 0x557421972030 <col:3, col:13> col:13 used t1 'pthread_t':'unsigned long'
    |-CallExpr 0x557421972240 <line:797:3, col:51> 'int'
    | |-ImplicitCastExpr 0x557421972228 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5574219720b0 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55742194f9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5574219720f0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5574219720d0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x557421972030 't1' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x557421972280 <col:23, col:33> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x557421972168 <col:23, col:33> 'void *'
    | |   `-CStyleCastExpr 0x557421972140 <col:24, col:32> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x557421972108 <col:32> 'int' 0
    | |-ImplicitCastExpr 0x557421972298 <col:36> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557421972188 <col:36> 'void *(void *)' Function 0x55742196dba0 'P1' 'void *(void *)'
    | `-ParenExpr 0x557421972208 <col:40, col:50> 'void *'
    |   `-CStyleCastExpr 0x5574219721e0 <col:41, col:49> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5574219721a8 <col:49> 'int' 0
    |-CallExpr 0x5574219722e8 <line:798:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5574219722d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5574219722b0 <col:3> 'void ()' Function 0x55742190f4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5574219723b8 <line:799:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x557421972308 <col:3> '_Bool' lvalue Var 0x557421968b00 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5574219723a0 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x557421972380 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x557421972368 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x557421972328 <col:21> 'int' lvalue Var 0x5574219685e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x557421972348 <col:41> 'int' 2
    |-CallExpr 0x557421972410 <line:800:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5574219723f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5574219723d8 <col:3> 'void ()' Function 0x55742190f570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x557421972488 <line:801:3, col:36> 'void'
    | |-ImplicitCastExpr 0x557421972470 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557421972430 <col:3> 'void (int)' Function 0x55742190ee50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5574219724c8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5574219724b0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x557421972450 <col:21> '_Bool' lvalue Var 0x557421968b00 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x557421972518 <line:802:3, col:27> 'void'
    | `-ImplicitCastExpr 0x557421972500 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5574219724e0 <col:3> 'void ()' Function 0x55742190f4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x557421972800 <line:803:3, col:103> 'int' '='
    | |-DeclRefExpr 0x557421972538 <col:3> 'int' lvalue Var 0x557421968d98 'y' 'int'
    | `-ConditionalOperator 0x5574219727d0 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5574219725f8 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5574219725b0 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x557421972598 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x557421972558 <col:7> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5574219725e0 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5574219725c8 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x557421972578 <col:25> '_Bool' lvalue Var 0x557421968f98 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5574219727b8 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x557421972618 <col:42> 'int' lvalue Var 0x557421969368 'y$w_buff0' 'int'
    |   `-ParenExpr 0x557421972798 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x557421972768 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5574219726d8 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x557421972690 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x557421972678 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x557421972638 <col:55> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5574219726c0 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5574219726a8 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x557421972658 <col:73> '_Bool' lvalue Var 0x557421969100 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x557421972738 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5574219726f8 <col:90> 'int' lvalue Var 0x557421969460 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x557421972750 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x557421972718 <col:102> 'int' lvalue Var 0x557421968d98 'y' 'int'
    |-BinaryOperator 0x557421972a08 <line:804:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x557421972820 <col:3> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5574219729f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5574219729c0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5574219728e0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x557421972898 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x557421972880 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x557421972840 <col:20> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5574219728c8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5574219728b0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x557421972860 <col:38> '_Bool' lvalue Var 0x557421968f98 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x557421972978 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x557421972930 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x557421972900 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5574219729a8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x557421972990 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x557421972958 <col:66> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x557421972cf0 <line:805:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x557421972a28 <col:3> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x557421972cd8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x557421972ca8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x557421972bc8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x557421972ae8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x557421972aa0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x557421972a88 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x557421972a48 <col:20> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x557421972ad0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x557421972ab8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x557421972a68 <col:38> '_Bool' lvalue Var 0x557421968f98 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x557421972ba8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x557421972b60 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x557421972b48 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x557421972b08 <col:56> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x557421972b90 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x557421972b78 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x557421972b28 <col:74> '_Bool' lvalue Var 0x557421969100 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x557421972c60 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x557421972c18 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x557421972be8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x557421972c90 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x557421972c78 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x557421972c40 <col:102> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x557421972ef8 <line:806:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x557421972d10 <col:3> '_Bool' lvalue Var 0x557421968f98 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x557421972ee0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x557421972eb0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x557421972dd0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x557421972d88 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x557421972d70 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x557421972d30 <col:20> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x557421972db8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x557421972da0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x557421972d50 <col:38> '_Bool' lvalue Var 0x557421968f98 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x557421972e68 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x557421972e20 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x557421972df0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x557421972e98 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x557421972e80 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x557421972e48 <col:66> '_Bool' lvalue Var 0x557421968f98 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5574219731f8 <line:807:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x557421972f18 <col:3> '_Bool' lvalue Var 0x557421969100 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5574219731e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5574219731b0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5574219730d0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x557421972ff0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x557421972f90 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x557421972f78 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x557421972f38 <col:20> '_Bool' lvalue Var 0x5574219693e0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x557421972fd8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x557421972fc0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x557421972f58 <col:38> '_Bool' lvalue Var 0x557421968f98 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5574219730b0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x557421973068 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x557421973050 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x557421973010 <col:56> '_Bool' lvalue Var 0x5574219694d8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x557421973098 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x557421973080 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x557421973030 <col:74> '_Bool' lvalue Var 0x557421969100 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x557421973168 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x557421973120 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5574219730f0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x557421973198 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x557421973180 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x557421973148 <col:102> '_Bool' lvalue Var 0x557421969100 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x557421973250 <line:808:3, col:25> 'void'
    | `-ImplicitCastExpr 0x557421973238 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557421973218 <col:3> 'void ()' Function 0x55742190f570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5574219732a8 <line:809:3, col:27> 'void'
    | `-ImplicitCastExpr 0x557421973290 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557421973270 <col:3> 'void ()' Function 0x55742190f4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x557421973578 <line:810:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x5574219732c8 <col:3> '_Bool' lvalue Var 0x557421968b78 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x557421973560 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x557421973548 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x557421973528 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x557421973508 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x557421973470 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x5574219733d8 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x557421973340 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x557421973328 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x5574219732e8 <col:23> 'int' lvalue Var 0x557421968708 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x557421973308 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x5574219733b8 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5574219733a0 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x557421973360 <col:51> 'int' lvalue Var 0x557421968828 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x557421973380 <col:74> 'int' 0
    |         | `-BinaryOperator 0x557421973450 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x557421973438 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5574219733f8 <col:79> 'int' lvalue Var 0x557421968948 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x557421973418 <col:102> 'int' 1
    |         `-BinaryOperator 0x5574219734e8 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x5574219734d0 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x557421973490 <col:107> 'int' lvalue Var 0x557421968a68 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x5574219734b0 <col:130> 'int' 0
    |-CallExpr 0x5574219735d0 <line:811:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5574219735b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557421973598 <col:3> 'void ()' Function 0x55742190f570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x557421973648 <line:812:3, col:36> 'void'
    | |-ImplicitCastExpr 0x557421973630 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5574219735f0 <col:3> 'void (int)' Function 0x55742190f238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x557421973688 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x557421973670 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x557421973610 <col:21> '_Bool' lvalue Var 0x557421968b78 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5574219736c0 <line:813:3, col:10>
      `-IntegerLiteral 0x5574219736a0 <col:10> 'int' 0
