TranslationUnitDecl 0x56494e3a6f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x56494e3a7848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x56494e3a7520 '__int128'
|-TypedefDecl 0x56494e3a78b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x56494e3a7540 'unsigned __int128'
|-TypedefDecl 0x56494e3a7bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x56494e3a7990 'struct __NSConstantString_tag'
|   `-Record 0x56494e3a7910 '__NSConstantString_tag'
|-TypedefDecl 0x56494e3a7c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x56494e3a7c20 'char *'
|   `-BuiltinType 0x56494e3a7020 'char'
|-TypedefDecl 0x56494e3e6b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x56494e3a7f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x56494e3a7d40 'struct __va_list_tag'
|     `-Record 0x56494e3a7cc0 '__va_list_tag'
|-FunctionDecl 0x56494e3e6ca0 <pthread-wmm/safe030_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x56494e3e6bd0 <col:31> col:34 'int'
|-FunctionDecl 0x56494e3e6e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x56494e3e6f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x56494e3e70d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x56494e3e7048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x56494e3e7308 <col:40, col:99>
|   |-IfStmt 0x56494e3e72d8 <col:42, col:88>
|   | |-UnaryOperator 0x56494e3e71b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x56494e3e71a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x56494e3e7180 <col:47> 'int' lvalue ParmVar 0x56494e3e7048 'expression' 'int'
|   | `-CompoundStmt 0x56494e3e72c0 <col:59, col:88>
|   |   `-LabelStmt 0x56494e3e72a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x56494e3e7238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x56494e3e7220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x56494e3e71d0 <col:68> 'void () __attribute__((noreturn))' Function 0x56494e3e6f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x56494e3e72f0 <col:89>
|   `-ReturnStmt 0x56494e3e72f8 <col:91>
|-FunctionDecl 0x56494e3e7350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x56494e3e7410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x56494e3e7790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56494e3e74c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x56494e3e7548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x56494e3e75c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56494e3e7648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56494e3e7850 <line:10:22>
|-FunctionDecl 0x56494e40d8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56494e3e78c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x56494e3e7940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x56494e3e79c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56494e3e7a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56494e40d960 <line:13:22>
|-FunctionDecl 0x56494e40dc10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56494e40d9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x56494e40da50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x56494e40dad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x56494e40dcc8 <line:15:22>
|-TypedefDecl 0x56494e40dd38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x56494e3a70e0 'unsigned char'
|-TypedefDecl 0x56494e40dda8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x56494e3a7100 'unsigned short'
|-TypedefDecl 0x56494e40de18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x56494e3a7120 'unsigned int'
|-TypedefDecl 0x56494e40de88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x56494e3a7140 'unsigned long'
|-TypedefDecl 0x56494e40def8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x56494e3a7040 'signed char'
|-TypedefDecl 0x56494e40df68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x56494e3a70e0 'unsigned char'
|-TypedefDecl 0x56494e40dfd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x56494e3a7060 'short'
|-TypedefDecl 0x56494e40e048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x56494e3a7100 'unsigned short'
|-TypedefDecl 0x56494e40e0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x56494e3a7080 'int'
|-TypedefDecl 0x56494e40e128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x56494e3a7120 'unsigned int'
|-TypedefDecl 0x56494e40e198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x56494e3a70a0 'long'
|-TypedefDecl 0x56494e40e208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x56494e3a7140 'unsigned long'
|-TypedefDecl 0x56494e40e278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x56494e3a70a0 'long'
|-TypedefDecl 0x56494e40e2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x56494e3a7140 'unsigned long'
|-TypedefDecl 0x56494e40e358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x56494e3a7140 'unsigned long'
|-TypedefDecl 0x56494e40e3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x56494e3a7120 'unsigned int'
|-TypedefDecl 0x56494e40e438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x56494e3a7120 'unsigned int'
|-TypedefDecl 0x56494e40e4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x56494e3a7140 'unsigned long'
|-TypedefDecl 0x56494e40e518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x56494e3a7140 'unsigned long'
|-TypedefDecl 0x56494e40e588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x56494e3a7120 'unsigned int'
|-TypedefDecl 0x56494e40e5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x56494e3a7140 'unsigned long'
|-TypedefDecl 0x56494e40e668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x56494e3a70a0 'long'
|-TypedefDecl 0x56494e40e6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x56494e3a70a0 'long'
|-TypedefDecl 0x56494e40e748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x56494e3a7080 'int'
|-RecordDecl 0x56494e40e7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x56494e40e918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x56494e40e9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x56494e40e970 'struct __fsid_t' sugar
|   `-RecordType 0x56494e40e820 '__fsid_t'
|     `-Record 0x56494e40e7a0 ''
|-TypedefDecl 0x56494e40ea58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x56494e3a70a0 'long'
|-TypedefDecl 0x56494e40eac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x56494e3a7140 'unsigned long'
|-TypedefDecl 0x56494e40eb38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x56494e3a7140 'unsigned long'
|-TypedefDecl 0x56494e40eba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x56494e3a7120 'unsigned int'
|-TypedefDecl 0x56494e40ec18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x56494e3a70a0 'long'
|-TypedefDecl 0x56494e40ec88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x56494e3a7120 'unsigned int'
|-TypedefDecl 0x56494e40ecf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x56494e3a70a0 'long'
|-TypedefDecl 0x56494e40ed68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x56494e3a7080 'int'
|-TypedefDecl 0x56494e40edd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x56494e3a7080 'int'
|-TypedefDecl 0x56494e40ee48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x56494e3a7080 'int'
|-TypedefDecl 0x56494e40eeb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x56494e3a77a0 'void *'
|   `-BuiltinType 0x56494e3a6fe0 'void'
|-TypedefDecl 0x56494e40ef28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x56494e3a70a0 'long'
|-TypedefDecl 0x56494e40ef98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x56494e3a70a0 'long'
|-TypedefDecl 0x56494e40f008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x56494e3a70a0 'long'
|-TypedefDecl 0x56494e40f078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x56494e3a7140 'unsigned long'
|-TypedefDecl 0x56494e40f0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x56494e3a7140 'unsigned long'
|-TypedefDecl 0x56494e40f158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x56494e3a7140 'unsigned long'
|-TypedefDecl 0x56494e40f1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x56494e3a7140 'unsigned long'
|-TypedefDecl 0x56494e40f238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x56494e3a70a0 'long'
|-TypedefDecl 0x56494e40f2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x56494e3a70a0 'long'
|-TypedefDecl 0x56494e40f318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x56494e3a70a0 'long'
|-TypedefDecl 0x56494e40f388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x56494e3a7140 'unsigned long'
|-TypedefDecl 0x56494e40f418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x56494e40f3e0 '__off64_t' sugar
|   |-Typedef 0x56494e40e6d8 '__off64_t'
|   `-BuiltinType 0x56494e3a70a0 'long'
|-TypedefDecl 0x56494e40f510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x56494e40f4d0 '__quad_t *'
|   `-TypedefType 0x56494e40f470 '__quad_t' sugar
|     |-Typedef 0x56494e40e278 '__quad_t'
|     `-BuiltinType 0x56494e3a70a0 'long'
|-TypedefDecl 0x56494e40f580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x56494e3a7c20 'char *'
|   `-BuiltinType 0x56494e3a7020 'char'
|-TypedefDecl 0x56494e40f5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x56494e3a70a0 'long'
|-TypedefDecl 0x56494e40f660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x56494e3a7120 'unsigned int'
|-FunctionDecl 0x56494e40f7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x56494e40f6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x56494e40fae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x56494e40fad8 <line:72:3, col:34>
|     `-CallExpr 0x56494e40fa98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x56494e40fa80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56494e40fa10 <col:10> '<builtin fn type>' Function 0x56494e40f880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x56494e40fac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56494e40fa30 <col:29> 'unsigned int' lvalue ParmVar 0x56494e40f6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x56494e40f880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x56494e40f920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x56494e40f990 <col:10> Implicit
| `-ConstAttr 0x56494e40f9e8 <col:10> Implicit
|-FunctionDecl 0x56494e40fc40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x56494e40fb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x56494e40ff58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x56494e40ff48 <line:77:3, col:34>
|     `-CallExpr 0x56494e40ff08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x56494e40fef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56494e40fe78 <col:10> '<builtin fn type>' Function 0x56494e40fce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x56494e40ff30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x56494e40fe98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x56494e40fb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x56494e40fce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x56494e40fd88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x56494e40fdf8 <col:10> Implicit
| `-ConstAttr 0x56494e40fe50 <col:10> Implicit
|-TypedefDecl 0x56494e40ff88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x56494e3a7140 'unsigned long'
|-TypedefDecl 0x56494e410018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x56494e40ffe0 '__time_t' sugar
|   |-Typedef 0x56494e40ec18 '__time_t'
|   `-BuiltinType 0x56494e3a70a0 'long'
|-RecordDecl 0x56494e410070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x56494e410128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x56494e4101b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x56494e410248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x56494e410210 '__pid_t' sugar
|   |-Typedef 0x56494e40e748 '__pid_t'
|   `-BuiltinType 0x56494e3a7080 'int'
|-RecordDecl 0x56494e4102a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x56494e410360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x56494e4103b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x56494e410470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x56494e4104d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x56494e3a7140 'unsigned long'
|-RecordDecl 0x56494e410530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x56494e4107c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x56494e4128b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x56494e410810 'struct cpu_set_t' sugar
|   `-RecordType 0x56494e4105b0 'cpu_set_t'
|     `-Record 0x56494e410530 ''
|-FunctionDecl 0x56494e412b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x56494e412958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56494e412a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x56494e412c38 <line:107:19>
|-FunctionDecl 0x56494e412e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x56494e412ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x56494e412eb8 <col:69>
|-FunctionDecl 0x56494e413030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x56494e412f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x56494e4130d8 <col:64>
|-FunctionDecl 0x56494e413398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x56494e413140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56494e413278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56494e413448 <line:113:22>
|-FunctionDecl 0x56494e4136c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x56494e4134b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56494e4135a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x56494e413778 <col:88>
|-FunctionDecl 0x56494e413a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56494e4137e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56494e4138c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x56494e413950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56494e413b50 <col:62>
|-FunctionDecl 0x56494e413cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x56494e413bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x56494e413d70 <col:63>
|-FunctionDecl 0x56494e413e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x56494e413f38 <col:47>
|-FunctionDecl 0x56494e414040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x56494e413fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56494e4140e8 <col:69>
|-FunctionDecl 0x56494e4141f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x56494e414158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56494e414298 <col:69>
|-FunctionDecl 0x56494e414558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56494e414300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56494e414438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x56494e414608 <col:88>
|-TypedefDecl 0x56494e414698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x56494e414660 '__clock_t' sugar
|   |-Typedef 0x56494e40ea58 '__clock_t'
|   `-BuiltinType 0x56494e3a70a0 'long'
|-TypedefDecl 0x56494e414728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x56494e4146f0 '__clockid_t' sugar
|   |-Typedef 0x56494e40ee48 '__clockid_t'
|   `-BuiltinType 0x56494e3a7080 'int'
|-TypedefDecl 0x56494e4147b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x56494e414780 '__timer_t' sugar
|   |-Typedef 0x56494e40eeb8 '__timer_t'
|   `-PointerType 0x56494e3a77a0 'void *'
|     `-BuiltinType 0x56494e3a6fe0 'void'
|-RecordDecl 0x56494e414810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x56494e4148e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x56494e414950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x56494e4149b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x56494e414a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x56494e414a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x56494e414af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x56494e414b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x56494e414bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x56494e414c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x56494e414c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x56494e414cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x56494e414d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x56494e414e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x56494e414e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x56494e414f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x56494e415100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x56494e4151a0 <col:45>
|-FunctionDecl 0x56494e415380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x56494e415270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x56494e415428 <col:54>
|-FunctionDecl 0x56494e415628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x56494e415490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x56494e415508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x56494e4156d8 <line:157:22>
| `-ConstAttr 0x56494e415730 <col:63>
|-FunctionDecl 0x56494e416560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56494e415828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56494e416608 <col:56>
|-FunctionDecl 0x56494e4169b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x56494e416678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x56494e4166f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56494e416770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x56494e416868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x56494e416a70 <col:54>
|-RecordDecl 0x56494e416ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x56494e416b78 parent 0x56494e3a6f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x56494e416dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x56494e416e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x56494e416ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x56494e416f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x56494e417038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x56494e417158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x56494e417100 'struct __locale_struct *'
|   `-ElaboratedType 0x56494e417090 'struct __locale_struct' sugar
|     `-RecordType 0x56494e416b50 'struct __locale_struct'
|       `-Record 0x56494e416ac8 '__locale_struct'
|-TypedefDecl 0x56494e417208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x56494e4171d0 '__locale_t' sugar
|   |-Typedef 0x56494e417158 '__locale_t'
|   `-PointerType 0x56494e417100 'struct __locale_struct *'
|     `-ElaboratedType 0x56494e417090 'struct __locale_struct' sugar
|       `-RecordType 0x56494e416b50 'struct __locale_struct'
|         `-Record 0x56494e416ac8 '__locale_struct'
|-FunctionDecl 0x56494e417610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x56494e417278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x56494e4172f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56494e417370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x56494e417400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56494e417478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x56494e4176d8 <col:40>
|-FunctionDecl 0x56494e4178c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56494e4177a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x56494e417970 <col:66>
|-FunctionDecl 0x56494e417a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56494e4179d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x56494e417b28 <col:69>
|-FunctionDecl 0x56494e417d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56494e417b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56494e417c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56494e417e08 <col:52>
|-FunctionDecl 0x56494e417fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56494e417e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56494e417f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56494e418060 <col:55>
|-FunctionDecl 0x56494e4181f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x56494e4180e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x56494e4182a0 <col:62>
|-FunctionDecl 0x56494e418418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x56494e418308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x56494e4184c0 <col:60>
|-FunctionDecl 0x56494e418718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56494e418578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56494e4185f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x56494e4187c8 <col:44>
|-FunctionDecl 0x56494e4189d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56494e418830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56494e4188b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x56494e418a88 <col:49>
|-VarDecl 0x56494e418b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x56494e418c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x56494e418c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x56494e418d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x56494e418e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x56494e418f20 <col:42>
|-VarDecl 0x56494e418f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x56494e419010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x56494e419198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x56494e419088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x56494e419240 <col:57>
|-FunctionDecl 0x56494e419350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56494e4192c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56494e4193f8 <col:56>
|-FunctionDecl 0x56494e41a540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56494e419478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x56494e41a5e8 <col:59>
|-FunctionDecl 0x56494e41a6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x56494e41a658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x56494e41a798 <col:48>
| `-ConstAttr 0x56494e41a7f0 <col:89>
|-FunctionDecl 0x56494e41aa58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56494e41a8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x56494e41a938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x56494e41acb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56494e41ab48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56494e41abd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x56494e41ad68 <col:88>
|-FunctionDecl 0x56494e41af00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56494e41add0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56494e41ae60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x56494e41afb0 <col:88>
|-FunctionDecl 0x56494e41b1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x56494e41b018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56494e41b0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x56494e41b278 <line:208:22>
|-FunctionDecl 0x56494e41b5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56494e41b2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56494e41b360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x56494e41b3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x56494e41b480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x56494e41b8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x56494e41b6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x56494e41b7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x56494e41b998 <col:85>
|-FunctionDecl 0x56494e41bd88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x56494e41ba00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56494e41bb38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x56494e41bc40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x56494e41be40 <col:52>
|-FunctionDecl 0x56494e41bfb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x56494e41bea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56494e41c060 <col:61>
|-FunctionDecl 0x56494e41c560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x56494e41c0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56494e41c148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x56494e41c278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x56494e41c368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x56494e41c620 <col:62>
|-FunctionDecl 0x56494e41c838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x56494e41c688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56494e41c718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x56494e41c8e8 <line:221:22>
|-FunctionDecl 0x56494e41c9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x56494e41c950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56494e41ca90 <col:65>
|-TypedefDecl 0x56494e41cb00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x56494e3a7140 'unsigned long'
|-RecordDecl 0x56494e41cb58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x56494e41cca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56494e41cd08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56494e41cdb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x56494e41cd60 'union pthread_attr_t' sugar
|   `-RecordType 0x56494e41cbe0 'union pthread_attr_t'
|     `-Record 0x56494e41cb58 'pthread_attr_t'
|-RecordDecl 0x56494e41ce10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x56494e41cf88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x56494e41d000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x56494e41d0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x56494e41d050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x56494e41ce90 'struct __pthread_internal_list'
|     `-Record 0x56494e41ce10 '__pthread_internal_list'
|-RecordDecl 0x56494e41d120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x56494e41d1c8 parent 0x56494e3a6f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x56494e41d2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56494e41d308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x56494e41d370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x56494e41d3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x56494e41d440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x56494e41d4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x56494e421580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x56494e421630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x56494e421720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x56494e421788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56494e421910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x56494e4218b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x56494e41d1a0 'pthread_mutex_t'
|     `-Record 0x56494e41d120 ''
|-RecordDecl 0x56494e421980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x56494e421ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56494e421b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56494e421be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x56494e421b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x56494e421a00 'pthread_mutexattr_t'
|     `-Record 0x56494e421980 ''
|-RecordDecl 0x56494e421c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x56494e421cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x56494e421dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56494e421e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x56494e421e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x56494e421ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x56494e421f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x56494e421fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x56494e422030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x56494e422098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x56494e422150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe030_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe030_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x56494e422240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x56494e4222a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x56494e4223e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x56494e422380 'union pthread_cond_t' sugar
|   `-RecordType 0x56494e421cd0 'pthread_cond_t'
|     `-Record 0x56494e421c50 ''
|-RecordDecl 0x56494e422450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x56494e422590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56494e4225f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56494e4226b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x56494e422650 'union pthread_condattr_t' sugar
|   `-RecordType 0x56494e4224d0 'pthread_condattr_t'
|     `-Record 0x56494e422450 ''
|-TypedefDecl 0x56494e422738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x56494e3a7120 'unsigned int'
|-TypedefDecl 0x56494e4227a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x56494e3a7080 'int'
|-RecordDecl 0x56494e422800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x56494e4228a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x56494e422970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56494e4229d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x56494e422a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x56494e422aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x56494e422b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x56494e422b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x56494e422be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x56494e422c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x56494e422cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x56494e422d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x56494e422d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x56494e422e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe030_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe030_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x56494e422ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56494e422f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56494e423090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x56494e423030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x56494e422880 'pthread_rwlock_t'
|     `-Record 0x56494e422800 ''
|-RecordDecl 0x56494e423100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x56494e423240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x56494e4232a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56494e423360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x56494e423300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x56494e423180 'pthread_rwlockattr_t'
|     `-Record 0x56494e423100 ''
|-TypedefDecl 0x56494e4233e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x56494e3a7084 'volatile int' volatile
|   `-BuiltinType 0x56494e3a7080 'int'
|-RecordDecl 0x56494e423440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x56494e4255b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x56494e425618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56494e4256d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x56494e425670 'union pthread_barrier_t' sugar
|   `-RecordType 0x56494e4234c0 'pthread_barrier_t'
|     `-Record 0x56494e423440 ''
|-RecordDecl 0x56494e425740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x56494e425840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56494e4258a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56494e425960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x56494e425900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x56494e4257c0 'pthread_barrierattr_t'
|     `-Record 0x56494e425740 ''
|-TypedefDecl 0x56494e425a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x56494e425a10 'long [8]' 8 
|   `-BuiltinType 0x56494e3a70a0 'long'
|-EnumDecl 0x56494e425ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x56494e425b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x56494e425be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x56494e425c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x56494e425d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x56494e425d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x56494e425da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x56494e425df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x56494e425e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x56494e425e68 <col:26> 'int'
| |   `-DeclRefExpr 0x56494e425e48 <col:26> 'int' EnumConstant 0x56494e425d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x56494e425f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x56494e425ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x56494e425ed0 <col:29> 'int' EnumConstant 0x56494e425d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x56494e425f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x56494e425f78 <col:30> 'int'
| |   `-DeclRefExpr 0x56494e425f58 <col:30> 'int' EnumConstant 0x56494e425da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x56494e426018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x56494e426000 <col:27> 'int'
|     `-DeclRefExpr 0x56494e425fe0 <col:27> 'int' EnumConstant 0x56494e425e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x56494e426068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x56494e426138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x56494e4261c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x56494e4261a8 <col:30> 'int'
| |   `-DeclRefExpr 0x56494e426188 <col:30> 'int' EnumConstant 0x56494e426138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x56494e426210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x56494e426298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x56494e426280 <col:29> 'int'
|     `-DeclRefExpr 0x56494e426260 <col:29> 'int' EnumConstant 0x56494e426210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x56494e4262e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x56494e4263b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x56494e426408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x56494e426458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x56494e4264a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x56494e4265c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x56494e426610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x56494e426660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x56494e4266e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x56494e4266d0 <col:31> 'int'
|     `-DeclRefExpr 0x56494e4266b0 <col:31> 'int' EnumConstant 0x56494e4265c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x56494e426738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x56494e426808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x56494e426858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x56494e4268a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x56494e426978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x56494e4269c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x56494e426a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x56494e426ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x56494e426b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x56494e426b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x56494e426dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x56494e426e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x56494e426e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x56494e426fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x56494e427008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x56494e4270d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x56494e427128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x56494e427178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x56494e427248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x56494e427298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x56494e4278f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x56494e427390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x56494e4274a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56494e4276e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x56494e427760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x56494e4279b8 <col:47>
| |-NonNullAttr 0x56494e427a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x56494e427a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x56494e427b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x56494e427aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x56494e427dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x56494e427c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x56494e427ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x56494e427f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x56494e427e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x56494e428040 <col:60>
|-FunctionDecl 0x56494e428190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x56494e428230 <col:54>
| `-ConstAttr 0x56494e428288 <col:95>
|-FunctionDecl 0x56494e428458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x56494e4282c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56494e428338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x56494e428508 <line:394:19>
| `-ConstAttr 0x56494e428560 <col:60>
|-FunctionDecl 0x56494e428f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56494e428e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56494e429010 <col:71>
| `-NonNullAttr 0x56494e429068 <col:112, col:126> 1
|-FunctionDecl 0x56494e429170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56494e4290b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56494e429218 <line:397:22>
| `-NonNullAttr 0x56494e429270 <col:63, col:77> 1
|-FunctionDecl 0x56494e429498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x56494e4292b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56494e429338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x56494e429548 <line:400:22>
| `-NonNullAttr 0x56494e4295a0 <col:63, col:80> 1 2
|-FunctionDecl 0x56494e4297a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56494e4295e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56494e429668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x56494e429858 <line:403:22>
| `-NonNullAttr 0x56494e4298b0 <col:63, col:77> 1
|-FunctionDecl 0x56494e429b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x56494e4298f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56494e4299a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x56494e429bb8 <line:406:22>
| `-NonNullAttr 0x56494e429c10 <col:63, col:80> 1 2
|-FunctionDecl 0x56494e42ae48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56494e429c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56494e429cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56494e42aef8 <line:409:22>
| `-NonNullAttr 0x56494e42af50 <col:63, col:77> 1
|-FunctionDecl 0x56494e42b188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56494e42af98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56494e42b028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56494e42b238 <line:412:22>
| `-NonNullAttr 0x56494e42b290 <col:63, col:80> 1 2
|-FunctionDecl 0x56494e42b4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56494e42b2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x56494e42b368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x56494e42b578 <col:37>
| `-NonNullAttr 0x56494e42b5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x56494e42b7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56494e42b618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56494e42b698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x56494e42b868 <line:418:22>
| `-NonNullAttr 0x56494e42b8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56494e42ba48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56494e42b908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56494e42b988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x56494e42baf8 <line:420:22>
| `-NonNullAttr 0x56494e42bb50 <col:63, col:77> 1
|-FunctionDecl 0x56494e42bcf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56494e42bb98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56494e42bc18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x56494e42bda8 <line:423:22>
| `-NonNullAttr 0x56494e42ce30 <col:63, col:80> 1 2
|-FunctionDecl 0x56494e42cfb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56494e42ce78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56494e42cef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x56494e42d068 <line:426:22>
| `-NonNullAttr 0x56494e42d0c0 <col:63, col:77> 1
|-FunctionDecl 0x56494e42d268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56494e42d108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56494e42d188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x56494e42d318 <line:429:22>
| `-NonNullAttr 0x56494e42d370 <col:63, col:80> 1 2
|-FunctionDecl 0x56494e42d4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56494e42d3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56494e42d438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x56494e42d5a8 <line:431:22>
| `-NonNullAttr 0x56494e42d600 <col:63, col:77> 1
|-FunctionDecl 0x56494e42d828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x56494e42d648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56494e42d6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x56494e42d8d8 <line:434:22>
| |-NonNullAttr 0x56494e42d930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x56494e42d968 <col:100> "" ""
|-FunctionDecl 0x56494e42db78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x56494e42d9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56494e42da38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x56494e42dc28 <line:437:22>
| |-NonNullAttr 0x56494e42dc80 <col:63, col:77> 1
| `-DeprecatedAttr 0x56494e42dcb8 <col:97> "" ""
|-FunctionDecl 0x56494e42deb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56494e42dd08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56494e42dd80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56494e42df68 <line:440:22>
| `-NonNullAttr 0x56494e42dfc0 <col:63, col:80> 1 2
|-FunctionDecl 0x56494e42e140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56494e42e008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56494e42e080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56494e42e1f0 <line:443:22>
| `-NonNullAttr 0x56494e42e248 <col:63, col:77> 1
|-FunctionDecl 0x56494e42e538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56494e42e298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56494e42e318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x56494e42e390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56494e42e5f0 <line:447:22>
| `-NonNullAttr 0x56494e42e648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x56494e42e8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x56494e42e6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56494e42e720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x56494e42e798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56494e42e9b0 <col:43>
| `-NonNullAttr 0x56494e42ea08 <col:84, col:98> 1
|-FunctionDecl 0x56494e42ecc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56494e42ea58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56494e42ead8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x56494e42eb68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x56494e42ed80 <line:452:22>
| `-NonNullAttr 0x56494e42edd8 <col:63, col:77> 3
|-FunctionDecl 0x56494e42f0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56494e42ee50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56494e42eed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x56494e42ef60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56494e42f1a0 <line:456:22>
| `-NonNullAttr 0x56494e42f1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x56494e42f3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x56494e42f248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56494e42f2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x56494e42f498 <line:458:22>
|-FunctionDecl 0x56494e42f868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x56494e42f560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x56494e42f700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x56494e42f918 <col:52, col:69> 1 2
|-FunctionDecl 0x56494e42fac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x56494e42f9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x56494e42fa20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x56494e42fca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x56494e42fb88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x56494e42fc08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x56494e42fe60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x56494e42fd68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x56494e42ffa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x56494e430040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x56494e4300e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x56494e4301d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x56494e430240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x56494e430410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe030_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x56494e430508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x56494e4305c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x56494e430560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x56494e4300c0 '__pthread_unwind_buf_t'
| |   `-Record 0x56494e430040 ''
| `-AlignedAttr 0x56494e430618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x56494e430690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x56494e4307f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x56494e430858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x56494e4308c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x56494e430928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x56494e430b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56494e430a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56494e430c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56494e430be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56494e430e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56494e430d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x56494e430f18 <line:487:22>
|-RecordDecl 0x56494e430f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x56494e431288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x56494e4310e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x56494e431168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x56494e431338 <col:86>
| `-ReturnsTwiceAttr 0x56494e431390 <col:12> Implicit
|-FunctionDecl 0x56494e4316b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56494e431460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x56494e431570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x56494e431768 <line:493:22>
| `-NonNullAttr 0x56494e4317c0 <col:63, col:77> 1
|-FunctionDecl 0x56494e431938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56494e431808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56494e4319e0 <line:495:22>
| `-NonNullAttr 0x56494e431a38 <col:63, col:77> 1
|-FunctionDecl 0x56494e431b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56494e431a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56494e431be8 <line:497:22>
| `-NonNullAttr 0x56494e431c40 <col:52, col:66> 1
|-FunctionDecl 0x56494e431d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56494e431c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56494e431de8 <line:499:22>
| `-NonNullAttr 0x56494e431e40 <col:52, col:66> 1
|-FunctionDecl 0x56494e432088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56494e431e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56494e431f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56494e432138 <col:36>
| `-NonNullAttr 0x56494e432190 <col:66, col:83> 1 2
|-FunctionDecl 0x56494e432290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56494e4321d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56494e432338 <line:504:22>
| `-NonNullAttr 0x56494e432390 <col:52, col:66> 1
|-FunctionDecl 0x56494e432628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56494e432440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56494e4324c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56494e4326d8 <line:508:22>
| `-NonNullAttr 0x56494e432730 <col:63, col:80> 1 2
|-FunctionDecl 0x56494e4329f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x56494e432778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56494e4327f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x56494e432878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x56494e432ab0 <line:512:22>
| `-NonNullAttr 0x56494e432b08 <col:63, col:80> 1 3
|-FunctionDecl 0x56494e432c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56494e432b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56494e432cb8 <line:514:22>
| `-NonNullAttr 0x56494e432d10 <col:63, col:77> 1
|-FunctionDecl 0x56494e432f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56494e432dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56494e432fe0 <line:516:22>
| `-NonNullAttr 0x56494e433038 <col:63, col:77> 1
|-FunctionDecl 0x56494e433140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56494e433088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56494e4331e8 <line:518:22>
| `-NonNullAttr 0x56494e433240 <col:63, col:77> 1
|-FunctionDecl 0x56494e433468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56494e433288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56494e433308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x56494e433518 <line:522:22>
| `-NonNullAttr 0x56494e433570 <col:63, col:80> 1 2
|-FunctionDecl 0x56494e433778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56494e4335b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56494e433638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x56494e433828 <line:525:22>
| `-NonNullAttr 0x56494e433880 <col:63, col:77> 1
|-FunctionDecl 0x56494e433a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56494e4338c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56494e433948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x56494e433ad8 <line:528:22>
| `-NonNullAttr 0x56494e433b30 <col:63, col:80> 1 2
|-FunctionDecl 0x56494e433cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56494e433b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56494e433bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x56494e433d68 <line:530:22>
| `-NonNullAttr 0x56494e433dc0 <col:63, col:77> 1
|-FunctionDecl 0x56494e434f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56494e433e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56494e434eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x56494e435040 <line:534:22>
| `-NonNullAttr 0x56494e435098 <col:63, col:80> 1 2
|-FunctionDecl 0x56494e435228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56494e4350e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56494e435168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x56494e4352d8 <line:537:22>
| `-NonNullAttr 0x56494e435330 <col:63, col:77> 1
|-FunctionDecl 0x56494e4354d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56494e435378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56494e4353f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56494e435588 <line:541:22>
| `-NonNullAttr 0x56494e4355e0 <col:63, col:80> 1 2
|-FunctionDecl 0x56494e435768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56494e435628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56494e4356a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x56494e435818 <line:544:22>
| `-NonNullAttr 0x56494e435870 <col:63, col:77> 1
|-FunctionDecl 0x56494e435a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x56494e4358b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x56494e435938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x56494e435b08 <line:547:22>
| `-NonNullAttr 0x56494e435b60 <col:63, col:80> 1 2
|-FunctionDecl 0x56494e435ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56494e435ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56494e435c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x56494e435d98 <line:550:22>
| `-NonNullAttr 0x56494e435df0 <col:63, col:77> 1
|-FunctionDecl 0x56494e437168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x56494e436f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56494e437020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x56494e437218 <col:29>
| `-NonNullAttr 0x56494e437270 <col:70, col:84> 1
|-FunctionDecl 0x56494e4373e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56494e4372b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56494e437490 <line:555:22>
| `-NonNullAttr 0x56494e4374e8 <col:63, col:77> 1
|-FunctionDecl 0x56494e4375f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56494e437538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56494e437698 <line:557:22>
| `-NonNullAttr 0x56494e4376f0 <col:52, col:66> 1
|-FunctionDecl 0x56494e4377f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56494e437738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56494e437898 <line:559:19>
| `-NonNullAttr 0x56494e4378f0 <col:49, col:63> 1
|-FunctionDecl 0x56494e437b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56494e437938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56494e4379c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56494e437bd8 <col:39>
| `-NonNullAttr 0x56494e437c30 <col:69, col:86> 1 2
|-FunctionDecl 0x56494e437d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56494e437c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56494e437dd8 <line:564:22>
| `-NonNullAttr 0x56494e437e30 <col:52, col:66> 1
|-FunctionDecl 0x56494e437f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56494e437ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56494e438040 <line:566:22>
| `-NonNullAttr 0x56494e438098 <col:52, col:66> 1
|-FunctionDecl 0x56494e438258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56494e4380e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56494e438178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56494e438308 <col:39>
| `-NonNullAttr 0x56494e438360 <col:69, col:86> 1 2
|-FunctionDecl 0x56494e438460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56494e4383a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56494e438508 <line:571:22>
| `-NonNullAttr 0x56494e438560 <col:52, col:66> 1
|-FunctionDecl 0x56494e438748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56494e438610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56494e4387f0 <line:573:22>
| `-NonNullAttr 0x56494e438848 <col:63, col:77> 1
|-FunctionDecl 0x56494e438950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56494e438898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56494e4389f8 <line:575:22>
| `-NonNullAttr 0x56494e438a50 <col:63, col:77> 1
|-FunctionDecl 0x56494e438c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56494e438a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56494e438b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x56494e438d28 <line:579:22>
| `-NonNullAttr 0x56494e438d80 <col:63, col:80> 1 2
|-FunctionDecl 0x56494e438fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56494e438dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56494e438e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x56494e439058 <line:582:22>
| `-NonNullAttr 0x56494e4390b0 <col:63, col:77> 1
|-FunctionDecl 0x56494e439258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56494e4390f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56494e439178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x56494e439308 <line:586:22>
| `-NonNullAttr 0x56494e439360 <col:63, col:80> 1 2
|-FunctionDecl 0x56494e4394e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56494e4393a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56494e439428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x56494e439598 <col:36>
| `-NonNullAttr 0x56494e4395f0 <col:77, col:91> 1
|-FunctionDecl 0x56494e439928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x56494e4396d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56494e4397e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x56494e4399d8 <line:591:22>
| `-NonNullAttr 0x56494e439a30 <col:63, col:77> 1
|-FunctionDecl 0x56494e439ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56494e439a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56494e439c50 <line:593:22>
| `-NonNullAttr 0x56494e439ca8 <col:63, col:77> 1
|-FunctionDecl 0x56494e439db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56494e439cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56494e439e58 <line:595:22>
| `-NonNullAttr 0x56494e439eb0 <col:52, col:66> 1
|-FunctionDecl 0x56494e439fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56494e439f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56494e43a070 <line:597:22>
| `-NonNullAttr 0x56494e43a0c8 <col:52, col:66> 1
|-FunctionDecl 0x56494e43a2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x56494e43a118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56494e43a190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x56494e43a3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x56494e43a6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56494e43a428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56494e43a4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56494e43a530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x56494e43a790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x56494e43a9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56494e43a870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56494e43aa50 <line:606:22>
| `-NonNullAttr 0x56494e43aaa8 <col:63, col:77> 1
|-FunctionDecl 0x56494e43abb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56494e43aaf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56494e43ac58 <line:608:22>
| `-NonNullAttr 0x56494e43acb0 <col:63, col:77> 1
|-FunctionDecl 0x56494e43af10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56494e43acf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56494e43ad78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x56494e43afc0 <line:612:22>
| `-NonNullAttr 0x56494e43b018 <col:63, col:80> 1 2
|-FunctionDecl 0x56494e43b228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x56494e43b068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56494e43b0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x56494e43b2d8 <col:37>
| `-NonNullAttr 0x56494e43b330 <col:78, col:92> 1
|-FunctionDecl 0x56494e43b548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x56494e43b378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56494e43b420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x56494e43b5f8 <line:618:22>
| `-NonNullAttr 0x56494e43b650 <col:63, col:80> 1 2
|-FunctionDecl 0x56494e43b818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x56494e43b698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56494e43b710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x56494e43b8c8 <line:621:22>
| `-NonNullAttr 0x56494e43b920 <col:63, col:77> 1
|-FunctionDecl 0x56494e43bbc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x56494e43ba00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x56494e43ba80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x56494e43bc78 <line:623:22>
| `-NonNullAttr 0x56494e43bcd0 <col:63, col:77> 1
|-FunctionDecl 0x56494e43be48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56494e43bd18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56494e43bf20 <line:625:22>
| `-NonNullAttr 0x56494e43bf78 <col:63, col:77> 1
|-FunctionDecl 0x56494e43c080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56494e43bfc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56494e43c128 <line:627:22>
| `-NonNullAttr 0x56494e43c180 <col:52, col:66> 1
|-FunctionDecl 0x56494e43c280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56494e43c1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56494e43c328 <line:629:22>
| `-NonNullAttr 0x56494e43c380 <col:52, col:66> 1
|-FunctionDecl 0x56494e43c480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56494e43c3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56494e43c528 <line:631:22>
| `-NonNullAttr 0x56494e43c580 <col:52, col:66> 1
|-FunctionDecl 0x56494e43c958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x56494e43c660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x56494e43c770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56494e43c7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x56494e43ca10 <line:635:22>
| `-NonNullAttr 0x56494e43ca68 <col:63, col:77> 1
|-FunctionDecl 0x56494e43cbe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56494e43cab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56494e43cc90 <line:637:22>
| `-NonNullAttr 0x56494e43cce8 <col:63, col:77> 1
|-FunctionDecl 0x56494e43cdf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56494e43cd38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56494e43ce98 <line:639:22>
| `-NonNullAttr 0x56494e43cef0 <col:52, col:66> 1
|-FunctionDecl 0x56494e43d0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56494e43cfb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56494e43d190 <line:641:22>
| `-NonNullAttr 0x56494e43d1e8 <col:63, col:77> 1
|-FunctionDecl 0x56494e43d2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56494e43d238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56494e43d398 <line:643:22>
| `-NonNullAttr 0x56494e43d3f0 <col:63, col:77> 1
|-FunctionDecl 0x56494e43d618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56494e43d438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56494e43d4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x56494e43d6c8 <line:647:22>
| `-NonNullAttr 0x56494e43d720 <col:63, col:80> 1 2
|-FunctionDecl 0x56494e43d928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x56494e43d768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x56494e43d7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x56494e43d9d8 <line:650:22>
| `-NonNullAttr 0x56494e43da30 <col:63, col:77> 1
|-FunctionDecl 0x56494e43dd78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x56494e43db10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x56494e43dc30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x56494e43de28 <line:653:22>
| `-NonNullAttr 0x56494e43de80 <col:63, col:77> 1
|-FunctionDecl 0x56494e43dfe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x56494e43dec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56494e43e090 <col:69>
|-FunctionDecl 0x56494e43e208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x56494e43e0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56494e43e2b0 <col:72>
|-FunctionDecl 0x56494e43e4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x56494e43e318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x56494e43e3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x56494e43e598 <col:44>
|-FunctionDecl 0x56494e43e7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x56494e43e600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56494e43e678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x56494e43e868 <line:660:22>
| `-NonNullAttr 0x56494e43e8c0 <col:63, col:77> 2
|-FunctionDecl 0x56494e43ed08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x56494e43e9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x56494e43eab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x56494e43ebc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x56494e43edc0 <col:47>
|-FunctionDecl 0x56494e43ff60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x56494e43ee30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56494e4400b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x56494e440020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56494e440210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x56494e440178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56494e4402d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x56494e440398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x56494e440458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x56494e440510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x56494e440590 prev 0x56494e440510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x56494e4405f8 <col:24> 'int' 0
|-VarDecl 0x56494e440628 <line:673:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x56494e4406a0 <line:674:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x56494e440720 <line:675:1, col:5> col:5 used x 'int'
|-VarDecl 0x56494e4407a0 prev 0x56494e440720 <line:676:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x56494e440808 <col:9> 'int' 0
|-VarDecl 0x56494e440840 <line:677:1, col:5> col:5 used y 'int'
|-VarDecl 0x56494e4408c0 prev 0x56494e440840 <line:678:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x56494e440928 <col:9> 'int' 0
|-VarDecl 0x56494e440958 <line:679:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x56494e4409d8 <line:680:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x56494e440a50 <line:681:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x56494e440ac8 <line:682:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x56494e440b40 <line:683:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x56494e440bb8 <line:684:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x56494e440c30 <line:685:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x56494e440ca8 <line:686:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x56494e440d20 <line:687:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x56494e440d98 <line:688:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x56494e440e10 <line:689:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x56494e440e90 <line:690:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x56494e440f70 <line:691:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x56494e440fe8 <line:692:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x56494e441068 <line:693:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x56494e4410e0 <line:694:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x56494e441160 <line:695:1, col:5> col:5 used z 'int'
|-VarDecl 0x56494e4411e0 prev 0x56494e441160 <line:696:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x56494e441248 <col:9> 'int' 0
|-VarDecl 0x56494e441278 <line:697:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x56494e4412f0 <line:698:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x56494e441408 prev 0x56494e43ff60 <line:699:1, line:713:1> line:699:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x56494e441370 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56494e4419b8 <line:700:1, line:713:1>
|   |-CallExpr 0x56494e441518 <line:701:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56494e441500 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56494e4414b0 <col:3> 'void ()' Function 0x56494e3e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56494e441578 <line:702:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56494e441538 <col:3> 'int' lvalue Var 0x56494e4411e0 'z' 'int'
|   | `-IntegerLiteral 0x56494e441558 <col:7> 'int' 2
|   |-CallExpr 0x56494e4415d0 <line:703:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56494e4415b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56494e441598 <col:3> 'void ()' Function 0x56494e3e7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56494e441628 <line:704:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56494e441610 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56494e4415f0 <col:3> 'void ()' Function 0x56494e3e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56494e441688 <line:705:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56494e441648 <col:3> 'int' lvalue Var 0x56494e4407a0 'x' 'int'
|   | `-IntegerLiteral 0x56494e441668 <col:7> 'int' 1
|   |-CallExpr 0x56494e4416e0 <line:706:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56494e4416c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56494e4416a8 <col:3> 'void ()' Function 0x56494e3e7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56494e441738 <line:707:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56494e441720 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56494e441700 <col:3> 'void ()' Function 0x56494e3e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x56494e441790 <line:708:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56494e441778 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56494e441758 <col:3> 'void ()' Function 0x56494e3e7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56494e4417e8 <line:709:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56494e4417d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56494e4417b0 <col:3> 'void ()' Function 0x56494e3e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56494e4418a0 <line:710:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56494e441808 <col:3> 'int' lvalue Var 0x56494e440590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56494e441880 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56494e441868 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56494e441828 <col:22> 'int' lvalue Var 0x56494e440590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56494e441848 <col:41> 'int' 1
|   |-CallExpr 0x56494e4418f8 <line:711:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56494e4418e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56494e4418c0 <col:3> 'void ()' Function 0x56494e3e7410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56494e4419a8 <line:712:3, col:36>
|     `-CallExpr 0x56494e441988 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56494e441970 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56494e441918 <col:10> 'void *(void)' Function 0x56494e3e6e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56494e441ad8 prev 0x56494e4400b8 <line:714:1, line:733:1> line:714:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x56494e441a40 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56494e442d00 <line:715:1, line:733:1>
|   |-CallExpr 0x56494e441bb8 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56494e441ba0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56494e441b80 <col:3> 'void ()' Function 0x56494e3e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56494e441c18 <line:717:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56494e441bd8 <col:3> 'int' lvalue Var 0x56494e4407a0 'x' 'int'
|   | `-IntegerLiteral 0x56494e441bf8 <col:7> 'int' 2
|   |-CallExpr 0x56494e441c70 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56494e441c58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56494e441c38 <col:3> 'void ()' Function 0x56494e3e7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56494e441cc8 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56494e441cb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56494e441c90 <col:3> 'void ()' Function 0x56494e3e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56494e441d28 <line:720:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56494e441ce8 <col:3> 'int' lvalue Var 0x56494e4408c0 'y' 'int'
|   | `-IntegerLiteral 0x56494e441d08 <col:7> 'int' 1
|   |-CallExpr 0x56494e441d80 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56494e441d68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56494e441d48 <col:3> 'void ()' Function 0x56494e3e7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56494e441dd8 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56494e441dc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56494e441da0 <col:3> 'void ()' Function 0x56494e3e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56494e4420d8 <line:723:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56494e441df8 <col:3> 'int' lvalue Var 0x56494e4408c0 'y' 'int'
|   | `-ConditionalOperator 0x56494e4420a8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56494e441eb8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56494e441e70 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56494e441e58 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56494e441e18 <col:7> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56494e441ea0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56494e441e88 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56494e441e38 <col:25> '_Bool' lvalue Var 0x56494e440b40 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x56494e442090 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56494e441ed8 <col:42> 'int' lvalue Var 0x56494e440f70 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x56494e442070 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56494e442040 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56494e441fb0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56494e441f50 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56494e441f38 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56494e441ef8 <col:55> '_Bool' lvalue Var 0x56494e4410e0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56494e441f98 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56494e441f80 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56494e441f18 <col:73> '_Bool' lvalue Var 0x56494e440d20 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x56494e442010 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56494e441fd0 <col:90> 'int' lvalue Var 0x56494e441068 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56494e442028 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56494e441ff0 <col:102> 'int' lvalue Var 0x56494e4408c0 'y' 'int'
|   |-BinaryOperator 0x56494e4422e0 <line:724:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56494e4420f8 <col:3> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56494e4422c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56494e442298 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56494e4421b8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56494e442170 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56494e442158 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56494e442118 <col:20> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56494e4421a0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56494e442188 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56494e442138 <col:38> '_Bool' lvalue Var 0x56494e440b40 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56494e442250 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56494e442208 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56494e4421d8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56494e442280 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56494e442268 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56494e442230 <col:66> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56494e4425c8 <line:725:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56494e442300 <col:3> '_Bool' lvalue Var 0x56494e4410e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56494e4425b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56494e442580 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56494e4424a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56494e4423c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56494e442378 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56494e442360 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56494e442320 <col:20> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56494e4423a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56494e442390 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56494e442340 <col:38> '_Bool' lvalue Var 0x56494e440b40 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56494e442480 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56494e442438 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56494e442420 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56494e4423e0 <col:56> '_Bool' lvalue Var 0x56494e4410e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56494e442468 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56494e442450 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56494e442400 <col:74> '_Bool' lvalue Var 0x56494e440d20 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56494e442538 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56494e4424f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56494e4424c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56494e442568 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56494e442550 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56494e442518 <col:102> '_Bool' lvalue Var 0x56494e4410e0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56494e4427d0 <line:726:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56494e4425e8 <col:3> '_Bool' lvalue Var 0x56494e440b40 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56494e4427b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56494e442788 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56494e4426a8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56494e442660 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56494e442648 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56494e442608 <col:20> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56494e442690 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56494e442678 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56494e442628 <col:38> '_Bool' lvalue Var 0x56494e440b40 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56494e442740 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56494e4426f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56494e4426c8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56494e442770 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56494e442758 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56494e442720 <col:66> '_Bool' lvalue Var 0x56494e440b40 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56494e442ab8 <line:727:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56494e4427f0 <col:3> '_Bool' lvalue Var 0x56494e440d20 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56494e442aa0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56494e442a70 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56494e442990 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56494e4428b0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56494e442868 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56494e442850 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56494e442810 <col:20> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56494e442898 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56494e442880 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56494e442830 <col:38> '_Bool' lvalue Var 0x56494e440b40 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56494e442970 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56494e442928 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56494e442910 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56494e4428d0 <col:56> '_Bool' lvalue Var 0x56494e4410e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56494e442958 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56494e442940 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56494e4428f0 <col:74> '_Bool' lvalue Var 0x56494e440d20 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56494e442a28 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56494e4429e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56494e4429b0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56494e442a58 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56494e442a40 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56494e442a08 <col:102> '_Bool' lvalue Var 0x56494e440d20 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x56494e442b10 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56494e442af8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56494e442ad8 <col:3> 'void ()' Function 0x56494e3e7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56494e442b68 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56494e442b50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56494e442b30 <col:3> 'void ()' Function 0x56494e3e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56494e442c20 <line:730:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56494e442b88 <col:3> 'int' lvalue Var 0x56494e440590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56494e442c00 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56494e442be8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56494e442ba8 <col:22> 'int' lvalue Var 0x56494e440590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56494e442bc8 <col:41> 'int' 1
|   |-CallExpr 0x56494e442c78 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56494e442c60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56494e442c40 <col:3> 'void ()' Function 0x56494e3e7410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56494e442cf0 <line:732:3, col:36>
|     `-CallExpr 0x56494e442cd0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56494e442cb8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56494e442c98 <col:10> 'void *(void)' Function 0x56494e3e6e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56494e442e48 prev 0x56494e440210 <line:734:1, line:762:1> line:734:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x56494e442db0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56494e444628 <line:735:1, line:762:1>
|   |-CallExpr 0x56494e442f28 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56494e442f10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56494e442ef0 <col:3> 'void ()' Function 0x56494e3e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56494e442fc8 <line:737:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56494e442f48 <col:3> 'int' lvalue Var 0x56494e441068 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x56494e442fb0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56494e442f90 <col:15> 'int' lvalue Var 0x56494e440f70 'y$w_buff0' 'int'
|   |-BinaryOperator 0x56494e443028 <line:738:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56494e442fe8 <col:3> 'int' lvalue Var 0x56494e440f70 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x56494e443008 <col:15> 'int' 2
|   |-BinaryOperator 0x56494e4430a0 <line:739:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56494e443048 <col:3> '_Bool' lvalue Var 0x56494e4410e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56494e443088 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56494e443068 <col:20> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56494e443138 <line:740:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56494e4430c0 <col:3> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x56494e443110 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56494e4430e0 <col:27> 'int' 1
|   |-CallExpr 0x56494e4432b8 <line:741:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x56494e4432a0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x56494e443158 <col:3> 'void (int)' Function 0x56494e3e70d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x56494e443258 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x56494e443238 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x56494e443218 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x56494e4431d0 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x56494e4431b8 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x56494e443178 <col:23> '_Bool' lvalue Var 0x56494e4410e0 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x56494e443200 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x56494e4431e8 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x56494e443198 <col:41> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56494e443338 <line:742:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56494e4432e0 <col:3> '_Bool' lvalue Var 0x56494e440c30 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x56494e443320 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56494e443300 <col:20> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x56494e4433b0 <line:743:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56494e443358 <col:3> '_Bool' lvalue Var 0x56494e440ca8 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56494e443398 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56494e443378 <col:20> '_Bool' lvalue Var 0x56494e440ac8 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56494e443428 <line:744:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56494e4433d0 <col:3> '_Bool' lvalue Var 0x56494e440d20 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56494e443410 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56494e4433f0 <col:20> '_Bool' lvalue Var 0x56494e440b40 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56494e4434a0 <line:745:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56494e443448 <col:3> '_Bool' lvalue Var 0x56494e440d98 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56494e443488 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56494e443468 <col:20> '_Bool' lvalue Var 0x56494e440bb8 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56494e443538 <line:746:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56494e4434c0 <col:3> '_Bool' lvalue Var 0x56494e440bb8 'y$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x56494e443510 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56494e4434e0 <col:27> 'int' 1
|   |-CallExpr 0x56494e443590 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56494e443578 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56494e443558 <col:3> 'void ()' Function 0x56494e3e7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56494e4435e8 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56494e4435d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56494e4435b0 <col:3> 'void ()' Function 0x56494e3e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56494e443648 <line:749:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56494e443608 <col:3> 'int' lvalue Var 0x56494e4411e0 'z' 'int'
|   | `-IntegerLiteral 0x56494e443628 <col:7> 'int' 1
|   |-CallExpr 0x56494e4436a0 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56494e443688 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56494e443668 <col:3> 'void ()' Function 0x56494e3e7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56494e4436f8 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56494e4436e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56494e4436c0 <col:3> 'void ()' Function 0x56494e3e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56494e4439e0 <line:752:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56494e443718 <col:3> 'int' lvalue Var 0x56494e4408c0 'y' 'int'
|   | `-ConditionalOperator 0x56494e4439b0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56494e4437d8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56494e443790 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56494e443778 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56494e443738 <col:7> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56494e4437c0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56494e4437a8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56494e443758 <col:25> '_Bool' lvalue Var 0x56494e440bb8 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x56494e443998 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56494e4437f8 <col:42> 'int' lvalue Var 0x56494e440f70 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x56494e443978 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56494e443948 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56494e4438b8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56494e443870 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56494e443858 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56494e443818 <col:55> '_Bool' lvalue Var 0x56494e4410e0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56494e4438a0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56494e443888 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56494e443838 <col:73> '_Bool' lvalue Var 0x56494e440d98 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56494e443918 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56494e4438d8 <col:90> 'int' lvalue Var 0x56494e441068 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56494e443930 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56494e4438f8 <col:102> 'int' lvalue Var 0x56494e4408c0 'y' 'int'
|   |-BinaryOperator 0x56494e443be8 <line:753:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56494e443a00 <col:3> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56494e443bd0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56494e443ba0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56494e443ac0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56494e443a78 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56494e443a60 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56494e443a20 <col:20> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56494e443aa8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56494e443a90 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56494e443a40 <col:38> '_Bool' lvalue Var 0x56494e440bb8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56494e443b58 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56494e443b10 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56494e443ae0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56494e443b88 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56494e443b70 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56494e443b38 <col:66> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56494e443ed0 <line:754:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56494e443c08 <col:3> '_Bool' lvalue Var 0x56494e4410e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56494e443eb8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56494e443e88 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56494e443da8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56494e443cc8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56494e443c80 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56494e443c68 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56494e443c28 <col:20> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56494e443cb0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56494e443c98 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56494e443c48 <col:38> '_Bool' lvalue Var 0x56494e440bb8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x56494e443d88 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56494e443d40 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56494e443d28 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56494e443ce8 <col:56> '_Bool' lvalue Var 0x56494e4410e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56494e443d70 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56494e443d58 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56494e443d08 <col:74> '_Bool' lvalue Var 0x56494e440d98 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56494e443e40 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56494e443df8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56494e443dc8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56494e443e70 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56494e443e58 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56494e443e20 <col:102> '_Bool' lvalue Var 0x56494e4410e0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56494e4440f8 <line:755:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56494e443ef0 <col:3> '_Bool' lvalue Var 0x56494e440bb8 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56494e4440e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56494e4440b0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56494e443fd0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56494e443f68 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56494e443f50 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56494e443f10 <col:20> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56494e443fb8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56494e443fa0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56494e443f30 <col:38> '_Bool' lvalue Var 0x56494e440bb8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56494e444068 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56494e444020 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56494e443ff0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56494e444098 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56494e444080 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56494e444048 <col:66> '_Bool' lvalue Var 0x56494e440bb8 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56494e4443e0 <line:756:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56494e444118 <col:3> '_Bool' lvalue Var 0x56494e440d98 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56494e4443c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56494e444398 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56494e4442b8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56494e4441d8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56494e444190 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56494e444178 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56494e444138 <col:20> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56494e4441c0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56494e4441a8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56494e444158 <col:38> '_Bool' lvalue Var 0x56494e440bb8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x56494e444298 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56494e444250 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56494e444238 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56494e4441f8 <col:56> '_Bool' lvalue Var 0x56494e4410e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56494e444280 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56494e444268 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56494e444218 <col:74> '_Bool' lvalue Var 0x56494e440d98 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56494e444350 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56494e444308 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56494e4442d8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56494e444380 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56494e444368 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56494e444330 <col:102> '_Bool' lvalue Var 0x56494e440d98 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x56494e444438 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56494e444420 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56494e444400 <col:3> 'void ()' Function 0x56494e3e7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56494e444490 <line:758:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56494e444478 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56494e444458 <col:3> 'void ()' Function 0x56494e3e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56494e444548 <line:759:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56494e4444b0 <col:3> 'int' lvalue Var 0x56494e440590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56494e444528 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56494e444510 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56494e4444d0 <col:22> 'int' lvalue Var 0x56494e440590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56494e4444f0 <col:41> 'int' 1
|   |-CallExpr 0x56494e4445a0 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56494e444588 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56494e444568 <col:3> 'void ()' Function 0x56494e3e7410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56494e444618 <line:761:3, col:36>
|     `-CallExpr 0x56494e4445f8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56494e4445e0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56494e4445c0 <col:10> 'void *(void)' Function 0x56494e3e6e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56494e444728 prev 0x56494e4402d8 <line:763:1, line:765:1> line:763:6 fence 'void ()'
| `-CompoundStmt 0x56494e4447c8 <line:764:1, line:765:1>
|-FunctionDecl 0x56494e4447f8 prev 0x56494e440398 <line:766:1, line:768:1> line:766:6 isync 'void ()'
| `-CompoundStmt 0x56494e444898 <line:767:1, line:768:1>
|-FunctionDecl 0x56494e4448c8 prev 0x56494e440458 <line:769:1, line:771:1> line:769:6 lwfence 'void ()'
| `-CompoundStmt 0x56494e444968 <line:770:1, line:771:1>
`-FunctionDecl 0x56494e4449d8 <line:772:1, line:809:1> line:772:5 main 'int ()'
  `-CompoundStmt 0x56494e448ff0 <line:773:1, line:809:1>
    |-DeclStmt 0x56494e444af0 <line:774:3, col:18>
    | `-VarDecl 0x56494e444a88 <col:3, col:13> col:13 used t2494 'pthread_t':'unsigned long'
    |-CallExpr 0x56494e444cf8 <line:775:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56494e444ce0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56494e444b08 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56494e4278f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56494e444b48 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56494e444b28 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56494e444a88 't2494' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56494e444d38 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56494e444bc0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56494e444b98 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56494e444b60 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56494e444d50 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56494e444be0 <col:39> 'void *(void *)' Function 0x56494e441408 'P0' 'void *(void *)'
    | `-ParenExpr 0x56494e444c60 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56494e444c38 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56494e444c00 <col:52> 'int' 0
    |-DeclStmt 0x56494e444de0 <line:776:3, col:18>
    | `-VarDecl 0x56494e444d78 <col:3, col:13> col:13 used t2495 'pthread_t':'unsigned long'
    |-CallExpr 0x56494e444fb0 <line:777:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56494e444f70 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56494e444df8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56494e4278f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56494e444e38 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56494e444e18 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56494e444d78 't2495' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56494e444ff0 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56494e444eb0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56494e444e88 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56494e444e50 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56494e445008 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56494e444ed0 <col:39> 'void *(void *)' Function 0x56494e441ad8 'P1' 'void *(void *)'
    | `-ParenExpr 0x56494e444f50 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56494e444f28 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56494e444ef0 <col:52> 'int' 0
    |-DeclStmt 0x56494e445098 <line:778:3, col:18>
    | `-VarDecl 0x56494e445030 <col:3, col:13> col:13 used t2496 'pthread_t':'unsigned long'
    |-CallExpr 0x56494e445240 <line:779:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56494e445228 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56494e4450b0 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56494e4278f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56494e4450f0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56494e4450d0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56494e445030 't2496' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56494e445280 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56494e445168 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56494e445140 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56494e445108 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56494e445298 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56494e445188 <col:39> 'void *(void *)' Function 0x56494e442e48 'P2' 'void *(void *)'
    | `-ParenExpr 0x56494e445208 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56494e4451e0 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56494e4451a8 <col:52> 'int' 0
    |-CallExpr 0x56494e4452e8 <line:780:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56494e4452d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56494e4452b0 <col:3> 'void ()' Function 0x56494e3e7350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56494e4453b8 <line:781:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x56494e445308 <col:3> '_Bool' lvalue Var 0x56494e440628 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x56494e4453a0 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x56494e445380 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x56494e445368 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x56494e445328 <col:21> 'int' lvalue Var 0x56494e440590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x56494e445348 <col:41> 'int' 3
    |-CallExpr 0x56494e445410 <line:782:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56494e4453f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56494e4453d8 <col:3> 'void ()' Function 0x56494e3e7410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56494e445488 <line:783:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56494e445470 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56494e445430 <col:3> 'void (int)' Function 0x56494e3e6ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x56494e4454c8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56494e4454b0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56494e445450 <col:21> '_Bool' lvalue Var 0x56494e440628 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x56494e445518 <line:784:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56494e445500 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56494e4454e0 <col:3> 'void ()' Function 0x56494e3e7350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56494e445800 <line:785:3, col:103> 'int' '='
    | |-DeclRefExpr 0x56494e445538 <col:3> 'int' lvalue Var 0x56494e4408c0 'y' 'int'
    | `-ConditionalOperator 0x56494e4457d0 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x56494e4455f8 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x56494e4455b0 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x56494e445598 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x56494e445558 <col:7> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x56494e4455e0 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x56494e4455c8 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x56494e445578 <col:25> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x56494e4457b8 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56494e445618 <col:42> 'int' lvalue Var 0x56494e440f70 'y$w_buff0' 'int'
    |   `-ParenExpr 0x56494e445798 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x56494e445768 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x56494e4456d8 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x56494e445690 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x56494e445678 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x56494e445638 <col:55> '_Bool' lvalue Var 0x56494e4410e0 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x56494e4456c0 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x56494e4456a8 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x56494e445658 <col:73> '_Bool' lvalue Var 0x56494e440c30 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56494e445738 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56494e4456f8 <col:90> 'int' lvalue Var 0x56494e441068 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x56494e445750 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x56494e445718 <col:102> 'int' lvalue Var 0x56494e4408c0 'y' 'int'
    |-BinaryOperator 0x56494e445a08 <line:786:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56494e445820 <col:3> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x56494e4459f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56494e4459c0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56494e4458e0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56494e445898 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56494e445880 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56494e445840 <col:20> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56494e4458c8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56494e4458b0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56494e445860 <col:38> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56494e445978 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56494e445930 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56494e445900 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56494e4459a8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56494e445990 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56494e445958 <col:66> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x56494e445cf0 <line:787:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56494e445a28 <col:3> '_Bool' lvalue Var 0x56494e4410e0 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x56494e445cd8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56494e445ca8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56494e445bc8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56494e445ae8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56494e445aa0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56494e445a88 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56494e445a48 <col:20> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56494e445ad0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56494e445ab8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56494e445a68 <col:38> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56494e445ba8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56494e445b60 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56494e445b48 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56494e445b08 <col:56> '_Bool' lvalue Var 0x56494e4410e0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56494e445b90 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56494e445b78 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56494e445b28 <col:74> '_Bool' lvalue Var 0x56494e440c30 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56494e445c60 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56494e445c18 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56494e445be8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56494e445c90 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56494e445c78 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56494e445c40 <col:102> '_Bool' lvalue Var 0x56494e4410e0 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x56494e445ef8 <line:788:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56494e445d10 <col:3> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56494e445ee0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56494e445eb0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56494e445dd0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56494e445d88 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56494e445d70 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56494e445d30 <col:20> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56494e445db8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56494e445da0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56494e445d50 <col:38> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56494e445e68 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56494e445e20 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56494e445df0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56494e445e98 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56494e445e80 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56494e445e48 <col:66> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x56494e4461f8 <line:789:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56494e445f18 <col:3> '_Bool' lvalue Var 0x56494e440c30 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56494e4461e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56494e4461b0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56494e4460d0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56494e445ff0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56494e445f90 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56494e445f78 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56494e445f38 <col:20> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56494e445fd8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56494e445fc0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56494e445f58 <col:38> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56494e4460b0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56494e446068 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56494e446050 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56494e446010 <col:56> '_Bool' lvalue Var 0x56494e4410e0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56494e446098 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56494e446080 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56494e446030 <col:74> '_Bool' lvalue Var 0x56494e440c30 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56494e446168 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56494e446120 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56494e4460f0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56494e446198 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56494e446180 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56494e446148 <col:102> '_Bool' lvalue Var 0x56494e440c30 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x56494e446250 <line:790:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56494e446238 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56494e446218 <col:3> 'void ()' Function 0x56494e3e7410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56494e4462a8 <line:791:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56494e446290 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56494e446270 <col:3> 'void ()' Function 0x56494e3e7350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56494e446358 <line:792:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x56494e4462c8 <col:3> '_Bool' lvalue Var 0x56494e441278 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x56494e446340 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x56494e446320 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x56494e446308 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x56494e4462e8 <col:19> 'void *(void)' Function 0x56494e3e6e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x56494e446408 <line:793:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x56494e446378 <col:3> '_Bool' lvalue Var 0x56494e4412f0 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x56494e4463f0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x56494e4463d0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x56494e4463b8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x56494e446398 <col:19> 'void *(void)' Function 0x56494e3e6e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x56494e446480 <line:794:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x56494e446428 <col:3> '_Bool' lvalue Var 0x56494e440958 'y$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x56494e446468 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x56494e446448 <col:21> '_Bool' lvalue Var 0x56494e4412f0 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x56494e4464f8 <line:795:3, col:15> 'int' '='
    | |-DeclRefExpr 0x56494e4464a0 <col:3> 'int' lvalue Var 0x56494e4409d8 'y$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x56494e4464e0 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x56494e4464c0 <col:15> 'int' lvalue Var 0x56494e4408c0 'y' 'int'
    |-BinaryOperator 0x56494e446930 <line:796:3, col:162> 'int' '='
    | |-DeclRefExpr 0x56494e446518 <col:3> 'int' lvalue Var 0x56494e4408c0 'y' 'int'
    | `-ConditionalOperator 0x56494e446900 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x56494e446728 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x56494e446648 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x56494e446570 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x56494e446558 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x56494e446538 <col:8> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x56494e446628 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x56494e4465c0 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x56494e4465a8 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x56494e446588 <col:27> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x56494e446610 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x56494e4465f8 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x56494e4465d8 <col:46> '_Bool' lvalue Var 0x56494e4410e0 'y$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x56494e446708 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x56494e4466a0 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x56494e446688 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x56494e446668 <col:65> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x56494e4466f0 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x56494e4466d8 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x56494e4466b8 <col:84> '_Bool' lvalue Var 0x56494e440c30 'y$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x56494e4468e8 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56494e446748 <col:101> 'int' lvalue Var 0x56494e4408c0 'y' 'int'
    |   `-ParenExpr 0x56494e4468c8 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x56494e446898 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x56494e446808 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x56494e4467c0 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x56494e4467a8 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x56494e446768 <col:106> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x56494e4467f0 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x56494e4467d8 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x56494e446788 <col:124> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56494e446868 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56494e446828 <col:141> 'int' lvalue Var 0x56494e440f70 'y$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x56494e446880 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x56494e446848 <col:153> 'int' lvalue Var 0x56494e441068 'y$w_buff1' 'int'
    |-BinaryOperator 0x56494e446e40 <line:797:3, col:208> 'int' '='
    | |-DeclRefExpr 0x56494e446950 <col:3> 'int' lvalue Var 0x56494e440f70 'y$w_buff0' 'int'
    | `-ConditionalOperator 0x56494e446e10 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x56494e446de0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x56494e446dc8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x56494e446970 <col:15> '_Bool' lvalue Var 0x56494e4412f0 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x56494e446df8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56494e446990 <col:31> 'int' lvalue Var 0x56494e440f70 'y$w_buff0' 'int'
    |   `-ParenExpr 0x56494e446da8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x56494e446d78 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x56494e446ba0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x56494e446ac0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x56494e4469e8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x56494e4469d0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x56494e4469b0 <col:45> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x56494e446aa0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x56494e446a38 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x56494e446a20 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x56494e446a00 <col:64> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x56494e446a88 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x56494e446a70 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x56494e446a50 <col:83> '_Bool' lvalue Var 0x56494e4410e0 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x56494e446b80 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x56494e446b18 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x56494e446b00 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x56494e446ae0 <col:102> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x56494e446b68 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x56494e446b50 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x56494e446b30 <col:121> '_Bool' lvalue Var 0x56494e440c30 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56494e446d60 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56494e446bc0 <col:138> 'int' lvalue Var 0x56494e440f70 'y$w_buff0' 'int'
    |       `-ParenExpr 0x56494e446d40 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x56494e446d10 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x56494e446c80 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x56494e446c38 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x56494e446c20 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x56494e446be0 <col:151> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x56494e446c68 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x56494e446c50 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x56494e446c00 <col:169> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x56494e446ce0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56494e446ca0 <col:186> 'int' lvalue Var 0x56494e440f70 'y$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x56494e446cf8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x56494e446cc0 <col:198> 'int' lvalue Var 0x56494e440f70 'y$w_buff0' 'int'
    |-BinaryOperator 0x56494e447370 <line:798:3, col:208> 'int' '='
    | |-DeclRefExpr 0x56494e446e60 <col:3> 'int' lvalue Var 0x56494e441068 'y$w_buff1' 'int'
    | `-ConditionalOperator 0x56494e447340 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x56494e447310 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x56494e4472f8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x56494e446e80 <col:15> '_Bool' lvalue Var 0x56494e4412f0 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x56494e447328 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56494e446ea0 <col:31> 'int' lvalue Var 0x56494e441068 'y$w_buff1' 'int'
    |   `-ParenExpr 0x56494e4472d8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x56494e4472a8 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x56494e4470d0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x56494e446ff0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x56494e446ef8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x56494e446ee0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x56494e446ec0 <col:45> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x56494e446fd0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x56494e446f48 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x56494e446f30 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x56494e446f10 <col:64> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x56494e446f98 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x56494e446f80 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x56494e446f60 <col:83> '_Bool' lvalue Var 0x56494e4410e0 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x56494e4470b0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x56494e447048 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x56494e447030 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x56494e447010 <col:102> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x56494e447098 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x56494e447080 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x56494e447060 <col:121> '_Bool' lvalue Var 0x56494e440c30 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56494e447290 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56494e4470f0 <col:138> 'int' lvalue Var 0x56494e441068 'y$w_buff1' 'int'
    |       `-ParenExpr 0x56494e447270 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x56494e447240 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x56494e4471b0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x56494e447168 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x56494e447150 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x56494e447110 <col:151> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x56494e447198 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x56494e447180 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x56494e447130 <col:169> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x56494e447210 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56494e4471d0 <col:186> 'int' lvalue Var 0x56494e441068 'y$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x56494e447228 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x56494e4471f0 <col:198> 'int' lvalue Var 0x56494e441068 'y$w_buff1' 'int'
    |-BinaryOperator 0x56494e447918 <line:799:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x56494e447390 <col:3> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x56494e447900 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56494e4478d0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x56494e447888 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56494e447870 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56494e4473b0 <col:20> '_Bool' lvalue Var 0x56494e4412f0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x56494e4478b8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56494e4478a0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56494e4473d0 <col:36> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x56494e447850 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x56494e447820 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x56494e4475e0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x56494e447500 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x56494e447428 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x56494e447410 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x56494e4473f0 <col:55> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x56494e4474e0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x56494e447478 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x56494e447460 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x56494e447440 <col:74> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x56494e4474c8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x56494e4474b0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x56494e447490 <col:93> '_Bool' lvalue Var 0x56494e4410e0 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x56494e4475c0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x56494e447558 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x56494e447540 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x56494e447520 <col:112> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x56494e4475a8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x56494e447590 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x56494e447570 <col:131> '_Bool' lvalue Var 0x56494e440c30 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x56494e447808 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x56494e4477f0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x56494e447600 <col:148> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x56494e4477d0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x56494e4477a0 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x56494e4476c0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x56494e447678 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x56494e447660 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x56494e447620 <col:166> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x56494e4476a8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x56494e447690 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x56494e447640 <col:184> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x56494e447758 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x56494e447710 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x56494e4476e0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x56494e447788 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x56494e447770 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x56494e447738 <col:212> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x56494e447ee0 <line:800:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x56494e447938 <col:3> '_Bool' lvalue Var 0x56494e4410e0 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x56494e447ec8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56494e447e98 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x56494e447e50 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56494e447e38 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56494e447958 <col:20> '_Bool' lvalue Var 0x56494e4412f0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x56494e447e80 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56494e447e68 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56494e447978 <col:36> '_Bool' lvalue Var 0x56494e4410e0 'y$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x56494e447e18 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x56494e447de8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x56494e447b88 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x56494e447aa8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x56494e4479d0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x56494e4479b8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x56494e447998 <col:55> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x56494e447a88 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x56494e447a20 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x56494e447a08 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x56494e4479e8 <col:74> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x56494e447a70 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x56494e447a58 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x56494e447a38 <col:93> '_Bool' lvalue Var 0x56494e4410e0 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x56494e447b68 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x56494e447b00 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x56494e447ae8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x56494e447ac8 <col:112> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x56494e447b50 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x56494e447b38 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x56494e447b18 <col:131> '_Bool' lvalue Var 0x56494e440c30 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x56494e447dd0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x56494e447db8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x56494e447ba8 <col:148> '_Bool' lvalue Var 0x56494e4410e0 'y$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x56494e447d98 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x56494e447d68 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x56494e447c68 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x56494e447c20 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x56494e447c08 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x56494e447bc8 <col:166> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x56494e447c50 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x56494e447c38 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x56494e447be8 <col:184> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x56494e447d38 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x56494e447cb8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x56494e447c88 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x56494e447d50 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x56494e447d10 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x56494e447ce0 <col:219> 'int' 0
    |-BinaryOperator 0x56494e448498 <line:801:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x56494e447f00 <col:3> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56494e448480 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56494e448450 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x56494e448408 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56494e4483f0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56494e447f20 <col:20> '_Bool' lvalue Var 0x56494e4412f0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x56494e448438 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56494e448420 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56494e447f40 <col:36> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x56494e4483d0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x56494e4483a0 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x56494e448160 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x56494e448080 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x56494e447f98 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x56494e447f80 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x56494e447f60 <col:55> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x56494e448060 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x56494e447ff8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x56494e447fe0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x56494e447fb0 <col:74> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x56494e448048 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x56494e448030 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x56494e448010 <col:93> '_Bool' lvalue Var 0x56494e4410e0 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x56494e448140 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x56494e4480d8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x56494e4480c0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x56494e4480a0 <col:112> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x56494e448128 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x56494e448110 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x56494e4480f0 <col:131> '_Bool' lvalue Var 0x56494e440c30 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x56494e448388 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x56494e448370 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x56494e448180 <col:148> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x56494e448350 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x56494e448320 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x56494e448240 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x56494e4481f8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x56494e4481e0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x56494e4481a0 <col:166> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x56494e448228 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x56494e448210 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x56494e4481c0 <col:184> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x56494e4482d8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x56494e448290 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x56494e448260 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x56494e448308 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x56494e4482f0 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x56494e4482b8 <col:212> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x56494e448a60 <line:802:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x56494e4484b8 <col:3> '_Bool' lvalue Var 0x56494e440c30 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56494e448a48 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56494e448a18 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x56494e4489d0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56494e4489b8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56494e4484d8 <col:20> '_Bool' lvalue Var 0x56494e4412f0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x56494e448a00 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56494e4489e8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56494e4484f8 <col:36> '_Bool' lvalue Var 0x56494e440c30 'y$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x56494e448998 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x56494e448968 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x56494e448708 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x56494e448628 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x56494e448550 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x56494e448538 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x56494e448518 <col:55> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x56494e448608 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x56494e4485a0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x56494e448588 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x56494e448568 <col:74> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x56494e4485f0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x56494e4485d8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x56494e4485b8 <col:93> '_Bool' lvalue Var 0x56494e4410e0 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x56494e4486e8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x56494e448680 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x56494e448668 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x56494e448648 <col:112> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x56494e4486d0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x56494e4486b8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x56494e448698 <col:131> '_Bool' lvalue Var 0x56494e440c30 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x56494e448950 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x56494e448938 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x56494e448728 <col:148> '_Bool' lvalue Var 0x56494e440c30 'y$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x56494e448918 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x56494e4488e8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x56494e4487e8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x56494e4487a0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x56494e448788 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x56494e448748 <col:166> '_Bool' lvalue Var 0x56494e440fe8 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x56494e4487d0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x56494e4487b8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x56494e448768 <col:184> '_Bool' lvalue Var 0x56494e440a50 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x56494e4488b8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x56494e448838 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x56494e448808 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x56494e4488d0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x56494e448890 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x56494e448860 <col:219> 'int' 0
    |-BinaryOperator 0x56494e448c98 <line:803:3, col:49> '_Bool' '='
    | |-DeclRefExpr 0x56494e448a80 <col:3> '_Bool' lvalue Var 0x56494e4406a0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x56494e448c80 <col:21, col:49> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x56494e448c68 <col:21, col:49> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x56494e448c48 <col:22, col:49> 'int'
    |       `-BinaryOperator 0x56494e448c28 <col:23, col:48> 'int' '&&'
    |         |-BinaryOperator 0x56494e448b90 <col:23, col:38> 'int' '&&'
    |         | |-BinaryOperator 0x56494e448af8 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x56494e448ae0 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x56494e448aa0 <col:23> 'int' lvalue Var 0x56494e4407a0 'x' 'int'
    |         | | `-IntegerLiteral 0x56494e448ac0 <col:28> 'int' 2
    |         | `-BinaryOperator 0x56494e448b70 <col:33, col:38> 'int' '=='
    |         |   |-ImplicitCastExpr 0x56494e448b58 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x56494e448b18 <col:33> 'int' lvalue Var 0x56494e4408c0 'y' 'int'
    |         |   `-IntegerLiteral 0x56494e448b38 <col:38> 'int' 2
    |         `-BinaryOperator 0x56494e448c08 <col:43, col:48> 'int' '=='
    |           |-ImplicitCastExpr 0x56494e448bf0 <col:43> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56494e448bb0 <col:43> 'int' lvalue Var 0x56494e4411e0 'z' 'int'
    |           `-IntegerLiteral 0x56494e448bd0 <col:48> 'int' 2
    |-BinaryOperator 0x56494e448dc8 <line:804:3, col:37> 'int' '='
    | |-DeclRefExpr 0x56494e448cb8 <col:3> 'int' lvalue Var 0x56494e4408c0 'y' 'int'
    | `-ConditionalOperator 0x56494e448d98 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x56494e448d50 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x56494e448d38 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x56494e448cd8 <col:7> '_Bool' lvalue Var 0x56494e440958 'y$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x56494e448d68 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56494e448cf8 <col:25> 'int' lvalue Var 0x56494e4409d8 'y$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x56494e448d80 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x56494e448d18 <col:37> 'int' lvalue Var 0x56494e4408c0 'y' 'int'
    |-BinaryOperator 0x56494e448e60 <line:805:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x56494e448de8 <col:3> '_Bool' lvalue Var 0x56494e440958 'y$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x56494e448e38 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x56494e448e08 <col:28> 'int' 0
    |-CallExpr 0x56494e448eb8 <line:806:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56494e448ea0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56494e448e80 <col:3> 'void ()' Function 0x56494e3e7410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56494e448f30 <line:807:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56494e448f18 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56494e448ed8 <col:3> 'void (int)' Function 0x56494e3e70d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x56494e448f70 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56494e448f58 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56494e448ef8 <col:21> '_Bool' lvalue Var 0x56494e4406a0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x56494e448fa8 <line:808:3, col:10>
      `-IntegerLiteral 0x56494e448f88 <col:10> 'int' 0
