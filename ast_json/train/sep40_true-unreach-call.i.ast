TranslationUnitDecl 0x56149bc5ef88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x56149bc5f848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x56149bc5f520 '__int128'
|-TypedefDecl 0x56149bc5f8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x56149bc5f540 'unsigned __int128'
|-TypedefDecl 0x56149bc5fbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x56149bc5f990 'struct __NSConstantString_tag'
|   `-Record 0x56149bc5f910 '__NSConstantString_tag'
|-TypedefDecl 0x56149bc5fc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x56149bc5fc20 'char *'
|   `-BuiltinType 0x56149bc5f020 'char'
|-TypedefDecl 0x56149bc9ee50 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x56149bc5ff00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x56149bc5fd40 'struct __va_list_tag'
|     `-Record 0x56149bc5fcc0 '__va_list_tag'
|-FunctionDecl 0x56149bc9ef30 <reducercommutativity/sep40_true-unreach-call.i:1:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x56149bc9f078 <line:2:1, col:34> col:12 used __VERIFIER_nondet_int 'int ()' extern
|-FunctionDecl 0x56149bc9f338 <line:4:1, line:15:1> line:4:5 used sep 'int (int *)'
| |-ParmVarDecl 0x56149bc9f228 <col:10, col:18> col:14 used x 'int *':'int *'
| `-CompoundStmt 0x56149bc9f888 <line:5:1, line:15:1>
|   |-DeclStmt 0x56149bc9f498 <line:6:3, col:19>
|   | `-VarDecl 0x56149bc9f3f8 <col:3, col:18> col:13 used ret 'long long' cinit
|   |   `-ImplicitCastExpr 0x56149bc9f480 <col:18> 'long long' <IntegralCast>
|   |     `-IntegerLiteral 0x56149bc9f460 <col:18> 'int' 0
|   |-ForStmt 0x56149bc9f7f0 <line:7:3, line:13:3>
|   | |-DeclStmt 0x56149bc9f550 <line:7:7, col:14>
|   | | `-VarDecl 0x56149bc9f4c8 <col:7, col:13> col:11 used i 'int' cinit
|   | |   `-IntegerLiteral 0x56149bc9f530 <col:13> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x56149bc9f5c0 <col:15, col:17> 'int' '<'
|   | | |-ImplicitCastExpr 0x56149bc9f5a8 <col:15> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x56149bc9f568 <col:15> 'int' lvalue Var 0x56149bc9f4c8 'i' 'int'
|   | | `-IntegerLiteral 0x56149bc9f588 <col:17> 'int' 40
|   | |-UnaryOperator 0x56149bc9f600 <col:20, col:21> 'int' postfix '++'
|   | | `-DeclRefExpr 0x56149bc9f5e0 <col:20> 'int' lvalue Var 0x56149bc9f4c8 'i' 'int'
|   | `-CompoundStmt 0x56149bc9f7d8 <line:8:3, line:13:3>
|   |   `-IfStmt 0x56149bc9f7b0 <line:9:5, line:12:10> has_else
|   |     |-BinaryOperator 0x56149bc9f720 <line:9:8, col:16> 'int' '=='
|   |     | |-BinaryOperator 0x56149bc9f6e0 <col:8, col:13> 'int' '%'
|   |     | | |-ImplicitCastExpr 0x56149bc9f6c8 <col:8, col:11> 'int' <LValueToRValue>
|   |     | | | `-ArraySubscriptExpr 0x56149bc9f688 <col:8, col:11> 'int' lvalue
|   |     | | |   |-ImplicitCastExpr 0x56149bc9f658 <col:8> 'int *':'int *' <LValueToRValue>
|   |     | | |   | `-DeclRefExpr 0x56149bc9f618 <col:8> 'int *':'int *' lvalue ParmVar 0x56149bc9f228 'x' 'int *':'int *'
|   |     | | |   `-ImplicitCastExpr 0x56149bc9f670 <col:10> 'int' <LValueToRValue>
|   |     | | |     `-DeclRefExpr 0x56149bc9f638 <col:10> 'int' lvalue Var 0x56149bc9f4c8 'i' 'int'
|   |     | | `-IntegerLiteral 0x56149bc9f6a8 <col:13> 'int' 2
|   |     | `-IntegerLiteral 0x56149bc9f700 <col:16> 'int' 0
|   |     |-UnaryOperator 0x56149bc9f760 <line:10:7, col:10> 'long long' postfix '++'
|   |     | `-DeclRefExpr 0x56149bc9f740 <col:7> 'long long' lvalue Var 0x56149bc9f3f8 'ret' 'long long'
|   |     `-UnaryOperator 0x56149bc9f798 <line:12:7, col:10> 'long long' postfix '--'
|   |       `-DeclRefExpr 0x56149bc9f778 <col:7> 'long long' lvalue Var 0x56149bc9f3f8 'ret' 'long long'
|   `-ReturnStmt 0x56149bc9f878 <line:14:5, col:12>
|     `-ImplicitCastExpr 0x56149bc9f860 <col:12> 'int' <IntegralCast>
|       `-ImplicitCastExpr 0x56149bc9f848 <col:12> 'long long' <LValueToRValue>
|         `-DeclRefExpr 0x56149bc9f828 <col:12> 'long long' lvalue Var 0x56149bc9f3f8 'ret' 'long long'
`-FunctionDecl 0x56149bc9f8d8 <line:18:1, line:45:1> line:18:5 main 'int ()'
  `-CompoundStmt 0x56149bcc5658 <line:19:1, line:45:1>
    |-DeclStmt 0x56149bc9fa40 <line:20:3, col:12>
    | `-VarDecl 0x56149bc9f9d8 <col:3, col:11> col:7 used x 'int [40]'
    |-DeclStmt 0x56149bc9fad8 <line:21:3, col:11>
    | `-VarDecl 0x56149bc9fa70 <col:3, col:7> col:7 used temp 'int'
    |-DeclStmt 0x56149bc9fb70 <line:22:3, col:10>
    | `-VarDecl 0x56149bc9fb08 <col:3, col:7> col:7 used ret 'int'
    |-DeclStmt 0x56149bc9fc08 <line:23:3, col:11>
    | `-VarDecl 0x56149bc9fba0 <col:3, col:7> col:7 used ret2 'int'
    |-DeclStmt 0x56149bc9fca0 <line:24:3, col:11>
    | `-VarDecl 0x56149bc9fc38 <col:3, col:7> col:7 used ret5 'int'
    |-ForStmt 0x56149bcc48d0 <line:26:3, line:28:3>
    | |-DeclStmt 0x56149bc9fd58 <line:26:8, col:17>
    | | `-VarDecl 0x56149bc9fcd0 <col:8, col:16> col:12 used i 'int' cinit
    | |   `-IntegerLiteral 0x56149bc9fd38 <col:16> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x56149bc9fdc8 <col:19, col:23> 'int' '<'
    | | |-ImplicitCastExpr 0x56149bc9fdb0 <col:19> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x56149bc9fd70 <col:19> 'int' lvalue Var 0x56149bc9fcd0 'i' 'int'
    | | `-IntegerLiteral 0x56149bc9fd90 <col:23> 'int' 40
    | |-UnaryOperator 0x56149bc9fe08 <col:27, col:28> 'int' postfix '++'
    | | `-DeclRefExpr 0x56149bc9fde8 <col:27> 'int' lvalue Var 0x56149bc9fcd0 'i' 'int'
    | `-CompoundStmt 0x56149bcc48b8 <col:32, line:28:3>
    |   `-BinaryOperator 0x56149bcc4898 <line:27:5, col:34> 'int' '='
    |     |-ArraySubscriptExpr 0x56149bcc47f0 <col:5, col:8> 'int' lvalue
    |     | |-ImplicitCastExpr 0x56149bcc47c0 <col:5> 'int *' <ArrayToPointerDecay>
    |     | | `-DeclRefExpr 0x56149bc9fe20 <col:5> 'int [40]' lvalue Var 0x56149bc9f9d8 'x' 'int [40]'
    |     | `-ImplicitCastExpr 0x56149bcc47d8 <col:7> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56149bcc47a0 <col:7> 'int' lvalue Var 0x56149bc9fcd0 'i' 'int'
    |     `-CallExpr 0x56149bcc4878 <col:12, col:34> 'int'
    |       `-ImplicitCastExpr 0x56149bcc4860 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0x56149bcc4810 <col:12> 'int ()' Function 0x56149bc9f078 '__VERIFIER_nondet_int' 'int ()'
    |-BinaryOperator 0x56149bcc4a28 <line:30:3, col:14> 'int' '='
    | |-DeclRefExpr 0x56149bcc4908 <col:3> 'int' lvalue Var 0x56149bc9fb08 'ret' 'int'
    | `-CallExpr 0x56149bcc49e8 <col:9, col:14> 'int'
    |   |-ImplicitCastExpr 0x56149bcc49d0 <col:9> 'int (*)(int *)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x56149bcc4928 <col:9> 'int (int *)' Function 0x56149bc9f338 'sep' 'int (int *)'
    |   `-ImplicitCastExpr 0x56149bcc4a10 <col:13> 'int *' <ArrayToPointerDecay>
    |     `-DeclRefExpr 0x56149bcc4948 <col:13> 'int [40]' lvalue Var 0x56149bc9f9d8 'x' 'int [40]'
    |-BinaryOperator 0x56149bcc4af8 <line:32:3, col:11> 'int' '='
    | |-DeclRefExpr 0x56149bcc4a48 <col:3> 'int' lvalue Var 0x56149bc9fa70 'temp' 'int'
    | `-ImplicitCastExpr 0x56149bcc4ae0 <col:8, col:11> 'int' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x56149bcc4ac0 <col:8, col:11> 'int' lvalue
    |     |-ImplicitCastExpr 0x56149bcc4aa8 <col:8> 'int *' <ArrayToPointerDecay>
    |     | `-DeclRefExpr 0x56149bcc4a68 <col:8> 'int [40]' lvalue Var 0x56149bc9f9d8 'x' 'int [40]'
    |     `-IntegerLiteral 0x56149bcc4a88 <col:10> 'int' 0
    |-BinaryOperator 0x56149bcc4c20 <col:13, col:23> 'int' '='
    | |-ArraySubscriptExpr 0x56149bcc4b70 <col:13, col:16> 'int' lvalue
    | | |-ImplicitCastExpr 0x56149bcc4b58 <col:13> 'int *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x56149bcc4b18 <col:13> 'int [40]' lvalue Var 0x56149bc9f9d8 'x' 'int [40]'
    | | `-IntegerLiteral 0x56149bcc4b38 <col:15> 'int' 0
    | `-ImplicitCastExpr 0x56149bcc4c08 <col:20, col:23> 'int' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x56149bcc4be8 <col:20, col:23> 'int' lvalue
    |     |-ImplicitCastExpr 0x56149bcc4bd0 <col:20> 'int *' <ArrayToPointerDecay>
    |     | `-DeclRefExpr 0x56149bcc4b90 <col:20> 'int [40]' lvalue Var 0x56149bc9f9d8 'x' 'int [40]'
    |     `-IntegerLiteral 0x56149bcc4bb0 <col:22> 'int' 1
    |-BinaryOperator 0x56149bcc4cf0 <col:26, col:33> 'int' '='
    | |-ArraySubscriptExpr 0x56149bcc4c98 <col:26, col:29> 'int' lvalue
    | | |-ImplicitCastExpr 0x56149bcc4c80 <col:26> 'int *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x56149bcc4c40 <col:26> 'int [40]' lvalue Var 0x56149bc9f9d8 'x' 'int [40]'
    | | `-IntegerLiteral 0x56149bcc4c60 <col:28> 'int' 1
    | `-ImplicitCastExpr 0x56149bcc4cd8 <col:33> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x56149bcc4cb8 <col:33> 'int' lvalue Var 0x56149bc9fa70 'temp' 'int'
    |-BinaryOperator 0x56149bcc4dc8 <line:33:3, col:15> 'int' '='
    | |-DeclRefExpr 0x56149bcc4d10 <col:3> 'int' lvalue Var 0x56149bc9fba0 'ret2' 'int'
    | `-CallExpr 0x56149bcc4d88 <col:10, col:15> 'int'
    |   |-ImplicitCastExpr 0x56149bcc4d70 <col:10> 'int (*)(int *)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x56149bcc4d30 <col:10> 'int (int *)' Function 0x56149bc9f338 'sep' 'int (int *)'
    |   `-ImplicitCastExpr 0x56149bcc4db0 <col:14> 'int *' <ArrayToPointerDecay>
    |     `-DeclRefExpr 0x56149bcc4d50 <col:14> 'int [40]' lvalue Var 0x56149bc9f9d8 'x' 'int [40]'
    |-BinaryOperator 0x56149bcc4e98 <line:34:3, col:11> 'int' '='
    | |-DeclRefExpr 0x56149bcc4de8 <col:3> 'int' lvalue Var 0x56149bc9fa70 'temp' 'int'
    | `-ImplicitCastExpr 0x56149bcc4e80 <col:8, col:11> 'int' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x56149bcc4e60 <col:8, col:11> 'int' lvalue
    |     |-ImplicitCastExpr 0x56149bcc4e48 <col:8> 'int *' <ArrayToPointerDecay>
    |     | `-DeclRefExpr 0x56149bcc4e08 <col:8> 'int [40]' lvalue Var 0x56149bc9f9d8 'x' 'int [40]'
    |     `-IntegerLiteral 0x56149bcc4e28 <col:10> 'int' 0
    |-ForStmt 0x56149bcc5210 <line:35:3, line:37:3>
    | |-DeclStmt 0x56149bcc4f58 <line:35:7, col:16>
    | | `-VarDecl 0x56149bcc4ed0 <col:7, col:14> col:11 used i 'int' cinit
    | |   `-IntegerLiteral 0x56149bcc4f38 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x56149bcc5008 <col:18, col:24> 'int' '<'
    | | |-ImplicitCastExpr 0x56149bcc4ff0 <col:18> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x56149bcc4f70 <col:18> 'int' lvalue Var 0x56149bcc4ed0 'i' 'int'
    | | `-BinaryOperator 0x56149bcc4fd0 <col:20, col:24> 'int' '-'
    | |   |-IntegerLiteral 0x56149bcc4f90 <col:20> 'int' 40
    | |   `-IntegerLiteral 0x56149bcc4fb0 <col:24> 'int' 1
    | |-UnaryOperator 0x56149bcc5048 <col:27, col:28> 'int' postfix '++'
    | | `-DeclRefExpr 0x56149bcc5028 <col:27> 'int' lvalue Var 0x56149bcc4ed0 'i' 'int'
    | `-CompoundStmt 0x56149bcc51f8 <col:31, line:37:3>
    |   `-BinaryOperator 0x56149bcc51d8 <line:36:6, col:18> 'int' '='
    |     |-ArraySubscriptExpr 0x56149bcc50d0 <col:6, col:9> 'int' lvalue
    |     | |-ImplicitCastExpr 0x56149bcc50a0 <col:6> 'int *' <ArrayToPointerDecay>
    |     | | `-DeclRefExpr 0x56149bcc5060 <col:6> 'int [40]' lvalue Var 0x56149bc9f9d8 'x' 'int [40]'
    |     | `-ImplicitCastExpr 0x56149bcc50b8 <col:8> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56149bcc5080 <col:8> 'int' lvalue Var 0x56149bcc4ed0 'i' 'int'
    |     `-ImplicitCastExpr 0x56149bcc51c0 <col:13, col:18> 'int' <LValueToRValue>
    |       `-ArraySubscriptExpr 0x56149bcc51a0 <col:13, col:18> 'int' lvalue
    |         |-ImplicitCastExpr 0x56149bcc5188 <col:13> 'int *' <ArrayToPointerDecay>
    |         | `-DeclRefExpr 0x56149bcc50f0 <col:13> 'int [40]' lvalue Var 0x56149bc9f9d8 'x' 'int [40]'
    |         `-BinaryOperator 0x56149bcc5168 <col:15, col:17> 'int' '+'
    |           |-ImplicitCastExpr 0x56149bcc5150 <col:15> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56149bcc5110 <col:15> 'int' lvalue Var 0x56149bcc4ed0 'i' 'int'
    |           `-IntegerLiteral 0x56149bcc5130 <col:17> 'int' 1
    |-BinaryOperator 0x56149bcc5338 <line:38:3, col:14> 'int' '='
    | |-ArraySubscriptExpr 0x56149bcc52e0 <col:3, col:10> 'int' lvalue
    | | |-ImplicitCastExpr 0x56149bcc52c8 <col:3> 'int *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x56149bcc5248 <col:3> 'int [40]' lvalue Var 0x56149bc9f9d8 'x' 'int [40]'
    | | `-BinaryOperator 0x56149bcc52a8 <col:5, col:9> 'int' '-'
    | |   |-IntegerLiteral 0x56149bcc5268 <col:5> 'int' 40
    | |   `-IntegerLiteral 0x56149bcc5288 <col:9> 'int' 1
    | `-ImplicitCastExpr 0x56149bcc5320 <col:14> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x56149bcc5300 <col:14> 'int' lvalue Var 0x56149bc9fa70 'temp' 'int'
    |-BinaryOperator 0x56149bcc5410 <line:39:3, col:15> 'int' '='
    | |-DeclRefExpr 0x56149bcc5358 <col:3> 'int' lvalue Var 0x56149bc9fc38 'ret5' 'int'
    | `-CallExpr 0x56149bcc53d0 <col:10, col:15> 'int'
    |   |-ImplicitCastExpr 0x56149bcc53b8 <col:10> 'int (*)(int *)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x56149bcc5378 <col:10> 'int (int *)' Function 0x56149bc9f338 'sep' 'int (int *)'
    |   `-ImplicitCastExpr 0x56149bcc53f8 <col:14> 'int *' <ArrayToPointerDecay>
    |     `-DeclRefExpr 0x56149bcc5398 <col:14> 'int [40]' lvalue Var 0x56149bc9f9d8 'x' 'int [40]'
    |-IfStmt 0x56149bcc5610 <line:41:3, line:43:3>
    | |-BinaryOperator 0x56149bcc5550 <line:41:6, col:27> 'int' '||'
    | | |-BinaryOperator 0x56149bcc54a0 <col:6, col:13> 'int' '!='
    | | | |-ImplicitCastExpr 0x56149bcc5470 <col:6> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x56149bcc5430 <col:6> 'int' lvalue Var 0x56149bc9fb08 'ret' 'int'
    | | | `-ImplicitCastExpr 0x56149bcc5488 <col:13> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x56149bcc5450 <col:13> 'int' lvalue Var 0x56149bc9fba0 'ret2' 'int'
    | | `-BinaryOperator 0x56149bcc5530 <col:21, col:27> 'int' '!='
    | |   |-ImplicitCastExpr 0x56149bcc5500 <col:21> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x56149bcc54c0 <col:21> 'int' lvalue Var 0x56149bc9fb08 'ret' 'int'
    | |   `-ImplicitCastExpr 0x56149bcc5518 <col:27> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x56149bcc54e0 <col:27> 'int' lvalue Var 0x56149bc9fc38 'ret5' 'int'
    | `-CompoundStmt 0x56149bcc55f8 <col:32, line:43:3>
    |   `-CallExpr 0x56149bcc55d8 <line:42:5, col:22> 'void'
    |     `-ImplicitCastExpr 0x56149bcc55c0 <col:5> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x56149bcc5570 <col:5> 'void () __attribute__((noreturn))' Function 0x56149bc9ef30 '__VERIFIER_error' 'void () __attribute__((noreturn))'
    `-ReturnStmt 0x56149bcc5648 <line:44:3, col:10>
      `-IntegerLiteral 0x56149bcc5628 <col:10> 'int' 1
