TranslationUnitDecl 0x5557a52aff88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5557a52b0848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5557a52b0520 '__int128'
|-TypedefDecl 0x5557a52b08b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5557a52b0540 'unsigned __int128'
|-TypedefDecl 0x5557a52b0bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5557a52b0990 'struct __NSConstantString_tag'
|   `-Record 0x5557a52b0910 '__NSConstantString_tag'
|-TypedefDecl 0x5557a52b0c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5557a52b0c20 'char *'
|   `-BuiltinType 0x5557a52b0020 'char'
|-TypedefDecl 0x5557a52efb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5557a52b0f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5557a52b0d40 'struct __va_list_tag'
|     `-Record 0x5557a52b0cc0 '__va_list_tag'
|-FunctionDecl 0x5557a52efca0 <pthread-wmm/safe022_power.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5557a52efbd0 <col:31> col:34 'int'
|-FunctionDecl 0x5557a52efe68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5557a52eff90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5557a52f00d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5557a52f0048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5557a52f0308 <col:40, col:99>
|   |-IfStmt 0x5557a52f02d8 <col:42, col:88>
|   | |-UnaryOperator 0x5557a52f01b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5557a52f01a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5557a52f0180 <col:47> 'int' lvalue ParmVar 0x5557a52f0048 'expression' 'int'
|   | `-CompoundStmt 0x5557a52f02c0 <col:59, col:88>
|   |   `-LabelStmt 0x5557a52f02a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5557a52f0238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5557a52f0220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5557a52f01d0 <col:68> 'void () __attribute__((noreturn))' Function 0x5557a52eff90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5557a52f02f0 <col:89>
|   `-ReturnStmt 0x5557a52f02f8 <col:91>
|-FunctionDecl 0x5557a52f0350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5557a52f0410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5557a52f0790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5557a52f04c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5557a52f0548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5557a52f05c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5557a52f0648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5557a52f0850 <line:10:22>
|-FunctionDecl 0x5557a53168a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5557a52f08c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5557a52f0940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5557a52f09c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5557a52f0a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5557a5316960 <line:13:22>
|-FunctionDecl 0x5557a5316c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5557a53169d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5557a5316a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5557a5316ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5557a5316cc8 <line:15:22>
|-TypedefDecl 0x5557a5316d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5557a52b00e0 'unsigned char'
|-TypedefDecl 0x5557a5316da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5557a52b0100 'unsigned short'
|-TypedefDecl 0x5557a5316e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5557a52b0120 'unsigned int'
|-TypedefDecl 0x5557a5316e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5557a52b0140 'unsigned long'
|-TypedefDecl 0x5557a5316ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5557a52b0040 'signed char'
|-TypedefDecl 0x5557a5316f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5557a52b00e0 'unsigned char'
|-TypedefDecl 0x5557a5316fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5557a52b0060 'short'
|-TypedefDecl 0x5557a5317048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5557a52b0100 'unsigned short'
|-TypedefDecl 0x5557a53170b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5557a52b0080 'int'
|-TypedefDecl 0x5557a5317128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5557a52b0120 'unsigned int'
|-TypedefDecl 0x5557a5317198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5557a52b00a0 'long'
|-TypedefDecl 0x5557a5317208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5557a52b0140 'unsigned long'
|-TypedefDecl 0x5557a5317278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5557a52b00a0 'long'
|-TypedefDecl 0x5557a53172e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5557a52b0140 'unsigned long'
|-TypedefDecl 0x5557a5317358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5557a52b0140 'unsigned long'
|-TypedefDecl 0x5557a53173c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5557a52b0120 'unsigned int'
|-TypedefDecl 0x5557a5317438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5557a52b0120 'unsigned int'
|-TypedefDecl 0x5557a53174a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5557a52b0140 'unsigned long'
|-TypedefDecl 0x5557a5317518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5557a52b0140 'unsigned long'
|-TypedefDecl 0x5557a5317588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5557a52b0120 'unsigned int'
|-TypedefDecl 0x5557a53175f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5557a52b0140 'unsigned long'
|-TypedefDecl 0x5557a5317668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5557a52b00a0 'long'
|-TypedefDecl 0x5557a53176d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5557a52b00a0 'long'
|-TypedefDecl 0x5557a5317748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5557a52b0080 'int'
|-RecordDecl 0x5557a53177a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5557a5317918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5557a53179d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5557a5317970 'struct __fsid_t' sugar
|   `-RecordType 0x5557a5317820 '__fsid_t'
|     `-Record 0x5557a53177a0 ''
|-TypedefDecl 0x5557a5317a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5557a52b00a0 'long'
|-TypedefDecl 0x5557a5317ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5557a52b0140 'unsigned long'
|-TypedefDecl 0x5557a5317b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5557a52b0140 'unsigned long'
|-TypedefDecl 0x5557a5317ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5557a52b0120 'unsigned int'
|-TypedefDecl 0x5557a5317c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5557a52b00a0 'long'
|-TypedefDecl 0x5557a5317c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5557a52b0120 'unsigned int'
|-TypedefDecl 0x5557a5317cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5557a52b00a0 'long'
|-TypedefDecl 0x5557a5317d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5557a52b0080 'int'
|-TypedefDecl 0x5557a5317dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5557a52b0080 'int'
|-TypedefDecl 0x5557a5317e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5557a52b0080 'int'
|-TypedefDecl 0x5557a5317eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5557a52b07a0 'void *'
|   `-BuiltinType 0x5557a52affe0 'void'
|-TypedefDecl 0x5557a5317f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5557a52b00a0 'long'
|-TypedefDecl 0x5557a5317f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5557a52b00a0 'long'
|-TypedefDecl 0x5557a5318008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5557a52b00a0 'long'
|-TypedefDecl 0x5557a5318078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5557a52b0140 'unsigned long'
|-TypedefDecl 0x5557a53180e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5557a52b0140 'unsigned long'
|-TypedefDecl 0x5557a5318158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5557a52b0140 'unsigned long'
|-TypedefDecl 0x5557a53181c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5557a52b0140 'unsigned long'
|-TypedefDecl 0x5557a5318238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5557a52b00a0 'long'
|-TypedefDecl 0x5557a53182a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5557a52b00a0 'long'
|-TypedefDecl 0x5557a5318318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5557a52b00a0 'long'
|-TypedefDecl 0x5557a5318388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5557a52b0140 'unsigned long'
|-TypedefDecl 0x5557a5318418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5557a53183e0 '__off64_t' sugar
|   |-Typedef 0x5557a53176d8 '__off64_t'
|   `-BuiltinType 0x5557a52b00a0 'long'
|-TypedefDecl 0x5557a5318510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5557a53184d0 '__quad_t *'
|   `-TypedefType 0x5557a5318470 '__quad_t' sugar
|     |-Typedef 0x5557a5317278 '__quad_t'
|     `-BuiltinType 0x5557a52b00a0 'long'
|-TypedefDecl 0x5557a5318580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5557a52b0c20 'char *'
|   `-BuiltinType 0x5557a52b0020 'char'
|-TypedefDecl 0x5557a53185f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5557a52b00a0 'long'
|-TypedefDecl 0x5557a5318660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5557a52b0120 'unsigned int'
|-FunctionDecl 0x5557a53187a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5557a53186d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5557a5318ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5557a5318ad8 <line:72:3, col:34>
|     `-CallExpr 0x5557a5318a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5557a5318a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5557a5318a10 <col:10> '<builtin fn type>' Function 0x5557a5318880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5557a5318ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5557a5318a30 <col:29> 'unsigned int' lvalue ParmVar 0x5557a53186d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5557a5318880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5557a5318920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5557a5318990 <col:10> Implicit
| `-ConstAttr 0x5557a53189e8 <col:10> Implicit
|-FunctionDecl 0x5557a5318c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5557a5318b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5557a5318f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5557a5318f48 <line:77:3, col:34>
|     `-CallExpr 0x5557a5318f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5557a5318ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5557a5318e78 <col:10> '<builtin fn type>' Function 0x5557a5318ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5557a5318f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5557a5318e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5557a5318b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5557a5318ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5557a5318d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5557a5318df8 <col:10> Implicit
| `-ConstAttr 0x5557a5318e50 <col:10> Implicit
|-TypedefDecl 0x5557a5318f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5557a52b0140 'unsigned long'
|-TypedefDecl 0x5557a5319018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5557a5318fe0 '__time_t' sugar
|   |-Typedef 0x5557a5317c18 '__time_t'
|   `-BuiltinType 0x5557a52b00a0 'long'
|-RecordDecl 0x5557a5319070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5557a5319128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5557a53191b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5557a5319248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5557a5319210 '__pid_t' sugar
|   |-Typedef 0x5557a5317748 '__pid_t'
|   `-BuiltinType 0x5557a52b0080 'int'
|-RecordDecl 0x5557a53192a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5557a5319360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5557a53193b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5557a5319470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5557a53194d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5557a52b0140 'unsigned long'
|-RecordDecl 0x5557a5319530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5557a53197c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5557a531b8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5557a5319810 'struct cpu_set_t' sugar
|   `-RecordType 0x5557a53195b0 'cpu_set_t'
|     `-Record 0x5557a5319530 ''
|-FunctionDecl 0x5557a531bb88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5557a531b958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5557a531ba60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5557a531bc38 <line:107:19>
|-FunctionDecl 0x5557a531be10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5557a531bca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5557a531beb8 <col:69>
|-FunctionDecl 0x5557a531c030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5557a531bf20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5557a531c0d8 <col:64>
|-FunctionDecl 0x5557a531c398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5557a531c140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5557a531c278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5557a531c448 <line:113:22>
|-FunctionDecl 0x5557a531c6c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5557a531c4b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5557a531c5a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5557a531c778 <col:88>
|-FunctionDecl 0x5557a531ca98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5557a531c7e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5557a531c8c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5557a531c950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5557a531cb50 <col:62>
|-FunctionDecl 0x5557a531ccc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5557a531cbb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5557a531cd70 <col:63>
|-FunctionDecl 0x5557a531ce98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5557a531cf38 <col:47>
|-FunctionDecl 0x5557a531d040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5557a531cfa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5557a531d0e8 <col:69>
|-FunctionDecl 0x5557a531d1f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5557a531d158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5557a531d298 <col:69>
|-FunctionDecl 0x5557a531d558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5557a531d300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5557a531d438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5557a531d608 <col:88>
|-TypedefDecl 0x5557a531d698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5557a531d660 '__clock_t' sugar
|   |-Typedef 0x5557a5317a58 '__clock_t'
|   `-BuiltinType 0x5557a52b00a0 'long'
|-TypedefDecl 0x5557a531d728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5557a531d6f0 '__clockid_t' sugar
|   |-Typedef 0x5557a5317e48 '__clockid_t'
|   `-BuiltinType 0x5557a52b0080 'int'
|-TypedefDecl 0x5557a531d7b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5557a531d780 '__timer_t' sugar
|   |-Typedef 0x5557a5317eb8 '__timer_t'
|   `-PointerType 0x5557a52b07a0 'void *'
|     `-BuiltinType 0x5557a52affe0 'void'
|-RecordDecl 0x5557a531d810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5557a531d8e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5557a531d950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5557a531d9b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5557a531da20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5557a531da88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5557a531daf0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5557a531db58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5557a531dbc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5557a531dc28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5557a531dc90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5557a531dcf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5557a531dd48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5557a531de18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5557a531de88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5557a531df30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5557a531e100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5557a531e1a0 <col:45>
|-FunctionDecl 0x5557a531e380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5557a531e270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5557a531e428 <col:54>
|-FunctionDecl 0x5557a531e628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5557a531e490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5557a531e508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5557a531e6d8 <line:157:22>
| `-ConstAttr 0x5557a531e730 <col:63>
|-FunctionDecl 0x5557a531f560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5557a531e828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5557a531f608 <col:56>
|-FunctionDecl 0x5557a531f9b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5557a531f678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5557a531f6f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5557a531f770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5557a531f868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5557a531fa70 <col:54>
|-RecordDecl 0x5557a531fac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5557a531fb78 parent 0x5557a52aff88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5557a531fdd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5557a531fe78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5557a531fee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5557a531ff48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5557a5320038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5557a5320158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5557a5320100 'struct __locale_struct *'
|   `-ElaboratedType 0x5557a5320090 'struct __locale_struct' sugar
|     `-RecordType 0x5557a531fb50 'struct __locale_struct'
|       `-Record 0x5557a531fac8 '__locale_struct'
|-TypedefDecl 0x5557a5320208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5557a53201d0 '__locale_t' sugar
|   |-Typedef 0x5557a5320158 '__locale_t'
|   `-PointerType 0x5557a5320100 'struct __locale_struct *'
|     `-ElaboratedType 0x5557a5320090 'struct __locale_struct' sugar
|       `-RecordType 0x5557a531fb50 'struct __locale_struct'
|         `-Record 0x5557a531fac8 '__locale_struct'
|-FunctionDecl 0x5557a5320610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5557a5320278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5557a53202f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5557a5320370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5557a5320400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5557a5320478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5557a53206d8 <col:40>
|-FunctionDecl 0x5557a53208c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5557a53207a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5557a5320970 <col:66>
|-FunctionDecl 0x5557a5320a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5557a53209d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5557a5320b28 <col:69>
|-FunctionDecl 0x5557a5320d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5557a5320b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5557a5320c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5557a5320e08 <col:52>
|-FunctionDecl 0x5557a5320fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5557a5320e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5557a5320f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5557a5321060 <col:55>
|-FunctionDecl 0x5557a53211f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5557a53210e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5557a53212a0 <col:62>
|-FunctionDecl 0x5557a5321418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5557a5321308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5557a53214c0 <col:60>
|-FunctionDecl 0x5557a5321718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5557a5321578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5557a53215f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5557a53217c8 <col:44>
|-FunctionDecl 0x5557a53219d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5557a5321830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5557a53218b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5557a5321a88 <col:49>
|-VarDecl 0x5557a5321b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5557a5321c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5557a5321c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5557a5321d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5557a5321e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5557a5321f20 <col:42>
|-VarDecl 0x5557a5321f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5557a5322010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5557a5322198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5557a5322088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5557a5322240 <col:57>
|-FunctionDecl 0x5557a5322350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5557a53222c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5557a53223f8 <col:56>
|-FunctionDecl 0x5557a5323540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5557a5322478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5557a53235e8 <col:59>
|-FunctionDecl 0x5557a53236f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5557a5323658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5557a5323798 <col:48>
| `-ConstAttr 0x5557a53237f0 <col:89>
|-FunctionDecl 0x5557a5323a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5557a53238a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5557a5323938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5557a5323cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5557a5323b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5557a5323bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5557a5323d68 <col:88>
|-FunctionDecl 0x5557a5323f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5557a5323dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5557a5323e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5557a5323fb0 <col:88>
|-FunctionDecl 0x5557a53241c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5557a5324018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5557a53240a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5557a5324278 <line:208:22>
|-FunctionDecl 0x5557a53245e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5557a53242e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5557a5324360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5557a53243f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5557a5324480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5557a53248e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5557a53246e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5557a53247c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5557a5324998 <col:85>
|-FunctionDecl 0x5557a5324d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5557a5324a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5557a5324b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5557a5324c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5557a5324e40 <col:52>
|-FunctionDecl 0x5557a5324fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5557a5324ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5557a5325060 <col:61>
|-FunctionDecl 0x5557a5325560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5557a53250c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5557a5325148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5557a5325278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5557a5325368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5557a5325620 <col:62>
|-FunctionDecl 0x5557a5325838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5557a5325688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5557a5325718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5557a53258e8 <line:221:22>
|-FunctionDecl 0x5557a53259e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5557a5325950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5557a5325a90 <col:65>
|-TypedefDecl 0x5557a5325b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5557a52b0140 'unsigned long'
|-RecordDecl 0x5557a5325b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5557a5325ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5557a5325d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5557a5325db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5557a5325d60 'union pthread_attr_t' sugar
|   `-RecordType 0x5557a5325be0 'union pthread_attr_t'
|     `-Record 0x5557a5325b58 'pthread_attr_t'
|-RecordDecl 0x5557a5325e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5557a5325f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5557a5326000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5557a53260b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5557a5326050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5557a5325e90 'struct __pthread_internal_list'
|     `-Record 0x5557a5325e10 '__pthread_internal_list'
|-RecordDecl 0x5557a5326120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5557a53261c8 parent 0x5557a52aff88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5557a53262a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5557a5326308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5557a5326370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5557a53263d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5557a5326440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5557a53264a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5557a532a580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5557a532a630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5557a532a720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5557a532a788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5557a532a910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5557a532a8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5557a53261a0 'pthread_mutex_t'
|     `-Record 0x5557a5326120 ''
|-RecordDecl 0x5557a532a980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5557a532aac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5557a532ab28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5557a532abe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5557a532ab80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5557a532aa00 'pthread_mutexattr_t'
|     `-Record 0x5557a532a980 ''
|-RecordDecl 0x5557a532ac50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5557a532acf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5557a532adc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5557a532ae28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5557a532ae90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5557a532aef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5557a532af60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5557a532afc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5557a532b030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5557a532b098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5557a532b150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe022_power.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe022_power.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5557a532b240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5557a532b2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5557a532b3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5557a532b380 'union pthread_cond_t' sugar
|   `-RecordType 0x5557a532acd0 'pthread_cond_t'
|     `-Record 0x5557a532ac50 ''
|-RecordDecl 0x5557a532b450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5557a532b590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5557a532b5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5557a532b6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5557a532b650 'union pthread_condattr_t' sugar
|   `-RecordType 0x5557a532b4d0 'pthread_condattr_t'
|     `-Record 0x5557a532b450 ''
|-TypedefDecl 0x5557a532b738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5557a52b0120 'unsigned int'
|-TypedefDecl 0x5557a532b7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5557a52b0080 'int'
|-RecordDecl 0x5557a532b800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5557a532b8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5557a532b970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5557a532b9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5557a532ba40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5557a532baa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5557a532bb10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5557a532bb78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5557a532bbe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5557a532bc48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5557a532bcb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5557a532bd18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5557a532bd80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5557a532be30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe022_power.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe022_power.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5557a532bed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5557a532bf40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5557a532c090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5557a532c030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5557a532b880 'pthread_rwlock_t'
|     `-Record 0x5557a532b800 ''
|-RecordDecl 0x5557a532c100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5557a532c240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5557a532c2a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5557a532c360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5557a532c300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5557a532c180 'pthread_rwlockattr_t'
|     `-Record 0x5557a532c100 ''
|-TypedefDecl 0x5557a532c3e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5557a52b0084 'volatile int' volatile
|   `-BuiltinType 0x5557a52b0080 'int'
|-RecordDecl 0x5557a532c440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5557a532e5b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5557a532e618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5557a532e6d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5557a532e670 'union pthread_barrier_t' sugar
|   `-RecordType 0x5557a532c4c0 'pthread_barrier_t'
|     `-Record 0x5557a532c440 ''
|-RecordDecl 0x5557a532e740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5557a532e840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5557a532e8a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5557a532e960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5557a532e900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5557a532e7c0 'pthread_barrierattr_t'
|     `-Record 0x5557a532e740 ''
|-TypedefDecl 0x5557a532ea78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5557a532ea10 'long [8]' 8 
|   `-BuiltinType 0x5557a52b00a0 'long'
|-EnumDecl 0x5557a532ead0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5557a532eb98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5557a532ebe8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5557a532ec38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5557a532ed08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5557a532ed58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5557a532eda8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5557a532edf8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5557a532ee80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5557a532ee68 <col:26> 'int'
| |   `-DeclRefExpr 0x5557a532ee48 <col:26> 'int' EnumConstant 0x5557a532ed08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5557a532ef08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5557a532eef0 <col:29> 'int'
| |   `-DeclRefExpr 0x5557a532eed0 <col:29> 'int' EnumConstant 0x5557a532ed58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5557a532ef90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5557a532ef78 <col:30> 'int'
| |   `-DeclRefExpr 0x5557a532ef58 <col:30> 'int' EnumConstant 0x5557a532eda8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5557a532f018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5557a532f000 <col:27> 'int'
|     `-DeclRefExpr 0x5557a532efe0 <col:27> 'int' EnumConstant 0x5557a532ee80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5557a532f068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5557a532f138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5557a532f1c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5557a532f1a8 <col:30> 'int'
| |   `-DeclRefExpr 0x5557a532f188 <col:30> 'int' EnumConstant 0x5557a532f138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5557a532f210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5557a532f298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5557a532f280 <col:29> 'int'
|     `-DeclRefExpr 0x5557a532f260 <col:29> 'int' EnumConstant 0x5557a532f210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5557a532f2e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5557a532f3b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5557a532f408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5557a532f458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5557a532f4a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5557a532f5c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5557a532f610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5557a532f660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5557a532f6e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5557a532f6d0 <col:31> 'int'
|     `-DeclRefExpr 0x5557a532f6b0 <col:31> 'int' EnumConstant 0x5557a532f5c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5557a532f738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5557a532f808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5557a532f858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5557a532f8a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5557a532f978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5557a532f9c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5557a532fa18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5557a532fae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5557a532fb38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5557a532fb88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5557a532fdc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5557a532fe30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5557a532fe98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5557a532ffb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5557a5330008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5557a53300d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5557a5330128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5557a5330178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5557a5330248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5557a5330298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5557a53308f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5557a5330390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5557a53304a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5557a53306e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5557a5330760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5557a53309b8 <col:47>
| |-NonNullAttr 0x5557a5330a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x5557a5330a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5557a5330b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5557a5330aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5557a5330dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5557a5330c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5557a5330ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5557a5330f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5557a5330e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5557a5331040 <col:60>
|-FunctionDecl 0x5557a5331190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5557a5331230 <col:54>
| `-ConstAttr 0x5557a5331288 <col:95>
|-FunctionDecl 0x5557a5331458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5557a53312c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5557a5331338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5557a5331508 <line:394:19>
| `-ConstAttr 0x5557a5331560 <col:60>
|-FunctionDecl 0x5557a5331f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5557a5331e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5557a5332010 <col:71>
| `-NonNullAttr 0x5557a5332068 <col:112, col:126> 1
|-FunctionDecl 0x5557a5332170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5557a53320b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5557a5332218 <line:397:22>
| `-NonNullAttr 0x5557a5332270 <col:63, col:77> 1
|-FunctionDecl 0x5557a5332498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5557a53322b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5557a5332338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5557a5332548 <line:400:22>
| `-NonNullAttr 0x5557a53325a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5557a53327a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5557a53325e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5557a5332668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5557a5332858 <line:403:22>
| `-NonNullAttr 0x5557a53328b0 <col:63, col:77> 1
|-FunctionDecl 0x5557a5332b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5557a53328f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5557a53329a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5557a5332bb8 <line:406:22>
| `-NonNullAttr 0x5557a5332c10 <col:63, col:80> 1 2
|-FunctionDecl 0x5557a5333e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5557a5332c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5557a5332cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5557a5333ef8 <line:409:22>
| `-NonNullAttr 0x5557a5333f50 <col:63, col:77> 1
|-FunctionDecl 0x5557a5334188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5557a5333f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5557a5334028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5557a5334238 <line:412:22>
| `-NonNullAttr 0x5557a5334290 <col:63, col:80> 1 2
|-FunctionDecl 0x5557a53344c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5557a53342d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5557a5334368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5557a5334578 <col:37>
| `-NonNullAttr 0x5557a53345d0 <col:78, col:95> 1 2
|-FunctionDecl 0x5557a53347b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5557a5334618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5557a5334698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5557a5334868 <line:418:22>
| `-NonNullAttr 0x5557a53348c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5557a5334a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5557a5334908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5557a5334988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5557a5334af8 <line:420:22>
| `-NonNullAttr 0x5557a5334b50 <col:63, col:77> 1
|-FunctionDecl 0x5557a5334cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5557a5334b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5557a5334c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5557a5334da8 <line:423:22>
| `-NonNullAttr 0x5557a5335e30 <col:63, col:80> 1 2
|-FunctionDecl 0x5557a5335fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5557a5335e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5557a5335ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5557a5336068 <line:426:22>
| `-NonNullAttr 0x5557a53360c0 <col:63, col:77> 1
|-FunctionDecl 0x5557a5336268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5557a5336108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5557a5336188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5557a5336318 <line:429:22>
| `-NonNullAttr 0x5557a5336370 <col:63, col:80> 1 2
|-FunctionDecl 0x5557a53364f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5557a53363b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5557a5336438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5557a53365a8 <line:431:22>
| `-NonNullAttr 0x5557a5336600 <col:63, col:77> 1
|-FunctionDecl 0x5557a5336828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5557a5336648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5557a53366c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5557a53368d8 <line:434:22>
| |-NonNullAttr 0x5557a5336930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5557a5336968 <col:100> "" ""
|-FunctionDecl 0x5557a5336b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5557a53369b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5557a5336a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5557a5336c28 <line:437:22>
| |-NonNullAttr 0x5557a5336c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x5557a5336cb8 <col:97> "" ""
|-FunctionDecl 0x5557a5336eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5557a5336d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5557a5336d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5557a5336f68 <line:440:22>
| `-NonNullAttr 0x5557a5336fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x5557a5337140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5557a5337008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5557a5337080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5557a53371f0 <line:443:22>
| `-NonNullAttr 0x5557a5337248 <col:63, col:77> 1
|-FunctionDecl 0x5557a5337538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5557a5337298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5557a5337318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5557a5337390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5557a53375f0 <line:447:22>
| `-NonNullAttr 0x5557a5337648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5557a53378f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5557a53376a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5557a5337720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5557a5337798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5557a53379b0 <col:43>
| `-NonNullAttr 0x5557a5337a08 <col:84, col:98> 1
|-FunctionDecl 0x5557a5337cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5557a5337a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5557a5337ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5557a5337b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5557a5337d80 <line:452:22>
| `-NonNullAttr 0x5557a5337dd8 <col:63, col:77> 3
|-FunctionDecl 0x5557a53380e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5557a5337e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5557a5337ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5557a5337f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5557a53381a0 <line:456:22>
| `-NonNullAttr 0x5557a53381f8 <col:63, col:80> 2 3
|-FunctionDecl 0x5557a53383e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5557a5338248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5557a53382c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5557a5338498 <line:458:22>
|-FunctionDecl 0x5557a5338868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5557a5338560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5557a5338700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5557a5338918 <col:52, col:69> 1 2
|-FunctionDecl 0x5557a5338ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5557a53389a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5557a5338a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5557a5338ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5557a5338b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5557a5338c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5557a5338e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5557a5338d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5557a5338fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5557a5339040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5557a53390e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5557a53391d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5557a5339240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5557a5339410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe022_power.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5557a5339508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5557a53395c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5557a5339560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5557a53390c0 '__pthread_unwind_buf_t'
| |   `-Record 0x5557a5339040 ''
| `-AlignedAttr 0x5557a5339618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5557a5339690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5557a53397f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5557a5339858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5557a53398c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5557a5339928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5557a5339b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5557a5339a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5557a5339c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5557a5339be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5557a5339e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5557a5339d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5557a5339f18 <line:487:22>
|-RecordDecl 0x5557a5339f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5557a533a288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5557a533a0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5557a533a168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5557a533a338 <col:86>
| `-ReturnsTwiceAttr 0x5557a533a390 <col:12> Implicit
|-FunctionDecl 0x5557a533a6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5557a533a460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5557a533a570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5557a533a768 <line:493:22>
| `-NonNullAttr 0x5557a533a7c0 <col:63, col:77> 1
|-FunctionDecl 0x5557a533a938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5557a533a808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5557a533a9e0 <line:495:22>
| `-NonNullAttr 0x5557a533aa38 <col:63, col:77> 1
|-FunctionDecl 0x5557a533ab40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5557a533aa88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5557a533abe8 <line:497:22>
| `-NonNullAttr 0x5557a533ac40 <col:52, col:66> 1
|-FunctionDecl 0x5557a533ad40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5557a533ac88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5557a533ade8 <line:499:22>
| `-NonNullAttr 0x5557a533ae40 <col:52, col:66> 1
|-FunctionDecl 0x5557a533b088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5557a533ae98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5557a533af28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5557a533b138 <col:36>
| `-NonNullAttr 0x5557a533b190 <col:66, col:83> 1 2
|-FunctionDecl 0x5557a533b290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5557a533b1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5557a533b338 <line:504:22>
| `-NonNullAttr 0x5557a533b390 <col:52, col:66> 1
|-FunctionDecl 0x5557a533b628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5557a533b440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5557a533b4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5557a533b6d8 <line:508:22>
| `-NonNullAttr 0x5557a533b730 <col:63, col:80> 1 2
|-FunctionDecl 0x5557a533b9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5557a533b778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5557a533b7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5557a533b878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5557a533bab0 <line:512:22>
| `-NonNullAttr 0x5557a533bb08 <col:63, col:80> 1 3
|-FunctionDecl 0x5557a533bc10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5557a533bb58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5557a533bcb8 <line:514:22>
| `-NonNullAttr 0x5557a533bd10 <col:63, col:77> 1
|-FunctionDecl 0x5557a533bf38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5557a533bdc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5557a533bfe0 <line:516:22>
| `-NonNullAttr 0x5557a533c038 <col:63, col:77> 1
|-FunctionDecl 0x5557a533c140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5557a533c088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5557a533c1e8 <line:518:22>
| `-NonNullAttr 0x5557a533c240 <col:63, col:77> 1
|-FunctionDecl 0x5557a533c468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5557a533c288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5557a533c308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5557a533c518 <line:522:22>
| `-NonNullAttr 0x5557a533c570 <col:63, col:80> 1 2
|-FunctionDecl 0x5557a533c778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5557a533c5b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5557a533c638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5557a533c828 <line:525:22>
| `-NonNullAttr 0x5557a533c880 <col:63, col:77> 1
|-FunctionDecl 0x5557a533ca28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5557a533c8c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5557a533c948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5557a533cad8 <line:528:22>
| `-NonNullAttr 0x5557a533cb30 <col:63, col:80> 1 2
|-FunctionDecl 0x5557a533ccb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5557a533cb78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5557a533cbf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5557a533cd68 <line:530:22>
| `-NonNullAttr 0x5557a533cdc0 <col:63, col:77> 1
|-FunctionDecl 0x5557a533df90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5557a533ce08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5557a533deb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5557a533e040 <line:534:22>
| `-NonNullAttr 0x5557a533e098 <col:63, col:80> 1 2
|-FunctionDecl 0x5557a533e228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5557a533e0e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5557a533e168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5557a533e2d8 <line:537:22>
| `-NonNullAttr 0x5557a533e330 <col:63, col:77> 1
|-FunctionDecl 0x5557a533e4d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5557a533e378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5557a533e3f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5557a533e588 <line:541:22>
| `-NonNullAttr 0x5557a533e5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5557a533e768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5557a533e628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5557a533e6a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5557a533e818 <line:544:22>
| `-NonNullAttr 0x5557a533e870 <col:63, col:77> 1
|-FunctionDecl 0x5557a533ea58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5557a533e8b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5557a533e938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5557a533eb08 <line:547:22>
| `-NonNullAttr 0x5557a533eb60 <col:63, col:80> 1 2
|-FunctionDecl 0x5557a533ece8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5557a533eba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5557a533ec28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5557a533ed98 <line:550:22>
| `-NonNullAttr 0x5557a533edf0 <col:63, col:77> 1
|-FunctionDecl 0x5557a5340168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5557a533ff10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5557a5340020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5557a5340218 <col:29>
| `-NonNullAttr 0x5557a5340270 <col:70, col:84> 1
|-FunctionDecl 0x5557a53403e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5557a53402b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5557a5340490 <line:555:22>
| `-NonNullAttr 0x5557a53404e8 <col:63, col:77> 1
|-FunctionDecl 0x5557a53405f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5557a5340538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5557a5340698 <line:557:22>
| `-NonNullAttr 0x5557a53406f0 <col:52, col:66> 1
|-FunctionDecl 0x5557a53407f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5557a5340738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5557a5340898 <line:559:19>
| `-NonNullAttr 0x5557a53408f0 <col:49, col:63> 1
|-FunctionDecl 0x5557a5340b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5557a5340938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5557a53409c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5557a5340bd8 <col:39>
| `-NonNullAttr 0x5557a5340c30 <col:69, col:86> 1 2
|-FunctionDecl 0x5557a5340d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5557a5340c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5557a5340dd8 <line:564:22>
| `-NonNullAttr 0x5557a5340e30 <col:52, col:66> 1
|-FunctionDecl 0x5557a5340f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5557a5340ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5557a5341040 <line:566:22>
| `-NonNullAttr 0x5557a5341098 <col:52, col:66> 1
|-FunctionDecl 0x5557a5341258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5557a53410e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5557a5341178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5557a5341308 <col:39>
| `-NonNullAttr 0x5557a5341360 <col:69, col:86> 1 2
|-FunctionDecl 0x5557a5341460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5557a53413a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5557a5341508 <line:571:22>
| `-NonNullAttr 0x5557a5341560 <col:52, col:66> 1
|-FunctionDecl 0x5557a5341748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5557a5341610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5557a53417f0 <line:573:22>
| `-NonNullAttr 0x5557a5341848 <col:63, col:77> 1
|-FunctionDecl 0x5557a5341950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5557a5341898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5557a53419f8 <line:575:22>
| `-NonNullAttr 0x5557a5341a50 <col:63, col:77> 1
|-FunctionDecl 0x5557a5341c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5557a5341a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5557a5341b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5557a5341d28 <line:579:22>
| `-NonNullAttr 0x5557a5341d80 <col:63, col:80> 1 2
|-FunctionDecl 0x5557a5341fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5557a5341dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5557a5341e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5557a5342058 <line:582:22>
| `-NonNullAttr 0x5557a53420b0 <col:63, col:77> 1
|-FunctionDecl 0x5557a5342258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5557a53420f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5557a5342178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5557a5342308 <line:586:22>
| `-NonNullAttr 0x5557a5342360 <col:63, col:80> 1 2
|-FunctionDecl 0x5557a53424e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5557a53423a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5557a5342428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5557a5342598 <col:36>
| `-NonNullAttr 0x5557a53425f0 <col:77, col:91> 1
|-FunctionDecl 0x5557a5342928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5557a53426d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5557a53427e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5557a53429d8 <line:591:22>
| `-NonNullAttr 0x5557a5342a30 <col:63, col:77> 1
|-FunctionDecl 0x5557a5342ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5557a5342a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5557a5342c50 <line:593:22>
| `-NonNullAttr 0x5557a5342ca8 <col:63, col:77> 1
|-FunctionDecl 0x5557a5342db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5557a5342cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5557a5342e58 <line:595:22>
| `-NonNullAttr 0x5557a5342eb0 <col:52, col:66> 1
|-FunctionDecl 0x5557a5342fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5557a5342f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5557a5343070 <line:597:22>
| `-NonNullAttr 0x5557a53430c8 <col:52, col:66> 1
|-FunctionDecl 0x5557a53432f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5557a5343118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5557a5343190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5557a53433a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5557a53436d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5557a5343428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5557a53434a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5557a5343530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5557a5343790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5557a53439a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5557a5343870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5557a5343a50 <line:606:22>
| `-NonNullAttr 0x5557a5343aa8 <col:63, col:77> 1
|-FunctionDecl 0x5557a5343bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5557a5343af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5557a5343c58 <line:608:22>
| `-NonNullAttr 0x5557a5343cb0 <col:63, col:77> 1
|-FunctionDecl 0x5557a5343f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5557a5343cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5557a5343d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5557a5343fc0 <line:612:22>
| `-NonNullAttr 0x5557a5344018 <col:63, col:80> 1 2
|-FunctionDecl 0x5557a5344228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5557a5344068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5557a53440e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5557a53442d8 <col:37>
| `-NonNullAttr 0x5557a5344330 <col:78, col:92> 1
|-FunctionDecl 0x5557a5344548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5557a5344378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5557a5344420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5557a53445f8 <line:618:22>
| `-NonNullAttr 0x5557a5344650 <col:63, col:80> 1 2
|-FunctionDecl 0x5557a5344818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5557a5344698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5557a5344710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5557a53448c8 <line:621:22>
| `-NonNullAttr 0x5557a5344920 <col:63, col:77> 1
|-FunctionDecl 0x5557a5344bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5557a5344a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5557a5344a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5557a5344c78 <line:623:22>
| `-NonNullAttr 0x5557a5344cd0 <col:63, col:77> 1
|-FunctionDecl 0x5557a5344e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5557a5344d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5557a5344f20 <line:625:22>
| `-NonNullAttr 0x5557a5344f78 <col:63, col:77> 1
|-FunctionDecl 0x5557a5345080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5557a5344fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5557a5345128 <line:627:22>
| `-NonNullAttr 0x5557a5345180 <col:52, col:66> 1
|-FunctionDecl 0x5557a5345280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5557a53451c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5557a5345328 <line:629:22>
| `-NonNullAttr 0x5557a5345380 <col:52, col:66> 1
|-FunctionDecl 0x5557a5345480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5557a53453c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5557a5345528 <line:631:22>
| `-NonNullAttr 0x5557a5345580 <col:52, col:66> 1
|-FunctionDecl 0x5557a5345958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5557a5345660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5557a5345770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5557a53457f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5557a5345a10 <line:635:22>
| `-NonNullAttr 0x5557a5345a68 <col:63, col:77> 1
|-FunctionDecl 0x5557a5345be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5557a5345ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5557a5345c90 <line:637:22>
| `-NonNullAttr 0x5557a5345ce8 <col:63, col:77> 1
|-FunctionDecl 0x5557a5345df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5557a5345d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5557a5345e98 <line:639:22>
| `-NonNullAttr 0x5557a5345ef0 <col:52, col:66> 1
|-FunctionDecl 0x5557a53460e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5557a5345fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5557a5346190 <line:641:22>
| `-NonNullAttr 0x5557a53461e8 <col:63, col:77> 1
|-FunctionDecl 0x5557a53462f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5557a5346238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5557a5346398 <line:643:22>
| `-NonNullAttr 0x5557a53463f0 <col:63, col:77> 1
|-FunctionDecl 0x5557a5346618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5557a5346438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5557a53464b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5557a53466c8 <line:647:22>
| `-NonNullAttr 0x5557a5346720 <col:63, col:80> 1 2
|-FunctionDecl 0x5557a5346928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5557a5346768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5557a53467e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5557a53469d8 <line:650:22>
| `-NonNullAttr 0x5557a5346a30 <col:63, col:77> 1
|-FunctionDecl 0x5557a5346d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5557a5346b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5557a5346c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5557a5346e28 <line:653:22>
| `-NonNullAttr 0x5557a5346e80 <col:63, col:77> 1
|-FunctionDecl 0x5557a5346fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5557a5346ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5557a5347090 <col:69>
|-FunctionDecl 0x5557a5347208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5557a53470f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5557a53472b0 <col:72>
|-FunctionDecl 0x5557a53474e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5557a5347318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5557a53473c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5557a5347598 <col:44>
|-FunctionDecl 0x5557a53477b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5557a5347600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5557a5347678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5557a5347868 <line:660:22>
| `-NonNullAttr 0x5557a53478c0 <col:63, col:77> 2
|-FunctionDecl 0x5557a5347d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5557a53479a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5557a5347ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5557a5347bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5557a5347dc0 <col:47>
|-FunctionDecl 0x5557a5348f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5557a5347e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5557a53490b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5557a5349020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5557a5349180 <line:667:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5557a5349240 <line:668:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5557a5349300 <line:669:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5557a53493b8 <line:670:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5557a5349438 prev 0x5557a53493b8 <line:671:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5557a53494a0 <col:24> 'int' 0
|-VarDecl 0x5557a53494d8 <line:672:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5557a5349558 prev 0x5557a53494d8 <line:673:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5557a53495c0 <col:27> 'int' 0
|-VarDecl 0x5557a53495f8 <line:674:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x5557a5349678 prev 0x5557a53495f8 <line:675:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x5557a53496e0 <col:27> 'int' 0
|-VarDecl 0x5557a5349710 <line:676:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5557a5349788 <line:677:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5557a5349808 <line:678:1, col:5> col:5 used x 'int'
|-VarDecl 0x5557a5349888 prev 0x5557a5349808 <line:679:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5557a53498f0 <col:9> 'int' 0
|-VarDecl 0x5557a5349928 <line:680:1, col:5> col:5 used y 'int'
|-VarDecl 0x5557a53499a8 prev 0x5557a5349928 <line:681:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5557a5349a10 <col:9> 'int' 0
|-VarDecl 0x5557a5349a40 <line:682:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x5557a5349ac0 <line:683:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x5557a5349b38 <line:684:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x5557a5349bb0 <line:685:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x5557a5349c28 <line:686:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x5557a5349ca0 <line:687:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x5557a5349d18 <line:688:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x5557a5349d90 <line:689:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x5557a5349e08 <line:690:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x5557a5349e88 <line:691:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x5557a5349f70 <line:692:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x5557a5349fe8 <line:693:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x5557a534a068 <line:694:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x5557a534a0e0 <line:695:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x5557a534a158 <line:696:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5557a534a1d0 <line:697:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5557a534a2e8 prev 0x5557a5348f60 <line:698:1, line:725:1> line:698:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5557a534a250 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5557a534ba88 <line:699:1, line:725:1>
|   |-CallExpr 0x5557a534a3f8 <line:700:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5557a534a3e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557a534a390 <col:3> 'void ()' Function 0x5557a52f0350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5557a534a470 <line:701:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5557a534a418 <col:3> 'int' lvalue Var 0x5557a534a068 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5557a534a458 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5557a534a438 <col:15> 'int' lvalue Var 0x5557a5349f70 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5557a534a4d0 <line:702:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5557a534a490 <col:3> 'int' lvalue Var 0x5557a5349f70 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x5557a534a4b0 <col:15> 'int' 1
|   |-BinaryOperator 0x5557a534a548 <line:703:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5557a534a4f0 <col:3> '_Bool' lvalue Var 0x5557a534a0e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5557a534a530 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5557a534a510 <col:20> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5557a534a5e0 <line:704:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5557a534a568 <col:3> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5557a534a5b8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5557a534a588 <col:27> 'int' 1
|   |-CallExpr 0x5557a534a768 <line:705:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5557a534a750 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5557a534a600 <col:3> 'void (int)' Function 0x5557a52f00d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5557a534a700 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5557a534a6e0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5557a534a6c0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5557a534a678 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5557a534a660 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5557a534a620 <col:23> '_Bool' lvalue Var 0x5557a534a0e0 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5557a534a6a8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5557a534a690 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5557a534a640 <col:41> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5557a534a7e8 <line:706:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5557a534a790 <col:3> '_Bool' lvalue Var 0x5557a5349ca0 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5557a534a7d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5557a534a7b0 <col:20> '_Bool' lvalue Var 0x5557a5349b38 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5557a534a860 <line:707:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5557a534a808 <col:3> '_Bool' lvalue Var 0x5557a5349d18 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5557a534a848 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5557a534a828 <col:20> '_Bool' lvalue Var 0x5557a5349bb0 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5557a534a8d8 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5557a534a880 <col:3> '_Bool' lvalue Var 0x5557a5349d90 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5557a534a8c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5557a534a8a0 <col:20> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5557a534a970 <line:709:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5557a534a8f8 <col:3> '_Bool' lvalue Var 0x5557a5349bb0 'y$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x5557a534a948 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5557a534a918 <col:27> 'int' 1
|   |-CallExpr 0x5557a534a9c8 <line:710:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5557a534a9b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557a534a990 <col:3> 'void ()' Function 0x5557a52f0410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5557a534aa20 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5557a534aa08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557a534a9e8 <col:3> 'void ()' Function 0x5557a52f0350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5557a534aa80 <line:712:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5557a534aa40 <col:3> 'int' lvalue Var 0x5557a5349888 'x' 'int'
|   | `-IntegerLiteral 0x5557a534aa60 <col:7> 'int' 1
|   |-CallExpr 0x5557a534aad8 <line:713:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5557a534aac0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557a534aaa0 <col:3> 'void ()' Function 0x5557a52f0410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5557a534ab30 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5557a534ab18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557a534aaf8 <col:3> 'void ()' Function 0x5557a52f0350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5557a534ae18 <line:715:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5557a534ab50 <col:3> 'int' lvalue Var 0x5557a53499a8 'y' 'int'
|   | `-ConditionalOperator 0x5557a534ade8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5557a534ac10 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5557a534abc8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5557a534abb0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5557a534ab70 <col:7> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5557a534abf8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5557a534abe0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5557a534ab90 <col:25> '_Bool' lvalue Var 0x5557a5349bb0 'y$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5557a534add0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5557a534ac30 <col:42> 'int' lvalue Var 0x5557a5349f70 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5557a534adb0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5557a534ad80 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5557a534acf0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5557a534aca8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5557a534ac90 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5557a534ac50 <col:55> '_Bool' lvalue Var 0x5557a534a0e0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5557a534acd8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5557a534acc0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5557a534ac70 <col:73> '_Bool' lvalue Var 0x5557a5349d18 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5557a534ad50 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5557a534ad10 <col:90> 'int' lvalue Var 0x5557a534a068 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5557a534ad68 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557a534ad30 <col:102> 'int' lvalue Var 0x5557a53499a8 'y' 'int'
|   |-BinaryOperator 0x5557a534b030 <line:716:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5557a534ae38 <col:3> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5557a534b018 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557a534afe8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5557a534aef8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5557a534aeb0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5557a534ae98 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5557a534ae58 <col:20> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5557a534aee0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5557a534aec8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5557a534ae78 <col:38> '_Bool' lvalue Var 0x5557a5349bb0 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5557a534afa0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5557a534af48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5557a534af18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5557a534afd0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5557a534afb8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557a534af80 <col:66> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5557a534b318 <line:717:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5557a534b050 <col:3> '_Bool' lvalue Var 0x5557a534a0e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5557a534b300 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557a534b2d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5557a534b1f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5557a534b110 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5557a534b0c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5557a534b0b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5557a534b070 <col:20> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5557a534b0f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5557a534b0e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5557a534b090 <col:38> '_Bool' lvalue Var 0x5557a5349bb0 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5557a534b1d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5557a534b188 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5557a534b170 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5557a534b130 <col:56> '_Bool' lvalue Var 0x5557a534a0e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5557a534b1b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5557a534b1a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5557a534b150 <col:74> '_Bool' lvalue Var 0x5557a5349d18 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5557a534b288 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5557a534b240 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5557a534b210 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5557a534b2b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5557a534b2a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557a534b268 <col:102> '_Bool' lvalue Var 0x5557a534a0e0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5557a534b520 <line:718:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5557a534b338 <col:3> '_Bool' lvalue Var 0x5557a5349bb0 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5557a534b508 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557a534b4d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5557a534b3f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5557a534b3b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5557a534b398 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5557a534b358 <col:20> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5557a534b3e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5557a534b3c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5557a534b378 <col:38> '_Bool' lvalue Var 0x5557a5349bb0 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5557a534b490 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5557a534b448 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5557a534b418 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5557a534b4c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5557a534b4a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557a534b470 <col:66> '_Bool' lvalue Var 0x5557a5349bb0 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5557a534b808 <line:719:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5557a534b540 <col:3> '_Bool' lvalue Var 0x5557a5349d18 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5557a534b7f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557a534b7c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5557a534b6e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5557a534b600 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5557a534b5b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5557a534b5a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5557a534b560 <col:20> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5557a534b5e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5557a534b5d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5557a534b580 <col:38> '_Bool' lvalue Var 0x5557a5349bb0 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5557a534b6c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5557a534b678 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5557a534b660 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5557a534b620 <col:56> '_Bool' lvalue Var 0x5557a534a0e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5557a534b6a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5557a534b690 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5557a534b640 <col:74> '_Bool' lvalue Var 0x5557a5349d18 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5557a534b778 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5557a534b730 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5557a534b700 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5557a534b7a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5557a534b790 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557a534b758 <col:102> '_Bool' lvalue Var 0x5557a5349d18 'y$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x5557a534b860 <line:720:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5557a534b848 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557a534b828 <col:3> 'void ()' Function 0x5557a52f0410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5557a534b8b8 <line:721:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5557a534b8a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557a534b880 <col:3> 'void ()' Function 0x5557a52f0350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5557a534b970 <line:722:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5557a534b8d8 <col:3> 'int' lvalue Var 0x5557a5349438 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5557a534b950 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5557a534b938 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5557a534b8f8 <col:22> 'int' lvalue Var 0x5557a5349438 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5557a534b918 <col:41> 'int' 1
|   |-CallExpr 0x5557a534b9c8 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5557a534b9b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557a534b990 <col:3> 'void ()' Function 0x5557a52f0410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5557a534ba78 <line:724:3, col:36>
|     `-CallExpr 0x5557a534ba58 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5557a534ba40 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5557a534b9e8 <col:10> 'void *(void)' Function 0x5557a52efe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5557a534bc10 prev 0x5557a53490b8 <line:726:1, line:758:1> line:726:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5557a534bb78 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5557a534f800 <line:727:1, line:758:1>
|   |-CallExpr 0x5557a534bcf0 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5557a534bcd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557a534bcb8 <col:3> 'void ()' Function 0x5557a52f0350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5557a534bd68 <line:729:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5557a534bd10 <col:3> 'int' lvalue Var 0x5557a5349558 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5557a534bd50 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5557a534bd30 <col:25> 'int' lvalue Var 0x5557a5349888 'x' 'int'
|   |-CallExpr 0x5557a534bdc0 <line:730:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5557a534bda8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557a534bd88 <col:3> 'void ()' Function 0x5557a52f0410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5557a534be18 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5557a534be00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557a534bde0 <col:3> 'void ()' Function 0x5557a52f0350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5557a534bec8 <line:732:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5557a534be38 <col:3> '_Bool' lvalue Var 0x5557a534a158 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5557a534beb0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5557a534be90 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5557a534be78 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5557a534be58 <col:19> 'void *(void)' Function 0x5557a52efe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5557a534bf90 <line:733:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5557a534bee8 <col:3> '_Bool' lvalue Var 0x5557a534a1d0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5557a534bf60 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5557a534bf40 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5557a534bf28 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5557a534bf08 <col:19> 'void *(void)' Function 0x5557a52efe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5557a534c008 <line:734:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5557a534bfb0 <col:3> '_Bool' lvalue Var 0x5557a5349a40 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5557a534bff0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5557a534bfd0 <col:21> '_Bool' lvalue Var 0x5557a534a1d0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5557a534c080 <line:735:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5557a534c028 <col:3> 'int' lvalue Var 0x5557a5349ac0 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5557a534c068 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5557a534c048 <col:15> 'int' lvalue Var 0x5557a53499a8 'y' 'int'
|   |-BinaryOperator 0x5557a534c4b8 <line:736:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5557a534c0a0 <col:3> 'int' lvalue Var 0x5557a53499a8 'y' 'int'
|   | `-ConditionalOperator 0x5557a534c488 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5557a534c2b0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5557a534c1d0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5557a534c0f8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5557a534c0e0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5557a534c0c0 <col:8> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5557a534c1b0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5557a534c148 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5557a534c130 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5557a534c110 <col:27> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x5557a534c198 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5557a534c180 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5557a534c160 <col:46> '_Bool' lvalue Var 0x5557a534a0e0 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5557a534c290 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5557a534c228 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5557a534c210 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5557a534c1f0 <col:65> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x5557a534c278 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5557a534c260 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5557a534c240 <col:84> '_Bool' lvalue Var 0x5557a5349d90 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5557a534c470 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5557a534c2d0 <col:101> 'int' lvalue Var 0x5557a53499a8 'y' 'int'
|   |   `-ParenExpr 0x5557a534c450 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5557a534c420 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5557a534c390 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5557a534c348 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5557a534c330 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5557a534c2f0 <col:106> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5557a534c378 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5557a534c360 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5557a534c310 <col:124> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5557a534c3f0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5557a534c3b0 <col:141> 'int' lvalue Var 0x5557a5349f70 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5557a534c408 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557a534c3d0 <col:153> 'int' lvalue Var 0x5557a534a068 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5557a534c9c8 <line:737:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5557a534c4d8 <col:3> 'int' lvalue Var 0x5557a5349f70 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x5557a534c998 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5557a534c968 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5557a534c950 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5557a534c4f8 <col:15> '_Bool' lvalue Var 0x5557a534a1d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5557a534c980 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5557a534c518 <col:31> 'int' lvalue Var 0x5557a5349f70 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5557a534c930 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5557a534c900 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5557a534c728 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5557a534c648 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5557a534c570 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5557a534c558 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5557a534c538 <col:45> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5557a534c628 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5557a534c5c0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5557a534c5a8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5557a534c588 <col:64> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5557a534c610 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5557a534c5f8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5557a534c5d8 <col:83> '_Bool' lvalue Var 0x5557a534a0e0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5557a534c708 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5557a534c6a0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5557a534c688 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5557a534c668 <col:102> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5557a534c6f0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5557a534c6d8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5557a534c6b8 <col:121> '_Bool' lvalue Var 0x5557a5349d90 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5557a534c8e8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5557a534c748 <col:138> 'int' lvalue Var 0x5557a5349f70 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x5557a534c8c8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5557a534c898 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5557a534c808 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5557a534c7c0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5557a534c7a8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5557a534c768 <col:151> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5557a534c7f0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5557a534c7d8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5557a534c788 <col:169> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5557a534c868 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5557a534c828 <col:186> 'int' lvalue Var 0x5557a5349f70 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5557a534c880 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5557a534c848 <col:198> 'int' lvalue Var 0x5557a5349f70 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5557a534ced8 <line:738:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5557a534c9e8 <col:3> 'int' lvalue Var 0x5557a534a068 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x5557a534cea8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5557a534ce78 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5557a534ce60 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5557a534ca08 <col:15> '_Bool' lvalue Var 0x5557a534a1d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5557a534ce90 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5557a534ca28 <col:31> 'int' lvalue Var 0x5557a534a068 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x5557a534ce40 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5557a534ce10 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5557a534cc38 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5557a534cb58 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5557a534ca80 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5557a534ca68 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5557a534ca48 <col:45> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5557a534cb38 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5557a534cad0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5557a534cab8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5557a534ca98 <col:64> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5557a534cb20 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5557a534cb08 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5557a534cae8 <col:83> '_Bool' lvalue Var 0x5557a534a0e0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5557a534cc18 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5557a534cbb0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5557a534cb98 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5557a534cb78 <col:102> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5557a534cc00 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5557a534cbe8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5557a534cbc8 <col:121> '_Bool' lvalue Var 0x5557a5349d90 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5557a534cdf8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5557a534cc58 <col:138> 'int' lvalue Var 0x5557a534a068 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x5557a534cdd8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5557a534cda8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5557a534cd18 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5557a534ccd0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5557a534ccb8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5557a534cc78 <col:151> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5557a534cd00 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5557a534cce8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5557a534cc98 <col:169> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5557a534cd78 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5557a534cd38 <col:186> 'int' lvalue Var 0x5557a534a068 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5557a534cd90 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5557a534cd58 <col:198> 'int' lvalue Var 0x5557a534a068 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5557a534d490 <line:739:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5557a534cef8 <col:3> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5557a534d478 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557a534d448 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5557a534d400 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5557a534d3e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5557a534cf18 <col:20> '_Bool' lvalue Var 0x5557a534a1d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5557a534d430 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5557a534d418 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5557a534cf38 <col:36> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5557a534d3c8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5557a534d398 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5557a534d158 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5557a534d078 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5557a534cfa0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5557a534cf78 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5557a534cf58 <col:55> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5557a534d058 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5557a534cff0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5557a534cfd8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5557a534cfb8 <col:74> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5557a534d040 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5557a534d028 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5557a534d008 <col:93> '_Bool' lvalue Var 0x5557a534a0e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5557a534d138 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5557a534d0d0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5557a534d0b8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5557a534d098 <col:112> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5557a534d120 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5557a534d108 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5557a534d0e8 <col:131> '_Bool' lvalue Var 0x5557a5349d90 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5557a534d380 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5557a534d368 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5557a534d178 <col:148> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5557a534d348 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5557a534d318 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5557a534d238 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5557a534d1f0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5557a534d1d8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5557a534d198 <col:166> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5557a534d220 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5557a534d208 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5557a534d1b8 <col:184> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5557a534d2d0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5557a534d288 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5557a534d258 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5557a534d300 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5557a534d2e8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5557a534d2b0 <col:212> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5557a534da58 <line:740:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5557a534d4b0 <col:3> '_Bool' lvalue Var 0x5557a534a0e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5557a534da40 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557a534da10 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5557a534d9c8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5557a534d9b0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5557a534d4d0 <col:20> '_Bool' lvalue Var 0x5557a534a1d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5557a534d9f8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5557a534d9e0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5557a534d4f0 <col:36> '_Bool' lvalue Var 0x5557a534a0e0 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5557a534d990 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5557a534d960 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5557a534d700 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5557a534d620 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5557a534d548 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5557a534d530 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5557a534d510 <col:55> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5557a534d600 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5557a534d598 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5557a534d580 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5557a534d560 <col:74> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5557a534d5e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5557a534d5d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5557a534d5b0 <col:93> '_Bool' lvalue Var 0x5557a534a0e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5557a534d6e0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5557a534d678 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5557a534d660 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5557a534d640 <col:112> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5557a534d6c8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5557a534d6b0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5557a534d690 <col:131> '_Bool' lvalue Var 0x5557a5349d90 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5557a534d948 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5557a534d930 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5557a534d720 <col:148> '_Bool' lvalue Var 0x5557a534a0e0 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5557a534d910 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5557a534d8e0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5557a534d7e0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5557a534d798 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5557a534d780 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5557a534d740 <col:166> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5557a534d7c8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5557a534d7b0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5557a534d760 <col:184> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5557a534d8b0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5557a534d830 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5557a534d800 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5557a534d8c8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5557a534d888 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5557a534d858 <col:219> 'int' 0
|   |-BinaryOperator 0x5557a534e010 <line:741:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5557a534da78 <col:3> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5557a534dff8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557a534dfc8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5557a534df70 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5557a534df58 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5557a534da98 <col:20> '_Bool' lvalue Var 0x5557a534a1d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5557a534dfb0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5557a534df88 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5557a534dab8 <col:36> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x5557a534df38 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5557a534df08 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5557a534dcc8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5557a534dbe8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5557a534db10 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5557a534daf8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5557a534dad8 <col:55> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5557a534dbc8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5557a534db60 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5557a534db48 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5557a534db28 <col:74> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5557a534dbb0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5557a534db98 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5557a534db78 <col:93> '_Bool' lvalue Var 0x5557a534a0e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5557a534dca8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5557a534dc40 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5557a534dc28 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5557a534dc08 <col:112> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5557a534dc90 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5557a534dc78 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5557a534dc58 <col:131> '_Bool' lvalue Var 0x5557a5349d90 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5557a534def0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5557a534ded8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5557a534dce8 <col:148> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x5557a534deb8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5557a534de88 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5557a534dda8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5557a534dd60 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5557a534dd48 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5557a534dd08 <col:166> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5557a534dd90 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5557a534dd78 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5557a534dd28 <col:184> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5557a534de40 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5557a534ddf8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5557a534ddc8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5557a534de70 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5557a534de58 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5557a534de20 <col:212> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5557a534e5d8 <line:742:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5557a534e030 <col:3> '_Bool' lvalue Var 0x5557a5349d90 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5557a534e5c0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557a534e590 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5557a534e548 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5557a534e530 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5557a534e050 <col:20> '_Bool' lvalue Var 0x5557a534a1d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5557a534e578 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5557a534e560 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5557a534e070 <col:36> '_Bool' lvalue Var 0x5557a5349d90 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x5557a534e510 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5557a534e4e0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5557a534e280 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5557a534e1a0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5557a534e0c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5557a534e0b0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5557a534e090 <col:55> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5557a534e180 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5557a534e118 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5557a534e100 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5557a534e0e0 <col:74> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5557a534e168 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5557a534e150 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5557a534e130 <col:93> '_Bool' lvalue Var 0x5557a534a0e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5557a534e260 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5557a534e1f8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5557a534e1e0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5557a534e1c0 <col:112> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5557a534e248 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5557a534e230 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5557a534e210 <col:131> '_Bool' lvalue Var 0x5557a5349d90 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5557a534e4c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5557a534e4b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5557a534e2a0 <col:148> '_Bool' lvalue Var 0x5557a5349d90 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x5557a534e490 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5557a534e460 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5557a534e360 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5557a534e318 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5557a534e300 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5557a534e2c0 <col:166> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5557a534e348 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5557a534e330 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5557a534e2e0 <col:184> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5557a534e430 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5557a534e3b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5557a534e380 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5557a534e448 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5557a534e408 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5557a534e3d8 <col:219> 'int' 0
|   |-BinaryOperator 0x5557a534e650 <line:743:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5557a534e5f8 <col:3> 'int' lvalue Var 0x5557a5349678 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x5557a534e638 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5557a534e618 <col:25> 'int' lvalue Var 0x5557a53499a8 'y' 'int'
|   |-BinaryOperator 0x5557a534e780 <line:744:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5557a534e670 <col:3> 'int' lvalue Var 0x5557a53499a8 'y' 'int'
|   | `-ConditionalOperator 0x5557a534e750 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5557a534e708 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5557a534e6f0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5557a534e690 <col:7> '_Bool' lvalue Var 0x5557a5349a40 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5557a534e720 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5557a534e6b0 <col:25> 'int' lvalue Var 0x5557a5349ac0 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5557a534e738 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5557a534e6d0 <col:37> 'int' lvalue Var 0x5557a53499a8 'y' 'int'
|   |-BinaryOperator 0x5557a534e818 <line:745:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5557a534e7a0 <col:3> '_Bool' lvalue Var 0x5557a5349a40 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5557a534e7f0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5557a534e7c0 <col:28> 'int' 0
|   |-CallExpr 0x5557a534e870 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5557a534e858 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557a534e838 <col:3> 'void ()' Function 0x5557a52f0410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5557a534e8c8 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5557a534e8b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557a534e890 <col:3> 'void ()' Function 0x5557a52f0350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5557a534ebb0 <line:748:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5557a534e8e8 <col:3> 'int' lvalue Var 0x5557a53499a8 'y' 'int'
|   | `-ConditionalOperator 0x5557a534eb80 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5557a534e9a8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5557a534e960 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5557a534e948 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5557a534e908 <col:7> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5557a534e990 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5557a534e978 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5557a534e928 <col:25> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5557a534eb68 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5557a534e9c8 <col:42> 'int' lvalue Var 0x5557a5349f70 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5557a534eb48 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5557a534eb18 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5557a534ea88 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5557a534ea40 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5557a534ea28 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5557a534e9e8 <col:55> '_Bool' lvalue Var 0x5557a534a0e0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5557a534ea70 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5557a534ea58 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5557a534ea08 <col:73> '_Bool' lvalue Var 0x5557a5349d90 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5557a534eae8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5557a534eaa8 <col:90> 'int' lvalue Var 0x5557a534a068 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5557a534eb00 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557a534eac8 <col:102> 'int' lvalue Var 0x5557a53499a8 'y' 'int'
|   |-BinaryOperator 0x5557a534edb8 <line:749:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5557a534ebd0 <col:3> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5557a534eda0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557a534ed70 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5557a534ec90 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5557a534ec48 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5557a534ec30 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5557a534ebf0 <col:20> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5557a534ec78 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5557a534ec60 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5557a534ec10 <col:38> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5557a534ed28 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5557a534ece0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5557a534ecb0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5557a534ed58 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5557a534ed40 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557a534ed08 <col:66> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5557a534f0c8 <line:750:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5557a534edd8 <col:3> '_Bool' lvalue Var 0x5557a534a0e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5557a534f0b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557a534f080 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5557a534ef78 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5557a534ee98 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5557a534ee50 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5557a534ee38 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5557a534edf8 <col:20> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5557a534ee80 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5557a534ee68 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5557a534ee18 <col:38> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5557a534ef58 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5557a534ef10 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5557a534eef8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5557a534eeb8 <col:56> '_Bool' lvalue Var 0x5557a534a0e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5557a534ef40 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5557a534ef28 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5557a534eed8 <col:74> '_Bool' lvalue Var 0x5557a5349d90 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5557a534f038 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5557a534eff0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5557a534efc0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5557a534f068 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5557a534f050 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557a534f018 <col:102> '_Bool' lvalue Var 0x5557a534a0e0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5557a534f2d0 <line:751:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5557a534f0e8 <col:3> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5557a534f2b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557a534f288 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5557a534f1a8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5557a534f160 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5557a534f148 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5557a534f108 <col:20> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5557a534f190 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5557a534f178 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5557a534f128 <col:38> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5557a534f240 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5557a534f1f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5557a534f1c8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5557a534f270 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5557a534f258 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557a534f220 <col:66> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5557a534f5b8 <line:752:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5557a534f2f0 <col:3> '_Bool' lvalue Var 0x5557a5349d90 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5557a534f5a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5557a534f570 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5557a534f490 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5557a534f3b0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5557a534f368 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5557a534f350 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5557a534f310 <col:20> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5557a534f398 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5557a534f380 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5557a534f330 <col:38> '_Bool' lvalue Var 0x5557a5349c28 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5557a534f470 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5557a534f428 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5557a534f410 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5557a534f3d0 <col:56> '_Bool' lvalue Var 0x5557a534a0e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5557a534f458 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5557a534f440 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5557a534f3f0 <col:74> '_Bool' lvalue Var 0x5557a5349d90 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5557a534f528 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5557a534f4e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5557a534f4b0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5557a534f558 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5557a534f540 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5557a534f508 <col:102> '_Bool' lvalue Var 0x5557a5349d90 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5557a534f610 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5557a534f5f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557a534f5d8 <col:3> 'void ()' Function 0x5557a52f0410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5557a534f668 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5557a534f650 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557a534f630 <col:3> 'void ()' Function 0x5557a52f0350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5557a534f720 <line:755:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5557a534f688 <col:3> 'int' lvalue Var 0x5557a5349438 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5557a534f700 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5557a534f6e8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5557a534f6a8 <col:22> 'int' lvalue Var 0x5557a5349438 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5557a534f6c8 <col:41> 'int' 1
|   |-CallExpr 0x5557a534f778 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5557a534f760 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5557a534f740 <col:3> 'void ()' Function 0x5557a52f0410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5557a534f7f0 <line:757:3, col:36>
|     `-CallExpr 0x5557a534f7d0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5557a534f7b8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5557a534f798 <col:10> 'void *(void)' Function 0x5557a52efe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5557a534f920 prev 0x5557a5349180 <line:759:1, line:761:1> line:759:6 fence 'void ()'
| `-CompoundStmt 0x5557a534f9c0 <line:760:1, line:761:1>
|-FunctionDecl 0x5557a534f9f0 prev 0x5557a5349240 <line:762:1, line:764:1> line:762:6 isync 'void ()'
| `-CompoundStmt 0x5557a534fa90 <line:763:1, line:764:1>
|-FunctionDecl 0x5557a534fac0 prev 0x5557a5349300 <line:765:1, line:767:1> line:765:6 lwfence 'void ()'
| `-CompoundStmt 0x5557a534fb60 <line:766:1, line:767:1>
`-FunctionDecl 0x5557a534fbc8 <line:768:1, line:790:1> line:768:5 main 'int ()'
  `-CompoundStmt 0x5557a5351550 <line:769:1, line:790:1>
    |-DeclStmt 0x5557a534fce0 <line:770:3, col:18>
    | `-VarDecl 0x5557a534fc78 <col:3, col:13> col:13 used t2307 'pthread_t':'unsigned long'
    |-CallExpr 0x5557a534fee8 <line:771:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5557a534fed0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5557a534fcf8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5557a53308f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5557a534fd38 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5557a534fd18 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5557a534fc78 't2307' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5557a534ff28 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5557a534fdb0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5557a534fd88 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5557a534fd50 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5557a534ff40 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5557a534fdd0 <col:39> 'void *(void *)' Function 0x5557a534a2e8 'P0' 'void *(void *)'
    | `-ParenExpr 0x5557a534fe50 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5557a534fe28 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5557a534fdf0 <col:52> 'int' 0
    |-DeclStmt 0x5557a5350038 <line:772:3, col:18>
    | `-VarDecl 0x5557a534ffd0 <col:3, col:13> col:13 used t2308 'pthread_t':'unsigned long'
    |-CallExpr 0x5557a53501e0 <line:773:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5557a53501c8 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5557a5350050 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5557a53308f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5557a5350090 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5557a5350070 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5557a534ffd0 't2308' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5557a5350220 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5557a5350108 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5557a53500e0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5557a53500a8 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5557a5350238 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5557a5350128 <col:39> 'void *(void *)' Function 0x5557a534bc10 'P1' 'void *(void *)'
    | `-ParenExpr 0x5557a53501a8 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5557a5350180 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5557a5350148 <col:52> 'int' 0
    |-CallExpr 0x5557a5350288 <line:774:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5557a5350270 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5557a5350250 <col:3> 'void ()' Function 0x5557a52f0350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5557a5350358 <line:775:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5557a53502a8 <col:3> '_Bool' lvalue Var 0x5557a5349710 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5557a5350340 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5557a5350320 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5557a5350308 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5557a53502c8 <col:21> 'int' lvalue Var 0x5557a5349438 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5557a53502e8 <col:41> 'int' 2
    |-CallExpr 0x5557a53503b0 <line:776:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5557a5350398 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5557a5350378 <col:3> 'void ()' Function 0x5557a52f0410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5557a5350428 <line:777:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5557a5350410 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5557a53503d0 <col:3> 'void (int)' Function 0x5557a52efca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5557a5350468 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5557a5350450 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5557a53503f0 <col:21> '_Bool' lvalue Var 0x5557a5349710 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5557a53504b8 <line:778:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5557a53504a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5557a5350480 <col:3> 'void ()' Function 0x5557a52f0350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5557a53507a0 <line:779:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5557a53504d8 <col:3> 'int' lvalue Var 0x5557a53499a8 'y' 'int'
    | `-ConditionalOperator 0x5557a5350770 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5557a5350598 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5557a5350550 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5557a5350538 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5557a53504f8 <col:7> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5557a5350580 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5557a5350568 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5557a5350518 <col:25> '_Bool' lvalue Var 0x5557a5349b38 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5557a5350758 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5557a53505b8 <col:42> 'int' lvalue Var 0x5557a5349f70 'y$w_buff0' 'int'
    |   `-ParenExpr 0x5557a5350738 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5557a5350708 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5557a5350678 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5557a5350630 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5557a5350618 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5557a53505d8 <col:55> '_Bool' lvalue Var 0x5557a534a0e0 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5557a5350660 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5557a5350648 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5557a53505f8 <col:73> '_Bool' lvalue Var 0x5557a5349ca0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5557a53506d8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5557a5350698 <col:90> 'int' lvalue Var 0x5557a534a068 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5557a53506f0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5557a53506b8 <col:102> 'int' lvalue Var 0x5557a53499a8 'y' 'int'
    |-BinaryOperator 0x5557a53509a8 <line:780:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5557a53507c0 <col:3> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5557a5350990 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5557a5350960 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5557a5350880 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5557a5350838 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5557a5350820 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5557a53507e0 <col:20> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5557a5350868 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5557a5350850 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5557a5350800 <col:38> '_Bool' lvalue Var 0x5557a5349b38 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5557a5350918 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5557a53508d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5557a53508a0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5557a5350948 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5557a5350930 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5557a53508f8 <col:66> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5557a5350c90 <line:781:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5557a53509c8 <col:3> '_Bool' lvalue Var 0x5557a534a0e0 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5557a5350c78 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5557a5350c48 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5557a5350b68 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5557a5350a88 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5557a5350a40 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5557a5350a28 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5557a53509e8 <col:20> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5557a5350a70 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5557a5350a58 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5557a5350a08 <col:38> '_Bool' lvalue Var 0x5557a5349b38 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5557a5350b48 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5557a5350b00 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5557a5350ae8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5557a5350aa8 <col:56> '_Bool' lvalue Var 0x5557a534a0e0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5557a5350b30 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5557a5350b18 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5557a5350ac8 <col:74> '_Bool' lvalue Var 0x5557a5349ca0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5557a5350c00 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5557a5350bb8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5557a5350b88 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5557a5350c30 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5557a5350c18 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5557a5350be0 <col:102> '_Bool' lvalue Var 0x5557a534a0e0 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5557a5350e98 <line:782:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5557a5350cb0 <col:3> '_Bool' lvalue Var 0x5557a5349b38 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5557a5350e80 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5557a5350e50 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5557a5350d70 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5557a5350d28 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5557a5350d10 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5557a5350cd0 <col:20> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5557a5350d58 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5557a5350d40 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5557a5350cf0 <col:38> '_Bool' lvalue Var 0x5557a5349b38 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5557a5350e08 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5557a5350dc0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5557a5350d90 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5557a5350e38 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5557a5350e20 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5557a5350de8 <col:66> '_Bool' lvalue Var 0x5557a5349b38 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5557a53511a8 <line:783:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5557a5350eb8 <col:3> '_Bool' lvalue Var 0x5557a5349ca0 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5557a5351190 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5557a5351160 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5557a5351080 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5557a5350f78 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5557a5350f30 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5557a5350f18 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5557a5350ed8 <col:20> '_Bool' lvalue Var 0x5557a5349fe8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5557a5350f60 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5557a5350f48 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5557a5350ef8 <col:38> '_Bool' lvalue Var 0x5557a5349b38 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5557a5351060 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5557a5351018 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5557a5351000 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5557a5350f98 <col:56> '_Bool' lvalue Var 0x5557a534a0e0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5557a5351048 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5557a5351030 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5557a5350fe0 <col:74> '_Bool' lvalue Var 0x5557a5349ca0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5557a5351118 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5557a53510d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5557a53510a0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5557a5351148 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5557a5351130 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5557a53510f8 <col:102> '_Bool' lvalue Var 0x5557a5349ca0 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5557a5351200 <line:784:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5557a53511e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5557a53511c8 <col:3> 'void ()' Function 0x5557a52f0410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5557a5351258 <line:785:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5557a5351240 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5557a5351220 <col:3> 'void ()' Function 0x5557a52f0350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5557a53513f8 <line:786:3, col:75> '_Bool' '='
    | |-DeclRefExpr 0x5557a5351278 <col:3> '_Bool' lvalue Var 0x5557a5349788 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5557a53513e0 <col:21, col:75> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5557a53513c8 <col:21, col:75> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5557a53513a8 <col:22, col:75> 'int'
    |       `-BinaryOperator 0x5557a5351388 <col:23, col:74> 'int' '&&'
    |         |-BinaryOperator 0x5557a53512f0 <col:23, col:46> 'int' '=='
    |         | |-ImplicitCastExpr 0x5557a53512d8 <col:23> 'int' <LValueToRValue>
    |         | | `-DeclRefExpr 0x5557a5351298 <col:23> 'int' lvalue Var 0x5557a5349558 '__unbuffered_p1_EAX' 'int'
    |         | `-IntegerLiteral 0x5557a53512b8 <col:46> 'int' 1
    |         `-BinaryOperator 0x5557a5351368 <col:51, col:74> 'int' '=='
    |           |-ImplicitCastExpr 0x5557a5351350 <col:51> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5557a5351310 <col:51> 'int' lvalue Var 0x5557a5349678 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x5557a5351330 <col:74> 'int' 0
    |-CallExpr 0x5557a5351450 <line:787:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5557a5351438 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5557a5351418 <col:3> 'void ()' Function 0x5557a52f0410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5557a53514c8 <line:788:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5557a53514b0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5557a5351470 <col:3> 'void (int)' Function 0x5557a52f00d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5557a5351508 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5557a53514f0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5557a5351490 <col:21> '_Bool' lvalue Var 0x5557a5349788 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5557a5351540 <line:789:3, col:10>
      `-IntegerLiteral 0x5557a5351520 <col:10> 'int' 0
