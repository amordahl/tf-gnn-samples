TranslationUnitDecl 0x5582dbb40f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5582dbb41848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5582dbb41520 '__int128'
|-TypedefDecl 0x5582dbb418b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5582dbb41540 'unsigned __int128'
|-TypedefDecl 0x5582dbb41bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5582dbb41990 'struct __NSConstantString_tag'
|   `-Record 0x5582dbb41910 '__NSConstantString_tag'
|-TypedefDecl 0x5582dbb41c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5582dbb41c20 'char *'
|   `-BuiltinType 0x5582dbb41020 'char'
|-TypedefDecl 0x5582dbb80b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5582dbb41f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5582dbb41d40 'struct __va_list_tag'
|     `-Record 0x5582dbb41cc0 '__va_list_tag'
|-FunctionDecl 0x5582dbb80ca0 <pthread-wmm/mix027_tso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5582dbb80bd0 <col:31> col:34 'int'
|-FunctionDecl 0x5582dbb80e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5582dbb80f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5582dbb810d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5582dbb81048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5582dbb81308 <col:40, col:99>
|   |-IfStmt 0x5582dbb812d8 <col:42, col:88>
|   | |-UnaryOperator 0x5582dbb811b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5582dbb811a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5582dbb81180 <col:47> 'int' lvalue ParmVar 0x5582dbb81048 'expression' 'int'
|   | `-CompoundStmt 0x5582dbb812c0 <col:59, col:88>
|   |   `-LabelStmt 0x5582dbb812a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5582dbb81238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5582dbb81220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5582dbb811d0 <col:68> 'void () __attribute__((noreturn))' Function 0x5582dbb80f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5582dbb812f0 <col:89>
|   `-ReturnStmt 0x5582dbb812f8 <col:91>
|-FunctionDecl 0x5582dbb81350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5582dbb81410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5582dbb81790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5582dbb814c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5582dbb81548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5582dbb815c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5582dbb81648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5582dbb81850 <line:10:22>
|-FunctionDecl 0x5582dbba78a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5582dbb818c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5582dbb81940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5582dbb819c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5582dbb81a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5582dbba7960 <line:13:22>
|-FunctionDecl 0x5582dbba7c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5582dbba79d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5582dbba7a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5582dbba7ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5582dbba7cc8 <line:15:22>
|-TypedefDecl 0x5582dbba7d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5582dbb410e0 'unsigned char'
|-TypedefDecl 0x5582dbba7da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5582dbb41100 'unsigned short'
|-TypedefDecl 0x5582dbba7e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5582dbb41120 'unsigned int'
|-TypedefDecl 0x5582dbba7e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5582dbb41140 'unsigned long'
|-TypedefDecl 0x5582dbba7ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5582dbb41040 'signed char'
|-TypedefDecl 0x5582dbba7f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5582dbb410e0 'unsigned char'
|-TypedefDecl 0x5582dbba7fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5582dbb41060 'short'
|-TypedefDecl 0x5582dbba8048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5582dbb41100 'unsigned short'
|-TypedefDecl 0x5582dbba80b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5582dbb41080 'int'
|-TypedefDecl 0x5582dbba8128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5582dbb41120 'unsigned int'
|-TypedefDecl 0x5582dbba8198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5582dbb410a0 'long'
|-TypedefDecl 0x5582dbba8208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5582dbb41140 'unsigned long'
|-TypedefDecl 0x5582dbba8278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5582dbb410a0 'long'
|-TypedefDecl 0x5582dbba82e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5582dbb41140 'unsigned long'
|-TypedefDecl 0x5582dbba8358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5582dbb41140 'unsigned long'
|-TypedefDecl 0x5582dbba83c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5582dbb41120 'unsigned int'
|-TypedefDecl 0x5582dbba8438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5582dbb41120 'unsigned int'
|-TypedefDecl 0x5582dbba84a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5582dbb41140 'unsigned long'
|-TypedefDecl 0x5582dbba8518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5582dbb41140 'unsigned long'
|-TypedefDecl 0x5582dbba8588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5582dbb41120 'unsigned int'
|-TypedefDecl 0x5582dbba85f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5582dbb41140 'unsigned long'
|-TypedefDecl 0x5582dbba8668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5582dbb410a0 'long'
|-TypedefDecl 0x5582dbba86d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5582dbb410a0 'long'
|-TypedefDecl 0x5582dbba8748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5582dbb41080 'int'
|-RecordDecl 0x5582dbba87a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5582dbba8918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5582dbba89d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5582dbba8970 'struct __fsid_t' sugar
|   `-RecordType 0x5582dbba8820 '__fsid_t'
|     `-Record 0x5582dbba87a0 ''
|-TypedefDecl 0x5582dbba8a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5582dbb410a0 'long'
|-TypedefDecl 0x5582dbba8ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5582dbb41140 'unsigned long'
|-TypedefDecl 0x5582dbba8b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5582dbb41140 'unsigned long'
|-TypedefDecl 0x5582dbba8ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5582dbb41120 'unsigned int'
|-TypedefDecl 0x5582dbba8c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5582dbb410a0 'long'
|-TypedefDecl 0x5582dbba8c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5582dbb41120 'unsigned int'
|-TypedefDecl 0x5582dbba8cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5582dbb410a0 'long'
|-TypedefDecl 0x5582dbba8d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5582dbb41080 'int'
|-TypedefDecl 0x5582dbba8dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5582dbb41080 'int'
|-TypedefDecl 0x5582dbba8e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5582dbb41080 'int'
|-TypedefDecl 0x5582dbba8eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5582dbb417a0 'void *'
|   `-BuiltinType 0x5582dbb40fe0 'void'
|-TypedefDecl 0x5582dbba8f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5582dbb410a0 'long'
|-TypedefDecl 0x5582dbba8f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5582dbb410a0 'long'
|-TypedefDecl 0x5582dbba9008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5582dbb410a0 'long'
|-TypedefDecl 0x5582dbba9078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5582dbb41140 'unsigned long'
|-TypedefDecl 0x5582dbba90e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5582dbb41140 'unsigned long'
|-TypedefDecl 0x5582dbba9158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5582dbb41140 'unsigned long'
|-TypedefDecl 0x5582dbba91c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5582dbb41140 'unsigned long'
|-TypedefDecl 0x5582dbba9238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5582dbb410a0 'long'
|-TypedefDecl 0x5582dbba92a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5582dbb410a0 'long'
|-TypedefDecl 0x5582dbba9318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5582dbb410a0 'long'
|-TypedefDecl 0x5582dbba9388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5582dbb41140 'unsigned long'
|-TypedefDecl 0x5582dbba9418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5582dbba93e0 '__off64_t' sugar
|   |-Typedef 0x5582dbba86d8 '__off64_t'
|   `-BuiltinType 0x5582dbb410a0 'long'
|-TypedefDecl 0x5582dbba9510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5582dbba94d0 '__quad_t *'
|   `-TypedefType 0x5582dbba9470 '__quad_t' sugar
|     |-Typedef 0x5582dbba8278 '__quad_t'
|     `-BuiltinType 0x5582dbb410a0 'long'
|-TypedefDecl 0x5582dbba9580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5582dbb41c20 'char *'
|   `-BuiltinType 0x5582dbb41020 'char'
|-TypedefDecl 0x5582dbba95f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5582dbb410a0 'long'
|-TypedefDecl 0x5582dbba9660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5582dbb41120 'unsigned int'
|-FunctionDecl 0x5582dbba97a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5582dbba96d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5582dbba9ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5582dbba9ad8 <line:72:3, col:34>
|     `-CallExpr 0x5582dbba9a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5582dbba9a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5582dbba9a10 <col:10> '<builtin fn type>' Function 0x5582dbba9880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5582dbba9ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5582dbba9a30 <col:29> 'unsigned int' lvalue ParmVar 0x5582dbba96d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5582dbba9880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5582dbba9920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5582dbba9990 <col:10> Implicit
| `-ConstAttr 0x5582dbba99e8 <col:10> Implicit
|-FunctionDecl 0x5582dbba9c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5582dbba9b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5582dbba9f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5582dbba9f48 <line:77:3, col:34>
|     `-CallExpr 0x5582dbba9f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5582dbba9ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5582dbba9e78 <col:10> '<builtin fn type>' Function 0x5582dbba9ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5582dbba9f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5582dbba9e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5582dbba9b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5582dbba9ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5582dbba9d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5582dbba9df8 <col:10> Implicit
| `-ConstAttr 0x5582dbba9e50 <col:10> Implicit
|-TypedefDecl 0x5582dbba9f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5582dbb41140 'unsigned long'
|-TypedefDecl 0x5582dbbaa018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5582dbba9fe0 '__time_t' sugar
|   |-Typedef 0x5582dbba8c18 '__time_t'
|   `-BuiltinType 0x5582dbb410a0 'long'
|-RecordDecl 0x5582dbbaa070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5582dbbaa128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5582dbbaa1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5582dbbaa248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5582dbbaa210 '__pid_t' sugar
|   |-Typedef 0x5582dbba8748 '__pid_t'
|   `-BuiltinType 0x5582dbb41080 'int'
|-RecordDecl 0x5582dbbaa2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5582dbbaa360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5582dbbaa3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5582dbbaa470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5582dbbaa4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5582dbb41140 'unsigned long'
|-RecordDecl 0x5582dbbaa530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5582dbbaa7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5582dbbac8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5582dbbaa810 'struct cpu_set_t' sugar
|   `-RecordType 0x5582dbbaa5b0 'cpu_set_t'
|     `-Record 0x5582dbbaa530 ''
|-FunctionDecl 0x5582dbbacb88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5582dbbac958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5582dbbaca60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5582dbbacc38 <line:107:19>
|-FunctionDecl 0x5582dbbace10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5582dbbacca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5582dbbaceb8 <col:69>
|-FunctionDecl 0x5582dbbad030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5582dbbacf20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5582dbbad0d8 <col:64>
|-FunctionDecl 0x5582dbbad398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5582dbbad140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5582dbbad278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5582dbbad448 <line:113:22>
|-FunctionDecl 0x5582dbbad6c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5582dbbad4b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5582dbbad5a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5582dbbad778 <col:88>
|-FunctionDecl 0x5582dbbada98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5582dbbad7e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5582dbbad8c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5582dbbad950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5582dbbadb50 <col:62>
|-FunctionDecl 0x5582dbbadcc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5582dbbadbb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5582dbbadd70 <col:63>
|-FunctionDecl 0x5582dbbade98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5582dbbadf38 <col:47>
|-FunctionDecl 0x5582dbbae040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5582dbbadfa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5582dbbae0e8 <col:69>
|-FunctionDecl 0x5582dbbae1f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5582dbbae158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5582dbbae298 <col:69>
|-FunctionDecl 0x5582dbbae558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5582dbbae300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5582dbbae438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5582dbbae608 <col:88>
|-TypedefDecl 0x5582dbbae698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5582dbbae660 '__clock_t' sugar
|   |-Typedef 0x5582dbba8a58 '__clock_t'
|   `-BuiltinType 0x5582dbb410a0 'long'
|-TypedefDecl 0x5582dbbae728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5582dbbae6f0 '__clockid_t' sugar
|   |-Typedef 0x5582dbba8e48 '__clockid_t'
|   `-BuiltinType 0x5582dbb41080 'int'
|-TypedefDecl 0x5582dbbae7b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5582dbbae780 '__timer_t' sugar
|   |-Typedef 0x5582dbba8eb8 '__timer_t'
|   `-PointerType 0x5582dbb417a0 'void *'
|     `-BuiltinType 0x5582dbb40fe0 'void'
|-RecordDecl 0x5582dbbae810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5582dbbae8e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5582dbbae950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5582dbbae9b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5582dbbaea20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5582dbbaea88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5582dbbaeaf0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5582dbbaeb58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5582dbbaebc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5582dbbaec28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5582dbbaec90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5582dbbaecf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5582dbbaed48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5582dbbaee18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5582dbbaee88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5582dbbaef30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5582dbbaf100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5582dbbaf1a0 <col:45>
|-FunctionDecl 0x5582dbbaf380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5582dbbaf270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5582dbbaf428 <col:54>
|-FunctionDecl 0x5582dbbaf628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5582dbbaf490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5582dbbaf508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5582dbbaf6d8 <line:157:22>
| `-ConstAttr 0x5582dbbaf730 <col:63>
|-FunctionDecl 0x5582dbbb0560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5582dbbaf828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5582dbbb0608 <col:56>
|-FunctionDecl 0x5582dbbb09b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5582dbbb0678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5582dbbb06f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5582dbbb0770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5582dbbb0868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5582dbbb0a70 <col:54>
|-RecordDecl 0x5582dbbb0ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5582dbbb0b78 parent 0x5582dbb40f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5582dbbb0dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5582dbbb0e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5582dbbb0ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5582dbbb0f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5582dbbb1038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5582dbbb1158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5582dbbb1100 'struct __locale_struct *'
|   `-ElaboratedType 0x5582dbbb1090 'struct __locale_struct' sugar
|     `-RecordType 0x5582dbbb0b50 'struct __locale_struct'
|       `-Record 0x5582dbbb0ac8 '__locale_struct'
|-TypedefDecl 0x5582dbbb1208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5582dbbb11d0 '__locale_t' sugar
|   |-Typedef 0x5582dbbb1158 '__locale_t'
|   `-PointerType 0x5582dbbb1100 'struct __locale_struct *'
|     `-ElaboratedType 0x5582dbbb1090 'struct __locale_struct' sugar
|       `-RecordType 0x5582dbbb0b50 'struct __locale_struct'
|         `-Record 0x5582dbbb0ac8 '__locale_struct'
|-FunctionDecl 0x5582dbbb1610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5582dbbb1278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5582dbbb12f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5582dbbb1370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5582dbbb1400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5582dbbb1478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5582dbbb16d8 <col:40>
|-FunctionDecl 0x5582dbbb18c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5582dbbb17a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5582dbbb1970 <col:66>
|-FunctionDecl 0x5582dbbb1a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5582dbbb19d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5582dbbb1b28 <col:69>
|-FunctionDecl 0x5582dbbb1d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5582dbbb1b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5582dbbb1c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5582dbbb1e08 <col:52>
|-FunctionDecl 0x5582dbbb1fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5582dbbb1e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5582dbbb1f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5582dbbb2060 <col:55>
|-FunctionDecl 0x5582dbbb21f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5582dbbb20e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5582dbbb22a0 <col:62>
|-FunctionDecl 0x5582dbbb2418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5582dbbb2308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5582dbbb24c0 <col:60>
|-FunctionDecl 0x5582dbbb2718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5582dbbb2578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5582dbbb25f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5582dbbb27c8 <col:44>
|-FunctionDecl 0x5582dbbb29d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5582dbbb2830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5582dbbb28b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5582dbbb2a88 <col:49>
|-VarDecl 0x5582dbbb2b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5582dbbb2c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5582dbbb2c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5582dbbb2d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5582dbbb2e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5582dbbb2f20 <col:42>
|-VarDecl 0x5582dbbb2f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5582dbbb3010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5582dbbb3198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5582dbbb3088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5582dbbb3240 <col:57>
|-FunctionDecl 0x5582dbbb3350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5582dbbb32c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5582dbbb33f8 <col:56>
|-FunctionDecl 0x5582dbbb4540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5582dbbb3478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5582dbbb45e8 <col:59>
|-FunctionDecl 0x5582dbbb46f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5582dbbb4658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5582dbbb4798 <col:48>
| `-ConstAttr 0x5582dbbb47f0 <col:89>
|-FunctionDecl 0x5582dbbb4a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5582dbbb48a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5582dbbb4938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5582dbbb4cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5582dbbb4b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5582dbbb4bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5582dbbb4d68 <col:88>
|-FunctionDecl 0x5582dbbb4f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5582dbbb4dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5582dbbb4e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5582dbbb4fb0 <col:88>
|-FunctionDecl 0x5582dbbb51c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5582dbbb5018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5582dbbb50a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5582dbbb5278 <line:208:22>
|-FunctionDecl 0x5582dbbb55e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5582dbbb52e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5582dbbb5360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5582dbbb53f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5582dbbb5480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5582dbbb58e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5582dbbb56e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5582dbbb57c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5582dbbb5998 <col:85>
|-FunctionDecl 0x5582dbbb5d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5582dbbb5a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5582dbbb5b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5582dbbb5c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5582dbbb5e40 <col:52>
|-FunctionDecl 0x5582dbbb5fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5582dbbb5ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5582dbbb6060 <col:61>
|-FunctionDecl 0x5582dbbb6560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5582dbbb60c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5582dbbb6148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5582dbbb6278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5582dbbb6368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5582dbbb6620 <col:62>
|-FunctionDecl 0x5582dbbb6838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5582dbbb6688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5582dbbb6718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5582dbbb68e8 <line:221:22>
|-FunctionDecl 0x5582dbbb69e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5582dbbb6950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5582dbbb6a90 <col:65>
|-TypedefDecl 0x5582dbbb6b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5582dbb41140 'unsigned long'
|-RecordDecl 0x5582dbbb6b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5582dbbb6ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5582dbbb6d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5582dbbb6db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5582dbbb6d60 'union pthread_attr_t' sugar
|   `-RecordType 0x5582dbbb6be0 'union pthread_attr_t'
|     `-Record 0x5582dbbb6b58 'pthread_attr_t'
|-RecordDecl 0x5582dbbb6e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5582dbbb6f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5582dbbb7000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5582dbbb70b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5582dbbb7050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5582dbbb6e90 'struct __pthread_internal_list'
|     `-Record 0x5582dbbb6e10 '__pthread_internal_list'
|-RecordDecl 0x5582dbbb7120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5582dbbb71c8 parent 0x5582dbb40f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5582dbbb72a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5582dbbb7308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5582dbbb7370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5582dbbb73d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5582dbbb7440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5582dbbb74a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5582dbbbb580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5582dbbbb630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5582dbbbb720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5582dbbbb788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5582dbbbb910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5582dbbbb8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5582dbbb71a0 'pthread_mutex_t'
|     `-Record 0x5582dbbb7120 ''
|-RecordDecl 0x5582dbbbb980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5582dbbbbac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5582dbbbbb28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5582dbbbbbe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5582dbbbbb80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5582dbbbba00 'pthread_mutexattr_t'
|     `-Record 0x5582dbbbb980 ''
|-RecordDecl 0x5582dbbbbc50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5582dbbbbcf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5582dbbbbdc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5582dbbbbe28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5582dbbbbe90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5582dbbbbef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5582dbbbbf60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5582dbbbbfc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5582dbbbc030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5582dbbbc098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5582dbbbc150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix027_tso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix027_tso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5582dbbbc240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5582dbbbc2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5582dbbbc3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5582dbbbc380 'union pthread_cond_t' sugar
|   `-RecordType 0x5582dbbbbcd0 'pthread_cond_t'
|     `-Record 0x5582dbbbbc50 ''
|-RecordDecl 0x5582dbbbc450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5582dbbbc590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5582dbbbc5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5582dbbbc6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5582dbbbc650 'union pthread_condattr_t' sugar
|   `-RecordType 0x5582dbbbc4d0 'pthread_condattr_t'
|     `-Record 0x5582dbbbc450 ''
|-TypedefDecl 0x5582dbbbc738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5582dbb41120 'unsigned int'
|-TypedefDecl 0x5582dbbbc7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5582dbb41080 'int'
|-RecordDecl 0x5582dbbbc800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5582dbbbc8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5582dbbbc970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5582dbbbc9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5582dbbbca40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5582dbbbcaa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5582dbbbcb10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5582dbbbcb78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5582dbbbcbe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5582dbbbcc48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5582dbbbccb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5582dbbbcd18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5582dbbbcd80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5582dbbbce30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix027_tso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix027_tso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5582dbbbced8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5582dbbbcf40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5582dbbbd090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5582dbbbd030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5582dbbbc880 'pthread_rwlock_t'
|     `-Record 0x5582dbbbc800 ''
|-RecordDecl 0x5582dbbbd100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5582dbbbd240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5582dbbbd2a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5582dbbbd360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5582dbbbd300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5582dbbbd180 'pthread_rwlockattr_t'
|     `-Record 0x5582dbbbd100 ''
|-TypedefDecl 0x5582dbbbd3e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5582dbb41084 'volatile int' volatile
|   `-BuiltinType 0x5582dbb41080 'int'
|-RecordDecl 0x5582dbbbd440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5582dbbbf5b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5582dbbbf618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5582dbbbf6d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5582dbbbf670 'union pthread_barrier_t' sugar
|   `-RecordType 0x5582dbbbd4c0 'pthread_barrier_t'
|     `-Record 0x5582dbbbd440 ''
|-RecordDecl 0x5582dbbbf740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5582dbbbf840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5582dbbbf8a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5582dbbbf960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5582dbbbf900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5582dbbbf7c0 'pthread_barrierattr_t'
|     `-Record 0x5582dbbbf740 ''
|-TypedefDecl 0x5582dbbbfa78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5582dbbbfa10 'long [8]' 8 
|   `-BuiltinType 0x5582dbb410a0 'long'
|-EnumDecl 0x5582dbbbfad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5582dbbbfb98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5582dbbbfbe8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5582dbbbfc38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5582dbbbfd08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5582dbbbfd58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5582dbbbfda8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5582dbbbfdf8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5582dbbbfe80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5582dbbbfe68 <col:26> 'int'
| |   `-DeclRefExpr 0x5582dbbbfe48 <col:26> 'int' EnumConstant 0x5582dbbbfd08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5582dbbbff08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5582dbbbfef0 <col:29> 'int'
| |   `-DeclRefExpr 0x5582dbbbfed0 <col:29> 'int' EnumConstant 0x5582dbbbfd58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5582dbbbff90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5582dbbbff78 <col:30> 'int'
| |   `-DeclRefExpr 0x5582dbbbff58 <col:30> 'int' EnumConstant 0x5582dbbbfda8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5582dbbc0018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5582dbbc0000 <col:27> 'int'
|     `-DeclRefExpr 0x5582dbbbffe0 <col:27> 'int' EnumConstant 0x5582dbbbfe80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5582dbbc0068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5582dbbc0138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5582dbbc01c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5582dbbc01a8 <col:30> 'int'
| |   `-DeclRefExpr 0x5582dbbc0188 <col:30> 'int' EnumConstant 0x5582dbbc0138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5582dbbc0210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5582dbbc0298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5582dbbc0280 <col:29> 'int'
|     `-DeclRefExpr 0x5582dbbc0260 <col:29> 'int' EnumConstant 0x5582dbbc0210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5582dbbc02e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5582dbbc03b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5582dbbc0408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5582dbbc0458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5582dbbc04a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5582dbbc05c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5582dbbc0610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5582dbbc0660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5582dbbc06e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5582dbbc06d0 <col:31> 'int'
|     `-DeclRefExpr 0x5582dbbc06b0 <col:31> 'int' EnumConstant 0x5582dbbc05c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5582dbbc0738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5582dbbc0808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5582dbbc0858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5582dbbc08a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5582dbbc0978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5582dbbc09c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5582dbbc0a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5582dbbc0ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5582dbbc0b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5582dbbc0b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5582dbbc0dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5582dbbc0e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5582dbbc0e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5582dbbc0fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5582dbbc1008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5582dbbc10d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5582dbbc1128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5582dbbc1178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5582dbbc1248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5582dbbc1298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5582dbbc18f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5582dbbc1390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5582dbbc14a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5582dbbc16e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5582dbbc1760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5582dbbc19b8 <col:47>
| |-NonNullAttr 0x5582dbbc1a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x5582dbbc1a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5582dbbc1b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5582dbbc1aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5582dbbc1dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5582dbbc1c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5582dbbc1ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5582dbbc1f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5582dbbc1e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5582dbbc2040 <col:60>
|-FunctionDecl 0x5582dbbc2190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5582dbbc2230 <col:54>
| `-ConstAttr 0x5582dbbc2288 <col:95>
|-FunctionDecl 0x5582dbbc2458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5582dbbc22c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5582dbbc2338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5582dbbc2508 <line:394:19>
| `-ConstAttr 0x5582dbbc2560 <col:60>
|-FunctionDecl 0x5582dbbc2f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5582dbbc2e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5582dbbc3010 <col:71>
| `-NonNullAttr 0x5582dbbc3068 <col:112, col:126> 1
|-FunctionDecl 0x5582dbbc3170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5582dbbc30b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5582dbbc3218 <line:397:22>
| `-NonNullAttr 0x5582dbbc3270 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbc3498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5582dbbc32b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5582dbbc3338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5582dbbc3548 <line:400:22>
| `-NonNullAttr 0x5582dbbc35a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5582dbbc37a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5582dbbc35e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5582dbbc3668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5582dbbc3858 <line:403:22>
| `-NonNullAttr 0x5582dbbc38b0 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbc3b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5582dbbc38f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5582dbbc39a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5582dbbc3bb8 <line:406:22>
| `-NonNullAttr 0x5582dbbc3c10 <col:63, col:80> 1 2
|-FunctionDecl 0x5582dbbc4e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5582dbbc3c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5582dbbc3cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5582dbbc4ef8 <line:409:22>
| `-NonNullAttr 0x5582dbbc4f50 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbc5188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5582dbbc4f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5582dbbc5028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5582dbbc5238 <line:412:22>
| `-NonNullAttr 0x5582dbbc5290 <col:63, col:80> 1 2
|-FunctionDecl 0x5582dbbc54c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5582dbbc52d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5582dbbc5368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5582dbbc5578 <col:37>
| `-NonNullAttr 0x5582dbbc55d0 <col:78, col:95> 1 2
|-FunctionDecl 0x5582dbbc57b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5582dbbc5618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5582dbbc5698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5582dbbc5868 <line:418:22>
| `-NonNullAttr 0x5582dbbc58c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5582dbbc5a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5582dbbc5908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5582dbbc5988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5582dbbc5af8 <line:420:22>
| `-NonNullAttr 0x5582dbbc5b50 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbc5cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5582dbbc5b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5582dbbc5c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5582dbbc5da8 <line:423:22>
| `-NonNullAttr 0x5582dbbc6e30 <col:63, col:80> 1 2
|-FunctionDecl 0x5582dbbc6fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5582dbbc6e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5582dbbc6ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5582dbbc7068 <line:426:22>
| `-NonNullAttr 0x5582dbbc70c0 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbc7268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5582dbbc7108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5582dbbc7188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5582dbbc7318 <line:429:22>
| `-NonNullAttr 0x5582dbbc7370 <col:63, col:80> 1 2
|-FunctionDecl 0x5582dbbc74f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5582dbbc73b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5582dbbc7438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5582dbbc75a8 <line:431:22>
| `-NonNullAttr 0x5582dbbc7600 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbc7828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5582dbbc7648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5582dbbc76c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5582dbbc78d8 <line:434:22>
| |-NonNullAttr 0x5582dbbc7930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5582dbbc7968 <col:100> "" ""
|-FunctionDecl 0x5582dbbc7b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5582dbbc79b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5582dbbc7a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5582dbbc7c28 <line:437:22>
| |-NonNullAttr 0x5582dbbc7c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x5582dbbc7cb8 <col:97> "" ""
|-FunctionDecl 0x5582dbbc7eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5582dbbc7d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5582dbbc7d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5582dbbc7f68 <line:440:22>
| `-NonNullAttr 0x5582dbbc7fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x5582dbbc8140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5582dbbc8008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5582dbbc8080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5582dbbc81f0 <line:443:22>
| `-NonNullAttr 0x5582dbbc8248 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbc8538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5582dbbc8298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5582dbbc8318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5582dbbc8390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5582dbbc85f0 <line:447:22>
| `-NonNullAttr 0x5582dbbc8648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5582dbbc88f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5582dbbc86a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5582dbbc8720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5582dbbc8798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5582dbbc89b0 <col:43>
| `-NonNullAttr 0x5582dbbc8a08 <col:84, col:98> 1
|-FunctionDecl 0x5582dbbc8cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5582dbbc8a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5582dbbc8ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5582dbbc8b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5582dbbc8d80 <line:452:22>
| `-NonNullAttr 0x5582dbbc8dd8 <col:63, col:77> 3
|-FunctionDecl 0x5582dbbc90e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5582dbbc8e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5582dbbc8ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5582dbbc8f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5582dbbc91a0 <line:456:22>
| `-NonNullAttr 0x5582dbbc91f8 <col:63, col:80> 2 3
|-FunctionDecl 0x5582dbbc93e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5582dbbc9248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5582dbbc92c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5582dbbc9498 <line:458:22>
|-FunctionDecl 0x5582dbbc9868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5582dbbc9560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5582dbbc9700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5582dbbc9918 <col:52, col:69> 1 2
|-FunctionDecl 0x5582dbbc9ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5582dbbc99a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5582dbbc9a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5582dbbc9ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5582dbbc9b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5582dbbc9c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5582dbbc9e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5582dbbc9d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5582dbbc9fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5582dbbca040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5582dbbca0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5582dbbca1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5582dbbca240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5582dbbca410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix027_tso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5582dbbca508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5582dbbca5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5582dbbca560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5582dbbca0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x5582dbbca040 ''
| `-AlignedAttr 0x5582dbbca618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5582dbbca690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5582dbbca7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5582dbbca858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5582dbbca8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5582dbbca928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5582dbbcab30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5582dbbcaa20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5582dbbcac78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5582dbbcabe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5582dbbcae70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5582dbbcad30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5582dbbcaf18 <line:487:22>
|-RecordDecl 0x5582dbbcaf70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5582dbbcb288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5582dbbcb0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5582dbbcb168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5582dbbcb338 <col:86>
| `-ReturnsTwiceAttr 0x5582dbbcb390 <col:12> Implicit
|-FunctionDecl 0x5582dbbcb6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5582dbbcb460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5582dbbcb570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5582dbbcb768 <line:493:22>
| `-NonNullAttr 0x5582dbbcb7c0 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbcb938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5582dbbcb808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5582dbbcb9e0 <line:495:22>
| `-NonNullAttr 0x5582dbbcba38 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbcbb40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5582dbbcba88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5582dbbcbbe8 <line:497:22>
| `-NonNullAttr 0x5582dbbcbc40 <col:52, col:66> 1
|-FunctionDecl 0x5582dbbcbd40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5582dbbcbc88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5582dbbcbde8 <line:499:22>
| `-NonNullAttr 0x5582dbbcbe40 <col:52, col:66> 1
|-FunctionDecl 0x5582dbbcc088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5582dbbcbe98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5582dbbcbf28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5582dbbcc138 <col:36>
| `-NonNullAttr 0x5582dbbcc190 <col:66, col:83> 1 2
|-FunctionDecl 0x5582dbbcc290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5582dbbcc1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5582dbbcc338 <line:504:22>
| `-NonNullAttr 0x5582dbbcc390 <col:52, col:66> 1
|-FunctionDecl 0x5582dbbcc628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5582dbbcc440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5582dbbcc4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5582dbbcc6d8 <line:508:22>
| `-NonNullAttr 0x5582dbbcc730 <col:63, col:80> 1 2
|-FunctionDecl 0x5582dbbcc9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5582dbbcc778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5582dbbcc7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5582dbbcc878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5582dbbccab0 <line:512:22>
| `-NonNullAttr 0x5582dbbccb08 <col:63, col:80> 1 3
|-FunctionDecl 0x5582dbbccc10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5582dbbccb58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5582dbbcccb8 <line:514:22>
| `-NonNullAttr 0x5582dbbccd10 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbccf38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5582dbbccdc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5582dbbccfe0 <line:516:22>
| `-NonNullAttr 0x5582dbbcd038 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbcd140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5582dbbcd088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5582dbbcd1e8 <line:518:22>
| `-NonNullAttr 0x5582dbbcd240 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbcd468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5582dbbcd288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5582dbbcd308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5582dbbcd518 <line:522:22>
| `-NonNullAttr 0x5582dbbcd570 <col:63, col:80> 1 2
|-FunctionDecl 0x5582dbbcd778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5582dbbcd5b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5582dbbcd638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5582dbbcd828 <line:525:22>
| `-NonNullAttr 0x5582dbbcd880 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbcda28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5582dbbcd8c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5582dbbcd948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5582dbbcdad8 <line:528:22>
| `-NonNullAttr 0x5582dbbcdb30 <col:63, col:80> 1 2
|-FunctionDecl 0x5582dbbcdcb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5582dbbcdb78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5582dbbcdbf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5582dbbcdd68 <line:530:22>
| `-NonNullAttr 0x5582dbbcddc0 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbcef90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5582dbbcde08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5582dbbceeb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5582dbbcf040 <line:534:22>
| `-NonNullAttr 0x5582dbbcf098 <col:63, col:80> 1 2
|-FunctionDecl 0x5582dbbcf228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5582dbbcf0e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5582dbbcf168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5582dbbcf2d8 <line:537:22>
| `-NonNullAttr 0x5582dbbcf330 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbcf4d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5582dbbcf378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5582dbbcf3f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5582dbbcf588 <line:541:22>
| `-NonNullAttr 0x5582dbbcf5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5582dbbcf768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5582dbbcf628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5582dbbcf6a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5582dbbcf818 <line:544:22>
| `-NonNullAttr 0x5582dbbcf870 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbcfa58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5582dbbcf8b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5582dbbcf938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5582dbbcfb08 <line:547:22>
| `-NonNullAttr 0x5582dbbcfb60 <col:63, col:80> 1 2
|-FunctionDecl 0x5582dbbcfce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5582dbbcfba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5582dbbcfc28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5582dbbcfd98 <line:550:22>
| `-NonNullAttr 0x5582dbbcfdf0 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbd1168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5582dbbd0f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5582dbbd1020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5582dbbd1218 <col:29>
| `-NonNullAttr 0x5582dbbd1270 <col:70, col:84> 1
|-FunctionDecl 0x5582dbbd13e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5582dbbd12b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5582dbbd1490 <line:555:22>
| `-NonNullAttr 0x5582dbbd14e8 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbd15f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5582dbbd1538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5582dbbd1698 <line:557:22>
| `-NonNullAttr 0x5582dbbd16f0 <col:52, col:66> 1
|-FunctionDecl 0x5582dbbd17f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5582dbbd1738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5582dbbd1898 <line:559:19>
| `-NonNullAttr 0x5582dbbd18f0 <col:49, col:63> 1
|-FunctionDecl 0x5582dbbd1b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5582dbbd1938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5582dbbd19c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5582dbbd1bd8 <col:39>
| `-NonNullAttr 0x5582dbbd1c30 <col:69, col:86> 1 2
|-FunctionDecl 0x5582dbbd1d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5582dbbd1c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5582dbbd1dd8 <line:564:22>
| `-NonNullAttr 0x5582dbbd1e30 <col:52, col:66> 1
|-FunctionDecl 0x5582dbbd1f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5582dbbd1ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5582dbbd2040 <line:566:22>
| `-NonNullAttr 0x5582dbbd2098 <col:52, col:66> 1
|-FunctionDecl 0x5582dbbd2258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5582dbbd20e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5582dbbd2178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5582dbbd2308 <col:39>
| `-NonNullAttr 0x5582dbbd2360 <col:69, col:86> 1 2
|-FunctionDecl 0x5582dbbd2460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5582dbbd23a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5582dbbd2508 <line:571:22>
| `-NonNullAttr 0x5582dbbd2560 <col:52, col:66> 1
|-FunctionDecl 0x5582dbbd2748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5582dbbd2610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5582dbbd27f0 <line:573:22>
| `-NonNullAttr 0x5582dbbd2848 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbd2950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5582dbbd2898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5582dbbd29f8 <line:575:22>
| `-NonNullAttr 0x5582dbbd2a50 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbd2c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5582dbbd2a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5582dbbd2b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5582dbbd2d28 <line:579:22>
| `-NonNullAttr 0x5582dbbd2d80 <col:63, col:80> 1 2
|-FunctionDecl 0x5582dbbd2fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5582dbbd2dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5582dbbd2e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5582dbbd3058 <line:582:22>
| `-NonNullAttr 0x5582dbbd30b0 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbd3258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5582dbbd30f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5582dbbd3178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5582dbbd3308 <line:586:22>
| `-NonNullAttr 0x5582dbbd3360 <col:63, col:80> 1 2
|-FunctionDecl 0x5582dbbd34e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5582dbbd33a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5582dbbd3428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5582dbbd3598 <col:36>
| `-NonNullAttr 0x5582dbbd35f0 <col:77, col:91> 1
|-FunctionDecl 0x5582dbbd3928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5582dbbd36d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5582dbbd37e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5582dbbd39d8 <line:591:22>
| `-NonNullAttr 0x5582dbbd3a30 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbd3ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5582dbbd3a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5582dbbd3c50 <line:593:22>
| `-NonNullAttr 0x5582dbbd3ca8 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbd3db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5582dbbd3cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5582dbbd3e58 <line:595:22>
| `-NonNullAttr 0x5582dbbd3eb0 <col:52, col:66> 1
|-FunctionDecl 0x5582dbbd3fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5582dbbd3f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5582dbbd4070 <line:597:22>
| `-NonNullAttr 0x5582dbbd40c8 <col:52, col:66> 1
|-FunctionDecl 0x5582dbbd42f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5582dbbd4118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5582dbbd4190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5582dbbd43a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5582dbbd46d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5582dbbd4428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5582dbbd44a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5582dbbd4530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5582dbbd4790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5582dbbd49a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5582dbbd4870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5582dbbd4a50 <line:606:22>
| `-NonNullAttr 0x5582dbbd4aa8 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbd4bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5582dbbd4af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5582dbbd4c58 <line:608:22>
| `-NonNullAttr 0x5582dbbd4cb0 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbd4f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5582dbbd4cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5582dbbd4d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5582dbbd4fc0 <line:612:22>
| `-NonNullAttr 0x5582dbbd5018 <col:63, col:80> 1 2
|-FunctionDecl 0x5582dbbd5228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5582dbbd5068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5582dbbd50e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5582dbbd52d8 <col:37>
| `-NonNullAttr 0x5582dbbd5330 <col:78, col:92> 1
|-FunctionDecl 0x5582dbbd5548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5582dbbd5378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5582dbbd5420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5582dbbd55f8 <line:618:22>
| `-NonNullAttr 0x5582dbbd5650 <col:63, col:80> 1 2
|-FunctionDecl 0x5582dbbd5818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5582dbbd5698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5582dbbd5710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5582dbbd58c8 <line:621:22>
| `-NonNullAttr 0x5582dbbd5920 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbd5bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5582dbbd5a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5582dbbd5a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5582dbbd5c78 <line:623:22>
| `-NonNullAttr 0x5582dbbd5cd0 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbd5e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5582dbbd5d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5582dbbd5f20 <line:625:22>
| `-NonNullAttr 0x5582dbbd5f78 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbd6080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5582dbbd5fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5582dbbd6128 <line:627:22>
| `-NonNullAttr 0x5582dbbd6180 <col:52, col:66> 1
|-FunctionDecl 0x5582dbbd6280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5582dbbd61c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5582dbbd6328 <line:629:22>
| `-NonNullAttr 0x5582dbbd6380 <col:52, col:66> 1
|-FunctionDecl 0x5582dbbd6480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5582dbbd63c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5582dbbd6528 <line:631:22>
| `-NonNullAttr 0x5582dbbd6580 <col:52, col:66> 1
|-FunctionDecl 0x5582dbbd6958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5582dbbd6660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5582dbbd6770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5582dbbd67f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5582dbbd6a10 <line:635:22>
| `-NonNullAttr 0x5582dbbd6a68 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbd6be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5582dbbd6ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5582dbbd6c90 <line:637:22>
| `-NonNullAttr 0x5582dbbd6ce8 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbd6df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5582dbbd6d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5582dbbd6e98 <line:639:22>
| `-NonNullAttr 0x5582dbbd6ef0 <col:52, col:66> 1
|-FunctionDecl 0x5582dbbd70e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5582dbbd6fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5582dbbd7190 <line:641:22>
| `-NonNullAttr 0x5582dbbd71e8 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbd72f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5582dbbd7238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5582dbbd7398 <line:643:22>
| `-NonNullAttr 0x5582dbbd73f0 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbd7618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5582dbbd7438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5582dbbd74b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5582dbbd76c8 <line:647:22>
| `-NonNullAttr 0x5582dbbd7720 <col:63, col:80> 1 2
|-FunctionDecl 0x5582dbbd7928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5582dbbd7768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5582dbbd77e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5582dbbd79d8 <line:650:22>
| `-NonNullAttr 0x5582dbbd7a30 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbd7d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5582dbbd7b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5582dbbd7c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5582dbbd7e28 <line:653:22>
| `-NonNullAttr 0x5582dbbd7e80 <col:63, col:77> 1
|-FunctionDecl 0x5582dbbd7fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5582dbbd7ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5582dbbd8090 <col:69>
|-FunctionDecl 0x5582dbbd8208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5582dbbd80f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5582dbbd82b0 <col:72>
|-FunctionDecl 0x5582dbbd84e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5582dbbd8318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5582dbbd83c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5582dbbd8598 <col:44>
|-FunctionDecl 0x5582dbbd87b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5582dbbd8600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5582dbbd8678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5582dbbd8868 <line:660:22>
| `-NonNullAttr 0x5582dbbd88c0 <col:63, col:77> 2
|-FunctionDecl 0x5582dbbd8d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5582dbbd89a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5582dbbd8ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5582dbbd8bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5582dbbd8dc0 <col:47>
|-FunctionDecl 0x5582dbbd9f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5582dbbd8e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5582dbbda0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5582dbbda020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5582dbbda210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5582dbbda178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5582dbbda368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x5582dbbda2d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5582dbbda430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5582dbbda4f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5582dbbda5b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5582dbbda668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5582dbbda6e8 prev 0x5582dbbda668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5582dbbda750 <col:24> 'int' 0
|-VarDecl 0x5582dbbda788 <line:674:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5582dbbda808 prev 0x5582dbbda788 <line:675:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5582dbbda870 <col:27> 'int' 0
|-VarDecl 0x5582dbbda8a8 <line:676:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x5582dbbda928 prev 0x5582dbbda8a8 <line:677:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x5582dbbda990 <col:27> 'int' 0
|-VarDecl 0x5582dbbda9c8 <line:678:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x5582dbbdaa48 prev 0x5582dbbda9c8 <line:679:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x5582dbbdaab0 <col:27> 'int' 0
|-VarDecl 0x5582dbbdaae8 <line:680:1, col:5> col:5 used a 'int'
|-VarDecl 0x5582dbbdab68 prev 0x5582dbbdaae8 <line:681:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x5582dbbdabd0 <col:9> 'int' 0
|-VarDecl 0x5582dbbdac00 <line:682:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5582dbbdac78 <line:683:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5582dbbdacf8 <line:684:1, col:5> col:5 used x 'int'
|-VarDecl 0x5582dbbdad78 prev 0x5582dbbdacf8 <line:685:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5582dbbdade0 <col:9> 'int' 0
|-VarDecl 0x5582dbbdae10 <line:686:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x5582dbbdae90 <line:687:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x5582dbbdaf70 <line:688:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x5582dbbdafe8 <line:689:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x5582dbbdb060 <line:690:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x5582dbbdb0d8 <line:691:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x5582dbbdb150 <line:692:1, col:7> col:7 used x$r_buff0_thd4 '_Bool'
|-VarDecl 0x5582dbbdb1c8 <line:693:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x5582dbbdb240 <line:694:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x5582dbbdb2b8 <line:695:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x5582dbbdb330 <line:696:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x5582dbbdb3a8 <line:697:1, col:7> col:7 used x$r_buff1_thd4 '_Bool'
|-VarDecl 0x5582dbbdb420 <line:698:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x5582dbbdb4a0 <line:699:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x5582dbbdb520 <line:700:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x5582dbbdb598 <line:701:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x5582dbbdb618 <line:702:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x5582dbbdb690 <line:703:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x5582dbbdb710 <line:704:1, col:5> col:5 used y 'int'
|-VarDecl 0x5582dbbdb790 prev 0x5582dbbdb710 <line:705:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5582dbbdb7f8 <col:9> 'int' 0
|-VarDecl 0x5582dbbdb830 <line:706:1, col:5> col:5 used z 'int'
|-VarDecl 0x5582dbbdb8b0 prev 0x5582dbbdb830 <line:707:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5582dbbdb918 <col:9> 'int' 0
|-VarDecl 0x5582dbbdb948 <line:708:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5582dbbdb9c0 <line:709:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5582dbbdbad8 prev 0x5582dbbd9f60 <line:710:1, line:729:1> line:710:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5582dbbdba40 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5582dbbdcd68 <line:711:1, line:729:1>
|   |-CallExpr 0x5582dbbdbbe8 <line:712:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5582dbbdbbd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbdbb80 <col:3> 'void ()' Function 0x5582dbb81350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5582dbbdbc48 <line:713:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5582dbbdbc08 <col:3> 'int' lvalue Var 0x5582dbbdab68 'a' 'int'
|   | `-IntegerLiteral 0x5582dbbdbc28 <col:7> 'int' 1
|   |-CallExpr 0x5582dbbdbca0 <line:714:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5582dbbdbc88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbdbc68 <col:3> 'void ()' Function 0x5582dbb81410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5582dbbdbcf8 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5582dbbdbce0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbdbcc0 <col:3> 'void ()' Function 0x5582dbb81350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5582dbbdbd58 <line:716:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5582dbbdbd18 <col:3> 'int' lvalue Var 0x5582dbbdad78 'x' 'int'
|   | `-IntegerLiteral 0x5582dbbdbd38 <col:7> 'int' 1
|   |-CallExpr 0x5582dbbdbdb0 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5582dbbdbd98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbdbd78 <col:3> 'void ()' Function 0x5582dbb81410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5582dbbdbe08 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5582dbbdbdf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbdbdd0 <col:3> 'void ()' Function 0x5582dbb81350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5582dbbdc108 <line:719:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5582dbbdbe28 <col:3> 'int' lvalue Var 0x5582dbbdad78 'x' 'int'
|   | `-ConditionalOperator 0x5582dbbdc0d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5582dbbdbee8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5582dbbdbea0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5582dbbdbe88 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5582dbbdbe48 <col:7> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5582dbbdbed0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5582dbbdbeb8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5582dbbdbe68 <col:25> '_Bool' lvalue Var 0x5582dbbdafe8 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5582dbbdc0c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5582dbbdbf08 <col:42> 'int' lvalue Var 0x5582dbbdb520 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5582dbbdc0a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5582dbbdc070 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5582dbbdbfe0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5582dbbdbf98 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5582dbbdbf80 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5582dbbdbf28 <col:55> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5582dbbdbfc8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5582dbbdbfb0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5582dbbdbf48 <col:73> '_Bool' lvalue Var 0x5582dbbdb240 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5582dbbdc040 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5582dbbdc000 <col:90> 'int' lvalue Var 0x5582dbbdb618 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5582dbbdc058 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5582dbbdc020 <col:102> 'int' lvalue Var 0x5582dbbdad78 'x' 'int'
|   |-BinaryOperator 0x5582dbbdc310 <line:720:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5582dbbdc128 <col:3> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5582dbbdc2f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5582dbbdc2c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5582dbbdc1e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5582dbbdc1a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5582dbbdc188 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5582dbbdc148 <col:20> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5582dbbdc1d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5582dbbdc1b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5582dbbdc168 <col:38> '_Bool' lvalue Var 0x5582dbbdafe8 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5582dbbdc280 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5582dbbdc238 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5582dbbdc208 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5582dbbdc2b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5582dbbdc298 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5582dbbdc260 <col:66> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5582dbbdc5f8 <line:721:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5582dbbdc330 <col:3> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5582dbbdc5e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5582dbbdc5b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5582dbbdc4d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5582dbbdc3f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5582dbbdc3a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5582dbbdc390 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5582dbbdc350 <col:20> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5582dbbdc3d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5582dbbdc3c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5582dbbdc370 <col:38> '_Bool' lvalue Var 0x5582dbbdafe8 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5582dbbdc4b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5582dbbdc468 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5582dbbdc450 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5582dbbdc410 <col:56> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5582dbbdc498 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5582dbbdc480 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5582dbbdc430 <col:74> '_Bool' lvalue Var 0x5582dbbdb240 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5582dbbdc568 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5582dbbdc520 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5582dbbdc4f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5582dbbdc598 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5582dbbdc580 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5582dbbdc548 <col:102> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5582dbbdc800 <line:722:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5582dbbdc618 <col:3> '_Bool' lvalue Var 0x5582dbbdafe8 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5582dbbdc7e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5582dbbdc7b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5582dbbdc6d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5582dbbdc690 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5582dbbdc678 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5582dbbdc638 <col:20> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5582dbbdc6c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5582dbbdc6a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5582dbbdc658 <col:38> '_Bool' lvalue Var 0x5582dbbdafe8 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5582dbbdc770 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5582dbbdc728 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5582dbbdc6f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5582dbbdc7a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5582dbbdc788 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5582dbbdc750 <col:66> '_Bool' lvalue Var 0x5582dbbdafe8 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5582dbbdcae8 <line:723:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5582dbbdc820 <col:3> '_Bool' lvalue Var 0x5582dbbdb240 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5582dbbdcad0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5582dbbdcaa0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5582dbbdc9c0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5582dbbdc8e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5582dbbdc898 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5582dbbdc880 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5582dbbdc840 <col:20> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5582dbbdc8c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5582dbbdc8b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5582dbbdc860 <col:38> '_Bool' lvalue Var 0x5582dbbdafe8 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5582dbbdc9a0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5582dbbdc958 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5582dbbdc940 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5582dbbdc900 <col:56> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5582dbbdc988 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5582dbbdc970 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5582dbbdc920 <col:74> '_Bool' lvalue Var 0x5582dbbdb240 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5582dbbdca58 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5582dbbdca10 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5582dbbdc9e0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5582dbbdca88 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5582dbbdca70 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5582dbbdca38 <col:102> '_Bool' lvalue Var 0x5582dbbdb240 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x5582dbbdcb40 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5582dbbdcb28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbdcb08 <col:3> 'void ()' Function 0x5582dbb81410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5582dbbdcb98 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5582dbbdcb80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbdcb60 <col:3> 'void ()' Function 0x5582dbb81350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5582dbbdcc50 <line:726:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5582dbbdcbb8 <col:3> 'int' lvalue Var 0x5582dbbda6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5582dbbdcc30 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5582dbbdcc18 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5582dbbdcbd8 <col:22> 'int' lvalue Var 0x5582dbbda6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5582dbbdcbf8 <col:41> 'int' 1
|   |-CallExpr 0x5582dbbdcca8 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5582dbbdcc90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbdcc70 <col:3> 'void ()' Function 0x5582dbb81410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5582dbbdcd58 <line:728:3, col:36>
|     `-CallExpr 0x5582dbbdcd38 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5582dbbdcd20 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5582dbbdccc8 <col:10> 'void *(void)' Function 0x5582dbb80e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5582dbbdceb0 prev 0x5582dbbda0b8 <line:730:1, line:759:1> line:730:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5582dbbdce18 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5582dbbde720 <line:731:1, line:759:1>
|   |-CallExpr 0x5582dbbdcfa8 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5582dbbdcf90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbdcf58 <col:3> 'void ()' Function 0x5582dbb81350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5582dbbdd020 <line:733:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5582dbbdcfc8 <col:3> 'int' lvalue Var 0x5582dbbdb618 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5582dbbdd008 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5582dbbdcfe8 <col:15> 'int' lvalue Var 0x5582dbbdb520 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5582dbbdd080 <line:734:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5582dbbdd040 <col:3> 'int' lvalue Var 0x5582dbbdb520 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x5582dbbdd060 <col:15> 'int' 2
|   |-BinaryOperator 0x5582dbbdd0f8 <line:735:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5582dbbdd0a0 <col:3> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5582dbbdd0e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5582dbbdd0c0 <col:20> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5582dbbdd190 <line:736:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5582dbbdd118 <col:3> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5582dbbdd168 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5582dbbdd138 <col:27> 'int' 1
|   |-CallExpr 0x5582dbbdd318 <line:737:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5582dbbdd300 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5582dbbdd1b0 <col:3> 'void (int)' Function 0x5582dbb810d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5582dbbdd2b0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5582dbbdd290 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5582dbbdd270 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5582dbbdd228 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5582dbbdd210 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5582dbbdd1d0 <col:23> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5582dbbdd258 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5582dbbdd240 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5582dbbdd1f0 <col:41> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5582dbbdd398 <line:738:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5582dbbdd340 <col:3> '_Bool' lvalue Var 0x5582dbbdb1c8 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5582dbbdd380 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5582dbbdd360 <col:20> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5582dbbdd410 <line:739:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5582dbbdd3b8 <col:3> '_Bool' lvalue Var 0x5582dbbdb240 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5582dbbdd3f8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5582dbbdd3d8 <col:20> '_Bool' lvalue Var 0x5582dbbdafe8 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5582dbbdd488 <line:740:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5582dbbdd430 <col:3> '_Bool' lvalue Var 0x5582dbbdb2b8 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5582dbbdd470 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5582dbbdd450 <col:20> '_Bool' lvalue Var 0x5582dbbdb060 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5582dbbdd500 <line:741:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5582dbbdd4a8 <col:3> '_Bool' lvalue Var 0x5582dbbdb330 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5582dbbdd4e8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5582dbbdd4c8 <col:20> '_Bool' lvalue Var 0x5582dbbdb0d8 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5582dbbdd578 <line:742:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5582dbbdd520 <col:3> '_Bool' lvalue Var 0x5582dbbdb3a8 'x$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5582dbbdd560 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5582dbbdd540 <col:20> '_Bool' lvalue Var 0x5582dbbdb150 'x$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5582dbbdd610 <line:743:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5582dbbdd598 <col:3> '_Bool' lvalue Var 0x5582dbbdb060 'x$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x5582dbbdd5e8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5582dbbdd5b8 <col:27> 'int' 1
|   |-CallExpr 0x5582dbbdd668 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5582dbbdd650 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbdd630 <col:3> 'void ()' Function 0x5582dbb81410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5582dbbdd6c0 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5582dbbdd6a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbdd688 <col:3> 'void ()' Function 0x5582dbb81350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5582dbbdd738 <line:746:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5582dbbdd6e0 <col:3> 'int' lvalue Var 0x5582dbbda808 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5582dbbdd720 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5582dbbdd700 <col:25> 'int' lvalue Var 0x5582dbbdb790 'y' 'int'
|   |-CallExpr 0x5582dbbdd790 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5582dbbdd778 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbdd758 <col:3> 'void ()' Function 0x5582dbb81410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5582dbbdd7e8 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5582dbbdd7d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbdd7b0 <col:3> 'void ()' Function 0x5582dbb81350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5582dbbddad0 <line:749:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5582dbbdd808 <col:3> 'int' lvalue Var 0x5582dbbdad78 'x' 'int'
|   | `-ConditionalOperator 0x5582dbbddaa0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5582dbbdd8c8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5582dbbdd880 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5582dbbdd868 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5582dbbdd828 <col:7> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5582dbbdd8b0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5582dbbdd898 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5582dbbdd848 <col:25> '_Bool' lvalue Var 0x5582dbbdb060 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5582dbbdda88 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5582dbbdd8e8 <col:42> 'int' lvalue Var 0x5582dbbdb520 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5582dbbdda68 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5582dbbdda38 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5582dbbdd9a8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5582dbbdd960 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5582dbbdd948 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5582dbbdd908 <col:55> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5582dbbdd990 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5582dbbdd978 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5582dbbdd928 <col:73> '_Bool' lvalue Var 0x5582dbbdb2b8 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5582dbbdda08 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5582dbbdd9c8 <col:90> 'int' lvalue Var 0x5582dbbdb618 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5582dbbdda20 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5582dbbdd9e8 <col:102> 'int' lvalue Var 0x5582dbbdad78 'x' 'int'
|   |-BinaryOperator 0x5582dbbddcd8 <line:750:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5582dbbddaf0 <col:3> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5582dbbddcc0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5582dbbddc90 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5582dbbddbb0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5582dbbddb68 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5582dbbddb50 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5582dbbddb10 <col:20> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5582dbbddb98 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5582dbbddb80 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5582dbbddb30 <col:38> '_Bool' lvalue Var 0x5582dbbdb060 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5582dbbddc48 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5582dbbddc00 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5582dbbddbd0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5582dbbddc78 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5582dbbddc60 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5582dbbddc28 <col:66> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5582dbbddfe8 <line:751:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5582dbbddcf8 <col:3> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5582dbbddfd0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5582dbbddfa0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5582dbbdde98 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5582dbbdddb8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5582dbbddd70 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5582dbbddd58 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5582dbbddd18 <col:20> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5582dbbddda0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5582dbbddd88 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5582dbbddd38 <col:38> '_Bool' lvalue Var 0x5582dbbdb060 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5582dbbdde78 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5582dbbdde30 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5582dbbdde18 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5582dbbdddd8 <col:56> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5582dbbdde60 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5582dbbdde48 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5582dbbdddf8 <col:74> '_Bool' lvalue Var 0x5582dbbdb2b8 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5582dbbddf30 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5582dbbddee8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5582dbbddeb8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5582dbbddf60 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5582dbbddf48 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5582dbbddf10 <col:102> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5582dbbde1f0 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5582dbbde008 <col:3> '_Bool' lvalue Var 0x5582dbbdb060 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5582dbbde1d8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5582dbbde1a8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5582dbbde0c8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5582dbbde080 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5582dbbde068 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5582dbbde028 <col:20> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5582dbbde0b0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5582dbbde098 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5582dbbde048 <col:38> '_Bool' lvalue Var 0x5582dbbdb060 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5582dbbde160 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5582dbbde118 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5582dbbde0e8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5582dbbde190 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5582dbbde178 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5582dbbde140 <col:66> '_Bool' lvalue Var 0x5582dbbdb060 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5582dbbde4d8 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5582dbbde210 <col:3> '_Bool' lvalue Var 0x5582dbbdb2b8 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5582dbbde4c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5582dbbde490 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5582dbbde3b0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5582dbbde2d0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5582dbbde288 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5582dbbde270 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5582dbbde230 <col:20> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5582dbbde2b8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5582dbbde2a0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5582dbbde250 <col:38> '_Bool' lvalue Var 0x5582dbbdb060 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5582dbbde390 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5582dbbde348 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5582dbbde330 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5582dbbde2f0 <col:56> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5582dbbde378 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5582dbbde360 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5582dbbde310 <col:74> '_Bool' lvalue Var 0x5582dbbdb2b8 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5582dbbde448 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5582dbbde400 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5582dbbde3d0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5582dbbde478 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5582dbbde460 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5582dbbde428 <col:102> '_Bool' lvalue Var 0x5582dbbdb2b8 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5582dbbde530 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5582dbbde518 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbde4f8 <col:3> 'void ()' Function 0x5582dbb81410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5582dbbde588 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5582dbbde570 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbde550 <col:3> 'void ()' Function 0x5582dbb81350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5582dbbde640 <line:756:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5582dbbde5a8 <col:3> 'int' lvalue Var 0x5582dbbda6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5582dbbde620 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5582dbbde608 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5582dbbde5c8 <col:22> 'int' lvalue Var 0x5582dbbda6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5582dbbde5e8 <col:41> 'int' 1
|   |-CallExpr 0x5582dbbde698 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5582dbbde680 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbde660 <col:3> 'void ()' Function 0x5582dbb81410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5582dbbde710 <line:758:3, col:36>
|     `-CallExpr 0x5582dbbde6f0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5582dbbde6d8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5582dbbde6b8 <col:10> 'void *(void)' Function 0x5582dbb80e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5582dbbde8b8 prev 0x5582dbbda210 <line:760:1, line:779:1> line:760:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5582dbbde820 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5582dbbdfad8 <line:761:1, line:779:1>
|   |-CallExpr 0x5582dbbde998 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5582dbbde980 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbde960 <col:3> 'void ()' Function 0x5582dbb81350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5582dbbde9f8 <line:763:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5582dbbde9b8 <col:3> 'int' lvalue Var 0x5582dbbdb790 'y' 'int'
|   | `-IntegerLiteral 0x5582dbbde9d8 <col:7> 'int' 1
|   |-CallExpr 0x5582dbbdea50 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5582dbbdea38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbdea18 <col:3> 'void ()' Function 0x5582dbb81410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5582dbbdeaa8 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5582dbbdea90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbdea70 <col:3> 'void ()' Function 0x5582dbb81350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5582dbbdeb08 <line:766:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5582dbbdeac8 <col:3> 'int' lvalue Var 0x5582dbbdb8b0 'z' 'int'
|   | `-IntegerLiteral 0x5582dbbdeae8 <col:7> 'int' 1
|   |-CallExpr 0x5582dbbdeb60 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5582dbbdeb48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbdeb28 <col:3> 'void ()' Function 0x5582dbb81410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5582dbbdebb8 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5582dbbdeba0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbdeb80 <col:3> 'void ()' Function 0x5582dbb81350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5582dbbdeea0 <line:769:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5582dbbdebd8 <col:3> 'int' lvalue Var 0x5582dbbdad78 'x' 'int'
|   | `-ConditionalOperator 0x5582dbbdee70 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5582dbbdec98 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5582dbbdec50 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5582dbbdec38 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5582dbbdebf8 <col:7> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5582dbbdec80 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5582dbbdec68 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5582dbbdec18 <col:25> '_Bool' lvalue Var 0x5582dbbdb0d8 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5582dbbdee58 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5582dbbdecb8 <col:42> 'int' lvalue Var 0x5582dbbdb520 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5582dbbdee38 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5582dbbdee08 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5582dbbded78 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5582dbbded30 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5582dbbded18 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5582dbbdecd8 <col:55> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5582dbbded60 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5582dbbded48 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5582dbbdecf8 <col:73> '_Bool' lvalue Var 0x5582dbbdb330 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5582dbbdedd8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5582dbbded98 <col:90> 'int' lvalue Var 0x5582dbbdb618 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5582dbbdedf0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5582dbbdedb8 <col:102> 'int' lvalue Var 0x5582dbbdad78 'x' 'int'
|   |-BinaryOperator 0x5582dbbdf0b8 <line:770:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5582dbbdeec0 <col:3> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5582dbbdf0a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5582dbbdf070 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5582dbbdef80 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5582dbbdef38 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5582dbbdef20 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5582dbbdeee0 <col:20> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5582dbbdef68 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5582dbbdef50 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5582dbbdef00 <col:38> '_Bool' lvalue Var 0x5582dbbdb0d8 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5582dbbdf028 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5582dbbdefe0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5582dbbdefb0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5582dbbdf058 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5582dbbdf040 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5582dbbdf008 <col:66> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5582dbbdf3a0 <line:771:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5582dbbdf0d8 <col:3> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5582dbbdf388 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5582dbbdf358 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5582dbbdf278 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5582dbbdf198 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5582dbbdf150 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5582dbbdf138 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5582dbbdf0f8 <col:20> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5582dbbdf180 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5582dbbdf168 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5582dbbdf118 <col:38> '_Bool' lvalue Var 0x5582dbbdb0d8 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5582dbbdf258 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5582dbbdf210 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5582dbbdf1f8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5582dbbdf1b8 <col:56> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5582dbbdf240 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5582dbbdf228 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5582dbbdf1d8 <col:74> '_Bool' lvalue Var 0x5582dbbdb330 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5582dbbdf310 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5582dbbdf2c8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5582dbbdf298 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5582dbbdf340 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5582dbbdf328 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5582dbbdf2f0 <col:102> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5582dbbdf5a8 <line:772:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5582dbbdf3c0 <col:3> '_Bool' lvalue Var 0x5582dbbdb0d8 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5582dbbdf590 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5582dbbdf560 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5582dbbdf480 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5582dbbdf438 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5582dbbdf420 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5582dbbdf3e0 <col:20> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5582dbbdf468 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5582dbbdf450 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5582dbbdf400 <col:38> '_Bool' lvalue Var 0x5582dbbdb0d8 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5582dbbdf518 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5582dbbdf4d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5582dbbdf4a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5582dbbdf548 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5582dbbdf530 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5582dbbdf4f8 <col:66> '_Bool' lvalue Var 0x5582dbbdb0d8 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5582dbbdf890 <line:773:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5582dbbdf5c8 <col:3> '_Bool' lvalue Var 0x5582dbbdb330 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5582dbbdf878 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5582dbbdf848 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5582dbbdf768 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5582dbbdf688 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5582dbbdf640 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5582dbbdf628 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5582dbbdf5e8 <col:20> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5582dbbdf670 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5582dbbdf658 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5582dbbdf608 <col:38> '_Bool' lvalue Var 0x5582dbbdb0d8 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5582dbbdf748 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5582dbbdf700 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5582dbbdf6e8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5582dbbdf6a8 <col:56> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5582dbbdf730 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5582dbbdf718 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5582dbbdf6c8 <col:74> '_Bool' lvalue Var 0x5582dbbdb330 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5582dbbdf800 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5582dbbdf7b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5582dbbdf788 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5582dbbdf830 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5582dbbdf818 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5582dbbdf7e0 <col:102> '_Bool' lvalue Var 0x5582dbbdb330 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5582dbbdf8e8 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5582dbbdf8d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbdf8b0 <col:3> 'void ()' Function 0x5582dbb81410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5582dbbdf940 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5582dbbdf928 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbdf908 <col:3> 'void ()' Function 0x5582dbb81350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5582dbbdf9f8 <line:776:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5582dbbdf960 <col:3> 'int' lvalue Var 0x5582dbbda6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5582dbbdf9d8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5582dbbdf9c0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5582dbbdf980 <col:22> 'int' lvalue Var 0x5582dbbda6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5582dbbdf9a0 <col:41> 'int' 1
|   |-CallExpr 0x5582dbbdfa50 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5582dbbdfa38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbdfa18 <col:3> 'void ()' Function 0x5582dbb81410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5582dbbdfac8 <line:778:3, col:36>
|     `-CallExpr 0x5582dbbdfaa8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5582dbbdfa90 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5582dbbdfa70 <col:10> 'void *(void)' Function 0x5582dbb80e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5582dbbdfc20 prev 0x5582dbbda368 <line:780:1, line:802:1> line:780:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x5582dbbdfb88 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5582dbbe0fd0 <line:781:1, line:802:1>
|   |-CallExpr 0x5582dbbdfd00 <line:782:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5582dbbdfce8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbdfcc8 <col:3> 'void ()' Function 0x5582dbb81350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5582dbbdfd60 <line:783:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5582dbbdfd20 <col:3> 'int' lvalue Var 0x5582dbbdb8b0 'z' 'int'
|   | `-IntegerLiteral 0x5582dbbdfd40 <col:7> 'int' 2
|   |-CallExpr 0x5582dbbdfdb8 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5582dbbdfda0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbdfd80 <col:3> 'void ()' Function 0x5582dbb81410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5582dbbdfe10 <line:785:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5582dbbdfdf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbdfdd8 <col:3> 'void ()' Function 0x5582dbb81350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5582dbbdfe88 <line:786:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5582dbbdfe30 <col:3> 'int' lvalue Var 0x5582dbbda928 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x5582dbbdfe70 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5582dbbdfe50 <col:25> 'int' lvalue Var 0x5582dbbdb8b0 'z' 'int'
|   |-CallExpr 0x5582dbbdfee0 <line:787:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5582dbbdfec8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbdfea8 <col:3> 'void ()' Function 0x5582dbb81410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5582dbbdff38 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5582dbbdff20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbdff00 <col:3> 'void ()' Function 0x5582dbb81350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5582dbbdffc0 <line:789:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5582dbbdff58 <col:3> 'int' lvalue Var 0x5582dbbdaa48 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x5582dbbdff98 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5582dbbdff78 <col:25> 'int' lvalue Var 0x5582dbbdab68 'a' 'int'
|   |-CallExpr 0x5582dbbe0018 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5582dbbe0000 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbdffe0 <col:3> 'void ()' Function 0x5582dbb81410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5582dbbe0070 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5582dbbe0058 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbe0038 <col:3> 'void ()' Function 0x5582dbb81350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5582dbbe0358 <line:792:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5582dbbe0090 <col:3> 'int' lvalue Var 0x5582dbbdad78 'x' 'int'
|   | `-ConditionalOperator 0x5582dbbe0328 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5582dbbe0150 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5582dbbe0108 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5582dbbe00f0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5582dbbe00b0 <col:7> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5582dbbe0138 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5582dbbe0120 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5582dbbe00d0 <col:25> '_Bool' lvalue Var 0x5582dbbdb150 'x$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x5582dbbe0310 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5582dbbe0170 <col:42> 'int' lvalue Var 0x5582dbbdb520 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5582dbbe02f0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5582dbbe02c0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5582dbbe0230 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5582dbbe01e8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5582dbbe01d0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5582dbbe0190 <col:55> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5582dbbe0218 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5582dbbe0200 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5582dbbe01b0 <col:73> '_Bool' lvalue Var 0x5582dbbdb3a8 'x$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5582dbbe0290 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5582dbbe0250 <col:90> 'int' lvalue Var 0x5582dbbdb618 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5582dbbe02a8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5582dbbe0270 <col:102> 'int' lvalue Var 0x5582dbbdad78 'x' 'int'
|   |-BinaryOperator 0x5582dbbe0560 <line:793:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5582dbbe0378 <col:3> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5582dbbe0548 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5582dbbe0518 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5582dbbe0438 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5582dbbe03f0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5582dbbe03d8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5582dbbe0398 <col:20> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5582dbbe0420 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5582dbbe0408 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5582dbbe03b8 <col:38> '_Bool' lvalue Var 0x5582dbbdb150 'x$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5582dbbe04d0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5582dbbe0488 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5582dbbe0458 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5582dbbe0500 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5582dbbe04e8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5582dbbe04b0 <col:66> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5582dbbe0848 <line:794:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5582dbbe0580 <col:3> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5582dbbe0830 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5582dbbe0800 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5582dbbe0720 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5582dbbe0640 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5582dbbe05f8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5582dbbe05e0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5582dbbe05a0 <col:20> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5582dbbe0628 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5582dbbe0610 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5582dbbe05c0 <col:38> '_Bool' lvalue Var 0x5582dbbdb150 'x$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5582dbbe0700 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5582dbbe06b8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5582dbbe06a0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5582dbbe0660 <col:56> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5582dbbe06e8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5582dbbe06d0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5582dbbe0680 <col:74> '_Bool' lvalue Var 0x5582dbbdb3a8 'x$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5582dbbe07b8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5582dbbe0770 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5582dbbe0740 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5582dbbe07e8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5582dbbe07d0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5582dbbe0798 <col:102> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5582dbbe0a50 <line:795:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5582dbbe0868 <col:3> '_Bool' lvalue Var 0x5582dbbdb150 'x$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5582dbbe0a38 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5582dbbe0a08 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5582dbbe0928 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5582dbbe08e0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5582dbbe08c8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5582dbbe0888 <col:20> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5582dbbe0910 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5582dbbe08f8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5582dbbe08a8 <col:38> '_Bool' lvalue Var 0x5582dbbdb150 'x$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5582dbbe09c0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5582dbbe0978 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5582dbbe0948 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5582dbbe09f0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5582dbbe09d8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5582dbbe09a0 <col:66> '_Bool' lvalue Var 0x5582dbbdb150 'x$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5582dbbe0d38 <line:796:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5582dbbe0a70 <col:3> '_Bool' lvalue Var 0x5582dbbdb3a8 'x$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5582dbbe0d20 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5582dbbe0cf0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5582dbbe0c10 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5582dbbe0b30 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5582dbbe0ae8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5582dbbe0ad0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5582dbbe0a90 <col:20> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5582dbbe0b18 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5582dbbe0b00 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5582dbbe0ab0 <col:38> '_Bool' lvalue Var 0x5582dbbdb150 'x$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5582dbbe0bf0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5582dbbe0ba8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5582dbbe0b90 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5582dbbe0b50 <col:56> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5582dbbe0bd8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5582dbbe0bc0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5582dbbe0b70 <col:74> '_Bool' lvalue Var 0x5582dbbdb3a8 'x$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5582dbbe0ca8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5582dbbe0c60 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5582dbbe0c30 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5582dbbe0cd8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5582dbbe0cc0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5582dbbe0c88 <col:102> '_Bool' lvalue Var 0x5582dbbdb3a8 'x$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x5582dbbe0d90 <line:797:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5582dbbe0d78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbe0d58 <col:3> 'void ()' Function 0x5582dbb81410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5582dbbe0de8 <line:798:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5582dbbe0dd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbe0db0 <col:3> 'void ()' Function 0x5582dbb81350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5582dbbe0ea0 <line:799:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5582dbbe0e08 <col:3> 'int' lvalue Var 0x5582dbbda6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5582dbbe0e80 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5582dbbe0e68 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5582dbbe0e28 <col:22> 'int' lvalue Var 0x5582dbbda6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5582dbbe0e48 <col:41> 'int' 1
|   |-CallExpr 0x5582dbbe0ef8 <line:800:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5582dbbe0ee0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5582dbbe0ec0 <col:3> 'void ()' Function 0x5582dbb81410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5582dbbe0f70 <line:801:3, col:36>
|     `-CallExpr 0x5582dbbe0f50 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5582dbbe0f38 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5582dbbe0f18 <col:10> 'void *(void)' Function 0x5582dbb80e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5582dbbe10a0 prev 0x5582dbbda430 <line:803:1, line:805:1> line:803:6 fence 'void ()'
| `-CompoundStmt 0x5582dbbe1140 <line:804:1, line:805:1>
|-FunctionDecl 0x5582dbbe1170 prev 0x5582dbbda4f0 <line:806:1, line:808:1> line:806:6 isync 'void ()'
| `-CompoundStmt 0x5582dbbe1210 <line:807:1, line:808:1>
|-FunctionDecl 0x5582dbbe1240 prev 0x5582dbbda5b0 <line:809:1, line:811:1> line:809:6 lwfence 'void ()'
| `-CompoundStmt 0x5582dbbe12e0 <line:810:1, line:811:1>
`-FunctionDecl 0x5582dbbe1348 <line:812:1, line:851:1> line:812:5 main 'int ()'
  `-CompoundStmt 0x5582dbbe5cc0 <line:813:1, line:851:1>
    |-DeclStmt 0x5582dbbe1460 <line:814:3, col:17>
    | `-VarDecl 0x5582dbbe13f8 <col:3, col:13> col:13 used t739 'pthread_t':'unsigned long'
    |-CallExpr 0x5582dbbe1668 <line:815:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5582dbbe1650 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5582dbbe1478 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5582dbbc18f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5582dbbe14b8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5582dbbe1498 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5582dbbe13f8 't739' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5582dbbe16a8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5582dbbe1530 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5582dbbe1508 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5582dbbe14d0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5582dbbe16c0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5582dbbe1550 <col:38> 'void *(void *)' Function 0x5582dbbdbad8 'P0' 'void *(void *)'
    | `-ParenExpr 0x5582dbbe15d0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5582dbbe15a8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5582dbbe1570 <col:51> 'int' 0
    |-DeclStmt 0x5582dbbe1750 <line:816:3, col:17>
    | `-VarDecl 0x5582dbbe16e8 <col:3, col:13> col:13 used t740 'pthread_t':'unsigned long'
    |-CallExpr 0x5582dbbe18f8 <line:817:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5582dbbe18e0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5582dbbe1768 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5582dbbc18f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5582dbbe17a8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5582dbbe1788 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5582dbbe16e8 't740' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5582dbbe1938 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5582dbbe1820 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5582dbbe17f8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5582dbbe17c0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5582dbbe1950 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5582dbbe1840 <col:38> 'void *(void *)' Function 0x5582dbbdceb0 'P1' 'void *(void *)'
    | `-ParenExpr 0x5582dbbe18c0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5582dbbe1898 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5582dbbe1860 <col:51> 'int' 0
    |-DeclStmt 0x5582dbbe19e0 <line:818:3, col:17>
    | `-VarDecl 0x5582dbbe1978 <col:3, col:13> col:13 used t741 'pthread_t':'unsigned long'
    |-CallExpr 0x5582dbbe1b88 <line:819:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5582dbbe1b70 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5582dbbe19f8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5582dbbc18f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5582dbbe1a38 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5582dbbe1a18 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5582dbbe1978 't741' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5582dbbe1bc8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5582dbbe1ab0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5582dbbe1a88 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5582dbbe1a50 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5582dbbe1be0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5582dbbe1ad0 <col:38> 'void *(void *)' Function 0x5582dbbde8b8 'P2' 'void *(void *)'
    | `-ParenExpr 0x5582dbbe1b50 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5582dbbe1b28 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5582dbbe1af0 <col:51> 'int' 0
    |-DeclStmt 0x5582dbbe1c70 <line:820:3, col:17>
    | `-VarDecl 0x5582dbbe1c08 <col:3, col:13> col:13 used t742 'pthread_t':'unsigned long'
    |-CallExpr 0x5582dbbe1e18 <line:821:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5582dbbe1e00 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5582dbbe1c88 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5582dbbc18f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5582dbbe1cc8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5582dbbe1ca8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5582dbbe1c08 't742' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5582dbbe1e58 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5582dbbe1d40 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5582dbbe1d18 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5582dbbe1ce0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5582dbbe1e70 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5582dbbe1d60 <col:38> 'void *(void *)' Function 0x5582dbbdfc20 'P3' 'void *(void *)'
    | `-ParenExpr 0x5582dbbe1de0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5582dbbe1db8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5582dbbe1d80 <col:51> 'int' 0
    |-CallExpr 0x5582dbbe1ec0 <line:822:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5582dbbe1ea8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5582dbbe1e88 <col:3> 'void ()' Function 0x5582dbb81350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5582dbbe1f90 <line:823:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5582dbbe1ee0 <col:3> '_Bool' lvalue Var 0x5582dbbdac00 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5582dbbe1f78 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5582dbbe1f58 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5582dbbe1f40 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5582dbbe1f00 <col:21> 'int' lvalue Var 0x5582dbbda6e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5582dbbe1f20 <col:41> 'int' 4
    |-CallExpr 0x5582dbbe1ff8 <line:824:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5582dbbe1fe0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5582dbbe1fb0 <col:3> 'void ()' Function 0x5582dbb81410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5582dbbe2070 <line:825:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5582dbbe2058 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5582dbbe2018 <col:3> 'void (int)' Function 0x5582dbb80ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5582dbbe20b0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5582dbbe2098 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5582dbbe2038 <col:21> '_Bool' lvalue Var 0x5582dbbdac00 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5582dbbe2100 <line:826:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5582dbbe20e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5582dbbe20c8 <col:3> 'void ()' Function 0x5582dbb81350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5582dbbe23e8 <line:827:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5582dbbe2120 <col:3> 'int' lvalue Var 0x5582dbbdad78 'x' 'int'
    | `-ConditionalOperator 0x5582dbbe23b8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5582dbbe21e0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5582dbbe2198 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5582dbbe2180 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5582dbbe2140 <col:7> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5582dbbe21c8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5582dbbe21b0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5582dbbe2160 <col:25> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5582dbbe23a0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5582dbbe2200 <col:42> 'int' lvalue Var 0x5582dbbdb520 'x$w_buff0' 'int'
    |   `-ParenExpr 0x5582dbbe2380 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5582dbbe2350 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5582dbbe22c0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5582dbbe2278 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5582dbbe2260 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5582dbbe2220 <col:55> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5582dbbe22a8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5582dbbe2290 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5582dbbe2240 <col:73> '_Bool' lvalue Var 0x5582dbbdb1c8 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5582dbbe2320 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5582dbbe22e0 <col:90> 'int' lvalue Var 0x5582dbbdb618 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5582dbbe2338 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5582dbbe2300 <col:102> 'int' lvalue Var 0x5582dbbdad78 'x' 'int'
    |-BinaryOperator 0x5582dbbe25f0 <line:828:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5582dbbe2408 <col:3> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5582dbbe25d8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5582dbbe25a8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5582dbbe24c8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5582dbbe2480 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5582dbbe2468 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5582dbbe2428 <col:20> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5582dbbe24b0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5582dbbe2498 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5582dbbe2448 <col:38> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5582dbbe2560 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5582dbbe2518 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5582dbbe24e8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5582dbbe2590 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5582dbbe2578 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5582dbbe2540 <col:66> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5582dbbe28d8 <line:829:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5582dbbe2610 <col:3> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5582dbbe28c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5582dbbe2890 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5582dbbe27b0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5582dbbe26d0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5582dbbe2688 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5582dbbe2670 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5582dbbe2630 <col:20> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5582dbbe26b8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5582dbbe26a0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5582dbbe2650 <col:38> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5582dbbe2790 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5582dbbe2748 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5582dbbe2730 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5582dbbe26f0 <col:56> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5582dbbe2778 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5582dbbe2760 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5582dbbe2710 <col:74> '_Bool' lvalue Var 0x5582dbbdb1c8 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5582dbbe2848 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5582dbbe2800 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5582dbbe27d0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5582dbbe2878 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5582dbbe2860 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5582dbbe2828 <col:102> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5582dbbe2ae0 <line:830:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5582dbbe28f8 <col:3> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5582dbbe2ac8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5582dbbe2a98 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5582dbbe29b8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5582dbbe2970 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5582dbbe2958 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5582dbbe2918 <col:20> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5582dbbe29a0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5582dbbe2988 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5582dbbe2938 <col:38> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5582dbbe2a50 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5582dbbe2a08 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5582dbbe29d8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5582dbbe2a80 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5582dbbe2a68 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5582dbbe2a30 <col:66> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5582dbbe2dc8 <line:831:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5582dbbe2b00 <col:3> '_Bool' lvalue Var 0x5582dbbdb1c8 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5582dbbe2db0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5582dbbe2d80 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5582dbbe2ca0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5582dbbe2bc0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5582dbbe2b78 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5582dbbe2b60 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5582dbbe2b20 <col:20> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5582dbbe2ba8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5582dbbe2b90 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5582dbbe2b40 <col:38> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5582dbbe2c80 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5582dbbe2c38 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5582dbbe2c20 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5582dbbe2be0 <col:56> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5582dbbe2c68 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5582dbbe2c50 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5582dbbe2c00 <col:74> '_Bool' lvalue Var 0x5582dbbdb1c8 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5582dbbe2d38 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5582dbbe2cf0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5582dbbe2cc0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5582dbbe2d68 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5582dbbe2d50 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5582dbbe2d18 <col:102> '_Bool' lvalue Var 0x5582dbbdb1c8 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5582dbbe2e20 <line:832:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5582dbbe2e08 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5582dbbe2de8 <col:3> 'void ()' Function 0x5582dbb81410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5582dbbe2e78 <line:833:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5582dbbe2e60 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5582dbbe2e40 <col:3> 'void ()' Function 0x5582dbb81350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5582dbbe2f28 <line:834:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x5582dbbe2e98 <col:3> '_Bool' lvalue Var 0x5582dbbdb948 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x5582dbbe2f10 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x5582dbbe2ef0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x5582dbbe2ed8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5582dbbe2eb8 <col:19> 'void *(void)' Function 0x5582dbb80e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x5582dbbe2ff0 <line:835:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x5582dbbe2f48 <col:3> '_Bool' lvalue Var 0x5582dbbdb9c0 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x5582dbbe2fc0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x5582dbbe2fa0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x5582dbbe2f88 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5582dbbe2f68 <col:19> 'void *(void)' Function 0x5582dbb80e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x5582dbbe3068 <line:836:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x5582dbbe3010 <col:3> '_Bool' lvalue Var 0x5582dbbdae10 'x$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x5582dbbe3050 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x5582dbbe3030 <col:21> '_Bool' lvalue Var 0x5582dbbdb9c0 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x5582dbbe30e0 <line:837:3, col:15> 'int' '='
    | |-DeclRefExpr 0x5582dbbe3088 <col:3> 'int' lvalue Var 0x5582dbbdae90 'x$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x5582dbbe30c8 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x5582dbbe30a8 <col:15> 'int' lvalue Var 0x5582dbbdad78 'x' 'int'
    |-BinaryOperator 0x5582dbbe3518 <line:838:3, col:162> 'int' '='
    | |-DeclRefExpr 0x5582dbbe3100 <col:3> 'int' lvalue Var 0x5582dbbdad78 'x' 'int'
    | `-ConditionalOperator 0x5582dbbe34e8 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x5582dbbe3310 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x5582dbbe3230 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x5582dbbe3158 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x5582dbbe3140 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x5582dbbe3120 <col:8> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x5582dbbe3210 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x5582dbbe31a8 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x5582dbbe3190 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x5582dbbe3170 <col:27> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x5582dbbe31f8 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x5582dbbe31e0 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x5582dbbe31c0 <col:46> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x5582dbbe32f0 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x5582dbbe3288 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x5582dbbe3270 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x5582dbbe3250 <col:65> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x5582dbbe32d8 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x5582dbbe32c0 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x5582dbbe32a0 <col:84> '_Bool' lvalue Var 0x5582dbbdb1c8 'x$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5582dbbe34d0 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5582dbbe3330 <col:101> 'int' lvalue Var 0x5582dbbdad78 'x' 'int'
    |   `-ParenExpr 0x5582dbbe34b0 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x5582dbbe3480 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x5582dbbe33f0 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5582dbbe33a8 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5582dbbe3390 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5582dbbe3350 <col:106> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5582dbbe33d8 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5582dbbe33c0 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5582dbbe3370 <col:124> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5582dbbe3450 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5582dbbe3410 <col:141> 'int' lvalue Var 0x5582dbbdb520 'x$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x5582dbbe3468 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5582dbbe3430 <col:153> 'int' lvalue Var 0x5582dbbdb618 'x$w_buff1' 'int'
    |-BinaryOperator 0x5582dbbe3a28 <line:839:3, col:208> 'int' '='
    | |-DeclRefExpr 0x5582dbbe3538 <col:3> 'int' lvalue Var 0x5582dbbdb520 'x$w_buff0' 'int'
    | `-ConditionalOperator 0x5582dbbe39f8 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x5582dbbe39c8 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5582dbbe39b0 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5582dbbe3558 <col:15> '_Bool' lvalue Var 0x5582dbbdb9c0 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x5582dbbe39e0 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5582dbbe3578 <col:31> 'int' lvalue Var 0x5582dbbdb520 'x$w_buff0' 'int'
    |   `-ParenExpr 0x5582dbbe3990 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x5582dbbe3960 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x5582dbbe3788 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x5582dbbe36a8 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x5582dbbe35d0 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x5582dbbe35b8 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x5582dbbe3598 <col:45> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x5582dbbe3688 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5582dbbe3620 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5582dbbe3608 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5582dbbe35e8 <col:64> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x5582dbbe3670 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x5582dbbe3658 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5582dbbe3638 <col:83> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x5582dbbe3768 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5582dbbe3700 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5582dbbe36e8 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x5582dbbe36c8 <col:102> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x5582dbbe3750 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x5582dbbe3738 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5582dbbe3718 <col:121> '_Bool' lvalue Var 0x5582dbbdb1c8 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5582dbbe3948 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5582dbbe37a8 <col:138> 'int' lvalue Var 0x5582dbbdb520 'x$w_buff0' 'int'
    |       `-ParenExpr 0x5582dbbe3928 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x5582dbbe38f8 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x5582dbbe3868 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x5582dbbe3820 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x5582dbbe3808 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x5582dbbe37c8 <col:151> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x5582dbbe3850 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x5582dbbe3838 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5582dbbe37e8 <col:169> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x5582dbbe38c8 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5582dbbe3888 <col:186> 'int' lvalue Var 0x5582dbbdb520 'x$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x5582dbbe38e0 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x5582dbbe38a8 <col:198> 'int' lvalue Var 0x5582dbbdb520 'x$w_buff0' 'int'
    |-BinaryOperator 0x5582dbbe3f38 <line:840:3, col:208> 'int' '='
    | |-DeclRefExpr 0x5582dbbe3a48 <col:3> 'int' lvalue Var 0x5582dbbdb618 'x$w_buff1' 'int'
    | `-ConditionalOperator 0x5582dbbe3f08 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x5582dbbe3ed8 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5582dbbe3ec0 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5582dbbe3a68 <col:15> '_Bool' lvalue Var 0x5582dbbdb9c0 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x5582dbbe3ef0 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5582dbbe3a88 <col:31> 'int' lvalue Var 0x5582dbbdb618 'x$w_buff1' 'int'
    |   `-ParenExpr 0x5582dbbe3ea0 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x5582dbbe3e70 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x5582dbbe3c98 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x5582dbbe3bb8 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x5582dbbe3ae0 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x5582dbbe3ac8 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x5582dbbe3aa8 <col:45> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x5582dbbe3b98 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5582dbbe3b30 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5582dbbe3b18 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5582dbbe3af8 <col:64> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x5582dbbe3b80 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x5582dbbe3b68 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5582dbbe3b48 <col:83> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x5582dbbe3c78 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5582dbbe3c10 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5582dbbe3bf8 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x5582dbbe3bd8 <col:102> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x5582dbbe3c60 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x5582dbbe3c48 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5582dbbe3c28 <col:121> '_Bool' lvalue Var 0x5582dbbdb1c8 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5582dbbe3e58 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5582dbbe3cb8 <col:138> 'int' lvalue Var 0x5582dbbdb618 'x$w_buff1' 'int'
    |       `-ParenExpr 0x5582dbbe3e38 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x5582dbbe3e08 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x5582dbbe3d78 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x5582dbbe3d30 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x5582dbbe3d18 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x5582dbbe3cd8 <col:151> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x5582dbbe3d60 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x5582dbbe3d48 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5582dbbe3cf8 <col:169> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x5582dbbe3dd8 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5582dbbe3d98 <col:186> 'int' lvalue Var 0x5582dbbdb618 'x$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x5582dbbe3df0 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x5582dbbe3db8 <col:198> 'int' lvalue Var 0x5582dbbdb618 'x$w_buff1' 'int'
    |-BinaryOperator 0x5582dbbe44f0 <line:841:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x5582dbbe3f58 <col:3> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5582dbbe44d8 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5582dbbe44a8 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x5582dbbe4460 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5582dbbe4448 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5582dbbe3f78 <col:20> '_Bool' lvalue Var 0x5582dbbdb9c0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5582dbbe4490 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5582dbbe4478 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5582dbbe3f98 <col:36> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x5582dbbe4428 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x5582dbbe43f8 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x5582dbbe41b8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5582dbbe40d8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5582dbbe4000 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5582dbbe3fd8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5582dbbe3fb8 <col:55> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5582dbbe40b8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5582dbbe4050 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5582dbbe4038 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5582dbbe4018 <col:74> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5582dbbe40a0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5582dbbe4088 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5582dbbe4068 <col:93> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5582dbbe4198 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5582dbbe4130 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5582dbbe4118 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5582dbbe40f8 <col:112> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5582dbbe4180 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5582dbbe4168 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5582dbbe4148 <col:131> '_Bool' lvalue Var 0x5582dbbdb1c8 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5582dbbe43e0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5582dbbe43c8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5582dbbe41d8 <col:148> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x5582dbbe43a8 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x5582dbbe4378 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x5582dbbe4298 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5582dbbe4250 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5582dbbe4238 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5582dbbe41f8 <col:166> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5582dbbe4280 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5582dbbe4268 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5582dbbe4218 <col:184> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5582dbbe4330 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5582dbbe42e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5582dbbe42b8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5582dbbe4360 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x5582dbbe4348 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x5582dbbe4310 <col:212> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5582dbbe4ab8 <line:842:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x5582dbbe4510 <col:3> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5582dbbe4aa0 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5582dbbe4a70 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x5582dbbe4a28 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5582dbbe4a10 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5582dbbe4530 <col:20> '_Bool' lvalue Var 0x5582dbbdb9c0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5582dbbe4a58 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5582dbbe4a40 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5582dbbe4550 <col:36> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x5582dbbe49f0 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x5582dbbe49c0 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x5582dbbe4760 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5582dbbe4680 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5582dbbe45a8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5582dbbe4590 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5582dbbe4570 <col:55> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5582dbbe4660 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5582dbbe45f8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5582dbbe45e0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5582dbbe45c0 <col:74> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5582dbbe4648 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5582dbbe4630 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5582dbbe4610 <col:93> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5582dbbe4740 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5582dbbe46d8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5582dbbe46c0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5582dbbe46a0 <col:112> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5582dbbe4728 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5582dbbe4710 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5582dbbe46f0 <col:131> '_Bool' lvalue Var 0x5582dbbdb1c8 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5582dbbe49a8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5582dbbe4990 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5582dbbe4780 <col:148> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x5582dbbe4970 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x5582dbbe4940 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x5582dbbe4840 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5582dbbe47f8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5582dbbe47e0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5582dbbe47a0 <col:166> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5582dbbe4828 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5582dbbe4810 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5582dbbe47c0 <col:184> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5582dbbe4910 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5582dbbe4890 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5582dbbe4860 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5582dbbe4928 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x5582dbbe48e8 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x5582dbbe48b8 <col:219> 'int' 0
    |-BinaryOperator 0x5582dbbe5070 <line:843:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x5582dbbe4ad8 <col:3> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5582dbbe5058 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5582dbbe5028 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x5582dbbe4fd0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5582dbbe4fb8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5582dbbe4af8 <col:20> '_Bool' lvalue Var 0x5582dbbdb9c0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5582dbbe5010 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5582dbbe4fe8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5582dbbe4b18 <col:36> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x5582dbbe4f98 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x5582dbbe4f68 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x5582dbbe4d28 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5582dbbe4c48 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5582dbbe4b70 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5582dbbe4b58 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5582dbbe4b38 <col:55> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5582dbbe4c28 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5582dbbe4bc0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5582dbbe4ba8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5582dbbe4b88 <col:74> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5582dbbe4c10 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5582dbbe4bf8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5582dbbe4bd8 <col:93> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5582dbbe4d08 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5582dbbe4ca0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5582dbbe4c88 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5582dbbe4c68 <col:112> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5582dbbe4cf0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5582dbbe4cd8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5582dbbe4cb8 <col:131> '_Bool' lvalue Var 0x5582dbbdb1c8 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5582dbbe4f50 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5582dbbe4f38 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5582dbbe4d48 <col:148> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x5582dbbe4f18 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x5582dbbe4ee8 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x5582dbbe4e08 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5582dbbe4dc0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5582dbbe4da8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5582dbbe4d68 <col:166> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5582dbbe4df0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5582dbbe4dd8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5582dbbe4d88 <col:184> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5582dbbe4ea0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5582dbbe4e58 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5582dbbe4e28 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5582dbbe4ed0 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x5582dbbe4eb8 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x5582dbbe4e80 <col:212> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5582dbbe5638 <line:844:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x5582dbbe5090 <col:3> '_Bool' lvalue Var 0x5582dbbdb1c8 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5582dbbe5620 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5582dbbe55f0 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x5582dbbe55a8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5582dbbe5590 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5582dbbe50b0 <col:20> '_Bool' lvalue Var 0x5582dbbdb9c0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5582dbbe55d8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5582dbbe55c0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5582dbbe50d0 <col:36> '_Bool' lvalue Var 0x5582dbbdb1c8 'x$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x5582dbbe5570 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x5582dbbe5540 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x5582dbbe52e0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5582dbbe5200 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5582dbbe5128 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5582dbbe5110 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5582dbbe50f0 <col:55> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5582dbbe51e0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5582dbbe5178 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5582dbbe5160 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5582dbbe5140 <col:74> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5582dbbe51c8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5582dbbe51b0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5582dbbe5190 <col:93> '_Bool' lvalue Var 0x5582dbbdb690 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5582dbbe52c0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5582dbbe5258 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5582dbbe5240 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5582dbbe5220 <col:112> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5582dbbe52a8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5582dbbe5290 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5582dbbe5270 <col:131> '_Bool' lvalue Var 0x5582dbbdb1c8 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5582dbbe5528 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5582dbbe5510 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5582dbbe5300 <col:148> '_Bool' lvalue Var 0x5582dbbdb1c8 'x$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x5582dbbe54f0 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x5582dbbe54c0 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x5582dbbe53c0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5582dbbe5378 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5582dbbe5360 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5582dbbe5320 <col:166> '_Bool' lvalue Var 0x5582dbbdb598 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5582dbbe53a8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5582dbbe5390 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5582dbbe5340 <col:184> '_Bool' lvalue Var 0x5582dbbdaf70 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5582dbbe5490 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5582dbbe5410 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5582dbbe53e0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5582dbbe54a8 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x5582dbbe5468 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x5582dbbe5438 <col:219> 'int' 0
    |-BinaryOperator 0x5582dbbe59a0 <line:845:3, col:123> '_Bool' '='
    | |-DeclRefExpr 0x5582dbbe5658 <col:3> '_Bool' lvalue Var 0x5582dbbdac78 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5582dbbe5988 <col:21, col:123> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5582dbbe5970 <col:21, col:123> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5582dbbe5950 <col:22, col:123> 'int'
    |       `-BinaryOperator 0x5582dbbe5930 <col:23, col:122> 'int' '&&'
    |         |-BinaryOperator 0x5582dbbe5898 <col:23, col:94> 'int' '&&'
    |         | |-BinaryOperator 0x5582dbbe5800 <col:23, col:66> 'int' '&&'
    |         | | |-BinaryOperator 0x5582dbbe5768 <col:23, col:38> 'int' '&&'
    |         | | | |-BinaryOperator 0x5582dbbe56d0 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x5582dbbe56b8 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x5582dbbe5678 <col:23> 'int' lvalue Var 0x5582dbbdad78 'x' 'int'
    |         | | | | `-IntegerLiteral 0x5582dbbe5698 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x5582dbbe5748 <col:33, col:38> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x5582dbbe5730 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x5582dbbe56f0 <col:33> 'int' lvalue Var 0x5582dbbdb8b0 'z' 'int'
    |         | | |   `-IntegerLiteral 0x5582dbbe5710 <col:38> 'int' 2
    |         | | `-BinaryOperator 0x5582dbbe57e0 <col:43, col:66> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5582dbbe57c8 <col:43> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5582dbbe5788 <col:43> 'int' lvalue Var 0x5582dbbda808 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x5582dbbe57a8 <col:66> 'int' 0
    |         | `-BinaryOperator 0x5582dbbe5878 <col:71, col:94> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5582dbbe5860 <col:71> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5582dbbe5820 <col:71> 'int' lvalue Var 0x5582dbbda928 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x5582dbbe5840 <col:94> 'int' 2
    |         `-BinaryOperator 0x5582dbbe5910 <col:99, col:122> 'int' '=='
    |           |-ImplicitCastExpr 0x5582dbbe58f8 <col:99> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5582dbbe58b8 <col:99> 'int' lvalue Var 0x5582dbbdaa48 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x5582dbbe58d8 <col:122> 'int' 0
    |-BinaryOperator 0x5582dbbe5ad0 <line:846:3, col:37> 'int' '='
    | |-DeclRefExpr 0x5582dbbe59c0 <col:3> 'int' lvalue Var 0x5582dbbdad78 'x' 'int'
    | `-ConditionalOperator 0x5582dbbe5aa0 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x5582dbbe5a58 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5582dbbe5a40 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5582dbbe59e0 <col:7> '_Bool' lvalue Var 0x5582dbbdae10 'x$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x5582dbbe5a70 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5582dbbe5a00 <col:25> 'int' lvalue Var 0x5582dbbdae90 'x$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x5582dbbe5a88 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x5582dbbe5a20 <col:37> 'int' lvalue Var 0x5582dbbdad78 'x' 'int'
    |-BinaryOperator 0x5582dbbe5b68 <line:847:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x5582dbbe5af0 <col:3> '_Bool' lvalue Var 0x5582dbbdae10 'x$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x5582dbbe5b40 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x5582dbbe5b10 <col:28> 'int' 0
    |-CallExpr 0x5582dbbe5bc0 <line:848:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5582dbbe5ba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5582dbbe5b88 <col:3> 'void ()' Function 0x5582dbb81410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5582dbbe5c38 <line:849:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5582dbbe5c20 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5582dbbe5be0 <col:3> 'void (int)' Function 0x5582dbb810d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5582dbbe5c78 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5582dbbe5c60 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5582dbbe5c00 <col:21> '_Bool' lvalue Var 0x5582dbbdac78 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5582dbbe5cb0 <line:850:3, col:10>
      `-IntegerLiteral 0x5582dbbe5c90 <col:10> 'int' 0
