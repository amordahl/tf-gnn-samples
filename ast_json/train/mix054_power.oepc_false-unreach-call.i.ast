TranslationUnitDecl 0x564801079f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x56480107a848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x56480107a520 '__int128'
|-TypedefDecl 0x56480107a8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x56480107a540 'unsigned __int128'
|-TypedefDecl 0x56480107abc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x56480107a990 'struct __NSConstantString_tag'
|   `-Record 0x56480107a910 '__NSConstantString_tag'
|-TypedefDecl 0x56480107ac68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x56480107ac20 'char *'
|   `-BuiltinType 0x56480107a020 'char'
|-TypedefDecl 0x5648010b9b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x56480107af00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x56480107ad40 'struct __va_list_tag'
|     `-Record 0x56480107acc0 '__va_list_tag'
|-FunctionDecl 0x5648010b9ca0 <pthread-wmm/mix054_power.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5648010b9bd0 <col:31> col:34 'int'
|-FunctionDecl 0x5648010b9e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5648010b9f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5648010ba0d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5648010ba048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5648010ba308 <col:40, col:99>
|   |-IfStmt 0x5648010ba2d8 <col:42, col:88>
|   | |-UnaryOperator 0x5648010ba1b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5648010ba1a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5648010ba180 <col:47> 'int' lvalue ParmVar 0x5648010ba048 'expression' 'int'
|   | `-CompoundStmt 0x5648010ba2c0 <col:59, col:88>
|   |   `-LabelStmt 0x5648010ba2a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5648010ba238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5648010ba220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5648010ba1d0 <col:68> 'void () __attribute__((noreturn))' Function 0x5648010b9f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5648010ba2f0 <col:89>
|   `-ReturnStmt 0x5648010ba2f8 <col:91>
|-FunctionDecl 0x5648010ba350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5648010ba410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5648010ba790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5648010ba4c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5648010ba548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5648010ba5c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5648010ba648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5648010ba850 <line:10:22>
|-FunctionDecl 0x5648010e08a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5648010ba8c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5648010ba940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5648010ba9c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5648010baa40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5648010e0960 <line:13:22>
|-FunctionDecl 0x5648010e0c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5648010e09d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5648010e0a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5648010e0ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5648010e0cc8 <line:15:22>
|-TypedefDecl 0x5648010e0d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x56480107a0e0 'unsigned char'
|-TypedefDecl 0x5648010e0da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x56480107a100 'unsigned short'
|-TypedefDecl 0x5648010e0e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x56480107a120 'unsigned int'
|-TypedefDecl 0x5648010e0e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x56480107a140 'unsigned long'
|-TypedefDecl 0x5648010e0ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x56480107a040 'signed char'
|-TypedefDecl 0x5648010e0f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x56480107a0e0 'unsigned char'
|-TypedefDecl 0x5648010e0fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x56480107a060 'short'
|-TypedefDecl 0x5648010e1048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x56480107a100 'unsigned short'
|-TypedefDecl 0x5648010e10b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x56480107a080 'int'
|-TypedefDecl 0x5648010e1128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x56480107a120 'unsigned int'
|-TypedefDecl 0x5648010e1198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x56480107a0a0 'long'
|-TypedefDecl 0x5648010e1208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x56480107a140 'unsigned long'
|-TypedefDecl 0x5648010e1278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x56480107a0a0 'long'
|-TypedefDecl 0x5648010e12e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x56480107a140 'unsigned long'
|-TypedefDecl 0x5648010e1358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x56480107a140 'unsigned long'
|-TypedefDecl 0x5648010e13c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x56480107a120 'unsigned int'
|-TypedefDecl 0x5648010e1438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x56480107a120 'unsigned int'
|-TypedefDecl 0x5648010e14a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x56480107a140 'unsigned long'
|-TypedefDecl 0x5648010e1518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x56480107a140 'unsigned long'
|-TypedefDecl 0x5648010e1588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x56480107a120 'unsigned int'
|-TypedefDecl 0x5648010e15f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x56480107a140 'unsigned long'
|-TypedefDecl 0x5648010e1668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x56480107a0a0 'long'
|-TypedefDecl 0x5648010e16d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x56480107a0a0 'long'
|-TypedefDecl 0x5648010e1748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x56480107a080 'int'
|-RecordDecl 0x5648010e17a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5648010e1918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5648010e19d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5648010e1970 'struct __fsid_t' sugar
|   `-RecordType 0x5648010e1820 '__fsid_t'
|     `-Record 0x5648010e17a0 ''
|-TypedefDecl 0x5648010e1a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x56480107a0a0 'long'
|-TypedefDecl 0x5648010e1ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x56480107a140 'unsigned long'
|-TypedefDecl 0x5648010e1b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x56480107a140 'unsigned long'
|-TypedefDecl 0x5648010e1ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x56480107a120 'unsigned int'
|-TypedefDecl 0x5648010e1c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x56480107a0a0 'long'
|-TypedefDecl 0x5648010e1c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x56480107a120 'unsigned int'
|-TypedefDecl 0x5648010e1cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x56480107a0a0 'long'
|-TypedefDecl 0x5648010e1d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x56480107a080 'int'
|-TypedefDecl 0x5648010e1dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x56480107a080 'int'
|-TypedefDecl 0x5648010e1e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x56480107a080 'int'
|-TypedefDecl 0x5648010e1eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x56480107a7a0 'void *'
|   `-BuiltinType 0x564801079fe0 'void'
|-TypedefDecl 0x5648010e1f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x56480107a0a0 'long'
|-TypedefDecl 0x5648010e1f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x56480107a0a0 'long'
|-TypedefDecl 0x5648010e2008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x56480107a0a0 'long'
|-TypedefDecl 0x5648010e2078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x56480107a140 'unsigned long'
|-TypedefDecl 0x5648010e20e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x56480107a140 'unsigned long'
|-TypedefDecl 0x5648010e2158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x56480107a140 'unsigned long'
|-TypedefDecl 0x5648010e21c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x56480107a140 'unsigned long'
|-TypedefDecl 0x5648010e2238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x56480107a0a0 'long'
|-TypedefDecl 0x5648010e22a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x56480107a0a0 'long'
|-TypedefDecl 0x5648010e2318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x56480107a0a0 'long'
|-TypedefDecl 0x5648010e2388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x56480107a140 'unsigned long'
|-TypedefDecl 0x5648010e2418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5648010e23e0 '__off64_t' sugar
|   |-Typedef 0x5648010e16d8 '__off64_t'
|   `-BuiltinType 0x56480107a0a0 'long'
|-TypedefDecl 0x5648010e2510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5648010e24d0 '__quad_t *'
|   `-TypedefType 0x5648010e2470 '__quad_t' sugar
|     |-Typedef 0x5648010e1278 '__quad_t'
|     `-BuiltinType 0x56480107a0a0 'long'
|-TypedefDecl 0x5648010e2580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x56480107ac20 'char *'
|   `-BuiltinType 0x56480107a020 'char'
|-TypedefDecl 0x5648010e25f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x56480107a0a0 'long'
|-TypedefDecl 0x5648010e2660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x56480107a120 'unsigned int'
|-FunctionDecl 0x5648010e27a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5648010e26d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5648010e2ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5648010e2ad8 <line:72:3, col:34>
|     `-CallExpr 0x5648010e2a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5648010e2a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5648010e2a10 <col:10> '<builtin fn type>' Function 0x5648010e2880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5648010e2ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5648010e2a30 <col:29> 'unsigned int' lvalue ParmVar 0x5648010e26d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5648010e2880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5648010e2920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5648010e2990 <col:10> Implicit
| `-ConstAttr 0x5648010e29e8 <col:10> Implicit
|-FunctionDecl 0x5648010e2c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5648010e2b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5648010e2f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5648010e2f48 <line:77:3, col:34>
|     `-CallExpr 0x5648010e2f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5648010e2ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5648010e2e78 <col:10> '<builtin fn type>' Function 0x5648010e2ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5648010e2f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5648010e2e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5648010e2b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5648010e2ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5648010e2d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5648010e2df8 <col:10> Implicit
| `-ConstAttr 0x5648010e2e50 <col:10> Implicit
|-TypedefDecl 0x5648010e2f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x56480107a140 'unsigned long'
|-TypedefDecl 0x5648010e3018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5648010e2fe0 '__time_t' sugar
|   |-Typedef 0x5648010e1c18 '__time_t'
|   `-BuiltinType 0x56480107a0a0 'long'
|-RecordDecl 0x5648010e3070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5648010e3128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5648010e31b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5648010e3248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5648010e3210 '__pid_t' sugar
|   |-Typedef 0x5648010e1748 '__pid_t'
|   `-BuiltinType 0x56480107a080 'int'
|-RecordDecl 0x5648010e32a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5648010e3360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5648010e33b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5648010e3470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5648010e34d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x56480107a140 'unsigned long'
|-RecordDecl 0x5648010e3530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5648010e37c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5648010e58b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5648010e3810 'struct cpu_set_t' sugar
|   `-RecordType 0x5648010e35b0 'cpu_set_t'
|     `-Record 0x5648010e3530 ''
|-FunctionDecl 0x5648010e5b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5648010e5958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5648010e5a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5648010e5c38 <line:107:19>
|-FunctionDecl 0x5648010e5e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5648010e5ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5648010e5eb8 <col:69>
|-FunctionDecl 0x5648010e6030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5648010e5f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5648010e60d8 <col:64>
|-FunctionDecl 0x5648010e6398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5648010e6140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5648010e6278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5648010e6448 <line:113:22>
|-FunctionDecl 0x5648010e66c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5648010e64b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5648010e65a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5648010e6778 <col:88>
|-FunctionDecl 0x5648010e6a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5648010e67e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5648010e68c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5648010e6950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5648010e6b50 <col:62>
|-FunctionDecl 0x5648010e6cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5648010e6bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5648010e6d70 <col:63>
|-FunctionDecl 0x5648010e6e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5648010e6f38 <col:47>
|-FunctionDecl 0x5648010e7040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5648010e6fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5648010e70e8 <col:69>
|-FunctionDecl 0x5648010e71f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5648010e7158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5648010e7298 <col:69>
|-FunctionDecl 0x5648010e7558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5648010e7300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5648010e7438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5648010e7608 <col:88>
|-TypedefDecl 0x5648010e7698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5648010e7660 '__clock_t' sugar
|   |-Typedef 0x5648010e1a58 '__clock_t'
|   `-BuiltinType 0x56480107a0a0 'long'
|-TypedefDecl 0x5648010e7728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5648010e76f0 '__clockid_t' sugar
|   |-Typedef 0x5648010e1e48 '__clockid_t'
|   `-BuiltinType 0x56480107a080 'int'
|-TypedefDecl 0x5648010e77b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5648010e7780 '__timer_t' sugar
|   |-Typedef 0x5648010e1eb8 '__timer_t'
|   `-PointerType 0x56480107a7a0 'void *'
|     `-BuiltinType 0x564801079fe0 'void'
|-RecordDecl 0x5648010e7810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5648010e78e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5648010e7950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5648010e79b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5648010e7a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5648010e7a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5648010e7af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5648010e7b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5648010e7bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5648010e7c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5648010e7c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5648010e7cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5648010e7d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5648010e7e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5648010e7e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5648010e7f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5648010e8100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5648010e81a0 <col:45>
|-FunctionDecl 0x5648010e8380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5648010e8270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5648010e8428 <col:54>
|-FunctionDecl 0x5648010e8628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5648010e8490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5648010e8508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5648010e86d8 <line:157:22>
| `-ConstAttr 0x5648010e8730 <col:63>
|-FunctionDecl 0x5648010e9560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5648010e8828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5648010e9608 <col:56>
|-FunctionDecl 0x5648010e99b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5648010e9678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5648010e96f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5648010e9770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5648010e9868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5648010e9a70 <col:54>
|-RecordDecl 0x5648010e9ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5648010e9b78 parent 0x564801079f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5648010e9dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5648010e9e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5648010e9ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5648010e9f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5648010ea038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5648010ea158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5648010ea100 'struct __locale_struct *'
|   `-ElaboratedType 0x5648010ea090 'struct __locale_struct' sugar
|     `-RecordType 0x5648010e9b50 'struct __locale_struct'
|       `-Record 0x5648010e9ac8 '__locale_struct'
|-TypedefDecl 0x5648010ea208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5648010ea1d0 '__locale_t' sugar
|   |-Typedef 0x5648010ea158 '__locale_t'
|   `-PointerType 0x5648010ea100 'struct __locale_struct *'
|     `-ElaboratedType 0x5648010ea090 'struct __locale_struct' sugar
|       `-RecordType 0x5648010e9b50 'struct __locale_struct'
|         `-Record 0x5648010e9ac8 '__locale_struct'
|-FunctionDecl 0x5648010ea610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5648010ea278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5648010ea2f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5648010ea370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5648010ea400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5648010ea478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5648010ea6d8 <col:40>
|-FunctionDecl 0x5648010ea8c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5648010ea7a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5648010ea970 <col:66>
|-FunctionDecl 0x5648010eaa80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5648010ea9d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5648010eab28 <col:69>
|-FunctionDecl 0x5648010ead58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5648010eab90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5648010eac20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5648010eae08 <col:52>
|-FunctionDecl 0x5648010eafb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5648010eae70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5648010eaf00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5648010eb060 <col:55>
|-FunctionDecl 0x5648010eb1f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5648010eb0e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5648010eb2a0 <col:62>
|-FunctionDecl 0x5648010eb418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5648010eb308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5648010eb4c0 <col:60>
|-FunctionDecl 0x5648010eb718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5648010eb578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5648010eb5f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5648010eb7c8 <col:44>
|-FunctionDecl 0x5648010eb9d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5648010eb830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5648010eb8b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5648010eba88 <col:49>
|-VarDecl 0x5648010ebb88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5648010ebc08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5648010ebc88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5648010ebd50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5648010ebe80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5648010ebf20 <col:42>
|-VarDecl 0x5648010ebf90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5648010ec010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5648010ec198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5648010ec088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5648010ec240 <col:57>
|-FunctionDecl 0x5648010ec350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5648010ec2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5648010ec3f8 <col:56>
|-FunctionDecl 0x5648010ed540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5648010ec478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5648010ed5e8 <col:59>
|-FunctionDecl 0x5648010ed6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5648010ed658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5648010ed798 <col:48>
| `-ConstAttr 0x5648010ed7f0 <col:89>
|-FunctionDecl 0x5648010eda58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5648010ed8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5648010ed938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5648010edcb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5648010edb48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5648010edbd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5648010edd68 <col:88>
|-FunctionDecl 0x5648010edf00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5648010eddd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5648010ede60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5648010edfb0 <col:88>
|-FunctionDecl 0x5648010ee1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5648010ee018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5648010ee0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5648010ee278 <line:208:22>
|-FunctionDecl 0x5648010ee5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5648010ee2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5648010ee360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5648010ee3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5648010ee480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5648010ee8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5648010ee6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5648010ee7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5648010ee998 <col:85>
|-FunctionDecl 0x5648010eed88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5648010eea00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5648010eeb38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5648010eec40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5648010eee40 <col:52>
|-FunctionDecl 0x5648010eefb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5648010eeea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5648010ef060 <col:61>
|-FunctionDecl 0x5648010ef560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5648010ef0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5648010ef148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5648010ef278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5648010ef368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5648010ef620 <col:62>
|-FunctionDecl 0x5648010ef838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5648010ef688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5648010ef718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5648010ef8e8 <line:221:22>
|-FunctionDecl 0x5648010ef9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5648010ef950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5648010efa90 <col:65>
|-TypedefDecl 0x5648010efb00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x56480107a140 'unsigned long'
|-RecordDecl 0x5648010efb58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5648010efca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5648010efd08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5648010efdb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5648010efd60 'union pthread_attr_t' sugar
|   `-RecordType 0x5648010efbe0 'union pthread_attr_t'
|     `-Record 0x5648010efb58 'pthread_attr_t'
|-RecordDecl 0x5648010efe10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5648010eff88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5648010f0000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5648010f00b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5648010f0050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5648010efe90 'struct __pthread_internal_list'
|     `-Record 0x5648010efe10 '__pthread_internal_list'
|-RecordDecl 0x5648010f0120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5648010f01c8 parent 0x564801079f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5648010f02a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5648010f0308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5648010f0370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5648010f03d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5648010f0440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5648010f04a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5648010f4580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5648010f4630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5648010f4720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5648010f4788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5648010f4910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5648010f48b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5648010f01a0 'pthread_mutex_t'
|     `-Record 0x5648010f0120 ''
|-RecordDecl 0x5648010f4980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5648010f4ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5648010f4b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5648010f4be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5648010f4b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5648010f4a00 'pthread_mutexattr_t'
|     `-Record 0x5648010f4980 ''
|-RecordDecl 0x5648010f4c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5648010f4cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5648010f4dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5648010f4e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5648010f4e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5648010f4ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5648010f4f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5648010f4fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5648010f5030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5648010f5098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5648010f5150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix054_power.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix054_power.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5648010f5240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5648010f52a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5648010f53e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5648010f5380 'union pthread_cond_t' sugar
|   `-RecordType 0x5648010f4cd0 'pthread_cond_t'
|     `-Record 0x5648010f4c50 ''
|-RecordDecl 0x5648010f5450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5648010f5590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5648010f55f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5648010f56b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5648010f5650 'union pthread_condattr_t' sugar
|   `-RecordType 0x5648010f54d0 'pthread_condattr_t'
|     `-Record 0x5648010f5450 ''
|-TypedefDecl 0x5648010f5738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x56480107a120 'unsigned int'
|-TypedefDecl 0x5648010f57a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x56480107a080 'int'
|-RecordDecl 0x5648010f5800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5648010f58a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5648010f5970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5648010f59d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5648010f5a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5648010f5aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5648010f5b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5648010f5b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5648010f5be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5648010f5c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5648010f5cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5648010f5d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5648010f5d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5648010f5e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix054_power.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix054_power.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5648010f5ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5648010f5f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5648010f6090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5648010f6030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5648010f5880 'pthread_rwlock_t'
|     `-Record 0x5648010f5800 ''
|-RecordDecl 0x5648010f6100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5648010f6240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5648010f62a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5648010f6360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5648010f6300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5648010f6180 'pthread_rwlockattr_t'
|     `-Record 0x5648010f6100 ''
|-TypedefDecl 0x5648010f63e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x56480107a084 'volatile int' volatile
|   `-BuiltinType 0x56480107a080 'int'
|-RecordDecl 0x5648010f6440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5648010f85b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5648010f8618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5648010f86d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5648010f8670 'union pthread_barrier_t' sugar
|   `-RecordType 0x5648010f64c0 'pthread_barrier_t'
|     `-Record 0x5648010f6440 ''
|-RecordDecl 0x5648010f8740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5648010f8840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5648010f88a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5648010f8960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5648010f8900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5648010f87c0 'pthread_barrierattr_t'
|     `-Record 0x5648010f8740 ''
|-TypedefDecl 0x5648010f8a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5648010f8a10 'long [8]' 8 
|   `-BuiltinType 0x56480107a0a0 'long'
|-EnumDecl 0x5648010f8ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5648010f8b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5648010f8be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5648010f8c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5648010f8d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5648010f8d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5648010f8da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5648010f8df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5648010f8e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5648010f8e68 <col:26> 'int'
| |   `-DeclRefExpr 0x5648010f8e48 <col:26> 'int' EnumConstant 0x5648010f8d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5648010f8f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5648010f8ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x5648010f8ed0 <col:29> 'int' EnumConstant 0x5648010f8d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5648010f8f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5648010f8f78 <col:30> 'int'
| |   `-DeclRefExpr 0x5648010f8f58 <col:30> 'int' EnumConstant 0x5648010f8da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5648010f9018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5648010f9000 <col:27> 'int'
|     `-DeclRefExpr 0x5648010f8fe0 <col:27> 'int' EnumConstant 0x5648010f8e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5648010f9068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5648010f9138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5648010f91c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5648010f91a8 <col:30> 'int'
| |   `-DeclRefExpr 0x5648010f9188 <col:30> 'int' EnumConstant 0x5648010f9138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5648010f9210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5648010f9298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5648010f9280 <col:29> 'int'
|     `-DeclRefExpr 0x5648010f9260 <col:29> 'int' EnumConstant 0x5648010f9210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5648010f92e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5648010f93b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5648010f9408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5648010f9458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5648010f94a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5648010f95c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5648010f9610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5648010f9660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5648010f96e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5648010f96d0 <col:31> 'int'
|     `-DeclRefExpr 0x5648010f96b0 <col:31> 'int' EnumConstant 0x5648010f95c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5648010f9738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5648010f9808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5648010f9858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5648010f98a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5648010f9978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5648010f99c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5648010f9a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5648010f9ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5648010f9b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5648010f9b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5648010f9dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5648010f9e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5648010f9e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5648010f9fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5648010fa008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5648010fa0d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5648010fa128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5648010fa178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5648010fa248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5648010fa298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5648010fa8f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5648010fa390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5648010fa4a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5648010fa6e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5648010fa760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5648010fa9b8 <col:47>
| |-NonNullAttr 0x5648010faa10 <col:77, col:94> 1 3
| `-CallbackAttr 0x5648010faa48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5648010fab70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5648010faaa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5648010fadc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5648010fac28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5648010faca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5648010faf98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5648010fae88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5648010fb040 <col:60>
|-FunctionDecl 0x5648010fb190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5648010fb230 <col:54>
| `-ConstAttr 0x5648010fb288 <col:95>
|-FunctionDecl 0x5648010fb458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5648010fb2c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5648010fb338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5648010fb508 <line:394:19>
| `-ConstAttr 0x5648010fb560 <col:60>
|-FunctionDecl 0x5648010fbf68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5648010fbe30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5648010fc010 <col:71>
| `-NonNullAttr 0x5648010fc068 <col:112, col:126> 1
|-FunctionDecl 0x5648010fc170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5648010fc0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5648010fc218 <line:397:22>
| `-NonNullAttr 0x5648010fc270 <col:63, col:77> 1
|-FunctionDecl 0x5648010fc498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5648010fc2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5648010fc338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5648010fc548 <line:400:22>
| `-NonNullAttr 0x5648010fc5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5648010fc7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5648010fc5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5648010fc668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5648010fc858 <line:403:22>
| `-NonNullAttr 0x5648010fc8b0 <col:63, col:77> 1
|-FunctionDecl 0x5648010fcb08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5648010fc8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5648010fc9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5648010fcbb8 <line:406:22>
| `-NonNullAttr 0x5648010fcc10 <col:63, col:80> 1 2
|-FunctionDecl 0x5648010fde48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5648010fcc58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5648010fccd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5648010fdef8 <line:409:22>
| `-NonNullAttr 0x5648010fdf50 <col:63, col:77> 1
|-FunctionDecl 0x5648010fe188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5648010fdf98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5648010fe028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5648010fe238 <line:412:22>
| `-NonNullAttr 0x5648010fe290 <col:63, col:80> 1 2
|-FunctionDecl 0x5648010fe4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5648010fe2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5648010fe368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5648010fe578 <col:37>
| `-NonNullAttr 0x5648010fe5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x5648010fe7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5648010fe618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5648010fe698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5648010fe868 <line:418:22>
| `-NonNullAttr 0x5648010fe8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5648010fea48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5648010fe908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5648010fe988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5648010feaf8 <line:420:22>
| `-NonNullAttr 0x5648010feb50 <col:63, col:77> 1
|-FunctionDecl 0x5648010fecf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5648010feb98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5648010fec18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5648010feda8 <line:423:22>
| `-NonNullAttr 0x5648010ffe30 <col:63, col:80> 1 2
|-FunctionDecl 0x5648010fffb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5648010ffe78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5648010ffef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x564801100068 <line:426:22>
| `-NonNullAttr 0x5648011000c0 <col:63, col:77> 1
|-FunctionDecl 0x564801100268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564801100108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564801100188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x564801100318 <line:429:22>
| `-NonNullAttr 0x564801100370 <col:63, col:80> 1 2
|-FunctionDecl 0x5648011004f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5648011003b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564801100438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5648011005a8 <line:431:22>
| `-NonNullAttr 0x564801100600 <col:63, col:77> 1
|-FunctionDecl 0x564801100828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x564801100648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5648011006c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5648011008d8 <line:434:22>
| |-NonNullAttr 0x564801100930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x564801100968 <col:100> "" ""
|-FunctionDecl 0x564801100b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5648011009b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564801100a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x564801100c28 <line:437:22>
| |-NonNullAttr 0x564801100c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x564801100cb8 <col:97> "" ""
|-FunctionDecl 0x564801100eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564801100d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564801100d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x564801100f68 <line:440:22>
| `-NonNullAttr 0x564801100fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x564801101140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x564801101008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564801101080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5648011011f0 <line:443:22>
| `-NonNullAttr 0x564801101248 <col:63, col:77> 1
|-FunctionDecl 0x564801101538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564801101298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564801101318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x564801101390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5648011015f0 <line:447:22>
| `-NonNullAttr 0x564801101648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5648011018f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5648011016a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564801101720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x564801101798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5648011019b0 <col:43>
| `-NonNullAttr 0x564801101a08 <col:84, col:98> 1
|-FunctionDecl 0x564801101cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x564801101a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564801101ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x564801101b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x564801101d80 <line:452:22>
| `-NonNullAttr 0x564801101dd8 <col:63, col:77> 3
|-FunctionDecl 0x5648011020e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564801101e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564801101ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x564801101f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5648011021a0 <line:456:22>
| `-NonNullAttr 0x5648011021f8 <col:63, col:80> 2 3
|-FunctionDecl 0x5648011023e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x564801102248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5648011022c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x564801102498 <line:458:22>
|-FunctionDecl 0x564801102868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x564801102560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x564801102700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x564801102918 <col:52, col:69> 1 2
|-FunctionDecl 0x564801102ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5648011029a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x564801102a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x564801102ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x564801102b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x564801102c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x564801102e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x564801102d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x564801102fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x564801103040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5648011030e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5648011031d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x564801103240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x564801103410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix054_power.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x564801103508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5648011035c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x564801103560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5648011030c0 '__pthread_unwind_buf_t'
| |   `-Record 0x564801103040 ''
| `-AlignedAttr 0x564801103618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x564801103690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5648011037f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x564801103858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5648011038c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x564801103928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x564801103b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x564801103a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564801103c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x564801103be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564801103e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564801103d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x564801103f18 <line:487:22>
|-RecordDecl 0x564801103f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x564801104288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5648011040e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x564801104168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x564801104338 <col:86>
| `-ReturnsTwiceAttr 0x564801104390 <col:12> Implicit
|-FunctionDecl 0x5648011046b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564801104460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x564801104570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x564801104768 <line:493:22>
| `-NonNullAttr 0x5648011047c0 <col:63, col:77> 1
|-FunctionDecl 0x564801104938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564801104808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5648011049e0 <line:495:22>
| `-NonNullAttr 0x564801104a38 <col:63, col:77> 1
|-FunctionDecl 0x564801104b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564801104a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564801104be8 <line:497:22>
| `-NonNullAttr 0x564801104c40 <col:52, col:66> 1
|-FunctionDecl 0x564801104d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564801104c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564801104de8 <line:499:22>
| `-NonNullAttr 0x564801104e40 <col:52, col:66> 1
|-FunctionDecl 0x564801105088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564801104e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564801104f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564801105138 <col:36>
| `-NonNullAttr 0x564801105190 <col:66, col:83> 1 2
|-FunctionDecl 0x564801105290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5648011051d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564801105338 <line:504:22>
| `-NonNullAttr 0x564801105390 <col:52, col:66> 1
|-FunctionDecl 0x564801105628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564801105440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5648011054c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5648011056d8 <line:508:22>
| `-NonNullAttr 0x564801105730 <col:63, col:80> 1 2
|-FunctionDecl 0x5648011059f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x564801105778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5648011057f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x564801105878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x564801105ab0 <line:512:22>
| `-NonNullAttr 0x564801105b08 <col:63, col:80> 1 3
|-FunctionDecl 0x564801105c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564801105b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564801105cb8 <line:514:22>
| `-NonNullAttr 0x564801105d10 <col:63, col:77> 1
|-FunctionDecl 0x564801105f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564801105dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564801105fe0 <line:516:22>
| `-NonNullAttr 0x564801106038 <col:63, col:77> 1
|-FunctionDecl 0x564801106140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564801106088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5648011061e8 <line:518:22>
| `-NonNullAttr 0x564801106240 <col:63, col:77> 1
|-FunctionDecl 0x564801106468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564801106288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564801106308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x564801106518 <line:522:22>
| `-NonNullAttr 0x564801106570 <col:63, col:80> 1 2
|-FunctionDecl 0x564801106778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5648011065b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564801106638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x564801106828 <line:525:22>
| `-NonNullAttr 0x564801106880 <col:63, col:77> 1
|-FunctionDecl 0x564801106a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5648011068c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564801106948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x564801106ad8 <line:528:22>
| `-NonNullAttr 0x564801106b30 <col:63, col:80> 1 2
|-FunctionDecl 0x564801106cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564801106b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564801106bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x564801106d68 <line:530:22>
| `-NonNullAttr 0x564801106dc0 <col:63, col:77> 1
|-FunctionDecl 0x564801107f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564801106e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564801107eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x564801108040 <line:534:22>
| `-NonNullAttr 0x564801108098 <col:63, col:80> 1 2
|-FunctionDecl 0x564801108228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5648011080e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564801108168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5648011082d8 <line:537:22>
| `-NonNullAttr 0x564801108330 <col:63, col:77> 1
|-FunctionDecl 0x5648011084d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564801108378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5648011083f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564801108588 <line:541:22>
| `-NonNullAttr 0x5648011085e0 <col:63, col:80> 1 2
|-FunctionDecl 0x564801108768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564801108628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5648011086a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x564801108818 <line:544:22>
| `-NonNullAttr 0x564801108870 <col:63, col:77> 1
|-FunctionDecl 0x564801108a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5648011088b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x564801108938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x564801108b08 <line:547:22>
| `-NonNullAttr 0x564801108b60 <col:63, col:80> 1 2
|-FunctionDecl 0x564801108ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564801108ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564801108c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x564801108d98 <line:550:22>
| `-NonNullAttr 0x564801108df0 <col:63, col:77> 1
|-FunctionDecl 0x56480110a168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x564801109f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56480110a020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x56480110a218 <col:29>
| `-NonNullAttr 0x56480110a270 <col:70, col:84> 1
|-FunctionDecl 0x56480110a3e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56480110a2b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56480110a490 <line:555:22>
| `-NonNullAttr 0x56480110a4e8 <col:63, col:77> 1
|-FunctionDecl 0x56480110a5f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56480110a538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56480110a698 <line:557:22>
| `-NonNullAttr 0x56480110a6f0 <col:52, col:66> 1
|-FunctionDecl 0x56480110a7f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56480110a738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56480110a898 <line:559:19>
| `-NonNullAttr 0x56480110a8f0 <col:49, col:63> 1
|-FunctionDecl 0x56480110ab28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56480110a938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56480110a9c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56480110abd8 <col:39>
| `-NonNullAttr 0x56480110ac30 <col:69, col:86> 1 2
|-FunctionDecl 0x56480110ad30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56480110ac78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56480110add8 <line:564:22>
| `-NonNullAttr 0x56480110ae30 <col:52, col:66> 1
|-FunctionDecl 0x56480110af98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56480110aee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56480110b040 <line:566:22>
| `-NonNullAttr 0x56480110b098 <col:52, col:66> 1
|-FunctionDecl 0x56480110b258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56480110b0e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56480110b178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56480110b308 <col:39>
| `-NonNullAttr 0x56480110b360 <col:69, col:86> 1 2
|-FunctionDecl 0x56480110b460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56480110b3a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56480110b508 <line:571:22>
| `-NonNullAttr 0x56480110b560 <col:52, col:66> 1
|-FunctionDecl 0x56480110b748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56480110b610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56480110b7f0 <line:573:22>
| `-NonNullAttr 0x56480110b848 <col:63, col:77> 1
|-FunctionDecl 0x56480110b950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56480110b898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56480110b9f8 <line:575:22>
| `-NonNullAttr 0x56480110ba50 <col:63, col:77> 1
|-FunctionDecl 0x56480110bc78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56480110ba98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56480110bb18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x56480110bd28 <line:579:22>
| `-NonNullAttr 0x56480110bd80 <col:63, col:80> 1 2
|-FunctionDecl 0x56480110bfa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56480110bdc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56480110be48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x56480110c058 <line:582:22>
| `-NonNullAttr 0x56480110c0b0 <col:63, col:77> 1
|-FunctionDecl 0x56480110c258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56480110c0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56480110c178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x56480110c308 <line:586:22>
| `-NonNullAttr 0x56480110c360 <col:63, col:80> 1 2
|-FunctionDecl 0x56480110c4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56480110c3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56480110c428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x56480110c598 <col:36>
| `-NonNullAttr 0x56480110c5f0 <col:77, col:91> 1
|-FunctionDecl 0x56480110c928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x56480110c6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56480110c7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x56480110c9d8 <line:591:22>
| `-NonNullAttr 0x56480110ca30 <col:63, col:77> 1
|-FunctionDecl 0x56480110cba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56480110ca78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56480110cc50 <line:593:22>
| `-NonNullAttr 0x56480110cca8 <col:63, col:77> 1
|-FunctionDecl 0x56480110cdb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56480110ccf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56480110ce58 <line:595:22>
| `-NonNullAttr 0x56480110ceb0 <col:52, col:66> 1
|-FunctionDecl 0x56480110cfc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56480110cf10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56480110d070 <line:597:22>
| `-NonNullAttr 0x56480110d0c8 <col:52, col:66> 1
|-FunctionDecl 0x56480110d2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x56480110d118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56480110d190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x56480110d3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x56480110d6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56480110d428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56480110d4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56480110d530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x56480110d790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x56480110d9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56480110d870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56480110da50 <line:606:22>
| `-NonNullAttr 0x56480110daa8 <col:63, col:77> 1
|-FunctionDecl 0x56480110dbb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56480110daf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56480110dc58 <line:608:22>
| `-NonNullAttr 0x56480110dcb0 <col:63, col:77> 1
|-FunctionDecl 0x56480110df10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56480110dcf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56480110dd78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x56480110dfc0 <line:612:22>
| `-NonNullAttr 0x56480110e018 <col:63, col:80> 1 2
|-FunctionDecl 0x56480110e228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x56480110e068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56480110e0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x56480110e2d8 <col:37>
| `-NonNullAttr 0x56480110e330 <col:78, col:92> 1
|-FunctionDecl 0x56480110e548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x56480110e378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56480110e420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x56480110e5f8 <line:618:22>
| `-NonNullAttr 0x56480110e650 <col:63, col:80> 1 2
|-FunctionDecl 0x56480110e818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x56480110e698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56480110e710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x56480110e8c8 <line:621:22>
| `-NonNullAttr 0x56480110e920 <col:63, col:77> 1
|-FunctionDecl 0x56480110ebc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x56480110ea00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x56480110ea80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x56480110ec78 <line:623:22>
| `-NonNullAttr 0x56480110ecd0 <col:63, col:77> 1
|-FunctionDecl 0x56480110ee48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56480110ed18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56480110ef20 <line:625:22>
| `-NonNullAttr 0x56480110ef78 <col:63, col:77> 1
|-FunctionDecl 0x56480110f080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56480110efc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56480110f128 <line:627:22>
| `-NonNullAttr 0x56480110f180 <col:52, col:66> 1
|-FunctionDecl 0x56480110f280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56480110f1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56480110f328 <line:629:22>
| `-NonNullAttr 0x56480110f380 <col:52, col:66> 1
|-FunctionDecl 0x56480110f480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56480110f3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56480110f528 <line:631:22>
| `-NonNullAttr 0x56480110f580 <col:52, col:66> 1
|-FunctionDecl 0x56480110f958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x56480110f660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x56480110f770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56480110f7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x56480110fa10 <line:635:22>
| `-NonNullAttr 0x56480110fa68 <col:63, col:77> 1
|-FunctionDecl 0x56480110fbe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56480110fab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56480110fc90 <line:637:22>
| `-NonNullAttr 0x56480110fce8 <col:63, col:77> 1
|-FunctionDecl 0x56480110fdf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56480110fd38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56480110fe98 <line:639:22>
| `-NonNullAttr 0x56480110fef0 <col:52, col:66> 1
|-FunctionDecl 0x5648011100e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56480110ffb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564801110190 <line:641:22>
| `-NonNullAttr 0x5648011101e8 <col:63, col:77> 1
|-FunctionDecl 0x5648011102f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x564801110238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564801110398 <line:643:22>
| `-NonNullAttr 0x5648011103f0 <col:63, col:77> 1
|-FunctionDecl 0x564801110618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564801110438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5648011104b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5648011106c8 <line:647:22>
| `-NonNullAttr 0x564801110720 <col:63, col:80> 1 2
|-FunctionDecl 0x564801110928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x564801110768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5648011107e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5648011109d8 <line:650:22>
| `-NonNullAttr 0x564801110a30 <col:63, col:77> 1
|-FunctionDecl 0x564801110d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x564801110b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x564801110c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x564801110e28 <line:653:22>
| `-NonNullAttr 0x564801110e80 <col:63, col:77> 1
|-FunctionDecl 0x564801110fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x564801110ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x564801111090 <col:69>
|-FunctionDecl 0x564801111208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5648011110f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5648011112b0 <col:72>
|-FunctionDecl 0x5648011114e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x564801111318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5648011113c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x564801111598 <col:44>
|-FunctionDecl 0x5648011117b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x564801111600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564801111678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x564801111868 <line:660:22>
| `-NonNullAttr 0x5648011118c0 <col:63, col:77> 2
|-FunctionDecl 0x564801111d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5648011119a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x564801111ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x564801111bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x564801111dc0 <col:47>
|-FunctionDecl 0x564801112f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x564801111e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5648011130b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x564801113020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564801113180 <line:667:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x564801113240 <line:668:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x564801113300 <line:669:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5648011133b8 <line:670:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x564801113438 prev 0x5648011133b8 <line:671:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5648011134a0 <col:24> 'int' 0
|-VarDecl 0x5648011134d8 <line:672:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x564801113558 prev 0x5648011134d8 <line:673:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5648011135c0 <col:27> 'int' 0
|-VarDecl 0x5648011135f0 <line:674:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x564801113668 <line:675:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5648011136e8 <line:676:1, col:5> col:5 used x 'int'
|-VarDecl 0x564801113768 prev 0x5648011136e8 <line:677:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5648011137d0 <col:9> 'int' 0
|-VarDecl 0x564801113808 <line:678:1, col:5> col:5 used y 'int'
|-VarDecl 0x564801113888 prev 0x564801113808 <line:679:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5648011138f0 <col:9> 'int' 0
|-VarDecl 0x564801113920 <line:680:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x5648011139a0 <line:681:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x564801113a18 <line:682:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x564801113a90 <line:683:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x564801113b08 <line:684:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x564801113b80 <line:685:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x564801113bf8 <line:686:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x564801113c70 <line:687:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x564801113ce8 <line:688:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x564801113d68 <line:689:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x564801113de8 <line:690:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x564801113e60 <line:691:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x564801113ee0 <line:692:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x564801113f70 <line:693:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x564801113fe8 <line:694:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x564801114060 <line:695:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x564801114178 prev 0x564801112f60 <line:696:1, line:723:1> line:696:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5648011140e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564801115928 <line:697:1, line:723:1>
|   |-CallExpr 0x564801114288 <line:698:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564801114270 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564801114220 <col:3> 'void ()' Function 0x5648010ba350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564801114300 <line:699:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5648011142a8 <col:3> 'int' lvalue Var 0x564801113ee0 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5648011142e8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5648011142c8 <col:15> 'int' lvalue Var 0x564801113de8 'y$w_buff0' 'int'
|   |-BinaryOperator 0x564801114360 <line:700:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564801114320 <col:3> 'int' lvalue Var 0x564801113de8 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x564801114340 <col:15> 'int' 1
|   |-BinaryOperator 0x5648011143d8 <line:701:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564801114380 <col:3> '_Bool' lvalue Var 0x564801113f70 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5648011143c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5648011143a0 <col:20> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564801114470 <line:702:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5648011143f8 <col:3> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x564801114448 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564801114418 <col:27> 'int' 1
|   |-CallExpr 0x5648011145f8 <line:703:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5648011145e0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x564801114490 <col:3> 'void (int)' Function 0x5648010ba0d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x564801114590 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x564801114570 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x564801114550 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x564801114508 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5648011144f0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5648011144b0 <col:23> '_Bool' lvalue Var 0x564801113f70 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x564801114538 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x564801114520 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5648011144d0 <col:41> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564801114678 <line:704:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564801114620 <col:3> '_Bool' lvalue Var 0x564801113b80 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x564801114660 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564801114640 <col:20> '_Bool' lvalue Var 0x564801113a18 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5648011146f0 <line:705:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564801114698 <col:3> '_Bool' lvalue Var 0x564801113bf8 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5648011146d8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5648011146b8 <col:20> '_Bool' lvalue Var 0x564801113a90 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x564801114768 <line:706:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564801114710 <col:3> '_Bool' lvalue Var 0x564801113c70 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564801114750 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564801114730 <col:20> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564801114800 <line:707:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x564801114788 <col:3> '_Bool' lvalue Var 0x564801113a90 'y$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x5648011147d8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5648011147a8 <col:27> 'int' 1
|   |-CallExpr 0x564801114858 <line:708:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564801114840 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564801114820 <col:3> 'void ()' Function 0x5648010ba410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5648011148b0 <line:709:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564801114898 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564801114878 <col:3> 'void ()' Function 0x5648010ba350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564801114910 <line:710:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5648011148d0 <col:3> 'int' lvalue Var 0x564801113768 'x' 'int'
|   | `-IntegerLiteral 0x5648011148f0 <col:7> 'int' 1
|   |-CallExpr 0x564801114968 <line:711:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564801114950 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564801114930 <col:3> 'void ()' Function 0x5648010ba410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5648011149c0 <line:712:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5648011149a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564801114988 <col:3> 'void ()' Function 0x5648010ba350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564801114ca8 <line:713:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5648011149e0 <col:3> 'int' lvalue Var 0x564801113888 'y' 'int'
|   | `-ConditionalOperator 0x564801114c78 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564801114aa0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564801114a58 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564801114a40 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564801114a00 <col:7> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564801114a88 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564801114a70 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564801114a20 <col:25> '_Bool' lvalue Var 0x564801113a90 'y$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x564801114c60 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564801114ac0 <col:42> 'int' lvalue Var 0x564801113de8 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x564801114c40 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564801114c10 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564801114b80 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564801114b38 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564801114b20 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564801114ae0 <col:55> '_Bool' lvalue Var 0x564801113f70 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564801114b68 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564801114b50 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564801114b00 <col:73> '_Bool' lvalue Var 0x564801113bf8 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x564801114be0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564801114ba0 <col:90> 'int' lvalue Var 0x564801113ee0 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564801114bf8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564801114bc0 <col:102> 'int' lvalue Var 0x564801113888 'y' 'int'
|   |-BinaryOperator 0x564801114eb0 <line:714:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564801114cc8 <col:3> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564801114e98 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564801114e68 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564801114d88 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564801114d40 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564801114d28 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564801114ce8 <col:20> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564801114d70 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564801114d58 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564801114d08 <col:38> '_Bool' lvalue Var 0x564801113a90 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564801114e20 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564801114dd8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564801114da8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564801114e50 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564801114e38 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564801114e00 <col:66> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5648011151b8 <line:715:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564801114ed0 <col:3> '_Bool' lvalue Var 0x564801113f70 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5648011151a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564801115170 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564801115090 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564801114fb0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564801114f48 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564801114f30 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564801114ef0 <col:20> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564801114f98 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564801114f80 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564801114f10 <col:38> '_Bool' lvalue Var 0x564801113a90 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x564801115070 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564801115028 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564801115010 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564801114fd0 <col:56> '_Bool' lvalue Var 0x564801113f70 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564801115058 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564801115040 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564801114ff0 <col:74> '_Bool' lvalue Var 0x564801113bf8 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564801115128 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5648011150e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5648011150b0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564801115158 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564801115140 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564801115108 <col:102> '_Bool' lvalue Var 0x564801113f70 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5648011153c0 <line:716:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5648011151d8 <col:3> '_Bool' lvalue Var 0x564801113a90 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5648011153a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564801115378 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564801115298 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564801115250 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564801115238 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5648011151f8 <col:20> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564801115280 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564801115268 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564801115218 <col:38> '_Bool' lvalue Var 0x564801113a90 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564801115330 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5648011152e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5648011152b8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564801115360 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564801115348 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564801115310 <col:66> '_Bool' lvalue Var 0x564801113a90 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5648011156a8 <line:717:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5648011153e0 <col:3> '_Bool' lvalue Var 0x564801113bf8 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564801115690 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564801115660 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564801115580 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5648011154a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564801115458 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564801115440 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564801115400 <col:20> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564801115488 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564801115470 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564801115420 <col:38> '_Bool' lvalue Var 0x564801113a90 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x564801115560 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564801115518 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564801115500 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5648011154c0 <col:56> '_Bool' lvalue Var 0x564801113f70 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564801115548 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564801115530 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5648011154e0 <col:74> '_Bool' lvalue Var 0x564801113bf8 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564801115618 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5648011155d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5648011155a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564801115648 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564801115630 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5648011155f8 <col:102> '_Bool' lvalue Var 0x564801113bf8 'y$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x564801115700 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5648011156e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5648011156c8 <col:3> 'void ()' Function 0x5648010ba410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564801115758 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564801115740 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564801115720 <col:3> 'void ()' Function 0x5648010ba350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564801115810 <line:720:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564801115778 <col:3> 'int' lvalue Var 0x564801113438 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5648011157f0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5648011157d8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564801115798 <col:22> 'int' lvalue Var 0x564801113438 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5648011157b8 <col:41> 'int' 1
|   |-CallExpr 0x564801115868 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564801115850 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564801115830 <col:3> 'void ()' Function 0x5648010ba410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564801115918 <line:722:3, col:36>
|     `-CallExpr 0x5648011158f8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5648011158e0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564801115888 <col:10> 'void *(void)' Function 0x5648010b9e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564801115ab0 prev 0x5648011130b8 <line:724:1, line:756:1> line:724:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x564801115a18 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564801119678 <line:725:1, line:756:1>
|   |-CallExpr 0x564801115b90 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564801115b78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564801115b58 <col:3> 'void ()' Function 0x5648010ba350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564801115bf0 <line:727:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564801115bb0 <col:3> 'int' lvalue Var 0x564801113768 'x' 'int'
|   | `-IntegerLiteral 0x564801115bd0 <col:7> 'int' 2
|   |-CallExpr 0x564801115c48 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564801115c30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564801115c10 <col:3> 'void ()' Function 0x5648010ba410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564801115ca0 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564801115c88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564801115c68 <col:3> 'void ()' Function 0x5648010ba350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564801115d50 <line:730:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x564801115cc0 <col:3> '_Bool' lvalue Var 0x564801113fe8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x564801115d38 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x564801115d18 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x564801115d00 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x564801115ce0 <col:19> 'void *(void)' Function 0x5648010b9e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x564801115e00 <line:731:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x564801115d70 <col:3> '_Bool' lvalue Var 0x564801114060 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x564801115de8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x564801115dc8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x564801115db0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x564801115d90 <col:19> 'void *(void)' Function 0x5648010b9e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x564801115e78 <line:732:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x564801115e20 <col:3> '_Bool' lvalue Var 0x564801113920 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x564801115e60 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564801115e40 <col:21> '_Bool' lvalue Var 0x564801114060 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x564801115ef0 <line:733:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564801115e98 <col:3> 'int' lvalue Var 0x5648011139a0 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x564801115ed8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564801115eb8 <col:15> 'int' lvalue Var 0x564801113888 'y' 'int'
|   |-BinaryOperator 0x564801116338 <line:734:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x564801115f10 <col:3> 'int' lvalue Var 0x564801113888 'y' 'int'
|   | `-ConditionalOperator 0x564801116308 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x564801116130 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x564801116050 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x564801115f68 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x564801115f50 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x564801115f30 <col:8> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x564801116030 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x564801115fc8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x564801115fb0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x564801115f90 <col:27> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x564801116018 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x564801116000 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x564801115fe0 <col:46> '_Bool' lvalue Var 0x564801113f70 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x564801116110 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5648011160a8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x564801116090 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x564801116070 <col:65> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x5648011160f8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5648011160e0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5648011160c0 <col:84> '_Bool' lvalue Var 0x564801113c70 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5648011162f0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564801116150 <col:101> 'int' lvalue Var 0x564801113888 'y' 'int'
|   |   `-ParenExpr 0x5648011162d0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5648011162a0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x564801116210 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5648011161c8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5648011161b0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564801116170 <col:106> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5648011161f8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5648011161e0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564801116190 <col:124> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564801116270 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564801116230 <col:141> 'int' lvalue Var 0x564801113de8 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x564801116288 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564801116250 <col:153> 'int' lvalue Var 0x564801113ee0 'y$w_buff1' 'int'
|   |-BinaryOperator 0x564801116848 <line:735:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x564801116358 <col:3> 'int' lvalue Var 0x564801113de8 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x564801116818 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5648011167e8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5648011167d0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564801116378 <col:15> '_Bool' lvalue Var 0x564801114060 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x564801116800 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564801116398 <col:31> 'int' lvalue Var 0x564801113de8 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5648011167b0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x564801116780 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5648011165a8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5648011164c8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5648011163f0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5648011163d8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5648011163b8 <col:45> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5648011164a8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x564801116440 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x564801116428 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x564801116408 <col:64> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x564801116490 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x564801116478 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x564801116458 <col:83> '_Bool' lvalue Var 0x564801113f70 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x564801116588 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x564801116520 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x564801116508 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5648011164e8 <col:102> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x564801116570 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x564801116558 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x564801116538 <col:121> '_Bool' lvalue Var 0x564801113c70 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564801116768 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5648011165c8 <col:138> 'int' lvalue Var 0x564801113de8 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x564801116748 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x564801116718 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x564801116688 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x564801116640 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x564801116628 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5648011165e8 <col:151> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564801116670 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x564801116658 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564801116608 <col:169> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5648011166e8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5648011166a8 <col:186> 'int' lvalue Var 0x564801113de8 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x564801116700 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5648011166c8 <col:198> 'int' lvalue Var 0x564801113de8 'y$w_buff0' 'int'
|   |-BinaryOperator 0x564801116d58 <line:736:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x564801116868 <col:3> 'int' lvalue Var 0x564801113ee0 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x564801116d28 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x564801116cf8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564801116ce0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564801116888 <col:15> '_Bool' lvalue Var 0x564801114060 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x564801116d10 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5648011168a8 <col:31> 'int' lvalue Var 0x564801113ee0 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x564801116cc0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x564801116c90 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x564801116ab8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5648011169d8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x564801116900 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5648011168e8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5648011168c8 <col:45> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5648011169b8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x564801116950 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x564801116938 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x564801116918 <col:64> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5648011169a0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x564801116988 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x564801116968 <col:83> '_Bool' lvalue Var 0x564801113f70 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x564801116a98 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x564801116a30 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x564801116a18 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5648011169f8 <col:102> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x564801116a80 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x564801116a68 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x564801116a48 <col:121> '_Bool' lvalue Var 0x564801113c70 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564801116c78 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564801116ad8 <col:138> 'int' lvalue Var 0x564801113ee0 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x564801116c58 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x564801116c28 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x564801116b98 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x564801116b50 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x564801116b38 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x564801116af8 <col:151> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564801116b80 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x564801116b68 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564801116b18 <col:169> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x564801116bf8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x564801116bb8 <col:186> 'int' lvalue Var 0x564801113ee0 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x564801116c10 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x564801116bd8 <col:198> 'int' lvalue Var 0x564801113ee0 'y$w_buff1' 'int'
|   |-BinaryOperator 0x564801117310 <line:737:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x564801116d78 <col:3> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5648011172f8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5648011172c8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x564801117280 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564801117268 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564801116d98 <col:20> '_Bool' lvalue Var 0x564801114060 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5648011172b0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564801117298 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564801116db8 <col:36> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x564801117248 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x564801117218 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x564801116fd8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564801116ee8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564801116e10 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564801116df8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564801116dd8 <col:55> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564801116ec8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564801116e60 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564801116e48 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564801116e28 <col:74> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x564801116eb0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564801116e98 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564801116e78 <col:93> '_Bool' lvalue Var 0x564801113f70 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564801116fb8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564801116f40 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564801116f28 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564801116f08 <col:112> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x564801116fa0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564801116f78 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564801116f58 <col:131> '_Bool' lvalue Var 0x564801113c70 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x564801117200 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5648011171e8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564801116ff8 <col:148> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5648011171c8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x564801117198 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5648011170b8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564801117070 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564801117058 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564801117018 <col:166> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5648011170a0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564801117088 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564801117038 <col:184> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x564801117150 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564801117108 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5648011170d8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564801117180 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x564801117168 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x564801117130 <col:212> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5648011178d8 <line:738:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x564801117330 <col:3> '_Bool' lvalue Var 0x564801113f70 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5648011178c0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564801117890 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x564801117848 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564801117830 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564801117350 <col:20> '_Bool' lvalue Var 0x564801114060 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564801117878 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564801117860 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564801117370 <col:36> '_Bool' lvalue Var 0x564801113f70 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x564801117810 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5648011177e0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x564801117580 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5648011174a0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5648011173c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5648011173b0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564801117390 <col:55> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564801117480 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564801117418 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564801117400 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5648011173e0 <col:74> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x564801117468 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564801117450 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564801117430 <col:93> '_Bool' lvalue Var 0x564801113f70 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564801117560 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5648011174f8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5648011174e0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5648011174c0 <col:112> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x564801117548 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564801117530 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564801117510 <col:131> '_Bool' lvalue Var 0x564801113c70 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5648011177c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5648011177b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5648011175a0 <col:148> '_Bool' lvalue Var 0x564801113f70 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x564801117790 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x564801117760 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x564801117660 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564801117618 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564801117600 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5648011175c0 <col:166> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564801117648 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564801117630 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5648011175e0 <col:184> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x564801117730 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5648011176b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564801117680 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564801117748 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x564801117708 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5648011176d8 <col:219> 'int' 0
|   |-BinaryOperator 0x564801117e80 <line:739:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5648011178f8 <col:3> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564801117e68 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564801117e38 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x564801117df0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564801117dd8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564801117918 <col:20> '_Bool' lvalue Var 0x564801114060 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564801117e20 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564801117e08 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564801117938 <col:36> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x564801117db8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x564801117d88 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x564801117b48 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564801117a68 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564801117990 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564801117978 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564801117958 <col:55> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564801117a48 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5648011179e0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5648011179c8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5648011179a8 <col:74> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x564801117a30 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564801117a18 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5648011179f8 <col:93> '_Bool' lvalue Var 0x564801113f70 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564801117b28 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564801117ac0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564801117aa8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564801117a88 <col:112> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x564801117b10 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564801117af8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564801117ad8 <col:131> '_Bool' lvalue Var 0x564801113c70 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x564801117d70 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564801117d58 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564801117b68 <col:148> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x564801117d38 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x564801117d08 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x564801117c28 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564801117be0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564801117bc8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564801117b88 <col:166> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564801117c10 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564801117bf8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564801117ba8 <col:184> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x564801117cc0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564801117c78 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564801117c48 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564801117cf0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x564801117cd8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x564801117ca0 <col:212> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564801118458 <line:740:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x564801117ea0 <col:3> '_Bool' lvalue Var 0x564801113c70 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564801118440 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564801118410 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5648011183c8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5648011183b0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564801117ec0 <col:20> '_Bool' lvalue Var 0x564801114060 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5648011183f8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5648011183e0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564801117ee0 <col:36> '_Bool' lvalue Var 0x564801113c70 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x564801118390 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x564801118360 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x564801118100 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564801118020 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564801117f38 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564801117f20 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564801117f00 <col:55> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564801118000 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564801117f88 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564801117f70 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564801117f50 <col:74> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x564801117fe8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564801117fd0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564801117fb0 <col:93> '_Bool' lvalue Var 0x564801113f70 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5648011180e0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564801118078 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564801118060 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564801118040 <col:112> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5648011180c8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5648011180b0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564801118090 <col:131> '_Bool' lvalue Var 0x564801113c70 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x564801118348 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564801118330 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564801118120 <col:148> '_Bool' lvalue Var 0x564801113c70 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x564801118310 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5648011182e0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5648011181e0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564801118198 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564801118180 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564801118140 <col:166> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5648011181c8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5648011181b0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564801118160 <col:184> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5648011182b0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564801118230 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564801118200 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5648011182c8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x564801118288 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x564801118258 <col:219> 'int' 0
|   |-BinaryOperator 0x5648011184d0 <line:741:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564801118478 <col:3> 'int' lvalue Var 0x564801113558 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5648011184b8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564801118498 <col:25> 'int' lvalue Var 0x564801113888 'y' 'int'
|   |-BinaryOperator 0x564801118600 <line:742:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5648011184f0 <col:3> 'int' lvalue Var 0x564801113888 'y' 'int'
|   | `-ConditionalOperator 0x5648011185d0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x564801118588 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564801118570 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564801118510 <col:7> '_Bool' lvalue Var 0x564801113920 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5648011185a0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564801118530 <col:25> 'int' lvalue Var 0x5648011139a0 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5648011185b8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x564801118550 <col:37> 'int' lvalue Var 0x564801113888 'y' 'int'
|   |-BinaryOperator 0x564801118698 <line:743:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x564801118620 <col:3> '_Bool' lvalue Var 0x564801113920 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x564801118670 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564801118640 <col:28> 'int' 0
|   |-CallExpr 0x5648011186f0 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5648011186d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5648011186b8 <col:3> 'void ()' Function 0x5648010ba410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564801118748 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564801118730 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564801118710 <col:3> 'void ()' Function 0x5648010ba350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564801118a30 <line:746:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564801118768 <col:3> 'int' lvalue Var 0x564801113888 'y' 'int'
|   | `-ConditionalOperator 0x564801118a00 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564801118828 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5648011187e0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5648011187c8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564801118788 <col:7> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564801118810 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5648011187f8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5648011187a8 <col:25> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5648011189e8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564801118848 <col:42> 'int' lvalue Var 0x564801113de8 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5648011189c8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564801118998 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564801118908 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5648011188c0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5648011188a8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564801118868 <col:55> '_Bool' lvalue Var 0x564801113f70 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5648011188f0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5648011188d8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564801118888 <col:73> '_Bool' lvalue Var 0x564801113c70 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564801118968 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564801118928 <col:90> 'int' lvalue Var 0x564801113ee0 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564801118980 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564801118948 <col:102> 'int' lvalue Var 0x564801113888 'y' 'int'
|   |-BinaryOperator 0x564801118c38 <line:747:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564801118a50 <col:3> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564801118c20 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564801118bf0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564801118b10 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564801118ac8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564801118ab0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564801118a70 <col:20> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564801118af8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564801118ae0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564801118a90 <col:38> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564801118ba8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564801118b60 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564801118b30 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564801118bd8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564801118bc0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564801118b88 <col:66> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564801118f20 <line:748:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564801118c58 <col:3> '_Bool' lvalue Var 0x564801113f70 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564801118f08 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564801118ed8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564801118df8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564801118d18 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564801118cd0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564801118cb8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564801118c78 <col:20> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564801118d00 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564801118ce8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564801118c98 <col:38> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x564801118dd8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564801118d90 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564801118d78 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564801118d38 <col:56> '_Bool' lvalue Var 0x564801113f70 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564801118dc0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564801118da8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564801118d58 <col:74> '_Bool' lvalue Var 0x564801113c70 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564801118e90 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564801118e48 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564801118e18 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564801118ec0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564801118ea8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564801118e70 <col:102> '_Bool' lvalue Var 0x564801113f70 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564801119148 <line:749:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564801118f40 <col:3> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564801119130 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564801119100 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564801119020 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564801118fd8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564801118fc0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564801118f60 <col:20> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564801119008 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564801118ff0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564801118f80 <col:38> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5648011190b8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564801119070 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564801119040 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5648011190e8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5648011190d0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564801119098 <col:66> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564801119430 <line:750:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564801119168 <col:3> '_Bool' lvalue Var 0x564801113c70 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564801119418 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5648011193e8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564801119308 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564801119228 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5648011191e0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5648011191c8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564801119188 <col:20> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564801119210 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5648011191f8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5648011191a8 <col:38> '_Bool' lvalue Var 0x564801113b08 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5648011192e8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5648011192a0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564801119288 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564801119248 <col:56> '_Bool' lvalue Var 0x564801113f70 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5648011192d0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5648011192b8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564801119268 <col:74> '_Bool' lvalue Var 0x564801113c70 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5648011193a0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564801119358 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564801119328 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5648011193d0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5648011193b8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564801119380 <col:102> '_Bool' lvalue Var 0x564801113c70 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x564801119488 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564801119470 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564801119450 <col:3> 'void ()' Function 0x5648010ba410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5648011194e0 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5648011194c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5648011194a8 <col:3> 'void ()' Function 0x5648010ba350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564801119598 <line:753:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564801119500 <col:3> 'int' lvalue Var 0x564801113438 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564801119578 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564801119560 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564801119520 <col:22> 'int' lvalue Var 0x564801113438 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564801119540 <col:41> 'int' 1
|   |-CallExpr 0x5648011195f0 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5648011195d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5648011195b8 <col:3> 'void ()' Function 0x5648010ba410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564801119668 <line:755:3, col:36>
|     `-CallExpr 0x564801119648 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564801119630 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564801119610 <col:10> 'void *(void)' Function 0x5648010b9e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564801119798 prev 0x564801113180 <line:757:1, line:759:1> line:757:6 fence 'void ()'
| `-CompoundStmt 0x564801119838 <line:758:1, line:759:1>
|-FunctionDecl 0x564801119868 prev 0x564801113240 <line:760:1, line:762:1> line:760:6 isync 'void ()'
| `-CompoundStmt 0x564801119908 <line:761:1, line:762:1>
|-FunctionDecl 0x564801119938 prev 0x564801113300 <line:763:1, line:765:1> line:763:6 lwfence 'void ()'
| `-CompoundStmt 0x5648011199d8 <line:764:1, line:765:1>
`-FunctionDecl 0x564801119a48 <line:766:1, line:788:1> line:766:5 main 'int ()'
  `-CompoundStmt 0x56480111b368 <line:767:1, line:788:1>
    |-DeclStmt 0x564801119b60 <line:768:3, col:18>
    | `-VarDecl 0x564801119af8 <col:3, col:13> col:13 used t1443 'pthread_t':'unsigned long'
    |-CallExpr 0x564801119d68 <line:769:3, col:54> 'int'
    | |-ImplicitCastExpr 0x564801119d50 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564801119b78 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5648010fa8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564801119bb8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564801119b98 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564801119af8 't1443' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564801119da8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564801119c30 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x564801119c08 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564801119bd0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x564801119dc0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564801119c50 <col:39> 'void *(void *)' Function 0x564801114178 'P0' 'void *(void *)'
    | `-ParenExpr 0x564801119cd0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x564801119ca8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564801119c70 <col:52> 'int' 0
    |-DeclStmt 0x564801119e50 <line:770:3, col:18>
    | `-VarDecl 0x564801119de8 <col:3, col:13> col:13 used t1444 'pthread_t':'unsigned long'
    |-CallExpr 0x56480111a008 <line:771:3, col:54> 'int'
    | |-ImplicitCastExpr 0x564801119ff0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564801119e68 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5648010fa8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564801119ea8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564801119e88 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564801119de8 't1444' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56480111a048 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564801119f20 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x564801119ef8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564801119ec0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56480111a060 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564801119f40 <col:39> 'void *(void *)' Function 0x564801115ab0 'P1' 'void *(void *)'
    | `-ParenExpr 0x564801119fd0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x564801119f98 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564801119f60 <col:52> 'int' 0
    |-CallExpr 0x56480111a0b0 <line:772:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56480111a098 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56480111a078 <col:3> 'void ()' Function 0x5648010ba350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56480111a180 <line:773:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x56480111a0d0 <col:3> '_Bool' lvalue Var 0x5648011135f0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x56480111a168 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x56480111a148 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x56480111a130 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x56480111a0f0 <col:21> 'int' lvalue Var 0x564801113438 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x56480111a110 <col:41> 'int' 2
    |-CallExpr 0x56480111a1d8 <line:774:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56480111a1c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56480111a1a0 <col:3> 'void ()' Function 0x5648010ba410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56480111a250 <line:775:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56480111a238 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56480111a1f8 <col:3> 'void (int)' Function 0x5648010b9ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x56480111a290 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56480111a278 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56480111a218 <col:21> '_Bool' lvalue Var 0x5648011135f0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x56480111a2e0 <line:776:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56480111a2c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56480111a2a8 <col:3> 'void ()' Function 0x5648010ba350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56480111a5c8 <line:777:3, col:103> 'int' '='
    | |-DeclRefExpr 0x56480111a300 <col:3> 'int' lvalue Var 0x564801113888 'y' 'int'
    | `-ConditionalOperator 0x56480111a598 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x56480111a3c0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x56480111a378 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x56480111a360 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x56480111a320 <col:7> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x56480111a3a8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x56480111a390 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x56480111a340 <col:25> '_Bool' lvalue Var 0x564801113a18 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x56480111a580 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56480111a3e0 <col:42> 'int' lvalue Var 0x564801113de8 'y$w_buff0' 'int'
    |   `-ParenExpr 0x56480111a560 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x56480111a530 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x56480111a4a0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x56480111a458 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x56480111a440 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x56480111a400 <col:55> '_Bool' lvalue Var 0x564801113f70 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x56480111a488 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x56480111a470 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x56480111a420 <col:73> '_Bool' lvalue Var 0x564801113b80 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56480111a500 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56480111a4c0 <col:90> 'int' lvalue Var 0x564801113ee0 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x56480111a518 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x56480111a4e0 <col:102> 'int' lvalue Var 0x564801113888 'y' 'int'
    |-BinaryOperator 0x56480111a7d0 <line:778:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56480111a5e8 <col:3> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x56480111a7b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56480111a788 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56480111a6a8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56480111a660 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56480111a648 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56480111a608 <col:20> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56480111a690 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56480111a678 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56480111a628 <col:38> '_Bool' lvalue Var 0x564801113a18 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56480111a740 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56480111a6f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56480111a6c8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56480111a770 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56480111a758 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56480111a720 <col:66> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x56480111aab8 <line:779:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56480111a7f0 <col:3> '_Bool' lvalue Var 0x564801113f70 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x56480111aaa0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56480111aa70 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56480111a990 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56480111a8b0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56480111a868 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56480111a850 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56480111a810 <col:20> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56480111a898 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56480111a880 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56480111a830 <col:38> '_Bool' lvalue Var 0x564801113a18 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56480111a970 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56480111a928 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56480111a910 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56480111a8d0 <col:56> '_Bool' lvalue Var 0x564801113f70 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56480111a958 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56480111a940 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56480111a8f0 <col:74> '_Bool' lvalue Var 0x564801113b80 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56480111aa28 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56480111a9e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56480111a9b0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56480111aa58 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56480111aa40 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56480111aa08 <col:102> '_Bool' lvalue Var 0x564801113f70 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x56480111acc0 <line:780:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56480111aad8 <col:3> '_Bool' lvalue Var 0x564801113a18 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56480111aca8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56480111ac78 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56480111ab98 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56480111ab50 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56480111ab38 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56480111aaf8 <col:20> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56480111ab80 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56480111ab68 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56480111ab18 <col:38> '_Bool' lvalue Var 0x564801113a18 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56480111ac30 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56480111abe8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56480111abb8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56480111ac60 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56480111ac48 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56480111ac10 <col:66> '_Bool' lvalue Var 0x564801113a18 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x56480111afa8 <line:781:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56480111ace0 <col:3> '_Bool' lvalue Var 0x564801113b80 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56480111af90 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56480111af60 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56480111ae80 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56480111ada0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56480111ad58 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56480111ad40 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56480111ad00 <col:20> '_Bool' lvalue Var 0x564801113e60 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56480111ad88 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56480111ad70 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56480111ad20 <col:38> '_Bool' lvalue Var 0x564801113a18 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56480111ae60 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56480111ae18 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56480111ae00 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56480111adc0 <col:56> '_Bool' lvalue Var 0x564801113f70 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56480111ae48 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56480111ae30 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56480111ade0 <col:74> '_Bool' lvalue Var 0x564801113b80 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56480111af18 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56480111aed0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56480111aea0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56480111af48 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56480111af30 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56480111aef8 <col:102> '_Bool' lvalue Var 0x564801113b80 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x56480111b018 <line:782:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56480111b000 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56480111afe0 <col:3> 'void ()' Function 0x5648010ba410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56480111b070 <line:783:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56480111b058 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56480111b038 <col:3> 'void ()' Function 0x5648010ba350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56480111b210 <line:784:3, col:57> '_Bool' '='
    | |-DeclRefExpr 0x56480111b090 <col:3> '_Bool' lvalue Var 0x564801113668 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x56480111b1f8 <col:21, col:57> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x56480111b1e0 <col:21, col:57> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x56480111b1c0 <col:22, col:57> 'int'
    |       `-BinaryOperator 0x56480111b1a0 <col:23, col:56> 'int' '&&'
    |         |-BinaryOperator 0x56480111b108 <col:23, col:28> 'int' '=='
    |         | |-ImplicitCastExpr 0x56480111b0f0 <col:23> 'int' <LValueToRValue>
    |         | | `-DeclRefExpr 0x56480111b0b0 <col:23> 'int' lvalue Var 0x564801113768 'x' 'int'
    |         | `-IntegerLiteral 0x56480111b0d0 <col:28> 'int' 2
    |         `-BinaryOperator 0x56480111b180 <col:33, col:56> 'int' '=='
    |           |-ImplicitCastExpr 0x56480111b168 <col:33> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56480111b128 <col:33> 'int' lvalue Var 0x564801113558 '__unbuffered_p1_EAX' 'int'
    |           `-IntegerLiteral 0x56480111b148 <col:56> 'int' 0
    |-CallExpr 0x56480111b268 <line:785:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56480111b250 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56480111b230 <col:3> 'void ()' Function 0x5648010ba410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56480111b2e0 <line:786:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56480111b2c8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56480111b288 <col:3> 'void (int)' Function 0x5648010ba0d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x56480111b320 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56480111b308 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56480111b2a8 <col:21> '_Bool' lvalue Var 0x564801113668 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x56480111b358 <line:787:3, col:10>
      `-IntegerLiteral 0x56480111b338 <col:10> 'int' 0
