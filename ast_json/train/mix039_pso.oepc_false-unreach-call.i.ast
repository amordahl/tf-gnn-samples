TranslationUnitDecl 0x557fabf9bf88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x557fabf9c848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x557fabf9c520 '__int128'
|-TypedefDecl 0x557fabf9c8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x557fabf9c540 'unsigned __int128'
|-TypedefDecl 0x557fabf9cbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x557fabf9c990 'struct __NSConstantString_tag'
|   `-Record 0x557fabf9c910 '__NSConstantString_tag'
|-TypedefDecl 0x557fabf9cc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x557fabf9cc20 'char *'
|   `-BuiltinType 0x557fabf9c020 'char'
|-TypedefDecl 0x557fabfdbb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x557fabf9cf00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x557fabf9cd40 'struct __va_list_tag'
|     `-Record 0x557fabf9ccc0 '__va_list_tag'
|-FunctionDecl 0x557fabfdbca0 <pthread-wmm/mix039_pso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x557fabfdbbd0 <col:31> col:34 'int'
|-FunctionDecl 0x557fabfdbe68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x557fabfdbf90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x557fabfdc0d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x557fabfdc048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x557fabfdc308 <col:40, col:99>
|   |-IfStmt 0x557fabfdc2d8 <col:42, col:88>
|   | |-UnaryOperator 0x557fabfdc1b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x557fabfdc1a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x557fabfdc180 <col:47> 'int' lvalue ParmVar 0x557fabfdc048 'expression' 'int'
|   | `-CompoundStmt 0x557fabfdc2c0 <col:59, col:88>
|   |   `-LabelStmt 0x557fabfdc2a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x557fabfdc238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x557fabfdc220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x557fabfdc1d0 <col:68> 'void () __attribute__((noreturn))' Function 0x557fabfdbf90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x557fabfdc2f0 <col:89>
|   `-ReturnStmt 0x557fabfdc2f8 <col:91>
|-FunctionDecl 0x557fabfdc350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x557fabfdc410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x557fabfdc790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x557fabfdc4c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x557fabfdc548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x557fabfdc5c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x557fabfdc648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x557fabfdc850 <line:10:22>
|-FunctionDecl 0x557fac0028a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x557fabfdc8c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x557fabfdc940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x557fabfdc9c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x557fabfdca40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x557fac002960 <line:13:22>
|-FunctionDecl 0x557fac002c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x557fac0029d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x557fac002a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x557fac002ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x557fac002cc8 <line:15:22>
|-TypedefDecl 0x557fac002d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x557fabf9c0e0 'unsigned char'
|-TypedefDecl 0x557fac002da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x557fabf9c100 'unsigned short'
|-TypedefDecl 0x557fac002e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x557fabf9c120 'unsigned int'
|-TypedefDecl 0x557fac002e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x557fabf9c140 'unsigned long'
|-TypedefDecl 0x557fac002ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x557fabf9c040 'signed char'
|-TypedefDecl 0x557fac002f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x557fabf9c0e0 'unsigned char'
|-TypedefDecl 0x557fac002fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x557fabf9c060 'short'
|-TypedefDecl 0x557fac003048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x557fabf9c100 'unsigned short'
|-TypedefDecl 0x557fac0030b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x557fabf9c080 'int'
|-TypedefDecl 0x557fac003128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x557fabf9c120 'unsigned int'
|-TypedefDecl 0x557fac003198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x557fabf9c0a0 'long'
|-TypedefDecl 0x557fac003208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x557fabf9c140 'unsigned long'
|-TypedefDecl 0x557fac003278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x557fabf9c0a0 'long'
|-TypedefDecl 0x557fac0032e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x557fabf9c140 'unsigned long'
|-TypedefDecl 0x557fac003358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x557fabf9c140 'unsigned long'
|-TypedefDecl 0x557fac0033c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x557fabf9c120 'unsigned int'
|-TypedefDecl 0x557fac003438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x557fabf9c120 'unsigned int'
|-TypedefDecl 0x557fac0034a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x557fabf9c140 'unsigned long'
|-TypedefDecl 0x557fac003518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x557fabf9c140 'unsigned long'
|-TypedefDecl 0x557fac003588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x557fabf9c120 'unsigned int'
|-TypedefDecl 0x557fac0035f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x557fabf9c140 'unsigned long'
|-TypedefDecl 0x557fac003668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x557fabf9c0a0 'long'
|-TypedefDecl 0x557fac0036d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x557fabf9c0a0 'long'
|-TypedefDecl 0x557fac003748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x557fabf9c080 'int'
|-RecordDecl 0x557fac0037a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x557fac003918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x557fac0039d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x557fac003970 'struct __fsid_t' sugar
|   `-RecordType 0x557fac003820 '__fsid_t'
|     `-Record 0x557fac0037a0 ''
|-TypedefDecl 0x557fac003a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x557fabf9c0a0 'long'
|-TypedefDecl 0x557fac003ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x557fabf9c140 'unsigned long'
|-TypedefDecl 0x557fac003b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x557fabf9c140 'unsigned long'
|-TypedefDecl 0x557fac003ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x557fabf9c120 'unsigned int'
|-TypedefDecl 0x557fac003c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x557fabf9c0a0 'long'
|-TypedefDecl 0x557fac003c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x557fabf9c120 'unsigned int'
|-TypedefDecl 0x557fac003cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x557fabf9c0a0 'long'
|-TypedefDecl 0x557fac003d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x557fabf9c080 'int'
|-TypedefDecl 0x557fac003dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x557fabf9c080 'int'
|-TypedefDecl 0x557fac003e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x557fabf9c080 'int'
|-TypedefDecl 0x557fac003eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x557fabf9c7a0 'void *'
|   `-BuiltinType 0x557fabf9bfe0 'void'
|-TypedefDecl 0x557fac003f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x557fabf9c0a0 'long'
|-TypedefDecl 0x557fac003f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x557fabf9c0a0 'long'
|-TypedefDecl 0x557fac004008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x557fabf9c0a0 'long'
|-TypedefDecl 0x557fac004078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x557fabf9c140 'unsigned long'
|-TypedefDecl 0x557fac0040e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x557fabf9c140 'unsigned long'
|-TypedefDecl 0x557fac004158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x557fabf9c140 'unsigned long'
|-TypedefDecl 0x557fac0041c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x557fabf9c140 'unsigned long'
|-TypedefDecl 0x557fac004238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x557fabf9c0a0 'long'
|-TypedefDecl 0x557fac0042a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x557fabf9c0a0 'long'
|-TypedefDecl 0x557fac004318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x557fabf9c0a0 'long'
|-TypedefDecl 0x557fac004388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x557fabf9c140 'unsigned long'
|-TypedefDecl 0x557fac004418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x557fac0043e0 '__off64_t' sugar
|   |-Typedef 0x557fac0036d8 '__off64_t'
|   `-BuiltinType 0x557fabf9c0a0 'long'
|-TypedefDecl 0x557fac004510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x557fac0044d0 '__quad_t *'
|   `-TypedefType 0x557fac004470 '__quad_t' sugar
|     |-Typedef 0x557fac003278 '__quad_t'
|     `-BuiltinType 0x557fabf9c0a0 'long'
|-TypedefDecl 0x557fac004580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x557fabf9cc20 'char *'
|   `-BuiltinType 0x557fabf9c020 'char'
|-TypedefDecl 0x557fac0045f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x557fabf9c0a0 'long'
|-TypedefDecl 0x557fac004660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x557fabf9c120 'unsigned int'
|-FunctionDecl 0x557fac0047a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x557fac0046d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x557fac004ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x557fac004ad8 <line:72:3, col:34>
|     `-CallExpr 0x557fac004a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x557fac004a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x557fac004a10 <col:10> '<builtin fn type>' Function 0x557fac004880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x557fac004ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x557fac004a30 <col:29> 'unsigned int' lvalue ParmVar 0x557fac0046d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x557fac004880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x557fac004920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x557fac004990 <col:10> Implicit
| `-ConstAttr 0x557fac0049e8 <col:10> Implicit
|-FunctionDecl 0x557fac004c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x557fac004b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x557fac004f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x557fac004f48 <line:77:3, col:34>
|     `-CallExpr 0x557fac004f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x557fac004ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x557fac004e78 <col:10> '<builtin fn type>' Function 0x557fac004ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x557fac004f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x557fac004e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x557fac004b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x557fac004ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x557fac004d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x557fac004df8 <col:10> Implicit
| `-ConstAttr 0x557fac004e50 <col:10> Implicit
|-TypedefDecl 0x557fac004f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x557fabf9c140 'unsigned long'
|-TypedefDecl 0x557fac005018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x557fac004fe0 '__time_t' sugar
|   |-Typedef 0x557fac003c18 '__time_t'
|   `-BuiltinType 0x557fabf9c0a0 'long'
|-RecordDecl 0x557fac005070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x557fac005128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x557fac0051b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x557fac005248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x557fac005210 '__pid_t' sugar
|   |-Typedef 0x557fac003748 '__pid_t'
|   `-BuiltinType 0x557fabf9c080 'int'
|-RecordDecl 0x557fac0052a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x557fac005360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x557fac0053b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x557fac005470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x557fac0054d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x557fabf9c140 'unsigned long'
|-RecordDecl 0x557fac005530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x557fac0057c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x557fac0078b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x557fac005810 'struct cpu_set_t' sugar
|   `-RecordType 0x557fac0055b0 'cpu_set_t'
|     `-Record 0x557fac005530 ''
|-FunctionDecl 0x557fac007b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x557fac007958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x557fac007a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x557fac007c38 <line:107:19>
|-FunctionDecl 0x557fac007e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x557fac007ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x557fac007eb8 <col:69>
|-FunctionDecl 0x557fac008030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x557fac007f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x557fac0080d8 <col:64>
|-FunctionDecl 0x557fac008398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x557fac008140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x557fac008278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x557fac008448 <line:113:22>
|-FunctionDecl 0x557fac0086c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x557fac0084b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x557fac0085a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x557fac008778 <col:88>
|-FunctionDecl 0x557fac008a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x557fac0087e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x557fac0088c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x557fac008950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x557fac008b50 <col:62>
|-FunctionDecl 0x557fac008cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x557fac008bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x557fac008d70 <col:63>
|-FunctionDecl 0x557fac008e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x557fac008f38 <col:47>
|-FunctionDecl 0x557fac009040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x557fac008fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x557fac0090e8 <col:69>
|-FunctionDecl 0x557fac0091f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x557fac009158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x557fac009298 <col:69>
|-FunctionDecl 0x557fac009558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x557fac009300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x557fac009438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x557fac009608 <col:88>
|-TypedefDecl 0x557fac009698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x557fac009660 '__clock_t' sugar
|   |-Typedef 0x557fac003a58 '__clock_t'
|   `-BuiltinType 0x557fabf9c0a0 'long'
|-TypedefDecl 0x557fac009728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x557fac0096f0 '__clockid_t' sugar
|   |-Typedef 0x557fac003e48 '__clockid_t'
|   `-BuiltinType 0x557fabf9c080 'int'
|-TypedefDecl 0x557fac0097b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x557fac009780 '__timer_t' sugar
|   |-Typedef 0x557fac003eb8 '__timer_t'
|   `-PointerType 0x557fabf9c7a0 'void *'
|     `-BuiltinType 0x557fabf9bfe0 'void'
|-RecordDecl 0x557fac009810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x557fac0098e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x557fac009950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x557fac0099b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x557fac009a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x557fac009a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x557fac009af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x557fac009b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x557fac009bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x557fac009c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x557fac009c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x557fac009cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x557fac009d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x557fac009e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x557fac009e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x557fac009f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x557fac00a100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x557fac00a1a0 <col:45>
|-FunctionDecl 0x557fac00a380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x557fac00a270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x557fac00a428 <col:54>
|-FunctionDecl 0x557fac00a628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x557fac00a490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x557fac00a508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x557fac00a6d8 <line:157:22>
| `-ConstAttr 0x557fac00a730 <col:63>
|-FunctionDecl 0x557fac00b560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x557fac00a828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x557fac00b608 <col:56>
|-FunctionDecl 0x557fac00b9b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x557fac00b678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x557fac00b6f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x557fac00b770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x557fac00b868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x557fac00ba70 <col:54>
|-RecordDecl 0x557fac00bac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x557fac00bb78 parent 0x557fabf9bf88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x557fac00bdd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x557fac00be78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x557fac00bee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x557fac00bf48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x557fac00c038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x557fac00c158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x557fac00c100 'struct __locale_struct *'
|   `-ElaboratedType 0x557fac00c090 'struct __locale_struct' sugar
|     `-RecordType 0x557fac00bb50 'struct __locale_struct'
|       `-Record 0x557fac00bac8 '__locale_struct'
|-TypedefDecl 0x557fac00c208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x557fac00c1d0 '__locale_t' sugar
|   |-Typedef 0x557fac00c158 '__locale_t'
|   `-PointerType 0x557fac00c100 'struct __locale_struct *'
|     `-ElaboratedType 0x557fac00c090 'struct __locale_struct' sugar
|       `-RecordType 0x557fac00bb50 'struct __locale_struct'
|         `-Record 0x557fac00bac8 '__locale_struct'
|-FunctionDecl 0x557fac00c610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x557fac00c278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x557fac00c2f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x557fac00c370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x557fac00c400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x557fac00c478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x557fac00c6d8 <col:40>
|-FunctionDecl 0x557fac00c8c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x557fac00c7a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x557fac00c970 <col:66>
|-FunctionDecl 0x557fac00ca80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x557fac00c9d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x557fac00cb28 <col:69>
|-FunctionDecl 0x557fac00cd58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x557fac00cb90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x557fac00cc20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x557fac00ce08 <col:52>
|-FunctionDecl 0x557fac00cfb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x557fac00ce70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x557fac00cf00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x557fac00d060 <col:55>
|-FunctionDecl 0x557fac00d1f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x557fac00d0e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x557fac00d2a0 <col:62>
|-FunctionDecl 0x557fac00d418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x557fac00d308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x557fac00d4c0 <col:60>
|-FunctionDecl 0x557fac00d718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x557fac00d578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x557fac00d5f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x557fac00d7c8 <col:44>
|-FunctionDecl 0x557fac00d9d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x557fac00d830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x557fac00d8b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x557fac00da88 <col:49>
|-VarDecl 0x557fac00db88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x557fac00dc08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x557fac00dc88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x557fac00dd50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x557fac00de80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x557fac00df20 <col:42>
|-VarDecl 0x557fac00df90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x557fac00e010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x557fac00e198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x557fac00e088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x557fac00e240 <col:57>
|-FunctionDecl 0x557fac00e350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x557fac00e2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x557fac00e3f8 <col:56>
|-FunctionDecl 0x557fac00f540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x557fac00e478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x557fac00f5e8 <col:59>
|-FunctionDecl 0x557fac00f6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x557fac00f658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x557fac00f798 <col:48>
| `-ConstAttr 0x557fac00f7f0 <col:89>
|-FunctionDecl 0x557fac00fa58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x557fac00f8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x557fac00f938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x557fac00fcb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x557fac00fb48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557fac00fbd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x557fac00fd68 <col:88>
|-FunctionDecl 0x557fac00ff00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x557fac00fdd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557fac00fe60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x557fac00ffb0 <col:88>
|-FunctionDecl 0x557fac0101c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x557fac010018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557fac0100a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x557fac010278 <line:208:22>
|-FunctionDecl 0x557fac0105e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x557fac0102e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557fac010360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x557fac0103f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x557fac010480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x557fac0108e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x557fac0106e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x557fac0107c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x557fac010998 <col:85>
|-FunctionDecl 0x557fac010d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x557fac010a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557fac010b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x557fac010c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x557fac010e40 <col:52>
|-FunctionDecl 0x557fac010fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x557fac010ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x557fac011060 <col:61>
|-FunctionDecl 0x557fac011560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x557fac0110c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x557fac011148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x557fac011278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x557fac011368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x557fac011620 <col:62>
|-FunctionDecl 0x557fac011838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x557fac011688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x557fac011718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x557fac0118e8 <line:221:22>
|-FunctionDecl 0x557fac0119e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x557fac011950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x557fac011a90 <col:65>
|-TypedefDecl 0x557fac011b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x557fabf9c140 'unsigned long'
|-RecordDecl 0x557fac011b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x557fac011ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x557fac011d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557fac011db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x557fac011d60 'union pthread_attr_t' sugar
|   `-RecordType 0x557fac011be0 'union pthread_attr_t'
|     `-Record 0x557fac011b58 'pthread_attr_t'
|-RecordDecl 0x557fac011e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x557fac011f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x557fac012000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x557fac0120b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x557fac012050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x557fac011e90 'struct __pthread_internal_list'
|     `-Record 0x557fac011e10 '__pthread_internal_list'
|-RecordDecl 0x557fac012120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x557fac0121c8 parent 0x557fabf9bf88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x557fac0122a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x557fac012308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x557fac012370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x557fac0123d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x557fac012440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x557fac0124a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x557fac016580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x557fac016630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x557fac016720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x557fac016788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557fac016910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x557fac0168b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x557fac0121a0 'pthread_mutex_t'
|     `-Record 0x557fac012120 ''
|-RecordDecl 0x557fac016980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x557fac016ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x557fac016b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x557fac016be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x557fac016b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x557fac016a00 'pthread_mutexattr_t'
|     `-Record 0x557fac016980 ''
|-RecordDecl 0x557fac016c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x557fac016cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x557fac016dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x557fac016e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x557fac016e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x557fac016ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x557fac016f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x557fac016fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x557fac017030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x557fac017098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x557fac017150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix039_pso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix039_pso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x557fac017240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x557fac0172a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x557fac0173e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x557fac017380 'union pthread_cond_t' sugar
|   `-RecordType 0x557fac016cd0 'pthread_cond_t'
|     `-Record 0x557fac016c50 ''
|-RecordDecl 0x557fac017450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x557fac017590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x557fac0175f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x557fac0176b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x557fac017650 'union pthread_condattr_t' sugar
|   `-RecordType 0x557fac0174d0 'pthread_condattr_t'
|     `-Record 0x557fac017450 ''
|-TypedefDecl 0x557fac017738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x557fabf9c120 'unsigned int'
|-TypedefDecl 0x557fac0177a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x557fabf9c080 'int'
|-RecordDecl 0x557fac017800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x557fac0178a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x557fac017970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x557fac0179d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x557fac017a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x557fac017aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x557fac017b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x557fac017b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x557fac017be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x557fac017c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x557fac017cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x557fac017d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x557fac017d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x557fac017e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix039_pso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix039_pso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x557fac017ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x557fac017f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557fac018090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x557fac018030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x557fac017880 'pthread_rwlock_t'
|     `-Record 0x557fac017800 ''
|-RecordDecl 0x557fac018100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x557fac018240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x557fac0182a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557fac018360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x557fac018300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x557fac018180 'pthread_rwlockattr_t'
|     `-Record 0x557fac018100 ''
|-TypedefDecl 0x557fac0183e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x557fabf9c084 'volatile int' volatile
|   `-BuiltinType 0x557fabf9c080 'int'
|-RecordDecl 0x557fac018440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x557fac01a5b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x557fac01a618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557fac01a6d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x557fac01a670 'union pthread_barrier_t' sugar
|   `-RecordType 0x557fac0184c0 'pthread_barrier_t'
|     `-Record 0x557fac018440 ''
|-RecordDecl 0x557fac01a740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x557fac01a840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x557fac01a8a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x557fac01a960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x557fac01a900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x557fac01a7c0 'pthread_barrierattr_t'
|     `-Record 0x557fac01a740 ''
|-TypedefDecl 0x557fac01aa78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x557fac01aa10 'long [8]' 8 
|   `-BuiltinType 0x557fabf9c0a0 'long'
|-EnumDecl 0x557fac01aad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x557fac01ab98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x557fac01abe8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x557fac01ac38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x557fac01ad08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x557fac01ad58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x557fac01ada8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x557fac01adf8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x557fac01ae80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x557fac01ae68 <col:26> 'int'
| |   `-DeclRefExpr 0x557fac01ae48 <col:26> 'int' EnumConstant 0x557fac01ad08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x557fac01af08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x557fac01aef0 <col:29> 'int'
| |   `-DeclRefExpr 0x557fac01aed0 <col:29> 'int' EnumConstant 0x557fac01ad58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x557fac01af90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x557fac01af78 <col:30> 'int'
| |   `-DeclRefExpr 0x557fac01af58 <col:30> 'int' EnumConstant 0x557fac01ada8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x557fac01b018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x557fac01b000 <col:27> 'int'
|     `-DeclRefExpr 0x557fac01afe0 <col:27> 'int' EnumConstant 0x557fac01ae80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x557fac01b068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x557fac01b138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x557fac01b1c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x557fac01b1a8 <col:30> 'int'
| |   `-DeclRefExpr 0x557fac01b188 <col:30> 'int' EnumConstant 0x557fac01b138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x557fac01b210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x557fac01b298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x557fac01b280 <col:29> 'int'
|     `-DeclRefExpr 0x557fac01b260 <col:29> 'int' EnumConstant 0x557fac01b210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x557fac01b2e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x557fac01b3b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x557fac01b408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x557fac01b458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x557fac01b4a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x557fac01b5c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x557fac01b610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x557fac01b660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x557fac01b6e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x557fac01b6d0 <col:31> 'int'
|     `-DeclRefExpr 0x557fac01b6b0 <col:31> 'int' EnumConstant 0x557fac01b5c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x557fac01b738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x557fac01b808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x557fac01b858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x557fac01b8a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x557fac01b978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x557fac01b9c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x557fac01ba18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x557fac01bae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x557fac01bb38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x557fac01bb88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x557fac01bdc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x557fac01be30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x557fac01be98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x557fac01bfb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x557fac01c008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x557fac01c0d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x557fac01c128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x557fac01c178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x557fac01c248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x557fac01c298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x557fac01c8f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x557fac01c390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x557fac01c4a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557fac01c6e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x557fac01c760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x557fac01c9b8 <col:47>
| |-NonNullAttr 0x557fac01ca10 <col:77, col:94> 1 3
| `-CallbackAttr 0x557fac01ca48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x557fac01cb70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x557fac01caa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x557fac01cdc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x557fac01cc28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x557fac01cca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x557fac01cf98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x557fac01ce88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x557fac01d040 <col:60>
|-FunctionDecl 0x557fac01d190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x557fac01d230 <col:54>
| `-ConstAttr 0x557fac01d288 <col:95>
|-FunctionDecl 0x557fac01d458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x557fac01d2c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557fac01d338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x557fac01d508 <line:394:19>
| `-ConstAttr 0x557fac01d560 <col:60>
|-FunctionDecl 0x557fac01df68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x557fac01de30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x557fac01e010 <col:71>
| `-NonNullAttr 0x557fac01e068 <col:112, col:126> 1
|-FunctionDecl 0x557fac01e170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x557fac01e0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x557fac01e218 <line:397:22>
| `-NonNullAttr 0x557fac01e270 <col:63, col:77> 1
|-FunctionDecl 0x557fac01e498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x557fac01e2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x557fac01e338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x557fac01e548 <line:400:22>
| `-NonNullAttr 0x557fac01e5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x557fac01e7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x557fac01e5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557fac01e668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x557fac01e858 <line:403:22>
| `-NonNullAttr 0x557fac01e8b0 <col:63, col:77> 1
|-FunctionDecl 0x557fac01eb08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x557fac01e8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x557fac01e9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x557fac01ebb8 <line:406:22>
| `-NonNullAttr 0x557fac01ec10 <col:63, col:80> 1 2
|-FunctionDecl 0x557fac01fe48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x557fac01ec58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557fac01ecd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x557fac01fef8 <line:409:22>
| `-NonNullAttr 0x557fac01ff50 <col:63, col:77> 1
|-FunctionDecl 0x557fac020188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x557fac01ff98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557fac020028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x557fac020238 <line:412:22>
| `-NonNullAttr 0x557fac020290 <col:63, col:80> 1 2
|-FunctionDecl 0x557fac0204c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x557fac0202d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x557fac020368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x557fac020578 <col:37>
| `-NonNullAttr 0x557fac0205d0 <col:78, col:95> 1 2
|-FunctionDecl 0x557fac0207b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557fac020618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557fac020698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x557fac020868 <line:418:22>
| `-NonNullAttr 0x557fac0208c0 <col:63, col:80> 1 2
|-FunctionDecl 0x557fac020a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x557fac020908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557fac020988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x557fac020af8 <line:420:22>
| `-NonNullAttr 0x557fac020b50 <col:63, col:77> 1
|-FunctionDecl 0x557fac020cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557fac020b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557fac020c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x557fac020da8 <line:423:22>
| `-NonNullAttr 0x557fac021e30 <col:63, col:80> 1 2
|-FunctionDecl 0x557fac021fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x557fac021e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557fac021ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x557fac022068 <line:426:22>
| `-NonNullAttr 0x557fac0220c0 <col:63, col:77> 1
|-FunctionDecl 0x557fac022268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557fac022108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557fac022188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x557fac022318 <line:429:22>
| `-NonNullAttr 0x557fac022370 <col:63, col:80> 1 2
|-FunctionDecl 0x557fac0224f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x557fac0223b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557fac022438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x557fac0225a8 <line:431:22>
| `-NonNullAttr 0x557fac022600 <col:63, col:77> 1
|-FunctionDecl 0x557fac022828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x557fac022648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557fac0226c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x557fac0228d8 <line:434:22>
| |-NonNullAttr 0x557fac022930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x557fac022968 <col:100> "" ""
|-FunctionDecl 0x557fac022b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x557fac0229b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557fac022a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x557fac022c28 <line:437:22>
| |-NonNullAttr 0x557fac022c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x557fac022cb8 <col:97> "" ""
|-FunctionDecl 0x557fac022eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x557fac022d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557fac022d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x557fac022f68 <line:440:22>
| `-NonNullAttr 0x557fac022fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x557fac023140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x557fac023008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557fac023080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x557fac0231f0 <line:443:22>
| `-NonNullAttr 0x557fac023248 <col:63, col:77> 1
|-FunctionDecl 0x557fac023538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x557fac023298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557fac023318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x557fac023390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x557fac0235f0 <line:447:22>
| `-NonNullAttr 0x557fac023648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x557fac0238f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x557fac0236a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557fac023720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x557fac023798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x557fac0239b0 <col:43>
| `-NonNullAttr 0x557fac023a08 <col:84, col:98> 1
|-FunctionDecl 0x557fac023cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x557fac023a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557fac023ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x557fac023b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x557fac023d80 <line:452:22>
| `-NonNullAttr 0x557fac023dd8 <col:63, col:77> 3
|-FunctionDecl 0x557fac0240e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x557fac023e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557fac023ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x557fac023f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x557fac0241a0 <line:456:22>
| `-NonNullAttr 0x557fac0241f8 <col:63, col:80> 2 3
|-FunctionDecl 0x557fac0243e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x557fac024248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557fac0242c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x557fac024498 <line:458:22>
|-FunctionDecl 0x557fac024868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x557fac024560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x557fac024700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x557fac024918 <col:52, col:69> 1 2
|-FunctionDecl 0x557fac024ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x557fac0249a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x557fac024a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x557fac024ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x557fac024b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x557fac024c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x557fac024e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x557fac024d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x557fac024fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x557fac025040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x557fac0250e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x557fac0251d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x557fac025240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x557fac025410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix039_pso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x557fac025508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x557fac0255c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x557fac025560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x557fac0250c0 '__pthread_unwind_buf_t'
| |   `-Record 0x557fac025040 ''
| `-AlignedAttr 0x557fac025618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x557fac025690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x557fac0257f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x557fac025858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x557fac0258c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x557fac025928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x557fac025b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x557fac025a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x557fac025c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x557fac025be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x557fac025e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x557fac025d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x557fac025f18 <line:487:22>
|-RecordDecl 0x557fac025f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x557fac026288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x557fac0260e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x557fac026168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x557fac026338 <col:86>
| `-ReturnsTwiceAttr 0x557fac026390 <col:12> Implicit
|-FunctionDecl 0x557fac0266b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x557fac026460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x557fac026570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x557fac026768 <line:493:22>
| `-NonNullAttr 0x557fac0267c0 <col:63, col:77> 1
|-FunctionDecl 0x557fac026938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557fac026808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557fac0269e0 <line:495:22>
| `-NonNullAttr 0x557fac026a38 <col:63, col:77> 1
|-FunctionDecl 0x557fac026b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557fac026a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557fac026be8 <line:497:22>
| `-NonNullAttr 0x557fac026c40 <col:52, col:66> 1
|-FunctionDecl 0x557fac026d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557fac026c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557fac026de8 <line:499:22>
| `-NonNullAttr 0x557fac026e40 <col:52, col:66> 1
|-FunctionDecl 0x557fac027088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x557fac026e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x557fac026f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x557fac027138 <col:36>
| `-NonNullAttr 0x557fac027190 <col:66, col:83> 1 2
|-FunctionDecl 0x557fac027290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557fac0271d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557fac027338 <line:504:22>
| `-NonNullAttr 0x557fac027390 <col:52, col:66> 1
|-FunctionDecl 0x557fac027628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557fac027440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x557fac0274c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x557fac0276d8 <line:508:22>
| `-NonNullAttr 0x557fac027730 <col:63, col:80> 1 2
|-FunctionDecl 0x557fac0279f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x557fac027778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x557fac0277f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x557fac027878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x557fac027ab0 <line:512:22>
| `-NonNullAttr 0x557fac027b08 <col:63, col:80> 1 3
|-FunctionDecl 0x557fac027c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557fac027b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557fac027cb8 <line:514:22>
| `-NonNullAttr 0x557fac027d10 <col:63, col:77> 1
|-FunctionDecl 0x557fac027f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x557fac027dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x557fac027fe0 <line:516:22>
| `-NonNullAttr 0x557fac028038 <col:63, col:77> 1
|-FunctionDecl 0x557fac028140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x557fac028088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x557fac0281e8 <line:518:22>
| `-NonNullAttr 0x557fac028240 <col:63, col:77> 1
|-FunctionDecl 0x557fac028468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557fac028288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x557fac028308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x557fac028518 <line:522:22>
| `-NonNullAttr 0x557fac028570 <col:63, col:80> 1 2
|-FunctionDecl 0x557fac028778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557fac0285b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557fac028638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x557fac028828 <line:525:22>
| `-NonNullAttr 0x557fac028880 <col:63, col:77> 1
|-FunctionDecl 0x557fac028a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557fac0288c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x557fac028948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x557fac028ad8 <line:528:22>
| `-NonNullAttr 0x557fac028b30 <col:63, col:80> 1 2
|-FunctionDecl 0x557fac028cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557fac028b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557fac028bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x557fac028d68 <line:530:22>
| `-NonNullAttr 0x557fac028dc0 <col:63, col:77> 1
|-FunctionDecl 0x557fac029f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557fac028e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x557fac029eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x557fac02a040 <line:534:22>
| `-NonNullAttr 0x557fac02a098 <col:63, col:80> 1 2
|-FunctionDecl 0x557fac02a228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557fac02a0e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557fac02a168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x557fac02a2d8 <line:537:22>
| `-NonNullAttr 0x557fac02a330 <col:63, col:77> 1
|-FunctionDecl 0x557fac02a4d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557fac02a378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x557fac02a3f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x557fac02a588 <line:541:22>
| `-NonNullAttr 0x557fac02a5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x557fac02a768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557fac02a628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557fac02a6a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x557fac02a818 <line:544:22>
| `-NonNullAttr 0x557fac02a870 <col:63, col:77> 1
|-FunctionDecl 0x557fac02aa58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x557fac02a8b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x557fac02a938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x557fac02ab08 <line:547:22>
| `-NonNullAttr 0x557fac02ab60 <col:63, col:80> 1 2
|-FunctionDecl 0x557fac02ace8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557fac02aba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557fac02ac28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x557fac02ad98 <line:550:22>
| `-NonNullAttr 0x557fac02adf0 <col:63, col:77> 1
|-FunctionDecl 0x557fac02c168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x557fac02bf10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x557fac02c020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x557fac02c218 <col:29>
| `-NonNullAttr 0x557fac02c270 <col:70, col:84> 1
|-FunctionDecl 0x557fac02c3e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557fac02c2b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557fac02c490 <line:555:22>
| `-NonNullAttr 0x557fac02c4e8 <col:63, col:77> 1
|-FunctionDecl 0x557fac02c5f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557fac02c538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557fac02c698 <line:557:22>
| `-NonNullAttr 0x557fac02c6f0 <col:52, col:66> 1
|-FunctionDecl 0x557fac02c7f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557fac02c738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557fac02c898 <line:559:19>
| `-NonNullAttr 0x557fac02c8f0 <col:49, col:63> 1
|-FunctionDecl 0x557fac02cb28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x557fac02c938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x557fac02c9c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x557fac02cbd8 <col:39>
| `-NonNullAttr 0x557fac02cc30 <col:69, col:86> 1 2
|-FunctionDecl 0x557fac02cd30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557fac02cc78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557fac02cdd8 <line:564:22>
| `-NonNullAttr 0x557fac02ce30 <col:52, col:66> 1
|-FunctionDecl 0x557fac02cf98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557fac02cee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557fac02d040 <line:566:22>
| `-NonNullAttr 0x557fac02d098 <col:52, col:66> 1
|-FunctionDecl 0x557fac02d258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x557fac02d0e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x557fac02d178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x557fac02d308 <col:39>
| `-NonNullAttr 0x557fac02d360 <col:69, col:86> 1 2
|-FunctionDecl 0x557fac02d460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557fac02d3a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557fac02d508 <line:571:22>
| `-NonNullAttr 0x557fac02d560 <col:52, col:66> 1
|-FunctionDecl 0x557fac02d748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x557fac02d610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x557fac02d7f0 <line:573:22>
| `-NonNullAttr 0x557fac02d848 <col:63, col:77> 1
|-FunctionDecl 0x557fac02d950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x557fac02d898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x557fac02d9f8 <line:575:22>
| `-NonNullAttr 0x557fac02da50 <col:63, col:77> 1
|-FunctionDecl 0x557fac02dc78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557fac02da98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x557fac02db18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x557fac02dd28 <line:579:22>
| `-NonNullAttr 0x557fac02dd80 <col:63, col:80> 1 2
|-FunctionDecl 0x557fac02dfa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x557fac02ddc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x557fac02de48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x557fac02e058 <line:582:22>
| `-NonNullAttr 0x557fac02e0b0 <col:63, col:77> 1
|-FunctionDecl 0x557fac02e258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557fac02e0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x557fac02e178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x557fac02e308 <line:586:22>
| `-NonNullAttr 0x557fac02e360 <col:63, col:80> 1 2
|-FunctionDecl 0x557fac02e4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x557fac02e3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x557fac02e428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x557fac02e598 <col:36>
| `-NonNullAttr 0x557fac02e5f0 <col:77, col:91> 1
|-FunctionDecl 0x557fac02e928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x557fac02e6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x557fac02e7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x557fac02e9d8 <line:591:22>
| `-NonNullAttr 0x557fac02ea30 <col:63, col:77> 1
|-FunctionDecl 0x557fac02eba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x557fac02ea78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x557fac02ec50 <line:593:22>
| `-NonNullAttr 0x557fac02eca8 <col:63, col:77> 1
|-FunctionDecl 0x557fac02edb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x557fac02ecf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x557fac02ee58 <line:595:22>
| `-NonNullAttr 0x557fac02eeb0 <col:52, col:66> 1
|-FunctionDecl 0x557fac02efc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x557fac02ef10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x557fac02f070 <line:597:22>
| `-NonNullAttr 0x557fac02f0c8 <col:52, col:66> 1
|-FunctionDecl 0x557fac02f2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x557fac02f118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x557fac02f190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x557fac02f3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x557fac02f6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x557fac02f428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x557fac02f4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x557fac02f530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x557fac02f790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x557fac02f9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x557fac02f870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x557fac02fa50 <line:606:22>
| `-NonNullAttr 0x557fac02faa8 <col:63, col:77> 1
|-FunctionDecl 0x557fac02fbb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x557fac02faf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x557fac02fc58 <line:608:22>
| `-NonNullAttr 0x557fac02fcb0 <col:63, col:77> 1
|-FunctionDecl 0x557fac02ff10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557fac02fcf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x557fac02fd78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x557fac02ffc0 <line:612:22>
| `-NonNullAttr 0x557fac030018 <col:63, col:80> 1 2
|-FunctionDecl 0x557fac030228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x557fac030068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x557fac0300e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x557fac0302d8 <col:37>
| `-NonNullAttr 0x557fac030330 <col:78, col:92> 1
|-FunctionDecl 0x557fac030548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x557fac030378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x557fac030420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x557fac0305f8 <line:618:22>
| `-NonNullAttr 0x557fac030650 <col:63, col:80> 1 2
|-FunctionDecl 0x557fac030818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x557fac030698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x557fac030710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x557fac0308c8 <line:621:22>
| `-NonNullAttr 0x557fac030920 <col:63, col:77> 1
|-FunctionDecl 0x557fac030bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x557fac030a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x557fac030a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x557fac030c78 <line:623:22>
| `-NonNullAttr 0x557fac030cd0 <col:63, col:77> 1
|-FunctionDecl 0x557fac030e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x557fac030d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557fac030f20 <line:625:22>
| `-NonNullAttr 0x557fac030f78 <col:63, col:77> 1
|-FunctionDecl 0x557fac031080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x557fac030fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557fac031128 <line:627:22>
| `-NonNullAttr 0x557fac031180 <col:52, col:66> 1
|-FunctionDecl 0x557fac031280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x557fac0311c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557fac031328 <line:629:22>
| `-NonNullAttr 0x557fac031380 <col:52, col:66> 1
|-FunctionDecl 0x557fac031480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x557fac0313c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557fac031528 <line:631:22>
| `-NonNullAttr 0x557fac031580 <col:52, col:66> 1
|-FunctionDecl 0x557fac031958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x557fac031660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x557fac031770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x557fac0317f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x557fac031a10 <line:635:22>
| `-NonNullAttr 0x557fac031a68 <col:63, col:77> 1
|-FunctionDecl 0x557fac031be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x557fac031ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x557fac031c90 <line:637:22>
| `-NonNullAttr 0x557fac031ce8 <col:63, col:77> 1
|-FunctionDecl 0x557fac031df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x557fac031d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x557fac031e98 <line:639:22>
| `-NonNullAttr 0x557fac031ef0 <col:52, col:66> 1
|-FunctionDecl 0x557fac0320e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x557fac031fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x557fac032190 <line:641:22>
| `-NonNullAttr 0x557fac0321e8 <col:63, col:77> 1
|-FunctionDecl 0x557fac0322f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x557fac032238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x557fac032398 <line:643:22>
| `-NonNullAttr 0x557fac0323f0 <col:63, col:77> 1
|-FunctionDecl 0x557fac032618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557fac032438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x557fac0324b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x557fac0326c8 <line:647:22>
| `-NonNullAttr 0x557fac032720 <col:63, col:80> 1 2
|-FunctionDecl 0x557fac032928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x557fac032768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x557fac0327e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x557fac0329d8 <line:650:22>
| `-NonNullAttr 0x557fac032a30 <col:63, col:77> 1
|-FunctionDecl 0x557fac032d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x557fac032b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x557fac032c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x557fac032e28 <line:653:22>
| `-NonNullAttr 0x557fac032e80 <col:63, col:77> 1
|-FunctionDecl 0x557fac032fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x557fac032ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x557fac033090 <col:69>
|-FunctionDecl 0x557fac033208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x557fac0330f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x557fac0332b0 <col:72>
|-FunctionDecl 0x557fac0334e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x557fac033318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x557fac0333c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x557fac033598 <col:44>
|-FunctionDecl 0x557fac0337b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x557fac033600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557fac033678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x557fac033868 <line:660:22>
| `-NonNullAttr 0x557fac0338c0 <col:63, col:77> 2
|-FunctionDecl 0x557fac033d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x557fac0339a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x557fac033ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x557fac033bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x557fac033dc0 <col:47>
|-FunctionDecl 0x557fac034f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x557fac033e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x557fac0350b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x557fac035020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x557fac035210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x557fac035178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x557fac035368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x557fac0352d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x557fac035430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x557fac0354f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x557fac0355b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x557fac035668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x557fac0356e8 prev 0x557fac035668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x557fac035750 <col:24> 'int' 0
|-VarDecl 0x557fac035788 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x557fac035808 prev 0x557fac035788 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x557fac035870 <col:27> 'int' 0
|-VarDecl 0x557fac0358a8 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x557fac035928 prev 0x557fac0358a8 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x557fac035990 <col:27> 'int' 0
|-VarDecl 0x557fac0359c8 <line:678:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x557fac035a48 prev 0x557fac0359c8 <line:679:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x557fac035ab0 <col:27> 'int' 0
|-VarDecl 0x557fac035ae8 <line:680:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x557fac035b68 prev 0x557fac035ae8 <line:681:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x557fac035bd0 <col:27> 'int' 0
|-VarDecl 0x557fac035c08 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x557fac035c88 prev 0x557fac035c08 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x557fac035cf0 <col:9> 'int' 0
|-VarDecl 0x557fac035d28 <line:684:1, col:5> col:5 used b 'int'
|-VarDecl 0x557fac035da8 prev 0x557fac035d28 <line:685:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x557fac035e10 <col:9> 'int' 0
|-VarDecl 0x557fac035e40 <line:686:1, col:7> col:7 used b$flush_delayed '_Bool'
|-VarDecl 0x557fac035ec0 <line:687:1, col:5> col:5 used b$mem_tmp 'int'
|-VarDecl 0x557fac035f70 <line:688:1, col:7> col:7 used b$r_buff0_thd0 '_Bool'
|-VarDecl 0x557fac035fe8 <line:689:1, col:7> col:7 used b$r_buff0_thd1 '_Bool'
|-VarDecl 0x557fac036060 <line:690:1, col:7> col:7 used b$r_buff0_thd2 '_Bool'
|-VarDecl 0x557fac0360d8 <line:691:1, col:7> col:7 used b$r_buff0_thd3 '_Bool'
|-VarDecl 0x557fac036150 <line:692:1, col:7> col:7 used b$r_buff0_thd4 '_Bool'
|-VarDecl 0x557fac0361c8 <line:693:1, col:7> col:7 used b$r_buff1_thd0 '_Bool'
|-VarDecl 0x557fac036240 <line:694:1, col:7> col:7 used b$r_buff1_thd1 '_Bool'
|-VarDecl 0x557fac0362b8 <line:695:1, col:7> col:7 used b$r_buff1_thd2 '_Bool'
|-VarDecl 0x557fac036330 <line:696:1, col:7> col:7 used b$r_buff1_thd3 '_Bool'
|-VarDecl 0x557fac0363a8 <line:697:1, col:7> col:7 used b$r_buff1_thd4 '_Bool'
|-VarDecl 0x557fac036420 <line:698:1, col:7> col:7 b$read_delayed '_Bool'
|-VarDecl 0x557fac0364a0 <line:699:1, col:6> col:6 b$read_delayed_var 'int *'
|-VarDecl 0x557fac036520 <line:700:1, col:5> col:5 used b$w_buff0 'int'
|-VarDecl 0x557fac036598 <line:701:1, col:7> col:7 used b$w_buff0_used '_Bool'
|-VarDecl 0x557fac036618 <line:702:1, col:5> col:5 used b$w_buff1 'int'
|-VarDecl 0x557fac036690 <line:703:1, col:7> col:7 used b$w_buff1_used '_Bool'
|-VarDecl 0x557fac036708 <line:704:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x557fac036780 <line:705:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x557fac036800 <line:706:1, col:5> col:5 used x 'int'
|-VarDecl 0x557fac036880 prev 0x557fac036800 <line:707:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x557fac0368e8 <col:9> 'int' 0
|-VarDecl 0x557fac036920 <line:708:1, col:5> col:5 used y 'int'
|-VarDecl 0x557fac0369a0 prev 0x557fac036920 <line:709:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x557fac036a08 <col:9> 'int' 0
|-VarDecl 0x557fac036a40 <line:710:1, col:5> col:5 used z 'int'
|-VarDecl 0x557fac036ac0 prev 0x557fac036a40 <line:711:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x557fac036b28 <col:9> 'int' 0
|-VarDecl 0x557fac036b58 <line:712:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x557fac036bd0 <line:713:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x557fac036ce8 prev 0x557fac034f60 <line:714:1, line:743:1> line:714:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x557fac036c50 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x557fac0385a8 <line:715:1, line:743:1>
|   |-CallExpr 0x557fac036df8 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fac036de0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac036d90 <col:3> 'void ()' Function 0x557fabfdc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fac036e70 <line:717:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x557fac036e18 <col:3> 'int' lvalue Var 0x557fac036618 'b$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x557fac036e58 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557fac036e38 <col:15> 'int' lvalue Var 0x557fac036520 'b$w_buff0' 'int'
|   |-BinaryOperator 0x557fac036ed0 <line:718:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x557fac036e90 <col:3> 'int' lvalue Var 0x557fac036520 'b$w_buff0' 'int'
|   | `-IntegerLiteral 0x557fac036eb0 <col:15> 'int' 1
|   |-BinaryOperator 0x557fac036f48 <line:719:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557fac036ef0 <col:3> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557fac036f30 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557fac036f10 <col:20> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557fac036ff8 <line:720:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x557fac036f80 <col:3> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x557fac036fd0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x557fac036fa0 <col:27> 'int' 1
|   |-CallExpr 0x557fac037178 <line:721:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x557fac037160 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x557fac037018 <col:3> 'void (int)' Function 0x557fabfdc0d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x557fac037118 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x557fac0370f8 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x557fac0370d8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x557fac037090 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x557fac037078 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x557fac037038 <col:23> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x557fac0370c0 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x557fac0370a8 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x557fac037058 <col:41> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557fac0371f8 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557fac0371a0 <col:3> '_Bool' lvalue Var 0x557fac0361c8 'b$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x557fac0371e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557fac0371c0 <col:20> '_Bool' lvalue Var 0x557fac035f70 'b$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x557fac037270 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557fac037218 <col:3> '_Bool' lvalue Var 0x557fac036240 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x557fac037258 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557fac037238 <col:20> '_Bool' lvalue Var 0x557fac035fe8 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x557fac0372e8 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557fac037290 <col:3> '_Bool' lvalue Var 0x557fac0362b8 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x557fac0372d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557fac0372b0 <col:20> '_Bool' lvalue Var 0x557fac036060 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x557fac037360 <line:725:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557fac037308 <col:3> '_Bool' lvalue Var 0x557fac036330 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x557fac037348 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557fac037328 <col:20> '_Bool' lvalue Var 0x557fac0360d8 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x557fac0373d8 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557fac037380 <col:3> '_Bool' lvalue Var 0x557fac0363a8 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x557fac0373c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557fac0373a0 <col:20> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x557fac037470 <line:727:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x557fac0373f8 <col:3> '_Bool' lvalue Var 0x557fac035fe8 'b$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x557fac037448 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x557fac037418 <col:27> 'int' 1
|   |-CallExpr 0x557fac0374c8 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fac0374b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac037490 <col:3> 'void ()' Function 0x557fabfdc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557fac037520 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fac037508 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac0374e8 <col:3> 'void ()' Function 0x557fabfdc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fac037598 <line:730:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x557fac037540 <col:3> 'int' lvalue Var 0x557fac035808 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x557fac037580 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557fac037560 <col:25> 'int' lvalue Var 0x557fac036880 'x' 'int'
|   |-CallExpr 0x557fac0375f0 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fac0375d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac0375b8 <col:3> 'void ()' Function 0x557fabfdc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557fac037648 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fac037630 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac037610 <col:3> 'void ()' Function 0x557fabfdc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fac037930 <line:733:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x557fac037668 <col:3> 'int' lvalue Var 0x557fac035da8 'b' 'int'
|   | `-ConditionalOperator 0x557fac037900 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x557fac037728 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x557fac0376e0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x557fac0376c8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x557fac037688 <col:7> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x557fac037710 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x557fac0376f8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x557fac0376a8 <col:25> '_Bool' lvalue Var 0x557fac035fe8 'b$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x557fac0378e8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557fac037748 <col:42> 'int' lvalue Var 0x557fac036520 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x557fac0378c8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x557fac037898 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x557fac037808 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x557fac0377c0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x557fac0377a8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x557fac037768 <col:55> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x557fac0377f0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x557fac0377d8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x557fac037788 <col:73> '_Bool' lvalue Var 0x557fac036240 'b$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x557fac037868 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557fac037828 <col:90> 'int' lvalue Var 0x557fac036618 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x557fac037880 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fac037848 <col:102> 'int' lvalue Var 0x557fac035da8 'b' 'int'
|   |-BinaryOperator 0x557fac037b38 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x557fac037950 <col:3> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x557fac037b20 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fac037af0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x557fac037a10 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x557fac0379c8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x557fac0379b0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x557fac037970 <col:20> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x557fac0379f8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x557fac0379e0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x557fac037990 <col:38> '_Bool' lvalue Var 0x557fac035fe8 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x557fac037aa8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557fac037a60 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557fac037a30 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x557fac037ad8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557fac037ac0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fac037a88 <col:66> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557fac037e20 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x557fac037b58 <col:3> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557fac037e08 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fac037dd8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x557fac037cf8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x557fac037c18 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x557fac037bd0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x557fac037bb8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x557fac037b78 <col:20> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x557fac037c00 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x557fac037be8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x557fac037b98 <col:38> '_Bool' lvalue Var 0x557fac035fe8 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x557fac037cd8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x557fac037c90 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x557fac037c78 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x557fac037c38 <col:56> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x557fac037cc0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x557fac037ca8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x557fac037c58 <col:74> '_Bool' lvalue Var 0x557fac036240 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x557fac037d90 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557fac037d48 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557fac037d18 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x557fac037dc0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557fac037da8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fac037d70 <col:102> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x557fac038040 <line:736:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x557fac037e40 <col:3> '_Bool' lvalue Var 0x557fac035fe8 'b$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x557fac038028 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fac037ff8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x557fac037f00 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x557fac037eb8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x557fac037ea0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x557fac037e60 <col:20> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x557fac037ee8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x557fac037ed0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x557fac037e80 <col:38> '_Bool' lvalue Var 0x557fac035fe8 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x557fac037fb0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557fac037f50 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557fac037f20 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x557fac037fe0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557fac037fc8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fac037f90 <col:66> '_Bool' lvalue Var 0x557fac035fe8 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x557fac038328 <line:737:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x557fac038060 <col:3> '_Bool' lvalue Var 0x557fac036240 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x557fac038310 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fac0382e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x557fac038200 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x557fac038120 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x557fac0380d8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x557fac0380c0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x557fac038080 <col:20> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x557fac038108 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x557fac0380f0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x557fac0380a0 <col:38> '_Bool' lvalue Var 0x557fac035fe8 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x557fac0381e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x557fac038198 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x557fac038180 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x557fac038140 <col:56> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x557fac0381c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x557fac0381b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x557fac038160 <col:74> '_Bool' lvalue Var 0x557fac036240 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x557fac038298 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557fac038250 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557fac038220 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x557fac0382c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557fac0382b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fac038278 <col:102> '_Bool' lvalue Var 0x557fac036240 'b$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x557fac038380 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fac038368 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac038348 <col:3> 'void ()' Function 0x557fabfdc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557fac0383d8 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fac0383c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac0383a0 <col:3> 'void ()' Function 0x557fabfdc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fac038490 <line:740:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x557fac0383f8 <col:3> 'int' lvalue Var 0x557fac0356e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x557fac038470 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x557fac038458 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557fac038418 <col:22> 'int' lvalue Var 0x557fac0356e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x557fac038438 <col:41> 'int' 1
|   |-CallExpr 0x557fac0384e8 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fac0384d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac0384b0 <col:3> 'void ()' Function 0x557fabfdc410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x557fac038598 <line:742:3, col:36>
|     `-CallExpr 0x557fac038578 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x557fac038560 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x557fac038508 <col:10> 'void *(void)' Function 0x557fabfdbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x557fac038740 prev 0x557fac0350b8 <line:744:1, line:763:1> line:744:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x557fac0386a8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x557fac039960 <line:745:1, line:763:1>
|   |-CallExpr 0x557fac038820 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fac038808 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac0387e8 <col:3> 'void ()' Function 0x557fabfdc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fac038880 <line:747:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x557fac038840 <col:3> 'int' lvalue Var 0x557fac036880 'x' 'int'
|   | `-IntegerLiteral 0x557fac038860 <col:7> 'int' 1
|   |-CallExpr 0x557fac0388d8 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fac0388c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac0388a0 <col:3> 'void ()' Function 0x557fabfdc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557fac038930 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fac038918 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac0388f8 <col:3> 'void ()' Function 0x557fabfdc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fac038990 <line:750:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x557fac038950 <col:3> 'int' lvalue Var 0x557fac0369a0 'y' 'int'
|   | `-IntegerLiteral 0x557fac038970 <col:7> 'int' 1
|   |-CallExpr 0x557fac0389e8 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fac0389d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac0389b0 <col:3> 'void ()' Function 0x557fabfdc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557fac038a40 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fac038a28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac038a08 <col:3> 'void ()' Function 0x557fabfdc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fac038d28 <line:753:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x557fac038a60 <col:3> 'int' lvalue Var 0x557fac035da8 'b' 'int'
|   | `-ConditionalOperator 0x557fac038cf8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x557fac038b20 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x557fac038ad8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x557fac038ac0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x557fac038a80 <col:7> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x557fac038b08 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x557fac038af0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x557fac038aa0 <col:25> '_Bool' lvalue Var 0x557fac036060 'b$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x557fac038ce0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557fac038b40 <col:42> 'int' lvalue Var 0x557fac036520 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x557fac038cc0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x557fac038c90 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x557fac038c00 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x557fac038bb8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x557fac038ba0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x557fac038b60 <col:55> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x557fac038be8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x557fac038bd0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x557fac038b80 <col:73> '_Bool' lvalue Var 0x557fac0362b8 'b$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x557fac038c60 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557fac038c20 <col:90> 'int' lvalue Var 0x557fac036618 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x557fac038c78 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fac038c40 <col:102> 'int' lvalue Var 0x557fac035da8 'b' 'int'
|   |-BinaryOperator 0x557fac038f30 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x557fac038d48 <col:3> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x557fac038f18 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fac038ee8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x557fac038e08 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x557fac038dc0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x557fac038da8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x557fac038d68 <col:20> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x557fac038df0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x557fac038dd8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x557fac038d88 <col:38> '_Bool' lvalue Var 0x557fac036060 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x557fac038ea0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557fac038e58 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557fac038e28 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x557fac038ed0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557fac038eb8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fac038e80 <col:66> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557fac039228 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x557fac038f50 <col:3> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557fac039210 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fac0391e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x557fac039100 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x557fac039020 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x557fac038fd8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x557fac038fc0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x557fac038f70 <col:20> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x557fac039008 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x557fac038ff0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x557fac038fa0 <col:38> '_Bool' lvalue Var 0x557fac036060 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x557fac0390e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x557fac039098 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x557fac039080 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x557fac039040 <col:56> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x557fac0390c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x557fac0390b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x557fac039060 <col:74> '_Bool' lvalue Var 0x557fac0362b8 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x557fac039198 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557fac039150 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557fac039120 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x557fac0391c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557fac0391b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fac039178 <col:102> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x557fac039430 <line:756:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x557fac039248 <col:3> '_Bool' lvalue Var 0x557fac036060 'b$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x557fac039418 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fac0393e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x557fac039308 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x557fac0392c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x557fac0392a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x557fac039268 <col:20> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x557fac0392f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x557fac0392d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x557fac039288 <col:38> '_Bool' lvalue Var 0x557fac036060 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x557fac0393a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557fac039358 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557fac039328 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x557fac0393d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557fac0393b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fac039380 <col:66> '_Bool' lvalue Var 0x557fac036060 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x557fac039718 <line:757:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x557fac039450 <col:3> '_Bool' lvalue Var 0x557fac0362b8 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x557fac039700 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fac0396d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x557fac0395f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x557fac039510 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x557fac0394c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x557fac0394b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x557fac039470 <col:20> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x557fac0394f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x557fac0394e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x557fac039490 <col:38> '_Bool' lvalue Var 0x557fac036060 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x557fac0395d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x557fac039588 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x557fac039570 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x557fac039530 <col:56> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x557fac0395b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x557fac0395a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x557fac039550 <col:74> '_Bool' lvalue Var 0x557fac0362b8 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x557fac039688 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557fac039640 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557fac039610 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x557fac0396b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557fac0396a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fac039668 <col:102> '_Bool' lvalue Var 0x557fac0362b8 'b$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x557fac039770 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fac039758 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac039738 <col:3> 'void ()' Function 0x557fabfdc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557fac0397c8 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fac0397b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac039790 <col:3> 'void ()' Function 0x557fabfdc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fac039880 <line:760:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x557fac0397e8 <col:3> 'int' lvalue Var 0x557fac0356e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x557fac039860 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x557fac039848 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557fac039808 <col:22> 'int' lvalue Var 0x557fac0356e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x557fac039828 <col:41> 'int' 1
|   |-CallExpr 0x557fac0398d8 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fac0398c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac0398a0 <col:3> 'void ()' Function 0x557fabfdc410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x557fac039950 <line:762:3, col:36>
|     `-CallExpr 0x557fac039930 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x557fac039918 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x557fac0398f8 <col:10> 'void *(void)' Function 0x557fabfdbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x557fac039aa8 prev 0x557fac035210 <line:764:1, line:783:1> line:764:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x557fac039a10 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x557fac03ace0 <line:765:1, line:783:1>
|   |-CallExpr 0x557fac039b88 <line:766:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fac039b70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac039b50 <col:3> 'void ()' Function 0x557fabfdc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fac039be8 <line:767:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x557fac039ba8 <col:3> 'int' lvalue Var 0x557fac0369a0 'y' 'int'
|   | `-IntegerLiteral 0x557fac039bc8 <col:7> 'int' 2
|   |-CallExpr 0x557fac039c40 <line:768:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fac039c28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac039c08 <col:3> 'void ()' Function 0x557fabfdc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557fac039c98 <line:769:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fac039c80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac039c60 <col:3> 'void ()' Function 0x557fabfdc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fac039d10 <line:770:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x557fac039cb8 <col:3> 'int' lvalue Var 0x557fac035928 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x557fac039cf8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557fac039cd8 <col:25> 'int' lvalue Var 0x557fac036ac0 'z' 'int'
|   |-CallExpr 0x557fac039d68 <line:771:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fac039d50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac039d30 <col:3> 'void ()' Function 0x557fabfdc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557fac039dc0 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fac039da8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac039d88 <col:3> 'void ()' Function 0x557fabfdc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fac03a0b8 <line:773:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x557fac039de0 <col:3> 'int' lvalue Var 0x557fac035da8 'b' 'int'
|   | `-ConditionalOperator 0x557fac03a088 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x557fac039ea0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x557fac039e58 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x557fac039e40 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x557fac039e00 <col:7> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x557fac039e88 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x557fac039e70 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x557fac039e20 <col:25> '_Bool' lvalue Var 0x557fac0360d8 'b$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x557fac03a070 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557fac039ec0 <col:42> 'int' lvalue Var 0x557fac036520 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x557fac03a050 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x557fac03a020 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x557fac039f80 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x557fac039f38 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x557fac039f20 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x557fac039ee0 <col:55> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x557fac039f68 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x557fac039f50 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x557fac039f00 <col:73> '_Bool' lvalue Var 0x557fac036330 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x557fac039ff0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557fac039fb0 <col:90> 'int' lvalue Var 0x557fac036618 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x557fac03a008 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fac039fd0 <col:102> 'int' lvalue Var 0x557fac035da8 'b' 'int'
|   |-BinaryOperator 0x557fac03a2c0 <line:774:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x557fac03a0d8 <col:3> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x557fac03a2a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fac03a278 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x557fac03a198 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x557fac03a150 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x557fac03a138 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x557fac03a0f8 <col:20> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x557fac03a180 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x557fac03a168 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x557fac03a118 <col:38> '_Bool' lvalue Var 0x557fac0360d8 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x557fac03a230 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557fac03a1e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557fac03a1b8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x557fac03a260 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557fac03a248 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fac03a210 <col:66> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557fac03a5a8 <line:775:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x557fac03a2e0 <col:3> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557fac03a590 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fac03a560 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x557fac03a480 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x557fac03a3a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x557fac03a358 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x557fac03a340 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x557fac03a300 <col:20> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x557fac03a388 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x557fac03a370 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x557fac03a320 <col:38> '_Bool' lvalue Var 0x557fac0360d8 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x557fac03a460 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x557fac03a418 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x557fac03a400 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x557fac03a3c0 <col:56> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x557fac03a448 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x557fac03a430 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x557fac03a3e0 <col:74> '_Bool' lvalue Var 0x557fac036330 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x557fac03a518 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557fac03a4d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557fac03a4a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x557fac03a548 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557fac03a530 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fac03a4f8 <col:102> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x557fac03a7b0 <line:776:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x557fac03a5c8 <col:3> '_Bool' lvalue Var 0x557fac0360d8 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x557fac03a798 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fac03a768 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x557fac03a688 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x557fac03a640 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x557fac03a628 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x557fac03a5e8 <col:20> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x557fac03a670 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x557fac03a658 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x557fac03a608 <col:38> '_Bool' lvalue Var 0x557fac0360d8 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x557fac03a720 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557fac03a6d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557fac03a6a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x557fac03a750 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557fac03a738 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fac03a700 <col:66> '_Bool' lvalue Var 0x557fac0360d8 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x557fac03aa98 <line:777:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x557fac03a7d0 <col:3> '_Bool' lvalue Var 0x557fac036330 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x557fac03aa80 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fac03aa50 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x557fac03a970 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x557fac03a890 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x557fac03a848 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x557fac03a830 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x557fac03a7f0 <col:20> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x557fac03a878 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x557fac03a860 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x557fac03a810 <col:38> '_Bool' lvalue Var 0x557fac0360d8 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x557fac03a950 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x557fac03a908 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x557fac03a8f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x557fac03a8b0 <col:56> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x557fac03a938 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x557fac03a920 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x557fac03a8d0 <col:74> '_Bool' lvalue Var 0x557fac036330 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x557fac03aa08 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557fac03a9c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557fac03a990 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x557fac03aa38 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557fac03aa20 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fac03a9e8 <col:102> '_Bool' lvalue Var 0x557fac036330 'b$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x557fac03aaf0 <line:778:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fac03aad8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac03aab8 <col:3> 'void ()' Function 0x557fabfdc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557fac03ab48 <line:779:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fac03ab30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac03ab10 <col:3> 'void ()' Function 0x557fabfdc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fac03ac00 <line:780:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x557fac03ab68 <col:3> 'int' lvalue Var 0x557fac0356e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x557fac03abe0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x557fac03abc8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557fac03ab88 <col:22> 'int' lvalue Var 0x557fac0356e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x557fac03aba8 <col:41> 'int' 1
|   |-CallExpr 0x557fac03ac58 <line:781:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fac03ac40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac03ac20 <col:3> 'void ()' Function 0x557fabfdc410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x557fac03acd0 <line:782:3, col:36>
|     `-CallExpr 0x557fac03acb0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x557fac03ac98 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x557fac03ac78 <col:10> 'void *(void)' Function 0x557fabfdbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x557fac03ae28 prev 0x557fac035368 <line:784:1, line:822:1> line:784:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x557fac03ad90 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x557fac03ec48 <line:785:1, line:822:1>
|   |-CallExpr 0x557fac03af08 <line:786:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fac03aef0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac03aed0 <col:3> 'void ()' Function 0x557fabfdc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fac03af68 <line:787:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x557fac03af28 <col:3> 'int' lvalue Var 0x557fac036ac0 'z' 'int'
|   | `-IntegerLiteral 0x557fac03af48 <col:7> 'int' 1
|   |-CallExpr 0x557fac03afd8 <line:788:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fac03afc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac03af88 <col:3> 'void ()' Function 0x557fabfdc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557fac03b030 <line:789:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fac03b018 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac03aff8 <col:3> 'void ()' Function 0x557fabfdc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fac03b090 <line:790:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x557fac03b050 <col:3> 'int' lvalue Var 0x557fac035c88 'a' 'int'
|   | `-IntegerLiteral 0x557fac03b070 <col:7> 'int' 1
|   |-CallExpr 0x557fac03b0e8 <line:791:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fac03b0d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac03b0b0 <col:3> 'void ()' Function 0x557fabfdc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557fac03b140 <line:792:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fac03b128 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac03b108 <col:3> 'void ()' Function 0x557fabfdc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fac03b1b8 <line:793:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x557fac03b160 <col:3> 'int' lvalue Var 0x557fac035a48 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x557fac03b1a0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557fac03b180 <col:25> 'int' lvalue Var 0x557fac035c88 'a' 'int'
|   |-CallExpr 0x557fac03b210 <line:794:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fac03b1f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac03b1d8 <col:3> 'void ()' Function 0x557fabfdc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557fac03b268 <line:795:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fac03b250 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac03b230 <col:3> 'void ()' Function 0x557fabfdc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fac03b318 <line:796:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x557fac03b288 <col:3> '_Bool' lvalue Var 0x557fac036b58 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x557fac03b300 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x557fac03b2e0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x557fac03b2c8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x557fac03b2a8 <col:19> 'void *(void)' Function 0x557fabfdbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x557fac03b3c8 <line:797:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x557fac03b338 <col:3> '_Bool' lvalue Var 0x557fac036bd0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x557fac03b3b0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x557fac03b390 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x557fac03b378 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x557fac03b358 <col:19> 'void *(void)' Function 0x557fabfdbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x557fac03b440 <line:798:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x557fac03b3e8 <col:3> '_Bool' lvalue Var 0x557fac035e40 'b$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x557fac03b428 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557fac03b408 <col:21> '_Bool' lvalue Var 0x557fac036bd0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x557fac03b4b8 <line:799:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x557fac03b460 <col:3> 'int' lvalue Var 0x557fac035ec0 'b$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x557fac03b4a0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557fac03b480 <col:15> 'int' lvalue Var 0x557fac035da8 'b' 'int'
|   |-BinaryOperator 0x557fac03b8f0 <line:800:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x557fac03b4d8 <col:3> 'int' lvalue Var 0x557fac035da8 'b' 'int'
|   | `-ConditionalOperator 0x557fac03b8c0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x557fac03b6e8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x557fac03b608 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x557fac03b530 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x557fac03b518 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x557fac03b4f8 <col:8> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x557fac03b5e8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x557fac03b580 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x557fac03b568 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x557fac03b548 <col:27> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x557fac03b5d0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x557fac03b5b8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x557fac03b598 <col:46> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x557fac03b6c8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x557fac03b660 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x557fac03b648 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x557fac03b628 <col:65> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x557fac03b6b0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x557fac03b698 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x557fac03b678 <col:84> '_Bool' lvalue Var 0x557fac0363a8 'b$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x557fac03b8a8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557fac03b708 <col:101> 'int' lvalue Var 0x557fac035da8 'b' 'int'
|   |   `-ParenExpr 0x557fac03b888 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x557fac03b858 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x557fac03b7c8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x557fac03b780 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x557fac03b768 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x557fac03b728 <col:106> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x557fac03b7b0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x557fac03b798 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x557fac03b748 <col:124> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x557fac03b828 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557fac03b7e8 <col:141> 'int' lvalue Var 0x557fac036520 'b$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x557fac03b840 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fac03b808 <col:153> 'int' lvalue Var 0x557fac036618 'b$w_buff1' 'int'
|   |-BinaryOperator 0x557fac03be00 <line:801:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x557fac03b910 <col:3> 'int' lvalue Var 0x557fac036520 'b$w_buff0' 'int'
|   | `-ConditionalOperator 0x557fac03bdd0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x557fac03bda0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557fac03bd88 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557fac03b930 <col:15> '_Bool' lvalue Var 0x557fac036bd0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x557fac03bdb8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557fac03b950 <col:31> 'int' lvalue Var 0x557fac036520 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x557fac03bd68 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x557fac03bd38 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x557fac03bb60 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x557fac03ba80 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x557fac03b9a8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x557fac03b990 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x557fac03b970 <col:45> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x557fac03ba60 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x557fac03b9f8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x557fac03b9e0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x557fac03b9c0 <col:64> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x557fac03ba48 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x557fac03ba30 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x557fac03ba10 <col:83> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x557fac03bb40 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x557fac03bad8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x557fac03bac0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x557fac03baa0 <col:102> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x557fac03bb28 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x557fac03bb10 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x557fac03baf0 <col:121> '_Bool' lvalue Var 0x557fac0363a8 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x557fac03bd20 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557fac03bb80 <col:138> 'int' lvalue Var 0x557fac036520 'b$w_buff0' 'int'
|   |       `-ParenExpr 0x557fac03bd00 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x557fac03bcd0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x557fac03bc40 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x557fac03bbf8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x557fac03bbe0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x557fac03bba0 <col:151> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x557fac03bc28 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x557fac03bc10 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x557fac03bbc0 <col:169> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x557fac03bca0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x557fac03bc60 <col:186> 'int' lvalue Var 0x557fac036520 'b$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x557fac03bcb8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x557fac03bc80 <col:198> 'int' lvalue Var 0x557fac036520 'b$w_buff0' 'int'
|   |-BinaryOperator 0x557fac03c330 <line:802:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x557fac03be20 <col:3> 'int' lvalue Var 0x557fac036618 'b$w_buff1' 'int'
|   | `-ConditionalOperator 0x557fac03c300 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x557fac03c2d0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557fac03c2b8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557fac03be40 <col:15> '_Bool' lvalue Var 0x557fac036bd0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x557fac03c2e8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557fac03be60 <col:31> 'int' lvalue Var 0x557fac036618 'b$w_buff1' 'int'
|   |   `-ParenExpr 0x557fac03c298 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x557fac03c268 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x557fac03c090 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x557fac03bf90 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x557fac03beb8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x557fac03bea0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x557fac03be80 <col:45> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x557fac03bf70 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x557fac03bf08 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x557fac03bef0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x557fac03bed0 <col:64> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x557fac03bf58 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x557fac03bf40 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x557fac03bf20 <col:83> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x557fac03c070 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x557fac03c008 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x557fac03bff0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x557fac03bfd0 <col:102> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x557fac03c058 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x557fac03c040 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x557fac03c020 <col:121> '_Bool' lvalue Var 0x557fac0363a8 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x557fac03c250 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557fac03c0b0 <col:138> 'int' lvalue Var 0x557fac036618 'b$w_buff1' 'int'
|   |       `-ParenExpr 0x557fac03c230 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x557fac03c200 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x557fac03c170 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x557fac03c128 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x557fac03c110 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x557fac03c0d0 <col:151> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x557fac03c158 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x557fac03c140 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x557fac03c0f0 <col:169> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x557fac03c1d0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x557fac03c190 <col:186> 'int' lvalue Var 0x557fac036618 'b$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x557fac03c1e8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x557fac03c1b0 <col:198> 'int' lvalue Var 0x557fac036618 'b$w_buff1' 'int'
|   |-BinaryOperator 0x557fac03c8d8 <line:803:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x557fac03c350 <col:3> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x557fac03c8c0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fac03c890 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x557fac03c848 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557fac03c830 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557fac03c370 <col:20> '_Bool' lvalue Var 0x557fac036bd0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557fac03c878 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557fac03c860 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557fac03c390 <col:36> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x557fac03c810 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x557fac03c7e0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x557fac03c5a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557fac03c4c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557fac03c3e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557fac03c3d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557fac03c3b0 <col:55> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557fac03c4a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557fac03c438 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557fac03c420 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557fac03c400 <col:74> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x557fac03c488 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557fac03c470 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557fac03c450 <col:93> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557fac03c580 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557fac03c518 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557fac03c500 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557fac03c4e0 <col:112> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x557fac03c568 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557fac03c550 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557fac03c530 <col:131> '_Bool' lvalue Var 0x557fac0363a8 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x557fac03c7c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557fac03c7b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557fac03c5c0 <col:148> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x557fac03c790 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x557fac03c760 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x557fac03c680 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557fac03c638 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557fac03c620 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557fac03c5e0 <col:166> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557fac03c668 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557fac03c650 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557fac03c600 <col:184> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x557fac03c718 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557fac03c6d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557fac03c6a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557fac03c748 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x557fac03c730 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x557fac03c6f8 <col:212> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557fac03cea0 <line:804:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x557fac03c8f8 <col:3> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557fac03ce88 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fac03ce58 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x557fac03ce10 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557fac03cdf8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557fac03c918 <col:20> '_Bool' lvalue Var 0x557fac036bd0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557fac03ce40 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557fac03ce28 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557fac03c938 <col:36> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x557fac03cdd8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x557fac03cda8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x557fac03cb48 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557fac03ca68 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557fac03c990 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557fac03c978 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557fac03c958 <col:55> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557fac03ca48 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557fac03c9e0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557fac03c9c8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557fac03c9a8 <col:74> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x557fac03ca30 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557fac03ca18 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557fac03c9f8 <col:93> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557fac03cb28 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557fac03cac0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557fac03caa8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557fac03ca88 <col:112> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x557fac03cb10 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557fac03caf8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557fac03cad8 <col:131> '_Bool' lvalue Var 0x557fac0363a8 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x557fac03cd90 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557fac03cd78 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557fac03cb68 <col:148> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x557fac03cd58 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x557fac03cd28 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x557fac03cc28 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557fac03cbe0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557fac03cbc8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557fac03cb88 <col:166> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557fac03cc10 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557fac03cbf8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557fac03cba8 <col:184> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x557fac03ccf8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557fac03cc78 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557fac03cc48 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557fac03cd10 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x557fac03ccd0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x557fac03cca0 <col:219> 'int' 0
|   |-BinaryOperator 0x557fac03d468 <line:805:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x557fac03cec0 <col:3> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x557fac03d450 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fac03d420 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x557fac03d3d8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557fac03d3c0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557fac03cee0 <col:20> '_Bool' lvalue Var 0x557fac036bd0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557fac03d408 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557fac03d3f0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557fac03cf00 <col:36> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x557fac03d3a0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x557fac03d370 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x557fac03d130 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557fac03d050 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557fac03cf58 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557fac03cf40 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557fac03cf20 <col:55> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557fac03d030 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557fac03cfa8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557fac03cf90 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557fac03cf70 <col:74> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x557fac03d018 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557fac03d000 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557fac03cfe0 <col:93> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557fac03d110 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557fac03d0a8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557fac03d090 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557fac03d070 <col:112> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x557fac03d0f8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557fac03d0e0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557fac03d0c0 <col:131> '_Bool' lvalue Var 0x557fac0363a8 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x557fac03d358 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557fac03d340 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557fac03d150 <col:148> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x557fac03d320 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x557fac03d2f0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x557fac03d210 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557fac03d1c8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557fac03d1b0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557fac03d170 <col:166> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557fac03d1f8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557fac03d1e0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557fac03d190 <col:184> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x557fac03d2a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557fac03d260 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557fac03d230 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557fac03d2d8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x557fac03d2c0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x557fac03d288 <col:212> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x557fac03da30 <line:806:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x557fac03d488 <col:3> '_Bool' lvalue Var 0x557fac0363a8 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x557fac03da18 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fac03d9e8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x557fac03d9a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557fac03d988 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557fac03d4a8 <col:20> '_Bool' lvalue Var 0x557fac036bd0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557fac03d9d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557fac03d9b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557fac03d4c8 <col:36> '_Bool' lvalue Var 0x557fac0363a8 'b$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x557fac03d968 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x557fac03d938 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x557fac03d6d8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557fac03d5f8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557fac03d520 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557fac03d508 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557fac03d4e8 <col:55> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557fac03d5d8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557fac03d570 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557fac03d558 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557fac03d538 <col:74> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x557fac03d5c0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557fac03d5a8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557fac03d588 <col:93> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557fac03d6b8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557fac03d650 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557fac03d638 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557fac03d618 <col:112> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x557fac03d6a0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557fac03d688 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557fac03d668 <col:131> '_Bool' lvalue Var 0x557fac0363a8 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x557fac03d920 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557fac03d908 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557fac03d6f8 <col:148> '_Bool' lvalue Var 0x557fac0363a8 'b$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x557fac03d8e8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x557fac03d8b8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x557fac03d7b8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557fac03d770 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557fac03d758 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557fac03d718 <col:166> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557fac03d7a0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557fac03d788 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557fac03d738 <col:184> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x557fac03d888 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557fac03d808 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557fac03d7d8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557fac03d8a0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x557fac03d860 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x557fac03d830 <col:219> 'int' 0
|   |-BinaryOperator 0x557fac03daa8 <line:807:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x557fac03da50 <col:3> 'int' lvalue Var 0x557fac035b68 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x557fac03da90 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557fac03da70 <col:25> 'int' lvalue Var 0x557fac035da8 'b' 'int'
|   |-BinaryOperator 0x557fac03dbd8 <line:808:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x557fac03dac8 <col:3> 'int' lvalue Var 0x557fac035da8 'b' 'int'
|   | `-ConditionalOperator 0x557fac03dba8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x557fac03db60 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557fac03db48 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557fac03dae8 <col:7> '_Bool' lvalue Var 0x557fac035e40 'b$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x557fac03db78 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557fac03db08 <col:25> 'int' lvalue Var 0x557fac035ec0 'b$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x557fac03db90 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x557fac03db28 <col:37> 'int' lvalue Var 0x557fac035da8 'b' 'int'
|   |-BinaryOperator 0x557fac03dc70 <line:809:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x557fac03dbf8 <col:3> '_Bool' lvalue Var 0x557fac035e40 'b$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x557fac03dc48 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x557fac03dc18 <col:28> 'int' 0
|   |-CallExpr 0x557fac03dcc8 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fac03dcb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac03dc90 <col:3> 'void ()' Function 0x557fabfdc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557fac03dd20 <line:811:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fac03dd08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac03dce8 <col:3> 'void ()' Function 0x557fabfdc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fac03e020 <line:812:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x557fac03dd40 <col:3> 'int' lvalue Var 0x557fac035da8 'b' 'int'
|   | `-ConditionalOperator 0x557fac03dff0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x557fac03de00 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x557fac03ddb8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x557fac03dda0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x557fac03dd60 <col:7> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x557fac03dde8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x557fac03ddd0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x557fac03dd80 <col:25> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x557fac03dfc0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557fac03de20 <col:42> 'int' lvalue Var 0x557fac036520 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x557fac03dfa0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x557fac03df70 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x557fac03dee0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x557fac03de98 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x557fac03de80 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x557fac03de40 <col:55> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x557fac03dec8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x557fac03deb0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x557fac03de60 <col:73> '_Bool' lvalue Var 0x557fac0363a8 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x557fac03df40 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557fac03df00 <col:90> 'int' lvalue Var 0x557fac036618 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x557fac03df58 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fac03df20 <col:102> 'int' lvalue Var 0x557fac035da8 'b' 'int'
|   |-BinaryOperator 0x557fac03e228 <line:813:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x557fac03e040 <col:3> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x557fac03e210 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fac03e1e0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x557fac03e100 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x557fac03e0b8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x557fac03e0a0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x557fac03e060 <col:20> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x557fac03e0e8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x557fac03e0d0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x557fac03e080 <col:38> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x557fac03e198 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557fac03e150 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557fac03e120 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x557fac03e1c8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557fac03e1b0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fac03e178 <col:66> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557fac03e510 <line:814:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x557fac03e248 <col:3> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557fac03e4f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fac03e4c8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x557fac03e3e8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x557fac03e308 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x557fac03e2c0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x557fac03e2a8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x557fac03e268 <col:20> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x557fac03e2f0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x557fac03e2d8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x557fac03e288 <col:38> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x557fac03e3c8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x557fac03e380 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x557fac03e368 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x557fac03e328 <col:56> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x557fac03e3b0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x557fac03e398 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x557fac03e348 <col:74> '_Bool' lvalue Var 0x557fac0363a8 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x557fac03e480 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557fac03e438 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557fac03e408 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x557fac03e4b0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557fac03e498 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fac03e460 <col:102> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x557fac03e718 <line:815:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x557fac03e530 <col:3> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x557fac03e700 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fac03e6d0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x557fac03e5f0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x557fac03e5a8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x557fac03e590 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x557fac03e550 <col:20> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x557fac03e5d8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x557fac03e5c0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x557fac03e570 <col:38> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x557fac03e688 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557fac03e640 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557fac03e610 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x557fac03e6b8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557fac03e6a0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fac03e668 <col:66> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x557fac03ea00 <line:816:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x557fac03e738 <col:3> '_Bool' lvalue Var 0x557fac0363a8 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x557fac03e9e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fac03e9b8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x557fac03e8d8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x557fac03e7f8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x557fac03e7b0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x557fac03e798 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x557fac03e758 <col:20> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x557fac03e7e0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x557fac03e7c8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x557fac03e778 <col:38> '_Bool' lvalue Var 0x557fac036150 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x557fac03e8b8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x557fac03e870 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x557fac03e858 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x557fac03e818 <col:56> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x557fac03e8a0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x557fac03e888 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x557fac03e838 <col:74> '_Bool' lvalue Var 0x557fac0363a8 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x557fac03e970 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557fac03e928 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557fac03e8f8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x557fac03e9a0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557fac03e988 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fac03e950 <col:102> '_Bool' lvalue Var 0x557fac0363a8 'b$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x557fac03ea58 <line:817:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fac03ea40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac03ea20 <col:3> 'void ()' Function 0x557fabfdc410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557fac03eab0 <line:818:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fac03ea98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac03ea78 <col:3> 'void ()' Function 0x557fabfdc350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fac03eb68 <line:819:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x557fac03ead0 <col:3> 'int' lvalue Var 0x557fac0356e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x557fac03eb48 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x557fac03eb30 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557fac03eaf0 <col:22> 'int' lvalue Var 0x557fac0356e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x557fac03eb10 <col:41> 'int' 1
|   |-CallExpr 0x557fac03ebc0 <line:820:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fac03eba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fac03eb88 <col:3> 'void ()' Function 0x557fabfdc410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x557fac03ec38 <line:821:3, col:36>
|     `-CallExpr 0x557fac03ec18 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x557fac03ec00 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x557fac03ebe0 <col:10> 'void *(void)' Function 0x557fabfdbe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x557fac03ed98 prev 0x557fac035430 <line:823:1, line:825:1> line:823:6 fence 'void ()'
| `-CompoundStmt 0x557fac03ee38 <line:824:1, line:825:1>
|-FunctionDecl 0x557fac03ee68 prev 0x557fac0354f0 <line:826:1, line:828:1> line:826:6 isync 'void ()'
| `-CompoundStmt 0x557fac03ef08 <line:827:1, line:828:1>
|-FunctionDecl 0x557fac03ef38 prev 0x557fac0355b0 <line:829:1, line:831:1> line:829:6 lwfence 'void ()'
| `-CompoundStmt 0x557fac03efd8 <line:830:1, line:831:1>
`-FunctionDecl 0x557fac03f058 <line:832:1, line:858:1> line:832:5 main 'int ()'
  `-CompoundStmt 0x557fac041068 <line:833:1, line:858:1>
    |-DeclStmt 0x557fac03f170 <line:834:3, col:18>
    | `-VarDecl 0x557fac03f108 <col:3, col:13> col:13 used t1035 'pthread_t':'unsigned long'
    |-CallExpr 0x557fac03f378 <line:835:3, col:54> 'int'
    | |-ImplicitCastExpr 0x557fac03f360 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557fac03f188 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x557fac01c8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x557fac03f1c8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x557fac03f1a8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x557fac03f108 't1035' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x557fac03f3b8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x557fac03f240 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x557fac03f218 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x557fac03f1e0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x557fac03f3d0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557fac03f260 <col:39> 'void *(void *)' Function 0x557fac036ce8 'P0' 'void *(void *)'
    | `-ParenExpr 0x557fac03f2e0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x557fac03f2b8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x557fac03f280 <col:52> 'int' 0
    |-DeclStmt 0x557fac03f460 <line:836:3, col:18>
    | `-VarDecl 0x557fac03f3f8 <col:3, col:13> col:13 used t1036 'pthread_t':'unsigned long'
    |-CallExpr 0x557fac03f608 <line:837:3, col:54> 'int'
    | |-ImplicitCastExpr 0x557fac03f5f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557fac03f478 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x557fac01c8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x557fac03f4b8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x557fac03f498 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x557fac03f3f8 't1036' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x557fac03f648 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x557fac03f530 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x557fac03f508 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x557fac03f4d0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x557fac03f660 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557fac03f550 <col:39> 'void *(void *)' Function 0x557fac038740 'P1' 'void *(void *)'
    | `-ParenExpr 0x557fac03f5d0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x557fac03f5a8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x557fac03f570 <col:52> 'int' 0
    |-DeclStmt 0x557fac03f6f0 <line:838:3, col:18>
    | `-VarDecl 0x557fac03f688 <col:3, col:13> col:13 used t1037 'pthread_t':'unsigned long'
    |-CallExpr 0x557fac03f898 <line:839:3, col:54> 'int'
    | |-ImplicitCastExpr 0x557fac03f880 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557fac03f708 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x557fac01c8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x557fac03f748 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x557fac03f728 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x557fac03f688 't1037' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x557fac03f8d8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x557fac03f7c0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x557fac03f798 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x557fac03f760 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x557fac03f8f0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557fac03f7e0 <col:39> 'void *(void *)' Function 0x557fac039aa8 'P2' 'void *(void *)'
    | `-ParenExpr 0x557fac03f860 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x557fac03f838 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x557fac03f800 <col:52> 'int' 0
    |-DeclStmt 0x557fac03f980 <line:840:3, col:18>
    | `-VarDecl 0x557fac03f918 <col:3, col:13> col:13 used t1038 'pthread_t':'unsigned long'
    |-CallExpr 0x557fac03fb28 <line:841:3, col:54> 'int'
    | |-ImplicitCastExpr 0x557fac03fb10 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557fac03f998 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x557fac01c8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x557fac03f9d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x557fac03f9b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x557fac03f918 't1038' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x557fac03fb68 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x557fac03fa50 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x557fac03fa28 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x557fac03f9f0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x557fac03fb80 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557fac03fa70 <col:39> 'void *(void *)' Function 0x557fac03ae28 'P3' 'void *(void *)'
    | `-ParenExpr 0x557fac03faf0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x557fac03fac8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x557fac03fa90 <col:52> 'int' 0
    |-CallExpr 0x557fac03fbd0 <line:842:3, col:27> 'void'
    | `-ImplicitCastExpr 0x557fac03fbb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557fac03fb98 <col:3> 'void ()' Function 0x557fabfdc350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x557fac03fca0 <line:843:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x557fac03fbf0 <col:3> '_Bool' lvalue Var 0x557fac036708 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x557fac03fc88 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x557fac03fc68 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x557fac03fc50 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x557fac03fc10 <col:21> 'int' lvalue Var 0x557fac0356e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x557fac03fc30 <col:41> 'int' 4
    |-CallExpr 0x557fac03fcf8 <line:844:3, col:25> 'void'
    | `-ImplicitCastExpr 0x557fac03fce0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557fac03fcc0 <col:3> 'void ()' Function 0x557fabfdc410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x557fac03fd70 <line:845:3, col:36> 'void'
    | |-ImplicitCastExpr 0x557fac03fd58 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557fac03fd18 <col:3> 'void (int)' Function 0x557fabfdbca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x557fac03fdb0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x557fac03fd98 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x557fac03fd38 <col:21> '_Bool' lvalue Var 0x557fac036708 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x557fac03fe00 <line:846:3, col:27> 'void'
    | `-ImplicitCastExpr 0x557fac03fde8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557fac03fdc8 <col:3> 'void ()' Function 0x557fabfdc350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x557fac0400f8 <line:847:3, col:103> 'int' '='
    | |-DeclRefExpr 0x557fac03fe20 <col:3> 'int' lvalue Var 0x557fac035da8 'b' 'int'
    | `-ConditionalOperator 0x557fac0400c8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x557fac03fee0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x557fac03fe98 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x557fac03fe80 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x557fac03fe40 <col:7> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x557fac03fec8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x557fac03feb0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x557fac03fe60 <col:25> '_Bool' lvalue Var 0x557fac035f70 'b$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x557fac0400b0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x557fac03ff00 <col:42> 'int' lvalue Var 0x557fac036520 'b$w_buff0' 'int'
    |   `-ParenExpr 0x557fac040090 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x557fac040060 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x557fac03ffc0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x557fac03ff78 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x557fac03ff60 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x557fac03ff20 <col:55> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x557fac03ffa8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x557fac03ff90 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x557fac03ff40 <col:73> '_Bool' lvalue Var 0x557fac0361c8 'b$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x557fac040030 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x557fac03ffe0 <col:90> 'int' lvalue Var 0x557fac036618 'b$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x557fac040048 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x557fac040010 <col:102> 'int' lvalue Var 0x557fac035da8 'b' 'int'
    |-BinaryOperator 0x557fac040300 <line:848:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x557fac040118 <col:3> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x557fac0402e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x557fac0402b8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x557fac0401d8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x557fac040190 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x557fac040178 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x557fac040138 <col:20> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x557fac0401c0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x557fac0401a8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x557fac040158 <col:38> '_Bool' lvalue Var 0x557fac035f70 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x557fac040270 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x557fac040228 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x557fac0401f8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x557fac0402a0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x557fac040288 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x557fac040250 <col:66> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
    |-BinaryOperator 0x557fac0405e8 <line:849:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x557fac040320 <col:3> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x557fac0405d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x557fac0405a0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x557fac0404c0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x557fac0403e0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x557fac040398 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x557fac040380 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x557fac040340 <col:20> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x557fac0403c8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x557fac0403b0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x557fac040360 <col:38> '_Bool' lvalue Var 0x557fac035f70 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x557fac0404a0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x557fac040458 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x557fac040440 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x557fac040400 <col:56> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x557fac040488 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x557fac040470 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x557fac040420 <col:74> '_Bool' lvalue Var 0x557fac0361c8 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x557fac040558 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x557fac040510 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x557fac0404e0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x557fac040588 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x557fac040570 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x557fac040538 <col:102> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
    |-BinaryOperator 0x557fac0407f0 <line:850:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x557fac040608 <col:3> '_Bool' lvalue Var 0x557fac035f70 'b$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x557fac0407d8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x557fac0407a8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x557fac0406c8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x557fac040680 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x557fac040668 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x557fac040628 <col:20> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x557fac0406b0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x557fac040698 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x557fac040648 <col:38> '_Bool' lvalue Var 0x557fac035f70 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x557fac040760 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x557fac040718 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x557fac0406e8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x557fac040790 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x557fac040778 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x557fac040740 <col:66> '_Bool' lvalue Var 0x557fac035f70 'b$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x557fac040ad8 <line:851:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x557fac040810 <col:3> '_Bool' lvalue Var 0x557fac0361c8 'b$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x557fac040ac0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x557fac040a90 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x557fac0409b0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x557fac0408d0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x557fac040888 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x557fac040870 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x557fac040830 <col:20> '_Bool' lvalue Var 0x557fac036598 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x557fac0408b8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x557fac0408a0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x557fac040850 <col:38> '_Bool' lvalue Var 0x557fac035f70 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x557fac040990 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x557fac040948 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x557fac040930 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x557fac0408f0 <col:56> '_Bool' lvalue Var 0x557fac036690 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x557fac040978 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x557fac040960 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x557fac040910 <col:74> '_Bool' lvalue Var 0x557fac0361c8 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x557fac040a48 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x557fac040a00 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x557fac0409d0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x557fac040a78 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x557fac040a60 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x557fac040a28 <col:102> '_Bool' lvalue Var 0x557fac0361c8 'b$r_buff1_thd0' '_Bool'
    |-CallExpr 0x557fac040b30 <line:852:3, col:25> 'void'
    | `-ImplicitCastExpr 0x557fac040b18 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557fac040af8 <col:3> 'void ()' Function 0x557fabfdc410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x557fac040b88 <line:853:3, col:27> 'void'
    | `-ImplicitCastExpr 0x557fac040b70 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557fac040b50 <col:3> 'void ()' Function 0x557fabfdc350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x557fac040ef0 <line:854:3, col:141> '_Bool' '='
    | |-DeclRefExpr 0x557fac040ba8 <col:3> '_Bool' lvalue Var 0x557fac036780 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x557fac040ed8 <col:21, col:141> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x557fac040ec0 <col:21, col:141> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x557fac040ea0 <col:22, col:141> 'int'
    |       `-BinaryOperator 0x557fac040e80 <col:23, col:140> 'int' '&&'
    |         |-BinaryOperator 0x557fac040de8 <col:23, col:112> 'int' '&&'
    |         | |-BinaryOperator 0x557fac040d50 <col:23, col:84> 'int' '&&'
    |         | | |-BinaryOperator 0x557fac040cb8 <col:23, col:56> 'int' '&&'
    |         | | | |-BinaryOperator 0x557fac040c20 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x557fac040c08 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x557fac040bc8 <col:23> 'int' lvalue Var 0x557fac0369a0 'y' 'int'
    |         | | | | `-IntegerLiteral 0x557fac040be8 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x557fac040c98 <col:33, col:56> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x557fac040c80 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x557fac040c40 <col:33> 'int' lvalue Var 0x557fac035808 '__unbuffered_p0_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x557fac040c60 <col:56> 'int' 0
    |         | | `-BinaryOperator 0x557fac040d30 <col:61, col:84> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x557fac040d18 <col:61> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x557fac040cd8 <col:61> 'int' lvalue Var 0x557fac035928 '__unbuffered_p2_EAX' 'int'
    |         | |   `-IntegerLiteral 0x557fac040cf8 <col:84> 'int' 0
    |         | `-BinaryOperator 0x557fac040dc8 <col:89, col:112> 'int' '=='
    |         |   |-ImplicitCastExpr 0x557fac040db0 <col:89> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x557fac040d70 <col:89> 'int' lvalue Var 0x557fac035a48 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x557fac040d90 <col:112> 'int' 1
    |         `-BinaryOperator 0x557fac040e60 <col:117, col:140> 'int' '=='
    |           |-ImplicitCastExpr 0x557fac040e48 <col:117> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x557fac040e08 <col:117> 'int' lvalue Var 0x557fac035b68 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x557fac040e28 <col:140> 'int' 0
    |-CallExpr 0x557fac040f48 <line:855:3, col:25> 'void'
    | `-ImplicitCastExpr 0x557fac040f30 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557fac040f10 <col:3> 'void ()' Function 0x557fabfdc410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x557fac040fc0 <line:856:3, col:36> 'void'
    | |-ImplicitCastExpr 0x557fac040fa8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557fac040f68 <col:3> 'void (int)' Function 0x557fabfdc0d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x557fac041020 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x557fac040fe8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x557fac040f88 <col:21> '_Bool' lvalue Var 0x557fac036780 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x557fac041058 <line:857:3, col:10>
      `-IntegerLiteral 0x557fac041038 <col:10> 'int' 0
