TranslationUnitDecl 0x55e1a8471f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55e1a8472848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55e1a8472520 '__int128'
|-TypedefDecl 0x55e1a84728b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55e1a8472540 'unsigned __int128'
|-TypedefDecl 0x55e1a8472bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55e1a8472990 'struct __NSConstantString_tag'
|   `-Record 0x55e1a8472910 '__NSConstantString_tag'
|-TypedefDecl 0x55e1a8472c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55e1a8472c20 'char *'
|   `-BuiltinType 0x55e1a8472020 'char'
|-TypedefDecl 0x55e1a84b5a70 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55e1a8472f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55e1a8472d40 'struct __va_list_tag'
|     `-Record 0x55e1a8472cc0 '__va_list_tag'
|-TypedefDecl 0x55e1a84b5ae0 <termination-libowfat/strtoul_true-termination.c.i:1:1, col:18> col:18 ptrdiff_t 'long'
| `-BuiltinType 0x55e1a84720a0 'long'
|-TypedefDecl 0x55e1a84b5b50 <line:2:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55e1a8472140 'unsigned long'
|-TypedefDecl 0x55e1a84b5bc0 <line:3:1, col:28> col:28 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x55e1a8472100 'unsigned short'
|-TypedefDecl 0x55e1a84b5c30 <line:4:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55e1a8472040 'signed char'
|-TypedefDecl 0x55e1a84b5ca0 <line:5:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55e1a84720e0 'unsigned char'
|-TypedefDecl 0x55e1a84b5d10 <line:6:1, col:19> col:19 __int16_t 'short'
| `-BuiltinType 0x55e1a8472060 'short'
|-TypedefDecl 0x55e1a84b5d80 <line:7:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55e1a8472100 'unsigned short'
|-TypedefDecl 0x55e1a84b5df0 <line:8:1, col:13> col:13 __int32_t 'int'
| `-BuiltinType 0x55e1a8472080 'int'
|-TypedefDecl 0x55e1a84b5e60 <line:9:1, col:22> col:22 referenced __uint32_t 'unsigned int'
| `-BuiltinType 0x55e1a8472120 'unsigned int'
|-TypedefDecl 0x55e1a84b5ed0 <line:10:1, col:18> col:18 __int64_t 'long'
| `-BuiltinType 0x55e1a84720a0 'long'
|-TypedefDecl 0x55e1a84b5f40 <line:11:1, col:27> col:27 __uint64_t 'unsigned long'
| `-BuiltinType 0x55e1a8472140 'unsigned long'
|-TypedefDecl 0x55e1a84b5fb0 <line:12:1, col:21> col:21 __int_least8_t 'signed char'
| `-BuiltinType 0x55e1a8472040 'signed char'
|-TypedefDecl 0x55e1a84b6020 <line:13:1, col:23> col:23 __uint_least8_t 'unsigned char'
| `-BuiltinType 0x55e1a84720e0 'unsigned char'
|-TypedefDecl 0x55e1a84b6090 <line:14:1, col:19> col:19 __int_least16_t 'short'
| `-BuiltinType 0x55e1a8472060 'short'
|-TypedefDecl 0x55e1a84b6100 <line:15:1, col:28> col:28 __uint_least16_t 'unsigned short'
| `-BuiltinType 0x55e1a8472100 'unsigned short'
|-TypedefDecl 0x55e1a84b6170 <line:16:1, col:13> col:13 __int_least32_t 'int'
| `-BuiltinType 0x55e1a8472080 'int'
|-TypedefDecl 0x55e1a84b61e0 <line:17:1, col:22> col:22 __uint_least32_t 'unsigned int'
| `-BuiltinType 0x55e1a8472120 'unsigned int'
|-TypedefDecl 0x55e1a84b6250 <line:18:1, col:18> col:18 __int_least64_t 'long'
| `-BuiltinType 0x55e1a84720a0 'long'
|-TypedefDecl 0x55e1a84b62c0 <line:19:1, col:27> col:27 __uint_least64_t 'unsigned long'
| `-BuiltinType 0x55e1a8472140 'unsigned long'
|-TypedefDecl 0x55e1a84b6330 <line:20:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55e1a84720a0 'long'
|-TypedefDecl 0x55e1a84b63a0 <line:21:1, col:27> col:27 __uintptr_t 'unsigned long'
| `-BuiltinType 0x55e1a8472140 'unsigned long'
|-TypedefDecl 0x55e1a84b6410 <line:22:1, col:15> col:15 referenced _LOCK_T 'void *'
| `-PointerType 0x55e1a84727a0 'void *'
|   `-BuiltinType 0x55e1a8471fe0 'void'
|-FunctionDecl 0x55e1a84b6620 <line:23:1, col:34> col:6 __cygwin_lock_init 'void (_LOCK_T *)'
| `-ParmVarDecl 0x55e1a84b6510 <col:25, col:33> col:34 '_LOCK_T *'
|-FunctionDecl 0x55e1a84b67b0 <line:24:1, col:44> col:6 __cygwin_lock_init_recursive 'void (_LOCK_T *)'
| `-ParmVarDecl 0x55e1a84b6720 <col:35, col:43> col:44 '_LOCK_T *'
|-FunctionDecl 0x55e1a84b68f8 <line:25:1, col:34> col:6 __cygwin_lock_fini 'void (_LOCK_T *)'
| `-ParmVarDecl 0x55e1a84b6868 <col:25, col:33> col:34 '_LOCK_T *'
|-FunctionDecl 0x55e1a84d9730 <line:26:1, col:34> col:6 __cygwin_lock_lock 'void (_LOCK_T *)'
| `-ParmVarDecl 0x55e1a84b69b0 <col:25, col:33> col:34 '_LOCK_T *'
|-FunctionDecl 0x55e1a84d98f8 <line:27:1, col:36> col:5 __cygwin_lock_trylock 'int (_LOCK_T *)'
| `-ParmVarDecl 0x55e1a84d97e8 <col:27, col:35> col:36 '_LOCK_T *'
|-FunctionDecl 0x55e1a84d9a40 <line:28:1, col:36> col:6 __cygwin_lock_unlock 'void (_LOCK_T *)'
| `-ParmVarDecl 0x55e1a84d99b0 <col:27, col:35> col:36 '_LOCK_T *'
|-TypedefDecl 0x55e1a84d9b00 <line:29:1, col:14> col:14 referenced _off_t 'long'
| `-BuiltinType 0x55e1a84720a0 'long'
|-TypedefDecl 0x55e1a84d9b70 <line:30:1, col:15> col:15 __dev_t 'short'
| `-BuiltinType 0x55e1a8472060 'short'
|-TypedefDecl 0x55e1a84d9be0 <line:31:1, col:24> col:24 __uid_t 'unsigned short'
| `-BuiltinType 0x55e1a8472100 'unsigned short'
|-TypedefDecl 0x55e1a84d9c50 <line:32:1, col:24> col:24 __gid_t 'unsigned short'
| `-BuiltinType 0x55e1a8472100 'unsigned short'
|-TypedefDecl 0x55e1a84d9cc0 <line:33:15, col:33> col:33 referenced _off64_t 'long long'
| `-BuiltinType 0x55e1a84720c0 'long long'
|-TypedefDecl 0x55e1a84d9d30 <line:34:1, col:14> col:14 referenced _fpos_t 'long'
| `-BuiltinType 0x55e1a84720a0 'long'
|-TypedefDecl 0x55e1a84d9dc8 <line:35:1, col:18> col:18 referenced _fpos64_t '_off64_t':'long long'
| `-TypedefType 0x55e1a84d9d90 '_off64_t' sugar
|   |-Typedef 0x55e1a84d9cc0 '_off64_t'
|   `-BuiltinType 0x55e1a84720c0 'long long'
|-TypedefDecl 0x55e1a84d9e38 <line:36:1, col:25> col:25 referenced _ssize_t 'long'
| `-BuiltinType 0x55e1a84720a0 'long'
|-TypedefDecl 0x55e1a84d9ea8 <line:37:1, col:22> col:22 referenced wint_t 'unsigned int'
| `-BuiltinType 0x55e1a8472120 'unsigned int'
|-RecordDecl 0x55e1a84d9f00 <line:38:9, line:46:1> line:38:9 struct definition
| |-FieldDecl 0x55e1a84d9fc0 <line:40:3, col:7> col:7 __count 'int'
| |-RecordDecl 0x55e1a84da010 <line:41:3, line:45:3> line:41:3 union definition
| | |-FieldDecl 0x55e1a84da0f8 <line:43:5, col:12> col:12 __wch 'wint_t':'unsigned int'
| | `-FieldDecl 0x55e1a84da1e8 <line:44:5, col:27> col:19 __wchb 'unsigned char [4]'
| `-FieldDecl 0x55e1a84da2a0 <line:41:3, line:45:5> col:5 __value 'union (anonymous union at termination-libowfat/strtoul_true-termination.c.i:41:3)':'union _mbstate_t::(anonymous at termination-libowfat/strtoul_true-termination.c.i:41:3)'
|-TypedefDecl 0x55e1a84da350 <line:38:1, line:46:3> col:3 referenced _mbstate_t 'struct _mbstate_t':'_mbstate_t'
| `-ElaboratedType 0x55e1a84da2f0 'struct _mbstate_t' sugar
|   `-RecordType 0x55e1a84d9f80 '_mbstate_t'
|     `-Record 0x55e1a84d9f00 ''
|-TypedefDecl 0x55e1a84da3d0 <line:47:1, col:17> col:17 referenced _flock_t '_LOCK_T':'void *'
| `-TypedefType 0x55e1a84b6470 '_LOCK_T' sugar
|   |-Typedef 0x55e1a84b6410 '_LOCK_T'
|   `-PointerType 0x55e1a84727a0 'void *'
|     `-BuiltinType 0x55e1a8471fe0 'void'
|-TypedefDecl 0x55e1a84da440 <line:48:1, col:15> col:15 _iconv_t 'void *'
| `-PointerType 0x55e1a84727a0 'void *'
|   `-BuiltinType 0x55e1a8471fe0 'void'
|-TypedefDecl 0x55e1a84da4b0 <line:49:1, col:22> col:22 referenced __ULong 'unsigned int'
| `-BuiltinType 0x55e1a8472120 'unsigned int'
|-RecordDecl 0x55e1a84da508 <line:50:1, col:8> col:8 struct _reent
|-RecordDecl 0x55e1a84da5b8 <line:51:1, line:56:1> line:51:8 struct _Bigint definition
| |-FieldDecl 0x55e1a84da768 <line:53:3, col:19> col:19 _next 'struct _Bigint *'
| |-FieldDecl 0x55e1a84da7d0 <line:54:3, col:7> col:7 _k 'int'
| |-FieldDecl 0x55e1a84da838 <col:3, col:11> col:11 _maxwds 'int'
| |-FieldDecl 0x55e1a84da8a0 <col:3, col:20> col:20 _sign 'int'
| |-FieldDecl 0x55e1a84da908 <col:3, col:27> col:27 _wds 'int'
| `-FieldDecl 0x55e1a84daa60 <line:55:3, col:15> col:11 _x '__ULong [1]'
|-RecordDecl 0x55e1a84daab0 <line:57:1, line:68:1> line:57:8 struct __tm definition
| |-FieldDecl 0x55e1a84dab70 <line:59:3, col:7> col:7 __tm_sec 'int'
| |-FieldDecl 0x55e1a84dabd8 <line:60:3, col:7> col:7 __tm_min 'int'
| |-FieldDecl 0x55e1a84dac40 <line:61:3, col:7> col:7 __tm_hour 'int'
| |-FieldDecl 0x55e1a84daca8 <line:62:3, col:7> col:7 __tm_mday 'int'
| |-FieldDecl 0x55e1a84dad10 <line:63:3, col:7> col:7 __tm_mon 'int'
| |-FieldDecl 0x55e1a84dad78 <line:64:3, col:7> col:7 __tm_year 'int'
| |-FieldDecl 0x55e1a84dade0 <line:65:3, col:7> col:7 __tm_wday 'int'
| |-FieldDecl 0x55e1a84dae48 <line:66:3, col:7> col:7 __tm_yday 'int'
| `-FieldDecl 0x55e1a84daeb0 <line:67:3, col:7> col:7 __tm_isdst 'int'
|-RecordDecl 0x55e1a84daf00 <line:69:1, line:74:1> line:69:8 struct _on_exit_args definition
| |-FieldDecl 0x55e1a84db048 <line:70:2, col:19> col:9 _fnargs 'void *[32]'
| |-FieldDecl 0x55e1a84db0f8 <line:71:2, col:23> col:9 _dso_handle 'void *[32]'
| |-FieldDecl 0x55e1a84db158 <line:72:2, col:10> col:10 _fntypes '__ULong':'unsigned int'
| `-FieldDecl 0x55e1a84db1b8 <line:73:2, col:10> col:10 _is_cxa '__ULong':'unsigned int'
|-RecordDecl 0x55e1a84db208 <line:75:1, line:80:1> line:75:8 struct _atexit definition
| |-FieldDecl 0x55e1a84db388 <line:76:2, col:18> col:18 _next 'struct _atexit *'
| |-FieldDecl 0x55e1a84db3f0 <line:77:2, col:6> col:6 _ind 'int'
| |-FieldDecl 0x55e1a84db680 <line:78:2, col:23> col:9 _fns 'void (*[32])(void)'
| `-FieldDecl 0x55e1a84db750 <line:79:9, col:30> col:30 _on_exit_args 'struct _on_exit_args':'struct _on_exit_args'
|-RecordDecl 0x55e1a84db7a0 <line:81:1, line:84:1> line:81:8 struct __sbuf definition
| |-FieldDecl 0x55e1a84db898 <line:82:2, col:17> col:17 _base 'unsigned char *'
| `-FieldDecl 0x55e1a84db900 <line:83:2, col:6> col:6 _size 'int'
|-RecordDecl 0x55e1a84db950 <line:85:1, line:110:1> line:85:8 struct __sFILE definition
| |-FieldDecl 0x55e1a84dba10 <line:86:3, col:18> col:18 _p 'unsigned char *'
| |-FieldDecl 0x55e1a84dba78 <line:87:3, col:7> col:7 _r 'int'
| |-FieldDecl 0x55e1a84dbae0 <line:88:3, col:7> col:7 _w 'int'
| |-FieldDecl 0x55e1a84dbb48 <line:89:3, col:9> col:9 _flags 'short'
| |-FieldDecl 0x55e1a84dbbb0 <line:90:3, col:9> col:9 _file 'short'
| |-FieldDecl 0x55e1a84dbc58 <line:91:3, col:17> col:17 _bf 'struct __sbuf':'struct __sbuf'
| |-FieldDecl 0x55e1a84dbcc0 <line:92:3, col:7> col:7 _lbfsize 'int'
| |-FieldDecl 0x55e1a84dbd28 <line:93:3, col:10> col:10 _cookie 'void *'
| |-FieldDecl 0x55e1a84dc278 <line:94:3, col:42> col:42 _read '_ssize_t (*)(struct _reent *, void *, char *, size_t) __attribute__((cdecl))'
| |-FieldDecl 0x55e1a84dc6c8 <line:95:3, col:42> col:42 _write '_ssize_t (*)(struct _reent *, void *, const char *, size_t) __attribute__((cdecl))'
| |-FieldDecl 0x55e1a84e3398 <line:96:3, col:41> col:41 _seek '_fpos_t (*)(struct _reent *, void *, _fpos_t, int) __attribute__((cdecl))'
| |-FieldDecl 0x55e1a84e36d0 <line:97:3, col:37> col:37 _close 'int (*)(struct _reent *, void *) __attribute__((cdecl))'
| |-FieldDecl 0x55e1a84e3740 <line:98:3, col:17> col:17 _ub 'struct __sbuf':'struct __sbuf'
| |-FieldDecl 0x55e1a84e37a8 <line:99:3, col:18> col:18 _up 'unsigned char *'
| |-FieldDecl 0x55e1a84e3810 <line:100:3, col:7> col:7 _ur 'int'
| |-FieldDecl 0x55e1a84e3908 <line:101:3, col:24> col:17 _ubuf 'unsigned char [3]'
| |-FieldDecl 0x55e1a84e39f8 <line:102:3, col:24> col:17 _nbuf 'unsigned char [1]'
| |-FieldDecl 0x55e1a84e3a68 <line:103:3, col:17> col:17 _lb 'struct __sbuf':'struct __sbuf'
| |-FieldDecl 0x55e1a84e3ad0 <line:104:3, col:7> col:7 _blksize 'int'
| |-FieldDecl 0x55e1a84e3b58 <line:105:3, col:10> col:10 _offset '_off_t':'long'
| |-FieldDecl 0x55e1a84e3bd0 <line:106:3, col:18> col:18 _data 'struct _reent *'
| |-FieldDecl 0x55e1a84e3c58 <line:107:3, col:12> col:12 _lock '_flock_t':'void *'
| |-FieldDecl 0x55e1a84e3ce8 <line:108:3, col:14> col:14 _mbstate '_mbstate_t':'_mbstate_t'
| `-FieldDecl 0x55e1a84e3d50 <line:109:3, col:7> col:7 _flags2 'int'
|-RecordDecl 0x55e1a84e3da0 <line:111:1, line:137:1> line:111:8 struct __sFILE64 definition
| |-FieldDecl 0x55e1a84e3e60 <line:112:3, col:18> col:18 _p 'unsigned char *'
| |-FieldDecl 0x55e1a84e3ec8 <line:113:3, col:7> col:7 _r 'int'
| |-FieldDecl 0x55e1a84e3f30 <line:114:3, col:7> col:7 _w 'int'
| |-FieldDecl 0x55e1a84e3fb8 <line:115:3, col:9> col:9 _flags 'short'
| |-FieldDecl 0x55e1a84e4020 <line:116:3, col:9> col:9 _file 'short'
| |-FieldDecl 0x55e1a84e4090 <line:117:3, col:17> col:17 _bf 'struct __sbuf':'struct __sbuf'
| |-FieldDecl 0x55e1a84e40f8 <line:118:3, col:7> col:7 _lbfsize 'int'
| |-FieldDecl 0x55e1a84e4170 <line:119:3, col:18> col:18 _data 'struct _reent *'
| |-FieldDecl 0x55e1a84e41d8 <line:120:3, col:10> col:10 _cookie 'void *'
| |-FieldDecl 0x55e1a84e44b0 <line:121:3, col:42> col:42 _read '_ssize_t (*)(struct _reent *, void *, char *, size_t) __attribute__((cdecl))'
| |-FieldDecl 0x55e1a84e4788 <line:122:3, col:42> col:42 _write '_ssize_t (*)(struct _reent *, void *, const char *, size_t) __attribute__((cdecl))'
| |-FieldDecl 0x55e1a84e4a60 <line:123:3, col:41> col:41 _seek '_fpos_t (*)(struct _reent *, void *, _fpos_t, int) __attribute__((cdecl))'
| |-FieldDecl 0x55e1a84e4c38 <line:124:3, col:37> col:37 _close 'int (*)(struct _reent *, void *) __attribute__((cdecl))'
| |-FieldDecl 0x55e1a84e4ca8 <line:125:3, col:17> col:17 _ub 'struct __sbuf':'struct __sbuf'
| |-FieldDecl 0x55e1a84e4d10 <line:126:3, col:18> col:18 _up 'unsigned char *'
| |-FieldDecl 0x55e1a84e4d78 <line:127:3, col:7> col:7 _ur 'int'
| |-FieldDecl 0x55e1a84e4e28 <line:128:3, col:24> col:17 _ubuf 'unsigned char [3]'
| |-FieldDecl 0x55e1a84e4ed8 <line:129:3, col:24> col:17 _nbuf 'unsigned char [1]'
| |-FieldDecl 0x55e1a84e4f48 <line:130:3, col:17> col:17 _lb 'struct __sbuf':'struct __sbuf'
| |-FieldDecl 0x55e1a84e4fc8 <line:131:3, col:7> col:7 _blksize 'int'
| |-FieldDecl 0x55e1a84e5030 <line:132:3, col:7> col:7 _flags2 'int'
| |-FieldDecl 0x55e1a84e5090 <line:133:3, col:12> col:12 _offset '_off64_t':'long long'
| |-FieldDecl 0x55e1a84e5508 <line:134:3, col:43> col:43 _seek64 '_fpos64_t (*)(struct _reent *, void *, _fpos64_t, int) __attribute__((cdecl))'
| |-FieldDecl 0x55e1a84e5568 <line:135:3, col:12> col:12 _lock '_flock_t':'void *'
| `-FieldDecl 0x55e1a84e55c8 <line:136:3, col:14> col:14 _mbstate '_mbstate_t':'_mbstate_t'
|-TypedefDecl 0x55e1a84e5678 <line:138:1, col:26> col:26 referenced __FILE 'struct __sFILE64':'struct __sFILE64'
| `-ElaboratedType 0x55e1a84e5620 'struct __sFILE64' sugar
|   `-RecordType 0x55e1a84e3e20 'struct __sFILE64'
|     `-Record 0x55e1a84e3da0 '__sFILE64'
|-RecordDecl 0x55e1a84e56d0 <line:139:1, line:144:1> line:139:8 struct _glue definition
| |-FieldDecl 0x55e1a84e5848 <line:141:3, col:17> col:17 _next 'struct _glue *'
| |-FieldDecl 0x55e1a84e58b0 <line:142:3, col:7> col:7 _niobs 'int'
| `-FieldDecl 0x55e1a84e59a0 <line:143:3, col:11> col:11 _iobs '__FILE *'
|-RecordDecl 0x55e1a84e59f0 <line:145:1, line:149:1> line:145:8 struct _rand48 definition
| |-FieldDecl 0x55e1a84e5b38 <line:146:3, col:25> col:18 _seed 'unsigned short [3]'
| |-FieldDecl 0x55e1a84e5be8 <line:147:3, col:25> col:18 _mult 'unsigned short [3]'
| `-FieldDecl 0x55e1a84e5c50 <line:148:3, col:18> col:18 _add 'unsigned short'
|-RecordDecl 0x55e1a84e5ca0 prev 0x55e1a84da508 <line:150:1, line:201:1> line:150:8 struct _reent definition
| |-FieldDecl 0x55e1a84e5d38 <line:152:3, col:7> col:7 _errno 'int'
| |-FieldDecl 0x55e1a84e5d98 <line:153:3, col:11> col:11 _stdin '__FILE *'
| |-FieldDecl 0x55e1a84e5df8 <col:3, col:20> col:20 _stdout '__FILE *'
| |-FieldDecl 0x55e1a84e5e58 <col:3, col:30> col:30 _stderr '__FILE *'
| |-FieldDecl 0x55e1a84e5ec0 <line:154:3, col:7> col:7 _inc 'int'
| |-FieldDecl 0x55e1a84e5fc0 <line:155:3, col:21> col:8 _emergency 'char [25]'
| |-FieldDecl 0x55e1a84e6028 <line:156:3, col:7> col:7 _current_category 'int'
| |-FieldDecl 0x55e1a84e6090 <line:157:3, col:15> col:15 _current_locale 'const char *'
| |-FieldDecl 0x55e1a84e60f8 <line:158:3, col:7> col:7 __sdidinit 'int'
| |-FieldDecl 0x55e1a84e63a0 <line:159:3, col:38> col:38 __cleanup 'void (*)(struct _reent *) __attribute__((cdecl))'
| |-FieldDecl 0x55e1a84e6418 <line:160:3, col:19> col:19 _result 'struct _Bigint *'
| |-FieldDecl 0x55e1a84e6480 <line:161:3, col:7> col:7 _result_k 'int'
| |-FieldDecl 0x55e1a84e64f8 <line:162:3, col:19> col:19 _p5s 'struct _Bigint *'
| |-FieldDecl 0x55e1a84e65d8 <line:163:3, col:20> col:20 _freelist 'struct _Bigint **'
| |-FieldDecl 0x55e1a84e6640 <line:164:3, col:7> col:7 _cvtlen 'int'
| |-FieldDecl 0x55e1a84e66a8 <line:165:3, col:9> col:9 _cvtbuf 'char *'
| |-RecordDecl 0x55e1a84e66f8 <line:166:3, line:195:5> line:166:3 union definition
| | |-RecordDecl 0x55e1a84e67a8 <line:168:7, line:189:9> line:168:7 struct definition
| | | |-FieldDecl 0x55e1a84e6870 <line:170:11, col:24> col:24 _unused_rand 'unsigned int'
| | | |-FieldDecl 0x55e1a84e68d8 <line:171:11, col:18> col:18 _strtok_last 'char *'
| | | |-FieldDecl 0x55e1a84e69c0 <line:172:11, col:31> col:16 _asctime_buf 'char [26]'
| | | |-FieldDecl 0x55e1a84e6a68 <line:173:11, col:23> col:23 _localtime_buf 'struct __tm':'struct __tm'
| | | |-FieldDecl 0x55e1a84e6ad0 <line:174:11, col:15> col:15 _gamma_signgam 'int'
| | | |-FieldDecl 0x55e1a84e6b38 <line:175:25, col:44> col:44 _rand_next 'unsigned long long'
| | | |-FieldDecl 0x55e1a84e6be8 <line:176:11, col:26> col:26 _r48 'struct _rand48':'struct _rand48'
| | | |-FieldDecl 0x55e1a84e6c48 <line:177:11, col:22> col:22 _mblen_state '_mbstate_t':'_mbstate_t'
| | | |-FieldDecl 0x55e1a84e6ca8 <line:178:11, col:22> col:22 _mbtowc_state '_mbstate_t':'_mbstate_t'
| | | |-FieldDecl 0x55e1a84e6d08 <line:179:11, col:22> col:22 _wctomb_state '_mbstate_t':'_mbstate_t'
| | | |-FieldDecl 0x55e1a84e6df0 <line:180:11, col:27> col:16 _l64a_buf 'char [8]'
| | | |-FieldDecl 0x55e1a84e6ee0 <line:181:11, col:30> col:16 _signal_buf 'char [24]'
| | | |-FieldDecl 0x55e1a84e6f48 <line:182:11, col:15> col:15 _getdate_err 'int'
| | | |-FieldDecl 0x55e1a84e6fd0 <line:183:11, col:22> col:22 _mbrlen_state '_mbstate_t':'_mbstate_t'
| | | |-FieldDecl 0x55e1a84e7030 <line:184:11, col:22> col:22 _mbrtowc_state '_mbstate_t':'_mbstate_t'
| | | |-FieldDecl 0x55e1a84e7090 <line:185:11, col:22> col:22 _mbsrtowcs_state '_mbstate_t':'_mbstate_t'
| | | |-FieldDecl 0x55e1a84e70f0 <line:186:11, col:22> col:22 _wcrtomb_state '_mbstate_t':'_mbstate_t'
| | | |-FieldDecl 0x55e1a84e7150 <line:187:11, col:22> col:22 _wcsrtombs_state '_mbstate_t':'_mbstate_t'
| | | `-FieldDecl 0x55e1a84e71b8 <line:188:4, col:8> col:8 _h_errno 'int'
| | |-FieldDecl 0x55e1a84e7270 <line:168:7, line:189:11> col:11 _reent 'struct (anonymous struct at termination-libowfat/strtoul_true-termination.c.i:168:7)':'struct _reent::(anonymous at termination-libowfat/strtoul_true-termination.c.i:168:7)'
| | |-RecordDecl 0x55e1a84e72c0 <line:190:7, line:194:9> line:190:7 struct definition
| | | |-FieldDecl 0x55e1a84e7408 <line:192:11, col:36> col:27 _nextf 'unsigned char *[30]'
| | | `-FieldDecl 0x55e1a84e74f8 <line:193:11, col:35> col:24 _nmalloc 'unsigned int [30]'
| | `-FieldDecl 0x55e1a84e75b0 <line:190:7, line:194:11> col:11 _unused 'struct (anonymous struct at termination-libowfat/strtoul_true-termination.c.i:190:7)':'struct _reent::(anonymous at termination-libowfat/strtoul_true-termination.c.i:190:7)'
| |-FieldDecl 0x55e1a84e78e0 <line:166:3, line:195:7> col:7 _new 'union (anonymous union at termination-libowfat/strtoul_true-termination.c.i:166:3)':'union _reent::(anonymous at termination-libowfat/strtoul_true-termination.c.i:166:3)'
| |-FieldDecl 0x55e1a84e7958 <line:196:3, col:19> col:19 _atexit 'struct _atexit *'
| |-FieldDecl 0x55e1a84e79c8 <line:197:3, col:18> col:18 _atexit0 'struct _atexit':'struct _atexit'
| |-FieldDecl 0x55e1a84e7c40 <line:198:3, col:27> col:12 _sig_func 'void (**)(int)':'void (**)(int)'
| |-FieldDecl 0x55e1a84e7cb0 <line:199:3, col:16> col:16 __sglue 'struct _glue':'struct _glue'
| `-FieldDecl 0x55e1a84e7f40 <line:200:3, col:16> col:10 __sf '__FILE [3]'
|-VarDecl 0x55e1a84e83f0 <line:202:1, col:23> col:23 _impure_ptr 'struct _reent *' extern
|-VarDecl 0x55e1a84e8480 <line:203:1, col:29> col:29 _global_impure_ptr 'struct _reent *const' extern
|-FunctionDecl 0x55e1a84e85a0 <line:204:1, col:37> col:6 _reclaim_reent 'void (struct _reent *)'
| `-ParmVarDecl 0x55e1a84e8510 <col:22, col:36> col:37 'struct _reent *'
|-FunctionDecl 0x55e1a84e87c8 <line:205:3, col:62> col:46 __getreent 'struct _reent *(void) __attribute__((cdecl))':'struct _reent *(void)'
|-FunctionDecl 0x55e1a84e8958 <line:206:1, col:22> col:7 mkdtemp 'char *(char *)'
| `-ParmVarDecl 0x55e1a84e8880 <col:16, col:21> col:22 'char *'
|-FunctionDecl 0x55e1a84e8b20 <line:207:1, col:27> col:12 arc4random '__uint32_t (void)'
|-FunctionDecl 0x55e1a84e8d30 <line:208:1, col:47> col:6 arc4random_addrandom 'void (unsigned char *, int)'
| |-ParmVarDecl 0x55e1a84e8bd8 <col:27, col:41> col:42 'unsigned char *'
| `-ParmVarDecl 0x55e1a84e8c58 <col:44> col:47 'int'
|-FunctionDecl 0x55e1a84e8f90 <line:209:1, col:35> col:6 arc4random_buf 'void (void *, size_t)'
| |-ParmVarDecl 0x55e1a84e8df8 <col:21, col:26> col:27 'void *'
| `-ParmVarDecl 0x55e1a84e8e70 <col:29> col:35 'size_t':'unsigned long'
|-FunctionDecl 0x55e1a84e90d8 <line:210:1, col:26> col:6 arc4random_stir 'void (void)'
|-FunctionDecl 0x55e1a84e9290 <line:211:1, col:41> col:12 arc4random_uniform '__uint32_t (__uint32_t)'
| `-ParmVarDecl 0x55e1a84e9188 <col:31> col:41 '__uint32_t':'unsigned int'
|-FunctionDecl 0x55e1a84ea438 <line:212:1, col:30> col:13 getprogname 'const char *(void)'
|-FunctionDecl 0x55e1a84ea5c0 <line:213:1, col:31> col:6 setprogname 'void (const char *)'
| `-ParmVarDecl 0x55e1a84ea4f0 <col:19, col:30> col:31 'const char *'
|-FunctionDecl 0x55e1a84ea758 <line:214:1, col:43> col:7 canonicalize_file_name 'char *(const char *)'
| `-ParmVarDecl 0x55e1a84ea680 <col:31, col:42> col:43 'const char *'
|-FunctionDecl 0x55e1a84ea8e8 <line:215:1, col:27> col:5 unsetenv 'int (const char *)'
| `-ParmVarDecl 0x55e1a84ea818 <col:15, col:26> col:27 'const char *'
|-FunctionDecl 0x55e1a84eabe8 <line:216:1, col:57> col:7 initstate 'char *(unsigned int, char *, size_t)'
| |-ParmVarDecl 0x55e1a84ea9a8 <col:18, col:27> col:27 seed 'unsigned int'
| |-ParmVarDecl 0x55e1a84eaa28 <col:33, col:39> col:39 state 'char *'
| `-ParmVarDecl 0x55e1a84eaaa0 <col:46, col:53> col:53 size 'size_t':'unsigned long'
|-FunctionDecl 0x55e1a84ead78 <line:217:1, col:18> col:6 random 'long (void)'
|-FunctionDecl 0x55e1a84eaec8 <line:218:1, col:34> col:7 setstate 'char *(const char *)'
| `-ParmVarDecl 0x55e1a84eae30 <col:17, col:29> col:29 state 'const char *'
|-FunctionDecl 0x55e1a84eb050 <line:219:1, col:23> col:6 srandom 'void (unsigned int)'
| `-ParmVarDecl 0x55e1a84eaf88 <col:15> col:23 'unsigned int'
|-FunctionDecl 0x55e1a84eb1e8 <line:220:1, col:19> col:7 ptsname 'char *(int)'
| `-ParmVarDecl 0x55e1a84eb110 <col:16> col:19 'int'
|-FunctionDecl 0x55e1a84eb4f8 <line:221:1, col:34> col:5 ptsname_r 'int (int, char *, size_t)'
| |-ParmVarDecl 0x55e1a84eb2a8 <col:15> col:18 'int'
| |-ParmVarDecl 0x55e1a84eb328 <col:20, col:25> col:26 'char *'
| `-ParmVarDecl 0x55e1a84eb3a0 <col:28> col:34 'size_t':'unsigned long'
|-FunctionDecl 0x55e1a84eb688 <line:222:1, col:16> col:5 getpt 'int (void)'
|-FunctionDecl 0x55e1a84eb818 <line:223:1, col:17> col:5 grantpt 'int (int)'
| `-ParmVarDecl 0x55e1a84eb740 <col:14> col:17 'int'
|-FunctionDecl 0x55e1a84eb970 <line:224:1, col:18> col:5 unlockpt 'int (int)'
| `-ParmVarDecl 0x55e1a84eb8d8 <col:15> col:18 'int'
|-FunctionDecl 0x55e1a84ebac8 <line:225:1, col:22> col:5 posix_openpt 'int (int)'
| `-ParmVarDecl 0x55e1a84eba30 <col:19> col:22 'int'
|-FunctionDecl 0x55e1a84ebdb8 <line:226:1, col:44> col:5 posix_memalign 'int (void **, size_t, size_t)'
| |-ParmVarDecl 0x55e1a84ebb88 <col:21, col:27> col:28 'void **'
| |-ParmVarDecl 0x55e1a84ebc00 <col:30> col:36 'size_t':'unsigned long'
| `-ParmVarDecl 0x55e1a84ebc78 <col:38> col:44 'size_t':'unsigned long'
|-FunctionDecl 0x55e1a84ec018 <line:227:1, col:39> col:15 memalign 'void *(size_t, size_t)' extern
| |-ParmVarDecl 0x55e1a84ebe80 <col:25> col:31 'size_t':'unsigned long'
| `-ParmVarDecl 0x55e1a84ebef8 <col:33> col:39 'size_t':'unsigned long'
|-FunctionDecl 0x55e1a84ec1e8 <line:228:1, col:29> col:15 valloc 'void *(size_t)' extern
| `-ParmVarDecl 0x55e1a84ec0d8 <col:23> col:29 'size_t':'unsigned long'
|-RecordDecl 0x55e1a84ec290 <line:230:9, line:234:1> line:230:9 struct definition
| |-FieldDecl 0x55e1a84ec350 <line:232:3, col:7> col:7 quot 'int'
| `-FieldDecl 0x55e1a84ec3b8 <line:233:3, col:7> col:7 rem 'int'
|-TypedefDecl 0x55e1a84ec490 <line:230:1, line:234:3> col:3 referenced div_t 'struct div_t':'div_t'
| `-ElaboratedType 0x55e1a84ec430 'struct div_t' sugar
|   `-RecordType 0x55e1a84ec310 'div_t'
|     `-Record 0x55e1a84ec290 ''
|-RecordDecl 0x55e1a84ec500 <line:235:9, line:239:1> line:235:9 struct definition
| |-FieldDecl 0x55e1a84ec5c0 <line:237:3, col:8> col:8 quot 'long'
| `-FieldDecl 0x55e1a84ec628 <line:238:3, col:8> col:8 rem 'long'
|-TypedefDecl 0x55e1a84ec6e0 <line:235:1, line:239:3> col:3 referenced ldiv_t 'struct ldiv_t':'ldiv_t'
| `-ElaboratedType 0x55e1a84ec680 'struct ldiv_t' sugar
|   `-RecordType 0x55e1a84ec580 'ldiv_t'
|     `-Record 0x55e1a84ec500 ''
|-RecordDecl 0x55e1a84ec750 <line:240:9, line:244:1> line:240:9 struct definition
| |-FieldDecl 0x55e1a84ec810 <line:242:3, col:17> col:17 quot 'long long'
| `-FieldDecl 0x55e1a84ec878 <line:243:3, col:17> col:17 rem 'long long'
|-TypedefDecl 0x55e1a84ec930 <line:240:1, line:244:3> col:3 referenced lldiv_t 'struct lldiv_t':'lldiv_t'
| `-ElaboratedType 0x55e1a84ec8d0 'struct lldiv_t' sugar
|   `-RecordType 0x55e1a84ec7d0 'lldiv_t'
|     `-Record 0x55e1a84ec750 ''
|-TypedefDecl 0x55e1a84ecbe8 <line:245:1, col:57> col:15 referenced __compar_fn_t 'int (*)(const void *, const void *)'
| `-PointerType 0x55e1a84ecb70 'int (*)(const void *, const void *)'
|   `-ParenType 0x55e1a84ecb10 'int (const void *, const void *)' sugar
|     `-FunctionProtoType 0x55e1a84ecad0 'int (const void *, const void *)' cdecl
|       |-BuiltinType 0x55e1a8472080 'int'
|       |-PointerType 0x55e1a84ec9a0 'const void *'
|       | `-QualType 0x55e1a8471fe1 'const void' const
|       |   `-BuiltinType 0x55e1a8471fe0 'void'
|       `-PointerType 0x55e1a84ec9a0 'const void *'
|         `-QualType 0x55e1a8471fe1 'const void' const
|           `-BuiltinType 0x55e1a8471fe0 'void'
|-FunctionDecl 0x55e1a84ecd48 <line:246:1, col:57> col:32 __locale_mb_cur_max 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x55e1a84ecf20 <line:247:33> col:33 implicit abort 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x55e1a84ecfc0 prev 0x55e1a84ecf20 <col:1, col:75> col:33 abort 'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x55e1a84ed180 <line:248:32> col:32 implicit abs 'int (int)' extern
| |-ParmVarDecl 0x55e1a84ed220 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x55e1a84ed290 <col:32> Implicit
| `-ConstAttr 0x55e1a84ed2e8 <col:32> Implicit
|-FunctionDecl 0x55e1a84ed310 prev 0x55e1a84ed180 <col:1, col:40> col:32 abs 'int (int)'
| |-ParmVarDecl 0x55e1a84ed078 <col:37> col:40 'int'
| |-NoThrowAttr 0x55e1a84ed3e8 <col:32> Inherited Implicit
| `-ConstAttr 0x55e1a84ed440 <col:32> Inherited Implicit
|-FunctionDecl 0x55e1a84ed690 <line:249:1, col:60> col:32 atexit 'int (void (*)(void)) __attribute__((cdecl))':'int (void (*)(void))'
| `-ParmVarDecl 0x55e1a84ed510 <col:40, col:59> col:47 __func 'void (*)(void)'
|-FunctionDecl 0x55e1a84ed890 <line:250:1, col:59> col:35 atof 'double (const char *) __attribute__((cdecl))':'double (const char *)'
| `-ParmVarDecl 0x55e1a84ed750 <col:41, col:53> col:53 __nptr 'const char *'
|-FunctionDecl 0x55e1a84eda90 <line:251:1, col:59> col:34 atoff 'float (const char *) __attribute__((cdecl))':'float (const char *)'
| `-ParmVarDecl 0x55e1a84ed950 <col:41, col:53> col:53 __nptr 'const char *'
|-FunctionDecl 0x55e1a84edc50 <line:252:1, col:56> col:32 atoi 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x55e1a84edb50 <col:38, col:50> col:50 __nptr 'const char *'
|-FunctionDecl 0x55e1a84edf38 <line:253:1, col:76> col:32 _atoi_r 'int (struct _reent *, const char *) __attribute__((cdecl))':'int (struct _reent *, const char *)'
| |-ParmVarDecl 0x55e1a84edd20 <col:41, col:55> col:56 'struct _reent *'
| `-ParmVarDecl 0x55e1a84edda0 <col:58, col:70> col:70 __nptr 'const char *'
|-FunctionDecl 0x55e1a84ee140 <line:254:1, col:57> col:33 atol 'long (const char *) __attribute__((cdecl))':'long (const char *)'
| `-ParmVarDecl 0x55e1a84ee000 <col:39, col:51> col:51 __nptr 'const char *'
|-FunctionDecl 0x55e1a84efc60 <line:255:1, col:77> col:33 _atol_r 'long (struct _reent *, const char *) __attribute__((cdecl))':'long (struct _reent *, const char *)'
| |-ParmVarDecl 0x55e1a84ee210 <col:42, col:56> col:57 'struct _reent *'
| `-ParmVarDecl 0x55e1a84ee290 <col:59, col:71> col:71 __nptr 'const char *'
|-FunctionDecl 0x55e1a84f0110 <line:256:1, col:137> col:35 bsearch 'void *(const void *, const void *, size_t, size_t, __compar_fn_t) __attribute__((cdecl))':'void *(const void *, const void *, size_t, size_t, __compar_fn_t)'
| |-ParmVarDecl 0x55e1a84efd28 <col:44, col:57> col:57 __key 'const void *'
| |-ParmVarDecl 0x55e1a84efda8 <col:64, col:77> col:77 __base 'const void *'
| |-ParmVarDecl 0x55e1a84efe20 <col:85, col:92> col:92 __nmemb 'size_t':'unsigned long'
| |-ParmVarDecl 0x55e1a84efe98 <col:101, col:108> col:108 __size 'size_t':'unsigned long'
| `-ParmVarDecl 0x55e1a84eff38 <col:116, col:130> col:130 _compar '__compar_fn_t':'int (*)(const void *, const void *)'
|-FunctionDecl 0x55e1a84f0368 <line:257:35> col:35 implicit calloc 'void *(unsigned long, unsigned long)' extern
| |-ParmVarDecl 0x55e1a84f0408 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-ParmVarDecl 0x55e1a84f0470 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x55e1a84f04e8 prev 0x55e1a84f0368 <col:1, col:72> col:35 calloc 'void *(unsigned long, unsigned long)'
| |-ParmVarDecl 0x55e1a84f01e8 <col:43, col:50> col:50 __nmemb 'size_t':'unsigned long'
| `-ParmVarDecl 0x55e1a84f0260 <col:59, col:66> col:66 __size 'size_t':'unsigned long'
|-FunctionDecl 0x55e1a84f07f0 <line:258:1, col:63> col:34 div 'div_t (int, int) __attribute__((cdecl))':'div_t (int, int)'
| |-ParmVarDecl 0x55e1a84f05e0 <col:39, col:43> col:43 __numer 'int'
| `-ParmVarDecl 0x55e1a84f0660 <col:52, col:56> col:56 __denom 'int'
|-FunctionDecl 0x55e1a84f09f0 <line:259:33> col:33 implicit exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55e1a84f0a90 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x55e1a84f0b00 prev 0x55e1a84f09f0 <col:1, col:82> col:33 exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x55e1a84f08b8 <col:39, col:43> col:43 __status 'int'
|-FunctionDecl 0x55e1a84f0d38 <line:260:1, col:45> col:33 free 'void (void *) __attribute__((cdecl))':'void (void *)'
| `-ParmVarDecl 0x55e1a84f0bc0 <col:39, col:44> col:45 'void *'
|-FunctionDecl 0x55e1a84f0f00 <line:261:1, col:63> col:35 getenv 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x55e1a84f0df8 <col:43, col:55> col:55 __string 'const char *'
|-FunctionDecl 0x55e1a84f11e8 <line:262:1, col:83> col:35 _getenv_r 'char *(struct _reent *, const char *) __attribute__((cdecl))':'char *(struct _reent *, const char *)'
| |-ParmVarDecl 0x55e1a84f0fd0 <col:46, col:60> col:61 'struct _reent *'
| `-ParmVarDecl 0x55e1a84f1050 <col:63, col:75> col:75 __string 'const char *'
|-FunctionDecl 0x55e1a84f14b8 <line:263:1, col:64> col:35 _findenv 'char *(const char *, int *) __attribute__((cdecl))':'char *(const char *, int *)'
| |-ParmVarDecl 0x55e1a84f12b0 <col:45, col:56> col:57 'const char *'
| `-ParmVarDecl 0x55e1a84f1368 <col:59, col:63> col:64 'int *'
|-FunctionDecl 0x55e1a84f1840 <line:264:1, col:83> col:35 _findenv_r 'char *(struct _reent *, const char *, int *) __attribute__((cdecl))':'char *(struct _reent *, const char *, int *)'
| |-ParmVarDecl 0x55e1a84f1590 <col:47, col:61> col:62 'struct _reent *'
| |-ParmVarDecl 0x55e1a84f1610 <col:64, col:75> col:76 'const char *'
| `-ParmVarDecl 0x55e1a84f1690 <col:78, col:82> col:83 'int *'
|-VarDecl 0x55e1a84f1910 <line:265:1, col:14> col:14 suboptarg 'char *' extern
|-FunctionDecl 0x55e1a84f1c80 <line:266:1, col:75> col:32 getsubopt 'int (char **, char *const *, char **) __attribute__((cdecl))':'int (char **, char *const *, char **)'
| |-ParmVarDecl 0x55e1a84f19c8 <col:43, col:49> col:50 'char **'
| |-ParmVarDecl 0x55e1a84f1a78 <col:52, col:65> col:66 'char *const *'
| `-ParmVarDecl 0x55e1a84f1af8 <col:68, col:74> col:75 'char **'
|-FunctionDecl 0x55e1a84f1e90 <line:267:33> col:33 implicit labs 'long (long)' extern
| |-ParmVarDecl 0x55e1a84f1f30 <<invalid sloc>> <invalid sloc> 'long'
| |-NoThrowAttr 0x55e1a84f1fa0 <col:33> Implicit
| `-ConstAttr 0x55e1a84f1ff8 <col:33> Implicit
|-FunctionDecl 0x55e1a84f2020 prev 0x55e1a84f1e90 <col:1, col:43> col:33 labs 'long (long)'
| |-ParmVarDecl 0x55e1a84f1d50 <col:39> col:43 'long'
| |-NoThrowAttr 0x55e1a84f20f8 <col:33> Inherited Implicit
| `-ConstAttr 0x55e1a84f2120 <col:33> Inherited Implicit
|-FunctionDecl 0x55e1a84f23a0 <line:268:1, col:67> col:35 ldiv 'ldiv_t (long, long) __attribute__((cdecl))':'ldiv_t (long, long)'
| |-ParmVarDecl 0x55e1a84f2190 <col:41, col:46> col:46 __numer 'long'
| `-ParmVarDecl 0x55e1a84f2210 <col:55, col:60> col:60 __denom 'long'
|-FunctionDecl 0x55e1a84f2560 <line:269:35> col:35 implicit malloc 'void *(unsigned long)' extern
| `-ParmVarDecl 0x55e1a84f2600 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x55e1a84f2670 prev 0x55e1a84f2560 <col:1, col:56> col:35 malloc 'void *(unsigned long)'
| `-ParmVarDecl 0x55e1a84f2460 <col:43, col:50> col:50 __size 'size_t':'unsigned long'
|-FunctionDecl 0x55e1a84f2938 <line:270:1, col:59> col:32 mblen 'int (const char *, size_t) __attribute__((cdecl))':'int (const char *, size_t)'
| |-ParmVarDecl 0x55e1a84f2730 <col:39, col:50> col:51 'const char *'
| `-ParmVarDecl 0x55e1a84f27a8 <col:53> col:59 'size_t':'unsigned long'
|-FunctionDecl 0x55e1a84f2de8 <line:271:1, col:93> col:32 _mblen_r 'int (struct _reent *, const char *, size_t, _mbstate_t *) __attribute__((cdecl))':'int (struct _reent *, const char *, size_t, _mbstate_t *)'
| |-ParmVarDecl 0x55e1a84f2a10 <col:42, col:56> col:57 'struct _reent *'
| |-ParmVarDecl 0x55e1a84f2a90 <col:59, col:70> col:71 'const char *'
| |-ParmVarDecl 0x55e1a84f2b08 <col:73> col:79 'size_t':'unsigned long'
| `-ParmVarDecl 0x55e1a84f2be0 <col:81, col:92> col:93 '_mbstate_t *'
|-FunctionDecl 0x55e1a84f31f0 <line:272:1, col:71> col:32 mbtowc 'int (wchar_t *, const char *, size_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x55e1a84f2f50 <col:40, col:48> col:49 'wchar_t *'
| |-ParmVarDecl 0x55e1a84f2fd0 <col:51, col:62> col:63 'const char *'
| `-ParmVarDecl 0x55e1a84f3048 <col:65> col:71 'size_t':'unsigned long'
|-FunctionDecl 0x55e1a84f3690 <line:273:1, col:105> col:32 _mbtowc_r 'int (struct _reent *, wchar_t *, const char *, size_t, _mbstate_t *) __attribute__((cdecl))':'int (struct _reent *, wchar_t *, const char *, size_t, _mbstate_t *)'
| |-ParmVarDecl 0x55e1a84f32d0 <col:43, col:57> col:58 'struct _reent *'
| |-ParmVarDecl 0x55e1a84f3348 <col:60, col:68> col:69 'wchar_t *'
| |-ParmVarDecl 0x55e1a84f33c8 <col:71, col:82> col:83 'const char *'
| |-ParmVarDecl 0x55e1a84f3440 <col:85> col:91 'size_t':'unsigned long'
| `-ParmVarDecl 0x55e1a84f34b8 <col:93, col:104> col:105 '_mbstate_t *'
|-FunctionDecl 0x55e1a84f3978 <line:274:1, col:55> col:32 wctomb 'int (char *, wchar_t) __attribute__((cdecl))':'int (char *, wchar_t)'
| |-ParmVarDecl 0x55e1a84f3770 <col:40, col:45> col:46 'char *'
| `-ParmVarDecl 0x55e1a84f37e8 <col:48> col:55 'wchar_t':'unsigned short'
|-FunctionDecl 0x55e1a84f3da8 <line:275:1, col:89> col:32 _wctomb_r 'int (struct _reent *, char *, wchar_t, _mbstate_t *) __attribute__((cdecl))':'int (struct _reent *, char *, wchar_t, _mbstate_t *)'
| |-ParmVarDecl 0x55e1a84f3a50 <col:43, col:57> col:58 'struct _reent *'
| |-ParmVarDecl 0x55e1a84f3ad0 <col:60, col:65> col:66 'char *'
| |-ParmVarDecl 0x55e1a84f3b48 <col:68> col:75 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x55e1a84f3bc0 <col:77, col:88> col:89 '_mbstate_t *'
|-FunctionDecl 0x55e1a84f4118 <line:276:1, col:76> col:35 mbstowcs 'size_t (wchar_t *, const char *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x55e1a84f3e78 <col:45, col:53> col:54 'wchar_t *'
| |-ParmVarDecl 0x55e1a84f3ef8 <col:56, col:67> col:68 'const char *'
| `-ParmVarDecl 0x55e1a84f3f70 <col:70> col:76 'size_t':'unsigned long'
|-FunctionDecl 0x55e1a84f45b8 <line:277:1, col:110> col:35 _mbstowcs_r 'size_t (struct _reent *, wchar_t *, const char *, size_t, _mbstate_t *) __attribute__((cdecl))':'size_t (struct _reent *, wchar_t *, const char *, size_t, _mbstate_t *)'
| |-ParmVarDecl 0x55e1a84f41f8 <col:48, col:62> col:63 'struct _reent *'
| |-ParmVarDecl 0x55e1a84f4270 <col:65, col:73> col:74 'wchar_t *'
| |-ParmVarDecl 0x55e1a84f42f0 <col:76, col:87> col:88 'const char *'
| |-ParmVarDecl 0x55e1a84f4368 <col:90> col:96 'size_t':'unsigned long'
| `-ParmVarDecl 0x55e1a84f43e0 <col:98, col:109> col:110 '_mbstate_t *'
|-FunctionDecl 0x55e1a84f4988 <line:278:1, col:76> col:35 wcstombs 'size_t (char *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x55e1a84f4698 <col:45, col:50> col:51 'char *'
| |-ParmVarDecl 0x55e1a84f4770 <col:53, col:67> col:68 'const wchar_t *'
| `-ParmVarDecl 0x55e1a84f47e8 <col:70> col:76 'size_t':'unsigned long'
|-FunctionDecl 0x55e1a84f4e88 <line:279:1, col:110> col:35 _wcstombs_r 'size_t (struct _reent *, char *, const wchar_t *, size_t, _mbstate_t *) __attribute__((cdecl))':'size_t (struct _reent *, char *, const wchar_t *, size_t, _mbstate_t *)'
| |-ParmVarDecl 0x55e1a84f4a68 <col:48, col:62> col:63 'struct _reent *'
| |-ParmVarDecl 0x55e1a84f4ae8 <col:65, col:70> col:71 'char *'
| |-ParmVarDecl 0x55e1a84f4b60 <col:73, col:87> col:88 'const wchar_t *'
| |-ParmVarDecl 0x55e1a84f4bd8 <col:90> col:96 'size_t':'unsigned long'
| `-ParmVarDecl 0x55e1a84f4cb0 <col:98, col:109> col:110 '_mbstate_t *'
|-FunctionDecl 0x55e1a84f5070 prev 0x55e1a84e8958 <line:280:1, col:50> col:35 mkdtemp 'char *(char *)'
| `-ParmVarDecl 0x55e1a84f4f68 <col:44, col:49> col:50 'char *'
|-FunctionDecl 0x55e1a84f5308 <line:281:1, col:53> col:32 mkostemp 'int (char *, int) __attribute__((cdecl))':'int (char *, int)'
| |-ParmVarDecl 0x55e1a84f5130 <col:42, col:47> col:48 'char *'
| `-ParmVarDecl 0x55e1a84f51b0 <col:50> col:53 'int'
|-FunctionDecl 0x55e1a84f5630 <line:282:1, col:59> col:32 mkostemps 'int (char *, int, int) __attribute__((cdecl))':'int (char *, int, int)'
| |-ParmVarDecl 0x55e1a84f53d0 <col:43, col:48> col:49 'char *'
| |-ParmVarDecl 0x55e1a84f5450 <col:51> col:54 'int'
| `-ParmVarDecl 0x55e1a84f54d0 <col:56> col:59 'int'
|-FunctionDecl 0x55e1a84f5840 <line:283:1, col:47> col:32 mkstemp 'int (char *) __attribute__((cdecl))':'int (char *)'
| `-ParmVarDecl 0x55e1a84f5700 <col:41, col:46> col:47 'char *'
|-FunctionDecl 0x55e1a84f5a50 <line:284:1, col:53> col:32 mkstemps 'int (char *, int) __attribute__((cdecl))':'int (char *, int)'
| |-ParmVarDecl 0x55e1a84f5900 <col:42, col:47> col:48 'char *'
| `-ParmVarDecl 0x55e1a84f5980 <col:50> col:53 'int'
|-FunctionDecl 0x55e1a84f5cc0 <line:285:1, col:139> col:35 mktemp 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x55e1a84f5b18 <col:43, col:48> col:49 'char *'
|-FunctionDecl 0x55e1a84f5fa8 <line:286:1, col:70> col:35 _mkdtemp_r 'char *(struct _reent *, char *) __attribute__((cdecl))':'char *(struct _reent *, char *)'
| |-ParmVarDecl 0x55e1a84f5d90 <col:47, col:61> col:62 'struct _reent *'
| `-ParmVarDecl 0x55e1a84f5e10 <col:64, col:69> col:70 'char *'
|-FunctionDecl 0x55e1a84f6330 <line:287:1, col:73> col:32 _mkostemp_r 'int (struct _reent *, char *, int) __attribute__((cdecl))':'int (struct _reent *, char *, int)'
| |-ParmVarDecl 0x55e1a84f6080 <col:45, col:59> col:60 'struct _reent *'
| |-ParmVarDecl 0x55e1a84f6100 <col:62, col:67> col:68 'char *'
| `-ParmVarDecl 0x55e1a84f6180 <col:70> col:73 'int'
|-FunctionDecl 0x55e1a84f6758 <line:288:1, col:79> col:32 _mkostemps_r 'int (struct _reent *, char *, int, int) __attribute__((cdecl))':'int (struct _reent *, char *, int, int)'
| |-ParmVarDecl 0x55e1a84f6410 <col:46, col:60> col:61 'struct _reent *'
| |-ParmVarDecl 0x55e1a84f6490 <col:63, col:68> col:69 'char *'
| |-ParmVarDecl 0x55e1a84f6510 <col:71> col:74 'int'
| `-ParmVarDecl 0x55e1a84f6590 <col:76> col:79 'int'
|-FunctionDecl 0x55e1a84f6a58 <line:289:1, col:67> col:32 _mkstemp_r 'int (struct _reent *, char *) __attribute__((cdecl))':'int (struct _reent *, char *)'
| |-ParmVarDecl 0x55e1a84f6840 <col:44, col:58> col:59 'struct _reent *'
| `-ParmVarDecl 0x55e1a84f68c0 <col:61, col:66> col:67 'char *'
|-FunctionDecl 0x55e1a84f6d18 <line:290:1, col:73> col:32 _mkstemps_r 'int (struct _reent *, char *, int) __attribute__((cdecl))':'int (struct _reent *, char *, int)'
| |-ParmVarDecl 0x55e1a84f6b30 <col:45, col:59> col:60 'struct _reent *'
| |-ParmVarDecl 0x55e1a84f6bb0 <col:62, col:67> col:68 'char *'
| `-ParmVarDecl 0x55e1a84f6c30 <col:70> col:73 'int'
|-FunctionDecl 0x55e1a84f6f98 <line:291:1, col:159> col:35 _mktemp_r 'char *(struct _reent *, char *) __attribute__((cdecl))':'char *(struct _reent *, char *)'
| |-ParmVarDecl 0x55e1a84f6df8 <col:46, col:60> col:61 'struct _reent *'
| `-ParmVarDecl 0x55e1a84f6e78 <col:63, col:68> col:69 'char *'
|-FunctionDecl 0x55e1a84f7380 <line:292:1, col:107> col:33 qsort 'void (void *, size_t, size_t, __compar_fn_t) __attribute__((cdecl))':'void (void *, size_t, size_t, __compar_fn_t)'
| |-ParmVarDecl 0x55e1a84f7060 <col:40, col:47> col:47 __base 'void *'
| |-ParmVarDecl 0x55e1a84f70d8 <col:55, col:62> col:62 __nmemb 'size_t':'unsigned long'
| |-ParmVarDecl 0x55e1a84f7150 <col:71, col:78> col:78 __size 'size_t':'unsigned long'
| `-ParmVarDecl 0x55e1a84f71c8 <col:86, col:100> col:100 _compar '__compar_fn_t':'int (*)(const void *, const void *)'
|-FunctionDecl 0x55e1a84f7510 <line:293:1, col:42> col:32 rand 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x55e1a84f77d8 <line:294:35> col:35 implicit realloc 'void *(void *, unsigned long)' extern
| |-ParmVarDecl 0x55e1a84f7878 <<invalid sloc>> <invalid sloc> 'void *'
| `-ParmVarDecl 0x55e1a84f78e0 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x55e1a84f7958 prev 0x55e1a84f77d8 <col:1, col:69> col:35 realloc 'void *(void *, unsigned long)'
| |-ParmVarDecl 0x55e1a84f75c8 <col:44, col:51> col:51 __r 'void *'
| `-ParmVarDecl 0x55e1a84f7640 <col:56, col:63> col:63 __size 'size_t':'unsigned long'
|-FunctionDecl 0x55e1a84f7b68 <line:295:1, col:70> col:35 reallocf 'void *(void *, size_t) __attribute__((cdecl))':'void *(void *, size_t)'
| |-ParmVarDecl 0x55e1a84f7a20 <col:45, col:52> col:52 __r 'void *'
| `-ParmVarDecl 0x55e1a84f7a98 <col:57, col:64> col:64 __size 'size_t':'unsigned long'
|-FunctionDecl 0x55e1a84f8e48 <line:296:1, col:84> col:35 realpath 'char *(const char *, char *) __attribute__((cdecl))':'char *(const char *, char *)'
| |-ParmVarDecl 0x55e1a84f7c30 <col:45, col:58> col:58 path 'const char *'
| `-ParmVarDecl 0x55e1a84f8cf0 <col:64, col:71> col:71 resolved_path 'char *'
|-FunctionDecl 0x55e1a84f9008 <line:297:1, col:55> col:33 srand 'void (unsigned int) __attribute__((cdecl))':'void (unsigned int)'
| `-ParmVarDecl 0x55e1a84f8f10 <col:40, col:49> col:49 __seed 'unsigned int'
|-FunctionDecl 0x55e1a84f9298 <line:298:35> col:35 implicit strtod 'double (const char *, char **)' extern
| |-ParmVarDecl 0x55e1a84f9338 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x55e1a84f93a0 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x55e1a84f9418 prev 0x55e1a84f9298 <col:1, col:78> col:35 strtod 'double (const char *, char **)'
| |-ParmVarDecl 0x55e1a84f90c8 <col:43, col:56> col:56 __n 'const char *'
| `-ParmVarDecl 0x55e1a84f9148 <col:61, col:69> col:69 __end_PTR 'char **'
|-FunctionDecl 0x55e1a84f97a0 <line:299:1, col:97> col:35 _strtod_r 'double (struct _reent *, const char *, char **) __attribute__((cdecl))':'double (struct _reent *, const char *, char **)'
| |-ParmVarDecl 0x55e1a84f94f0 <col:46, col:60> col:61 'struct _reent *'
| |-ParmVarDecl 0x55e1a84f9570 <col:62, col:75> col:75 __n 'const char *'
| `-ParmVarDecl 0x55e1a84f95f0 <col:80, col:88> col:88 __end_PTR 'char **'
|-FunctionDecl 0x55e1a84f9a48 <line:300:34> col:34 implicit strtof 'float (const char *, char **)' extern
| |-ParmVarDecl 0x55e1a84f9ae8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x55e1a84f9b50 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x55e1a84f9bc8 prev 0x55e1a84f9a48 <col:1, col:77> col:34 strtof 'float (const char *, char **)'
| |-ParmVarDecl 0x55e1a84f9870 <col:42, col:55> col:55 __n 'const char *'
| `-ParmVarDecl 0x55e1a84f98f0 <col:60, col:68> col:68 __end_PTR 'char **'
|-FunctionDecl 0x55e1a84f9f60 <line:301:33> col:33 implicit strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x55e1a84fa000 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x55e1a84fa068 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x55e1a84fa0d0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x55e1a84fa150 prev 0x55e1a84f9f60 <col:1, col:88> col:33 strtol 'long (const char *, char **, int)'
| |-ParmVarDecl 0x55e1a84f9d00 <col:41, col:54> col:54 __n 'const char *'
| |-ParmVarDecl 0x55e1a84f9d80 <col:59, col:67> col:67 __end_PTR 'char **'
| `-ParmVarDecl 0x55e1a84f9e00 <col:78, col:82> col:82 __base 'int'
|-FunctionDecl 0x55e1a84fa578 <line:302:1, col:107> col:33 _strtol_r 'long (struct _reent *, const char *, char **, int) __attribute__((cdecl))':'long (struct _reent *, const char *, char **, int)'
| |-ParmVarDecl 0x55e1a84fa230 <col:44, col:58> col:59 'struct _reent *'
| |-ParmVarDecl 0x55e1a84fa2b0 <col:60, col:73> col:73 __n 'const char *'
| |-ParmVarDecl 0x55e1a84fa330 <col:78, col:86> col:86 __end_PTR 'char **'
| `-ParmVarDecl 0x55e1a84fa3b0 <col:97, col:101> col:101 __base 'int'
|-FunctionDecl 0x55e1a84fa8b0 <line:303:42> col:42 implicit used strtoul 'unsigned long (const char *, char **, int)' extern
| |-ParmVarDecl 0x55e1a84fa950 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x55e1a84fa9b8 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x55e1a84faa20 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x55e1a84faaa0 prev 0x55e1a84fa8b0 <col:1, col:98> col:42 used strtoul 'unsigned long (const char *, char **, int)'
| |-ParmVarDecl 0x55e1a84fa650 <col:51, col:64> col:64 __n 'const char *'
| |-ParmVarDecl 0x55e1a84fa6d0 <col:69, col:77> col:77 __end_PTR 'char **'
| `-ParmVarDecl 0x55e1a84fa750 <col:88, col:92> col:92 __base 'int'
|-FunctionDecl 0x55e1a84faed8 <line:304:1, col:117> col:42 _strtoul_r 'unsigned long (struct _reent *, const char *, char **, int) __attribute__((cdecl))':'unsigned long (struct _reent *, const char *, char **, int)'
| |-ParmVarDecl 0x55e1a84fab80 <col:54, col:68> col:69 'struct _reent *'
| |-ParmVarDecl 0x55e1a84fac00 <col:70, col:83> col:83 __n 'const char *'
| |-ParmVarDecl 0x55e1a84fac80 <col:88, col:96> col:96 __end_PTR 'char **'
| `-ParmVarDecl 0x55e1a84fad10 <col:107, col:111> col:111 __base 'int'
|-FunctionDecl 0x55e1a84fb078 <line:305:1, col:60> col:32 system 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x55e1a84fafb0 <col:40, col:52> col:52 __string 'const char *'
|-FunctionDecl 0x55e1a84fb200 <line:306:1, col:58> col:33 a64l 'long (const char *) __attribute__((cdecl))':'long (const char *)'
| `-ParmVarDecl 0x55e1a84fb138 <col:39, col:51> col:51 __input 'const char *'
|-FunctionDecl 0x55e1a84fb400 <line:307:1, col:53> col:35 l64a 'char *(long) __attribute__((cdecl))':'char *(long)'
| `-ParmVarDecl 0x55e1a84fb2c0 <col:41, col:46> col:46 __input 'long'
|-FunctionDecl 0x55e1a84fb6e8 <line:308:1, col:72> col:35 _l64a_r 'char *(struct _reent *, long) __attribute__((cdecl))':'char *(struct _reent *, long)'
| |-ParmVarDecl 0x55e1a84fb4d0 <col:44, col:58> col:59 'struct _reent *'
| `-ParmVarDecl 0x55e1a84fb550 <col:60, col:65> col:65 __input 'long'
|-FunctionDecl 0x55e1a84fbbc8 <line:309:1, col:81> col:32 on_exit 'int (void (*)(int, void *), void *) __attribute__((cdecl))':'int (void (*)(int, void *), void *)'
| |-ParmVarDecl 0x55e1a84fb9b0 <col:41, col:67> col:48 __func 'void (*)(int, void *)'
| `-ParmVarDecl 0x55e1a84fba30 <col:69, col:76> col:76 __arg 'void *'
|-FunctionDecl 0x55e1a84fbd70 <line:310:33> col:33 implicit _Exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55e1a84fbe10 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x55e1a84fbe80 prev 0x55e1a84fbd70 <col:1, col:83> col:33 _Exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x55e1a84fbc90 <col:40, col:44> col:44 __status 'int'
|-FunctionDecl 0x55e1a84fc008 <line:311:1, col:54> col:32 putenv 'int (char *) __attribute__((cdecl))':'int (char *)'
| `-ParmVarDecl 0x55e1a84fbf40 <col:40, col:46> col:46 __string 'char *'
|-FunctionDecl 0x55e1a84fc228 <line:312:1, col:74> col:32 _putenv_r 'int (struct _reent *, char *) __attribute__((cdecl))':'int (struct _reent *, char *)'
| |-ParmVarDecl 0x55e1a84fc0d8 <col:43, col:57> col:58 'struct _reent *'
| `-ParmVarDecl 0x55e1a84fc158 <col:60, col:66> col:66 __string 'char *'
|-FunctionDecl 0x55e1a84fc5a0 <line:313:1, col:79> col:35 _reallocf_r 'void *(struct _reent *, void *, size_t) __attribute__((cdecl))':'void *(struct _reent *, void *, size_t)'
| |-ParmVarDecl 0x55e1a84fc300 <col:48, col:62> col:63 'struct _reent *'
| |-ParmVarDecl 0x55e1a84fc380 <col:65, col:70> col:71 'void *'
| `-ParmVarDecl 0x55e1a84fc3f8 <col:73> col:79 'size_t':'unsigned long'
|-FunctionDecl 0x55e1a84fc8d0 <line:314:1, col:98> col:32 setenv 'int (const char *, const char *, int) __attribute__((cdecl))':'int (const char *, const char *, int)'
| |-ParmVarDecl 0x55e1a84fc670 <col:40, col:52> col:52 __string 'const char *'
| |-ParmVarDecl 0x55e1a84fc6f0 <col:62, col:74> col:74 __value 'const char *'
| `-ParmVarDecl 0x55e1a84fc770 <col:83, col:87> col:87 __overwrite 'int'
|-FunctionDecl 0x55e1a84fd140 <line:315:1, col:118> col:32 _setenv_r 'int (struct _reent *, const char *, const char *, int) __attribute__((cdecl))':'int (struct _reent *, const char *, const char *, int)'
| |-ParmVarDecl 0x55e1a84fc9b0 <col:43, col:57> col:58 'struct _reent *'
| |-ParmVarDecl 0x55e1a84fca30 <col:60, col:72> col:72 __string 'const char *'
| |-ParmVarDecl 0x55e1a84fcab0 <col:82, col:94> col:94 __value 'const char *'
| `-ParmVarDecl 0x55e1a84fcb30 <col:103, col:107> col:107 __overwrite 'int'
|-FunctionDecl 0x55e1a84fd470 <line:316:1, col:58> col:35 gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x55e1a84fd218 <col:41> col:47 'double'
| |-ParmVarDecl 0x55e1a84fd298 <col:48> col:51 'int'
| `-ParmVarDecl 0x55e1a84fd318 <col:52, col:57> col:58 'char *'
|-FunctionDecl 0x55e1a84fd7a0 <line:317:1, col:58> col:35 gcvtf 'char *(float, int, char *) __attribute__((cdecl))':'char *(float, int, char *)'
| |-ParmVarDecl 0x55e1a84fd540 <col:42> col:47 'float'
| |-ParmVarDecl 0x55e1a84fd5c0 <col:48> col:51 'int'
| `-ParmVarDecl 0x55e1a84fd640 <col:52, col:57> col:58 'char *'
|-FunctionDecl 0x55e1a84fdb68 <line:318:1, col:63> col:35 fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x55e1a84fd870 <col:41> col:47 'double'
| |-ParmVarDecl 0x55e1a84fd8f0 <col:48> col:51 'int'
| |-ParmVarDecl 0x55e1a84fd970 <col:52, col:56> col:57 'int *'
| `-ParmVarDecl 0x55e1a84fd9f0 <col:58, col:62> col:63 'int *'
|-FunctionDecl 0x55e1a84fdf38 <line:319:1, col:63> col:35 fcvtf 'char *(float, int, int *, int *) __attribute__((cdecl))':'char *(float, int, int *, int *)'
| |-ParmVarDecl 0x55e1a84fdc40 <col:42> col:47 'float'
| |-ParmVarDecl 0x55e1a84fdcc0 <col:48> col:51 'int'
| |-ParmVarDecl 0x55e1a84fdd40 <col:52, col:56> col:57 'int *'
| `-ParmVarDecl 0x55e1a84fddc0 <col:58, col:62> col:63 'int *'
|-FunctionDecl 0x55e1a84fe2b0 <line:320:1, col:63> col:35 ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x55e1a84fe010 <col:41> col:47 'double'
| |-ParmVarDecl 0x55e1a84fe090 <col:48> col:51 'int'
| |-ParmVarDecl 0x55e1a84fe150 <col:52, col:56> col:57 'int *'
| `-ParmVarDecl 0x55e1a84fe1d0 <col:58, col:62> col:63 'int *'
|-FunctionDecl 0x55e1a84fe700 <line:321:1, col:75> col:35 ecvtbuf 'char *(double, int, int *, int *, char *) __attribute__((cdecl))':'char *(double, int, int *, int *, char *)'
| |-ParmVarDecl 0x55e1a84fe388 <col:44> col:50 'double'
| |-ParmVarDecl 0x55e1a84fe408 <col:52> col:55 'int'
| |-ParmVarDecl 0x55e1a84fe488 <col:57, col:60> col:61 'int *'
| |-ParmVarDecl 0x55e1a84fe508 <col:63, col:66> col:67 'int *'
| `-ParmVarDecl 0x55e1a84fe588 <col:69, col:74> col:75 'char *'
|-FunctionDecl 0x55e1a84feac8 <line:322:1, col:75> col:35 fcvtbuf 'char *(double, int, int *, int *, char *) __attribute__((cdecl))':'char *(double, int, int *, int *, char *)'
| |-ParmVarDecl 0x55e1a84fe7e0 <col:44> col:50 'double'
| |-ParmVarDecl 0x55e1a84fe860 <col:52> col:55 'int'
| |-ParmVarDecl 0x55e1a84fe8e0 <col:57, col:60> col:61 'int *'
| |-ParmVarDecl 0x55e1a84fe960 <col:63, col:66> col:67 'int *'
| `-ParmVarDecl 0x55e1a84fe9e0 <col:69, col:74> col:75 'char *'
|-FunctionDecl 0x55e1a84fee08 <line:323:1, col:63> col:35 ecvtf 'char *(float, int, int *, int *) __attribute__((cdecl))':'char *(float, int, int *, int *)'
| |-ParmVarDecl 0x55e1a84feba8 <col:42> col:47 'float'
| |-ParmVarDecl 0x55e1a84fec28 <col:48> col:51 'int'
| |-ParmVarDecl 0x55e1a84feca8 <col:52, col:56> col:57 'int *'
| `-ParmVarDecl 0x55e1a84fed28 <col:58, col:62> col:63 'int *'
|-FunctionDecl 0x55e1a84ff308 <line:324:1, col:78> col:35 dtoa 'char *(double, int, int, int *, int *, char **) __attribute__((cdecl))':'char *(double, int, int, int *, int *, char **)'
| |-ParmVarDecl 0x55e1a84feee0 <col:41> col:47 'double'
| |-ParmVarDecl 0x55e1a84fef60 <col:49> col:52 'int'
| |-ParmVarDecl 0x55e1a84fefe0 <col:54> col:57 'int'
| |-ParmVarDecl 0x55e1a84ff060 <col:59, col:63> col:64 'int *'
| |-ParmVarDecl 0x55e1a84ff0e0 <col:66, col:69> col:70 'int *'
| `-ParmVarDecl 0x55e1a84ff178 <col:72, col:77> col:78 'char **'
|-FunctionDecl 0x55e1a84ff650 <line:325:1, col:59> col:35 __itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x55e1a84ff3f0 <col:43> col:46 'int'
| |-ParmVarDecl 0x55e1a84ff470 <col:48, col:53> col:54 'char *'
| `-ParmVarDecl 0x55e1a84ff4f0 <col:56> col:59 'int'
|-FunctionDecl 0x55e1a84ff980 <line:326:1, col:64> col:35 __utoa 'char *(unsigned int, char *, int) __attribute__((cdecl))':'char *(unsigned int, char *, int)'
| |-ParmVarDecl 0x55e1a84ff720 <col:43> col:51 'unsigned int'
| |-ParmVarDecl 0x55e1a84ff7a0 <col:53, col:58> col:59 'char *'
| `-ParmVarDecl 0x55e1a84ff820 <col:61> col:64 'int'
|-FunctionDecl 0x55e1a84ffc28 <line:327:1, col:57> col:35 itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x55e1a84ffa50 <col:41> col:44 'int'
| |-ParmVarDecl 0x55e1a84ffad0 <col:46, col:51> col:52 'char *'
| `-ParmVarDecl 0x55e1a84ffb50 <col:54> col:57 'int'
|-FunctionDecl 0x55e1a84ffed0 <line:328:1, col:62> col:35 utoa 'char *(unsigned int, char *, int) __attribute__((cdecl))':'char *(unsigned int, char *, int)'
| |-ParmVarDecl 0x55e1a84ffcf8 <col:41> col:49 'unsigned int'
| |-ParmVarDecl 0x55e1a84ffd78 <col:51, col:56> col:57 'char *'
| `-ParmVarDecl 0x55e1a84ffdf8 <col:59> col:62 'int'
|-FunctionDecl 0x55e1a8500170 <line:329:1, col:56> col:32 rand_r 'int (unsigned int *) __attribute__((cdecl))':'int (unsigned int *)'
| `-ParmVarDecl 0x55e1a84fffd8 <col:40, col:50> col:50 __seed 'unsigned int *'
|-FunctionDecl 0x55e1a8500358 <line:330:1, col:48> col:35 drand48 'double (void) __attribute__((cdecl))':'double (void)'
|-FunctionDecl 0x55e1a85005a0 <line:331:1, col:62> col:35 _drand48_r 'double (struct _reent *) __attribute__((cdecl))':'double (struct _reent *)'
| `-ParmVarDecl 0x55e1a8500420 <col:47, col:61> col:62 'struct _reent *'
|-FunctionDecl 0x55e1a8500860 <line:332:1, col:62> col:35 erand48 'double (unsigned short *) __attribute__((cdecl))':'double (unsigned short *)'
| `-ParmVarDecl 0x55e1a85006e8 <col:44, col:61> col:59 'unsigned short *':'unsigned short *'
|-FunctionDecl 0x55e1a8500b88 <line:333:1, col:82> col:35 _erand48_r 'double (struct _reent *, unsigned short *) __attribute__((cdecl))':'double (struct _reent *, unsigned short *)'
| |-ParmVarDecl 0x55e1a8500930 <col:47, col:61> col:62 'struct _reent *'
| `-ParmVarDecl 0x55e1a85009f8 <col:64, col:81> col:79 'unsigned short *':'unsigned short *'
|-FunctionDecl 0x55e1a8500e10 <line:334:1, col:60> col:33 jrand48 'long (unsigned short *) __attribute__((cdecl))':'long (unsigned short *)'
| `-ParmVarDecl 0x55e1a8500c98 <col:42, col:59> col:57 'unsigned short *':'unsigned short *'
|-FunctionDecl 0x55e1a8501180 <line:335:1, col:80> col:33 _jrand48_r 'long (struct _reent *, unsigned short *) __attribute__((cdecl))':'long (struct _reent *, unsigned short *)'
| |-ParmVarDecl 0x55e1a8500ee0 <col:45, col:59> col:60 'struct _reent *'
| `-ParmVarDecl 0x55e1a8500fa8 <col:62, col:79> col:77 'unsigned short *':'unsigned short *'
|-FunctionDecl 0x55e1a8501488 <line:336:1, col:60> col:33 lcong48 'void (unsigned short *) __attribute__((cdecl))':'void (unsigned short *)'
| `-ParmVarDecl 0x55e1a8501318 <col:42, col:59> col:57 'unsigned short *':'unsigned short *'
|-FunctionDecl 0x55e1a85017b0 <line:337:1, col:80> col:33 _lcong48_r 'void (struct _reent *, unsigned short *) __attribute__((cdecl))':'void (struct _reent *, unsigned short *)'
| |-ParmVarDecl 0x55e1a8501558 <col:45, col:59> col:60 'struct _reent *'
| `-ParmVarDecl 0x55e1a8501620 <col:62, col:79> col:77 'unsigned short *':'unsigned short *'
|-FunctionDecl 0x55e1a8501968 <line:338:1, col:46> col:33 lrand48 'long (void) __attribute__((cdecl))':'long (void)'
|-FunctionDecl 0x55e1a8501bb0 <line:339:1, col:60> col:33 _lrand48_r 'long (struct _reent *) __attribute__((cdecl))':'long (struct _reent *)'
| `-ParmVarDecl 0x55e1a8501a30 <col:45, col:59> col:60 'struct _reent *'
|-FunctionDecl 0x55e1a8501d28 <line:340:1, col:46> col:33 mrand48 'long (void) __attribute__((cdecl))':'long (void)'
|-FunctionDecl 0x55e1a8501eb8 <line:341:1, col:60> col:33 _mrand48_r 'long (struct _reent *) __attribute__((cdecl))':'long (struct _reent *)'
| `-ParmVarDecl 0x55e1a8501df0 <col:45, col:59> col:60 'struct _reent *'
|-FunctionDecl 0x55e1a8502088 <line:342:1, col:60> col:33 nrand48 'long (unsigned short *) __attribute__((cdecl))':'long (unsigned short *)'
| `-ParmVarDecl 0x55e1a8501fc0 <col:42, col:59> col:57 'unsigned short *':'unsigned short *'
|-FunctionDecl 0x55e1a8502328 <line:343:1, col:80> col:33 _nrand48_r 'long (struct _reent *, unsigned short *) __attribute__((cdecl))':'long (struct _reent *, unsigned short *)'
| |-ParmVarDecl 0x55e1a8502190 <col:45, col:59> col:60 'struct _reent *'
| `-ParmVarDecl 0x55e1a8502258 <col:62, col:79> col:77 'unsigned short *':'unsigned short *'
|-FunctionDecl 0x55e1a85025b0 <line:344:1, line:345:61> col:35 seed48 'unsigned short *(unsigned short *) __attribute__((cdecl))':'unsigned short *(unsigned short *)'
| `-ParmVarDecl 0x55e1a8502438 <col:43, col:60> col:58 'unsigned short *':'unsigned short *'
|-FunctionDecl 0x55e1a85028d8 <line:346:1, line:347:81> col:35 _seed48_r 'unsigned short *(struct _reent *, unsigned short *) __attribute__((cdecl))':'unsigned short *(struct _reent *, unsigned short *)'
| |-ParmVarDecl 0x55e1a8502680 <col:46, col:60> col:61 'struct _reent *'
| `-ParmVarDecl 0x55e1a8502748 <col:63, col:80> col:78 'unsigned short *':'unsigned short *'
|-FunctionDecl 0x55e1a8502ad8 <line:348:1, col:46> col:33 srand48 'void (long) __attribute__((cdecl))':'void (long)'
| `-ParmVarDecl 0x55e1a85029a0 <col:42> col:46 'long'
|-FunctionDecl 0x55e1a8502db0 <line:349:1, col:66> col:33 _srand48_r 'void (struct _reent *, long) __attribute__((cdecl))':'void (struct _reent *, long)'
| |-ParmVarDecl 0x55e1a8502ba8 <col:45, col:59> col:60 'struct _reent *'
| `-ParmVarDecl 0x55e1a8502c28 <col:62> col:66 'long'
|-FunctionDecl 0x55e1a8502fb0 <line:350:1, col:63> col:38 atoll 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x55e1a8502e78 <col:45, col:57> col:57 __nptr 'const char *'
|-FunctionDecl 0x55e1a85032c8 <line:351:1, col:83> col:38 _atoll_r 'long long (struct _reent *, const char *) __attribute__((cdecl))':'long long (struct _reent *, const char *)'
| |-ParmVarDecl 0x55e1a8503080 <col:48, col:62> col:63 'struct _reent *'
| `-ParmVarDecl 0x55e1a8503100 <col:65, col:77> col:77 __nptr 'const char *'
|-FunctionDecl 0x55e1a85034d0 <line:352:38> col:38 implicit llabs 'long long (long long)' extern
| |-ParmVarDecl 0x55e1a8503570 <<invalid sloc>> <invalid sloc> 'long long'
| |-NoThrowAttr 0x55e1a85035e0 <col:38> Implicit
| `-ConstAttr 0x55e1a8503638 <col:38> Implicit
|-FunctionDecl 0x55e1a8503660 prev 0x55e1a85034d0 <col:1, col:54> col:38 llabs 'long long (long long)'
| |-ParmVarDecl 0x55e1a8503390 <col:45, col:50> col:54 'long long'
| |-NoThrowAttr 0x55e1a8503738 <col:38> Inherited Implicit
| `-ConstAttr 0x55e1a8503760 <col:38> Inherited Implicit
|-FunctionDecl 0x55e1a85039e0 <line:353:1, col:79> col:36 lldiv 'lldiv_t (long long, long long) __attribute__((cdecl))':'lldiv_t (long long, long long)'
| |-ParmVarDecl 0x55e1a85037d0 <col:43, col:53> col:53 __numer 'long long'
| `-ParmVarDecl 0x55e1a8503850 <col:62, col:72> col:72 __denom 'long long'
|-FunctionDecl 0x55e1a8503d00 <line:354:38> col:38 implicit strtoll 'long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x55e1a8503da0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x55e1a8503e08 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x55e1a8503e70 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x55e1a8503ef0 prev 0x55e1a8503d00 <col:1, col:94> col:38 strtoll 'long long (const char *, char **, int)'
| |-ParmVarDecl 0x55e1a8503aa8 <col:47, col:60> col:60 __n 'const char *'
| |-ParmVarDecl 0x55e1a8503b28 <col:65, col:73> col:73 __end_PTR 'char **'
| `-ParmVarDecl 0x55e1a8503ba8 <col:84, col:88> col:88 __base 'int'
|-FunctionDecl 0x55e1a8505388 <line:355:1, col:114> col:38 _strtoll_r 'long long (struct _reent *, const char *, char **, int) __attribute__((cdecl))':'long long (struct _reent *, const char *, char **, int)'
| |-ParmVarDecl 0x55e1a8503fd0 <col:50, col:64> col:65 'struct _reent *'
| |-ParmVarDecl 0x55e1a8504050 <col:67, col:80> col:80 __n 'const char *'
| |-ParmVarDecl 0x55e1a85040d0 <col:85, col:93> col:93 __end_PTR 'char **'
| `-ParmVarDecl 0x55e1a85051c0 <col:104, col:108> col:108 __base 'int'
|-FunctionDecl 0x55e1a85056c0 <line:356:47> col:47 implicit strtoull 'unsigned long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x55e1a8505760 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x55e1a85057c8 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x55e1a8505830 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x55e1a85058b0 prev 0x55e1a85056c0 <col:1, col:104> col:47 strtoull 'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x55e1a8505460 <col:57, col:70> col:70 __n 'const char *'
| |-ParmVarDecl 0x55e1a85054e0 <col:75, col:83> col:83 __end_PTR 'char **'
| `-ParmVarDecl 0x55e1a8505560 <col:94, col:98> col:98 __base 'int'
|-FunctionDecl 0x55e1a8505cd8 <line:357:1, col:124> col:47 _strtoull_r 'unsigned long long (struct _reent *, const char *, char **, int) __attribute__((cdecl))':'unsigned long long (struct _reent *, const char *, char **, int)'
| |-ParmVarDecl 0x55e1a8505990 <col:60, col:74> col:75 'struct _reent *'
| |-ParmVarDecl 0x55e1a8505a10 <col:77, col:90> col:90 __n 'const char *'
| |-ParmVarDecl 0x55e1a8505a90 <col:95, col:103> col:103 __end_PTR 'char **'
| `-ParmVarDecl 0x55e1a8505b10 <col:114, col:118> col:118 __base 'int'
|-FunctionDecl 0x55e1a8506300 <line:358:1, col:98> col:35 _dtoa_r 'char *(struct _reent *, double, int, int, int *, int *, char **) __attribute__((cdecl))':'char *(struct _reent *, double, int, int, int *, int *, char **)'
| |-ParmVarDecl 0x55e1a8505dc0 <col:44, col:58> col:59 'struct _reent *'
| |-ParmVarDecl 0x55e1a8505e40 <col:61> col:67 'double'
| |-ParmVarDecl 0x55e1a8505ec0 <col:69> col:72 'int'
| |-ParmVarDecl 0x55e1a8505f40 <col:74> col:77 'int'
| |-ParmVarDecl 0x55e1a8505fc0 <col:79, col:83> col:84 'int *'
| |-ParmVarDecl 0x55e1a8506040 <col:86, col:89> col:90 'int *'
| `-ParmVarDecl 0x55e1a85060c0 <col:92, col:97> col:98 'char **'
|-FunctionDecl 0x55e1a8506550 <line:359:1, col:72> col:32 _system_r 'int (struct _reent *, const char *) __attribute__((cdecl))':'int (struct _reent *, const char *)'
| |-ParmVarDecl 0x55e1a8506400 <col:43, col:57> col:58 'struct _reent *'
| `-ParmVarDecl 0x55e1a8506480 <col:60, col:71> col:72 'const char *'
|-FunctionDecl 0x55e1a8506900 <line:360:1, col:98> col:33 __eprintf 'void (const char *, const char *, unsigned int, const char *) __attribute__((cdecl))':'void (const char *, const char *, unsigned int, const char *)'
| |-ParmVarDecl 0x55e1a8506618 <col:44, col:55> col:56 'const char *'
| |-ParmVarDecl 0x55e1a8506698 <col:58, col:69> col:70 'const char *'
| |-ParmVarDecl 0x55e1a8506718 <col:72, col:81> col:84 'unsigned int'
| `-ParmVarDecl 0x55e1a8506798 <col:86, col:97> col:98 'const char *'
|-FunctionDecl 0x55e1a8506b38 <line:361:20> col:20 implicit strtold 'long double (const char *, char **)' extern
| |-ParmVarDecl 0x55e1a8506bd8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x55e1a8506c40 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x55e1a8506cb8 prev 0x55e1a8506b38 <col:1, col:50> col:20 strtold 'long double (const char *, char **)' extern
| |-ParmVarDecl 0x55e1a85069d8 <col:29, col:40> col:41 'const char *'
| `-ParmVarDecl 0x55e1a8506a58 <col:43, col:49> col:50 'char **'
|-FunctionDecl 0x55e1a8506dc8 <line:363:1, col:23> col:12 used nondet_int 'int ()' extern
|-FunctionDecl 0x55e1a8507028 prev 0x55e1a84faaa0 <line:364:1, line:406:1> line:364:19 used strtoul 'unsigned long (const char *, char **, int)'
| |-ParmVarDecl 0x55e1a8506e80 <col:27, col:39> col:39 used ptr 'const char *'
| |-ParmVarDecl 0x55e1a8506f00 <col:44, col:51> col:51 used endptr 'char **'
| |-ParmVarDecl 0x55e1a8506f80 <col:59, col:63> col:63 used base 'int'
| `-CompoundStmt 0x55e1a850a640 <line:365:1, line:406:1>
|   |-DeclStmt 0x55e1a8507180 <line:366:3, col:14>
|   | `-VarDecl 0x55e1a85070f8 <col:3, col:13> col:7 used neg 'int' cinit
|   |   `-IntegerLiteral 0x55e1a8507160 <col:13> 'int' 0
|   |-DeclStmt 0x55e1a8507280 <line:367:3, col:24>
|   | `-VarDecl 0x55e1a85071e0 <col:3, col:23> col:21 used v 'unsigned long' cinit
|   |   `-ImplicitCastExpr 0x55e1a8507268 <col:23> 'unsigned long' <IntegralCast>
|   |     `-IntegerLiteral 0x55e1a8507248 <col:23> 'int' 0
|   |-DeclStmt 0x55e1a8507318 <line:368:3, col:19>
|   | `-VarDecl 0x55e1a85072b0 <col:3, col:15> col:15 used orig 'const char *'
|   |-DeclStmt 0x55e1a85073e8 <line:369:3, col:23>
|   | `-VarDecl 0x55e1a8507348 <col:3, col:20> col:15 used nptr 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55e1a85073d0 <col:20> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55e1a85073b0 <col:20> 'const char *' lvalue ParmVar 0x55e1a8506e80 'ptr' 'const char *'
|   |-WhileStmt 0x55e1a85074f0 <line:370:3, col:25>
|   | |-BinaryOperator 0x55e1a8507498 <col:9, col:18> 'int' '=='
|   | | |-ImplicitCastExpr 0x55e1a8507480 <col:9, col:10> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x55e1a8507468 <col:9, col:10> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x55e1a8507438 <col:9, col:10> 'const char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x55e1a8507420 <col:10> 'const char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x55e1a8507400 <col:10> 'const char *' lvalue Var 0x55e1a8507348 'nptr' 'const char *'
|   | | `-CharacterLiteral 0x55e1a8507450 <col:18> 'int' 32
|   | `-UnaryOperator 0x55e1a85074d8 <col:23, col:25> 'const char *' prefix '++'
|   |   `-DeclRefExpr 0x55e1a85074b8 <col:25> 'const char *' lvalue Var 0x55e1a8507348 'nptr' 'const char *'
|   |-IfStmt 0x55e1a8507780 <line:371:3, line:372:28> has_else
|   | |-BinaryOperator 0x55e1a85075a0 <line:371:7, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x55e1a8507588 <col:7, col:8> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x55e1a8507570 <col:7, col:8> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x55e1a8507540 <col:7, col:8> 'const char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x55e1a8507528 <col:8> 'const char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x55e1a8507508 <col:8> 'const char *' lvalue Var 0x55e1a8507348 'nptr' 'const char *'
|   | | `-CharacterLiteral 0x55e1a8507558 <col:16> 'int' 45
|   | |-CompoundStmt 0x55e1a8507658 <col:21, col:38>
|   | | |-BinaryOperator 0x55e1a8507600 <col:23, col:27> 'int' '='
|   | | | |-DeclRefExpr 0x55e1a85075c0 <col:23> 'int' lvalue Var 0x55e1a85070f8 'neg' 'int'
|   | | | `-IntegerLiteral 0x55e1a85075e0 <col:27> 'int' 1
|   | | `-UnaryOperator 0x55e1a8507640 <col:30, col:34> 'const char *' postfix '++'
|   | |   `-DeclRefExpr 0x55e1a8507620 <col:30> 'const char *' lvalue Var 0x55e1a8507348 'nptr' 'const char *'
|   | `-IfStmt 0x55e1a8507768 <line:372:8, col:28>
|   |   |-BinaryOperator 0x55e1a8507710 <col:12, col:21> 'int' '=='
|   |   | |-ImplicitCastExpr 0x55e1a85076f8 <col:12, col:13> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55e1a85076e0 <col:12, col:13> 'char' <LValueToRValue>
|   |   | |   `-UnaryOperator 0x55e1a85076b0 <col:12, col:13> 'const char' lvalue prefix '*' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55e1a8507698 <col:13> 'const char *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55e1a8507678 <col:13> 'const char *' lvalue Var 0x55e1a8507348 'nptr' 'const char *'
|   |   | `-CharacterLiteral 0x55e1a85076c8 <col:21> 'int' 43
|   |   `-UnaryOperator 0x55e1a8507750 <col:26, col:28> 'const char *' prefix '++'
|   |     `-DeclRefExpr 0x55e1a8507730 <col:28> 'const char *' lvalue Var 0x55e1a8507348 'nptr' 'const char *'
|   |-BinaryOperator 0x55e1a8507800 <line:373:3, col:8> 'const char *' '='
|   | |-DeclRefExpr 0x55e1a85077a8 <col:3> 'const char *' lvalue Var 0x55e1a85072b0 'orig' 'const char *'
|   | `-ImplicitCastExpr 0x55e1a85077e8 <col:8> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e1a85077c8 <col:8> 'const char *' lvalue Var 0x55e1a8507348 'nptr' 'const char *'
|   |-IfStmt 0x55e1a8507a00 <line:374:3, col:38>
|   | |-BinaryOperator 0x55e1a8507978 <col:7, col:28> 'int' '&&'
|   | | |-BinaryOperator 0x55e1a8507878 <col:7, col:13> 'int' '=='
|   | | | |-ImplicitCastExpr 0x55e1a8507860 <col:7> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x55e1a8507820 <col:7> 'int' lvalue ParmVar 0x55e1a8506f80 'base' 'int'
|   | | | `-IntegerLiteral 0x55e1a8507840 <col:13> 'int' 16
|   | | `-BinaryOperator 0x55e1a8507958 <col:19, col:28> 'int' '=='
|   | |   |-ImplicitCastExpr 0x55e1a8507940 <col:19, col:25> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x55e1a8507928 <col:19, col:25> 'char' <LValueToRValue>
|   | |   |   `-ArraySubscriptExpr 0x55e1a85078f0 <col:19, col:25> 'const char' lvalue
|   | |   |     |-ImplicitCastExpr 0x55e1a85078d8 <col:19> 'const char *' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x55e1a8507898 <col:19> 'const char *' lvalue Var 0x55e1a8507348 'nptr' 'const char *'
|   | |   |     `-IntegerLiteral 0x55e1a85078b8 <col:24> 'int' 0
|   | |   `-CharacterLiteral 0x55e1a8507910 <col:28> 'int' 48
|   | `-GotoStmt 0x55e1a85079e8 <col:33, col:38> 'skip0x' 0x55e1a8507998
|   |-IfStmt 0x55e1a85081b8 <line:375:3, line:388:3> has_else
|   | |-ImplicitCastExpr 0x55e1a8507a38 <line:375:7> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x55e1a8507a18 <col:7> 'int' lvalue ParmVar 0x55e1a8506f80 'base' 'int'
|   | |-CompoundStmt 0x55e1a8507ca0 <col:13, line:378:3>
|   | | |-DeclStmt 0x55e1a8507b60 <line:376:5, col:35>
|   | | | `-VarDecl 0x55e1a8507a68 <col:5, col:34> col:27 used b 'unsigned int' register cinit
|   | | |   `-ImplicitCastExpr 0x55e1a8507b48 <col:29, col:34> 'unsigned int' <IntegralCast>
|   | | |     `-BinaryOperator 0x55e1a8507b28 <col:29, col:34> 'int' '-'
|   | | |       |-ImplicitCastExpr 0x55e1a8507b10 <col:29> 'int' <LValueToRValue>
|   | | |       | `-DeclRefExpr 0x55e1a8507ad0 <col:29> 'int' lvalue ParmVar 0x55e1a8506f80 'base' 'int'
|   | | |       `-IntegerLiteral 0x55e1a8507af0 <col:34> 'int' 2
|   | | `-IfStmt 0x55e1a8507c88 <line:377:5, col:29>
|   | |   |-ParenExpr 0x55e1a8507c08 <col:9, col:14> 'int'
|   | |   | `-BinaryOperator 0x55e1a8507be8 <col:10, col:12> 'int' '>'
|   | |   |   |-ImplicitCastExpr 0x55e1a8507bb8 <col:10> 'unsigned int' <LValueToRValue>
|   | |   |   | `-DeclRefExpr 0x55e1a8507b78 <col:10> 'unsigned int' lvalue Var 0x55e1a8507a68 'b' 'unsigned int'
|   | |   |   `-ImplicitCastExpr 0x55e1a8507bd0 <col:12> 'unsigned int' <IntegralCast>
|   | |   |     `-IntegerLiteral 0x55e1a8507b98 <col:12> 'int' 34
|   | |   `-CompoundStmt 0x55e1a8507c70 <col:17, col:29>
|   | |     `-ReturnStmt 0x55e1a8507c60 <col:19, col:26>
|   | |       `-ImplicitCastExpr 0x55e1a8507c48 <col:26> 'unsigned long' <IntegralCast>
|   | |         `-IntegerLiteral 0x55e1a8507c28 <col:26> 'int' 0
|   | `-CompoundStmt 0x55e1a85081a0 <line:378:10, line:388:3>
|   |   `-IfStmt 0x55e1a8508178 <line:379:5, line:387:12> has_else
|   |     |-BinaryOperator 0x55e1a8507d58 <line:379:9, col:16> 'int' '=='
|   |     | |-ImplicitCastExpr 0x55e1a8507d40 <col:9, col:10> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55e1a8507d28 <col:9, col:10> 'char' <LValueToRValue>
|   |     | |   `-UnaryOperator 0x55e1a8507cf8 <col:9, col:10> 'const char' lvalue prefix '*' cannot overflow
|   |     | |     `-ImplicitCastExpr 0x55e1a8507ce0 <col:10> 'const char *' <LValueToRValue>
|   |     | |       `-DeclRefExpr 0x55e1a8507cc0 <col:10> 'const char *' lvalue Var 0x55e1a8507348 'nptr' 'const char *'
|   |     | `-CharacterLiteral 0x55e1a8507d10 <col:16> 'int' 48
|   |     |-CompoundStmt 0x55e1a85080f8 <col:21, line:386:5>
|   |     | |-BinaryOperator 0x55e1a8507db8 <line:380:7, col:12> 'int' '='
|   |     | | |-DeclRefExpr 0x55e1a8507d78 <col:7> 'int' lvalue ParmVar 0x55e1a8506f80 'base' 'int'
|   |     | | `-IntegerLiteral 0x55e1a8507d98 <col:12> 'int' 8
|   |     | `-LabelStmt 0x55e1a85080e0 <line:381:1, line:385:7> 'skip0x'
|   |     |   `-IfStmt 0x55e1a85080c8 <line:382:7, line:385:7>
|   |     |     |-ParenExpr 0x55e1a8507fb8 <line:382:11, col:38> 'int'
|   |     |     | `-BinaryOperator 0x55e1a8507f98 <col:12, col:35> 'int' '||'
|   |     |     |   |-BinaryOperator 0x55e1a8507e98 <col:12, col:21> 'int' '=='
|   |     |     |   | |-ImplicitCastExpr 0x55e1a8507e80 <col:12, col:18> 'int' <IntegralCast>
|   |     |     |   | | `-ImplicitCastExpr 0x55e1a8507e68 <col:12, col:18> 'char' <LValueToRValue>
|   |     |     |   | |   `-ArraySubscriptExpr 0x55e1a8507e30 <col:12, col:18> 'const char' lvalue
|   |     |     |   | |     |-ImplicitCastExpr 0x55e1a8507e18 <col:12> 'const char *' <LValueToRValue>
|   |     |     |   | |     | `-DeclRefExpr 0x55e1a8507dd8 <col:12> 'const char *' lvalue Var 0x55e1a8507348 'nptr' 'const char *'
|   |     |     |   | |     `-IntegerLiteral 0x55e1a8507df8 <col:17> 'int' 1
|   |     |     |   | `-CharacterLiteral 0x55e1a8507e50 <col:21> 'int' 120
|   |     |     |   `-BinaryOperator 0x55e1a8507f78 <col:26, col:35> 'int' '=='
|   |     |     |     |-ImplicitCastExpr 0x55e1a8507f60 <col:26, col:32> 'int' <IntegralCast>
|   |     |     |     | `-ImplicitCastExpr 0x55e1a8507f48 <col:26, col:32> 'char' <LValueToRValue>
|   |     |     |     |   `-ArraySubscriptExpr 0x55e1a8507f10 <col:26, col:32> 'const char' lvalue
|   |     |     |     |     |-ImplicitCastExpr 0x55e1a8507ef8 <col:26> 'const char *' <LValueToRValue>
|   |     |     |     |     | `-DeclRefExpr 0x55e1a8507eb8 <col:26> 'const char *' lvalue Var 0x55e1a8507348 'nptr' 'const char *'
|   |     |     |     |     `-IntegerLiteral 0x55e1a8507ed8 <col:31> 'int' 1
|   |     |     |     `-CharacterLiteral 0x55e1a8507f30 <col:35> 'int' 88
|   |     |     `-CompoundStmt 0x55e1a85080a8 <col:41, line:385:7>
|   |     |       |-CompoundAssignOperator 0x55e1a8508018 <line:383:2, col:8> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |     |       | |-DeclRefExpr 0x55e1a8507fd8 <col:2> 'const char *' lvalue Var 0x55e1a8507348 'nptr' 'const char *'
|   |     |       | `-IntegerLiteral 0x55e1a8507ff8 <col:8> 'int' 2
|   |     |       `-BinaryOperator 0x55e1a8508088 <line:384:2, col:7> 'int' '='
|   |     |         |-DeclRefExpr 0x55e1a8508048 <col:2> 'int' lvalue ParmVar 0x55e1a8506f80 'base' 'int'
|   |     |         `-IntegerLiteral 0x55e1a8508068 <col:7> 'int' 16
|   |     `-BinaryOperator 0x55e1a8508158 <line:387:7, col:12> 'int' '='
|   |       |-DeclRefExpr 0x55e1a8508118 <col:7> 'int' lvalue ParmVar 0x55e1a8506f80 'base' 'int'
|   |       `-IntegerLiteral 0x55e1a8508138 <col:12> 'int' 10
|   |-WhileStmt 0x55e1a85091d0 <line:389:3, line:399:3>
|   | |-ImplicitCastExpr 0x55e1a8508420 <line:389:9, col:15> 'char' <LValueToRValue>
|   | | `-ParenExpr 0x55e1a8508400 <col:9, col:15> 'const char' lvalue
|   | |   `-UnaryOperator 0x55e1a85083e8 <col:10, col:11> 'const char' lvalue prefix '*' cannot overflow
|   | |     `-ImplicitCastExpr 0x55e1a85083d0 <col:11> 'const char *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x55e1a85083b0 <col:11> 'const char *' lvalue Var 0x55e1a8507348 'nptr' 'const char *'
|   | `-CompoundStmt 0x55e1a8509198 <col:18, line:399:3>
|   |   |-DeclStmt 0x55e1a8508538 <line:390:5, col:35>
|   |   | `-VarDecl 0x55e1a8508450 <col:5, col:31> col:28 used c 'unsigned char' register cinit
|   |   |   `-ImplicitCastExpr 0x55e1a8508520 <col:30, col:31> 'unsigned char' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x55e1a8508508 <col:30, col:31> 'char' <LValueToRValue>
|   |   |       `-UnaryOperator 0x55e1a85084f0 <col:30, col:31> 'const char' lvalue prefix '*' cannot overflow
|   |   |         `-ImplicitCastExpr 0x55e1a85084d8 <col:31> 'const char *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x55e1a85084b8 <col:31> 'const char *' lvalue Var 0x55e1a8507348 'nptr' 'const char *'
|   |   |-BinaryOperator 0x55e1a8508a08 <line:391:5, col:57> 'unsigned char' '='
|   |   | |-DeclRefExpr 0x55e1a8508550 <col:5> 'unsigned char' lvalue Var 0x55e1a8508450 'c' 'unsigned char'
|   |   | `-ImplicitCastExpr 0x55e1a85089f0 <col:7, col:57> 'unsigned char' <IntegralCast>
|   |   |   `-ParenExpr 0x55e1a85089d0 <col:7, col:57> 'int'
|   |   |     `-ConditionalOperator 0x55e1a85089a0 <col:8, col:53> 'int'
|   |   |       |-BinaryOperator 0x55e1a85085d8 <col:8, col:11> 'int' '>='
|   |   |       | |-ImplicitCastExpr 0x55e1a85085c0 <col:8> 'int' <IntegralCast>
|   |   |       | | `-ImplicitCastExpr 0x55e1a85085a8 <col:8> 'unsigned char' <LValueToRValue>
|   |   |       | |   `-DeclRefExpr 0x55e1a8508570 <col:8> 'unsigned char' lvalue Var 0x55e1a8508450 'c' 'unsigned char'
|   |   |       | `-CharacterLiteral 0x55e1a8508590 <col:11> 'int' 97
|   |   |       |-BinaryOperator 0x55e1a85086a0 <col:15, col:21> 'int' '+'
|   |   |       | |-BinaryOperator 0x55e1a8508660 <col:15, col:17> 'int' '-'
|   |   |       | | |-ImplicitCastExpr 0x55e1a8508648 <col:15> 'int' <IntegralCast>
|   |   |       | | | `-ImplicitCastExpr 0x55e1a8508630 <col:15> 'unsigned char' <LValueToRValue>
|   |   |       | | |   `-DeclRefExpr 0x55e1a85085f8 <col:15> 'unsigned char' lvalue Var 0x55e1a8508450 'c' 'unsigned char'
|   |   |       | | `-CharacterLiteral 0x55e1a8508618 <col:17> 'int' 97
|   |   |       | `-IntegerLiteral 0x55e1a8508680 <col:21> 'int' 10
|   |   |       `-ConditionalOperator 0x55e1a8508970 <col:24, col:53> 'int'
|   |   |         |-BinaryOperator 0x55e1a8508728 <col:24, col:27> 'int' '>='
|   |   |         | |-ImplicitCastExpr 0x55e1a8508710 <col:24> 'int' <IntegralCast>
|   |   |         | | `-ImplicitCastExpr 0x55e1a85086f8 <col:24> 'unsigned char' <LValueToRValue>
|   |   |         | |   `-DeclRefExpr 0x55e1a85086c0 <col:24> 'unsigned char' lvalue Var 0x55e1a8508450 'c' 'unsigned char'
|   |   |         | `-CharacterLiteral 0x55e1a85086e0 <col:27> 'int' 65
|   |   |         |-BinaryOperator 0x55e1a85087f0 <col:31, col:37> 'int' '+'
|   |   |         | |-BinaryOperator 0x55e1a85087b0 <col:31, col:33> 'int' '-'
|   |   |         | | |-ImplicitCastExpr 0x55e1a8508798 <col:31> 'int' <IntegralCast>
|   |   |         | | | `-ImplicitCastExpr 0x55e1a8508780 <col:31> 'unsigned char' <LValueToRValue>
|   |   |         | | |   `-DeclRefExpr 0x55e1a8508748 <col:31> 'unsigned char' lvalue Var 0x55e1a8508450 'c' 'unsigned char'
|   |   |         | | `-CharacterLiteral 0x55e1a8508768 <col:33> 'int' 65
|   |   |         | `-IntegerLiteral 0x55e1a85087d0 <col:37> 'int' 10
|   |   |         `-ConditionalOperator 0x55e1a8508940 <col:40, col:53> 'int'
|   |   |           |-BinaryOperator 0x55e1a8508878 <col:40, col:43> 'int' '<='
|   |   |           | |-ImplicitCastExpr 0x55e1a8508860 <col:40> 'int' <IntegralCast>
|   |   |           | | `-ImplicitCastExpr 0x55e1a8508848 <col:40> 'unsigned char' <LValueToRValue>
|   |   |           | |   `-DeclRefExpr 0x55e1a8508810 <col:40> 'unsigned char' lvalue Var 0x55e1a8508450 'c' 'unsigned char'
|   |   |           | `-CharacterLiteral 0x55e1a8508830 <col:43> 'int' 57
|   |   |           |-BinaryOperator 0x55e1a8508900 <col:47, col:49> 'int' '-'
|   |   |           | |-ImplicitCastExpr 0x55e1a85088e8 <col:47> 'int' <IntegralCast>
|   |   |           | | `-ImplicitCastExpr 0x55e1a85088d0 <col:47> 'unsigned char' <LValueToRValue>
|   |   |           | |   `-DeclRefExpr 0x55e1a8508898 <col:47> 'unsigned char' lvalue Var 0x55e1a8508450 'c' 'unsigned char'
|   |   |           | `-CharacterLiteral 0x55e1a85088b8 <col:49> 'int' 48
|   |   |           `-IntegerLiteral 0x55e1a8508920 <col:53> 'int' 255
|   |   |-IfStmt 0x55e1a8508af8 <line:392:5, col:20>
|   |   | |-ParenExpr 0x55e1a8508ad0 <col:9, col:17> 'int'
|   |   | | `-BinaryOperator 0x55e1a8508ab0 <col:10, col:13> 'int' '>='
|   |   | |   |-ImplicitCastExpr 0x55e1a8508a98 <col:10> 'int' <IntegralCast>
|   |   | |   | `-ImplicitCastExpr 0x55e1a8508a68 <col:10> 'unsigned char' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55e1a8508a28 <col:10> 'unsigned char' lvalue Var 0x55e1a8508450 'c' 'unsigned char'
|   |   | |   `-ImplicitCastExpr 0x55e1a8508a80 <col:13> 'int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x55e1a8508a48 <col:13> 'int' lvalue ParmVar 0x55e1a8506f80 'base' 'int'
|   |   | `-BreakStmt 0x55e1a8508af0 <col:20>
|   |   |-CompoundStmt 0x55e1a8509138 <line:393:5, line:397:5>
|   |   | |-DeclStmt 0x55e1a8508d20 <line:394:7, col:47>
|   |   | | `-VarDecl 0x55e1a8508b28 <col:7, col:46> col:30 used x 'unsigned long' register cinit
|   |   | |   `-BinaryOperator 0x55e1a8508d00 <col:32, col:46> 'unsigned long' '+'
|   |   | |     |-BinaryOperator 0x55e1a8508c90 <col:32, col:41> 'unsigned long' '*'
|   |   | |     | |-ParenExpr 0x55e1a8508c20 <col:32, col:39> 'unsigned long'
|   |   | |     | | `-BinaryOperator 0x55e1a8508c00 <col:33, col:35> 'unsigned long' '&'
|   |   | |     | |   |-ImplicitCastExpr 0x55e1a8508bd0 <col:33> 'unsigned long' <LValueToRValue>
|   |   | |     | |   | `-DeclRefExpr 0x55e1a8508b90 <col:33> 'unsigned long' lvalue Var 0x55e1a85071e0 'v' 'unsigned long'
|   |   | |     | |   `-ImplicitCastExpr 0x55e1a8508be8 <col:35> 'unsigned long' <IntegralCast>
|   |   | |     | |     `-IntegerLiteral 0x55e1a8508bb0 <col:35> 'int' 255
|   |   | |     | `-ImplicitCastExpr 0x55e1a8508c78 <col:41> 'unsigned long' <IntegralCast>
|   |   | |     |   `-ImplicitCastExpr 0x55e1a8508c60 <col:41> 'int' <LValueToRValue>
|   |   | |     |     `-DeclRefExpr 0x55e1a8508c40 <col:41> 'int' lvalue ParmVar 0x55e1a8506f80 'base' 'int'
|   |   | |     `-ImplicitCastExpr 0x55e1a8508ce8 <col:46> 'unsigned long' <IntegralCast>
|   |   | |       `-ImplicitCastExpr 0x55e1a8508cd0 <col:46> 'unsigned char' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x55e1a8508cb0 <col:46> 'unsigned char' lvalue Var 0x55e1a8508450 'c' 'unsigned char'
|   |   | |-DeclStmt 0x55e1a8508f78 <line:395:7, col:50>
|   |   | | `-VarDecl 0x55e1a8508d50 <col:7, col:49> col:30 used w 'unsigned long' register cinit
|   |   | |   `-BinaryOperator 0x55e1a8508f58 <col:32, col:49> 'unsigned long' '+'
|   |   | |     |-BinaryOperator 0x55e1a8508ea0 <col:32, col:39> 'unsigned long' '*'
|   |   | |     | |-ParenExpr 0x55e1a8508e30 <col:32, col:37> 'unsigned long'
|   |   | |     | | `-BinaryOperator 0x55e1a8508e10 <col:33, col:36> 'unsigned long' '>>'
|   |   | |     | |   |-ImplicitCastExpr 0x55e1a8508df8 <col:33> 'unsigned long' <LValueToRValue>
|   |   | |     | |   | `-DeclRefExpr 0x55e1a8508db8 <col:33> 'unsigned long' lvalue Var 0x55e1a85071e0 'v' 'unsigned long'
|   |   | |     | |   `-IntegerLiteral 0x55e1a8508dd8 <col:36> 'int' 8
|   |   | |     | `-ImplicitCastExpr 0x55e1a8508e88 <col:39> 'unsigned long' <IntegralCast>
|   |   | |     |   `-ImplicitCastExpr 0x55e1a8508e70 <col:39> 'int' <LValueToRValue>
|   |   | |     |     `-DeclRefExpr 0x55e1a8508e50 <col:39> 'int' lvalue ParmVar 0x55e1a8506f80 'base' 'int'
|   |   | |     `-ParenExpr 0x55e1a8508f38 <col:44, col:49> 'unsigned long'
|   |   | |       `-BinaryOperator 0x55e1a8508f18 <col:45, col:48> 'unsigned long' '>>'
|   |   | |         |-ImplicitCastExpr 0x55e1a8508f00 <col:45> 'unsigned long' <LValueToRValue>
|   |   | |         | `-DeclRefExpr 0x55e1a8508ec0 <col:45> 'unsigned long' lvalue Var 0x55e1a8508b28 'x' 'unsigned long'
|   |   | |         `-IntegerLiteral 0x55e1a8508ee0 <col:48> 'int' 8
|   |   | `-BinaryOperator 0x55e1a8509118 <line:396:7, col:23> 'unsigned long' '='
|   |   |   |-DeclRefExpr 0x55e1a8508f90 <col:7> 'unsigned long' lvalue Var 0x55e1a85071e0 'v' 'unsigned long'
|   |   |   `-BinaryOperator 0x55e1a85090f8 <col:9, col:23> 'unsigned long' '+'
|   |   |     |-ParenExpr 0x55e1a8509028 <col:9, col:14> 'unsigned long'
|   |   |     | `-BinaryOperator 0x55e1a8509008 <col:10, col:13> 'unsigned long' '<<'
|   |   |     |   |-ImplicitCastExpr 0x55e1a8508ff0 <col:10> 'unsigned long' <LValueToRValue>
|   |   |     |   | `-DeclRefExpr 0x55e1a8508fb0 <col:10> 'unsigned long' lvalue Var 0x55e1a8508d50 'w' 'unsigned long'
|   |   |     |   `-IntegerLiteral 0x55e1a8508fd0 <col:13> 'int' 8
|   |   |     `-ParenExpr 0x55e1a85090d8 <col:16, col:23> 'unsigned long'
|   |   |       `-BinaryOperator 0x55e1a85090b8 <col:17, col:19> 'unsigned long' '&'
|   |   |         |-ImplicitCastExpr 0x55e1a8509088 <col:17> 'unsigned long' <LValueToRValue>
|   |   |         | `-DeclRefExpr 0x55e1a8509048 <col:17> 'unsigned long' lvalue Var 0x55e1a8508b28 'x' 'unsigned long'
|   |   |         `-ImplicitCastExpr 0x55e1a85090a0 <col:19> 'unsigned long' <IntegralCast>
|   |   |           `-IntegerLiteral 0x55e1a8509068 <col:19> 'int' 255
|   |   `-UnaryOperator 0x55e1a8509180 <line:398:5, col:7> 'const char *' prefix '++'
|   |     `-DeclRefExpr 0x55e1a8509160 <col:7> 'const char *' lvalue Var 0x55e1a8507348 'nptr' 'const char *'
|   |-IfStmt 0x55e1a850a3d0 <line:400:3, line:403:3>
|   | |-ParenExpr 0x55e1a8509278 <line:400:7, col:18> 'int'
|   | | `-BinaryOperator 0x55e1a8509258 <col:8, col:14> 'int' '=='
|   | |   |-ImplicitCastExpr 0x55e1a8509228 <col:8> 'const char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x55e1a85091e8 <col:8> 'const char *' lvalue Var 0x55e1a8507348 'nptr' 'const char *'
|   | |   `-ImplicitCastExpr 0x55e1a8509240 <col:14> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x55e1a8509208 <col:14> 'const char *' lvalue Var 0x55e1a85072b0 'orig' 'const char *'
|   | `-CompoundStmt 0x55e1a8509388 <col:21, line:403:3>
|   |   |-BinaryOperator 0x55e1a85092f0 <line:401:5, col:10> 'const char *' '='
|   |   | |-DeclRefExpr 0x55e1a8509298 <col:5> 'const char *' lvalue Var 0x55e1a8507348 'nptr' 'const char *'
|   |   | `-ImplicitCastExpr 0x55e1a85092d8 <col:10> 'const char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55e1a85092b8 <col:10> 'const char *' lvalue ParmVar 0x55e1a8506e80 'ptr' 'const char *'
|   |   `-BinaryOperator 0x55e1a8509368 <line:402:5, col:7> 'unsigned long' '='
|   |     |-DeclRefExpr 0x55e1a8509310 <col:5> 'unsigned long' lvalue Var 0x55e1a85071e0 'v' 'unsigned long'
|   |     `-ImplicitCastExpr 0x55e1a8509350 <col:7> 'unsigned long' <IntegralCast>
|   |       `-IntegerLiteral 0x55e1a8509330 <col:7> 'int' 0
|   |-IfStmt 0x55e1a850a508 <line:404:3, col:31>
|   | |-ImplicitCastExpr 0x55e1a850a408 <col:7> 'char **' <LValueToRValue>
|   | | `-DeclRefExpr 0x55e1a850a3e8 <col:7> 'char **' lvalue ParmVar 0x55e1a8506f00 'endptr' 'char **'
|   | `-BinaryOperator 0x55e1a850a4e8 <col:15, col:31> 'char *' '='
|   |   |-UnaryOperator 0x55e1a850a458 <col:15, col:16> 'char *' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x55e1a850a440 <col:16> 'char **' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55e1a850a420 <col:16> 'char **' lvalue ParmVar 0x55e1a8506f00 'endptr' 'char **'
|   |   `-CStyleCastExpr 0x55e1a850a4c0 <col:23, col:31> 'char *' <NoOp>
|   |     `-ImplicitCastExpr 0x55e1a850a4a8 <col:31> 'const char *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x55e1a850a470 <col:31> 'const char *' lvalue Var 0x55e1a8507348 'nptr' 'const char *'
|   `-ReturnStmt 0x55e1a850a630 <line:405:3, col:19>
|     `-ParenExpr 0x55e1a850a610 <col:10, col:19> 'unsigned long'
|       `-ConditionalOperator 0x55e1a850a5e0 <col:11, col:18> 'unsigned long'
|         |-ImplicitCastExpr 0x55e1a850a5b0 <col:11> 'int' <LValueToRValue>
|         | `-DeclRefExpr 0x55e1a850a520 <col:11> 'int' lvalue Var 0x55e1a85070f8 'neg' 'int'
|         |-UnaryOperator 0x55e1a850a578 <col:15, col:16> 'unsigned long' prefix '-'
|         | `-ImplicitCastExpr 0x55e1a850a560 <col:16> 'unsigned long' <LValueToRValue>
|         |   `-DeclRefExpr 0x55e1a850a540 <col:16> 'unsigned long' lvalue Var 0x55e1a85071e0 'v' 'unsigned long'
|         `-ImplicitCastExpr 0x55e1a850a5c8 <col:18> 'unsigned long' <LValueToRValue>
|           `-DeclRefExpr 0x55e1a850a590 <col:18> 'unsigned long' lvalue Var 0x55e1a85071e0 'v' 'unsigned long'
|-FunctionDecl 0x55e1a850a6e0 <line:407:1, line:415:1> line:407:5 main 'int ()'
| `-CompoundStmt 0x55e1a850b130 <col:11, line:415:1>
|   |-DeclStmt 0x55e1a850a888 <line:408:3, col:28>
|   | `-VarDecl 0x55e1a850a798 <col:3, col:27> col:7 used in_len 'int' cinit
|   |   `-CallExpr 0x55e1a850a868 <col:16, col:27> 'int'
|   |     `-ImplicitCastExpr 0x55e1a850a850 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55e1a850a800 <col:16> 'int ()' Function 0x55e1a8506dc8 'nondet_int' 'int ()'
|   |-IfStmt 0x55e1a850a960 <line:409:3, col:27>
|   | |-BinaryOperator 0x55e1a850a8f8 <col:6, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x55e1a850a8e0 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x55e1a850a8a0 <col:6> 'int' lvalue Var 0x55e1a850a798 'in_len' 'int'
|   | | `-IntegerLiteral 0x55e1a850a8c0 <col:15> 'int' 1
|   | `-CompoundStmt 0x55e1a850a948 <col:17, col:27>
|   |   `-ReturnStmt 0x55e1a850a938 <col:18, col:25>
|   |     `-IntegerLiteral 0x55e1a850a918 <col:25> 'int' 1
|   |-DeclStmt 0x55e1a850ac78 <line:410:3, col:38>
|   | `-VarDecl 0x55e1a850a990 <col:3, col:37> col:9 used in 'char *' cinit
|   |   `-ImplicitCastExpr 0x55e1a850ac60 <col:14, col:37> 'char *' <BitCast>
|   |     `-CallExpr 0x55e1a850ac08 <col:14, col:37> 'void *'
|   |       |-ImplicitCastExpr 0x55e1a850abf0 <col:14> 'void *(*)(unsigned long)' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0x55e1a850ab60 <col:14> '<builtin fn type>' Function 0x55e1a850a9f8 '__builtin_alloca' 'void *(unsigned long)'
|   |       `-ImplicitCastExpr 0x55e1a850ac48 <col:31> 'unsigned long' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55e1a850ac30 <col:31> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x55e1a850ab80 <col:31> 'int' lvalue Var 0x55e1a850a798 'in_len' 'int'
|   |-BinaryOperator 0x55e1a850ad98 <line:411:3, col:16> 'char' '='
|   | |-ArraySubscriptExpr 0x55e1a850ad40 <col:3, col:14> 'char' lvalue
|   | | |-ImplicitCastExpr 0x55e1a850ad28 <col:3> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x55e1a850ac90 <col:3> 'char *' lvalue Var 0x55e1a850a990 'in' 'char *'
|   | | `-BinaryOperator 0x55e1a850ad08 <col:6, col:13> 'int' '-'
|   | |   |-ImplicitCastExpr 0x55e1a850acf0 <col:6> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x55e1a850acb0 <col:6> 'int' lvalue Var 0x55e1a850a798 'in_len' 'int'
|   | |   `-IntegerLiteral 0x55e1a850acd0 <col:13> 'int' 1
|   | `-ImplicitCastExpr 0x55e1a850ad80 <col:16> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x55e1a850ad60 <col:16> 'int' 0
|   |-DeclStmt 0x55e1a850ae90 <line:412:3, col:26>
|   | `-VarDecl 0x55e1a850add0 <col:3, col:25> col:7 used base 'int' cinit
|   |   `-CallExpr 0x55e1a850ae70 <col:14, col:25> 'int'
|   |     `-ImplicitCastExpr 0x55e1a850ae58 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55e1a850ae38 <col:14> 'int ()' Function 0x55e1a8506dc8 'nondet_int' 'int ()'
|   |-DeclStmt 0x55e1a850af60 <line:413:3, col:16>
|   | `-VarDecl 0x55e1a850aec0 <col:3, col:15> col:9 used end 'char *' cinit
|   |   `-ImplicitCastExpr 0x55e1a850af48 <col:15> 'char *' <NullToPointer>
|   |     `-IntegerLiteral 0x55e1a850af28 <col:15> 'int' 0
|   `-ReturnStmt 0x55e1a850b120 <line:414:3, col:32>
|     `-ImplicitCastExpr 0x55e1a850b108 <col:10, col:32> 'int' <IntegralCast>
|       `-CallExpr 0x55e1a850b088 <col:10, col:32> 'unsigned long'
|         |-ImplicitCastExpr 0x55e1a850b070 <col:10> 'unsigned long (*)(const char *, char **, int)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55e1a850af78 <col:10> 'unsigned long (const char *, char **, int)' Function 0x55e1a8507028 'strtoul' 'unsigned long (const char *, char **, int)'
|         |-ImplicitCastExpr 0x55e1a850b0d8 <col:18> 'const char *' <NoOp>
|         | `-ImplicitCastExpr 0x55e1a850b0c0 <col:18> 'char *' <LValueToRValue>
|         |   `-DeclRefExpr 0x55e1a850af98 <col:18> 'char *' lvalue Var 0x55e1a850a990 'in' 'char *'
|         |-UnaryOperator 0x55e1a850afd8 <col:22, col:23> 'char **' prefix '&' cannot overflow
|         | `-DeclRefExpr 0x55e1a850afb8 <col:23> 'char *' lvalue Var 0x55e1a850aec0 'end' 'char *'
|         `-ImplicitCastExpr 0x55e1a850b0f0 <col:28> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55e1a850aff0 <col:28> 'int' lvalue Var 0x55e1a850add0 'base' 'int'
`-FunctionDecl 0x55e1a850a9f8 <line:410:14> col:14 implicit used __builtin_alloca 'void *(unsigned long)' extern
  |-ParmVarDecl 0x55e1a850aa98 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-NoThrowAttr 0x55e1a850ab08 <col:14> Implicit
