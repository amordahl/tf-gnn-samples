TranslationUnitDecl 0x561034460f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x561034461848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x561034461520 '__int128'
|-TypedefDecl 0x5610344618b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x561034461540 'unsigned __int128'
|-TypedefDecl 0x561034461bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x561034461990 'struct __NSConstantString_tag'
|   `-Record 0x561034461910 '__NSConstantString_tag'
|-TypedefDecl 0x561034461c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x561034461c20 'char *'
|   `-BuiltinType 0x561034461020 'char'
|-TypedefDecl 0x5610344a0b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x561034461f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x561034461d40 'struct __va_list_tag'
|     `-Record 0x561034461cc0 '__va_list_tag'
|-FunctionDecl 0x5610344a0ca0 <pthread-wmm/mix027_pso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5610344a0bd0 <col:31> col:34 'int'
|-FunctionDecl 0x5610344a0e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5610344a0f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5610344a10d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5610344a1048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5610344a1308 <col:40, col:99>
|   |-IfStmt 0x5610344a12d8 <col:42, col:88>
|   | |-UnaryOperator 0x5610344a11b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5610344a11a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5610344a1180 <col:47> 'int' lvalue ParmVar 0x5610344a1048 'expression' 'int'
|   | `-CompoundStmt 0x5610344a12c0 <col:59, col:88>
|   |   `-LabelStmt 0x5610344a12a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5610344a1238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5610344a1220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5610344a11d0 <col:68> 'void () __attribute__((noreturn))' Function 0x5610344a0f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5610344a12f0 <col:89>
|   `-ReturnStmt 0x5610344a12f8 <col:91>
|-FunctionDecl 0x5610344a1350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5610344a1410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5610344a1790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5610344a14c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5610344a1548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5610344a15c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5610344a1648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5610344a1850 <line:10:22>
|-FunctionDecl 0x5610344c78a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5610344a18c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5610344a1940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5610344a19c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5610344a1a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5610344c7960 <line:13:22>
|-FunctionDecl 0x5610344c7c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5610344c79d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5610344c7a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5610344c7ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5610344c7cc8 <line:15:22>
|-TypedefDecl 0x5610344c7d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5610344610e0 'unsigned char'
|-TypedefDecl 0x5610344c7da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x561034461100 'unsigned short'
|-TypedefDecl 0x5610344c7e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x561034461120 'unsigned int'
|-TypedefDecl 0x5610344c7e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x561034461140 'unsigned long'
|-TypedefDecl 0x5610344c7ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x561034461040 'signed char'
|-TypedefDecl 0x5610344c7f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5610344610e0 'unsigned char'
|-TypedefDecl 0x5610344c7fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x561034461060 'short'
|-TypedefDecl 0x5610344c8048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x561034461100 'unsigned short'
|-TypedefDecl 0x5610344c80b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x561034461080 'int'
|-TypedefDecl 0x5610344c8128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x561034461120 'unsigned int'
|-TypedefDecl 0x5610344c8198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5610344610a0 'long'
|-TypedefDecl 0x5610344c8208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x561034461140 'unsigned long'
|-TypedefDecl 0x5610344c8278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5610344610a0 'long'
|-TypedefDecl 0x5610344c82e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x561034461140 'unsigned long'
|-TypedefDecl 0x5610344c8358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x561034461140 'unsigned long'
|-TypedefDecl 0x5610344c83c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x561034461120 'unsigned int'
|-TypedefDecl 0x5610344c8438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x561034461120 'unsigned int'
|-TypedefDecl 0x5610344c84a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x561034461140 'unsigned long'
|-TypedefDecl 0x5610344c8518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x561034461140 'unsigned long'
|-TypedefDecl 0x5610344c8588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x561034461120 'unsigned int'
|-TypedefDecl 0x5610344c85f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x561034461140 'unsigned long'
|-TypedefDecl 0x5610344c8668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5610344610a0 'long'
|-TypedefDecl 0x5610344c86d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5610344610a0 'long'
|-TypedefDecl 0x5610344c8748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x561034461080 'int'
|-RecordDecl 0x5610344c87a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5610344c8918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5610344c89d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5610344c8970 'struct __fsid_t' sugar
|   `-RecordType 0x5610344c8820 '__fsid_t'
|     `-Record 0x5610344c87a0 ''
|-TypedefDecl 0x5610344c8a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5610344610a0 'long'
|-TypedefDecl 0x5610344c8ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x561034461140 'unsigned long'
|-TypedefDecl 0x5610344c8b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x561034461140 'unsigned long'
|-TypedefDecl 0x5610344c8ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x561034461120 'unsigned int'
|-TypedefDecl 0x5610344c8c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5610344610a0 'long'
|-TypedefDecl 0x5610344c8c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x561034461120 'unsigned int'
|-TypedefDecl 0x5610344c8cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5610344610a0 'long'
|-TypedefDecl 0x5610344c8d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x561034461080 'int'
|-TypedefDecl 0x5610344c8dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x561034461080 'int'
|-TypedefDecl 0x5610344c8e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x561034461080 'int'
|-TypedefDecl 0x5610344c8eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5610344617a0 'void *'
|   `-BuiltinType 0x561034460fe0 'void'
|-TypedefDecl 0x5610344c8f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5610344610a0 'long'
|-TypedefDecl 0x5610344c8f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5610344610a0 'long'
|-TypedefDecl 0x5610344c9008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5610344610a0 'long'
|-TypedefDecl 0x5610344c9078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x561034461140 'unsigned long'
|-TypedefDecl 0x5610344c90e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x561034461140 'unsigned long'
|-TypedefDecl 0x5610344c9158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x561034461140 'unsigned long'
|-TypedefDecl 0x5610344c91c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x561034461140 'unsigned long'
|-TypedefDecl 0x5610344c9238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5610344610a0 'long'
|-TypedefDecl 0x5610344c92a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5610344610a0 'long'
|-TypedefDecl 0x5610344c9318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5610344610a0 'long'
|-TypedefDecl 0x5610344c9388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x561034461140 'unsigned long'
|-TypedefDecl 0x5610344c9418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5610344c93e0 '__off64_t' sugar
|   |-Typedef 0x5610344c86d8 '__off64_t'
|   `-BuiltinType 0x5610344610a0 'long'
|-TypedefDecl 0x5610344c9510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5610344c94d0 '__quad_t *'
|   `-TypedefType 0x5610344c9470 '__quad_t' sugar
|     |-Typedef 0x5610344c8278 '__quad_t'
|     `-BuiltinType 0x5610344610a0 'long'
|-TypedefDecl 0x5610344c9580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x561034461c20 'char *'
|   `-BuiltinType 0x561034461020 'char'
|-TypedefDecl 0x5610344c95f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5610344610a0 'long'
|-TypedefDecl 0x5610344c9660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x561034461120 'unsigned int'
|-FunctionDecl 0x5610344c97a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5610344c96d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5610344c9ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5610344c9ad8 <line:72:3, col:34>
|     `-CallExpr 0x5610344c9a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5610344c9a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5610344c9a10 <col:10> '<builtin fn type>' Function 0x5610344c9880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5610344c9ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5610344c9a30 <col:29> 'unsigned int' lvalue ParmVar 0x5610344c96d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5610344c9880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5610344c9920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5610344c9990 <col:10> Implicit
| `-ConstAttr 0x5610344c99e8 <col:10> Implicit
|-FunctionDecl 0x5610344c9c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5610344c9b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5610344c9f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5610344c9f48 <line:77:3, col:34>
|     `-CallExpr 0x5610344c9f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5610344c9ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5610344c9e78 <col:10> '<builtin fn type>' Function 0x5610344c9ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5610344c9f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5610344c9e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5610344c9b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5610344c9ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5610344c9d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5610344c9df8 <col:10> Implicit
| `-ConstAttr 0x5610344c9e50 <col:10> Implicit
|-TypedefDecl 0x5610344c9f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x561034461140 'unsigned long'
|-TypedefDecl 0x5610344ca018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5610344c9fe0 '__time_t' sugar
|   |-Typedef 0x5610344c8c18 '__time_t'
|   `-BuiltinType 0x5610344610a0 'long'
|-RecordDecl 0x5610344ca070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5610344ca128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5610344ca1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5610344ca248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5610344ca210 '__pid_t' sugar
|   |-Typedef 0x5610344c8748 '__pid_t'
|   `-BuiltinType 0x561034461080 'int'
|-RecordDecl 0x5610344ca2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5610344ca360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5610344ca3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5610344ca470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5610344ca4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x561034461140 'unsigned long'
|-RecordDecl 0x5610344ca530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5610344ca7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5610344cc8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5610344ca810 'struct cpu_set_t' sugar
|   `-RecordType 0x5610344ca5b0 'cpu_set_t'
|     `-Record 0x5610344ca530 ''
|-FunctionDecl 0x5610344ccb88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5610344cc958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5610344cca60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5610344ccc38 <line:107:19>
|-FunctionDecl 0x5610344cce10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5610344ccca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5610344cceb8 <col:69>
|-FunctionDecl 0x5610344cd030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5610344ccf20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5610344cd0d8 <col:64>
|-FunctionDecl 0x5610344cd398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5610344cd140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5610344cd278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5610344cd448 <line:113:22>
|-FunctionDecl 0x5610344cd6c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5610344cd4b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5610344cd5a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5610344cd778 <col:88>
|-FunctionDecl 0x5610344cda98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5610344cd7e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5610344cd8c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5610344cd950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5610344cdb50 <col:62>
|-FunctionDecl 0x5610344cdcc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5610344cdbb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5610344cdd70 <col:63>
|-FunctionDecl 0x5610344cde98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5610344cdf38 <col:47>
|-FunctionDecl 0x5610344ce040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5610344cdfa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5610344ce0e8 <col:69>
|-FunctionDecl 0x5610344ce1f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5610344ce158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5610344ce298 <col:69>
|-FunctionDecl 0x5610344ce558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5610344ce300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5610344ce438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5610344ce608 <col:88>
|-TypedefDecl 0x5610344ce698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5610344ce660 '__clock_t' sugar
|   |-Typedef 0x5610344c8a58 '__clock_t'
|   `-BuiltinType 0x5610344610a0 'long'
|-TypedefDecl 0x5610344ce728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5610344ce6f0 '__clockid_t' sugar
|   |-Typedef 0x5610344c8e48 '__clockid_t'
|   `-BuiltinType 0x561034461080 'int'
|-TypedefDecl 0x5610344ce7b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5610344ce780 '__timer_t' sugar
|   |-Typedef 0x5610344c8eb8 '__timer_t'
|   `-PointerType 0x5610344617a0 'void *'
|     `-BuiltinType 0x561034460fe0 'void'
|-RecordDecl 0x5610344ce810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5610344ce8e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5610344ce950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5610344ce9b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5610344cea20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5610344cea88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5610344ceaf0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5610344ceb58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5610344cebc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5610344cec28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5610344cec90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5610344cecf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5610344ced48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5610344cee18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5610344cee88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5610344cef30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5610344cf100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5610344cf1a0 <col:45>
|-FunctionDecl 0x5610344cf380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5610344cf270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5610344cf428 <col:54>
|-FunctionDecl 0x5610344cf628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5610344cf490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5610344cf508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5610344cf6d8 <line:157:22>
| `-ConstAttr 0x5610344cf730 <col:63>
|-FunctionDecl 0x5610344d0560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5610344cf828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5610344d0608 <col:56>
|-FunctionDecl 0x5610344d09b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5610344d0678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5610344d06f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5610344d0770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5610344d0868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5610344d0a70 <col:54>
|-RecordDecl 0x5610344d0ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5610344d0b78 parent 0x561034460f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5610344d0dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5610344d0e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5610344d0ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5610344d0f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5610344d1038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5610344d1158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5610344d1100 'struct __locale_struct *'
|   `-ElaboratedType 0x5610344d1090 'struct __locale_struct' sugar
|     `-RecordType 0x5610344d0b50 'struct __locale_struct'
|       `-Record 0x5610344d0ac8 '__locale_struct'
|-TypedefDecl 0x5610344d1208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5610344d11d0 '__locale_t' sugar
|   |-Typedef 0x5610344d1158 '__locale_t'
|   `-PointerType 0x5610344d1100 'struct __locale_struct *'
|     `-ElaboratedType 0x5610344d1090 'struct __locale_struct' sugar
|       `-RecordType 0x5610344d0b50 'struct __locale_struct'
|         `-Record 0x5610344d0ac8 '__locale_struct'
|-FunctionDecl 0x5610344d1610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5610344d1278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5610344d12f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5610344d1370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5610344d1400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5610344d1478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5610344d16d8 <col:40>
|-FunctionDecl 0x5610344d18c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5610344d17a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5610344d1970 <col:66>
|-FunctionDecl 0x5610344d1a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5610344d19d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5610344d1b28 <col:69>
|-FunctionDecl 0x5610344d1d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5610344d1b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5610344d1c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5610344d1e08 <col:52>
|-FunctionDecl 0x5610344d1fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5610344d1e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5610344d1f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5610344d2060 <col:55>
|-FunctionDecl 0x5610344d21f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5610344d20e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5610344d22a0 <col:62>
|-FunctionDecl 0x5610344d2418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5610344d2308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5610344d24c0 <col:60>
|-FunctionDecl 0x5610344d2718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5610344d2578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5610344d25f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5610344d27c8 <col:44>
|-FunctionDecl 0x5610344d29d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5610344d2830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5610344d28b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5610344d2a88 <col:49>
|-VarDecl 0x5610344d2b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5610344d2c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5610344d2c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5610344d2d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5610344d2e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5610344d2f20 <col:42>
|-VarDecl 0x5610344d2f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5610344d3010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5610344d3198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5610344d3088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5610344d3240 <col:57>
|-FunctionDecl 0x5610344d3350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5610344d32c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5610344d33f8 <col:56>
|-FunctionDecl 0x5610344d4540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5610344d3478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5610344d45e8 <col:59>
|-FunctionDecl 0x5610344d46f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5610344d4658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5610344d4798 <col:48>
| `-ConstAttr 0x5610344d47f0 <col:89>
|-FunctionDecl 0x5610344d4a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5610344d48a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5610344d4938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5610344d4cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5610344d4b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5610344d4bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5610344d4d68 <col:88>
|-FunctionDecl 0x5610344d4f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5610344d4dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5610344d4e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5610344d4fb0 <col:88>
|-FunctionDecl 0x5610344d51c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5610344d5018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5610344d50a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5610344d5278 <line:208:22>
|-FunctionDecl 0x5610344d55e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5610344d52e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5610344d5360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5610344d53f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5610344d5480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5610344d58e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5610344d56e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5610344d57c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5610344d5998 <col:85>
|-FunctionDecl 0x5610344d5d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5610344d5a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5610344d5b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5610344d5c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5610344d5e40 <col:52>
|-FunctionDecl 0x5610344d5fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5610344d5ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5610344d6060 <col:61>
|-FunctionDecl 0x5610344d6560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5610344d60c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5610344d6148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5610344d6278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5610344d6368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5610344d6620 <col:62>
|-FunctionDecl 0x5610344d6838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5610344d6688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5610344d6718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5610344d68e8 <line:221:22>
|-FunctionDecl 0x5610344d69e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5610344d6950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5610344d6a90 <col:65>
|-TypedefDecl 0x5610344d6b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x561034461140 'unsigned long'
|-RecordDecl 0x5610344d6b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5610344d6ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5610344d6d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5610344d6db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5610344d6d60 'union pthread_attr_t' sugar
|   `-RecordType 0x5610344d6be0 'union pthread_attr_t'
|     `-Record 0x5610344d6b58 'pthread_attr_t'
|-RecordDecl 0x5610344d6e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5610344d6f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5610344d7000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5610344d70b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5610344d7050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5610344d6e90 'struct __pthread_internal_list'
|     `-Record 0x5610344d6e10 '__pthread_internal_list'
|-RecordDecl 0x5610344d7120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5610344d71c8 parent 0x561034460f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5610344d72a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5610344d7308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5610344d7370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5610344d73d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5610344d7440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5610344d74a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5610344db580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5610344db630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5610344db720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5610344db788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5610344db910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5610344db8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5610344d71a0 'pthread_mutex_t'
|     `-Record 0x5610344d7120 ''
|-RecordDecl 0x5610344db980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5610344dbac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5610344dbb28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5610344dbbe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5610344dbb80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5610344dba00 'pthread_mutexattr_t'
|     `-Record 0x5610344db980 ''
|-RecordDecl 0x5610344dbc50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5610344dbcf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5610344dbdc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5610344dbe28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5610344dbe90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5610344dbef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5610344dbf60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5610344dbfc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5610344dc030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5610344dc098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5610344dc150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix027_pso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix027_pso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5610344dc240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5610344dc2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5610344dc3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5610344dc380 'union pthread_cond_t' sugar
|   `-RecordType 0x5610344dbcd0 'pthread_cond_t'
|     `-Record 0x5610344dbc50 ''
|-RecordDecl 0x5610344dc450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5610344dc590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5610344dc5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5610344dc6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5610344dc650 'union pthread_condattr_t' sugar
|   `-RecordType 0x5610344dc4d0 'pthread_condattr_t'
|     `-Record 0x5610344dc450 ''
|-TypedefDecl 0x5610344dc738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x561034461120 'unsigned int'
|-TypedefDecl 0x5610344dc7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x561034461080 'int'
|-RecordDecl 0x5610344dc800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5610344dc8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5610344dc970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5610344dc9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5610344dca40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5610344dcaa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5610344dcb10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5610344dcb78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5610344dcbe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5610344dcc48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5610344dccb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5610344dcd18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5610344dcd80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5610344dce30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix027_pso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix027_pso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5610344dced8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5610344dcf40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5610344dd090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5610344dd030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5610344dc880 'pthread_rwlock_t'
|     `-Record 0x5610344dc800 ''
|-RecordDecl 0x5610344dd100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5610344dd240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5610344dd2a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5610344dd360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5610344dd300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5610344dd180 'pthread_rwlockattr_t'
|     `-Record 0x5610344dd100 ''
|-TypedefDecl 0x5610344dd3e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x561034461084 'volatile int' volatile
|   `-BuiltinType 0x561034461080 'int'
|-RecordDecl 0x5610344dd440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5610344df5b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5610344df618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5610344df6d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5610344df670 'union pthread_barrier_t' sugar
|   `-RecordType 0x5610344dd4c0 'pthread_barrier_t'
|     `-Record 0x5610344dd440 ''
|-RecordDecl 0x5610344df740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5610344df840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5610344df8a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5610344df960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5610344df900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5610344df7c0 'pthread_barrierattr_t'
|     `-Record 0x5610344df740 ''
|-TypedefDecl 0x5610344dfa78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5610344dfa10 'long [8]' 8 
|   `-BuiltinType 0x5610344610a0 'long'
|-EnumDecl 0x5610344dfad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5610344dfb98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5610344dfbe8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5610344dfc38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5610344dfd08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5610344dfd58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5610344dfda8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5610344dfdf8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5610344dfe80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5610344dfe68 <col:26> 'int'
| |   `-DeclRefExpr 0x5610344dfe48 <col:26> 'int' EnumConstant 0x5610344dfd08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5610344dff08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5610344dfef0 <col:29> 'int'
| |   `-DeclRefExpr 0x5610344dfed0 <col:29> 'int' EnumConstant 0x5610344dfd58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5610344dff90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5610344dff78 <col:30> 'int'
| |   `-DeclRefExpr 0x5610344dff58 <col:30> 'int' EnumConstant 0x5610344dfda8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5610344e0018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5610344e0000 <col:27> 'int'
|     `-DeclRefExpr 0x5610344dffe0 <col:27> 'int' EnumConstant 0x5610344dfe80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5610344e0068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5610344e0138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5610344e01c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5610344e01a8 <col:30> 'int'
| |   `-DeclRefExpr 0x5610344e0188 <col:30> 'int' EnumConstant 0x5610344e0138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5610344e0210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5610344e0298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5610344e0280 <col:29> 'int'
|     `-DeclRefExpr 0x5610344e0260 <col:29> 'int' EnumConstant 0x5610344e0210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5610344e02e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5610344e03b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5610344e0408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5610344e0458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5610344e04a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5610344e05c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5610344e0610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5610344e0660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5610344e06e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5610344e06d0 <col:31> 'int'
|     `-DeclRefExpr 0x5610344e06b0 <col:31> 'int' EnumConstant 0x5610344e05c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5610344e0738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5610344e0808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5610344e0858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5610344e08a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5610344e0978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5610344e09c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5610344e0a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5610344e0ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5610344e0b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5610344e0b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5610344e0dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5610344e0e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5610344e0e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5610344e0fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5610344e1008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5610344e10d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5610344e1128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5610344e1178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5610344e1248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5610344e1298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5610344e18f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5610344e1390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5610344e14a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5610344e16e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5610344e1760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5610344e19b8 <col:47>
| |-NonNullAttr 0x5610344e1a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x5610344e1a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5610344e1b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5610344e1aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5610344e1dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5610344e1c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5610344e1ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5610344e1f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5610344e1e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5610344e2040 <col:60>
|-FunctionDecl 0x5610344e2190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5610344e2230 <col:54>
| `-ConstAttr 0x5610344e2288 <col:95>
|-FunctionDecl 0x5610344e2458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5610344e22c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5610344e2338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5610344e2508 <line:394:19>
| `-ConstAttr 0x5610344e2560 <col:60>
|-FunctionDecl 0x5610344e2f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5610344e2e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5610344e3010 <col:71>
| `-NonNullAttr 0x5610344e3068 <col:112, col:126> 1
|-FunctionDecl 0x5610344e3170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5610344e30b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5610344e3218 <line:397:22>
| `-NonNullAttr 0x5610344e3270 <col:63, col:77> 1
|-FunctionDecl 0x5610344e3498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5610344e32b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5610344e3338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5610344e3548 <line:400:22>
| `-NonNullAttr 0x5610344e35a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5610344e37a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5610344e35e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5610344e3668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5610344e3858 <line:403:22>
| `-NonNullAttr 0x5610344e38b0 <col:63, col:77> 1
|-FunctionDecl 0x5610344e3b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5610344e38f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5610344e39a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5610344e3bb8 <line:406:22>
| `-NonNullAttr 0x5610344e3c10 <col:63, col:80> 1 2
|-FunctionDecl 0x5610344e4e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5610344e3c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5610344e3cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5610344e4ef8 <line:409:22>
| `-NonNullAttr 0x5610344e4f50 <col:63, col:77> 1
|-FunctionDecl 0x5610344e5188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5610344e4f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5610344e5028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5610344e5238 <line:412:22>
| `-NonNullAttr 0x5610344e5290 <col:63, col:80> 1 2
|-FunctionDecl 0x5610344e54c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5610344e52d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5610344e5368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5610344e5578 <col:37>
| `-NonNullAttr 0x5610344e55d0 <col:78, col:95> 1 2
|-FunctionDecl 0x5610344e57b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5610344e5618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5610344e5698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5610344e5868 <line:418:22>
| `-NonNullAttr 0x5610344e58c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5610344e5a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5610344e5908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5610344e5988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5610344e5af8 <line:420:22>
| `-NonNullAttr 0x5610344e5b50 <col:63, col:77> 1
|-FunctionDecl 0x5610344e5cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5610344e5b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5610344e5c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5610344e5da8 <line:423:22>
| `-NonNullAttr 0x5610344e6e30 <col:63, col:80> 1 2
|-FunctionDecl 0x5610344e6fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5610344e6e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5610344e6ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5610344e7068 <line:426:22>
| `-NonNullAttr 0x5610344e70c0 <col:63, col:77> 1
|-FunctionDecl 0x5610344e7268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5610344e7108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5610344e7188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5610344e7318 <line:429:22>
| `-NonNullAttr 0x5610344e7370 <col:63, col:80> 1 2
|-FunctionDecl 0x5610344e74f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5610344e73b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5610344e7438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5610344e75a8 <line:431:22>
| `-NonNullAttr 0x5610344e7600 <col:63, col:77> 1
|-FunctionDecl 0x5610344e7828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5610344e7648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5610344e76c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5610344e78d8 <line:434:22>
| |-NonNullAttr 0x5610344e7930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5610344e7968 <col:100> "" ""
|-FunctionDecl 0x5610344e7b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5610344e79b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5610344e7a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5610344e7c28 <line:437:22>
| |-NonNullAttr 0x5610344e7c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x5610344e7cb8 <col:97> "" ""
|-FunctionDecl 0x5610344e7eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5610344e7d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5610344e7d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5610344e7f68 <line:440:22>
| `-NonNullAttr 0x5610344e7fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x5610344e8140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5610344e8008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5610344e8080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5610344e81f0 <line:443:22>
| `-NonNullAttr 0x5610344e8248 <col:63, col:77> 1
|-FunctionDecl 0x5610344e8538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5610344e8298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5610344e8318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5610344e8390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5610344e85f0 <line:447:22>
| `-NonNullAttr 0x5610344e8648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5610344e88f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5610344e86a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5610344e8720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5610344e8798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5610344e89b0 <col:43>
| `-NonNullAttr 0x5610344e8a08 <col:84, col:98> 1
|-FunctionDecl 0x5610344e8cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5610344e8a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5610344e8ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5610344e8b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5610344e8d80 <line:452:22>
| `-NonNullAttr 0x5610344e8dd8 <col:63, col:77> 3
|-FunctionDecl 0x5610344e90e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5610344e8e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5610344e8ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5610344e8f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5610344e91a0 <line:456:22>
| `-NonNullAttr 0x5610344e91f8 <col:63, col:80> 2 3
|-FunctionDecl 0x5610344e93e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5610344e9248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5610344e92c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5610344e9498 <line:458:22>
|-FunctionDecl 0x5610344e9868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5610344e9560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5610344e9700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5610344e9918 <col:52, col:69> 1 2
|-FunctionDecl 0x5610344e9ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5610344e99a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5610344e9a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5610344e9ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5610344e9b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5610344e9c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5610344e9e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5610344e9d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5610344e9fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5610344ea040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5610344ea0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5610344ea1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5610344ea240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5610344ea410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix027_pso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5610344ea508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5610344ea5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5610344ea560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5610344ea0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x5610344ea040 ''
| `-AlignedAttr 0x5610344ea618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5610344ea690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5610344ea7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5610344ea858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5610344ea8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5610344ea928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5610344eab30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5610344eaa20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5610344eac78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5610344eabe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5610344eae70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5610344ead30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5610344eaf18 <line:487:22>
|-RecordDecl 0x5610344eaf70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5610344eb288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5610344eb0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5610344eb168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5610344eb338 <col:86>
| `-ReturnsTwiceAttr 0x5610344eb390 <col:12> Implicit
|-FunctionDecl 0x5610344eb6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5610344eb460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5610344eb570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5610344eb768 <line:493:22>
| `-NonNullAttr 0x5610344eb7c0 <col:63, col:77> 1
|-FunctionDecl 0x5610344eb938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5610344eb808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5610344eb9e0 <line:495:22>
| `-NonNullAttr 0x5610344eba38 <col:63, col:77> 1
|-FunctionDecl 0x5610344ebb40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5610344eba88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5610344ebbe8 <line:497:22>
| `-NonNullAttr 0x5610344ebc40 <col:52, col:66> 1
|-FunctionDecl 0x5610344ebd40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5610344ebc88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5610344ebde8 <line:499:22>
| `-NonNullAttr 0x5610344ebe40 <col:52, col:66> 1
|-FunctionDecl 0x5610344ec088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5610344ebe98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5610344ebf28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5610344ec138 <col:36>
| `-NonNullAttr 0x5610344ec190 <col:66, col:83> 1 2
|-FunctionDecl 0x5610344ec290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5610344ec1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5610344ec338 <line:504:22>
| `-NonNullAttr 0x5610344ec390 <col:52, col:66> 1
|-FunctionDecl 0x5610344ec628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5610344ec440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5610344ec4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5610344ec6d8 <line:508:22>
| `-NonNullAttr 0x5610344ec730 <col:63, col:80> 1 2
|-FunctionDecl 0x5610344ec9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5610344ec778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5610344ec7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5610344ec878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5610344ecab0 <line:512:22>
| `-NonNullAttr 0x5610344ecb08 <col:63, col:80> 1 3
|-FunctionDecl 0x5610344ecc10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5610344ecb58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5610344eccb8 <line:514:22>
| `-NonNullAttr 0x5610344ecd10 <col:63, col:77> 1
|-FunctionDecl 0x5610344ecf38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5610344ecdc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5610344ecfe0 <line:516:22>
| `-NonNullAttr 0x5610344ed038 <col:63, col:77> 1
|-FunctionDecl 0x5610344ed140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5610344ed088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5610344ed1e8 <line:518:22>
| `-NonNullAttr 0x5610344ed240 <col:63, col:77> 1
|-FunctionDecl 0x5610344ed468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5610344ed288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5610344ed308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5610344ed518 <line:522:22>
| `-NonNullAttr 0x5610344ed570 <col:63, col:80> 1 2
|-FunctionDecl 0x5610344ed778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5610344ed5b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5610344ed638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5610344ed828 <line:525:22>
| `-NonNullAttr 0x5610344ed880 <col:63, col:77> 1
|-FunctionDecl 0x5610344eda28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5610344ed8c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5610344ed948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5610344edad8 <line:528:22>
| `-NonNullAttr 0x5610344edb30 <col:63, col:80> 1 2
|-FunctionDecl 0x5610344edcb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5610344edb78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5610344edbf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5610344edd68 <line:530:22>
| `-NonNullAttr 0x5610344eddc0 <col:63, col:77> 1
|-FunctionDecl 0x5610344eef90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5610344ede08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5610344eeeb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5610344ef040 <line:534:22>
| `-NonNullAttr 0x5610344ef098 <col:63, col:80> 1 2
|-FunctionDecl 0x5610344ef228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5610344ef0e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5610344ef168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5610344ef2d8 <line:537:22>
| `-NonNullAttr 0x5610344ef330 <col:63, col:77> 1
|-FunctionDecl 0x5610344ef4d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5610344ef378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5610344ef3f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5610344ef588 <line:541:22>
| `-NonNullAttr 0x5610344ef5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5610344ef768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5610344ef628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5610344ef6a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5610344ef818 <line:544:22>
| `-NonNullAttr 0x5610344ef870 <col:63, col:77> 1
|-FunctionDecl 0x5610344efa58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5610344ef8b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5610344ef938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5610344efb08 <line:547:22>
| `-NonNullAttr 0x5610344efb60 <col:63, col:80> 1 2
|-FunctionDecl 0x5610344efce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5610344efba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5610344efc28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5610344efd98 <line:550:22>
| `-NonNullAttr 0x5610344efdf0 <col:63, col:77> 1
|-FunctionDecl 0x5610344f1168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5610344f0f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5610344f1020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5610344f1218 <col:29>
| `-NonNullAttr 0x5610344f1270 <col:70, col:84> 1
|-FunctionDecl 0x5610344f13e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5610344f12b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5610344f1490 <line:555:22>
| `-NonNullAttr 0x5610344f14e8 <col:63, col:77> 1
|-FunctionDecl 0x5610344f15f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5610344f1538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5610344f1698 <line:557:22>
| `-NonNullAttr 0x5610344f16f0 <col:52, col:66> 1
|-FunctionDecl 0x5610344f17f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5610344f1738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5610344f1898 <line:559:19>
| `-NonNullAttr 0x5610344f18f0 <col:49, col:63> 1
|-FunctionDecl 0x5610344f1b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5610344f1938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5610344f19c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5610344f1bd8 <col:39>
| `-NonNullAttr 0x5610344f1c30 <col:69, col:86> 1 2
|-FunctionDecl 0x5610344f1d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5610344f1c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5610344f1dd8 <line:564:22>
| `-NonNullAttr 0x5610344f1e30 <col:52, col:66> 1
|-FunctionDecl 0x5610344f1f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5610344f1ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5610344f2040 <line:566:22>
| `-NonNullAttr 0x5610344f2098 <col:52, col:66> 1
|-FunctionDecl 0x5610344f2258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5610344f20e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5610344f2178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5610344f2308 <col:39>
| `-NonNullAttr 0x5610344f2360 <col:69, col:86> 1 2
|-FunctionDecl 0x5610344f2460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5610344f23a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5610344f2508 <line:571:22>
| `-NonNullAttr 0x5610344f2560 <col:52, col:66> 1
|-FunctionDecl 0x5610344f2748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5610344f2610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5610344f27f0 <line:573:22>
| `-NonNullAttr 0x5610344f2848 <col:63, col:77> 1
|-FunctionDecl 0x5610344f2950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5610344f2898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5610344f29f8 <line:575:22>
| `-NonNullAttr 0x5610344f2a50 <col:63, col:77> 1
|-FunctionDecl 0x5610344f2c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5610344f2a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5610344f2b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5610344f2d28 <line:579:22>
| `-NonNullAttr 0x5610344f2d80 <col:63, col:80> 1 2
|-FunctionDecl 0x5610344f2fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5610344f2dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5610344f2e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5610344f3058 <line:582:22>
| `-NonNullAttr 0x5610344f30b0 <col:63, col:77> 1
|-FunctionDecl 0x5610344f3258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5610344f30f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5610344f3178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5610344f3308 <line:586:22>
| `-NonNullAttr 0x5610344f3360 <col:63, col:80> 1 2
|-FunctionDecl 0x5610344f34e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5610344f33a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5610344f3428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5610344f3598 <col:36>
| `-NonNullAttr 0x5610344f35f0 <col:77, col:91> 1
|-FunctionDecl 0x5610344f3928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5610344f36d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5610344f37e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5610344f39d8 <line:591:22>
| `-NonNullAttr 0x5610344f3a30 <col:63, col:77> 1
|-FunctionDecl 0x5610344f3ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5610344f3a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5610344f3c50 <line:593:22>
| `-NonNullAttr 0x5610344f3ca8 <col:63, col:77> 1
|-FunctionDecl 0x5610344f3db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5610344f3cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5610344f3e58 <line:595:22>
| `-NonNullAttr 0x5610344f3eb0 <col:52, col:66> 1
|-FunctionDecl 0x5610344f3fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5610344f3f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5610344f4070 <line:597:22>
| `-NonNullAttr 0x5610344f40c8 <col:52, col:66> 1
|-FunctionDecl 0x5610344f42f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5610344f4118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5610344f4190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5610344f43a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5610344f46d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5610344f4428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5610344f44a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5610344f4530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5610344f4790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5610344f49a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5610344f4870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5610344f4a50 <line:606:22>
| `-NonNullAttr 0x5610344f4aa8 <col:63, col:77> 1
|-FunctionDecl 0x5610344f4bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5610344f4af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5610344f4c58 <line:608:22>
| `-NonNullAttr 0x5610344f4cb0 <col:63, col:77> 1
|-FunctionDecl 0x5610344f4f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5610344f4cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5610344f4d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5610344f4fc0 <line:612:22>
| `-NonNullAttr 0x5610344f5018 <col:63, col:80> 1 2
|-FunctionDecl 0x5610344f5228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5610344f5068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5610344f50e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5610344f52d8 <col:37>
| `-NonNullAttr 0x5610344f5330 <col:78, col:92> 1
|-FunctionDecl 0x5610344f5548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5610344f5378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5610344f5420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5610344f55f8 <line:618:22>
| `-NonNullAttr 0x5610344f5650 <col:63, col:80> 1 2
|-FunctionDecl 0x5610344f5818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5610344f5698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5610344f5710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5610344f58c8 <line:621:22>
| `-NonNullAttr 0x5610344f5920 <col:63, col:77> 1
|-FunctionDecl 0x5610344f5bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5610344f5a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5610344f5a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5610344f5c78 <line:623:22>
| `-NonNullAttr 0x5610344f5cd0 <col:63, col:77> 1
|-FunctionDecl 0x5610344f5e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5610344f5d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5610344f5f20 <line:625:22>
| `-NonNullAttr 0x5610344f5f78 <col:63, col:77> 1
|-FunctionDecl 0x5610344f6080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5610344f5fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5610344f6128 <line:627:22>
| `-NonNullAttr 0x5610344f6180 <col:52, col:66> 1
|-FunctionDecl 0x5610344f6280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5610344f61c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5610344f6328 <line:629:22>
| `-NonNullAttr 0x5610344f6380 <col:52, col:66> 1
|-FunctionDecl 0x5610344f6480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5610344f63c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5610344f6528 <line:631:22>
| `-NonNullAttr 0x5610344f6580 <col:52, col:66> 1
|-FunctionDecl 0x5610344f6958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5610344f6660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5610344f6770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5610344f67f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5610344f6a10 <line:635:22>
| `-NonNullAttr 0x5610344f6a68 <col:63, col:77> 1
|-FunctionDecl 0x5610344f6be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5610344f6ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5610344f6c90 <line:637:22>
| `-NonNullAttr 0x5610344f6ce8 <col:63, col:77> 1
|-FunctionDecl 0x5610344f6df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5610344f6d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5610344f6e98 <line:639:22>
| `-NonNullAttr 0x5610344f6ef0 <col:52, col:66> 1
|-FunctionDecl 0x5610344f70e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5610344f6fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5610344f7190 <line:641:22>
| `-NonNullAttr 0x5610344f71e8 <col:63, col:77> 1
|-FunctionDecl 0x5610344f72f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5610344f7238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5610344f7398 <line:643:22>
| `-NonNullAttr 0x5610344f73f0 <col:63, col:77> 1
|-FunctionDecl 0x5610344f7618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5610344f7438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5610344f74b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5610344f76c8 <line:647:22>
| `-NonNullAttr 0x5610344f7720 <col:63, col:80> 1 2
|-FunctionDecl 0x5610344f7928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5610344f7768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5610344f77e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5610344f79d8 <line:650:22>
| `-NonNullAttr 0x5610344f7a30 <col:63, col:77> 1
|-FunctionDecl 0x5610344f7d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5610344f7b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5610344f7c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5610344f7e28 <line:653:22>
| `-NonNullAttr 0x5610344f7e80 <col:63, col:77> 1
|-FunctionDecl 0x5610344f7fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5610344f7ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5610344f8090 <col:69>
|-FunctionDecl 0x5610344f8208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5610344f80f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5610344f82b0 <col:72>
|-FunctionDecl 0x5610344f84e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5610344f8318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5610344f83c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5610344f8598 <col:44>
|-FunctionDecl 0x5610344f87b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5610344f8600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5610344f8678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5610344f8868 <line:660:22>
| `-NonNullAttr 0x5610344f88c0 <col:63, col:77> 2
|-FunctionDecl 0x5610344f8d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5610344f89a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5610344f8ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5610344f8bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5610344f8dc0 <col:47>
|-FunctionDecl 0x5610344f9f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5610344f8e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5610344fa0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5610344fa020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5610344fa210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5610344fa178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5610344fa368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x5610344fa2d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5610344fa430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5610344fa4f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5610344fa5b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5610344fa668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5610344fa6e8 prev 0x5610344fa668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5610344fa750 <col:24> 'int' 0
|-VarDecl 0x5610344fa788 <line:674:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5610344fa808 prev 0x5610344fa788 <line:675:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5610344fa870 <col:27> 'int' 0
|-VarDecl 0x5610344fa8a8 <line:676:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x5610344fa928 prev 0x5610344fa8a8 <line:677:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x5610344fa990 <col:27> 'int' 0
|-VarDecl 0x5610344fa9c8 <line:678:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x5610344faa48 prev 0x5610344fa9c8 <line:679:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x5610344faab0 <col:27> 'int' 0
|-VarDecl 0x5610344faae8 <line:680:1, col:5> col:5 used a 'int'
|-VarDecl 0x5610344fab68 prev 0x5610344faae8 <line:681:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x5610344fabd0 <col:9> 'int' 0
|-VarDecl 0x5610344fac00 <line:682:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x5610344fac80 <line:683:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x5610344facf8 <line:684:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x5610344fad70 <line:685:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x5610344fade8 <line:686:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x5610344fae60 <line:687:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x5610344faed8 <line:688:1, col:7> col:7 used a$r_buff0_thd4 '_Bool'
|-VarDecl 0x5610344faf70 <line:689:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x5610344fafe8 <line:690:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x5610344fb060 <line:691:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x5610344fb0d8 <line:692:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x5610344fb150 <line:693:1, col:7> col:7 used a$r_buff1_thd4 '_Bool'
|-VarDecl 0x5610344fb1c8 <line:694:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x5610344fb248 <line:695:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x5610344fb2c8 <line:696:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x5610344fb340 <line:697:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x5610344fb3c0 <line:698:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x5610344fb438 <line:699:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x5610344fb4b0 <line:700:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5610344fb528 <line:701:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5610344fb5a8 <line:702:1, col:5> col:5 used x 'int'
|-VarDecl 0x5610344fb628 prev 0x5610344fb5a8 <line:703:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5610344fb690 <col:9> 'int' 0
|-VarDecl 0x5610344fb6c8 <line:704:1, col:5> col:5 used y 'int'
|-VarDecl 0x5610344fb748 prev 0x5610344fb6c8 <line:705:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5610344fb7b0 <col:9> 'int' 0
|-VarDecl 0x5610344fb7e8 <line:706:1, col:5> col:5 used z 'int'
|-VarDecl 0x5610344fb868 prev 0x5610344fb7e8 <line:707:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5610344fb8d0 <col:9> 'int' 0
|-VarDecl 0x5610344fb900 <line:708:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5610344fb978 <line:709:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5610344fba90 prev 0x5610344f9f60 <line:710:1, line:739:1> line:710:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5610344fb9f8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5610344fd358 <line:711:1, line:739:1>
|   |-CallExpr 0x5610344fbba8 <line:712:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5610344fbb90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610344fbb38 <col:3> 'void ()' Function 0x5610344a1350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5610344fbc20 <line:713:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5610344fbbc8 <col:3> 'int' lvalue Var 0x5610344fb3c0 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5610344fbc08 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5610344fbbe8 <col:15> 'int' lvalue Var 0x5610344fb2c8 'a$w_buff0' 'int'
|   |-BinaryOperator 0x5610344fbc80 <line:714:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5610344fbc40 <col:3> 'int' lvalue Var 0x5610344fb2c8 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x5610344fbc60 <col:15> 'int' 1
|   |-BinaryOperator 0x5610344fbcf8 <line:715:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5610344fbca0 <col:3> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5610344fbce0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5610344fbcc0 <col:20> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5610344fbd90 <line:716:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5610344fbd18 <col:3> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5610344fbd68 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5610344fbd38 <col:27> 'int' 1
|   |-CallExpr 0x5610344fbf18 <line:717:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5610344fbf00 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5610344fbdb0 <col:3> 'void (int)' Function 0x5610344a10d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5610344fbeb0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5610344fbe90 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5610344fbe70 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5610344fbe28 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5610344fbe10 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5610344fbdd0 <col:23> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5610344fbe58 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5610344fbe40 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5610344fbdf0 <col:41> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5610344fbfb8 <line:718:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5610344fbf40 <col:3> '_Bool' lvalue Var 0x5610344faf70 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5610344fbfa0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5610344fbf80 <col:20> '_Bool' lvalue Var 0x5610344facf8 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5610344fc030 <line:719:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5610344fbfd8 <col:3> '_Bool' lvalue Var 0x5610344fafe8 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5610344fc018 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5610344fbff8 <col:20> '_Bool' lvalue Var 0x5610344fad70 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5610344fc0a8 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5610344fc050 <col:3> '_Bool' lvalue Var 0x5610344fb060 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5610344fc090 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5610344fc070 <col:20> '_Bool' lvalue Var 0x5610344fade8 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5610344fc120 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5610344fc0c8 <col:3> '_Bool' lvalue Var 0x5610344fb0d8 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5610344fc108 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5610344fc0e8 <col:20> '_Bool' lvalue Var 0x5610344fae60 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5610344fc198 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5610344fc140 <col:3> '_Bool' lvalue Var 0x5610344fb150 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5610344fc180 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5610344fc160 <col:20> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5610344fc230 <line:723:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5610344fc1b8 <col:3> '_Bool' lvalue Var 0x5610344fad70 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x5610344fc208 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5610344fc1d8 <col:27> 'int' 1
|   |-CallExpr 0x5610344fc288 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5610344fc270 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610344fc250 <col:3> 'void ()' Function 0x5610344a1410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5610344fc2e0 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5610344fc2c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610344fc2a8 <col:3> 'void ()' Function 0x5610344a1350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5610344fc340 <line:726:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5610344fc300 <col:3> 'int' lvalue Var 0x5610344fb628 'x' 'int'
|   | `-IntegerLiteral 0x5610344fc320 <col:7> 'int' 1
|   |-CallExpr 0x5610344fc398 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5610344fc380 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610344fc360 <col:3> 'void ()' Function 0x5610344a1410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5610344fc3f0 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5610344fc3d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610344fc3b8 <col:3> 'void ()' Function 0x5610344a1350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5610344fc6d8 <line:729:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5610344fc410 <col:3> 'int' lvalue Var 0x5610344fab68 'a' 'int'
|   | `-ConditionalOperator 0x5610344fc6a8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5610344fc4d0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5610344fc488 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5610344fc470 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5610344fc430 <col:7> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5610344fc4b8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5610344fc4a0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5610344fc450 <col:25> '_Bool' lvalue Var 0x5610344fad70 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5610344fc690 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5610344fc4f0 <col:42> 'int' lvalue Var 0x5610344fb2c8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x5610344fc670 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5610344fc640 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5610344fc5b0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5610344fc568 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5610344fc550 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5610344fc510 <col:55> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5610344fc598 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5610344fc580 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5610344fc530 <col:73> '_Bool' lvalue Var 0x5610344fafe8 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5610344fc610 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5610344fc5d0 <col:90> 'int' lvalue Var 0x5610344fb3c0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5610344fc628 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5610344fc5f0 <col:102> 'int' lvalue Var 0x5610344fab68 'a' 'int'
|   |-BinaryOperator 0x5610344fc8e0 <line:730:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5610344fc6f8 <col:3> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5610344fc8c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5610344fc898 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5610344fc7b8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5610344fc770 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5610344fc758 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5610344fc718 <col:20> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5610344fc7a0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5610344fc788 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5610344fc738 <col:38> '_Bool' lvalue Var 0x5610344fad70 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5610344fc850 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5610344fc808 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5610344fc7d8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5610344fc880 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5610344fc868 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5610344fc830 <col:66> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5610344fcbc8 <line:731:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5610344fc900 <col:3> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5610344fcbb0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5610344fcb80 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5610344fcaa0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5610344fc9c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5610344fc978 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5610344fc960 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5610344fc920 <col:20> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5610344fc9a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5610344fc990 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5610344fc940 <col:38> '_Bool' lvalue Var 0x5610344fad70 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5610344fca80 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5610344fca38 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5610344fca20 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5610344fc9e0 <col:56> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5610344fca68 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5610344fca50 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5610344fca00 <col:74> '_Bool' lvalue Var 0x5610344fafe8 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5610344fcb38 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5610344fcaf0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5610344fcac0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5610344fcb68 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5610344fcb50 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5610344fcb18 <col:102> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5610344fcdd0 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5610344fcbe8 <col:3> '_Bool' lvalue Var 0x5610344fad70 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5610344fcdb8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5610344fcd88 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5610344fcca8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5610344fcc60 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5610344fcc48 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5610344fcc08 <col:20> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5610344fcc90 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5610344fcc78 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5610344fcc28 <col:38> '_Bool' lvalue Var 0x5610344fad70 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5610344fcd40 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5610344fccf8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5610344fccc8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5610344fcd70 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5610344fcd58 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5610344fcd20 <col:66> '_Bool' lvalue Var 0x5610344fad70 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5610344fd0d8 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5610344fcdf0 <col:3> '_Bool' lvalue Var 0x5610344fafe8 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5610344fd0c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5610344fd090 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5610344fcfb0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5610344fceb0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5610344fce68 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5610344fce50 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5610344fce10 <col:20> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5610344fce98 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5610344fce80 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5610344fce30 <col:38> '_Bool' lvalue Var 0x5610344fad70 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5610344fcf90 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5610344fcf28 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5610344fcf10 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5610344fced0 <col:56> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5610344fcf58 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5610344fcf40 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5610344fcef0 <col:74> '_Bool' lvalue Var 0x5610344fafe8 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5610344fd048 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5610344fd000 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5610344fcfd0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5610344fd078 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5610344fd060 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5610344fd028 <col:102> '_Bool' lvalue Var 0x5610344fafe8 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x5610344fd130 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5610344fd118 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610344fd0f8 <col:3> 'void ()' Function 0x5610344a1410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5610344fd188 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5610344fd170 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610344fd150 <col:3> 'void ()' Function 0x5610344a1350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5610344fd240 <line:736:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5610344fd1a8 <col:3> 'int' lvalue Var 0x5610344fa6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5610344fd220 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5610344fd208 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5610344fd1c8 <col:22> 'int' lvalue Var 0x5610344fa6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5610344fd1e8 <col:41> 'int' 1
|   |-CallExpr 0x5610344fd298 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5610344fd280 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610344fd260 <col:3> 'void ()' Function 0x5610344a1410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5610344fd348 <line:738:3, col:36>
|     `-CallExpr 0x5610344fd328 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5610344fd310 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5610344fd2b8 <col:10> 'void *(void)' Function 0x5610344a0e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5610344fd4f0 prev 0x5610344fa0b8 <line:740:1, line:759:1> line:740:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5610344fd458 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5610344fe738 <line:741:1, line:759:1>
|   |-CallExpr 0x5610344fd5d0 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5610344fd5b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610344fd598 <col:3> 'void ()' Function 0x5610344a1350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5610344fd630 <line:743:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5610344fd5f0 <col:3> 'int' lvalue Var 0x5610344fb628 'x' 'int'
|   | `-IntegerLiteral 0x5610344fd610 <col:7> 'int' 2
|   |-CallExpr 0x5610344fd688 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5610344fd670 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610344fd650 <col:3> 'void ()' Function 0x5610344a1410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5610344fd6e0 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5610344fd6c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610344fd6a8 <col:3> 'void ()' Function 0x5610344a1350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5610344fd758 <line:746:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5610344fd700 <col:3> 'int' lvalue Var 0x5610344fa808 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5610344fd740 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5610344fd720 <col:25> 'int' lvalue Var 0x5610344fb748 'y' 'int'
|   |-CallExpr 0x5610344fd7b0 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5610344fd798 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610344fd778 <col:3> 'void ()' Function 0x5610344a1410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5610344fd808 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5610344fd7f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610344fd7d0 <col:3> 'void ()' Function 0x5610344a1350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5610344fdaf0 <line:749:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5610344fd828 <col:3> 'int' lvalue Var 0x5610344fab68 'a' 'int'
|   | `-ConditionalOperator 0x5610344fdac0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5610344fd8e8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5610344fd8a0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5610344fd888 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5610344fd848 <col:7> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5610344fd8d0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5610344fd8b8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5610344fd868 <col:25> '_Bool' lvalue Var 0x5610344fade8 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5610344fdaa8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5610344fd908 <col:42> 'int' lvalue Var 0x5610344fb2c8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x5610344fda88 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5610344fda58 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5610344fd9c8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5610344fd980 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5610344fd968 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5610344fd928 <col:55> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5610344fd9b0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5610344fd998 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5610344fd948 <col:73> '_Bool' lvalue Var 0x5610344fb060 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5610344fda28 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5610344fd9e8 <col:90> 'int' lvalue Var 0x5610344fb3c0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5610344fda40 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5610344fda08 <col:102> 'int' lvalue Var 0x5610344fab68 'a' 'int'
|   |-BinaryOperator 0x5610344fdcf8 <line:750:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5610344fdb10 <col:3> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5610344fdce0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5610344fdcb0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5610344fdbd0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5610344fdb88 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5610344fdb70 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5610344fdb30 <col:20> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5610344fdbb8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5610344fdba0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5610344fdb50 <col:38> '_Bool' lvalue Var 0x5610344fade8 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5610344fdc68 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5610344fdc20 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5610344fdbf0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5610344fdc98 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5610344fdc80 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5610344fdc48 <col:66> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5610344fe000 <line:751:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5610344fdd18 <col:3> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5610344fdfe8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5610344fdfb8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5610344fdeb8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5610344fddd8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5610344fdd90 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5610344fdd78 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5610344fdd38 <col:20> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5610344fddc0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5610344fdda8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5610344fdd58 <col:38> '_Bool' lvalue Var 0x5610344fade8 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5610344fde98 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5610344fde50 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5610344fde38 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5610344fddf8 <col:56> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5610344fde80 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5610344fde68 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5610344fde18 <col:74> '_Bool' lvalue Var 0x5610344fb060 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5610344fdf50 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5610344fdf08 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5610344fded8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5610344fdfa0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5610344fdf68 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5610344fdf30 <col:102> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5610344fe208 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5610344fe020 <col:3> '_Bool' lvalue Var 0x5610344fade8 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5610344fe1f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5610344fe1c0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5610344fe0e0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5610344fe098 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5610344fe080 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5610344fe040 <col:20> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5610344fe0c8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5610344fe0b0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5610344fe060 <col:38> '_Bool' lvalue Var 0x5610344fade8 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5610344fe178 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5610344fe130 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5610344fe100 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5610344fe1a8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5610344fe190 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5610344fe158 <col:66> '_Bool' lvalue Var 0x5610344fade8 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5610344fe4f0 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5610344fe228 <col:3> '_Bool' lvalue Var 0x5610344fb060 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5610344fe4d8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5610344fe4a8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5610344fe3c8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5610344fe2e8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5610344fe2a0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5610344fe288 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5610344fe248 <col:20> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5610344fe2d0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5610344fe2b8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5610344fe268 <col:38> '_Bool' lvalue Var 0x5610344fade8 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5610344fe3a8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5610344fe360 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5610344fe348 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5610344fe308 <col:56> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5610344fe390 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5610344fe378 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5610344fe328 <col:74> '_Bool' lvalue Var 0x5610344fb060 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5610344fe460 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5610344fe418 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5610344fe3e8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5610344fe490 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5610344fe478 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5610344fe440 <col:102> '_Bool' lvalue Var 0x5610344fb060 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5610344fe548 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5610344fe530 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610344fe510 <col:3> 'void ()' Function 0x5610344a1410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5610344fe5a0 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5610344fe588 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610344fe568 <col:3> 'void ()' Function 0x5610344a1350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5610344fe658 <line:756:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5610344fe5c0 <col:3> 'int' lvalue Var 0x5610344fa6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5610344fe638 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5610344fe620 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5610344fe5e0 <col:22> 'int' lvalue Var 0x5610344fa6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5610344fe600 <col:41> 'int' 1
|   |-CallExpr 0x5610344fe6b0 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5610344fe698 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610344fe678 <col:3> 'void ()' Function 0x5610344a1410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5610344fe728 <line:758:3, col:36>
|     `-CallExpr 0x5610344fe708 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5610344fe6f0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5610344fe6d0 <col:10> 'void *(void)' Function 0x5610344a0e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5610344fe880 prev 0x5610344fa210 <line:760:1, line:779:1> line:760:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5610344fe7e8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5610344ffaa8 <line:761:1, line:779:1>
|   |-CallExpr 0x5610344fe960 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5610344fe948 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610344fe928 <col:3> 'void ()' Function 0x5610344a1350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5610344fe9c0 <line:763:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5610344fe980 <col:3> 'int' lvalue Var 0x5610344fb748 'y' 'int'
|   | `-IntegerLiteral 0x5610344fe9a0 <col:7> 'int' 1
|   |-CallExpr 0x5610344fea18 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5610344fea00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610344fe9e0 <col:3> 'void ()' Function 0x5610344a1410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5610344fea70 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5610344fea58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610344fea38 <col:3> 'void ()' Function 0x5610344a1350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5610344fead0 <line:766:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5610344fea90 <col:3> 'int' lvalue Var 0x5610344fb868 'z' 'int'
|   | `-IntegerLiteral 0x5610344feab0 <col:7> 'int' 1
|   |-CallExpr 0x5610344feb28 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5610344feb10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610344feaf0 <col:3> 'void ()' Function 0x5610344a1410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5610344feb80 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5610344feb68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610344feb48 <col:3> 'void ()' Function 0x5610344a1350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5610344fee68 <line:769:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5610344feba0 <col:3> 'int' lvalue Var 0x5610344fab68 'a' 'int'
|   | `-ConditionalOperator 0x5610344fee38 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5610344fec60 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5610344fec18 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5610344fec00 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5610344febc0 <col:7> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5610344fec48 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5610344fec30 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5610344febe0 <col:25> '_Bool' lvalue Var 0x5610344fae60 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5610344fee20 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5610344fec80 <col:42> 'int' lvalue Var 0x5610344fb2c8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x5610344fee00 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5610344fedd0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5610344fed40 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5610344fecf8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5610344fece0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5610344feca0 <col:55> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5610344fed28 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5610344fed10 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5610344fecc0 <col:73> '_Bool' lvalue Var 0x5610344fb0d8 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5610344feda0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5610344fed60 <col:90> 'int' lvalue Var 0x5610344fb3c0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5610344fedb8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5610344fed80 <col:102> 'int' lvalue Var 0x5610344fab68 'a' 'int'
|   |-BinaryOperator 0x5610344ff088 <line:770:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5610344fee88 <col:3> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5610344ff070 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5610344ff040 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5610344fef48 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5610344fef00 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5610344feee8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5610344feea8 <col:20> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5610344fef30 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5610344fef18 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5610344feec8 <col:38> '_Bool' lvalue Var 0x5610344fae60 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5610344feff8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5610344fefb0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5610344fef68 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5610344ff028 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5610344ff010 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5610344fefd8 <col:66> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5610344ff370 <line:771:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5610344ff0a8 <col:3> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5610344ff358 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5610344ff328 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5610344ff248 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5610344ff168 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5610344ff120 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5610344ff108 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5610344ff0c8 <col:20> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5610344ff150 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5610344ff138 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5610344ff0e8 <col:38> '_Bool' lvalue Var 0x5610344fae60 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5610344ff228 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5610344ff1e0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5610344ff1c8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5610344ff188 <col:56> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5610344ff210 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5610344ff1f8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5610344ff1a8 <col:74> '_Bool' lvalue Var 0x5610344fb0d8 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5610344ff2e0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5610344ff298 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5610344ff268 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5610344ff310 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5610344ff2f8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5610344ff2c0 <col:102> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5610344ff578 <line:772:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5610344ff390 <col:3> '_Bool' lvalue Var 0x5610344fae60 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5610344ff560 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5610344ff530 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5610344ff450 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5610344ff408 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5610344ff3f0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5610344ff3b0 <col:20> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5610344ff438 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5610344ff420 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5610344ff3d0 <col:38> '_Bool' lvalue Var 0x5610344fae60 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5610344ff4e8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5610344ff4a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5610344ff470 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5610344ff518 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5610344ff500 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5610344ff4c8 <col:66> '_Bool' lvalue Var 0x5610344fae60 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5610344ff860 <line:773:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5610344ff598 <col:3> '_Bool' lvalue Var 0x5610344fb0d8 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5610344ff848 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5610344ff818 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5610344ff738 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5610344ff658 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5610344ff610 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5610344ff5f8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5610344ff5b8 <col:20> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5610344ff640 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5610344ff628 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5610344ff5d8 <col:38> '_Bool' lvalue Var 0x5610344fae60 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5610344ff718 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5610344ff6d0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5610344ff6b8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5610344ff678 <col:56> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5610344ff700 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5610344ff6e8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5610344ff698 <col:74> '_Bool' lvalue Var 0x5610344fb0d8 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5610344ff7d0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5610344ff788 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5610344ff758 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5610344ff800 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5610344ff7e8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5610344ff7b0 <col:102> '_Bool' lvalue Var 0x5610344fb0d8 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5610344ff8b8 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5610344ff8a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610344ff880 <col:3> 'void ()' Function 0x5610344a1410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5610344ff910 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5610344ff8f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610344ff8d8 <col:3> 'void ()' Function 0x5610344a1350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5610344ff9c8 <line:776:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5610344ff930 <col:3> 'int' lvalue Var 0x5610344fa6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5610344ff9a8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5610344ff990 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5610344ff950 <col:22> 'int' lvalue Var 0x5610344fa6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5610344ff970 <col:41> 'int' 1
|   |-CallExpr 0x5610344ffa20 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5610344ffa08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610344ff9e8 <col:3> 'void ()' Function 0x5610344a1410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5610344ffa98 <line:778:3, col:36>
|     `-CallExpr 0x5610344ffa78 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5610344ffa60 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5610344ffa40 <col:10> 'void *(void)' Function 0x5610344a0e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5610344ffbf0 prev 0x5610344fa368 <line:780:1, line:815:1> line:780:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x5610344ffb58 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561034503910 <line:781:1, line:815:1>
|   |-CallExpr 0x5610344ffcd0 <line:782:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5610344ffcb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610344ffc98 <col:3> 'void ()' Function 0x5610344a1350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5610344ffd30 <line:783:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5610344ffcf0 <col:3> 'int' lvalue Var 0x5610344fb868 'z' 'int'
|   | `-IntegerLiteral 0x5610344ffd10 <col:7> 'int' 2
|   |-CallExpr 0x5610344ffd88 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5610344ffd70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610344ffd50 <col:3> 'void ()' Function 0x5610344a1410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5610344ffde0 <line:785:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5610344ffdc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610344ffda8 <col:3> 'void ()' Function 0x5610344a1350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5610344ffe58 <line:786:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5610344ffe00 <col:3> 'int' lvalue Var 0x5610344fa928 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x5610344ffe40 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5610344ffe20 <col:25> 'int' lvalue Var 0x5610344fb868 'z' 'int'
|   |-CallExpr 0x5610344ffeb0 <line:787:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5610344ffe98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610344ffe78 <col:3> 'void ()' Function 0x5610344a1410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5610344fff08 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5610344ffef0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610344ffed0 <col:3> 'void ()' Function 0x5610344a1350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5610344fffd8 <line:789:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5610344fff28 <col:3> '_Bool' lvalue Var 0x5610344fb900 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5610344fffc0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5610344fff80 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5610344fff68 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5610344fff48 <col:19> 'void *(void)' Function 0x5610344a0e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x561034500088 <line:790:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5610344ffff8 <col:3> '_Bool' lvalue Var 0x5610344fb978 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x561034500070 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x561034500050 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x561034500038 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x561034500018 <col:19> 'void *(void)' Function 0x5610344a0e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x561034500100 <line:791:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5610345000a8 <col:3> '_Bool' lvalue Var 0x5610344fac00 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5610345000e8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5610345000c8 <col:21> '_Bool' lvalue Var 0x5610344fb978 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x561034500178 <line:792:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561034500120 <col:3> 'int' lvalue Var 0x5610344fac80 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x561034500160 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561034500140 <col:15> 'int' lvalue Var 0x5610344fab68 'a' 'int'
|   |-BinaryOperator 0x5610345005b0 <line:793:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x561034500198 <col:3> 'int' lvalue Var 0x5610344fab68 'a' 'int'
|   | `-ConditionalOperator 0x561034500580 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5610345003a8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5610345002c8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5610345001f0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5610345001d8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5610345001b8 <col:8> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5610345002a8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x561034500240 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x561034500228 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x561034500208 <col:27> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x561034500290 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x561034500278 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x561034500258 <col:46> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x561034500388 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x561034500320 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x561034500308 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5610345002e8 <col:65> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x561034500370 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x561034500358 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x561034500338 <col:84> '_Bool' lvalue Var 0x5610344fb150 'a$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x561034500568 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5610345003c8 <col:101> 'int' lvalue Var 0x5610344fab68 'a' 'int'
|   |   `-ParenExpr 0x561034500548 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x561034500518 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x561034500488 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561034500440 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561034500428 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5610345003e8 <col:106> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561034500470 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561034500458 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561034500408 <col:124> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5610345004e8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5610345004a8 <col:141> 'int' lvalue Var 0x5610344fb2c8 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x561034500500 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5610345004c8 <col:153> 'int' lvalue Var 0x5610344fb3c0 'a$w_buff1' 'int'
|   |-BinaryOperator 0x561034500ac0 <line:794:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5610345005d0 <col:3> 'int' lvalue Var 0x5610344fb2c8 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x561034500a90 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x561034500a60 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561034500a48 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5610345005f0 <col:15> '_Bool' lvalue Var 0x5610344fb978 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x561034500a78 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561034500610 <col:31> 'int' lvalue Var 0x5610344fb2c8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x561034500a28 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5610345009f8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x561034500820 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x561034500740 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x561034500668 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x561034500650 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x561034500630 <col:45> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x561034500720 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5610345006b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5610345006a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x561034500680 <col:64> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x561034500708 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5610345006f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5610345006d0 <col:83> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x561034500800 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x561034500798 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x561034500780 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x561034500760 <col:102> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x5610345007e8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5610345007d0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5610345007b0 <col:121> '_Bool' lvalue Var 0x5610344fb150 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5610345009e0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561034500840 <col:138> 'int' lvalue Var 0x5610344fb2c8 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x5610345009c0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x561034500990 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x561034500900 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5610345008b8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5610345008a0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x561034500860 <col:151> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5610345008e8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5610345008d0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x561034500880 <col:169> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x561034500960 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x561034500920 <col:186> 'int' lvalue Var 0x5610344fb2c8 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x561034500978 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x561034500940 <col:198> 'int' lvalue Var 0x5610344fb2c8 'a$w_buff0' 'int'
|   |-BinaryOperator 0x561034501000 <line:795:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x561034500ae0 <col:3> 'int' lvalue Var 0x5610344fb3c0 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x561034500fd0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x561034500f70 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561034500f58 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561034500b00 <col:15> '_Bool' lvalue Var 0x5610344fb978 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x561034500f88 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561034500b20 <col:31> 'int' lvalue Var 0x5610344fb3c0 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x561034500f38 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x561034500f08 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x561034500d30 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x561034500c50 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x561034500b78 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x561034500b60 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x561034500b40 <col:45> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x561034500c30 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x561034500bc8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x561034500bb0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x561034500b90 <col:64> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x561034500c18 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x561034500c00 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x561034500be0 <col:83> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x561034500d10 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x561034500ca8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x561034500c90 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x561034500c70 <col:102> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x561034500cf8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x561034500ce0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x561034500cc0 <col:121> '_Bool' lvalue Var 0x5610344fb150 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x561034500ef0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561034500d50 <col:138> 'int' lvalue Var 0x5610344fb3c0 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x561034500ed0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x561034500ea0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x561034500e10 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x561034500dc8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x561034500db0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x561034500d70 <col:151> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x561034500df8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x561034500de0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x561034500d90 <col:169> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x561034500e70 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x561034500e30 <col:186> 'int' lvalue Var 0x5610344fb3c0 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x561034500e88 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x561034500e50 <col:198> 'int' lvalue Var 0x5610344fb3c0 'a$w_buff1' 'int'
|   |-BinaryOperator 0x5610345015a8 <line:796:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x561034501020 <col:3> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561034501590 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561034501560 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x561034501518 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561034501500 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561034501040 <col:20> '_Bool' lvalue Var 0x5610344fb978 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561034501548 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561034501530 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561034501060 <col:36> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5610345014e0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5610345014b0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x561034501270 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561034501190 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5610345010b8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5610345010a0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561034501080 <col:55> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561034501170 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561034501108 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5610345010f0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5610345010d0 <col:74> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x561034501158 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561034501140 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561034501120 <col:93> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561034501250 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5610345011e8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5610345011d0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5610345011b0 <col:112> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x561034501238 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561034501220 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561034501200 <col:131> '_Bool' lvalue Var 0x5610344fb150 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x561034501498 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561034501480 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561034501290 <col:148> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x561034501460 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x561034501430 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x561034501350 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561034501308 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5610345012f0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5610345012b0 <col:166> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561034501338 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561034501320 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5610345012d0 <col:184> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5610345013e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5610345013a0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561034501370 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561034501418 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x561034501400 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5610345013c8 <col:212> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561034501b70 <line:797:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5610345015c8 <col:3> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561034501b58 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561034501b28 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x561034501ae0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561034501ac8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5610345015e8 <col:20> '_Bool' lvalue Var 0x5610344fb978 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561034501b10 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561034501af8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561034501608 <col:36> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x561034501aa8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x561034501a78 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x561034501818 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561034501738 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561034501660 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561034501648 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561034501628 <col:55> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561034501718 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5610345016b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561034501698 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561034501678 <col:74> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x561034501700 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5610345016e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5610345016c8 <col:93> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5610345017f8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561034501790 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561034501778 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561034501758 <col:112> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5610345017e0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5610345017c8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5610345017a8 <col:131> '_Bool' lvalue Var 0x5610344fb150 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x561034501a60 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561034501a48 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561034501838 <col:148> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x561034501a28 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5610345019f8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5610345018f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5610345018b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561034501898 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561034501858 <col:166> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5610345018e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5610345018c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561034501878 <col:184> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5610345019c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561034501948 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561034501918 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5610345019e0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5610345019a0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x561034501970 <col:219> 'int' 0
|   |-BinaryOperator 0x561034502128 <line:798:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x561034501b90 <col:3> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x561034502110 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5610345020e0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x561034502098 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561034502080 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561034501bb0 <col:20> '_Bool' lvalue Var 0x5610344fb978 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5610345020c8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5610345020b0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561034501bd0 <col:36> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x561034502060 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x561034502030 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x561034501de0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561034501d00 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561034501c28 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561034501c10 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561034501bf0 <col:55> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561034501ce0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561034501c78 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561034501c60 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561034501c40 <col:74> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x561034501cc8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561034501cb0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561034501c90 <col:93> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561034501dc0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561034501d58 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561034501d40 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561034501d20 <col:112> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x561034501da8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561034501d90 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561034501d70 <col:131> '_Bool' lvalue Var 0x5610344fb150 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x561034502018 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561034502000 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561034501e00 <col:148> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x561034501fe0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x561034501fa0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x561034501ec0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561034501e78 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561034501e60 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561034501e20 <col:166> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561034501ea8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561034501e90 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561034501e40 <col:184> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x561034501f58 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561034501f10 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561034501ee0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561034501f88 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x561034501f70 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x561034501f38 <col:212> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5610345026f0 <line:799:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x561034502148 <col:3> '_Bool' lvalue Var 0x5610344fb150 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5610345026d8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5610345026a8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x561034502660 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561034502648 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561034502168 <col:20> '_Bool' lvalue Var 0x5610344fb978 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561034502690 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561034502678 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561034502188 <col:36> '_Bool' lvalue Var 0x5610344fb150 'a$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x561034502628 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5610345025f8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x561034502398 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5610345022b8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5610345021e0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5610345021c8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5610345021a8 <col:55> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561034502298 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561034502230 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561034502218 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5610345021f8 <col:74> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x561034502280 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561034502268 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561034502248 <col:93> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561034502378 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561034502310 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5610345022f8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5610345022d8 <col:112> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x561034502360 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561034502348 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561034502328 <col:131> '_Bool' lvalue Var 0x5610344fb150 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5610345025e0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5610345025c8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5610345023b8 <col:148> '_Bool' lvalue Var 0x5610344fb150 'a$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x5610345025a8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x561034502578 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x561034502478 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561034502430 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561034502418 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5610345023d8 <col:166> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561034502460 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561034502448 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5610345023f8 <col:184> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x561034502548 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5610345024c8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561034502498 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561034502560 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x561034502520 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5610345024f0 <col:219> 'int' 0
|   |-BinaryOperator 0x561034502768 <line:800:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561034502710 <col:3> 'int' lvalue Var 0x5610344faa48 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x561034502750 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561034502730 <col:25> 'int' lvalue Var 0x5610344fab68 'a' 'int'
|   |-BinaryOperator 0x561034502898 <line:801:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x561034502788 <col:3> 'int' lvalue Var 0x5610344fab68 'a' 'int'
|   | `-ConditionalOperator 0x561034502868 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x561034502820 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561034502808 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5610345027a8 <col:7> '_Bool' lvalue Var 0x5610344fac00 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x561034502838 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5610345027c8 <col:25> 'int' lvalue Var 0x5610344fac80 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x561034502850 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5610345027e8 <col:37> 'int' lvalue Var 0x5610344fab68 'a' 'int'
|   |-BinaryOperator 0x561034502930 <line:802:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5610345028b8 <col:3> '_Bool' lvalue Var 0x5610344fac00 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x561034502908 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5610345028d8 <col:28> 'int' 0
|   |-CallExpr 0x561034502988 <line:803:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561034502970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561034502950 <col:3> 'void ()' Function 0x5610344a1410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5610345029e0 <line:804:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5610345029c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610345029a8 <col:3> 'void ()' Function 0x5610344a1350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561034502cc8 <line:805:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561034502a00 <col:3> 'int' lvalue Var 0x5610344fab68 'a' 'int'
|   | `-ConditionalOperator 0x561034502c98 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561034502ac0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561034502a78 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561034502a60 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561034502a20 <col:7> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561034502aa8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561034502a90 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561034502a40 <col:25> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x561034502c80 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561034502ae0 <col:42> 'int' lvalue Var 0x5610344fb2c8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x561034502c60 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561034502c30 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561034502ba0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561034502b58 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561034502b40 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561034502b00 <col:55> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561034502b88 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561034502b70 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561034502b20 <col:73> '_Bool' lvalue Var 0x5610344fb150 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x561034502c00 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561034502bc0 <col:90> 'int' lvalue Var 0x5610344fb3c0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561034502c18 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561034502be0 <col:102> 'int' lvalue Var 0x5610344fab68 'a' 'int'
|   |-BinaryOperator 0x561034502ed0 <line:806:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561034502ce8 <col:3> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561034502eb8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561034502e88 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561034502da8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561034502d60 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561034502d48 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561034502d08 <col:20> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561034502d90 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561034502d78 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561034502d28 <col:38> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x561034502e40 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561034502df8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561034502dc8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561034502e70 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561034502e58 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561034502e20 <col:66> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5610345031d8 <line:807:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561034502ef0 <col:3> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5610345031c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561034503190 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5610345030b0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561034502fb0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561034502f68 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561034502f50 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561034502f10 <col:20> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561034502f98 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561034502f80 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561034502f30 <col:38> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x561034503090 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561034503048 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561034503030 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561034502ff0 <col:56> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561034503078 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561034503060 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561034503010 <col:74> '_Bool' lvalue Var 0x5610344fb150 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x561034503148 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561034503100 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5610345030d0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561034503178 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561034503160 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561034503128 <col:102> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5610345033e0 <line:808:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5610345031f8 <col:3> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5610345033c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561034503398 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5610345032b8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561034503270 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561034503258 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561034503218 <col:20> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5610345032a0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561034503288 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561034503238 <col:38> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x561034503350 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561034503308 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5610345032d8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561034503380 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561034503368 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561034503330 <col:66> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5610345036c8 <line:809:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561034503400 <col:3> '_Bool' lvalue Var 0x5610344fb150 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5610345036b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561034503680 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5610345035a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5610345034c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561034503478 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561034503460 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561034503420 <col:20> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5610345034a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561034503490 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561034503440 <col:38> '_Bool' lvalue Var 0x5610344faed8 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x561034503580 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561034503538 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561034503520 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5610345034e0 <col:56> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561034503568 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561034503550 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561034503500 <col:74> '_Bool' lvalue Var 0x5610344fb150 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x561034503638 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5610345035f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5610345035c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561034503668 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561034503650 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561034503618 <col:102> '_Bool' lvalue Var 0x5610344fb150 'a$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x561034503720 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561034503708 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5610345036e8 <col:3> 'void ()' Function 0x5610344a1410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561034503778 <line:811:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561034503760 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561034503740 <col:3> 'void ()' Function 0x5610344a1350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561034503830 <line:812:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561034503798 <col:3> 'int' lvalue Var 0x5610344fa6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561034503810 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5610345037f8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5610345037b8 <col:22> 'int' lvalue Var 0x5610344fa6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5610345037d8 <col:41> 'int' 1
|   |-CallExpr 0x561034503888 <line:813:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561034503870 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561034503850 <col:3> 'void ()' Function 0x5610344a1410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561034503900 <line:814:3, col:36>
|     `-CallExpr 0x5610345038e0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5610345038c8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5610345038a8 <col:10> 'void *(void)' Function 0x5610344a0e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561034503a48 prev 0x5610344fa430 <line:816:1, line:818:1> line:816:6 fence 'void ()'
| `-CompoundStmt 0x561034503ae8 <line:817:1, line:818:1>
|-FunctionDecl 0x561034503b18 prev 0x5610344fa4f0 <line:819:1, line:821:1> line:819:6 isync 'void ()'
| `-CompoundStmt 0x561034503bb8 <line:820:1, line:821:1>
|-FunctionDecl 0x561034503be8 prev 0x5610344fa5b0 <line:822:1, line:824:1> line:822:6 lwfence 'void ()'
| `-CompoundStmt 0x561034503c88 <line:823:1, line:824:1>
`-FunctionDecl 0x561034503cf8 <line:825:1, line:851:1> line:825:5 main 'int ()'
  `-CompoundStmt 0x561034505d18 <line:826:1, line:851:1>
    |-DeclStmt 0x561034503e10 <line:827:3, col:17>
    | `-VarDecl 0x561034503da8 <col:3, col:13> col:13 used t723 'pthread_t':'unsigned long'
    |-CallExpr 0x561034504048 <line:828:3, col:53> 'int'
    | |-ImplicitCastExpr 0x561034504030 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561034503e28 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5610344e18f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561034503e68 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561034503e48 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561034503da8 't723' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561034504088 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561034503ee0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x561034503eb8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561034503e80 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5610345040a0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561034503f00 <col:38> 'void *(void *)' Function 0x5610344fba90 'P0' 'void *(void *)'
    | `-ParenExpr 0x561034503f80 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x561034503f58 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561034503f20 <col:51> 'int' 0
    |-DeclStmt 0x561034504130 <line:829:3, col:17>
    | `-VarDecl 0x5610345040c8 <col:3, col:13> col:13 used t724 'pthread_t':'unsigned long'
    |-CallExpr 0x5610345042d8 <line:830:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5610345042c0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561034504148 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5610344e18f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561034504188 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561034504168 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5610345040c8 't724' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561034504318 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561034504200 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5610345041d8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5610345041a0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x561034504330 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561034504220 <col:38> 'void *(void *)' Function 0x5610344fd4f0 'P1' 'void *(void *)'
    | `-ParenExpr 0x5610345042a0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x561034504278 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561034504240 <col:51> 'int' 0
    |-DeclStmt 0x5610345043c0 <line:831:3, col:17>
    | `-VarDecl 0x561034504358 <col:3, col:13> col:13 used t725 'pthread_t':'unsigned long'
    |-CallExpr 0x561034504568 <line:832:3, col:53> 'int'
    | |-ImplicitCastExpr 0x561034504550 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5610345043d8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5610344e18f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561034504418 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5610345043f8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561034504358 't725' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5610345045a8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561034504490 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x561034504468 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561034504430 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5610345045c0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5610345044b0 <col:38> 'void *(void *)' Function 0x5610344fe880 'P2' 'void *(void *)'
    | `-ParenExpr 0x561034504530 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x561034504508 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5610345044d0 <col:51> 'int' 0
    |-DeclStmt 0x561034504650 <line:833:3, col:17>
    | `-VarDecl 0x5610345045e8 <col:3, col:13> col:13 used t726 'pthread_t':'unsigned long'
    |-CallExpr 0x5610345047f8 <line:834:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5610345047e0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561034504668 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5610344e18f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5610345046a8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561034504688 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5610345045e8 't726' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561034504838 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561034504720 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5610345046f8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5610345046c0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x561034504850 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561034504740 <col:38> 'void *(void *)' Function 0x5610344ffbf0 'P3' 'void *(void *)'
    | `-ParenExpr 0x5610345047c0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x561034504798 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561034504760 <col:51> 'int' 0
    |-CallExpr 0x5610345048a0 <line:835:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561034504888 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561034504868 <col:3> 'void ()' Function 0x5610344a1350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561034504970 <line:836:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5610345048c0 <col:3> '_Bool' lvalue Var 0x5610344fb4b0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x561034504958 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x561034504938 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x561034504920 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5610345048e0 <col:21> 'int' lvalue Var 0x5610344fa6e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x561034504900 <col:41> 'int' 4
    |-CallExpr 0x5610345049c8 <line:837:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5610345049b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561034504990 <col:3> 'void ()' Function 0x5610344a1410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561034504a40 <line:838:3, col:36> 'void'
    | |-ImplicitCastExpr 0x561034504a28 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5610345049e8 <col:3> 'void (int)' Function 0x5610344a0ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x561034504a80 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x561034504a68 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x561034504a08 <col:21> '_Bool' lvalue Var 0x5610344fb4b0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x561034504ad0 <line:839:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561034504ab8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561034504a98 <col:3> 'void ()' Function 0x5610344a1350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561034504db8 <line:840:3, col:103> 'int' '='
    | |-DeclRefExpr 0x561034504af0 <col:3> 'int' lvalue Var 0x5610344fab68 'a' 'int'
    | `-ConditionalOperator 0x561034504d88 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x561034504bb0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x561034504b68 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x561034504b50 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x561034504b10 <col:7> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x561034504b98 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x561034504b80 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x561034504b30 <col:25> '_Bool' lvalue Var 0x5610344facf8 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x561034504d70 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x561034504bd0 <col:42> 'int' lvalue Var 0x5610344fb2c8 'a$w_buff0' 'int'
    |   `-ParenExpr 0x561034504d50 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x561034504d20 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x561034504c90 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x561034504c48 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x561034504c30 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x561034504bf0 <col:55> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x561034504c78 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x561034504c60 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x561034504c10 <col:73> '_Bool' lvalue Var 0x5610344faf70 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x561034504cf0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x561034504cb0 <col:90> 'int' lvalue Var 0x5610344fb3c0 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x561034504d08 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x561034504cd0 <col:102> 'int' lvalue Var 0x5610344fab68 'a' 'int'
    |-BinaryOperator 0x561034504fc0 <line:841:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x561034504dd8 <col:3> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x561034504fa8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561034504f78 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x561034504e98 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x561034504e50 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x561034504e38 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x561034504df8 <col:20> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x561034504e80 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x561034504e68 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x561034504e18 <col:38> '_Bool' lvalue Var 0x5610344facf8 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561034504f30 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561034504ee8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561034504eb8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x561034504f60 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561034504f48 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561034504f10 <col:66> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5610345052b8 <line:842:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x561034504fe0 <col:3> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5610345052a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561034505270 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x561034505190 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5610345050b0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x561034505068 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x561034505050 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x561034505010 <col:20> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x561034505098 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x561034505080 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x561034505030 <col:38> '_Bool' lvalue Var 0x5610344facf8 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x561034505170 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x561034505128 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x561034505110 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5610345050d0 <col:56> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x561034505158 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x561034505140 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5610345050f0 <col:74> '_Bool' lvalue Var 0x5610344faf70 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561034505228 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5610345051e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5610345051b0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x561034505258 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561034505240 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561034505208 <col:102> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5610345054c0 <line:843:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5610345052d8 <col:3> '_Bool' lvalue Var 0x5610344facf8 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5610345054a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561034505478 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x561034505398 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x561034505350 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x561034505338 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5610345052f8 <col:20> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x561034505380 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x561034505368 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x561034505318 <col:38> '_Bool' lvalue Var 0x5610344facf8 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561034505430 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5610345053e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5610345053b8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x561034505460 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561034505448 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561034505410 <col:66> '_Bool' lvalue Var 0x5610344facf8 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5610345057a8 <line:844:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5610345054e0 <col:3> '_Bool' lvalue Var 0x5610344faf70 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561034505790 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561034505760 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x561034505680 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5610345055a0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x561034505558 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x561034505540 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x561034505500 <col:20> '_Bool' lvalue Var 0x5610344fb340 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x561034505588 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x561034505570 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x561034505520 <col:38> '_Bool' lvalue Var 0x5610344facf8 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x561034505660 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x561034505618 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x561034505600 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5610345055c0 <col:56> '_Bool' lvalue Var 0x5610344fb438 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x561034505648 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x561034505630 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5610345055e0 <col:74> '_Bool' lvalue Var 0x5610344faf70 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561034505718 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5610345056d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5610345056a0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x561034505748 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561034505730 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5610345056f8 <col:102> '_Bool' lvalue Var 0x5610344faf70 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x561034505800 <line:845:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5610345057e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5610345057c8 <col:3> 'void ()' Function 0x5610344a1410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561034505858 <line:846:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561034505840 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561034505820 <col:3> 'void ()' Function 0x5610344a1350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561034505bc0 <line:847:3, col:123> '_Bool' '='
    | |-DeclRefExpr 0x561034505878 <col:3> '_Bool' lvalue Var 0x5610344fb528 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x561034505ba8 <col:21, col:123> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x561034505b90 <col:21, col:123> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x561034505b70 <col:22, col:123> 'int'
    |       `-BinaryOperator 0x561034505b50 <col:23, col:122> 'int' '&&'
    |         |-BinaryOperator 0x561034505ab8 <col:23, col:94> 'int' '&&'
    |         | |-BinaryOperator 0x561034505a20 <col:23, col:66> 'int' '&&'
    |         | | |-BinaryOperator 0x561034505988 <col:23, col:38> 'int' '&&'
    |         | | | |-BinaryOperator 0x5610345058f0 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x5610345058d8 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x561034505898 <col:23> 'int' lvalue Var 0x5610344fb628 'x' 'int'
    |         | | | | `-IntegerLiteral 0x5610345058b8 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x561034505968 <col:33, col:38> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x561034505950 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x561034505910 <col:33> 'int' lvalue Var 0x5610344fb868 'z' 'int'
    |         | | |   `-IntegerLiteral 0x561034505930 <col:38> 'int' 2
    |         | | `-BinaryOperator 0x561034505a00 <col:43, col:66> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5610345059e8 <col:43> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5610345059a8 <col:43> 'int' lvalue Var 0x5610344fa808 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x5610345059c8 <col:66> 'int' 0
    |         | `-BinaryOperator 0x561034505a98 <col:71, col:94> 'int' '=='
    |         |   |-ImplicitCastExpr 0x561034505a80 <col:71> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x561034505a40 <col:71> 'int' lvalue Var 0x5610344fa928 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x561034505a60 <col:94> 'int' 2
    |         `-BinaryOperator 0x561034505b30 <col:99, col:122> 'int' '=='
    |           |-ImplicitCastExpr 0x561034505b18 <col:99> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x561034505ad8 <col:99> 'int' lvalue Var 0x5610344faa48 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x561034505af8 <col:122> 'int' 0
    |-CallExpr 0x561034505c18 <line:848:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561034505c00 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561034505be0 <col:3> 'void ()' Function 0x5610344a1410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561034505c90 <line:849:3, col:36> 'void'
    | |-ImplicitCastExpr 0x561034505c78 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561034505c38 <col:3> 'void (int)' Function 0x5610344a10d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x561034505cd0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x561034505cb8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x561034505c58 <col:21> '_Bool' lvalue Var 0x5610344fb528 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x561034505d08 <line:850:3, col:10>
      `-IntegerLiteral 0x561034505ce8 <col:10> 'int' 0
