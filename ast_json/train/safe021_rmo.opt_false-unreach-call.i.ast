TranslationUnitDecl 0x55dd9ef55f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55dd9ef56848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55dd9ef56520 '__int128'
|-TypedefDecl 0x55dd9ef568b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55dd9ef56540 'unsigned __int128'
|-TypedefDecl 0x55dd9ef56bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55dd9ef56990 'struct __NSConstantString_tag'
|   `-Record 0x55dd9ef56910 '__NSConstantString_tag'
|-TypedefDecl 0x55dd9ef56c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55dd9ef56c20 'char *'
|   `-BuiltinType 0x55dd9ef56020 'char'
|-TypedefDecl 0x55dd9ef95b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55dd9ef56f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55dd9ef56d40 'struct __va_list_tag'
|     `-Record 0x55dd9ef56cc0 '__va_list_tag'
|-FunctionDecl 0x55dd9ef95ca0 <pthread-wmm/safe021_rmo.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55dd9ef95bd0 <col:31> col:34 'int'
|-FunctionDecl 0x55dd9ef95e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55dd9ef95f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55dd9ef960d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55dd9ef96048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55dd9ef96308 <col:40, col:99>
|   |-IfStmt 0x55dd9ef962d8 <col:42, col:88>
|   | |-UnaryOperator 0x55dd9ef961b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55dd9ef961a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55dd9ef96180 <col:47> 'int' lvalue ParmVar 0x55dd9ef96048 'expression' 'int'
|   | `-CompoundStmt 0x55dd9ef962c0 <col:59, col:88>
|   |   `-LabelStmt 0x55dd9ef962a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55dd9ef96238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55dd9ef96220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55dd9ef961d0 <col:68> 'void () __attribute__((noreturn))' Function 0x55dd9ef95f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55dd9ef962f0 <col:89>
|   `-ReturnStmt 0x55dd9ef962f8 <col:91>
|-FunctionDecl 0x55dd9ef96350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55dd9ef96410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55dd9ef96790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55dd9ef964c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55dd9ef96548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55dd9ef965c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55dd9ef96648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55dd9ef96850 <line:10:22>
|-FunctionDecl 0x55dd9efbc8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55dd9ef968c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55dd9ef96940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55dd9ef969c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55dd9ef96a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55dd9efbc960 <line:13:22>
|-FunctionDecl 0x55dd9efbcc10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55dd9efbc9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55dd9efbca50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55dd9efbcad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55dd9efbccc8 <line:15:22>
|-TypedefDecl 0x55dd9efbcd38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55dd9ef560e0 'unsigned char'
|-TypedefDecl 0x55dd9efbcda8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55dd9ef56100 'unsigned short'
|-TypedefDecl 0x55dd9efbce18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55dd9ef56120 'unsigned int'
|-TypedefDecl 0x55dd9efbce88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55dd9ef56140 'unsigned long'
|-TypedefDecl 0x55dd9efbcef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55dd9ef56040 'signed char'
|-TypedefDecl 0x55dd9efbcf68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55dd9ef560e0 'unsigned char'
|-TypedefDecl 0x55dd9efbcfd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55dd9ef56060 'short'
|-TypedefDecl 0x55dd9efbd048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55dd9ef56100 'unsigned short'
|-TypedefDecl 0x55dd9efbd0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55dd9ef56080 'int'
|-TypedefDecl 0x55dd9efbd128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55dd9ef56120 'unsigned int'
|-TypedefDecl 0x55dd9efbd198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55dd9ef560a0 'long'
|-TypedefDecl 0x55dd9efbd208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55dd9ef56140 'unsigned long'
|-TypedefDecl 0x55dd9efbd278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55dd9ef560a0 'long'
|-TypedefDecl 0x55dd9efbd2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55dd9ef56140 'unsigned long'
|-TypedefDecl 0x55dd9efbd358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55dd9ef56140 'unsigned long'
|-TypedefDecl 0x55dd9efbd3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55dd9ef56120 'unsigned int'
|-TypedefDecl 0x55dd9efbd438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55dd9ef56120 'unsigned int'
|-TypedefDecl 0x55dd9efbd4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55dd9ef56140 'unsigned long'
|-TypedefDecl 0x55dd9efbd518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55dd9ef56140 'unsigned long'
|-TypedefDecl 0x55dd9efbd588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55dd9ef56120 'unsigned int'
|-TypedefDecl 0x55dd9efbd5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55dd9ef56140 'unsigned long'
|-TypedefDecl 0x55dd9efbd668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55dd9ef560a0 'long'
|-TypedefDecl 0x55dd9efbd6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55dd9ef560a0 'long'
|-TypedefDecl 0x55dd9efbd748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55dd9ef56080 'int'
|-RecordDecl 0x55dd9efbd7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55dd9efbd918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55dd9efbd9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55dd9efbd970 'struct __fsid_t' sugar
|   `-RecordType 0x55dd9efbd820 '__fsid_t'
|     `-Record 0x55dd9efbd7a0 ''
|-TypedefDecl 0x55dd9efbda58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55dd9ef560a0 'long'
|-TypedefDecl 0x55dd9efbdac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55dd9ef56140 'unsigned long'
|-TypedefDecl 0x55dd9efbdb38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55dd9ef56140 'unsigned long'
|-TypedefDecl 0x55dd9efbdba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55dd9ef56120 'unsigned int'
|-TypedefDecl 0x55dd9efbdc18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55dd9ef560a0 'long'
|-TypedefDecl 0x55dd9efbdc88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55dd9ef56120 'unsigned int'
|-TypedefDecl 0x55dd9efbdcf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55dd9ef560a0 'long'
|-TypedefDecl 0x55dd9efbdd68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55dd9ef56080 'int'
|-TypedefDecl 0x55dd9efbddd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55dd9ef56080 'int'
|-TypedefDecl 0x55dd9efbde48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55dd9ef56080 'int'
|-TypedefDecl 0x55dd9efbdeb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55dd9ef567a0 'void *'
|   `-BuiltinType 0x55dd9ef55fe0 'void'
|-TypedefDecl 0x55dd9efbdf28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55dd9ef560a0 'long'
|-TypedefDecl 0x55dd9efbdf98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55dd9ef560a0 'long'
|-TypedefDecl 0x55dd9efbe008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55dd9ef560a0 'long'
|-TypedefDecl 0x55dd9efbe078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55dd9ef56140 'unsigned long'
|-TypedefDecl 0x55dd9efbe0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55dd9ef56140 'unsigned long'
|-TypedefDecl 0x55dd9efbe158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55dd9ef56140 'unsigned long'
|-TypedefDecl 0x55dd9efbe1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55dd9ef56140 'unsigned long'
|-TypedefDecl 0x55dd9efbe238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55dd9ef560a0 'long'
|-TypedefDecl 0x55dd9efbe2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55dd9ef560a0 'long'
|-TypedefDecl 0x55dd9efbe318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55dd9ef560a0 'long'
|-TypedefDecl 0x55dd9efbe388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55dd9ef56140 'unsigned long'
|-TypedefDecl 0x55dd9efbe418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55dd9efbe3e0 '__off64_t' sugar
|   |-Typedef 0x55dd9efbd6d8 '__off64_t'
|   `-BuiltinType 0x55dd9ef560a0 'long'
|-TypedefDecl 0x55dd9efbe510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55dd9efbe4d0 '__quad_t *'
|   `-TypedefType 0x55dd9efbe470 '__quad_t' sugar
|     |-Typedef 0x55dd9efbd278 '__quad_t'
|     `-BuiltinType 0x55dd9ef560a0 'long'
|-TypedefDecl 0x55dd9efbe580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55dd9ef56c20 'char *'
|   `-BuiltinType 0x55dd9ef56020 'char'
|-TypedefDecl 0x55dd9efbe5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55dd9ef560a0 'long'
|-TypedefDecl 0x55dd9efbe660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55dd9ef56120 'unsigned int'
|-FunctionDecl 0x55dd9efbe7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55dd9efbe6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55dd9efbeae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55dd9efbead8 <line:72:3, col:34>
|     `-CallExpr 0x55dd9efbea98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55dd9efbea80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55dd9efbea10 <col:10> '<builtin fn type>' Function 0x55dd9efbe880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55dd9efbeac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55dd9efbea30 <col:29> 'unsigned int' lvalue ParmVar 0x55dd9efbe6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55dd9efbe880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55dd9efbe920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55dd9efbe990 <col:10> Implicit
| `-ConstAttr 0x55dd9efbe9e8 <col:10> Implicit
|-FunctionDecl 0x55dd9efbec40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55dd9efbeb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55dd9efbef58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55dd9efbef48 <line:77:3, col:34>
|     `-CallExpr 0x55dd9efbef08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55dd9efbeef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55dd9efbee78 <col:10> '<builtin fn type>' Function 0x55dd9efbece8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55dd9efbef30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55dd9efbee98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55dd9efbeb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55dd9efbece8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55dd9efbed88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55dd9efbedf8 <col:10> Implicit
| `-ConstAttr 0x55dd9efbee50 <col:10> Implicit
|-TypedefDecl 0x55dd9efbef88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55dd9ef56140 'unsigned long'
|-TypedefDecl 0x55dd9efbf018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55dd9efbefe0 '__time_t' sugar
|   |-Typedef 0x55dd9efbdc18 '__time_t'
|   `-BuiltinType 0x55dd9ef560a0 'long'
|-RecordDecl 0x55dd9efbf070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55dd9efbf128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55dd9efbf1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55dd9efbf248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55dd9efbf210 '__pid_t' sugar
|   |-Typedef 0x55dd9efbd748 '__pid_t'
|   `-BuiltinType 0x55dd9ef56080 'int'
|-RecordDecl 0x55dd9efbf2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55dd9efbf360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55dd9efbf3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55dd9efbf470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55dd9efbf4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55dd9ef56140 'unsigned long'
|-RecordDecl 0x55dd9efbf530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55dd9efbf7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55dd9efc18b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55dd9efbf810 'struct cpu_set_t' sugar
|   `-RecordType 0x55dd9efbf5b0 'cpu_set_t'
|     `-Record 0x55dd9efbf530 ''
|-FunctionDecl 0x55dd9efc1b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55dd9efc1958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55dd9efc1a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55dd9efc1c38 <line:107:19>
|-FunctionDecl 0x55dd9efc1e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55dd9efc1ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55dd9efc1eb8 <col:69>
|-FunctionDecl 0x55dd9efc2030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55dd9efc1f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55dd9efc20d8 <col:64>
|-FunctionDecl 0x55dd9efc2398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55dd9efc2140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55dd9efc2278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55dd9efc2448 <line:113:22>
|-FunctionDecl 0x55dd9efc26c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55dd9efc24b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55dd9efc25a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55dd9efc2778 <col:88>
|-FunctionDecl 0x55dd9efc2a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55dd9efc27e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55dd9efc28c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55dd9efc2950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55dd9efc2b50 <col:62>
|-FunctionDecl 0x55dd9efc2cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55dd9efc2bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55dd9efc2d70 <col:63>
|-FunctionDecl 0x55dd9efc2e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55dd9efc2f38 <col:47>
|-FunctionDecl 0x55dd9efc3040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55dd9efc2fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55dd9efc30e8 <col:69>
|-FunctionDecl 0x55dd9efc31f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55dd9efc3158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55dd9efc3298 <col:69>
|-FunctionDecl 0x55dd9efc3558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55dd9efc3300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55dd9efc3438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55dd9efc3608 <col:88>
|-TypedefDecl 0x55dd9efc3698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55dd9efc3660 '__clock_t' sugar
|   |-Typedef 0x55dd9efbda58 '__clock_t'
|   `-BuiltinType 0x55dd9ef560a0 'long'
|-TypedefDecl 0x55dd9efc3728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55dd9efc36f0 '__clockid_t' sugar
|   |-Typedef 0x55dd9efbde48 '__clockid_t'
|   `-BuiltinType 0x55dd9ef56080 'int'
|-TypedefDecl 0x55dd9efc37b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55dd9efc3780 '__timer_t' sugar
|   |-Typedef 0x55dd9efbdeb8 '__timer_t'
|   `-PointerType 0x55dd9ef567a0 'void *'
|     `-BuiltinType 0x55dd9ef55fe0 'void'
|-RecordDecl 0x55dd9efc3810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55dd9efc38e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55dd9efc3950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55dd9efc39b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55dd9efc3a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55dd9efc3a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55dd9efc3af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55dd9efc3b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55dd9efc3bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55dd9efc3c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55dd9efc3c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55dd9efc3cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55dd9efc3d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55dd9efc3e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55dd9efc3e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55dd9efc3f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55dd9efc4100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55dd9efc41a0 <col:45>
|-FunctionDecl 0x55dd9efc4380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55dd9efc4270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55dd9efc4428 <col:54>
|-FunctionDecl 0x55dd9efc4628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55dd9efc4490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55dd9efc4508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55dd9efc46d8 <line:157:22>
| `-ConstAttr 0x55dd9efc4730 <col:63>
|-FunctionDecl 0x55dd9efc5560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55dd9efc4828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55dd9efc5608 <col:56>
|-FunctionDecl 0x55dd9efc59b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55dd9efc5678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55dd9efc56f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55dd9efc5770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55dd9efc5868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55dd9efc5a70 <col:54>
|-RecordDecl 0x55dd9efc5ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55dd9efc5b78 parent 0x55dd9ef55f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55dd9efc5dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55dd9efc5e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55dd9efc5ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55dd9efc5f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55dd9efc6038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55dd9efc6158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55dd9efc6100 'struct __locale_struct *'
|   `-ElaboratedType 0x55dd9efc6090 'struct __locale_struct' sugar
|     `-RecordType 0x55dd9efc5b50 'struct __locale_struct'
|       `-Record 0x55dd9efc5ac8 '__locale_struct'
|-TypedefDecl 0x55dd9efc6208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55dd9efc61d0 '__locale_t' sugar
|   |-Typedef 0x55dd9efc6158 '__locale_t'
|   `-PointerType 0x55dd9efc6100 'struct __locale_struct *'
|     `-ElaboratedType 0x55dd9efc6090 'struct __locale_struct' sugar
|       `-RecordType 0x55dd9efc5b50 'struct __locale_struct'
|         `-Record 0x55dd9efc5ac8 '__locale_struct'
|-FunctionDecl 0x55dd9efc6610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55dd9efc6278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55dd9efc62f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55dd9efc6370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55dd9efc6400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55dd9efc6478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55dd9efc66d8 <col:40>
|-FunctionDecl 0x55dd9efc68c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55dd9efc67a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55dd9efc6970 <col:66>
|-FunctionDecl 0x55dd9efc6a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55dd9efc69d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55dd9efc6b28 <col:69>
|-FunctionDecl 0x55dd9efc6d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55dd9efc6b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55dd9efc6c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55dd9efc6e08 <col:52>
|-FunctionDecl 0x55dd9efc6fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55dd9efc6e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55dd9efc6f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55dd9efc7060 <col:55>
|-FunctionDecl 0x55dd9efc71f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55dd9efc70e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55dd9efc72a0 <col:62>
|-FunctionDecl 0x55dd9efc7418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55dd9efc7308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55dd9efc74c0 <col:60>
|-FunctionDecl 0x55dd9efc7718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55dd9efc7578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55dd9efc75f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55dd9efc77c8 <col:44>
|-FunctionDecl 0x55dd9efc79d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55dd9efc7830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55dd9efc78b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55dd9efc7a88 <col:49>
|-VarDecl 0x55dd9efc7b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55dd9efc7c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55dd9efc7c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55dd9efc7d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55dd9efc7e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55dd9efc7f20 <col:42>
|-VarDecl 0x55dd9efc7f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55dd9efc8010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55dd9efc8198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55dd9efc8088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55dd9efc8240 <col:57>
|-FunctionDecl 0x55dd9efc8350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55dd9efc82c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55dd9efc83f8 <col:56>
|-FunctionDecl 0x55dd9efc9540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55dd9efc8478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55dd9efc95e8 <col:59>
|-FunctionDecl 0x55dd9efc96f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55dd9efc9658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55dd9efc9798 <col:48>
| `-ConstAttr 0x55dd9efc97f0 <col:89>
|-FunctionDecl 0x55dd9efc9a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55dd9efc98a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55dd9efc9938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55dd9efc9cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55dd9efc9b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55dd9efc9bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55dd9efc9d68 <col:88>
|-FunctionDecl 0x55dd9efc9f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55dd9efc9dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55dd9efc9e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55dd9efc9fb0 <col:88>
|-FunctionDecl 0x55dd9efca1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55dd9efca018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55dd9efca0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55dd9efca278 <line:208:22>
|-FunctionDecl 0x55dd9efca5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55dd9efca2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55dd9efca360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55dd9efca3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55dd9efca480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55dd9efca8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55dd9efca6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55dd9efca7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55dd9efca998 <col:85>
|-FunctionDecl 0x55dd9efcad88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55dd9efcaa00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55dd9efcab38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55dd9efcac40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55dd9efcae40 <col:52>
|-FunctionDecl 0x55dd9efcafb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55dd9efcaea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55dd9efcb060 <col:61>
|-FunctionDecl 0x55dd9efcb560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55dd9efcb0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55dd9efcb148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55dd9efcb278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55dd9efcb368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55dd9efcb620 <col:62>
|-FunctionDecl 0x55dd9efcb838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55dd9efcb688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55dd9efcb718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55dd9efcb8e8 <line:221:22>
|-FunctionDecl 0x55dd9efcb9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55dd9efcb950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55dd9efcba90 <col:65>
|-TypedefDecl 0x55dd9efcbb00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55dd9ef56140 'unsigned long'
|-RecordDecl 0x55dd9efcbb58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55dd9efcbca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55dd9efcbd08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55dd9efcbdb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55dd9efcbd60 'union pthread_attr_t' sugar
|   `-RecordType 0x55dd9efcbbe0 'union pthread_attr_t'
|     `-Record 0x55dd9efcbb58 'pthread_attr_t'
|-RecordDecl 0x55dd9efcbe10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55dd9efcbf88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55dd9efcc000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55dd9efcc0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55dd9efcc050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55dd9efcbe90 'struct __pthread_internal_list'
|     `-Record 0x55dd9efcbe10 '__pthread_internal_list'
|-RecordDecl 0x55dd9efcc120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55dd9efcc1c8 parent 0x55dd9ef55f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55dd9efcc2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55dd9efcc308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55dd9efcc370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55dd9efcc3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55dd9efcc440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55dd9efcc4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55dd9efd0580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55dd9efd0630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55dd9efd0720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55dd9efd0788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55dd9efd0910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55dd9efd08b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55dd9efcc1a0 'pthread_mutex_t'
|     `-Record 0x55dd9efcc120 ''
|-RecordDecl 0x55dd9efd0980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55dd9efd0ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55dd9efd0b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55dd9efd0be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55dd9efd0b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55dd9efd0a00 'pthread_mutexattr_t'
|     `-Record 0x55dd9efd0980 ''
|-RecordDecl 0x55dd9efd0c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55dd9efd0cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55dd9efd0dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55dd9efd0e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55dd9efd0e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55dd9efd0ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55dd9efd0f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55dd9efd0fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55dd9efd1030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55dd9efd1098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55dd9efd1150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe021_rmo.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe021_rmo.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55dd9efd1240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55dd9efd12a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55dd9efd13e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55dd9efd1380 'union pthread_cond_t' sugar
|   `-RecordType 0x55dd9efd0cd0 'pthread_cond_t'
|     `-Record 0x55dd9efd0c50 ''
|-RecordDecl 0x55dd9efd1450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55dd9efd1590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55dd9efd15f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55dd9efd16b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55dd9efd1650 'union pthread_condattr_t' sugar
|   `-RecordType 0x55dd9efd14d0 'pthread_condattr_t'
|     `-Record 0x55dd9efd1450 ''
|-TypedefDecl 0x55dd9efd1738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55dd9ef56120 'unsigned int'
|-TypedefDecl 0x55dd9efd17a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55dd9ef56080 'int'
|-RecordDecl 0x55dd9efd1800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55dd9efd18a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55dd9efd1970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55dd9efd19d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55dd9efd1a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55dd9efd1aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55dd9efd1b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55dd9efd1b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55dd9efd1be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55dd9efd1c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55dd9efd1cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55dd9efd1d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55dd9efd1d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55dd9efd1e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe021_rmo.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe021_rmo.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55dd9efd1ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55dd9efd1f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55dd9efd2090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55dd9efd2030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55dd9efd1880 'pthread_rwlock_t'
|     `-Record 0x55dd9efd1800 ''
|-RecordDecl 0x55dd9efd2100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55dd9efd2240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55dd9efd22a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55dd9efd2360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55dd9efd2300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55dd9efd2180 'pthread_rwlockattr_t'
|     `-Record 0x55dd9efd2100 ''
|-TypedefDecl 0x55dd9efd23e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55dd9ef56084 'volatile int' volatile
|   `-BuiltinType 0x55dd9ef56080 'int'
|-RecordDecl 0x55dd9efd2440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55dd9efd45b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55dd9efd4618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55dd9efd46d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55dd9efd4670 'union pthread_barrier_t' sugar
|   `-RecordType 0x55dd9efd24c0 'pthread_barrier_t'
|     `-Record 0x55dd9efd2440 ''
|-RecordDecl 0x55dd9efd4740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55dd9efd4840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55dd9efd48a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55dd9efd4960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55dd9efd4900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55dd9efd47c0 'pthread_barrierattr_t'
|     `-Record 0x55dd9efd4740 ''
|-TypedefDecl 0x55dd9efd4a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55dd9efd4a10 'long [8]' 8 
|   `-BuiltinType 0x55dd9ef560a0 'long'
|-EnumDecl 0x55dd9efd4ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55dd9efd4b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55dd9efd4be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55dd9efd4c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55dd9efd4d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55dd9efd4d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55dd9efd4da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55dd9efd4df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55dd9efd4e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55dd9efd4e68 <col:26> 'int'
| |   `-DeclRefExpr 0x55dd9efd4e48 <col:26> 'int' EnumConstant 0x55dd9efd4d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55dd9efd4f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55dd9efd4ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x55dd9efd4ed0 <col:29> 'int' EnumConstant 0x55dd9efd4d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55dd9efd4f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55dd9efd4f78 <col:30> 'int'
| |   `-DeclRefExpr 0x55dd9efd4f58 <col:30> 'int' EnumConstant 0x55dd9efd4da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55dd9efd5018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55dd9efd5000 <col:27> 'int'
|     `-DeclRefExpr 0x55dd9efd4fe0 <col:27> 'int' EnumConstant 0x55dd9efd4e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55dd9efd5068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55dd9efd5138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55dd9efd51c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55dd9efd51a8 <col:30> 'int'
| |   `-DeclRefExpr 0x55dd9efd5188 <col:30> 'int' EnumConstant 0x55dd9efd5138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55dd9efd5210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55dd9efd5298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55dd9efd5280 <col:29> 'int'
|     `-DeclRefExpr 0x55dd9efd5260 <col:29> 'int' EnumConstant 0x55dd9efd5210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55dd9efd52e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55dd9efd53b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55dd9efd5408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55dd9efd5458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55dd9efd54a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55dd9efd55c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55dd9efd5610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55dd9efd5660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55dd9efd56e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55dd9efd56d0 <col:31> 'int'
|     `-DeclRefExpr 0x55dd9efd56b0 <col:31> 'int' EnumConstant 0x55dd9efd55c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55dd9efd5738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55dd9efd5808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55dd9efd5858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55dd9efd58a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55dd9efd5978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55dd9efd59c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55dd9efd5a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55dd9efd5ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55dd9efd5b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55dd9efd5b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55dd9efd5dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55dd9efd5e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55dd9efd5e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55dd9efd5fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55dd9efd6008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55dd9efd60d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55dd9efd6128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55dd9efd6178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55dd9efd6248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55dd9efd6298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55dd9efd68f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55dd9efd6390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55dd9efd64a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55dd9efd66e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55dd9efd6760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55dd9efd69b8 <col:47>
| |-NonNullAttr 0x55dd9efd6a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x55dd9efd6a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55dd9efd6b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55dd9efd6aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55dd9efd6dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55dd9efd6c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55dd9efd6ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55dd9efd6f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55dd9efd6e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55dd9efd7040 <col:60>
|-FunctionDecl 0x55dd9efd7190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55dd9efd7230 <col:54>
| `-ConstAttr 0x55dd9efd7288 <col:95>
|-FunctionDecl 0x55dd9efd7458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55dd9efd72c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55dd9efd7338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55dd9efd7508 <line:394:19>
| `-ConstAttr 0x55dd9efd7560 <col:60>
|-FunctionDecl 0x55dd9efd7f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55dd9efd7e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55dd9efd8010 <col:71>
| `-NonNullAttr 0x55dd9efd8068 <col:112, col:126> 1
|-FunctionDecl 0x55dd9efd8170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55dd9efd80b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55dd9efd8218 <line:397:22>
| `-NonNullAttr 0x55dd9efd8270 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efd8498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55dd9efd82b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55dd9efd8338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55dd9efd8548 <line:400:22>
| `-NonNullAttr 0x55dd9efd85a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55dd9efd87a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55dd9efd85e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55dd9efd8668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55dd9efd8858 <line:403:22>
| `-NonNullAttr 0x55dd9efd88b0 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efd8b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55dd9efd88f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55dd9efd89a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55dd9efd8bb8 <line:406:22>
| `-NonNullAttr 0x55dd9efd8c10 <col:63, col:80> 1 2
|-FunctionDecl 0x55dd9efd9e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55dd9efd8c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55dd9efd8cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55dd9efd9ef8 <line:409:22>
| `-NonNullAttr 0x55dd9efd9f50 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efda188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55dd9efd9f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55dd9efda028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55dd9efda238 <line:412:22>
| `-NonNullAttr 0x55dd9efda290 <col:63, col:80> 1 2
|-FunctionDecl 0x55dd9efda4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55dd9efda2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55dd9efda368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55dd9efda578 <col:37>
| `-NonNullAttr 0x55dd9efda5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x55dd9efda7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55dd9efda618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55dd9efda698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55dd9efda868 <line:418:22>
| `-NonNullAttr 0x55dd9efda8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55dd9efdaa48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55dd9efda908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55dd9efda988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55dd9efdaaf8 <line:420:22>
| `-NonNullAttr 0x55dd9efdab50 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efdacf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55dd9efdab98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55dd9efdac18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55dd9efdada8 <line:423:22>
| `-NonNullAttr 0x55dd9efdbe30 <col:63, col:80> 1 2
|-FunctionDecl 0x55dd9efdbfb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55dd9efdbe78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55dd9efdbef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55dd9efdc068 <line:426:22>
| `-NonNullAttr 0x55dd9efdc0c0 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efdc268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55dd9efdc108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55dd9efdc188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55dd9efdc318 <line:429:22>
| `-NonNullAttr 0x55dd9efdc370 <col:63, col:80> 1 2
|-FunctionDecl 0x55dd9efdc4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55dd9efdc3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55dd9efdc438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55dd9efdc5a8 <line:431:22>
| `-NonNullAttr 0x55dd9efdc600 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efdc828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55dd9efdc648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55dd9efdc6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55dd9efdc8d8 <line:434:22>
| |-NonNullAttr 0x55dd9efdc930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55dd9efdc968 <col:100> "" ""
|-FunctionDecl 0x55dd9efdcb78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55dd9efdc9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55dd9efdca38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55dd9efdcc28 <line:437:22>
| |-NonNullAttr 0x55dd9efdcc80 <col:63, col:77> 1
| `-DeprecatedAttr 0x55dd9efdccb8 <col:97> "" ""
|-FunctionDecl 0x55dd9efdceb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55dd9efdcd08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55dd9efdcd80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55dd9efdcf68 <line:440:22>
| `-NonNullAttr 0x55dd9efdcfc0 <col:63, col:80> 1 2
|-FunctionDecl 0x55dd9efdd140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55dd9efdd008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55dd9efdd080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55dd9efdd1f0 <line:443:22>
| `-NonNullAttr 0x55dd9efdd248 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efdd538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55dd9efdd298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55dd9efdd318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55dd9efdd390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55dd9efdd5f0 <line:447:22>
| `-NonNullAttr 0x55dd9efdd648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55dd9efdd8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55dd9efdd6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55dd9efdd720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55dd9efdd798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55dd9efdd9b0 <col:43>
| `-NonNullAttr 0x55dd9efdda08 <col:84, col:98> 1
|-FunctionDecl 0x55dd9efddcc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55dd9efdda58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55dd9efddad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55dd9efddb68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55dd9efddd80 <line:452:22>
| `-NonNullAttr 0x55dd9efdddd8 <col:63, col:77> 3
|-FunctionDecl 0x55dd9efde0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55dd9efdde50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55dd9efdded0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55dd9efddf60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55dd9efde1a0 <line:456:22>
| `-NonNullAttr 0x55dd9efde1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x55dd9efde3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55dd9efde248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55dd9efde2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55dd9efde498 <line:458:22>
|-FunctionDecl 0x55dd9efde868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55dd9efde560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55dd9efde700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55dd9efde918 <col:52, col:69> 1 2
|-FunctionDecl 0x55dd9efdeac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55dd9efde9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55dd9efdea20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55dd9efdeca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55dd9efdeb88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55dd9efdec08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55dd9efdee60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55dd9efded68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55dd9efdefa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55dd9efdf040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55dd9efdf0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55dd9efdf1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55dd9efdf240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55dd9efdf410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe021_rmo.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55dd9efdf508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55dd9efdf5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55dd9efdf560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55dd9efdf0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x55dd9efdf040 ''
| `-AlignedAttr 0x55dd9efdf618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55dd9efdf690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55dd9efdf7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55dd9efdf858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55dd9efdf8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55dd9efdf928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55dd9efdfb30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55dd9efdfa20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55dd9efdfc78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55dd9efdfbe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55dd9efdfe70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55dd9efdfd30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55dd9efdff18 <line:487:22>
|-RecordDecl 0x55dd9efdff70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55dd9efe0288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55dd9efe00e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55dd9efe0168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55dd9efe0338 <col:86>
| `-ReturnsTwiceAttr 0x55dd9efe0390 <col:12> Implicit
|-FunctionDecl 0x55dd9efe06b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55dd9efe0460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55dd9efe0570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55dd9efe0768 <line:493:22>
| `-NonNullAttr 0x55dd9efe07c0 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efe0938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55dd9efe0808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55dd9efe09e0 <line:495:22>
| `-NonNullAttr 0x55dd9efe0a38 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efe0b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55dd9efe0a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55dd9efe0be8 <line:497:22>
| `-NonNullAttr 0x55dd9efe0c40 <col:52, col:66> 1
|-FunctionDecl 0x55dd9efe0d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55dd9efe0c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55dd9efe0de8 <line:499:22>
| `-NonNullAttr 0x55dd9efe0e40 <col:52, col:66> 1
|-FunctionDecl 0x55dd9efe1088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55dd9efe0e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55dd9efe0f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55dd9efe1138 <col:36>
| `-NonNullAttr 0x55dd9efe1190 <col:66, col:83> 1 2
|-FunctionDecl 0x55dd9efe1290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55dd9efe11d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55dd9efe1338 <line:504:22>
| `-NonNullAttr 0x55dd9efe1390 <col:52, col:66> 1
|-FunctionDecl 0x55dd9efe1628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55dd9efe1440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55dd9efe14c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55dd9efe16d8 <line:508:22>
| `-NonNullAttr 0x55dd9efe1730 <col:63, col:80> 1 2
|-FunctionDecl 0x55dd9efe19f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55dd9efe1778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55dd9efe17f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55dd9efe1878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55dd9efe1ab0 <line:512:22>
| `-NonNullAttr 0x55dd9efe1b08 <col:63, col:80> 1 3
|-FunctionDecl 0x55dd9efe1c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55dd9efe1b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55dd9efe1cb8 <line:514:22>
| `-NonNullAttr 0x55dd9efe1d10 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efe1f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55dd9efe1dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55dd9efe1fe0 <line:516:22>
| `-NonNullAttr 0x55dd9efe2038 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efe2140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55dd9efe2088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55dd9efe21e8 <line:518:22>
| `-NonNullAttr 0x55dd9efe2240 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efe2468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55dd9efe2288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55dd9efe2308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55dd9efe2518 <line:522:22>
| `-NonNullAttr 0x55dd9efe2570 <col:63, col:80> 1 2
|-FunctionDecl 0x55dd9efe2778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55dd9efe25b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55dd9efe2638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55dd9efe2828 <line:525:22>
| `-NonNullAttr 0x55dd9efe2880 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efe2a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55dd9efe28c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55dd9efe2948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55dd9efe2ad8 <line:528:22>
| `-NonNullAttr 0x55dd9efe2b30 <col:63, col:80> 1 2
|-FunctionDecl 0x55dd9efe2cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55dd9efe2b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55dd9efe2bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55dd9efe2d68 <line:530:22>
| `-NonNullAttr 0x55dd9efe2dc0 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efe3f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55dd9efe2e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55dd9efe3eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55dd9efe4040 <line:534:22>
| `-NonNullAttr 0x55dd9efe4098 <col:63, col:80> 1 2
|-FunctionDecl 0x55dd9efe4228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55dd9efe40e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55dd9efe4168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55dd9efe42d8 <line:537:22>
| `-NonNullAttr 0x55dd9efe4330 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efe44d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55dd9efe4378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55dd9efe43f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55dd9efe4588 <line:541:22>
| `-NonNullAttr 0x55dd9efe45e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55dd9efe4768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55dd9efe4628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55dd9efe46a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55dd9efe4818 <line:544:22>
| `-NonNullAttr 0x55dd9efe4870 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efe4a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55dd9efe48b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55dd9efe4938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55dd9efe4b08 <line:547:22>
| `-NonNullAttr 0x55dd9efe4b60 <col:63, col:80> 1 2
|-FunctionDecl 0x55dd9efe4ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55dd9efe4ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55dd9efe4c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55dd9efe4d98 <line:550:22>
| `-NonNullAttr 0x55dd9efe4df0 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efe6168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55dd9efe5f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55dd9efe6020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55dd9efe6218 <col:29>
| `-NonNullAttr 0x55dd9efe6270 <col:70, col:84> 1
|-FunctionDecl 0x55dd9efe63e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55dd9efe62b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55dd9efe6490 <line:555:22>
| `-NonNullAttr 0x55dd9efe64e8 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efe65f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55dd9efe6538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55dd9efe6698 <line:557:22>
| `-NonNullAttr 0x55dd9efe66f0 <col:52, col:66> 1
|-FunctionDecl 0x55dd9efe67f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55dd9efe6738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55dd9efe6898 <line:559:19>
| `-NonNullAttr 0x55dd9efe68f0 <col:49, col:63> 1
|-FunctionDecl 0x55dd9efe6b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55dd9efe6938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55dd9efe69c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55dd9efe6bd8 <col:39>
| `-NonNullAttr 0x55dd9efe6c30 <col:69, col:86> 1 2
|-FunctionDecl 0x55dd9efe6d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55dd9efe6c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55dd9efe6dd8 <line:564:22>
| `-NonNullAttr 0x55dd9efe6e30 <col:52, col:66> 1
|-FunctionDecl 0x55dd9efe6f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55dd9efe6ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55dd9efe7040 <line:566:22>
| `-NonNullAttr 0x55dd9efe7098 <col:52, col:66> 1
|-FunctionDecl 0x55dd9efe7258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55dd9efe70e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55dd9efe7178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55dd9efe7308 <col:39>
| `-NonNullAttr 0x55dd9efe7360 <col:69, col:86> 1 2
|-FunctionDecl 0x55dd9efe7460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55dd9efe73a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55dd9efe7508 <line:571:22>
| `-NonNullAttr 0x55dd9efe7560 <col:52, col:66> 1
|-FunctionDecl 0x55dd9efe7748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55dd9efe7610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55dd9efe77f0 <line:573:22>
| `-NonNullAttr 0x55dd9efe7848 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efe7950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55dd9efe7898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55dd9efe79f8 <line:575:22>
| `-NonNullAttr 0x55dd9efe7a50 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efe7c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55dd9efe7a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55dd9efe7b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55dd9efe7d28 <line:579:22>
| `-NonNullAttr 0x55dd9efe7d80 <col:63, col:80> 1 2
|-FunctionDecl 0x55dd9efe7fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55dd9efe7dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55dd9efe7e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55dd9efe8058 <line:582:22>
| `-NonNullAttr 0x55dd9efe80b0 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efe8258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55dd9efe80f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55dd9efe8178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55dd9efe8308 <line:586:22>
| `-NonNullAttr 0x55dd9efe8360 <col:63, col:80> 1 2
|-FunctionDecl 0x55dd9efe84e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55dd9efe83a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55dd9efe8428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55dd9efe8598 <col:36>
| `-NonNullAttr 0x55dd9efe85f0 <col:77, col:91> 1
|-FunctionDecl 0x55dd9efe8928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55dd9efe86d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55dd9efe87e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55dd9efe89d8 <line:591:22>
| `-NonNullAttr 0x55dd9efe8a30 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efe8ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55dd9efe8a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55dd9efe8c50 <line:593:22>
| `-NonNullAttr 0x55dd9efe8ca8 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efe8db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55dd9efe8cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55dd9efe8e58 <line:595:22>
| `-NonNullAttr 0x55dd9efe8eb0 <col:52, col:66> 1
|-FunctionDecl 0x55dd9efe8fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55dd9efe8f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55dd9efe9070 <line:597:22>
| `-NonNullAttr 0x55dd9efe90c8 <col:52, col:66> 1
|-FunctionDecl 0x55dd9efe92f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55dd9efe9118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55dd9efe9190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55dd9efe93a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55dd9efe96d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55dd9efe9428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55dd9efe94a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55dd9efe9530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55dd9efe9790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55dd9efe99a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55dd9efe9870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55dd9efe9a50 <line:606:22>
| `-NonNullAttr 0x55dd9efe9aa8 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efe9bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55dd9efe9af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55dd9efe9c58 <line:608:22>
| `-NonNullAttr 0x55dd9efe9cb0 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efe9f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55dd9efe9cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55dd9efe9d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55dd9efe9fc0 <line:612:22>
| `-NonNullAttr 0x55dd9efea018 <col:63, col:80> 1 2
|-FunctionDecl 0x55dd9efea228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55dd9efea068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55dd9efea0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55dd9efea2d8 <col:37>
| `-NonNullAttr 0x55dd9efea330 <col:78, col:92> 1
|-FunctionDecl 0x55dd9efea548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55dd9efea378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55dd9efea420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55dd9efea5f8 <line:618:22>
| `-NonNullAttr 0x55dd9efea650 <col:63, col:80> 1 2
|-FunctionDecl 0x55dd9efea818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55dd9efea698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55dd9efea710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55dd9efea8c8 <line:621:22>
| `-NonNullAttr 0x55dd9efea920 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efeabc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55dd9efeaa00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55dd9efeaa80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55dd9efeac78 <line:623:22>
| `-NonNullAttr 0x55dd9efeacd0 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efeae48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55dd9efead18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55dd9efeaf20 <line:625:22>
| `-NonNullAttr 0x55dd9efeaf78 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efeb080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55dd9efeafc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55dd9efeb128 <line:627:22>
| `-NonNullAttr 0x55dd9efeb180 <col:52, col:66> 1
|-FunctionDecl 0x55dd9efeb280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55dd9efeb1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55dd9efeb328 <line:629:22>
| `-NonNullAttr 0x55dd9efeb380 <col:52, col:66> 1
|-FunctionDecl 0x55dd9efeb480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55dd9efeb3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55dd9efeb528 <line:631:22>
| `-NonNullAttr 0x55dd9efeb580 <col:52, col:66> 1
|-FunctionDecl 0x55dd9efeb958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55dd9efeb660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55dd9efeb770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55dd9efeb7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55dd9efeba10 <line:635:22>
| `-NonNullAttr 0x55dd9efeba68 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efebbe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55dd9efebab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55dd9efebc90 <line:637:22>
| `-NonNullAttr 0x55dd9efebce8 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efebdf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55dd9efebd38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55dd9efebe98 <line:639:22>
| `-NonNullAttr 0x55dd9efebef0 <col:52, col:66> 1
|-FunctionDecl 0x55dd9efec0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55dd9efebfb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55dd9efec190 <line:641:22>
| `-NonNullAttr 0x55dd9efec1e8 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efec2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55dd9efec238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55dd9efec398 <line:643:22>
| `-NonNullAttr 0x55dd9efec3f0 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efec618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55dd9efec438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55dd9efec4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55dd9efec6c8 <line:647:22>
| `-NonNullAttr 0x55dd9efec720 <col:63, col:80> 1 2
|-FunctionDecl 0x55dd9efec928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55dd9efec768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55dd9efec7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55dd9efec9d8 <line:650:22>
| `-NonNullAttr 0x55dd9efeca30 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efecd78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55dd9efecb10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55dd9efecc30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55dd9efece28 <line:653:22>
| `-NonNullAttr 0x55dd9efece80 <col:63, col:77> 1
|-FunctionDecl 0x55dd9efecfe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55dd9efecec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55dd9efed090 <col:69>
|-FunctionDecl 0x55dd9efed208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55dd9efed0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55dd9efed2b0 <col:72>
|-FunctionDecl 0x55dd9efed4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55dd9efed318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55dd9efed3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55dd9efed598 <col:44>
|-FunctionDecl 0x55dd9efed7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55dd9efed600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55dd9efed678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55dd9efed868 <line:660:22>
| `-NonNullAttr 0x55dd9efed8c0 <col:63, col:77> 2
|-FunctionDecl 0x55dd9efedd08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55dd9efed9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55dd9efedab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55dd9efedbc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55dd9efeddc0 <col:47>
|-FunctionDecl 0x55dd9efeef60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55dd9efede30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55dd9efef0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55dd9efef020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55dd9efef210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55dd9efef178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55dd9efef2d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55dd9efef398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55dd9efef458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55dd9efef510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55dd9efef590 prev 0x55dd9efef510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55dd9efef5f8 <col:24> 'int' 0
|-VarDecl 0x55dd9efef630 <line:673:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55dd9efef6b0 prev 0x55dd9efef630 <line:674:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55dd9efef718 <col:27> 'int' 0
|-VarDecl 0x55dd9efef750 <line:675:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x55dd9efef7d0 prev 0x55dd9efef750 <line:676:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x55dd9efef838 <col:27> 'int' 0
|-VarDecl 0x55dd9efef868 <line:677:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55dd9efef8e0 <line:678:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55dd9efef960 <line:679:1, col:5> col:5 used x 'int'
|-VarDecl 0x55dd9efef9e0 prev 0x55dd9efef960 <line:680:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55dd9efefa48 <col:9> 'int' 0
|-VarDecl 0x55dd9efefa80 <line:681:1, col:5> col:5 used y 'int'
|-VarDecl 0x55dd9efefb00 prev 0x55dd9efefa80 <line:682:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55dd9efefb68 <col:9> 'int' 0
|-VarDecl 0x55dd9efefba0 <line:683:1, col:5> col:5 used z 'int'
|-VarDecl 0x55dd9efefc20 prev 0x55dd9efefba0 <line:684:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55dd9efefc88 <col:9> 'int' 0
|-VarDecl 0x55dd9efefcb8 <line:685:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x55dd9efefd38 <line:686:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x55dd9efefdb0 <line:687:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x55dd9efefe28 <line:688:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x55dd9efefea0 <line:689:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x55dd9efeff70 <line:690:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x55dd9efeffe8 <line:691:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x55dd9eff0060 <line:692:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x55dd9eff00d8 <line:693:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x55dd9eff0150 <line:694:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x55dd9eff01c8 <line:695:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x55dd9eff0248 <line:696:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x55dd9eff02c8 <line:697:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x55dd9eff0340 <line:698:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x55dd9eff03c0 <line:699:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x55dd9eff0438 <line:700:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x55dd9eff04b0 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55dd9eff0528 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55dd9eff0640 prev 0x55dd9efeef60 <line:703:1, line:731:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55dd9eff05a8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55dd9eff1e68 <line:704:1, line:731:1>
|   |-CallExpr 0x55dd9eff0758 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55dd9eff0740 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd9eff06e8 <col:3> 'void ()' Function 0x55dd9ef96350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55dd9eff07d0 <line:706:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55dd9eff0778 <col:3> 'int' lvalue Var 0x55dd9eff03c0 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55dd9eff07b8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dd9eff0798 <col:15> 'int' lvalue Var 0x55dd9eff02c8 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55dd9eff0830 <line:707:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55dd9eff07f0 <col:3> 'int' lvalue Var 0x55dd9eff02c8 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x55dd9eff0810 <col:15> 'int' 1
|   |-BinaryOperator 0x55dd9eff08a8 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55dd9eff0850 <col:3> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55dd9eff0890 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dd9eff0870 <col:20> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55dd9eff0940 <line:709:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55dd9eff08c8 <col:3> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55dd9eff0918 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55dd9eff08e8 <col:27> 'int' 1
|   |-CallExpr 0x55dd9eff0ac8 <line:710:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55dd9eff0ab0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55dd9eff0960 <col:3> 'void (int)' Function 0x55dd9ef960d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55dd9eff0a60 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55dd9eff0a40 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55dd9eff0a20 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55dd9eff09d8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55dd9eff09c0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55dd9eff0980 <col:23> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55dd9eff0a08 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55dd9eff09f0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55dd9eff09a0 <col:41> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55dd9eff0b48 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55dd9eff0af0 <col:3> '_Bool' lvalue Var 0x55dd9efeffe8 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55dd9eff0b30 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dd9eff0b10 <col:20> '_Bool' lvalue Var 0x55dd9efefdb0 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55dd9eff0bc0 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55dd9eff0b68 <col:3> '_Bool' lvalue Var 0x55dd9eff0060 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55dd9eff0ba8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dd9eff0b88 <col:20> '_Bool' lvalue Var 0x55dd9efefe28 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55dd9eff0c38 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55dd9eff0be0 <col:3> '_Bool' lvalue Var 0x55dd9eff00d8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55dd9eff0c20 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dd9eff0c00 <col:20> '_Bool' lvalue Var 0x55dd9efefea0 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55dd9eff0cb0 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55dd9eff0c58 <col:3> '_Bool' lvalue Var 0x55dd9eff0150 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55dd9eff0c98 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dd9eff0c78 <col:20> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55dd9eff0d48 <line:715:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55dd9eff0cd0 <col:3> '_Bool' lvalue Var 0x55dd9efefe28 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x55dd9eff0d20 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55dd9eff0cf0 <col:27> 'int' 1
|   |-CallExpr 0x55dd9eff0da0 <line:716:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55dd9eff0d88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd9eff0d68 <col:3> 'void ()' Function 0x55dd9ef96410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55dd9eff0df8 <line:717:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55dd9eff0de0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd9eff0dc0 <col:3> 'void ()' Function 0x55dd9ef96350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55dd9eff0e58 <line:718:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55dd9eff0e18 <col:3> 'int' lvalue Var 0x55dd9efef9e0 'x' 'int'
|   | `-IntegerLiteral 0x55dd9eff0e38 <col:7> 'int' 1
|   |-CallExpr 0x55dd9eff0eb0 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55dd9eff0e98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd9eff0e78 <col:3> 'void ()' Function 0x55dd9ef96410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55dd9eff0f08 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55dd9eff0ef0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd9eff0ed0 <col:3> 'void ()' Function 0x55dd9ef96350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55dd9eff1208 <line:721:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55dd9eff0f28 <col:3> 'int' lvalue Var 0x55dd9efefc20 'z' 'int'
|   | `-ConditionalOperator 0x55dd9eff11d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55dd9eff1000 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55dd9eff0fb8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55dd9eff0fa0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55dd9eff0f48 <col:7> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55dd9eff0fe8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55dd9eff0fd0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55dd9eff0f80 <col:25> '_Bool' lvalue Var 0x55dd9efefe28 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55dd9eff11c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dd9eff1020 <col:42> 'int' lvalue Var 0x55dd9eff02c8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55dd9eff11a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55dd9eff1170 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55dd9eff10e0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55dd9eff1098 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55dd9eff1080 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55dd9eff1040 <col:55> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55dd9eff10c8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55dd9eff10b0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55dd9eff1060 <col:73> '_Bool' lvalue Var 0x55dd9eff0060 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55dd9eff1140 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55dd9eff1100 <col:90> 'int' lvalue Var 0x55dd9eff03c0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55dd9eff1158 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dd9eff1120 <col:102> 'int' lvalue Var 0x55dd9efefc20 'z' 'int'
|   |-BinaryOperator 0x55dd9eff1410 <line:722:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55dd9eff1228 <col:3> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55dd9eff13f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dd9eff13c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55dd9eff12e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55dd9eff12a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55dd9eff1288 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55dd9eff1248 <col:20> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55dd9eff12d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55dd9eff12b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55dd9eff1268 <col:38> '_Bool' lvalue Var 0x55dd9efefe28 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55dd9eff1380 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55dd9eff1338 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55dd9eff1308 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55dd9eff13b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55dd9eff1398 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dd9eff1360 <col:66> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55dd9eff16f8 <line:723:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55dd9eff1430 <col:3> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55dd9eff16e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dd9eff16b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55dd9eff15d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55dd9eff14f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55dd9eff14a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55dd9eff1490 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55dd9eff1450 <col:20> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55dd9eff14d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55dd9eff14c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55dd9eff1470 <col:38> '_Bool' lvalue Var 0x55dd9efefe28 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55dd9eff15b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55dd9eff1568 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55dd9eff1550 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55dd9eff1510 <col:56> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55dd9eff1598 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55dd9eff1580 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55dd9eff1530 <col:74> '_Bool' lvalue Var 0x55dd9eff0060 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55dd9eff1668 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55dd9eff1620 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55dd9eff15f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55dd9eff1698 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55dd9eff1680 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dd9eff1648 <col:102> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55dd9eff1900 <line:724:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55dd9eff1718 <col:3> '_Bool' lvalue Var 0x55dd9efefe28 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55dd9eff18e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dd9eff18b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55dd9eff17d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55dd9eff1790 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55dd9eff1778 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55dd9eff1738 <col:20> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55dd9eff17c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55dd9eff17a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55dd9eff1758 <col:38> '_Bool' lvalue Var 0x55dd9efefe28 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55dd9eff1870 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55dd9eff1828 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55dd9eff17f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55dd9eff18a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55dd9eff1888 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dd9eff1850 <col:66> '_Bool' lvalue Var 0x55dd9efefe28 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55dd9eff1be8 <line:725:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55dd9eff1920 <col:3> '_Bool' lvalue Var 0x55dd9eff0060 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55dd9eff1bd0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dd9eff1ba0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55dd9eff1ac0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55dd9eff19e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55dd9eff1998 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55dd9eff1980 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55dd9eff1940 <col:20> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55dd9eff19c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55dd9eff19b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55dd9eff1960 <col:38> '_Bool' lvalue Var 0x55dd9efefe28 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55dd9eff1aa0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55dd9eff1a58 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55dd9eff1a40 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55dd9eff1a00 <col:56> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55dd9eff1a88 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55dd9eff1a70 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55dd9eff1a20 <col:74> '_Bool' lvalue Var 0x55dd9eff0060 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55dd9eff1b58 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55dd9eff1b10 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55dd9eff1ae0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55dd9eff1b88 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55dd9eff1b70 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dd9eff1b38 <col:102> '_Bool' lvalue Var 0x55dd9eff0060 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55dd9eff1c40 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55dd9eff1c28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd9eff1c08 <col:3> 'void ()' Function 0x55dd9ef96410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55dd9eff1c98 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55dd9eff1c80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd9eff1c60 <col:3> 'void ()' Function 0x55dd9ef96350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55dd9eff1d50 <line:728:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55dd9eff1cb8 <col:3> 'int' lvalue Var 0x55dd9efef590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55dd9eff1d30 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55dd9eff1d18 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dd9eff1cd8 <col:22> 'int' lvalue Var 0x55dd9efef590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55dd9eff1cf8 <col:41> 'int' 1
|   |-CallExpr 0x55dd9eff1da8 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55dd9eff1d90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd9eff1d70 <col:3> 'void ()' Function 0x55dd9ef96410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55dd9eff1e58 <line:730:3, col:36>
|     `-CallExpr 0x55dd9eff1e38 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55dd9eff1e20 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55dd9eff1dc8 <col:10> 'void *(void)' Function 0x55dd9ef95e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55dd9eff2028 prev 0x55dd9efef0b8 <line:732:1, line:751:1> line:732:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55dd9eff1f90 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55dd9eff3248 <line:733:1, line:751:1>
|   |-CallExpr 0x55dd9eff2108 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55dd9eff20f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd9eff20d0 <col:3> 'void ()' Function 0x55dd9ef96350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55dd9eff2168 <line:735:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55dd9eff2128 <col:3> 'int' lvalue Var 0x55dd9efef9e0 'x' 'int'
|   | `-IntegerLiteral 0x55dd9eff2148 <col:7> 'int' 2
|   |-CallExpr 0x55dd9eff21c0 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55dd9eff21a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd9eff2188 <col:3> 'void ()' Function 0x55dd9ef96410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55dd9eff2218 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55dd9eff2200 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd9eff21e0 <col:3> 'void ()' Function 0x55dd9ef96350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55dd9eff2278 <line:738:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55dd9eff2238 <col:3> 'int' lvalue Var 0x55dd9efefb00 'y' 'int'
|   | `-IntegerLiteral 0x55dd9eff2258 <col:7> 'int' 1
|   |-CallExpr 0x55dd9eff22d0 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55dd9eff22b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd9eff2298 <col:3> 'void ()' Function 0x55dd9ef96410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55dd9eff2328 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55dd9eff2310 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd9eff22f0 <col:3> 'void ()' Function 0x55dd9ef96350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55dd9eff2610 <line:741:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55dd9eff2348 <col:3> 'int' lvalue Var 0x55dd9efefc20 'z' 'int'
|   | `-ConditionalOperator 0x55dd9eff25e0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55dd9eff2408 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55dd9eff23c0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55dd9eff23a8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55dd9eff2368 <col:7> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55dd9eff23f0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55dd9eff23d8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55dd9eff2388 <col:25> '_Bool' lvalue Var 0x55dd9efefea0 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55dd9eff25c8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dd9eff2428 <col:42> 'int' lvalue Var 0x55dd9eff02c8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55dd9eff25a8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55dd9eff2578 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55dd9eff24e8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55dd9eff24a0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55dd9eff2488 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55dd9eff2448 <col:55> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55dd9eff24d0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55dd9eff24b8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55dd9eff2468 <col:73> '_Bool' lvalue Var 0x55dd9eff00d8 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55dd9eff2548 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55dd9eff2508 <col:90> 'int' lvalue Var 0x55dd9eff03c0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55dd9eff2560 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dd9eff2528 <col:102> 'int' lvalue Var 0x55dd9efefc20 'z' 'int'
|   |-BinaryOperator 0x55dd9eff2818 <line:742:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55dd9eff2630 <col:3> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55dd9eff2800 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dd9eff27d0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55dd9eff26f0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55dd9eff26a8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55dd9eff2690 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55dd9eff2650 <col:20> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55dd9eff26d8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55dd9eff26c0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55dd9eff2670 <col:38> '_Bool' lvalue Var 0x55dd9efefea0 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55dd9eff2788 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55dd9eff2740 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55dd9eff2710 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55dd9eff27b8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55dd9eff27a0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dd9eff2768 <col:66> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55dd9eff2b00 <line:743:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55dd9eff2838 <col:3> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55dd9eff2ae8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dd9eff2ab8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55dd9eff29d8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55dd9eff28f8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55dd9eff28b0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55dd9eff2898 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55dd9eff2858 <col:20> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55dd9eff28e0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55dd9eff28c8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55dd9eff2878 <col:38> '_Bool' lvalue Var 0x55dd9efefea0 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55dd9eff29b8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55dd9eff2970 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55dd9eff2958 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55dd9eff2918 <col:56> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55dd9eff29a0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55dd9eff2988 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55dd9eff2938 <col:74> '_Bool' lvalue Var 0x55dd9eff00d8 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55dd9eff2a70 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55dd9eff2a28 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55dd9eff29f8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55dd9eff2aa0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55dd9eff2a88 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dd9eff2a50 <col:102> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55dd9eff2d08 <line:744:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55dd9eff2b20 <col:3> '_Bool' lvalue Var 0x55dd9efefea0 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55dd9eff2cf0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dd9eff2cc0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55dd9eff2be0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55dd9eff2b98 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55dd9eff2b80 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55dd9eff2b40 <col:20> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55dd9eff2bc8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55dd9eff2bb0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55dd9eff2b60 <col:38> '_Bool' lvalue Var 0x55dd9efefea0 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55dd9eff2c78 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55dd9eff2c30 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55dd9eff2c00 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55dd9eff2ca8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55dd9eff2c90 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dd9eff2c58 <col:66> '_Bool' lvalue Var 0x55dd9efefea0 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55dd9eff3000 <line:745:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55dd9eff2d28 <col:3> '_Bool' lvalue Var 0x55dd9eff00d8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55dd9eff2fe8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dd9eff2fb8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55dd9eff2ec8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55dd9eff2de8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55dd9eff2da0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55dd9eff2d88 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55dd9eff2d48 <col:20> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55dd9eff2dd0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55dd9eff2db8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55dd9eff2d68 <col:38> '_Bool' lvalue Var 0x55dd9efefea0 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55dd9eff2ea8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55dd9eff2e60 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55dd9eff2e48 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55dd9eff2e08 <col:56> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55dd9eff2e90 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55dd9eff2e78 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55dd9eff2e28 <col:74> '_Bool' lvalue Var 0x55dd9eff00d8 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55dd9eff2f60 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55dd9eff2f18 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55dd9eff2ee8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55dd9eff2fa0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55dd9eff2f78 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dd9eff2f40 <col:102> '_Bool' lvalue Var 0x55dd9eff00d8 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55dd9eff3058 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55dd9eff3040 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd9eff3020 <col:3> 'void ()' Function 0x55dd9ef96410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55dd9eff30b0 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55dd9eff3098 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd9eff3078 <col:3> 'void ()' Function 0x55dd9ef96350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55dd9eff3168 <line:748:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55dd9eff30d0 <col:3> 'int' lvalue Var 0x55dd9efef590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55dd9eff3148 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55dd9eff3130 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dd9eff30f0 <col:22> 'int' lvalue Var 0x55dd9efef590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55dd9eff3110 <col:41> 'int' 1
|   |-CallExpr 0x55dd9eff31c0 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55dd9eff31a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd9eff3188 <col:3> 'void ()' Function 0x55dd9ef96410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55dd9eff3238 <line:750:3, col:36>
|     `-CallExpr 0x55dd9eff3218 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55dd9eff3200 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55dd9eff31e0 <col:10> 'void *(void)' Function 0x55dd9ef95e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55dd9eff3390 prev 0x55dd9efef210 <line:752:1, line:784:1> line:752:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55dd9eff32f8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55dd9eff6fe0 <line:753:1, line:784:1>
|   |-CallExpr 0x55dd9eff3470 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55dd9eff3458 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd9eff3438 <col:3> 'void ()' Function 0x55dd9ef96350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55dd9eff34e8 <line:755:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55dd9eff3490 <col:3> 'int' lvalue Var 0x55dd9efef6b0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55dd9eff34d0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dd9eff34b0 <col:25> 'int' lvalue Var 0x55dd9efefb00 'y' 'int'
|   |-CallExpr 0x55dd9eff3540 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55dd9eff3528 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd9eff3508 <col:3> 'void ()' Function 0x55dd9ef96410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55dd9eff3598 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55dd9eff3580 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd9eff3560 <col:3> 'void ()' Function 0x55dd9ef96350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55dd9eff3648 <line:758:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55dd9eff35b8 <col:3> '_Bool' lvalue Var 0x55dd9eff04b0 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55dd9eff3630 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55dd9eff3610 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55dd9eff35f8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55dd9eff35d8 <col:19> 'void *(void)' Function 0x55dd9ef95e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55dd9eff36f8 <line:759:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55dd9eff3668 <col:3> '_Bool' lvalue Var 0x55dd9eff0528 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55dd9eff36e0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55dd9eff36c0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55dd9eff36a8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55dd9eff3688 <col:19> 'void *(void)' Function 0x55dd9ef95e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55dd9eff3770 <line:760:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55dd9eff3718 <col:3> '_Bool' lvalue Var 0x55dd9efefcb8 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55dd9eff3758 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dd9eff3738 <col:21> '_Bool' lvalue Var 0x55dd9eff0528 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55dd9eff37e8 <line:761:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55dd9eff3790 <col:3> 'int' lvalue Var 0x55dd9efefd38 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55dd9eff37d0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dd9eff37b0 <col:15> 'int' lvalue Var 0x55dd9efefc20 'z' 'int'
|   |-BinaryOperator 0x55dd9eff3c20 <line:762:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55dd9eff3808 <col:3> 'int' lvalue Var 0x55dd9efefc20 'z' 'int'
|   | `-ConditionalOperator 0x55dd9eff3bf0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55dd9eff3a18 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55dd9eff3938 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55dd9eff3860 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55dd9eff3848 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55dd9eff3828 <col:8> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55dd9eff3918 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55dd9eff38b0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55dd9eff3898 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55dd9eff3878 <col:27> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x55dd9eff3900 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55dd9eff38e8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55dd9eff38c8 <col:46> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55dd9eff39f8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55dd9eff3990 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55dd9eff3978 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55dd9eff3958 <col:65> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x55dd9eff39e0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55dd9eff39c8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55dd9eff39a8 <col:84> '_Bool' lvalue Var 0x55dd9eff0150 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55dd9eff3bd8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dd9eff3a38 <col:101> 'int' lvalue Var 0x55dd9efefc20 'z' 'int'
|   |   `-ParenExpr 0x55dd9eff3bb8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55dd9eff3b88 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55dd9eff3af8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55dd9eff3ab0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55dd9eff3a98 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55dd9eff3a58 <col:106> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55dd9eff3ae0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55dd9eff3ac8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55dd9eff3a78 <col:124> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55dd9eff3b58 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55dd9eff3b18 <col:141> 'int' lvalue Var 0x55dd9eff02c8 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55dd9eff3b70 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dd9eff3b38 <col:153> 'int' lvalue Var 0x55dd9eff03c0 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55dd9eff4150 <line:763:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55dd9eff3c40 <col:3> 'int' lvalue Var 0x55dd9eff02c8 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x55dd9eff4120 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55dd9eff40f0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55dd9eff40d8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55dd9eff3c60 <col:15> '_Bool' lvalue Var 0x55dd9eff0528 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55dd9eff4108 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dd9eff3c80 <col:31> 'int' lvalue Var 0x55dd9eff02c8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55dd9eff40b8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55dd9eff4088 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55dd9eff3e90 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55dd9eff3db0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55dd9eff3cd8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55dd9eff3cc0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55dd9eff3ca0 <col:45> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55dd9eff3d90 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55dd9eff3d28 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55dd9eff3d10 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55dd9eff3cf0 <col:64> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55dd9eff3d78 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55dd9eff3d60 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55dd9eff3d40 <col:83> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55dd9eff3e70 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55dd9eff3e08 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55dd9eff3df0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55dd9eff3dd0 <col:102> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55dd9eff3e58 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55dd9eff3e40 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55dd9eff3e20 <col:121> '_Bool' lvalue Var 0x55dd9eff0150 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55dd9eff4070 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55dd9eff3eb0 <col:138> 'int' lvalue Var 0x55dd9eff02c8 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x55dd9eff4050 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55dd9eff4020 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55dd9eff3f70 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55dd9eff3f28 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55dd9eff3f10 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55dd9eff3ed0 <col:151> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55dd9eff3f58 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55dd9eff3f40 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55dd9eff3ef0 <col:169> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55dd9eff3ff0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55dd9eff3fb0 <col:186> 'int' lvalue Var 0x55dd9eff02c8 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55dd9eff4008 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55dd9eff3fd0 <col:198> 'int' lvalue Var 0x55dd9eff02c8 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55dd9eff4660 <line:764:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55dd9eff4170 <col:3> 'int' lvalue Var 0x55dd9eff03c0 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x55dd9eff4630 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55dd9eff4600 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55dd9eff45e8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55dd9eff4190 <col:15> '_Bool' lvalue Var 0x55dd9eff0528 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55dd9eff4618 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dd9eff41b0 <col:31> 'int' lvalue Var 0x55dd9eff03c0 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x55dd9eff45c8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55dd9eff4598 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55dd9eff43c0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55dd9eff42e0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55dd9eff4208 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55dd9eff41f0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55dd9eff41d0 <col:45> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55dd9eff42c0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55dd9eff4258 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55dd9eff4240 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55dd9eff4220 <col:64> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55dd9eff42a8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55dd9eff4290 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55dd9eff4270 <col:83> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55dd9eff43a0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55dd9eff4338 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55dd9eff4320 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55dd9eff4300 <col:102> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55dd9eff4388 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55dd9eff4370 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55dd9eff4350 <col:121> '_Bool' lvalue Var 0x55dd9eff0150 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55dd9eff4580 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55dd9eff43e0 <col:138> 'int' lvalue Var 0x55dd9eff03c0 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x55dd9eff4560 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55dd9eff4530 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55dd9eff44a0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55dd9eff4458 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55dd9eff4440 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55dd9eff4400 <col:151> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55dd9eff4488 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55dd9eff4470 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55dd9eff4420 <col:169> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55dd9eff4500 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55dd9eff44c0 <col:186> 'int' lvalue Var 0x55dd9eff03c0 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55dd9eff4518 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55dd9eff44e0 <col:198> 'int' lvalue Var 0x55dd9eff03c0 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55dd9eff4c08 <line:765:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55dd9eff4680 <col:3> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55dd9eff4bf0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dd9eff4bc0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55dd9eff4b78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55dd9eff4b60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55dd9eff46a0 <col:20> '_Bool' lvalue Var 0x55dd9eff0528 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55dd9eff4ba8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55dd9eff4b90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55dd9eff46c0 <col:36> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55dd9eff4b40 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55dd9eff4b10 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55dd9eff48d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55dd9eff47f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55dd9eff4718 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55dd9eff4700 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55dd9eff46e0 <col:55> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55dd9eff47d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55dd9eff4768 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55dd9eff4750 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55dd9eff4730 <col:74> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55dd9eff47b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55dd9eff47a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55dd9eff4780 <col:93> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55dd9eff48b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55dd9eff4848 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55dd9eff4830 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55dd9eff4810 <col:112> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55dd9eff4898 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55dd9eff4880 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55dd9eff4860 <col:131> '_Bool' lvalue Var 0x55dd9eff0150 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55dd9eff4af8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55dd9eff4ae0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55dd9eff48f0 <col:148> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55dd9eff4ac0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55dd9eff4a90 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55dd9eff49b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55dd9eff4968 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55dd9eff4950 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55dd9eff4910 <col:166> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55dd9eff4998 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55dd9eff4980 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55dd9eff4930 <col:184> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55dd9eff4a48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55dd9eff4a00 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55dd9eff49d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55dd9eff4a78 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55dd9eff4a60 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55dd9eff4a28 <col:212> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55dd9eff51e8 <line:766:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55dd9eff4c28 <col:3> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55dd9eff51d0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dd9eff51a0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55dd9eff5158 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55dd9eff5140 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55dd9eff4c48 <col:20> '_Bool' lvalue Var 0x55dd9eff0528 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55dd9eff5188 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55dd9eff5170 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55dd9eff4c68 <col:36> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55dd9eff5120 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55dd9eff50f0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55dd9eff4e78 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55dd9eff4d98 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55dd9eff4cc0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55dd9eff4ca8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55dd9eff4c88 <col:55> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55dd9eff4d78 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55dd9eff4d10 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55dd9eff4cf8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55dd9eff4cd8 <col:74> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55dd9eff4d60 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55dd9eff4d48 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55dd9eff4d28 <col:93> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55dd9eff4e58 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55dd9eff4df0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55dd9eff4dd8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55dd9eff4db8 <col:112> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55dd9eff4e40 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55dd9eff4e28 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55dd9eff4e08 <col:131> '_Bool' lvalue Var 0x55dd9eff0150 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55dd9eff50d8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55dd9eff50c0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55dd9eff4e98 <col:148> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55dd9eff50a0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55dd9eff5070 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55dd9eff4f58 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55dd9eff4f10 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55dd9eff4ef8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55dd9eff4eb8 <col:166> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55dd9eff4f40 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55dd9eff4f28 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55dd9eff4ed8 <col:184> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55dd9eff5040 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55dd9eff4fc0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55dd9eff4f78 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55dd9eff5058 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55dd9eff5018 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55dd9eff4fe8 <col:219> 'int' 0
|   |-BinaryOperator 0x55dd9eff5790 <line:767:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55dd9eff5208 <col:3> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55dd9eff5778 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dd9eff5748 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55dd9eff5700 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55dd9eff56e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55dd9eff5228 <col:20> '_Bool' lvalue Var 0x55dd9eff0528 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55dd9eff5730 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55dd9eff5718 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55dd9eff5248 <col:36> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x55dd9eff56c8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55dd9eff5698 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55dd9eff5458 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55dd9eff5378 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55dd9eff52a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55dd9eff5288 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55dd9eff5268 <col:55> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55dd9eff5358 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55dd9eff52f0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55dd9eff52d8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55dd9eff52b8 <col:74> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55dd9eff5340 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55dd9eff5328 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55dd9eff5308 <col:93> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55dd9eff5438 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55dd9eff53d0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55dd9eff53b8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55dd9eff5398 <col:112> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55dd9eff5420 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55dd9eff5408 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55dd9eff53e8 <col:131> '_Bool' lvalue Var 0x55dd9eff0150 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55dd9eff5680 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55dd9eff5668 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55dd9eff5478 <col:148> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x55dd9eff5648 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55dd9eff5618 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55dd9eff5538 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55dd9eff54f0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55dd9eff54d8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55dd9eff5498 <col:166> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55dd9eff5520 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55dd9eff5508 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55dd9eff54b8 <col:184> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55dd9eff55d0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55dd9eff5588 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55dd9eff5558 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55dd9eff5600 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55dd9eff55e8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55dd9eff55b0 <col:212> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55dd9eff5d58 <line:768:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55dd9eff57b0 <col:3> '_Bool' lvalue Var 0x55dd9eff0150 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55dd9eff5d40 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dd9eff5d10 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55dd9eff5cc8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55dd9eff5cb0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55dd9eff57d0 <col:20> '_Bool' lvalue Var 0x55dd9eff0528 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55dd9eff5cf8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55dd9eff5ce0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55dd9eff57f0 <col:36> '_Bool' lvalue Var 0x55dd9eff0150 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x55dd9eff5c90 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55dd9eff5c60 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55dd9eff5a00 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55dd9eff5920 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55dd9eff5848 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55dd9eff5830 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55dd9eff5810 <col:55> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55dd9eff5900 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55dd9eff5898 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55dd9eff5880 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55dd9eff5860 <col:74> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55dd9eff58e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55dd9eff58d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55dd9eff58b0 <col:93> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55dd9eff59e0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55dd9eff5978 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55dd9eff5960 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55dd9eff5940 <col:112> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55dd9eff59c8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55dd9eff59b0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55dd9eff5990 <col:131> '_Bool' lvalue Var 0x55dd9eff0150 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55dd9eff5c48 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55dd9eff5c30 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55dd9eff5a20 <col:148> '_Bool' lvalue Var 0x55dd9eff0150 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x55dd9eff5c10 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55dd9eff5be0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55dd9eff5ae0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55dd9eff5a98 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55dd9eff5a80 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55dd9eff5a40 <col:166> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55dd9eff5ac8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55dd9eff5ab0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55dd9eff5a60 <col:184> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55dd9eff5bb0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55dd9eff5b30 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55dd9eff5b00 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55dd9eff5bc8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55dd9eff5b88 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55dd9eff5b58 <col:219> 'int' 0
|   |-BinaryOperator 0x55dd9eff5dd0 <line:769:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55dd9eff5d78 <col:3> 'int' lvalue Var 0x55dd9efef7d0 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x55dd9eff5db8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dd9eff5d98 <col:25> 'int' lvalue Var 0x55dd9efefc20 'z' 'int'
|   |-BinaryOperator 0x55dd9eff5f00 <line:770:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55dd9eff5df0 <col:3> 'int' lvalue Var 0x55dd9efefc20 'z' 'int'
|   | `-ConditionalOperator 0x55dd9eff5ed0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55dd9eff5e88 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55dd9eff5e70 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55dd9eff5e10 <col:7> '_Bool' lvalue Var 0x55dd9efefcb8 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55dd9eff5ea0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dd9eff5e30 <col:25> 'int' lvalue Var 0x55dd9efefd38 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55dd9eff5eb8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55dd9eff5e50 <col:37> 'int' lvalue Var 0x55dd9efefc20 'z' 'int'
|   |-BinaryOperator 0x55dd9eff5f98 <line:771:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55dd9eff5f20 <col:3> '_Bool' lvalue Var 0x55dd9efefcb8 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55dd9eff5f70 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55dd9eff5f40 <col:28> 'int' 0
|   |-CallExpr 0x55dd9eff6008 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55dd9eff5ff0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd9eff5fd0 <col:3> 'void ()' Function 0x55dd9ef96410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55dd9eff6060 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55dd9eff6048 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd9eff6028 <col:3> 'void ()' Function 0x55dd9ef96350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55dd9eff6348 <line:774:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55dd9eff6080 <col:3> 'int' lvalue Var 0x55dd9efefc20 'z' 'int'
|   | `-ConditionalOperator 0x55dd9eff6318 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55dd9eff6140 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55dd9eff60f8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55dd9eff60e0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55dd9eff60a0 <col:7> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55dd9eff6128 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55dd9eff6110 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55dd9eff60c0 <col:25> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55dd9eff6300 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dd9eff6160 <col:42> 'int' lvalue Var 0x55dd9eff02c8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55dd9eff62e0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55dd9eff62b0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55dd9eff6220 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55dd9eff61d8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55dd9eff61c0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55dd9eff6180 <col:55> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55dd9eff6208 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55dd9eff61f0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55dd9eff61a0 <col:73> '_Bool' lvalue Var 0x55dd9eff0150 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55dd9eff6280 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55dd9eff6240 <col:90> 'int' lvalue Var 0x55dd9eff03c0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55dd9eff6298 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dd9eff6260 <col:102> 'int' lvalue Var 0x55dd9efefc20 'z' 'int'
|   |-BinaryOperator 0x55dd9eff6550 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55dd9eff6368 <col:3> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55dd9eff6538 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dd9eff6508 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55dd9eff6428 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55dd9eff63e0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55dd9eff63c8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55dd9eff6388 <col:20> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55dd9eff6410 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55dd9eff63f8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55dd9eff63a8 <col:38> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55dd9eff64c0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55dd9eff6478 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55dd9eff6448 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55dd9eff64f0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55dd9eff64d8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dd9eff64a0 <col:66> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55dd9eff6838 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55dd9eff6570 <col:3> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55dd9eff6820 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dd9eff67f0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55dd9eff6710 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55dd9eff6630 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55dd9eff65e8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55dd9eff65d0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55dd9eff6590 <col:20> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55dd9eff6618 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55dd9eff6600 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55dd9eff65b0 <col:38> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55dd9eff66f0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55dd9eff66a8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55dd9eff6690 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55dd9eff6650 <col:56> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55dd9eff66d8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55dd9eff66c0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55dd9eff6670 <col:74> '_Bool' lvalue Var 0x55dd9eff0150 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55dd9eff67a8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55dd9eff6760 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55dd9eff6730 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55dd9eff67d8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55dd9eff67c0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dd9eff6788 <col:102> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55dd9eff6a40 <line:777:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55dd9eff6858 <col:3> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55dd9eff6a28 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dd9eff69f8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55dd9eff6918 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55dd9eff68d0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55dd9eff68b8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55dd9eff6878 <col:20> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55dd9eff6900 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55dd9eff68e8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55dd9eff6898 <col:38> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55dd9eff69b0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55dd9eff6968 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55dd9eff6938 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55dd9eff69e0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55dd9eff69c8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dd9eff6990 <col:66> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55dd9eff6d28 <line:778:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55dd9eff6a60 <col:3> '_Bool' lvalue Var 0x55dd9eff0150 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55dd9eff6d10 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55dd9eff6ce0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55dd9eff6c00 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55dd9eff6b20 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55dd9eff6ad8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55dd9eff6ac0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55dd9eff6a80 <col:20> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55dd9eff6b08 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55dd9eff6af0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55dd9eff6aa0 <col:38> '_Bool' lvalue Var 0x55dd9efeff70 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55dd9eff6be0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55dd9eff6b98 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55dd9eff6b80 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55dd9eff6b40 <col:56> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55dd9eff6bc8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55dd9eff6bb0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55dd9eff6b60 <col:74> '_Bool' lvalue Var 0x55dd9eff0150 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55dd9eff6c98 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55dd9eff6c50 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55dd9eff6c20 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55dd9eff6cc8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55dd9eff6cb0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55dd9eff6c78 <col:102> '_Bool' lvalue Var 0x55dd9eff0150 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55dd9eff6d80 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55dd9eff6d68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd9eff6d48 <col:3> 'void ()' Function 0x55dd9ef96410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55dd9eff6dd8 <line:780:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55dd9eff6dc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd9eff6da0 <col:3> 'void ()' Function 0x55dd9ef96350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55dd9eff6e90 <line:781:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55dd9eff6df8 <col:3> 'int' lvalue Var 0x55dd9efef590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55dd9eff6e70 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55dd9eff6e58 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dd9eff6e18 <col:22> 'int' lvalue Var 0x55dd9efef590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55dd9eff6e38 <col:41> 'int' 1
|   |-CallExpr 0x55dd9eff6ee8 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55dd9eff6ed0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd9eff6eb0 <col:3> 'void ()' Function 0x55dd9ef96410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55dd9eff6f60 <line:783:3, col:36>
|     `-CallExpr 0x55dd9eff6f40 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55dd9eff6f28 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55dd9eff6f08 <col:10> 'void *(void)' Function 0x55dd9ef95e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55dd9eff7100 prev 0x55dd9efef2d8 <line:785:1, line:787:1> line:785:6 fence 'void ()'
| `-CompoundStmt 0x55dd9eff71a0 <line:786:1, line:787:1>
|-FunctionDecl 0x55dd9eff71d0 prev 0x55dd9efef398 <line:788:1, line:790:1> line:788:6 isync 'void ()'
| `-CompoundStmt 0x55dd9eff7270 <line:789:1, line:790:1>
|-FunctionDecl 0x55dd9eff72a0 prev 0x55dd9efef458 <line:791:1, line:793:1> line:791:6 lwfence 'void ()'
| `-CompoundStmt 0x55dd9eff7340 <line:792:1, line:793:1>
`-FunctionDecl 0x55dd9eff73a8 <line:794:1, line:818:1> line:794:5 main 'int ()'
  `-CompoundStmt 0x55dd9eff9000 <line:795:1, line:818:1>
    |-DeclStmt 0x55dd9eff74c0 <line:796:3, col:18>
    | `-VarDecl 0x55dd9eff7458 <col:3, col:13> col:13 used t2298 'pthread_t':'unsigned long'
    |-CallExpr 0x55dd9eff76c8 <line:797:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55dd9eff76b0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55dd9eff74d8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55dd9efd68f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55dd9eff7518 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55dd9eff74f8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55dd9eff7458 't2298' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55dd9eff7708 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55dd9eff7590 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55dd9eff7568 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55dd9eff7530 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55dd9eff7720 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55dd9eff75b0 <col:39> 'void *(void *)' Function 0x55dd9eff0640 'P0' 'void *(void *)'
    | `-ParenExpr 0x55dd9eff7630 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55dd9eff7608 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55dd9eff75d0 <col:52> 'int' 0
    |-DeclStmt 0x55dd9eff77b0 <line:798:3, col:18>
    | `-VarDecl 0x55dd9eff7748 <col:3, col:13> col:13 used t2299 'pthread_t':'unsigned long'
    |-CallExpr 0x55dd9eff7958 <line:799:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55dd9eff7940 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55dd9eff77c8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55dd9efd68f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55dd9eff7808 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55dd9eff77e8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55dd9eff7748 't2299' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55dd9eff7998 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55dd9eff7880 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55dd9eff7858 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55dd9eff7820 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55dd9eff79b0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55dd9eff78a0 <col:39> 'void *(void *)' Function 0x55dd9eff2028 'P1' 'void *(void *)'
    | `-ParenExpr 0x55dd9eff7920 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55dd9eff78f8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55dd9eff78c0 <col:52> 'int' 0
    |-DeclStmt 0x55dd9eff7a40 <line:800:3, col:18>
    | `-VarDecl 0x55dd9eff79d8 <col:3, col:13> col:13 used t2300 'pthread_t':'unsigned long'
    |-CallExpr 0x55dd9eff7be8 <line:801:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55dd9eff7bd0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55dd9eff7a58 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55dd9efd68f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55dd9eff7a98 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55dd9eff7a78 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55dd9eff79d8 't2300' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55dd9eff7c28 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55dd9eff7b10 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55dd9eff7ae8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55dd9eff7ab0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55dd9eff7c40 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55dd9eff7b30 <col:39> 'void *(void *)' Function 0x55dd9eff3390 'P2' 'void *(void *)'
    | `-ParenExpr 0x55dd9eff7bb0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55dd9eff7b88 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55dd9eff7b50 <col:52> 'int' 0
    |-CallExpr 0x55dd9eff7c90 <line:802:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55dd9eff7c78 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55dd9eff7c58 <col:3> 'void ()' Function 0x55dd9ef96350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55dd9eff7d60 <line:803:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55dd9eff7cb0 <col:3> '_Bool' lvalue Var 0x55dd9efef868 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55dd9eff7d48 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55dd9eff7d28 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55dd9eff7d10 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55dd9eff7cd0 <col:21> 'int' lvalue Var 0x55dd9efef590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55dd9eff7cf0 <col:41> 'int' 3
    |-CallExpr 0x55dd9eff7db8 <line:804:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55dd9eff7da0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55dd9eff7d80 <col:3> 'void ()' Function 0x55dd9ef96410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55dd9eff7e30 <line:805:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55dd9eff7e18 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55dd9eff7dd8 <col:3> 'void (int)' Function 0x55dd9ef95ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55dd9eff7e70 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55dd9eff7e58 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55dd9eff7df8 <col:21> '_Bool' lvalue Var 0x55dd9efef868 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55dd9eff7ec0 <line:806:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55dd9eff7ea8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55dd9eff7e88 <col:3> 'void ()' Function 0x55dd9ef96350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55dd9eff81b8 <line:807:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55dd9eff7ee0 <col:3> 'int' lvalue Var 0x55dd9efefc20 'z' 'int'
    | `-ConditionalOperator 0x55dd9eff8188 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55dd9eff7fa0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55dd9eff7f58 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55dd9eff7f40 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55dd9eff7f00 <col:7> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55dd9eff7f88 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55dd9eff7f70 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55dd9eff7f20 <col:25> '_Bool' lvalue Var 0x55dd9efefdb0 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55dd9eff8170 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55dd9eff7fc0 <col:42> 'int' lvalue Var 0x55dd9eff02c8 'z$w_buff0' 'int'
    |   `-ParenExpr 0x55dd9eff8150 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55dd9eff8120 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55dd9eff8090 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55dd9eff8048 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55dd9eff8030 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55dd9eff7ff0 <col:55> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55dd9eff8078 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55dd9eff8060 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55dd9eff8010 <col:73> '_Bool' lvalue Var 0x55dd9efeffe8 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55dd9eff80f0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55dd9eff80b0 <col:90> 'int' lvalue Var 0x55dd9eff03c0 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55dd9eff8108 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55dd9eff80d0 <col:102> 'int' lvalue Var 0x55dd9efefc20 'z' 'int'
    |-BinaryOperator 0x55dd9eff83c0 <line:808:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55dd9eff81d8 <col:3> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55dd9eff83a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55dd9eff8378 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55dd9eff8298 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55dd9eff8250 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55dd9eff8238 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55dd9eff81f8 <col:20> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55dd9eff8280 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55dd9eff8268 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55dd9eff8218 <col:38> '_Bool' lvalue Var 0x55dd9efefdb0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55dd9eff8330 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55dd9eff82e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55dd9eff82b8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55dd9eff8360 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55dd9eff8348 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55dd9eff8310 <col:66> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55dd9eff86a8 <line:809:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55dd9eff83e0 <col:3> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55dd9eff8690 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55dd9eff8660 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55dd9eff8580 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55dd9eff84a0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55dd9eff8458 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55dd9eff8440 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55dd9eff8400 <col:20> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55dd9eff8488 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55dd9eff8470 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55dd9eff8420 <col:38> '_Bool' lvalue Var 0x55dd9efefdb0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55dd9eff8560 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55dd9eff8518 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55dd9eff8500 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55dd9eff84c0 <col:56> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55dd9eff8548 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55dd9eff8530 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55dd9eff84e0 <col:74> '_Bool' lvalue Var 0x55dd9efeffe8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55dd9eff8618 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55dd9eff85d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55dd9eff85a0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55dd9eff8648 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55dd9eff8630 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55dd9eff85f8 <col:102> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55dd9eff88b0 <line:810:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55dd9eff86c8 <col:3> '_Bool' lvalue Var 0x55dd9efefdb0 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55dd9eff8898 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55dd9eff8868 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55dd9eff8788 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55dd9eff8740 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55dd9eff8728 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55dd9eff86e8 <col:20> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55dd9eff8770 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55dd9eff8758 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55dd9eff8708 <col:38> '_Bool' lvalue Var 0x55dd9efefdb0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55dd9eff8820 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55dd9eff87d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55dd9eff87a8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55dd9eff8850 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55dd9eff8838 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55dd9eff8800 <col:66> '_Bool' lvalue Var 0x55dd9efefdb0 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55dd9eff8b98 <line:811:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55dd9eff88d0 <col:3> '_Bool' lvalue Var 0x55dd9efeffe8 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55dd9eff8b80 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55dd9eff8b50 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55dd9eff8a70 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55dd9eff8990 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55dd9eff8948 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55dd9eff8930 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55dd9eff88f0 <col:20> '_Bool' lvalue Var 0x55dd9eff0340 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55dd9eff8978 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55dd9eff8960 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55dd9eff8910 <col:38> '_Bool' lvalue Var 0x55dd9efefdb0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55dd9eff8a50 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55dd9eff8a08 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55dd9eff89f0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55dd9eff89b0 <col:56> '_Bool' lvalue Var 0x55dd9eff0438 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55dd9eff8a38 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55dd9eff8a20 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55dd9eff89d0 <col:74> '_Bool' lvalue Var 0x55dd9efeffe8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55dd9eff8b08 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55dd9eff8ac0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55dd9eff8a90 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55dd9eff8b38 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55dd9eff8b20 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55dd9eff8ae8 <col:102> '_Bool' lvalue Var 0x55dd9efeffe8 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55dd9eff8bf0 <line:812:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55dd9eff8bd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55dd9eff8bb8 <col:3> 'void ()' Function 0x55dd9ef96410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55dd9eff8c48 <line:813:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55dd9eff8c30 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55dd9eff8c10 <col:3> 'void ()' Function 0x55dd9ef96350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55dd9eff8e80 <line:814:3, col:85> '_Bool' '='
    | |-DeclRefExpr 0x55dd9eff8c68 <col:3> '_Bool' lvalue Var 0x55dd9efef8e0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55dd9eff8e68 <col:21, col:85> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55dd9eff8e50 <col:21, col:85> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55dd9eff8e30 <col:22, col:85> 'int'
    |       `-BinaryOperator 0x55dd9eff8e10 <col:23, col:84> 'int' '&&'
    |         |-BinaryOperator 0x55dd9eff8d78 <col:23, col:56> 'int' '&&'
    |         | |-BinaryOperator 0x55dd9eff8ce0 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x55dd9eff8cc8 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x55dd9eff8c88 <col:23> 'int' lvalue Var 0x55dd9efef9e0 'x' 'int'
    |         | | `-IntegerLiteral 0x55dd9eff8ca8 <col:28> 'int' 2
    |         | `-BinaryOperator 0x55dd9eff8d58 <col:33, col:56> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55dd9eff8d40 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55dd9eff8d00 <col:33> 'int' lvalue Var 0x55dd9efef6b0 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x55dd9eff8d20 <col:56> 'int' 1
    |         `-BinaryOperator 0x55dd9eff8df0 <col:61, col:84> 'int' '=='
    |           |-ImplicitCastExpr 0x55dd9eff8dd8 <col:61> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55dd9eff8d98 <col:61> 'int' lvalue Var 0x55dd9efef7d0 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x55dd9eff8db8 <col:84> 'int' 0
    |-CallExpr 0x55dd9eff8ed8 <line:815:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55dd9eff8ec0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55dd9eff8ea0 <col:3> 'void ()' Function 0x55dd9ef96410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55dd9eff8f50 <line:816:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55dd9eff8f38 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55dd9eff8ef8 <col:3> 'void (int)' Function 0x55dd9ef960d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55dd9eff8f90 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55dd9eff8f78 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55dd9eff8f18 <col:21> '_Bool' lvalue Var 0x55dd9efef8e0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55dd9eff8fc8 <line:817:3, col:10>
      `-IntegerLiteral 0x55dd9eff8fa8 <col:10> 'int' 0
