TranslationUnitDecl 0x556591994f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x556591995848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x556591995520 '__int128'
|-TypedefDecl 0x5565919958b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x556591995540 'unsigned __int128'
|-TypedefDecl 0x556591995bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x556591995990 'struct __NSConstantString_tag'
|   `-Record 0x556591995910 '__NSConstantString_tag'
|-TypedefDecl 0x556591995c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x556591995c20 'char *'
|   `-BuiltinType 0x556591995020 'char'
|-TypedefDecl 0x5565919d4b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x556591995f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x556591995d40 'struct __va_list_tag'
|     `-Record 0x556591995cc0 '__va_list_tag'
|-FunctionDecl 0x5565919d4ca0 <pthread-wmm/mix038_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5565919d4bd0 <col:31> col:34 'int'
|-FunctionDecl 0x5565919d4e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5565919d4f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5565919d50d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5565919d5048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5565919d5308 <col:40, col:99>
|   |-IfStmt 0x5565919d52d8 <col:42, col:88>
|   | |-UnaryOperator 0x5565919d51b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5565919d51a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5565919d5180 <col:47> 'int' lvalue ParmVar 0x5565919d5048 'expression' 'int'
|   | `-CompoundStmt 0x5565919d52c0 <col:59, col:88>
|   |   `-LabelStmt 0x5565919d52a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5565919d5238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5565919d5220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5565919d51d0 <col:68> 'void () __attribute__((noreturn))' Function 0x5565919d4f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5565919d52f0 <col:89>
|   `-ReturnStmt 0x5565919d52f8 <col:91>
|-FunctionDecl 0x5565919d5350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5565919d5410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5565919d5790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5565919d54c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5565919d5548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5565919d55c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5565919d5648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5565919d5850 <line:10:22>
|-FunctionDecl 0x5565919fb8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5565919d58c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5565919d5940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5565919d59c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5565919d5a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5565919fb960 <line:13:22>
|-FunctionDecl 0x5565919fbc10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5565919fb9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5565919fba50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5565919fbad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5565919fbcc8 <line:15:22>
|-TypedefDecl 0x5565919fbd38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5565919950e0 'unsigned char'
|-TypedefDecl 0x5565919fbda8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x556591995100 'unsigned short'
|-TypedefDecl 0x5565919fbe18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x556591995120 'unsigned int'
|-TypedefDecl 0x5565919fbe88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x556591995140 'unsigned long'
|-TypedefDecl 0x5565919fbef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x556591995040 'signed char'
|-TypedefDecl 0x5565919fbf68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5565919950e0 'unsigned char'
|-TypedefDecl 0x5565919fbfd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x556591995060 'short'
|-TypedefDecl 0x5565919fc048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x556591995100 'unsigned short'
|-TypedefDecl 0x5565919fc0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x556591995080 'int'
|-TypedefDecl 0x5565919fc128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x556591995120 'unsigned int'
|-TypedefDecl 0x5565919fc198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5565919950a0 'long'
|-TypedefDecl 0x5565919fc208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x556591995140 'unsigned long'
|-TypedefDecl 0x5565919fc278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5565919950a0 'long'
|-TypedefDecl 0x5565919fc2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x556591995140 'unsigned long'
|-TypedefDecl 0x5565919fc358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x556591995140 'unsigned long'
|-TypedefDecl 0x5565919fc3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x556591995120 'unsigned int'
|-TypedefDecl 0x5565919fc438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x556591995120 'unsigned int'
|-TypedefDecl 0x5565919fc4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x556591995140 'unsigned long'
|-TypedefDecl 0x5565919fc518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x556591995140 'unsigned long'
|-TypedefDecl 0x5565919fc588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x556591995120 'unsigned int'
|-TypedefDecl 0x5565919fc5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x556591995140 'unsigned long'
|-TypedefDecl 0x5565919fc668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5565919950a0 'long'
|-TypedefDecl 0x5565919fc6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5565919950a0 'long'
|-TypedefDecl 0x5565919fc748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x556591995080 'int'
|-RecordDecl 0x5565919fc7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5565919fc918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5565919fc9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5565919fc970 'struct __fsid_t' sugar
|   `-RecordType 0x5565919fc820 '__fsid_t'
|     `-Record 0x5565919fc7a0 ''
|-TypedefDecl 0x5565919fca58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5565919950a0 'long'
|-TypedefDecl 0x5565919fcac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x556591995140 'unsigned long'
|-TypedefDecl 0x5565919fcb38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x556591995140 'unsigned long'
|-TypedefDecl 0x5565919fcba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x556591995120 'unsigned int'
|-TypedefDecl 0x5565919fcc18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5565919950a0 'long'
|-TypedefDecl 0x5565919fcc88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x556591995120 'unsigned int'
|-TypedefDecl 0x5565919fccf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5565919950a0 'long'
|-TypedefDecl 0x5565919fcd68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x556591995080 'int'
|-TypedefDecl 0x5565919fcdd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x556591995080 'int'
|-TypedefDecl 0x5565919fce48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x556591995080 'int'
|-TypedefDecl 0x5565919fceb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5565919957a0 'void *'
|   `-BuiltinType 0x556591994fe0 'void'
|-TypedefDecl 0x5565919fcf28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5565919950a0 'long'
|-TypedefDecl 0x5565919fcf98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5565919950a0 'long'
|-TypedefDecl 0x5565919fd008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5565919950a0 'long'
|-TypedefDecl 0x5565919fd078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x556591995140 'unsigned long'
|-TypedefDecl 0x5565919fd0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x556591995140 'unsigned long'
|-TypedefDecl 0x5565919fd158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x556591995140 'unsigned long'
|-TypedefDecl 0x5565919fd1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x556591995140 'unsigned long'
|-TypedefDecl 0x5565919fd238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5565919950a0 'long'
|-TypedefDecl 0x5565919fd2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5565919950a0 'long'
|-TypedefDecl 0x5565919fd318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5565919950a0 'long'
|-TypedefDecl 0x5565919fd388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x556591995140 'unsigned long'
|-TypedefDecl 0x5565919fd418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5565919fd3e0 '__off64_t' sugar
|   |-Typedef 0x5565919fc6d8 '__off64_t'
|   `-BuiltinType 0x5565919950a0 'long'
|-TypedefDecl 0x5565919fd510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5565919fd4d0 '__quad_t *'
|   `-TypedefType 0x5565919fd470 '__quad_t' sugar
|     |-Typedef 0x5565919fc278 '__quad_t'
|     `-BuiltinType 0x5565919950a0 'long'
|-TypedefDecl 0x5565919fd580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x556591995c20 'char *'
|   `-BuiltinType 0x556591995020 'char'
|-TypedefDecl 0x5565919fd5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5565919950a0 'long'
|-TypedefDecl 0x5565919fd660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x556591995120 'unsigned int'
|-FunctionDecl 0x5565919fd7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5565919fd6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5565919fdae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5565919fdad8 <line:72:3, col:34>
|     `-CallExpr 0x5565919fda98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5565919fda80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5565919fda10 <col:10> '<builtin fn type>' Function 0x5565919fd880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5565919fdac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5565919fda30 <col:29> 'unsigned int' lvalue ParmVar 0x5565919fd6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5565919fd880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5565919fd920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5565919fd990 <col:10> Implicit
| `-ConstAttr 0x5565919fd9e8 <col:10> Implicit
|-FunctionDecl 0x5565919fdc40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5565919fdb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5565919fdf58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5565919fdf48 <line:77:3, col:34>
|     `-CallExpr 0x5565919fdf08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5565919fdef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5565919fde78 <col:10> '<builtin fn type>' Function 0x5565919fdce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5565919fdf30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5565919fde98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5565919fdb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5565919fdce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5565919fdd88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5565919fddf8 <col:10> Implicit
| `-ConstAttr 0x5565919fde50 <col:10> Implicit
|-TypedefDecl 0x5565919fdf88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x556591995140 'unsigned long'
|-TypedefDecl 0x5565919fe018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5565919fdfe0 '__time_t' sugar
|   |-Typedef 0x5565919fcc18 '__time_t'
|   `-BuiltinType 0x5565919950a0 'long'
|-RecordDecl 0x5565919fe070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5565919fe128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5565919fe1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5565919fe248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5565919fe210 '__pid_t' sugar
|   |-Typedef 0x5565919fc748 '__pid_t'
|   `-BuiltinType 0x556591995080 'int'
|-RecordDecl 0x5565919fe2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5565919fe360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5565919fe3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5565919fe470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5565919fe4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x556591995140 'unsigned long'
|-RecordDecl 0x5565919fe530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5565919fe7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x556591a008b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5565919fe810 'struct cpu_set_t' sugar
|   `-RecordType 0x5565919fe5b0 'cpu_set_t'
|     `-Record 0x5565919fe530 ''
|-FunctionDecl 0x556591a00b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x556591a00958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x556591a00a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x556591a00c38 <line:107:19>
|-FunctionDecl 0x556591a00e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x556591a00ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x556591a00eb8 <col:69>
|-FunctionDecl 0x556591a01030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x556591a00f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x556591a010d8 <col:64>
|-FunctionDecl 0x556591a01398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x556591a01140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x556591a01278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x556591a01448 <line:113:22>
|-FunctionDecl 0x556591a016c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x556591a014b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x556591a015a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x556591a01778 <col:88>
|-FunctionDecl 0x556591a01a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x556591a017e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x556591a018c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x556591a01950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x556591a01b50 <col:62>
|-FunctionDecl 0x556591a01cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x556591a01bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x556591a01d70 <col:63>
|-FunctionDecl 0x556591a01e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x556591a01f38 <col:47>
|-FunctionDecl 0x556591a02040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x556591a01fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x556591a020e8 <col:69>
|-FunctionDecl 0x556591a021f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x556591a02158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x556591a02298 <col:69>
|-FunctionDecl 0x556591a02558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x556591a02300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x556591a02438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x556591a02608 <col:88>
|-TypedefDecl 0x556591a02698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x556591a02660 '__clock_t' sugar
|   |-Typedef 0x5565919fca58 '__clock_t'
|   `-BuiltinType 0x5565919950a0 'long'
|-TypedefDecl 0x556591a02728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x556591a026f0 '__clockid_t' sugar
|   |-Typedef 0x5565919fce48 '__clockid_t'
|   `-BuiltinType 0x556591995080 'int'
|-TypedefDecl 0x556591a027b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x556591a02780 '__timer_t' sugar
|   |-Typedef 0x5565919fceb8 '__timer_t'
|   `-PointerType 0x5565919957a0 'void *'
|     `-BuiltinType 0x556591994fe0 'void'
|-RecordDecl 0x556591a02810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x556591a028e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x556591a02950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x556591a029b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x556591a02a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x556591a02a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x556591a02af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x556591a02b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x556591a02bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x556591a02c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x556591a02c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x556591a02cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x556591a02d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x556591a02e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x556591a02e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x556591a02f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x556591a03100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x556591a031a0 <col:45>
|-FunctionDecl 0x556591a03380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x556591a03270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x556591a03428 <col:54>
|-FunctionDecl 0x556591a03628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x556591a03490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x556591a03508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x556591a036d8 <line:157:22>
| `-ConstAttr 0x556591a03730 <col:63>
|-FunctionDecl 0x556591a04560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x556591a03828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x556591a04608 <col:56>
|-FunctionDecl 0x556591a049b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x556591a04678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x556591a046f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x556591a04770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x556591a04868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x556591a04a70 <col:54>
|-RecordDecl 0x556591a04ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x556591a04b78 parent 0x556591994f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x556591a04dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x556591a04e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x556591a04ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x556591a04f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x556591a05038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x556591a05158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x556591a05100 'struct __locale_struct *'
|   `-ElaboratedType 0x556591a05090 'struct __locale_struct' sugar
|     `-RecordType 0x556591a04b50 'struct __locale_struct'
|       `-Record 0x556591a04ac8 '__locale_struct'
|-TypedefDecl 0x556591a05208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x556591a051d0 '__locale_t' sugar
|   |-Typedef 0x556591a05158 '__locale_t'
|   `-PointerType 0x556591a05100 'struct __locale_struct *'
|     `-ElaboratedType 0x556591a05090 'struct __locale_struct' sugar
|       `-RecordType 0x556591a04b50 'struct __locale_struct'
|         `-Record 0x556591a04ac8 '__locale_struct'
|-FunctionDecl 0x556591a05610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x556591a05278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x556591a052f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x556591a05370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x556591a05400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x556591a05478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x556591a056d8 <col:40>
|-FunctionDecl 0x556591a058c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x556591a057a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x556591a05970 <col:66>
|-FunctionDecl 0x556591a05a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x556591a059d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x556591a05b28 <col:69>
|-FunctionDecl 0x556591a05d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x556591a05b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x556591a05c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x556591a05e08 <col:52>
|-FunctionDecl 0x556591a05fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x556591a05e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x556591a05f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x556591a06060 <col:55>
|-FunctionDecl 0x556591a061f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x556591a060e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x556591a062a0 <col:62>
|-FunctionDecl 0x556591a06418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x556591a06308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x556591a064c0 <col:60>
|-FunctionDecl 0x556591a06718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x556591a06578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x556591a065f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x556591a067c8 <col:44>
|-FunctionDecl 0x556591a069d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x556591a06830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x556591a068b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x556591a06a88 <col:49>
|-VarDecl 0x556591a06b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x556591a06c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x556591a06c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x556591a06d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x556591a06e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x556591a06f20 <col:42>
|-VarDecl 0x556591a06f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x556591a07010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x556591a07198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x556591a07088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x556591a07240 <col:57>
|-FunctionDecl 0x556591a07350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x556591a072c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x556591a073f8 <col:56>
|-FunctionDecl 0x556591a08540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x556591a07478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x556591a085e8 <col:59>
|-FunctionDecl 0x556591a086f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x556591a08658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x556591a08798 <col:48>
| `-ConstAttr 0x556591a087f0 <col:89>
|-FunctionDecl 0x556591a08a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x556591a088a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x556591a08938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x556591a08cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x556591a08b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556591a08bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x556591a08d68 <col:88>
|-FunctionDecl 0x556591a08f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x556591a08dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556591a08e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x556591a08fb0 <col:88>
|-FunctionDecl 0x556591a091c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x556591a09018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556591a090a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x556591a09278 <line:208:22>
|-FunctionDecl 0x556591a095e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x556591a092e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556591a09360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x556591a093f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x556591a09480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x556591a098e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x556591a096e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x556591a097c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x556591a09998 <col:85>
|-FunctionDecl 0x556591a09d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x556591a09a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556591a09b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x556591a09c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x556591a09e40 <col:52>
|-FunctionDecl 0x556591a09fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x556591a09ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x556591a0a060 <col:61>
|-FunctionDecl 0x556591a0a560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x556591a0a0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x556591a0a148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x556591a0a278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x556591a0a368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x556591a0a620 <col:62>
|-FunctionDecl 0x556591a0a838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x556591a0a688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x556591a0a718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x556591a0a8e8 <line:221:22>
|-FunctionDecl 0x556591a0a9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x556591a0a950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x556591a0aa90 <col:65>
|-TypedefDecl 0x556591a0ab00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x556591995140 'unsigned long'
|-RecordDecl 0x556591a0ab58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x556591a0aca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x556591a0ad08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556591a0adb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x556591a0ad60 'union pthread_attr_t' sugar
|   `-RecordType 0x556591a0abe0 'union pthread_attr_t'
|     `-Record 0x556591a0ab58 'pthread_attr_t'
|-RecordDecl 0x556591a0ae10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x556591a0af88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x556591a0b000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x556591a0b0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x556591a0b050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x556591a0ae90 'struct __pthread_internal_list'
|     `-Record 0x556591a0ae10 '__pthread_internal_list'
|-RecordDecl 0x556591a0b120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x556591a0b1c8 parent 0x556591994f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x556591a0b2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x556591a0b308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x556591a0b370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x556591a0b3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x556591a0b440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x556591a0b4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x556591a0f580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x556591a0f630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x556591a0f720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x556591a0f788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556591a0f910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x556591a0f8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x556591a0b1a0 'pthread_mutex_t'
|     `-Record 0x556591a0b120 ''
|-RecordDecl 0x556591a0f980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x556591a0fac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x556591a0fb28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x556591a0fbe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x556591a0fb80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x556591a0fa00 'pthread_mutexattr_t'
|     `-Record 0x556591a0f980 ''
|-RecordDecl 0x556591a0fc50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x556591a0fcf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x556591a0fdc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x556591a0fe28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x556591a0fe90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x556591a0fef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x556591a0ff60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x556591a0ffc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x556591a10030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x556591a10098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x556591a10150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix038_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix038_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x556591a10240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x556591a102a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x556591a103e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x556591a10380 'union pthread_cond_t' sugar
|   `-RecordType 0x556591a0fcd0 'pthread_cond_t'
|     `-Record 0x556591a0fc50 ''
|-RecordDecl 0x556591a10450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x556591a10590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x556591a105f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x556591a106b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x556591a10650 'union pthread_condattr_t' sugar
|   `-RecordType 0x556591a104d0 'pthread_condattr_t'
|     `-Record 0x556591a10450 ''
|-TypedefDecl 0x556591a10738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x556591995120 'unsigned int'
|-TypedefDecl 0x556591a107a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x556591995080 'int'
|-RecordDecl 0x556591a10800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x556591a108a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x556591a10970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x556591a109d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x556591a10a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x556591a10aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x556591a10b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x556591a10b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x556591a10be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x556591a10c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x556591a10cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x556591a10d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x556591a10d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x556591a10e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix038_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix038_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x556591a10ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x556591a10f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556591a11090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x556591a11030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x556591a10880 'pthread_rwlock_t'
|     `-Record 0x556591a10800 ''
|-RecordDecl 0x556591a11100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x556591a11240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x556591a112a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556591a11360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x556591a11300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x556591a11180 'pthread_rwlockattr_t'
|     `-Record 0x556591a11100 ''
|-TypedefDecl 0x556591a113e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x556591995084 'volatile int' volatile
|   `-BuiltinType 0x556591995080 'int'
|-RecordDecl 0x556591a11440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x556591a135b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x556591a13618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556591a136d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x556591a13670 'union pthread_barrier_t' sugar
|   `-RecordType 0x556591a114c0 'pthread_barrier_t'
|     `-Record 0x556591a11440 ''
|-RecordDecl 0x556591a13740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x556591a13840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x556591a138a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x556591a13960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x556591a13900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x556591a137c0 'pthread_barrierattr_t'
|     `-Record 0x556591a13740 ''
|-TypedefDecl 0x556591a13a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x556591a13a10 'long [8]' 8 
|   `-BuiltinType 0x5565919950a0 'long'
|-EnumDecl 0x556591a13ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x556591a13b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x556591a13be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x556591a13c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x556591a13d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x556591a13d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x556591a13da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x556591a13df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x556591a13e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x556591a13e68 <col:26> 'int'
| |   `-DeclRefExpr 0x556591a13e48 <col:26> 'int' EnumConstant 0x556591a13d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x556591a13f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x556591a13ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x556591a13ed0 <col:29> 'int' EnumConstant 0x556591a13d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x556591a13f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x556591a13f78 <col:30> 'int'
| |   `-DeclRefExpr 0x556591a13f58 <col:30> 'int' EnumConstant 0x556591a13da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x556591a14018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x556591a14000 <col:27> 'int'
|     `-DeclRefExpr 0x556591a13fe0 <col:27> 'int' EnumConstant 0x556591a13e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x556591a14068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x556591a14138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x556591a141c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x556591a141a8 <col:30> 'int'
| |   `-DeclRefExpr 0x556591a14188 <col:30> 'int' EnumConstant 0x556591a14138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x556591a14210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x556591a14298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x556591a14280 <col:29> 'int'
|     `-DeclRefExpr 0x556591a14260 <col:29> 'int' EnumConstant 0x556591a14210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x556591a142e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x556591a143b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x556591a14408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x556591a14458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x556591a144a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x556591a145c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x556591a14610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x556591a14660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x556591a146e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x556591a146d0 <col:31> 'int'
|     `-DeclRefExpr 0x556591a146b0 <col:31> 'int' EnumConstant 0x556591a145c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x556591a14738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x556591a14808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x556591a14858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x556591a148a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x556591a14978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x556591a149c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x556591a14a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x556591a14ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x556591a14b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x556591a14b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x556591a14dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x556591a14e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x556591a14e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x556591a14fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x556591a15008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x556591a150d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x556591a15128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x556591a15178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x556591a15248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x556591a15298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x556591a158f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x556591a15390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x556591a154a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556591a156e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x556591a15760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x556591a159b8 <col:47>
| |-NonNullAttr 0x556591a15a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x556591a15a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x556591a15b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x556591a15aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x556591a15dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x556591a15c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x556591a15ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x556591a15f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x556591a15e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x556591a16040 <col:60>
|-FunctionDecl 0x556591a16190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x556591a16230 <col:54>
| `-ConstAttr 0x556591a16288 <col:95>
|-FunctionDecl 0x556591a16458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x556591a162c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556591a16338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x556591a16508 <line:394:19>
| `-ConstAttr 0x556591a16560 <col:60>
|-FunctionDecl 0x556591a16f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x556591a16e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x556591a17010 <col:71>
| `-NonNullAttr 0x556591a17068 <col:112, col:126> 1
|-FunctionDecl 0x556591a17170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x556591a170b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x556591a17218 <line:397:22>
| `-NonNullAttr 0x556591a17270 <col:63, col:77> 1
|-FunctionDecl 0x556591a17498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x556591a172b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x556591a17338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x556591a17548 <line:400:22>
| `-NonNullAttr 0x556591a175a0 <col:63, col:80> 1 2
|-FunctionDecl 0x556591a177a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x556591a175e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556591a17668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x556591a17858 <line:403:22>
| `-NonNullAttr 0x556591a178b0 <col:63, col:77> 1
|-FunctionDecl 0x556591a17b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x556591a178f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x556591a179a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x556591a17bb8 <line:406:22>
| `-NonNullAttr 0x556591a17c10 <col:63, col:80> 1 2
|-FunctionDecl 0x556591a18e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x556591a17c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556591a17cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x556591a18ef8 <line:409:22>
| `-NonNullAttr 0x556591a18f50 <col:63, col:77> 1
|-FunctionDecl 0x556591a19188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x556591a18f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556591a19028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x556591a19238 <line:412:22>
| `-NonNullAttr 0x556591a19290 <col:63, col:80> 1 2
|-FunctionDecl 0x556591a194c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x556591a192d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x556591a19368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x556591a19578 <col:37>
| `-NonNullAttr 0x556591a195d0 <col:78, col:95> 1 2
|-FunctionDecl 0x556591a197b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556591a19618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556591a19698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x556591a19868 <line:418:22>
| `-NonNullAttr 0x556591a198c0 <col:63, col:80> 1 2
|-FunctionDecl 0x556591a19a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x556591a19908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556591a19988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x556591a19af8 <line:420:22>
| `-NonNullAttr 0x556591a19b50 <col:63, col:77> 1
|-FunctionDecl 0x556591a19cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556591a19b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556591a19c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x556591a19da8 <line:423:22>
| `-NonNullAttr 0x556591a1ae30 <col:63, col:80> 1 2
|-FunctionDecl 0x556591a1afb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x556591a1ae78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556591a1aef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x556591a1b068 <line:426:22>
| `-NonNullAttr 0x556591a1b0c0 <col:63, col:77> 1
|-FunctionDecl 0x556591a1b268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556591a1b108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556591a1b188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x556591a1b318 <line:429:22>
| `-NonNullAttr 0x556591a1b370 <col:63, col:80> 1 2
|-FunctionDecl 0x556591a1b4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x556591a1b3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556591a1b438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x556591a1b5a8 <line:431:22>
| `-NonNullAttr 0x556591a1b600 <col:63, col:77> 1
|-FunctionDecl 0x556591a1b828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x556591a1b648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556591a1b6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x556591a1b8d8 <line:434:22>
| |-NonNullAttr 0x556591a1b930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x556591a1b968 <col:100> "" ""
|-FunctionDecl 0x556591a1bb78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x556591a1b9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556591a1ba38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x556591a1bc28 <line:437:22>
| |-NonNullAttr 0x556591a1bc80 <col:63, col:77> 1
| `-DeprecatedAttr 0x556591a1bcb8 <col:97> "" ""
|-FunctionDecl 0x556591a1beb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x556591a1bd08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556591a1bd80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x556591a1bf68 <line:440:22>
| `-NonNullAttr 0x556591a1bfc0 <col:63, col:80> 1 2
|-FunctionDecl 0x556591a1c140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x556591a1c008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556591a1c080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x556591a1c1f0 <line:443:22>
| `-NonNullAttr 0x556591a1c248 <col:63, col:77> 1
|-FunctionDecl 0x556591a1c538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x556591a1c298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556591a1c318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x556591a1c390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x556591a1c5f0 <line:447:22>
| `-NonNullAttr 0x556591a1c648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x556591a1c8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x556591a1c6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556591a1c720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x556591a1c798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x556591a1c9b0 <col:43>
| `-NonNullAttr 0x556591a1ca08 <col:84, col:98> 1
|-FunctionDecl 0x556591a1ccc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x556591a1ca58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556591a1cad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x556591a1cb68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x556591a1cd80 <line:452:22>
| `-NonNullAttr 0x556591a1cdd8 <col:63, col:77> 3
|-FunctionDecl 0x556591a1d0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x556591a1ce50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556591a1ced0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x556591a1cf60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x556591a1d1a0 <line:456:22>
| `-NonNullAttr 0x556591a1d1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x556591a1d3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x556591a1d248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556591a1d2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x556591a1d498 <line:458:22>
|-FunctionDecl 0x556591a1d868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x556591a1d560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x556591a1d700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x556591a1d918 <col:52, col:69> 1 2
|-FunctionDecl 0x556591a1dac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x556591a1d9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x556591a1da20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x556591a1dca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x556591a1db88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x556591a1dc08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x556591a1de60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x556591a1dd68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x556591a1dfa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x556591a1e040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x556591a1e0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x556591a1e1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x556591a1e240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x556591a1e410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix038_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x556591a1e508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x556591a1e5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x556591a1e560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x556591a1e0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x556591a1e040 ''
| `-AlignedAttr 0x556591a1e618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x556591a1e690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x556591a1e7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x556591a1e858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x556591a1e8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x556591a1e928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x556591a1eb30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x556591a1ea20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x556591a1ec78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x556591a1ebe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x556591a1ee70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x556591a1ed30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x556591a1ef18 <line:487:22>
|-RecordDecl 0x556591a1ef70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x556591a1f288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x556591a1f0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x556591a1f168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x556591a1f338 <col:86>
| `-ReturnsTwiceAttr 0x556591a1f390 <col:12> Implicit
|-FunctionDecl 0x556591a1f6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x556591a1f460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x556591a1f570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x556591a1f768 <line:493:22>
| `-NonNullAttr 0x556591a1f7c0 <col:63, col:77> 1
|-FunctionDecl 0x556591a1f938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556591a1f808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556591a1f9e0 <line:495:22>
| `-NonNullAttr 0x556591a1fa38 <col:63, col:77> 1
|-FunctionDecl 0x556591a1fb40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556591a1fa88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556591a1fbe8 <line:497:22>
| `-NonNullAttr 0x556591a1fc40 <col:52, col:66> 1
|-FunctionDecl 0x556591a1fd40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556591a1fc88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556591a1fde8 <line:499:22>
| `-NonNullAttr 0x556591a1fe40 <col:52, col:66> 1
|-FunctionDecl 0x556591a20088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x556591a1fe98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x556591a1ff28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x556591a20138 <col:36>
| `-NonNullAttr 0x556591a20190 <col:66, col:83> 1 2
|-FunctionDecl 0x556591a20290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556591a201d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556591a20338 <line:504:22>
| `-NonNullAttr 0x556591a20390 <col:52, col:66> 1
|-FunctionDecl 0x556591a20628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556591a20440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x556591a204c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x556591a206d8 <line:508:22>
| `-NonNullAttr 0x556591a20730 <col:63, col:80> 1 2
|-FunctionDecl 0x556591a209f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x556591a20778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x556591a207f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x556591a20878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x556591a20ab0 <line:512:22>
| `-NonNullAttr 0x556591a20b08 <col:63, col:80> 1 3
|-FunctionDecl 0x556591a20c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556591a20b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556591a20cb8 <line:514:22>
| `-NonNullAttr 0x556591a20d10 <col:63, col:77> 1
|-FunctionDecl 0x556591a20f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x556591a20dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x556591a20fe0 <line:516:22>
| `-NonNullAttr 0x556591a21038 <col:63, col:77> 1
|-FunctionDecl 0x556591a21140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x556591a21088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x556591a211e8 <line:518:22>
| `-NonNullAttr 0x556591a21240 <col:63, col:77> 1
|-FunctionDecl 0x556591a21468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556591a21288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x556591a21308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x556591a21518 <line:522:22>
| `-NonNullAttr 0x556591a21570 <col:63, col:80> 1 2
|-FunctionDecl 0x556591a21778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556591a215b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556591a21638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x556591a21828 <line:525:22>
| `-NonNullAttr 0x556591a21880 <col:63, col:77> 1
|-FunctionDecl 0x556591a21a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556591a218c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x556591a21948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x556591a21ad8 <line:528:22>
| `-NonNullAttr 0x556591a21b30 <col:63, col:80> 1 2
|-FunctionDecl 0x556591a21cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556591a21b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556591a21bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x556591a21d68 <line:530:22>
| `-NonNullAttr 0x556591a21dc0 <col:63, col:77> 1
|-FunctionDecl 0x556591a22f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556591a21e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x556591a22eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x556591a23040 <line:534:22>
| `-NonNullAttr 0x556591a23098 <col:63, col:80> 1 2
|-FunctionDecl 0x556591a23228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556591a230e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556591a23168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x556591a232d8 <line:537:22>
| `-NonNullAttr 0x556591a23330 <col:63, col:77> 1
|-FunctionDecl 0x556591a234d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556591a23378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x556591a233f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x556591a23588 <line:541:22>
| `-NonNullAttr 0x556591a235e0 <col:63, col:80> 1 2
|-FunctionDecl 0x556591a23768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556591a23628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556591a236a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x556591a23818 <line:544:22>
| `-NonNullAttr 0x556591a23870 <col:63, col:77> 1
|-FunctionDecl 0x556591a23a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x556591a238b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x556591a23938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x556591a23b08 <line:547:22>
| `-NonNullAttr 0x556591a23b60 <col:63, col:80> 1 2
|-FunctionDecl 0x556591a23ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556591a23ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556591a23c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x556591a23d98 <line:550:22>
| `-NonNullAttr 0x556591a23df0 <col:63, col:77> 1
|-FunctionDecl 0x556591a25168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x556591a24f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x556591a25020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x556591a25218 <col:29>
| `-NonNullAttr 0x556591a25270 <col:70, col:84> 1
|-FunctionDecl 0x556591a253e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556591a252b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556591a25490 <line:555:22>
| `-NonNullAttr 0x556591a254e8 <col:63, col:77> 1
|-FunctionDecl 0x556591a255f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556591a25538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556591a25698 <line:557:22>
| `-NonNullAttr 0x556591a256f0 <col:52, col:66> 1
|-FunctionDecl 0x556591a257f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556591a25738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556591a25898 <line:559:19>
| `-NonNullAttr 0x556591a258f0 <col:49, col:63> 1
|-FunctionDecl 0x556591a25b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x556591a25938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x556591a259c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x556591a25bd8 <col:39>
| `-NonNullAttr 0x556591a25c30 <col:69, col:86> 1 2
|-FunctionDecl 0x556591a25d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556591a25c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556591a25dd8 <line:564:22>
| `-NonNullAttr 0x556591a25e30 <col:52, col:66> 1
|-FunctionDecl 0x556591a25f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556591a25ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556591a26040 <line:566:22>
| `-NonNullAttr 0x556591a26098 <col:52, col:66> 1
|-FunctionDecl 0x556591a26258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x556591a260e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x556591a26178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x556591a26308 <col:39>
| `-NonNullAttr 0x556591a26360 <col:69, col:86> 1 2
|-FunctionDecl 0x556591a26460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556591a263a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556591a26508 <line:571:22>
| `-NonNullAttr 0x556591a26560 <col:52, col:66> 1
|-FunctionDecl 0x556591a26748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x556591a26610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x556591a267f0 <line:573:22>
| `-NonNullAttr 0x556591a26848 <col:63, col:77> 1
|-FunctionDecl 0x556591a26950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x556591a26898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x556591a269f8 <line:575:22>
| `-NonNullAttr 0x556591a26a50 <col:63, col:77> 1
|-FunctionDecl 0x556591a26c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556591a26a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x556591a26b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x556591a26d28 <line:579:22>
| `-NonNullAttr 0x556591a26d80 <col:63, col:80> 1 2
|-FunctionDecl 0x556591a26fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x556591a26dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x556591a26e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x556591a27058 <line:582:22>
| `-NonNullAttr 0x556591a270b0 <col:63, col:77> 1
|-FunctionDecl 0x556591a27258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556591a270f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x556591a27178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x556591a27308 <line:586:22>
| `-NonNullAttr 0x556591a27360 <col:63, col:80> 1 2
|-FunctionDecl 0x556591a274e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x556591a273a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x556591a27428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x556591a27598 <col:36>
| `-NonNullAttr 0x556591a275f0 <col:77, col:91> 1
|-FunctionDecl 0x556591a27928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x556591a276d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x556591a277e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x556591a279d8 <line:591:22>
| `-NonNullAttr 0x556591a27a30 <col:63, col:77> 1
|-FunctionDecl 0x556591a27ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x556591a27a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x556591a27c50 <line:593:22>
| `-NonNullAttr 0x556591a27ca8 <col:63, col:77> 1
|-FunctionDecl 0x556591a27db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x556591a27cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x556591a27e58 <line:595:22>
| `-NonNullAttr 0x556591a27eb0 <col:52, col:66> 1
|-FunctionDecl 0x556591a27fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x556591a27f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x556591a28070 <line:597:22>
| `-NonNullAttr 0x556591a280c8 <col:52, col:66> 1
|-FunctionDecl 0x556591a282f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x556591a28118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x556591a28190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x556591a283a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x556591a286d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x556591a28428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x556591a284a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x556591a28530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x556591a28790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x556591a289a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x556591a28870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x556591a28a50 <line:606:22>
| `-NonNullAttr 0x556591a28aa8 <col:63, col:77> 1
|-FunctionDecl 0x556591a28bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x556591a28af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x556591a28c58 <line:608:22>
| `-NonNullAttr 0x556591a28cb0 <col:63, col:77> 1
|-FunctionDecl 0x556591a28f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556591a28cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x556591a28d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x556591a28fc0 <line:612:22>
| `-NonNullAttr 0x556591a29018 <col:63, col:80> 1 2
|-FunctionDecl 0x556591a29228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x556591a29068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x556591a290e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x556591a292d8 <col:37>
| `-NonNullAttr 0x556591a29330 <col:78, col:92> 1
|-FunctionDecl 0x556591a29548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x556591a29378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x556591a29420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x556591a295f8 <line:618:22>
| `-NonNullAttr 0x556591a29650 <col:63, col:80> 1 2
|-FunctionDecl 0x556591a29818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x556591a29698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x556591a29710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x556591a298c8 <line:621:22>
| `-NonNullAttr 0x556591a29920 <col:63, col:77> 1
|-FunctionDecl 0x556591a29bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x556591a29a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x556591a29a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x556591a29c78 <line:623:22>
| `-NonNullAttr 0x556591a29cd0 <col:63, col:77> 1
|-FunctionDecl 0x556591a29e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x556591a29d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x556591a29f20 <line:625:22>
| `-NonNullAttr 0x556591a29f78 <col:63, col:77> 1
|-FunctionDecl 0x556591a2a080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x556591a29fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x556591a2a128 <line:627:22>
| `-NonNullAttr 0x556591a2a180 <col:52, col:66> 1
|-FunctionDecl 0x556591a2a280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x556591a2a1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x556591a2a328 <line:629:22>
| `-NonNullAttr 0x556591a2a380 <col:52, col:66> 1
|-FunctionDecl 0x556591a2a480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x556591a2a3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x556591a2a528 <line:631:22>
| `-NonNullAttr 0x556591a2a580 <col:52, col:66> 1
|-FunctionDecl 0x556591a2a958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x556591a2a660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x556591a2a770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x556591a2a7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x556591a2aa10 <line:635:22>
| `-NonNullAttr 0x556591a2aa68 <col:63, col:77> 1
|-FunctionDecl 0x556591a2abe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x556591a2aab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x556591a2ac90 <line:637:22>
| `-NonNullAttr 0x556591a2ace8 <col:63, col:77> 1
|-FunctionDecl 0x556591a2adf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x556591a2ad38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x556591a2ae98 <line:639:22>
| `-NonNullAttr 0x556591a2aef0 <col:52, col:66> 1
|-FunctionDecl 0x556591a2b0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x556591a2afb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x556591a2b190 <line:641:22>
| `-NonNullAttr 0x556591a2b1e8 <col:63, col:77> 1
|-FunctionDecl 0x556591a2b2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x556591a2b238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x556591a2b398 <line:643:22>
| `-NonNullAttr 0x556591a2b3f0 <col:63, col:77> 1
|-FunctionDecl 0x556591a2b618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556591a2b438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x556591a2b4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x556591a2b6c8 <line:647:22>
| `-NonNullAttr 0x556591a2b720 <col:63, col:80> 1 2
|-FunctionDecl 0x556591a2b928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x556591a2b768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x556591a2b7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x556591a2b9d8 <line:650:22>
| `-NonNullAttr 0x556591a2ba30 <col:63, col:77> 1
|-FunctionDecl 0x556591a2bd78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x556591a2bb10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x556591a2bc30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x556591a2be28 <line:653:22>
| `-NonNullAttr 0x556591a2be80 <col:63, col:77> 1
|-FunctionDecl 0x556591a2bfe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x556591a2bec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x556591a2c090 <col:69>
|-FunctionDecl 0x556591a2c208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x556591a2c0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x556591a2c2b0 <col:72>
|-FunctionDecl 0x556591a2c4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x556591a2c318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x556591a2c3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x556591a2c598 <col:44>
|-FunctionDecl 0x556591a2c7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x556591a2c600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556591a2c678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x556591a2c868 <line:660:22>
| `-NonNullAttr 0x556591a2c8c0 <col:63, col:77> 2
|-FunctionDecl 0x556591a2cd08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x556591a2c9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x556591a2cab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x556591a2cbc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x556591a2cdc0 <col:47>
|-FunctionDecl 0x556591a2df60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x556591a2ce30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x556591a2e0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x556591a2e020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x556591a2e210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x556591a2e178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x556591a2e2d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x556591a2e398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x556591a2e458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x556591a2e510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x556591a2e590 prev 0x556591a2e510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x556591a2e5f8 <col:24> 'int' 0
|-VarDecl 0x556591a2e630 <line:673:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x556591a2e6b0 prev 0x556591a2e630 <line:674:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x556591a2e718 <col:27> 'int' 0
|-VarDecl 0x556591a2e750 <line:675:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x556591a2e7d0 prev 0x556591a2e750 <line:676:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x556591a2e838 <col:27> 'int' 0
|-VarDecl 0x556591a2e870 <line:677:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x556591a2e8f0 prev 0x556591a2e870 <line:678:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x556591a2e958 <col:27> 'int' 0
|-VarDecl 0x556591a2e990 <line:679:1, col:5> col:5 used a 'int'
|-VarDecl 0x556591a2ea10 prev 0x556591a2e990 <line:680:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x556591a2ea78 <col:9> 'int' 0
|-VarDecl 0x556591a2eaa8 <line:681:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x556591a2eb28 <line:682:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x556591a2eba0 <line:683:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x556591a2ec18 <line:684:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x556591a2ec90 <line:685:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x556591a2ed08 <line:686:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x556591a2ed80 <line:687:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x556591a2edf8 <line:688:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x556591a2ee70 <line:689:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x556591a2eee8 <line:690:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x556591a2ef70 <line:691:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x556591a2eff0 <line:692:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x556591a2f070 <line:693:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x556591a2f0e8 <line:694:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x556591a2f168 <line:695:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x556591a2f1e0 <line:696:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x556591a2f258 <line:697:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x556591a2f2d0 <line:698:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x556591a2f350 <line:699:1, col:5> col:5 used x 'int'
|-VarDecl 0x556591a2f3d0 prev 0x556591a2f350 <line:700:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x556591a2f438 <col:9> 'int' 0
|-VarDecl 0x556591a2f470 <line:701:1, col:5> col:5 used y 'int'
|-VarDecl 0x556591a2f4f0 prev 0x556591a2f470 <line:702:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x556591a2f558 <col:9> 'int' 0
|-VarDecl 0x556591a2f590 <line:703:1, col:5> col:5 used z 'int'
|-VarDecl 0x556591a2f610 prev 0x556591a2f590 <line:704:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x556591a2f678 <col:9> 'int' 0
|-VarDecl 0x556591a2f6a8 <line:705:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x556591a2f720 <line:706:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x556591a2f838 prev 0x556591a2df60 <line:707:1, line:735:1> line:707:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x556591a2f7a0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x556591a31088 <line:708:1, line:735:1>
|   |-CallExpr 0x556591a2f948 <line:709:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556591a2f930 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556591a2f8e0 <col:3> 'void ()' Function 0x5565919d5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556591a2f9c0 <line:710:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x556591a2f968 <col:3> 'int' lvalue Var 0x556591a2f168 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x556591a2f9a8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556591a2f988 <col:15> 'int' lvalue Var 0x556591a2f070 'a$w_buff0' 'int'
|   |-BinaryOperator 0x556591a2fa20 <line:711:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x556591a2f9e0 <col:3> 'int' lvalue Var 0x556591a2f070 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x556591a2fa00 <col:15> 'int' 1
|   |-BinaryOperator 0x556591a2fa98 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556591a2fa40 <col:3> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556591a2fa80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556591a2fa60 <col:20> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556591a2fb30 <line:713:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x556591a2fab8 <col:3> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x556591a2fb08 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x556591a2fad8 <col:27> 'int' 1
|   |-CallExpr 0x556591a2fcb8 <line:714:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x556591a2fca0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x556591a2fb50 <col:3> 'void (int)' Function 0x5565919d50d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x556591a2fc50 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x556591a2fc30 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x556591a2fc10 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x556591a2fbc8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x556591a2fbb0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x556591a2fb70 <col:23> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x556591a2fbf8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x556591a2fbe0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x556591a2fb90 <col:41> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556591a2fd38 <line:715:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556591a2fce0 <col:3> '_Bool' lvalue Var 0x556591a2ed80 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x556591a2fd20 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556591a2fd00 <col:20> '_Bool' lvalue Var 0x556591a2eba0 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x556591a2fdb0 <line:716:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556591a2fd58 <col:3> '_Bool' lvalue Var 0x556591a2edf8 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x556591a2fd98 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556591a2fd78 <col:20> '_Bool' lvalue Var 0x556591a2ec18 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x556591a2fe28 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556591a2fdd0 <col:3> '_Bool' lvalue Var 0x556591a2ee70 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556591a2fe10 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556591a2fdf0 <col:20> '_Bool' lvalue Var 0x556591a2ec90 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x556591a2fea0 <line:718:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556591a2fe48 <col:3> '_Bool' lvalue Var 0x556591a2eee8 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x556591a2fe88 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556591a2fe68 <col:20> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x556591a2ff38 <line:719:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x556591a2fec0 <col:3> '_Bool' lvalue Var 0x556591a2ec18 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x556591a2ff10 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x556591a2fee0 <col:27> 'int' 1
|   |-CallExpr 0x556591a2ffb8 <line:720:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556591a2ffa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556591a2ff80 <col:3> 'void ()' Function 0x5565919d5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556591a30010 <line:721:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556591a2fff8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556591a2ffd8 <col:3> 'void ()' Function 0x5565919d5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556591a30070 <line:722:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x556591a30030 <col:3> 'int' lvalue Var 0x556591a2f3d0 'x' 'int'
|   | `-IntegerLiteral 0x556591a30050 <col:7> 'int' 1
|   |-CallExpr 0x556591a300c8 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556591a300b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556591a30090 <col:3> 'void ()' Function 0x5565919d5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556591a30120 <line:724:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556591a30108 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556591a300e8 <col:3> 'void ()' Function 0x5565919d5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556591a30408 <line:725:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x556591a30140 <col:3> 'int' lvalue Var 0x556591a2ea10 'a' 'int'
|   | `-ConditionalOperator 0x556591a303d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x556591a30200 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x556591a301b8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x556591a301a0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x556591a30160 <col:7> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x556591a301e8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x556591a301d0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x556591a30180 <col:25> '_Bool' lvalue Var 0x556591a2ec18 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x556591a303c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556591a30220 <col:42> 'int' lvalue Var 0x556591a2f070 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x556591a303a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x556591a30370 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x556591a302e0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x556591a30298 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556591a30280 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556591a30240 <col:55> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x556591a302c8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x556591a302b0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556591a30260 <col:73> '_Bool' lvalue Var 0x556591a2edf8 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x556591a30340 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556591a30300 <col:90> 'int' lvalue Var 0x556591a2f168 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x556591a30358 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556591a30320 <col:102> 'int' lvalue Var 0x556591a2ea10 'a' 'int'
|   |-BinaryOperator 0x556591a30610 <line:726:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556591a30428 <col:3> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x556591a305f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556591a305c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556591a304e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556591a304a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556591a30488 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556591a30448 <col:20> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556591a304d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556591a304b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556591a30468 <col:38> '_Bool' lvalue Var 0x556591a2ec18 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x556591a30580 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556591a30538 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556591a30508 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556591a305b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556591a30598 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556591a30560 <col:66> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556591a308f8 <line:727:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556591a30630 <col:3> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556591a308e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556591a308b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556591a307d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556591a306f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556591a306a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556591a30690 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556591a30650 <col:20> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556591a306d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556591a306c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556591a30670 <col:38> '_Bool' lvalue Var 0x556591a2ec18 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x556591a307b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556591a30768 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556591a30750 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556591a30710 <col:56> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556591a30798 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556591a30780 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556591a30730 <col:74> '_Bool' lvalue Var 0x556591a2edf8 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x556591a30868 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556591a30820 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556591a307f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556591a30898 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556591a30880 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556591a30848 <col:102> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x556591a30b00 <line:728:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556591a30918 <col:3> '_Bool' lvalue Var 0x556591a2ec18 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x556591a30ae8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556591a30ab8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556591a309d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556591a30990 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556591a30978 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556591a30938 <col:20> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556591a309c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556591a309a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556591a30958 <col:38> '_Bool' lvalue Var 0x556591a2ec18 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x556591a30a70 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556591a30a28 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556591a309f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556591a30aa0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556591a30a88 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556591a30a50 <col:66> '_Bool' lvalue Var 0x556591a2ec18 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x556591a30de8 <line:729:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556591a30b20 <col:3> '_Bool' lvalue Var 0x556591a2edf8 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x556591a30dd0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556591a30da0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556591a30cc0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556591a30be0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556591a30b98 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556591a30b80 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556591a30b40 <col:20> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556591a30bc8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556591a30bb0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556591a30b60 <col:38> '_Bool' lvalue Var 0x556591a2ec18 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x556591a30ca0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556591a30c58 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556591a30c40 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556591a30c00 <col:56> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556591a30c88 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556591a30c70 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556591a30c20 <col:74> '_Bool' lvalue Var 0x556591a2edf8 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x556591a30d58 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556591a30d10 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556591a30ce0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556591a30d88 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556591a30d70 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556591a30d38 <col:102> '_Bool' lvalue Var 0x556591a2edf8 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x556591a30e40 <line:730:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556591a30e28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556591a30e08 <col:3> 'void ()' Function 0x5565919d5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556591a30e98 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556591a30e80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556591a30e60 <col:3> 'void ()' Function 0x5565919d5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556591a30f50 <line:732:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x556591a30eb8 <col:3> 'int' lvalue Var 0x556591a2e590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x556591a30f30 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x556591a30f18 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556591a30ed8 <col:22> 'int' lvalue Var 0x556591a2e590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x556591a30ef8 <col:41> 'int' 1
|   |-CallExpr 0x556591a30fc8 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556591a30fb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556591a30f90 <col:3> 'void ()' Function 0x5565919d5410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x556591a31078 <line:734:3, col:36>
|     `-CallExpr 0x556591a31058 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x556591a31040 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x556591a30fe8 <col:10> 'void *(void)' Function 0x5565919d4e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x556591a31218 prev 0x556591a2e0b8 <line:736:1, line:755:1> line:736:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x556591a31180 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x556591a32450 <line:737:1, line:755:1>
|   |-CallExpr 0x556591a312f8 <line:738:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556591a312e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556591a312c0 <col:3> 'void ()' Function 0x5565919d5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556591a31358 <line:739:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x556591a31318 <col:3> 'int' lvalue Var 0x556591a2f3d0 'x' 'int'
|   | `-IntegerLiteral 0x556591a31338 <col:7> 'int' 2
|   |-CallExpr 0x556591a313b0 <line:740:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556591a31398 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556591a31378 <col:3> 'void ()' Function 0x5565919d5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556591a31408 <line:741:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556591a313f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556591a313d0 <col:3> 'void ()' Function 0x5565919d5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556591a31480 <line:742:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x556591a31428 <col:3> 'int' lvalue Var 0x556591a2e6b0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x556591a31468 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556591a31448 <col:25> 'int' lvalue Var 0x556591a2f4f0 'y' 'int'
|   |-CallExpr 0x556591a314d8 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556591a314c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556591a314a0 <col:3> 'void ()' Function 0x5565919d5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556591a31530 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556591a31518 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556591a314f8 <col:3> 'void ()' Function 0x5565919d5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556591a31818 <line:745:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x556591a31550 <col:3> 'int' lvalue Var 0x556591a2ea10 'a' 'int'
|   | `-ConditionalOperator 0x556591a317e8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x556591a31610 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x556591a315c8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x556591a315b0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x556591a31570 <col:7> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x556591a315f8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x556591a315e0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x556591a31590 <col:25> '_Bool' lvalue Var 0x556591a2ec90 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x556591a317d0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556591a31630 <col:42> 'int' lvalue Var 0x556591a2f070 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x556591a317b0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x556591a31780 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x556591a316f0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x556591a316a8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556591a31690 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556591a31650 <col:55> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x556591a316d8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x556591a316c0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556591a31670 <col:73> '_Bool' lvalue Var 0x556591a2ee70 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x556591a31750 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556591a31710 <col:90> 'int' lvalue Var 0x556591a2f168 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x556591a31768 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556591a31730 <col:102> 'int' lvalue Var 0x556591a2ea10 'a' 'int'
|   |-BinaryOperator 0x556591a31a20 <line:746:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556591a31838 <col:3> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x556591a31a08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556591a319d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556591a318f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556591a318b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556591a31898 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556591a31858 <col:20> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556591a318e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556591a318c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556591a31878 <col:38> '_Bool' lvalue Var 0x556591a2ec90 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556591a31990 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556591a31948 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556591a31918 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556591a319c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556591a319a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556591a31970 <col:66> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556591a31d08 <line:747:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556591a31a40 <col:3> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556591a31cf0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556591a31cc0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556591a31be0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556591a31b00 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556591a31ab8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556591a31aa0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556591a31a60 <col:20> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556591a31ae8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556591a31ad0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556591a31a80 <col:38> '_Bool' lvalue Var 0x556591a2ec90 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x556591a31bc0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556591a31b78 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556591a31b60 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556591a31b20 <col:56> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556591a31ba8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556591a31b90 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556591a31b40 <col:74> '_Bool' lvalue Var 0x556591a2ee70 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556591a31c78 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556591a31c30 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556591a31c00 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556591a31ca8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556591a31c90 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556591a31c58 <col:102> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x556591a31f10 <line:748:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556591a31d28 <col:3> '_Bool' lvalue Var 0x556591a2ec90 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556591a31ef8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556591a31ec8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556591a31de8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556591a31da0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556591a31d88 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556591a31d48 <col:20> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556591a31dd0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556591a31db8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556591a31d68 <col:38> '_Bool' lvalue Var 0x556591a2ec90 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556591a31e80 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556591a31e38 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556591a31e08 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556591a31eb0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556591a31e98 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556591a31e60 <col:66> '_Bool' lvalue Var 0x556591a2ec90 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x556591a32208 <line:749:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556591a31f30 <col:3> '_Bool' lvalue Var 0x556591a2ee70 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556591a321f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556591a321c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556591a320e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556591a32000 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556591a31fb8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556591a31fa0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556591a31f50 <col:20> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556591a31fe8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556591a31fd0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556591a31f70 <col:38> '_Bool' lvalue Var 0x556591a2ec90 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x556591a320c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556591a32078 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556591a32060 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556591a32020 <col:56> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556591a320a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556591a32090 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556591a32040 <col:74> '_Bool' lvalue Var 0x556591a2ee70 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556591a32178 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556591a32130 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556591a32100 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556591a321a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556591a32190 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556591a32158 <col:102> '_Bool' lvalue Var 0x556591a2ee70 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x556591a32260 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556591a32248 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556591a32228 <col:3> 'void ()' Function 0x5565919d5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556591a322b8 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556591a322a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556591a32280 <col:3> 'void ()' Function 0x5565919d5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556591a32370 <line:752:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x556591a322d8 <col:3> 'int' lvalue Var 0x556591a2e590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x556591a32350 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x556591a32338 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556591a322f8 <col:22> 'int' lvalue Var 0x556591a2e590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x556591a32318 <col:41> 'int' 1
|   |-CallExpr 0x556591a323c8 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556591a323b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556591a32390 <col:3> 'void ()' Function 0x5565919d5410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x556591a32440 <line:754:3, col:36>
|     `-CallExpr 0x556591a32420 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x556591a32408 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x556591a323e8 <col:10> 'void *(void)' Function 0x5565919d4e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x556591a32598 prev 0x556591a2e210 <line:756:1, line:794:1> line:756:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x556591a32500 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x556591a363b8 <line:757:1, line:794:1>
|   |-CallExpr 0x556591a32678 <line:758:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556591a32660 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556591a32640 <col:3> 'void ()' Function 0x5565919d5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556591a326d8 <line:759:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x556591a32698 <col:3> 'int' lvalue Var 0x556591a2f4f0 'y' 'int'
|   | `-IntegerLiteral 0x556591a326b8 <col:7> 'int' 1
|   |-CallExpr 0x556591a32730 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556591a32718 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556591a326f8 <col:3> 'void ()' Function 0x5565919d5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556591a32788 <line:761:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556591a32770 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556591a32750 <col:3> 'void ()' Function 0x5565919d5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556591a327e8 <line:762:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x556591a327a8 <col:3> 'int' lvalue Var 0x556591a2f610 'z' 'int'
|   | `-IntegerLiteral 0x556591a327c8 <col:7> 'int' 1
|   |-CallExpr 0x556591a32840 <line:763:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556591a32828 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556591a32808 <col:3> 'void ()' Function 0x5565919d5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556591a32898 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556591a32880 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556591a32860 <col:3> 'void ()' Function 0x5565919d5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556591a32910 <line:765:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x556591a328b8 <col:3> 'int' lvalue Var 0x556591a2e7d0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x556591a328f8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556591a328d8 <col:25> 'int' lvalue Var 0x556591a2f610 'z' 'int'
|   |-CallExpr 0x556591a32968 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556591a32950 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556591a32930 <col:3> 'void ()' Function 0x5565919d5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556591a329c0 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556591a329a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556591a32988 <col:3> 'void ()' Function 0x5565919d5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556591a32a70 <line:768:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x556591a329e0 <col:3> '_Bool' lvalue Var 0x556591a2f6a8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x556591a32a58 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x556591a32a38 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x556591a32a20 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x556591a32a00 <col:19> 'void *(void)' Function 0x5565919d4e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x556591a32b20 <line:769:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x556591a32a90 <col:3> '_Bool' lvalue Var 0x556591a2f720 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x556591a32b08 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x556591a32ae8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x556591a32ad0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x556591a32ab0 <col:19> 'void *(void)' Function 0x5565919d4e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x556591a32b98 <line:770:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x556591a32b40 <col:3> '_Bool' lvalue Var 0x556591a2eaa8 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x556591a32b80 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556591a32b60 <col:21> '_Bool' lvalue Var 0x556591a2f720 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x556591a32c10 <line:771:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x556591a32bb8 <col:3> 'int' lvalue Var 0x556591a2eb28 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x556591a32bf8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556591a32bd8 <col:15> 'int' lvalue Var 0x556591a2ea10 'a' 'int'
|   |-BinaryOperator 0x556591a33060 <line:772:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x556591a32c30 <col:3> 'int' lvalue Var 0x556591a2ea10 'a' 'int'
|   | `-ConditionalOperator 0x556591a33030 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x556591a32e40 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x556591a32d60 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x556591a32c88 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x556591a32c70 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x556591a32c50 <col:8> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x556591a32d40 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x556591a32cd8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x556591a32cc0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x556591a32ca0 <col:27> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x556591a32d28 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x556591a32d10 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x556591a32cf0 <col:46> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x556591a32e20 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x556591a32db8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x556591a32da0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x556591a32d80 <col:65> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x556591a32e08 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x556591a32df0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x556591a32dd0 <col:84> '_Bool' lvalue Var 0x556591a2eee8 'a$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x556591a33018 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556591a32e60 <col:101> 'int' lvalue Var 0x556591a2ea10 'a' 'int'
|   |   `-ParenExpr 0x556591a32ff8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x556591a32fc8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x556591a32f20 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x556591a32ed8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556591a32ec0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556591a32e80 <col:106> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x556591a32f08 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x556591a32ef0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556591a32ea0 <col:124> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x556591a32f80 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556591a32f40 <col:141> 'int' lvalue Var 0x556591a2f070 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x556591a32fb0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556591a32f60 <col:153> 'int' lvalue Var 0x556591a2f168 'a$w_buff1' 'int'
|   |-BinaryOperator 0x556591a33570 <line:773:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x556591a33080 <col:3> 'int' lvalue Var 0x556591a2f070 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x556591a33540 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x556591a33510 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556591a334f8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556591a330a0 <col:15> '_Bool' lvalue Var 0x556591a2f720 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x556591a33528 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556591a330c0 <col:31> 'int' lvalue Var 0x556591a2f070 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x556591a334d8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x556591a334a8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x556591a332d0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x556591a331f0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x556591a33118 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x556591a33100 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x556591a330e0 <col:45> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x556591a331d0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x556591a33168 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x556591a33150 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x556591a33130 <col:64> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x556591a331b8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x556591a331a0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x556591a33180 <col:83> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x556591a332b0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x556591a33248 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x556591a33230 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x556591a33210 <col:102> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x556591a33298 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x556591a33280 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x556591a33260 <col:121> '_Bool' lvalue Var 0x556591a2eee8 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x556591a33490 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556591a332f0 <col:138> 'int' lvalue Var 0x556591a2f070 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x556591a33470 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x556591a33440 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x556591a333b0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x556591a33368 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x556591a33350 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x556591a33310 <col:151> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x556591a33398 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x556591a33380 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x556591a33330 <col:169> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x556591a33410 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x556591a333d0 <col:186> 'int' lvalue Var 0x556591a2f070 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x556591a33428 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x556591a333f0 <col:198> 'int' lvalue Var 0x556591a2f070 'a$w_buff0' 'int'
|   |-BinaryOperator 0x556591a33a80 <line:774:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x556591a33590 <col:3> 'int' lvalue Var 0x556591a2f168 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x556591a33a50 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x556591a33a20 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556591a33a08 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556591a335b0 <col:15> '_Bool' lvalue Var 0x556591a2f720 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x556591a33a38 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556591a335d0 <col:31> 'int' lvalue Var 0x556591a2f168 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x556591a339e8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x556591a339b8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x556591a337e0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x556591a33700 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x556591a33628 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x556591a33610 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x556591a335f0 <col:45> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x556591a336e0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x556591a33678 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x556591a33660 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x556591a33640 <col:64> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x556591a336c8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x556591a336b0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x556591a33690 <col:83> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x556591a337c0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x556591a33758 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x556591a33740 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x556591a33720 <col:102> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x556591a337a8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x556591a33790 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x556591a33770 <col:121> '_Bool' lvalue Var 0x556591a2eee8 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x556591a339a0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556591a33800 <col:138> 'int' lvalue Var 0x556591a2f168 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x556591a33980 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x556591a33950 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x556591a338c0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x556591a33878 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x556591a33860 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x556591a33820 <col:151> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x556591a338a8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x556591a33890 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x556591a33840 <col:169> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x556591a33920 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x556591a338e0 <col:186> 'int' lvalue Var 0x556591a2f168 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x556591a33938 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x556591a33900 <col:198> 'int' lvalue Var 0x556591a2f168 'a$w_buff1' 'int'
|   |-BinaryOperator 0x556591a34038 <line:775:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x556591a33aa0 <col:3> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x556591a34020 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556591a33ff0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x556591a33f98 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556591a33f80 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556591a33ac0 <col:20> '_Bool' lvalue Var 0x556591a2f720 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556591a33fd8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556591a33fc0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556591a33ae0 <col:36> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x556591a33f60 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x556591a33f30 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x556591a33cf0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556591a33c10 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556591a33b38 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556591a33b20 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556591a33b00 <col:55> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556591a33bf0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556591a33b88 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556591a33b70 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556591a33b50 <col:74> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x556591a33bd8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556591a33bc0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556591a33ba0 <col:93> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556591a33cd0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556591a33c68 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556591a33c50 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556591a33c30 <col:112> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x556591a33cb8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556591a33ca0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556591a33c80 <col:131> '_Bool' lvalue Var 0x556591a2eee8 'a$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x556591a33f18 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556591a33f00 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556591a33d10 <col:148> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x556591a33ee0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x556591a33eb0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x556591a33dd0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556591a33d88 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556591a33d70 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556591a33d30 <col:166> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556591a33db8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556591a33da0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556591a33d50 <col:184> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x556591a33e68 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556591a33e20 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556591a33df0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556591a33e98 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x556591a33e80 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x556591a33e48 <col:212> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556591a34600 <line:776:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x556591a34058 <col:3> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556591a345e8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556591a345b8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x556591a34570 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556591a34558 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556591a34078 <col:20> '_Bool' lvalue Var 0x556591a2f720 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556591a345a0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556591a34588 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556591a34098 <col:36> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x556591a34538 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x556591a34508 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x556591a342a8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556591a341c8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556591a340f0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556591a340d8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556591a340b8 <col:55> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556591a341a8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556591a34140 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556591a34128 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556591a34108 <col:74> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x556591a34190 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556591a34178 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556591a34158 <col:93> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556591a34288 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556591a34220 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556591a34208 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556591a341e8 <col:112> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x556591a34270 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556591a34258 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556591a34238 <col:131> '_Bool' lvalue Var 0x556591a2eee8 'a$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x556591a344f0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556591a344d8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556591a342c8 <col:148> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x556591a344b8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x556591a34488 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x556591a34388 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556591a34340 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556591a34328 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556591a342e8 <col:166> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556591a34370 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556591a34358 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556591a34308 <col:184> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x556591a34458 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556591a343d8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556591a343a8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556591a34470 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x556591a34430 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x556591a34400 <col:219> 'int' 0
|   |-BinaryOperator 0x556591a34ba8 <line:777:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x556591a34620 <col:3> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x556591a34b90 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556591a34b60 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x556591a34b18 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556591a34b00 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556591a34640 <col:20> '_Bool' lvalue Var 0x556591a2f720 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556591a34b48 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556591a34b30 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556591a34660 <col:36> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x556591a34ae0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x556591a34ab0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x556591a34870 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556591a34790 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556591a346b8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556591a346a0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556591a34680 <col:55> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556591a34770 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556591a34708 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556591a346f0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556591a346d0 <col:74> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x556591a34758 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556591a34740 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556591a34720 <col:93> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556591a34850 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556591a347e8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556591a347d0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556591a347b0 <col:112> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x556591a34838 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556591a34820 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556591a34800 <col:131> '_Bool' lvalue Var 0x556591a2eee8 'a$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x556591a34a98 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556591a34a80 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556591a34890 <col:148> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x556591a34a60 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x556591a34a30 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x556591a34950 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556591a34908 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556591a348f0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556591a348b0 <col:166> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556591a34938 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556591a34920 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556591a348d0 <col:184> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x556591a349e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556591a349a0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556591a34970 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556591a34a18 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x556591a34a00 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x556591a349c8 <col:212> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x556591a351a0 <line:778:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x556591a34bc8 <col:3> '_Bool' lvalue Var 0x556591a2eee8 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x556591a35188 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556591a35158 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x556591a35110 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556591a350f8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556591a34be8 <col:20> '_Bool' lvalue Var 0x556591a2f720 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556591a35140 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556591a35128 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556591a34c08 <col:36> '_Bool' lvalue Var 0x556591a2eee8 'a$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x556591a350d8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x556591a350a8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x556591a34e18 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556591a34d38 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556591a34c60 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556591a34c48 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556591a34c28 <col:55> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556591a34d18 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556591a34cb0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556591a34c98 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556591a34c78 <col:74> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x556591a34d00 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556591a34ce8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556591a34cc8 <col:93> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556591a34df8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556591a34d90 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556591a34d78 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556591a34d58 <col:112> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x556591a34de0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556591a34dc8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556591a34da8 <col:131> '_Bool' lvalue Var 0x556591a2eee8 'a$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x556591a35090 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556591a35078 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556591a34e38 <col:148> '_Bool' lvalue Var 0x556591a2eee8 'a$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x556591a35058 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x556591a35028 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x556591a34ef8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556591a34eb0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556591a34e98 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556591a34e58 <col:166> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556591a34ee0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556591a34ec8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556591a34e78 <col:184> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x556591a34ff8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556591a34f48 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556591a34f18 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556591a35010 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x556591a34fd0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x556591a34f70 <col:219> 'int' 0
|   |-BinaryOperator 0x556591a35218 <line:779:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x556591a351c0 <col:3> 'int' lvalue Var 0x556591a2e8f0 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x556591a35200 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556591a351e0 <col:25> 'int' lvalue Var 0x556591a2ea10 'a' 'int'
|   |-BinaryOperator 0x556591a35348 <line:780:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x556591a35238 <col:3> 'int' lvalue Var 0x556591a2ea10 'a' 'int'
|   | `-ConditionalOperator 0x556591a35318 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x556591a352d0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556591a352b8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556591a35258 <col:7> '_Bool' lvalue Var 0x556591a2eaa8 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x556591a352e8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556591a35278 <col:25> 'int' lvalue Var 0x556591a2eb28 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x556591a35300 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x556591a35298 <col:37> 'int' lvalue Var 0x556591a2ea10 'a' 'int'
|   |-BinaryOperator 0x556591a353e0 <line:781:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x556591a35368 <col:3> '_Bool' lvalue Var 0x556591a2eaa8 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x556591a353b8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x556591a35388 <col:28> 'int' 0
|   |-CallExpr 0x556591a35438 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556591a35420 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556591a35400 <col:3> 'void ()' Function 0x5565919d5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556591a35490 <line:783:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556591a35478 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556591a35458 <col:3> 'void ()' Function 0x5565919d5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556591a35778 <line:784:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x556591a354b0 <col:3> 'int' lvalue Var 0x556591a2ea10 'a' 'int'
|   | `-ConditionalOperator 0x556591a35748 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x556591a35570 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x556591a35528 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x556591a35510 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x556591a354d0 <col:7> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x556591a35558 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x556591a35540 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x556591a354f0 <col:25> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x556591a35730 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556591a35590 <col:42> 'int' lvalue Var 0x556591a2f070 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x556591a35710 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x556591a356e0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x556591a35650 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x556591a35608 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556591a355f0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556591a355b0 <col:55> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x556591a35638 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x556591a35620 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556591a355d0 <col:73> '_Bool' lvalue Var 0x556591a2eee8 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x556591a356b0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556591a35670 <col:90> 'int' lvalue Var 0x556591a2f168 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x556591a356c8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556591a35690 <col:102> 'int' lvalue Var 0x556591a2ea10 'a' 'int'
|   |-BinaryOperator 0x556591a35980 <line:785:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556591a35798 <col:3> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x556591a35968 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556591a35938 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556591a35858 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556591a35810 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556591a357f8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556591a357b8 <col:20> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556591a35840 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556591a35828 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556591a357d8 <col:38> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x556591a358f0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556591a358a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556591a35878 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556591a35920 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556591a35908 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556591a358d0 <col:66> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556591a35c68 <line:786:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556591a359a0 <col:3> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556591a35c50 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556591a35c20 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556591a35b40 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556591a35a60 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556591a35a18 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556591a35a00 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556591a359c0 <col:20> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556591a35a48 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556591a35a30 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556591a359e0 <col:38> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x556591a35b20 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556591a35ad8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556591a35ac0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556591a35a80 <col:56> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556591a35b08 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556591a35af0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556591a35aa0 <col:74> '_Bool' lvalue Var 0x556591a2eee8 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x556591a35bd8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556591a35b90 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556591a35b60 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556591a35c08 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556591a35bf0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556591a35bb8 <col:102> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x556591a35e70 <line:787:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556591a35c88 <col:3> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x556591a35e58 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556591a35e28 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556591a35d48 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556591a35d00 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556591a35ce8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556591a35ca8 <col:20> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556591a35d30 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556591a35d18 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556591a35cc8 <col:38> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x556591a35de0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556591a35d98 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556591a35d68 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556591a35e10 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556591a35df8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556591a35dc0 <col:66> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x556591a36170 <line:788:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556591a35e90 <col:3> '_Bool' lvalue Var 0x556591a2eee8 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x556591a36158 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556591a36128 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556591a36048 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556591a35f50 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556591a35f08 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556591a35ef0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556591a35eb0 <col:20> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556591a35f38 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556591a35f20 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556591a35ed0 <col:38> '_Bool' lvalue Var 0x556591a2ed08 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x556591a36028 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556591a35fe0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556591a35fb0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556591a35f70 <col:56> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556591a36010 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556591a35ff8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556591a35f90 <col:74> '_Bool' lvalue Var 0x556591a2eee8 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x556591a360e0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556591a36098 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556591a36068 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556591a36110 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556591a360f8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556591a360c0 <col:102> '_Bool' lvalue Var 0x556591a2eee8 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x556591a361c8 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556591a361b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556591a36190 <col:3> 'void ()' Function 0x5565919d5410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556591a36220 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556591a36208 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556591a361e8 <col:3> 'void ()' Function 0x5565919d5350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556591a362d8 <line:791:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x556591a36240 <col:3> 'int' lvalue Var 0x556591a2e590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x556591a362b8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x556591a362a0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556591a36260 <col:22> 'int' lvalue Var 0x556591a2e590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x556591a36280 <col:41> 'int' 1
|   |-CallExpr 0x556591a36330 <line:792:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556591a36318 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556591a362f8 <col:3> 'void ()' Function 0x5565919d5410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x556591a363a8 <line:793:3, col:36>
|     `-CallExpr 0x556591a36388 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x556591a36370 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x556591a36350 <col:10> 'void *(void)' Function 0x5565919d4e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x556591a36508 prev 0x556591a2e2d8 <line:795:1, line:797:1> line:795:6 fence 'void ()'
| `-CompoundStmt 0x556591a365a8 <line:796:1, line:797:1>
|-FunctionDecl 0x556591a365d8 prev 0x556591a2e398 <line:798:1, line:800:1> line:798:6 isync 'void ()'
| `-CompoundStmt 0x556591a36678 <line:799:1, line:800:1>
|-FunctionDecl 0x556591a366a8 prev 0x556591a2e458 <line:801:1, line:803:1> line:801:6 lwfence 'void ()'
| `-CompoundStmt 0x556591a36748 <line:802:1, line:803:1>
`-FunctionDecl 0x556591a367b8 <line:804:1, line:828:1> line:804:5 main 'int ()'
  `-CompoundStmt 0x556591a38498 <line:805:1, line:828:1>
    |-DeclStmt 0x556591a368d0 <line:806:3, col:18>
    | `-VarDecl 0x556591a36868 <col:3, col:13> col:13 used t1015 'pthread_t':'unsigned long'
    |-CallExpr 0x556591a36ad8 <line:807:3, col:54> 'int'
    | |-ImplicitCastExpr 0x556591a36ac0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556591a368e8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x556591a158f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x556591a36928 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x556591a36908 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x556591a36868 't1015' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x556591a36b18 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x556591a369a0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x556591a36978 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x556591a36940 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x556591a36b30 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556591a369c0 <col:39> 'void *(void *)' Function 0x556591a2f838 'P0' 'void *(void *)'
    | `-ParenExpr 0x556591a36a40 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x556591a36a18 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x556591a369e0 <col:52> 'int' 0
    |-DeclStmt 0x556591a36bc0 <line:808:3, col:18>
    | `-VarDecl 0x556591a36b58 <col:3, col:13> col:13 used t1016 'pthread_t':'unsigned long'
    |-CallExpr 0x556591a36d68 <line:809:3, col:54> 'int'
    | |-ImplicitCastExpr 0x556591a36d50 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556591a36bd8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x556591a158f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x556591a36c18 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x556591a36bf8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x556591a36b58 't1016' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x556591a36da8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x556591a36c90 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x556591a36c68 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x556591a36c30 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x556591a36dc0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556591a36cb0 <col:39> 'void *(void *)' Function 0x556591a31218 'P1' 'void *(void *)'
    | `-ParenExpr 0x556591a36d30 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x556591a36d08 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x556591a36cd0 <col:52> 'int' 0
    |-DeclStmt 0x556591a36e50 <line:810:3, col:18>
    | `-VarDecl 0x556591a36de8 <col:3, col:13> col:13 used t1017 'pthread_t':'unsigned long'
    |-CallExpr 0x556591a37008 <line:811:3, col:54> 'int'
    | |-ImplicitCastExpr 0x556591a36ff0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556591a36e68 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x556591a158f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x556591a36ea8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x556591a36e88 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x556591a36de8 't1017' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x556591a37048 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x556591a36f20 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x556591a36ef8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x556591a36ec0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x556591a37060 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556591a36f40 <col:39> 'void *(void *)' Function 0x556591a32598 'P2' 'void *(void *)'
    | `-ParenExpr 0x556591a36fc0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x556591a36f98 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x556591a36f60 <col:52> 'int' 0
    |-CallExpr 0x556591a370b0 <line:812:3, col:27> 'void'
    | `-ImplicitCastExpr 0x556591a37098 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556591a37078 <col:3> 'void ()' Function 0x5565919d5350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x556591a37180 <line:813:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x556591a370d0 <col:3> '_Bool' lvalue Var 0x556591a2f258 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x556591a37168 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x556591a37148 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x556591a37130 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x556591a370f0 <col:21> 'int' lvalue Var 0x556591a2e590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x556591a37110 <col:41> 'int' 3
    |-CallExpr 0x556591a371d8 <line:814:3, col:25> 'void'
    | `-ImplicitCastExpr 0x556591a371c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556591a371a0 <col:3> 'void ()' Function 0x5565919d5410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x556591a37250 <line:815:3, col:36> 'void'
    | |-ImplicitCastExpr 0x556591a37238 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556591a371f8 <col:3> 'void (int)' Function 0x5565919d4ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x556591a37290 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x556591a37278 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x556591a37218 <col:21> '_Bool' lvalue Var 0x556591a2f258 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x556591a372e0 <line:816:3, col:27> 'void'
    | `-ImplicitCastExpr 0x556591a372c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556591a372a8 <col:3> 'void ()' Function 0x5565919d5350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x556591a375c8 <line:817:3, col:103> 'int' '='
    | |-DeclRefExpr 0x556591a37300 <col:3> 'int' lvalue Var 0x556591a2ea10 'a' 'int'
    | `-ConditionalOperator 0x556591a37598 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x556591a373c0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x556591a37378 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x556591a37360 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x556591a37320 <col:7> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x556591a373a8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x556591a37390 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x556591a37340 <col:25> '_Bool' lvalue Var 0x556591a2eba0 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x556591a37580 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x556591a373e0 <col:42> 'int' lvalue Var 0x556591a2f070 'a$w_buff0' 'int'
    |   `-ParenExpr 0x556591a37560 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x556591a37530 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x556591a374a0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x556591a37458 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x556591a37440 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x556591a37400 <col:55> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x556591a37488 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x556591a37470 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x556591a37420 <col:73> '_Bool' lvalue Var 0x556591a2ed80 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x556591a37500 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x556591a374c0 <col:90> 'int' lvalue Var 0x556591a2f168 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x556591a37518 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x556591a374e0 <col:102> 'int' lvalue Var 0x556591a2ea10 'a' 'int'
    |-BinaryOperator 0x556591a377d0 <line:818:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x556591a375e8 <col:3> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x556591a377b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556591a37788 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x556591a376a8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x556591a37660 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x556591a37648 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x556591a37608 <col:20> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x556591a37690 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x556591a37678 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x556591a37628 <col:38> '_Bool' lvalue Var 0x556591a2eba0 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x556591a37740 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x556591a376f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x556591a376c8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x556591a37770 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x556591a37758 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x556591a37720 <col:66> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x556591a37ab8 <line:819:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x556591a377f0 <col:3> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x556591a37aa0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556591a37a70 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x556591a37990 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x556591a378b0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x556591a37868 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x556591a37850 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x556591a37810 <col:20> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x556591a37898 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x556591a37880 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x556591a37830 <col:38> '_Bool' lvalue Var 0x556591a2eba0 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x556591a37970 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x556591a37928 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x556591a37910 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x556591a378d0 <col:56> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x556591a37958 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x556591a37940 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x556591a378f0 <col:74> '_Bool' lvalue Var 0x556591a2ed80 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x556591a37a28 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x556591a379e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x556591a379b0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x556591a37a58 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x556591a37a40 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x556591a37a08 <col:102> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x556591a37cc0 <line:820:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x556591a37ad8 <col:3> '_Bool' lvalue Var 0x556591a2eba0 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x556591a37ca8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556591a37c78 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x556591a37b98 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x556591a37b50 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x556591a37b38 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x556591a37af8 <col:20> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x556591a37b80 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x556591a37b68 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x556591a37b18 <col:38> '_Bool' lvalue Var 0x556591a2eba0 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x556591a37c30 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x556591a37be8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x556591a37bb8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x556591a37c60 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x556591a37c48 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x556591a37c10 <col:66> '_Bool' lvalue Var 0x556591a2eba0 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x556591a37fa8 <line:821:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x556591a37ce0 <col:3> '_Bool' lvalue Var 0x556591a2ed80 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x556591a37f90 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556591a37f60 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x556591a37e80 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x556591a37da0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x556591a37d58 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x556591a37d40 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x556591a37d00 <col:20> '_Bool' lvalue Var 0x556591a2f0e8 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x556591a37d88 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x556591a37d70 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x556591a37d20 <col:38> '_Bool' lvalue Var 0x556591a2eba0 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x556591a37e60 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x556591a37e18 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x556591a37e00 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x556591a37dc0 <col:56> '_Bool' lvalue Var 0x556591a2f1e0 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x556591a37e48 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x556591a37e30 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x556591a37de0 <col:74> '_Bool' lvalue Var 0x556591a2ed80 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x556591a37f18 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x556591a37ed0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x556591a37ea0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x556591a37f48 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x556591a37f30 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x556591a37ef8 <col:102> '_Bool' lvalue Var 0x556591a2ed80 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x556591a38018 <line:822:3, col:25> 'void'
    | `-ImplicitCastExpr 0x556591a38000 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556591a37fc8 <col:3> 'void ()' Function 0x5565919d5410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x556591a38070 <line:823:3, col:27> 'void'
    | `-ImplicitCastExpr 0x556591a38058 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556591a38038 <col:3> 'void ()' Function 0x5565919d5350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x556591a38340 <line:824:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x556591a38090 <col:3> '_Bool' lvalue Var 0x556591a2f2d0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x556591a38328 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x556591a38310 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x556591a382f0 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x556591a382d0 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x556591a38238 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x556591a381a0 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x556591a38108 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x556591a380f0 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x556591a380b0 <col:23> 'int' lvalue Var 0x556591a2f3d0 'x' 'int'
    |         | | | `-IntegerLiteral 0x556591a380d0 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x556591a38180 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x556591a38168 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x556591a38128 <col:33> 'int' lvalue Var 0x556591a2e6b0 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x556591a38148 <col:56> 'int' 0
    |         | `-BinaryOperator 0x556591a38218 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x556591a38200 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x556591a381c0 <col:61> 'int' lvalue Var 0x556591a2e7d0 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x556591a381e0 <col:84> 'int' 1
    |         `-BinaryOperator 0x556591a382b0 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x556591a38298 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x556591a38258 <col:89> 'int' lvalue Var 0x556591a2e8f0 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x556591a38278 <col:112> 'int' 0
    |-CallExpr 0x556591a38398 <line:825:3, col:25> 'void'
    | `-ImplicitCastExpr 0x556591a38380 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556591a38360 <col:3> 'void ()' Function 0x5565919d5410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x556591a38410 <line:826:3, col:36> 'void'
    | |-ImplicitCastExpr 0x556591a383f8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556591a383b8 <col:3> 'void (int)' Function 0x5565919d50d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x556591a38450 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x556591a38438 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x556591a383d8 <col:21> '_Bool' lvalue Var 0x556591a2f2d0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x556591a38488 <line:827:3, col:10>
      `-IntegerLiteral 0x556591a38468 <col:10> 'int' 0
