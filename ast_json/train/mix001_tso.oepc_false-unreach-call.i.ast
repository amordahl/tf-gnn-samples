TranslationUnitDecl 0x55c9b0b4bf88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55c9b0b4c848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55c9b0b4c520 '__int128'
|-TypedefDecl 0x55c9b0b4c8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55c9b0b4c540 'unsigned __int128'
|-TypedefDecl 0x55c9b0b4cbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55c9b0b4c990 'struct __NSConstantString_tag'
|   `-Record 0x55c9b0b4c910 '__NSConstantString_tag'
|-TypedefDecl 0x55c9b0b4cc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55c9b0b4cc20 'char *'
|   `-BuiltinType 0x55c9b0b4c020 'char'
|-TypedefDecl 0x55c9b0b8bb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55c9b0b4cf00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55c9b0b4cd40 'struct __va_list_tag'
|     `-Record 0x55c9b0b4ccc0 '__va_list_tag'
|-FunctionDecl 0x55c9b0b8bc80 <pthread-wmm/mix001_tso.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55c9b0b8be50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55c9b0b8bd80 <col:31> col:34 'int'
|-FunctionDecl 0x55c9b0b8bfc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55c9b0b8c0f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55c9b0b8c238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55c9b0b8c1a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55c9b0b8c468 <col:40, col:99>
|   |-IfStmt 0x55c9b0b8c438 <col:42, col:88>
|   | |-UnaryOperator 0x55c9b0b8c318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55c9b0b8c300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55c9b0b8c2e0 <col:47> 'int' lvalue ParmVar 0x55c9b0b8c1a8 'expression' 'int'
|   | `-CompoundStmt 0x55c9b0b8c420 <col:59, col:88>
|   |   `-LabelStmt 0x55c9b0b8c408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55c9b0b8c398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55c9b0b8c380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55c9b0b8c330 <col:68> 'void () __attribute__((noreturn))' Function 0x55c9b0b8c0f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55c9b0b8c450 <col:89>
|   `-ReturnStmt 0x55c9b0b8c458 <col:91>
|-FunctionDecl 0x55c9b0b8c4b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55c9b0b8c570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55c9b0b8c8f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55c9b0b8c628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55c9b0b8c6a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55c9b0b8c728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55c9b0b8c7a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55c9b0b8c9b0 <line:11:22>
|-FunctionDecl 0x55c9b0bb1f10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55c9b0b8ca20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55c9b0b8caa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55c9b0bb1d40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55c9b0bb1dc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55c9b0bb1fd0 <line:14:22>
|-FunctionDecl 0x55c9b0bb2280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55c9b0bb2040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55c9b0bb20c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55c9b0bb2140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55c9b0bb2338 <line:16:22>
|-TypedefDecl 0x55c9b0bb23a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55c9b0b4c0e0 'unsigned char'
|-TypedefDecl 0x55c9b0bb2418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55c9b0b4c100 'unsigned short'
|-TypedefDecl 0x55c9b0bb2488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55c9b0b4c120 'unsigned int'
|-TypedefDecl 0x55c9b0bb24f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55c9b0b4c140 'unsigned long'
|-TypedefDecl 0x55c9b0bb2568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55c9b0b4c040 'signed char'
|-TypedefDecl 0x55c9b0bb25d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55c9b0b4c0e0 'unsigned char'
|-TypedefDecl 0x55c9b0bb2648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55c9b0b4c060 'short'
|-TypedefDecl 0x55c9b0bb26b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55c9b0b4c100 'unsigned short'
|-TypedefDecl 0x55c9b0bb2728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55c9b0b4c080 'int'
|-TypedefDecl 0x55c9b0bb2798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55c9b0b4c120 'unsigned int'
|-TypedefDecl 0x55c9b0bb2808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55c9b0b4c0a0 'long'
|-TypedefDecl 0x55c9b0bb2878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55c9b0b4c140 'unsigned long'
|-TypedefDecl 0x55c9b0bb28e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55c9b0b4c0a0 'long'
|-TypedefDecl 0x55c9b0bb2958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55c9b0b4c140 'unsigned long'
|-TypedefDecl 0x55c9b0bb29c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55c9b0b4c140 'unsigned long'
|-TypedefDecl 0x55c9b0bb2a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55c9b0b4c120 'unsigned int'
|-TypedefDecl 0x55c9b0bb2aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55c9b0b4c120 'unsigned int'
|-TypedefDecl 0x55c9b0bb2b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55c9b0b4c140 'unsigned long'
|-TypedefDecl 0x55c9b0bb2b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55c9b0b4c140 'unsigned long'
|-TypedefDecl 0x55c9b0bb2bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55c9b0b4c120 'unsigned int'
|-TypedefDecl 0x55c9b0bb2c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55c9b0b4c140 'unsigned long'
|-TypedefDecl 0x55c9b0bb2cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55c9b0b4c0a0 'long'
|-TypedefDecl 0x55c9b0bb2d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55c9b0b4c0a0 'long'
|-TypedefDecl 0x55c9b0bb2dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55c9b0b4c080 'int'
|-RecordDecl 0x55c9b0bb2e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55c9b0bb2f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55c9b0bb3030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55c9b0bb2fd0 'struct __fsid_t' sugar
|   `-RecordType 0x55c9b0bb2eb0 '__fsid_t'
|     `-Record 0x55c9b0bb2e30 ''
|-TypedefDecl 0x55c9b0bb30b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55c9b0b4c0a0 'long'
|-TypedefDecl 0x55c9b0bb3128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55c9b0b4c140 'unsigned long'
|-TypedefDecl 0x55c9b0bb3198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55c9b0b4c140 'unsigned long'
|-TypedefDecl 0x55c9b0bb3208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55c9b0b4c120 'unsigned int'
|-TypedefDecl 0x55c9b0bb3278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55c9b0b4c0a0 'long'
|-TypedefDecl 0x55c9b0bb32e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55c9b0b4c120 'unsigned int'
|-TypedefDecl 0x55c9b0bb3358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55c9b0b4c0a0 'long'
|-TypedefDecl 0x55c9b0bb33c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55c9b0b4c080 'int'
|-TypedefDecl 0x55c9b0bb3438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55c9b0b4c080 'int'
|-TypedefDecl 0x55c9b0bb34a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55c9b0b4c080 'int'
|-TypedefDecl 0x55c9b0bb3518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55c9b0b4c7a0 'void *'
|   `-BuiltinType 0x55c9b0b4bfe0 'void'
|-TypedefDecl 0x55c9b0bb3588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55c9b0b4c0a0 'long'
|-TypedefDecl 0x55c9b0bb35f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55c9b0b4c0a0 'long'
|-TypedefDecl 0x55c9b0bb3668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55c9b0b4c0a0 'long'
|-TypedefDecl 0x55c9b0bb36d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55c9b0b4c140 'unsigned long'
|-TypedefDecl 0x55c9b0bb3748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55c9b0b4c140 'unsigned long'
|-TypedefDecl 0x55c9b0bb37b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55c9b0b4c140 'unsigned long'
|-TypedefDecl 0x55c9b0bb3828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55c9b0b4c140 'unsigned long'
|-TypedefDecl 0x55c9b0bb3898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55c9b0b4c0a0 'long'
|-TypedefDecl 0x55c9b0bb3908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55c9b0b4c0a0 'long'
|-TypedefDecl 0x55c9b0bb3978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55c9b0b4c0a0 'long'
|-TypedefDecl 0x55c9b0bb39e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55c9b0b4c140 'unsigned long'
|-TypedefDecl 0x55c9b0bb3a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55c9b0bb3a40 '__off64_t' sugar
|   |-Typedef 0x55c9b0bb2d68 '__off64_t'
|   `-BuiltinType 0x55c9b0b4c0a0 'long'
|-TypedefDecl 0x55c9b0bb3b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55c9b0bb3b30 '__quad_t *'
|   `-TypedefType 0x55c9b0bb3ad0 '__quad_t' sugar
|     |-Typedef 0x55c9b0bb28e8 '__quad_t'
|     `-BuiltinType 0x55c9b0b4c0a0 'long'
|-TypedefDecl 0x55c9b0bb3be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55c9b0b4cc20 'char *'
|   `-BuiltinType 0x55c9b0b4c020 'char'
|-TypedefDecl 0x55c9b0bb3c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55c9b0b4c0a0 'long'
|-TypedefDecl 0x55c9b0bb3cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55c9b0b4c120 'unsigned int'
|-FunctionDecl 0x55c9b0bb3e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55c9b0bb3d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55c9b0bb4148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55c9b0bb4138 <line:73:3, col:34>
|     `-CallExpr 0x55c9b0bb40f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55c9b0bb40e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55c9b0bb4070 <col:10> '<builtin fn type>' Function 0x55c9b0bb3ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55c9b0bb4120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55c9b0bb4090 <col:29> 'unsigned int' lvalue ParmVar 0x55c9b0bb3d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x55c9b0bb3ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55c9b0bb3f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55c9b0bb3ff0 <col:10> Implicit
| `-ConstAttr 0x55c9b0bb4048 <col:10> Implicit
|-FunctionDecl 0x55c9b0bb42a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55c9b0bb4198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55c9b0bb45b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55c9b0bb45a8 <line:78:3, col:34>
|     `-CallExpr 0x55c9b0bb4568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55c9b0bb4550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55c9b0bb44d8 <col:10> '<builtin fn type>' Function 0x55c9b0bb4348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55c9b0bb4590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55c9b0bb44f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55c9b0bb4198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55c9b0bb4348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55c9b0bb43e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55c9b0bb4458 <col:10> Implicit
| `-ConstAttr 0x55c9b0bb44b0 <col:10> Implicit
|-TypedefDecl 0x55c9b0bb45e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55c9b0b4c140 'unsigned long'
|-TypedefDecl 0x55c9b0bb4678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55c9b0bb4640 '__time_t' sugar
|   |-Typedef 0x55c9b0bb3278 '__time_t'
|   `-BuiltinType 0x55c9b0b4c0a0 'long'
|-RecordDecl 0x55c9b0bb46d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55c9b0bb4788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55c9b0bb4818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55c9b0bb48a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55c9b0bb4870 '__pid_t' sugar
|   |-Typedef 0x55c9b0bb2dd8 '__pid_t'
|   `-BuiltinType 0x55c9b0b4c080 'int'
|-RecordDecl 0x55c9b0bb4900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55c9b0bb49c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55c9b0bb4a10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55c9b0bb4ad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55c9b0bb4b38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55c9b0b4c140 'unsigned long'
|-RecordDecl 0x55c9b0bb4b90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55c9b0bb6e70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55c9b0bb6f20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55c9b0bb6ec0 'struct cpu_set_t' sugar
|   `-RecordType 0x55c9b0bb4c10 'cpu_set_t'
|     `-Record 0x55c9b0bb4b90 ''
|-FunctionDecl 0x55c9b0bb71f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55c9b0bb6fc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55c9b0bb70d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55c9b0bb72a8 <line:108:19>
|-FunctionDecl 0x55c9b0bb7480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55c9b0bb7310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55c9b0bb7528 <col:69>
|-FunctionDecl 0x55c9b0bb76a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55c9b0bb7590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55c9b0bb7748 <col:64>
|-FunctionDecl 0x55c9b0bb7a08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55c9b0bb77b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55c9b0bb78e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55c9b0bb7ab8 <line:114:22>
|-FunctionDecl 0x55c9b0bb7e60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55c9b0bb7b20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55c9b0bb7c18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55c9b0bb7f10 <col:88>
|-FunctionDecl 0x55c9b0bb81c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55c9b0bb7f78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55c9b0bb7ff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55c9b0bb8088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55c9b0bb8280 <col:62>
|-FunctionDecl 0x55c9b0bb83f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55c9b0bb82e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55c9b0bb84a0 <col:63>
|-FunctionDecl 0x55c9b0bb85c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55c9b0bb8668 <col:47>
|-FunctionDecl 0x55c9b0bb8770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55c9b0bb86d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55c9b0bb8818 <col:69>
|-FunctionDecl 0x55c9b0bb8920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55c9b0bb8888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55c9b0bb89c8 <col:69>
|-FunctionDecl 0x55c9b0bb8c88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55c9b0bb8a30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55c9b0bb8b68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55c9b0bb8d38 <col:88>
|-TypedefDecl 0x55c9b0bb8dc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55c9b0bb8d90 '__clock_t' sugar
|   |-Typedef 0x55c9b0bb30b8 '__clock_t'
|   `-BuiltinType 0x55c9b0b4c0a0 'long'
|-TypedefDecl 0x55c9b0bb97e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55c9b0bb8e20 '__clockid_t' sugar
|   |-Typedef 0x55c9b0bb34a8 '__clockid_t'
|   `-BuiltinType 0x55c9b0b4c080 'int'
|-TypedefDecl 0x55c9b0bb9878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55c9b0bb9840 '__timer_t' sugar
|   |-Typedef 0x55c9b0bb3518 '__timer_t'
|   `-PointerType 0x55c9b0b4c7a0 'void *'
|     `-BuiltinType 0x55c9b0b4bfe0 'void'
|-RecordDecl 0x55c9b0bb98d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55c9b0bb9990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55c9b0bb99f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55c9b0bb9a60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55c9b0bb9ac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55c9b0bb9b30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55c9b0bb9b98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55c9b0bb9c00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55c9b0bb9c68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55c9b0bb9cd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55c9b0bb9d38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55c9b0bb9da0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55c9b0bb9df0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55c9b0bb9eb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55c9b0bb9f28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55c9b0bb9fd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55c9b0bba1a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55c9b0bba240 <col:45>
|-FunctionDecl 0x55c9b0bba420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55c9b0bba310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55c9b0bba4c8 <col:54>
|-FunctionDecl 0x55c9b0bba6c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55c9b0bba530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55c9b0bba5a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55c9b0bba778 <line:158:22>
| `-ConstAttr 0x55c9b0bbb410 <col:63>
|-FunctionDecl 0x55c9b0bbb610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55c9b0bbb508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55c9b0bbb6b8 <col:56>
|-FunctionDecl 0x55c9b0bbba60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55c9b0bbb728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55c9b0bbb7a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55c9b0bbb820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55c9b0bbb918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55c9b0bbbb20 <col:54>
|-RecordDecl 0x55c9b0bbbb78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55c9b0bbbc28 parent 0x55c9b0b4bf88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55c9b0bbbe88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55c9b0bbbf28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55c9b0bbbf90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55c9b0bbbff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55c9b0bbc0e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55c9b0bbc208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55c9b0bbc1b0 'struct __locale_struct *'
|   `-ElaboratedType 0x55c9b0bbc140 'struct __locale_struct' sugar
|     `-RecordType 0x55c9b0bbbc00 'struct __locale_struct'
|       `-Record 0x55c9b0bbbb78 '__locale_struct'
|-TypedefDecl 0x55c9b0bbc2b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55c9b0bbc280 '__locale_t' sugar
|   |-Typedef 0x55c9b0bbc208 '__locale_t'
|   `-PointerType 0x55c9b0bbc1b0 'struct __locale_struct *'
|     `-ElaboratedType 0x55c9b0bbc140 'struct __locale_struct' sugar
|       `-RecordType 0x55c9b0bbbc00 'struct __locale_struct'
|         `-Record 0x55c9b0bbbb78 '__locale_struct'
|-FunctionDecl 0x55c9b0bbc6b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55c9b0bbc328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55c9b0bbc3a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55c9b0bbc438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55c9b0bbc4c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55c9b0bbc540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55c9b0bbc778 <col:40>
|-FunctionDecl 0x55c9b0bbc968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55c9b0bbc840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55c9b0bbca10 <col:66>
|-FunctionDecl 0x55c9b0bbcb20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55c9b0bbca78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55c9b0bbcbc8 <col:69>
|-FunctionDecl 0x55c9b0bbcdf8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55c9b0bbcc30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55c9b0bbccc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55c9b0bbcea8 <col:52>
|-FunctionDecl 0x55c9b0bbd050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55c9b0bbcf10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55c9b0bbcfa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55c9b0bbd100 <col:55>
|-FunctionDecl 0x55c9b0bbd298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55c9b0bbd180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55c9b0bbd340 <col:62>
|-FunctionDecl 0x55c9b0bbd578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55c9b0bbd3a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55c9b0bbd620 <col:60>
|-FunctionDecl 0x55c9b0bbd848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55c9b0bbd6a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55c9b0bbd720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55c9b0bbd8f8 <col:44>
|-FunctionDecl 0x55c9b0bbdb08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55c9b0bbd960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55c9b0bbd9e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55c9b0bbdbb8 <col:49>
|-VarDecl 0x55c9b0bbdcb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55c9b0bbdd38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55c9b0bbddb8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55c9b0bbde80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55c9b0bbdfb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55c9b0bbe050 <col:42>
|-VarDecl 0x55c9b0bbe0c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55c9b0bbe140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55c9b0bbe2c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55c9b0bbe1b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55c9b0bbe370 <col:57>
|-FunctionDecl 0x55c9b0bbf4f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55c9b0bbe3f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55c9b0bbf598 <col:56>
|-FunctionDecl 0x55c9b0bbf6a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55c9b0bbf618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55c9b0bbf750 <col:59>
|-FunctionDecl 0x55c9b0bbf858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55c9b0bbf7c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55c9b0bbf900 <col:48>
| `-ConstAttr 0x55c9b0bbf958 <col:89>
|-FunctionDecl 0x55c9b0bbfbb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55c9b0bbfa08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55c9b0bbfa98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55c9b0bbfe18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55c9b0bbfca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55c9b0bbfd38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55c9b0bbfec8 <col:88>
|-FunctionDecl 0x55c9b0bc0060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55c9b0bbff30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55c9b0bbffc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55c9b0bc0110 <col:88>
|-FunctionDecl 0x55c9b0bc0328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55c9b0bc0178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55c9b0bc0208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55c9b0bc03d8 <line:209:22>
|-FunctionDecl 0x55c9b0bc0778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55c9b0bc0440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55c9b0bc0500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55c9b0bc0590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55c9b0bc0620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55c9b0bc0a78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55c9b0bc0878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55c9b0bc0950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55c9b0bc0b28 <col:85>
|-FunctionDecl 0x55c9b0bc0f18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55c9b0bc0b90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55c9b0bc0cc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55c9b0bc0dd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55c9b0bc0fd0 <col:52>
|-FunctionDecl 0x55c9b0bc1148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55c9b0bc1038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55c9b0bc11f0 <col:61>
|-FunctionDecl 0x55c9b0bc1668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55c9b0bc1258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55c9b0bc12d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55c9b0bc1408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55c9b0bc1510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55c9b0bc1728 <col:62>
|-FunctionDecl 0x55c9b0bc1948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55c9b0bc1790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55c9b0bc1820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55c9b0bc19f8 <line:222:22>
|-FunctionDecl 0x55c9b0bc1af8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55c9b0bc1a60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55c9b0bc1ba0 <col:65>
|-TypedefDecl 0x55c9b0bc1c10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55c9b0b4c140 'unsigned long'
|-RecordDecl 0x55c9b0bc1c68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55c9b0bc1db0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55c9b0bc1e18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55c9b0bc1ec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55c9b0bc1e70 'union pthread_attr_t' sugar
|   `-RecordType 0x55c9b0bc1cf0 'union pthread_attr_t'
|     `-Record 0x55c9b0bc1c68 'pthread_attr_t'
|-RecordDecl 0x55c9b0bc1f20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55c9b0bc2098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55c9b0bc2110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55c9b0bc21c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55c9b0bc2160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55c9b0bc1fa0 'struct __pthread_internal_list'
|     `-Record 0x55c9b0bc1f20 '__pthread_internal_list'
|-RecordDecl 0x55c9b0bc2230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55c9b0bc22d8 parent 0x55c9b0b4bf88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55c9b0bc23b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55c9b0bc2418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55c9b0bc2480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55c9b0bc6530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55c9b0bc6598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55c9b0bc6600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55c9b0bc6688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55c9b0bc6740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55c9b0bc6830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55c9b0bc6898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55c9b0bc6a20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55c9b0bc69c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55c9b0bc22b0 'pthread_mutex_t'
|     `-Record 0x55c9b0bc2230 ''
|-RecordDecl 0x55c9b0bc6a90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55c9b0bc6bd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55c9b0bc6c38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55c9b0bc6cf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55c9b0bc6c90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55c9b0bc6b10 'pthread_mutexattr_t'
|     `-Record 0x55c9b0bc6a90 ''
|-RecordDecl 0x55c9b0bc6d60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55c9b0bc6e08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55c9b0bc6ed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55c9b0bc6f38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55c9b0bc6fa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55c9b0bc7008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55c9b0bc7070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55c9b0bc70d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55c9b0bc7140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55c9b0bc71a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55c9b0bc7260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix001_tso.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix001_tso.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55c9b0bc7350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55c9b0bc73b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55c9b0bc7540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55c9b0bc7490 'union pthread_cond_t' sugar
|   `-RecordType 0x55c9b0bc6de0 'pthread_cond_t'
|     `-Record 0x55c9b0bc6d60 ''
|-RecordDecl 0x55c9b0bc75b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55c9b0bc76b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55c9b0bc7718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55c9b0bc77d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55c9b0bc7770 'union pthread_condattr_t' sugar
|   `-RecordType 0x55c9b0bc7630 'pthread_condattr_t'
|     `-Record 0x55c9b0bc75b0 ''
|-TypedefDecl 0x55c9b0bc7858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55c9b0b4c120 'unsigned int'
|-TypedefDecl 0x55c9b0bc78c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55c9b0b4c080 'int'
|-RecordDecl 0x55c9b0bc7920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55c9b0bc79c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55c9b0bc7a90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55c9b0bc7af8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55c9b0bc7b60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55c9b0bc7bc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55c9b0bc7c30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55c9b0bc7c98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55c9b0bc7d00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55c9b0bc7d68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55c9b0bc7dd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55c9b0bc7e38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55c9b0bc7ea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55c9b0bc7f50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix001_tso.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix001_tso.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x55c9b0bc7ff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55c9b0bc8060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55c9b0bc81b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55c9b0bc8150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55c9b0bc79a0 'pthread_rwlock_t'
|     `-Record 0x55c9b0bc7920 ''
|-RecordDecl 0x55c9b0bc8220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55c9b0bc8360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55c9b0bc83c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55c9b0bc8480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55c9b0bc8420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55c9b0bc82a0 'pthread_rwlockattr_t'
|     `-Record 0x55c9b0bc8220 ''
|-TypedefDecl 0x55c9b0bca560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55c9b0b4c084 'volatile int' volatile
|   `-BuiltinType 0x55c9b0b4c080 'int'
|-RecordDecl 0x55c9b0bca5b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55c9b0bca700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55c9b0bca768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55c9b0bca820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55c9b0bca7c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55c9b0bca640 'pthread_barrier_t'
|     `-Record 0x55c9b0bca5b8 ''
|-RecordDecl 0x55c9b0bca890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55c9b0bca990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55c9b0bca9f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55c9b0bcaab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55c9b0bcaa50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55c9b0bca910 'pthread_barrierattr_t'
|     `-Record 0x55c9b0bca890 ''
|-TypedefDecl 0x55c9b0bcabc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55c9b0bcab60 'long [8]' 8 
|   `-BuiltinType 0x55c9b0b4c0a0 'long'
|-EnumDecl 0x55c9b0bcac20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55c9b0bcace8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55c9b0bcad38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55c9b0bcad88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55c9b0bcae58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55c9b0bcaea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55c9b0bcaef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55c9b0bcaf48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55c9b0bcafd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55c9b0bcafb8 <col:26> 'int'
| |   `-DeclRefExpr 0x55c9b0bcaf98 <col:26> 'int' EnumConstant 0x55c9b0bcae58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55c9b0bcb058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55c9b0bcb040 <col:29> 'int'
| |   `-DeclRefExpr 0x55c9b0bcb020 <col:29> 'int' EnumConstant 0x55c9b0bcaea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55c9b0bcb0e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55c9b0bcb0c8 <col:30> 'int'
| |   `-DeclRefExpr 0x55c9b0bcb0a8 <col:30> 'int' EnumConstant 0x55c9b0bcaef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55c9b0bcb168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55c9b0bcb150 <col:27> 'int'
|     `-DeclRefExpr 0x55c9b0bcb130 <col:27> 'int' EnumConstant 0x55c9b0bcafd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55c9b0bcb1b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55c9b0bcb288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55c9b0bcb310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55c9b0bcb2f8 <col:30> 'int'
| |   `-DeclRefExpr 0x55c9b0bcb2d8 <col:30> 'int' EnumConstant 0x55c9b0bcb288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55c9b0bcb360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55c9b0bcb3e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55c9b0bcb3d0 <col:29> 'int'
|     `-DeclRefExpr 0x55c9b0bcb3b0 <col:29> 'int' EnumConstant 0x55c9b0bcb360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55c9b0bcb438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55c9b0bcb508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55c9b0bcb570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55c9b0bcb5c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55c9b0bcb610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55c9b0bcb6d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55c9b0bcb728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55c9b0bcb778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55c9b0bcb800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55c9b0bcb7e8 <col:31> 'int'
|     `-DeclRefExpr 0x55c9b0bcb7c8 <col:31> 'int' EnumConstant 0x55c9b0bcb6d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55c9b0bcb850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55c9b0bcb918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55c9b0bcb968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55c9b0bcb9b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55c9b0bcba88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55c9b0bcbad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55c9b0bcbb28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55c9b0bcbbf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55c9b0bcbc48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55c9b0bcbc98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55c9b0bcbed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55c9b0bcbf40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55c9b0bcbfa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55c9b0bcc0c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55c9b0bcc118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55c9b0bcc1e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55c9b0bcc238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55c9b0bcc288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55c9b0bcc358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55c9b0bcc3a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55c9b0bcc9d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55c9b0bcc4a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55c9b0bcc5c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55c9b0bcc7c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55c9b0bcc840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55c9b0bcca98 <col:47>
| |-NonNullAttr 0x55c9b0bccaf0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55c9b0bccb28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55c9b0bccc50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55c9b0bccb80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55c9b0bccea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55c9b0bccd08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55c9b0bccd88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55c9b0bcd078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55c9b0bccf68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55c9b0bcd120 <col:60>
|-FunctionDecl 0x55c9b0bcd270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55c9b0bcd310 <col:54>
| `-ConstAttr 0x55c9b0bcd368 <col:95>
|-FunctionDecl 0x55c9b0bcdda0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55c9b0bcd3a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55c9b0bcd418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55c9b0bcde50 <line:395:19>
| `-ConstAttr 0x55c9b0bcdea8 <col:60>
|-FunctionDecl 0x55c9b0bce078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55c9b0bcdf40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55c9b0bce120 <col:71>
| `-NonNullAttr 0x55c9b0bce178 <col:112, col:126> 1
|-FunctionDecl 0x55c9b0bce280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55c9b0bce1c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55c9b0bce328 <line:398:22>
| `-NonNullAttr 0x55c9b0bce380 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0bce5a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55c9b0bce3c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55c9b0bce448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55c9b0bce658 <line:401:22>
| `-NonNullAttr 0x55c9b0bce6b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55c9b0bce8b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55c9b0bce6f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55c9b0bce778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55c9b0bce968 <line:404:22>
| `-NonNullAttr 0x55c9b0bce9c0 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0bcec18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55c9b0bcea08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55c9b0bceab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55c9b0bcecc8 <line:407:22>
| `-NonNullAttr 0x55c9b0bced20 <col:63, col:80> 1 2
|-FunctionDecl 0x55c9b0bcff78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55c9b0bcfdc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55c9b0bcfe38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55c9b0bd0028 <line:410:22>
| `-NonNullAttr 0x55c9b0bd0080 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0bd02b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55c9b0bd00c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55c9b0bd0158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55c9b0bd0368 <line:413:22>
| `-NonNullAttr 0x55c9b0bd03c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55c9b0bd05f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55c9b0bd0408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55c9b0bd0498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55c9b0bd06a8 <col:37>
| `-NonNullAttr 0x55c9b0bd0700 <col:78, col:95> 1 2
|-FunctionDecl 0x55c9b0bd08e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55c9b0bd0748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55c9b0bd07c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55c9b0bd0998 <line:419:22>
| `-NonNullAttr 0x55c9b0bd09f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55c9b0bd0b78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55c9b0bd0a38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55c9b0bd0ab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55c9b0bd0c28 <line:421:22>
| `-NonNullAttr 0x55c9b0bd0c80 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0bd1e58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55c9b0bd0cc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55c9b0bd0d48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55c9b0bd1f08 <line:424:22>
| `-NonNullAttr 0x55c9b0bd1f60 <col:63, col:80> 1 2
|-FunctionDecl 0x55c9b0bd20e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55c9b0bd1fa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55c9b0bd2028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55c9b0bd2198 <line:427:22>
| `-NonNullAttr 0x55c9b0bd21f0 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0bd2398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55c9b0bd2238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55c9b0bd22b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55c9b0bd2448 <line:430:22>
| `-NonNullAttr 0x55c9b0bd24a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55c9b0bd2628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55c9b0bd24e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55c9b0bd2568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55c9b0bd26d8 <line:432:22>
| `-NonNullAttr 0x55c9b0bd2730 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0bd2958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55c9b0bd2778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55c9b0bd27f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55c9b0bd2a08 <line:435:22>
| |-NonNullAttr 0x55c9b0bd2a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55c9b0bd2a98 <col:100> "" ""
|-FunctionDecl 0x55c9b0bd2ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55c9b0bd2ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55c9b0bd2b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55c9b0bd2d58 <line:438:22>
| |-NonNullAttr 0x55c9b0bd2db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x55c9b0bd2df8 <col:97> "" ""
|-FunctionDecl 0x55c9b0bd2fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55c9b0bd2e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55c9b0bd2ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55c9b0bd3098 <line:441:22>
| `-NonNullAttr 0x55c9b0bd30f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55c9b0bd3270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55c9b0bd3138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55c9b0bd31b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55c9b0bd3320 <line:444:22>
| `-NonNullAttr 0x55c9b0bd3378 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0bd3668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55c9b0bd33c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55c9b0bd3448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55c9b0bd34c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55c9b0bd3720 <line:448:22>
| `-NonNullAttr 0x55c9b0bd3778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55c9b0bd3a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55c9b0bd37d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55c9b0bd3850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55c9b0bd38c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55c9b0bd3ae0 <col:43>
| `-NonNullAttr 0x55c9b0bd3b38 <col:84, col:98> 1
|-FunctionDecl 0x55c9b0bd3e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55c9b0bd3b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55c9b0bd3c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55c9b0bd3c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55c9b0bd3ef8 <line:453:22>
| `-NonNullAttr 0x55c9b0bd3f50 <col:63, col:77> 3
|-FunctionDecl 0x55c9b0bd4228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55c9b0bd3f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55c9b0bd4018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55c9b0bd40a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55c9b0bd42e0 <line:457:22>
| `-NonNullAttr 0x55c9b0bd4338 <col:63, col:80> 2 3
|-FunctionDecl 0x55c9b0bd4528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55c9b0bd4388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55c9b0bd4408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55c9b0bd45d8 <line:459:22>
|-FunctionDecl 0x55c9b0bd49a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55c9b0bd46a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55c9b0bd4840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55c9b0bd4a58 <col:52, col:69> 1 2
|-FunctionDecl 0x55c9b0bd4c00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55c9b0bd4ae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55c9b0bd4b60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55c9b0bd4e10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55c9b0bd4cc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55c9b0bd4d48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55c9b0bd4f68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55c9b0bd4ed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55c9b0bd50a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55c9b0bd5148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55c9b0bd51f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55c9b0bd52e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55c9b0bd5350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55c9b0bd5520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix001_tso.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55c9b0bd5618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55c9b0bd56d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55c9b0bd5670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55c9b0bd51d0 '__pthread_unwind_buf_t'
| |   `-Record 0x55c9b0bd5148 ''
| `-AlignedAttr 0x55c9b0bd5728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55c9b0bd57a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55c9b0bd5900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55c9b0bd5968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55c9b0bd59d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55c9b0bd5a38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55c9b0bd5c40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55c9b0bd5b30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55c9b0bd5e20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55c9b0bd5cf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55c9b0bd5fe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55c9b0bd5ed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55c9b0bd6088 <line:488:22>
|-RecordDecl 0x55c9b0bd60e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55c9b0bd63f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55c9b0bd6258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55c9b0bd62d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55c9b0bd64a8 <col:86>
| `-ReturnsTwiceAttr 0x55c9b0bd6500 <col:12> Implicit
|-FunctionDecl 0x55c9b0bd6828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55c9b0bd65d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55c9b0bd66e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55c9b0bd68d8 <line:494:22>
| `-NonNullAttr 0x55c9b0bd6930 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0bd6aa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55c9b0bd6978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55c9b0bd6b50 <line:496:22>
| `-NonNullAttr 0x55c9b0bd6ba8 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0bd6cb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55c9b0bd6bf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55c9b0bd6d58 <line:498:22>
| `-NonNullAttr 0x55c9b0bd6db0 <col:52, col:66> 1
|-FunctionDecl 0x55c9b0bd6ee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55c9b0bd6e30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55c9b0bd6f90 <line:500:22>
| `-NonNullAttr 0x55c9b0bd6fe8 <col:52, col:66> 1
|-FunctionDecl 0x55c9b0bd7228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55c9b0bd7038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55c9b0bd70c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55c9b0bd72d8 <col:36>
| `-NonNullAttr 0x55c9b0bd7330 <col:66, col:83> 1 2
|-FunctionDecl 0x55c9b0bd7430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55c9b0bd7378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55c9b0bd74d8 <line:505:22>
| `-NonNullAttr 0x55c9b0bd7530 <col:52, col:66> 1
|-FunctionDecl 0x55c9b0bd77c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55c9b0bd75e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55c9b0bd7660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55c9b0bd7878 <line:509:22>
| `-NonNullAttr 0x55c9b0bd78d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55c9b0bd7b98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55c9b0bd7918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55c9b0bd7998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55c9b0bd7a18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55c9b0bd7c50 <line:513:22>
| `-NonNullAttr 0x55c9b0bd7ca8 <col:63, col:80> 1 3
|-FunctionDecl 0x55c9b0bd7e40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55c9b0bd7cf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55c9b0bd7ee8 <line:515:22>
| `-NonNullAttr 0x55c9b0bd7f40 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0bd8128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55c9b0bd7ff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55c9b0bd81d0 <line:517:22>
| `-NonNullAttr 0x55c9b0bd8228 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0bd8330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55c9b0bd8278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55c9b0bd83d8 <line:519:22>
| `-NonNullAttr 0x55c9b0bd8430 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0bd8658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55c9b0bd8478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55c9b0bd84f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55c9b0bd8708 <line:523:22>
| `-NonNullAttr 0x55c9b0bd8760 <col:63, col:80> 1 2
|-FunctionDecl 0x55c9b0bd8968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55c9b0bd87a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55c9b0bd8828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55c9b0bd8a18 <line:526:22>
| `-NonNullAttr 0x55c9b0bd8a70 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0bd8c18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55c9b0bd8ab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55c9b0bd8b38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55c9b0bd8cc8 <line:529:22>
| `-NonNullAttr 0x55c9b0bd8d20 <col:63, col:80> 1 2
|-FunctionDecl 0x55c9b0bd9f20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55c9b0bd8d68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55c9b0bd9e60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55c9b0bd9fd0 <line:531:22>
| `-NonNullAttr 0x55c9b0bda028 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0bda1d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55c9b0bda078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55c9b0bda0f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55c9b0bda288 <line:535:22>
| `-NonNullAttr 0x55c9b0bda2e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55c9b0bda468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55c9b0bda328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55c9b0bda3a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55c9b0bda518 <line:538:22>
| `-NonNullAttr 0x55c9b0bda570 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0bda718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55c9b0bda5b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55c9b0bda638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55c9b0bda7c8 <line:542:22>
| `-NonNullAttr 0x55c9b0bda820 <col:63, col:80> 1 2
|-FunctionDecl 0x55c9b0bda9a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55c9b0bda868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55c9b0bda8e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55c9b0bdaa58 <line:545:22>
| `-NonNullAttr 0x55c9b0bdaab0 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0bdac98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55c9b0bdaaf8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55c9b0bdab78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55c9b0bdad48 <line:548:22>
| `-NonNullAttr 0x55c9b0bdada0 <col:63, col:80> 1 2
|-FunctionDecl 0x55c9b0bdbf58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55c9b0bdade8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55c9b0bdbe98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55c9b0bdc008 <line:551:22>
| `-NonNullAttr 0x55c9b0bdc060 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0bdc398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55c9b0bdc140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55c9b0bdc250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55c9b0bdc448 <col:29>
| `-NonNullAttr 0x55c9b0bdc4a0 <col:70, col:84> 1
|-FunctionDecl 0x55c9b0bdc618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55c9b0bdc4e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55c9b0bdc6c0 <line:556:22>
| `-NonNullAttr 0x55c9b0bdc718 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0bdc820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55c9b0bdc768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55c9b0bdc8c8 <line:558:22>
| `-NonNullAttr 0x55c9b0bdc920 <col:52, col:66> 1
|-FunctionDecl 0x55c9b0bdca20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55c9b0bdc968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55c9b0bdcac8 <line:560:19>
| `-NonNullAttr 0x55c9b0bdcb20 <col:49, col:63> 1
|-FunctionDecl 0x55c9b0bdcd58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55c9b0bdcb68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55c9b0bdcbf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55c9b0bdce08 <col:39>
| `-NonNullAttr 0x55c9b0bdce90 <col:69, col:86> 1 2
|-FunctionDecl 0x55c9b0bdcf90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55c9b0bdced8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55c9b0bdd038 <line:565:22>
| `-NonNullAttr 0x55c9b0bdd090 <col:52, col:66> 1
|-FunctionDecl 0x55c9b0bdd190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55c9b0bdd0d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55c9b0bdd238 <line:567:22>
| `-NonNullAttr 0x55c9b0bdd290 <col:52, col:66> 1
|-FunctionDecl 0x55c9b0bdd448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55c9b0bdd2d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55c9b0bdd368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55c9b0bdd4f8 <col:39>
| `-NonNullAttr 0x55c9b0bdd550 <col:69, col:86> 1 2
|-FunctionDecl 0x55c9b0bdd650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55c9b0bdd598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55c9b0bdd6f8 <line:572:22>
| `-NonNullAttr 0x55c9b0bdd750 <col:52, col:66> 1
|-FunctionDecl 0x55c9b0bdd938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55c9b0bdd800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55c9b0bdd9e0 <line:574:22>
| `-NonNullAttr 0x55c9b0bdda38 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0bddb40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55c9b0bdda88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55c9b0bddbe8 <line:576:22>
| `-NonNullAttr 0x55c9b0bddc40 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0bddea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55c9b0bddc88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55c9b0bddd08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55c9b0bddf50 <line:580:22>
| `-NonNullAttr 0x55c9b0bddfa8 <col:63, col:80> 1 2
|-FunctionDecl 0x55c9b0bde1b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55c9b0bddff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55c9b0bde078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55c9b0bde268 <line:583:22>
| `-NonNullAttr 0x55c9b0bde2c0 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0bde468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55c9b0bde308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55c9b0bde388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55c9b0bde518 <line:587:22>
| `-NonNullAttr 0x55c9b0bde570 <col:63, col:80> 1 2
|-FunctionDecl 0x55c9b0bde6f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55c9b0bde5b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55c9b0bde638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55c9b0bde7a8 <col:36>
| `-NonNullAttr 0x55c9b0bde800 <col:77, col:91> 1
|-FunctionDecl 0x55c9b0bdeb38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55c9b0bde8e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55c9b0bde9f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55c9b0bdebe8 <line:592:22>
| `-NonNullAttr 0x55c9b0bdec40 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0bdedb8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55c9b0bdec88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55c9b0bdee60 <line:594:22>
| `-NonNullAttr 0x55c9b0bdeee0 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0bdefe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55c9b0bdef28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55c9b0bdf088 <line:596:22>
| `-NonNullAttr 0x55c9b0bdf0e0 <col:52, col:66> 1
|-FunctionDecl 0x55c9b0bdf1e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55c9b0bdf128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55c9b0bdf288 <line:598:22>
| `-NonNullAttr 0x55c9b0bdf2e0 <col:52, col:66> 1
|-FunctionDecl 0x55c9b0bdf508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55c9b0bdf328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55c9b0bdf3a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55c9b0bdf5b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55c9b0bdf8e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55c9b0bdf638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55c9b0bdf6b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55c9b0bdf740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55c9b0bdf9a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55c9b0bdfbb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55c9b0bdfa80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55c9b0bdfc60 <line:607:22>
| `-NonNullAttr 0x55c9b0bdfcb8 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0bdfdc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55c9b0bdfd08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55c9b0bdfe68 <line:609:22>
| `-NonNullAttr 0x55c9b0bdfef0 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0be0118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55c9b0bdff38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55c9b0bdffb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55c9b0be01c8 <line:613:22>
| `-NonNullAttr 0x55c9b0be0220 <col:63, col:80> 1 2
|-FunctionDecl 0x55c9b0be0428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55c9b0be0268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55c9b0be02e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55c9b0be04d8 <col:37>
| `-NonNullAttr 0x55c9b0be0530 <col:78, col:92> 1
|-FunctionDecl 0x55c9b0be0748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55c9b0be0578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55c9b0be0620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55c9b0be07f8 <line:619:22>
| `-NonNullAttr 0x55c9b0be0850 <col:63, col:80> 1 2
|-FunctionDecl 0x55c9b0be0a18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55c9b0be0898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55c9b0be0910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55c9b0be0ac8 <line:622:22>
| `-NonNullAttr 0x55c9b0be0b20 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0be0dc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55c9b0be0c00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55c9b0be0c80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55c9b0be0e78 <line:624:22>
| `-NonNullAttr 0x55c9b0be0f00 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0be1078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55c9b0be0f48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55c9b0be1120 <line:626:22>
| `-NonNullAttr 0x55c9b0be1178 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0be1280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55c9b0be11c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55c9b0be1328 <line:628:22>
| `-NonNullAttr 0x55c9b0be1380 <col:52, col:66> 1
|-FunctionDecl 0x55c9b0be1480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55c9b0be13c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55c9b0be1528 <line:630:22>
| `-NonNullAttr 0x55c9b0be1580 <col:52, col:66> 1
|-FunctionDecl 0x55c9b0be1680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55c9b0be15c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55c9b0be1728 <line:632:22>
| `-NonNullAttr 0x55c9b0be1780 <col:52, col:66> 1
|-FunctionDecl 0x55c9b0be1b58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55c9b0be1860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55c9b0be1970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55c9b0be19f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55c9b0be1c10 <line:636:22>
| `-NonNullAttr 0x55c9b0be1c68 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0be1de8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55c9b0be1cb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55c9b0be1e90 <line:638:22>
| `-NonNullAttr 0x55c9b0be1f10 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0be2010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55c9b0be1f58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55c9b0be20b8 <line:640:22>
| `-NonNullAttr 0x55c9b0be2110 <col:52, col:66> 1
|-FunctionDecl 0x55c9b0be22f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55c9b0be21c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55c9b0be23a0 <line:642:22>
| `-NonNullAttr 0x55c9b0be23f8 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0be2500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55c9b0be2448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55c9b0be25a8 <line:644:22>
| `-NonNullAttr 0x55c9b0be2600 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0be2828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55c9b0be2648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55c9b0be26c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55c9b0be28d8 <line:648:22>
| `-NonNullAttr 0x55c9b0be2930 <col:63, col:80> 1 2
|-FunctionDecl 0x55c9b0be2b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55c9b0be2978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55c9b0be29f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55c9b0be2be8 <line:651:22>
| `-NonNullAttr 0x55c9b0be2c40 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0be2fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55c9b0be2d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55c9b0be2e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55c9b0be3058 <line:654:22>
| `-NonNullAttr 0x55c9b0be30b0 <col:63, col:77> 1
|-FunctionDecl 0x55c9b0be3208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55c9b0be30f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55c9b0be32b0 <col:69>
|-FunctionDecl 0x55c9b0be3428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55c9b0be3318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55c9b0be34d0 <col:72>
|-FunctionDecl 0x55c9b0be3708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55c9b0be3538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55c9b0be35e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55c9b0be37b8 <col:44>
|-FunctionDecl 0x55c9b0be39d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55c9b0be3820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55c9b0be3898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55c9b0be3a88 <line:661:22>
| `-NonNullAttr 0x55c9b0be3ae0 <col:63, col:77> 2
|-FunctionDecl 0x55c9b0be4f50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55c9b0be3bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55c9b0be3cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55c9b0be3de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55c9b0be5008 <col:47>
|-FunctionDecl 0x55c9b0be5110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55c9b0be5078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55c9b0be5268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55c9b0be51d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55c9b0be53c0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55c9b0be5328 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55c9b0be5488 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55c9b0be5548 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55c9b0be5608 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55c9b0be56c0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55c9b0be5740 prev 0x55c9b0be56c0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55c9b0be57a8 <col:24> 'int' 0
|-VarDecl 0x55c9b0be57e0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55c9b0be5860 prev 0x55c9b0be57e0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55c9b0be58c8 <col:27> 'int' 0
|-VarDecl 0x55c9b0be5900 <line:676:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x55c9b0be5980 prev 0x55c9b0be5900 <line:677:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x55c9b0be59e8 <col:27> 'int' 0
|-VarDecl 0x55c9b0be5a20 <line:678:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55c9b0be5aa0 prev 0x55c9b0be5a20 <line:679:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55c9b0be5b08 <col:27> 'int' 0
|-VarDecl 0x55c9b0be5b40 <line:680:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x55c9b0be5bc0 prev 0x55c9b0be5b40 <line:681:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x55c9b0be5c28 <col:27> 'int' 0
|-VarDecl 0x55c9b0be5c60 <line:682:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55c9b0be5ce0 prev 0x55c9b0be5c60 <line:683:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55c9b0be5d48 <col:27> 'int' 0
|-VarDecl 0x55c9b0be5d80 <line:684:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x55c9b0be5e00 prev 0x55c9b0be5d80 <line:685:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x55c9b0be5e68 <col:27> 'int' 0
|-VarDecl 0x55c9b0be5e98 <line:686:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55c9b0be5f20 <line:687:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55c9b0be5fa0 <line:688:1, col:5> col:5 used x 'int'
|-VarDecl 0x55c9b0be6020 prev 0x55c9b0be5fa0 <line:689:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55c9b0be6088 <col:9> 'int' 0
|-VarDecl 0x55c9b0be60c0 <line:690:1, col:5> col:5 used y 'int'
|-VarDecl 0x55c9b0be6140 prev 0x55c9b0be60c0 <line:691:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55c9b0be61a8 <col:9> 'int' 0
|-VarDecl 0x55c9b0be61e0 <line:692:1, col:5> col:5 used z 'int'
|-VarDecl 0x55c9b0be6260 prev 0x55c9b0be61e0 <line:693:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55c9b0be62c8 <col:9> 'int' 0
|-VarDecl 0x55c9b0be62f8 <line:694:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x55c9b0be6378 <line:695:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x55c9b0be63f0 <line:696:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x55c9b0be6468 <line:697:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x55c9b0be64e0 <line:698:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x55c9b0be6558 <line:699:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x55c9b0be65d0 <line:700:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x55c9b0be6648 <line:701:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x55c9b0be66c0 <line:702:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x55c9b0be6738 <line:703:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x55c9b0be67b0 <line:704:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x55c9b0be6830 <line:705:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x55c9b0be68b0 <line:706:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x55c9b0be6928 <line:707:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x55c9b0be69a8 <line:708:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x55c9b0be6a20 <line:709:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x55c9b0be6a98 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55c9b0be6b10 <line:711:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55c9b0be6c28 prev 0x55c9b0be5110 <line:712:1, line:756:1> line:712:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55c9b0be6b90 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55c9b0beaf70 <line:713:1, line:756:1>
|   |-CallExpr 0x55c9b0be6d38 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55c9b0be6d20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0be6cd0 <col:3> 'void ()' Function 0x55c9b0b8c4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55c9b0be6db0 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55c9b0be6d58 <col:3> 'int' lvalue Var 0x55c9b0be69a8 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55c9b0be6d98 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c9b0be6d78 <col:15> 'int' lvalue Var 0x55c9b0be68b0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55c9b0be6e10 <line:716:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55c9b0be6dd0 <col:3> 'int' lvalue Var 0x55c9b0be68b0 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x55c9b0be6df0 <col:15> 'int' 1
|   |-BinaryOperator 0x55c9b0be6e88 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0be6e30 <col:3> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55c9b0be6e70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c9b0be6e50 <col:20> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55c9b0be6f30 <line:718:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0be6ea8 <col:3> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55c9b0be6ef8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55c9b0be6ec8 <col:27> 'int' 1
|   |-CallExpr 0x55c9b0be70b8 <line:719:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55c9b0be70a0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55c9b0be6f50 <col:3> 'void (int)' Function 0x55c9b0b8c238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55c9b0be7050 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55c9b0be7030 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55c9b0be7010 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55c9b0be6fc8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55c9b0be6fb0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55c9b0be6f70 <col:23> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55c9b0be6ff8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55c9b0be6fe0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55c9b0be6f90 <col:41> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55c9b0be7138 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0be70e0 <col:3> '_Bool' lvalue Var 0x55c9b0be65d0 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55c9b0be7120 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c9b0be7100 <col:20> '_Bool' lvalue Var 0x55c9b0be63f0 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55c9b0be71b0 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0be7158 <col:3> '_Bool' lvalue Var 0x55c9b0be6648 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55c9b0be7198 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c9b0be7178 <col:20> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55c9b0be7228 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0be71d0 <col:3> '_Bool' lvalue Var 0x55c9b0be66c0 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55c9b0be7210 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c9b0be71f0 <col:20> '_Bool' lvalue Var 0x55c9b0be64e0 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55c9b0be72a0 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0be7248 <col:3> '_Bool' lvalue Var 0x55c9b0be6738 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55c9b0be7288 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c9b0be7268 <col:20> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55c9b0be7338 <line:724:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0be72c0 <col:3> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x55c9b0be7310 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55c9b0be72e0 <col:27> 'int' 1
|   |-CallExpr 0x55c9b0be7390 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55c9b0be7378 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0be7358 <col:3> 'void ()' Function 0x55c9b0b8c570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55c9b0be73e8 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55c9b0be73d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0be73b0 <col:3> 'void ()' Function 0x55c9b0b8c4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55c9b0be74b8 <line:727:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0be7408 <col:3> '_Bool' lvalue Var 0x55c9b0be6a98 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55c9b0be7498 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55c9b0be7480 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55c9b0be7428 <col:19> '_Bool (void)' Function 0x55c9b0b8bc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55c9b0be7550 <line:728:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0be74d8 <col:3> '_Bool' lvalue Var 0x55c9b0be6b10 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55c9b0be7530 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55c9b0be7518 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55c9b0be74f8 <col:19> '_Bool (void)' Function 0x55c9b0b8bc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55c9b0be75c8 <line:729:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0be7570 <col:3> '_Bool' lvalue Var 0x55c9b0be62f8 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55c9b0be75b0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c9b0be7590 <col:21> '_Bool' lvalue Var 0x55c9b0be6b10 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55c9b0be7640 <line:730:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55c9b0be75e8 <col:3> 'int' lvalue Var 0x55c9b0be6378 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55c9b0be7628 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c9b0be7608 <col:15> 'int' lvalue Var 0x55c9b0be6260 'z' 'int'
|   |-BinaryOperator 0x55c9b0be7a78 <line:731:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55c9b0be7660 <col:3> 'int' lvalue Var 0x55c9b0be6260 'z' 'int'
|   | `-ConditionalOperator 0x55c9b0be7a48 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55c9b0be7870 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55c9b0be7790 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55c9b0be76b8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55c9b0be76a0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55c9b0be7680 <col:8> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55c9b0be7770 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55c9b0be7708 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55c9b0be76f0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55c9b0be76d0 <col:27> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x55c9b0be7758 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55c9b0be7740 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55c9b0be7720 <col:46> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55c9b0be7850 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55c9b0be77e8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55c9b0be77d0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55c9b0be77b0 <col:65> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x55c9b0be7838 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55c9b0be7820 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55c9b0be7800 <col:84> '_Bool' lvalue Var 0x55c9b0be6648 'z$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55c9b0be7a30 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c9b0be7890 <col:101> 'int' lvalue Var 0x55c9b0be6260 'z' 'int'
|   |   `-ParenExpr 0x55c9b0be7a10 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55c9b0be79e0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55c9b0be7950 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55c9b0be7908 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55c9b0be78f0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55c9b0be78b0 <col:106> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55c9b0be7938 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55c9b0be7920 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55c9b0be78d0 <col:124> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55c9b0be79b0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55c9b0be7970 <col:141> 'int' lvalue Var 0x55c9b0be68b0 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55c9b0be79c8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55c9b0be7990 <col:153> 'int' lvalue Var 0x55c9b0be69a8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55c9b0be7fa0 <line:732:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55c9b0be7a98 <col:3> 'int' lvalue Var 0x55c9b0be68b0 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x55c9b0be7f70 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55c9b0be7f40 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55c9b0be7f10 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55c9b0be7ab8 <col:15> '_Bool' lvalue Var 0x55c9b0be6b10 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55c9b0be7f58 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c9b0be7ad8 <col:31> 'int' lvalue Var 0x55c9b0be68b0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55c9b0be7ef0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55c9b0be7ec0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55c9b0be7ce8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55c9b0be7c08 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55c9b0be7b30 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55c9b0be7b18 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55c9b0be7af8 <col:45> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55c9b0be7be8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55c9b0be7b80 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55c9b0be7b68 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55c9b0be7b48 <col:64> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55c9b0be7bd0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55c9b0be7bb8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55c9b0be7b98 <col:83> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55c9b0be7cc8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55c9b0be7c60 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55c9b0be7c48 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55c9b0be7c28 <col:102> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55c9b0be7cb0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55c9b0be7c98 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55c9b0be7c78 <col:121> '_Bool' lvalue Var 0x55c9b0be6648 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55c9b0be7ea8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55c9b0be7d08 <col:138> 'int' lvalue Var 0x55c9b0be68b0 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x55c9b0be7e88 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55c9b0be7e58 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55c9b0be7dc8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55c9b0be7d80 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55c9b0be7d68 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55c9b0be7d28 <col:151> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55c9b0be7db0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55c9b0be7d98 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55c9b0be7d48 <col:169> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55c9b0be7e28 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55c9b0be7de8 <col:186> 'int' lvalue Var 0x55c9b0be68b0 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55c9b0be7e40 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55c9b0be7e08 <col:198> 'int' lvalue Var 0x55c9b0be68b0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55c9b0be84b0 <line:733:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55c9b0be7fc0 <col:3> 'int' lvalue Var 0x55c9b0be69a8 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x55c9b0be8480 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55c9b0be8450 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55c9b0be8438 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55c9b0be7fe0 <col:15> '_Bool' lvalue Var 0x55c9b0be6b10 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55c9b0be8468 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c9b0be8000 <col:31> 'int' lvalue Var 0x55c9b0be69a8 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x55c9b0be8418 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55c9b0be83e8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55c9b0be8210 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55c9b0be8130 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55c9b0be8058 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55c9b0be8040 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55c9b0be8020 <col:45> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55c9b0be8110 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55c9b0be80a8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55c9b0be8090 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55c9b0be8070 <col:64> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55c9b0be80f8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55c9b0be80e0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55c9b0be80c0 <col:83> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55c9b0be81f0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55c9b0be8188 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55c9b0be8170 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55c9b0be8150 <col:102> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55c9b0be81d8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55c9b0be81c0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55c9b0be81a0 <col:121> '_Bool' lvalue Var 0x55c9b0be6648 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55c9b0be83d0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55c9b0be8230 <col:138> 'int' lvalue Var 0x55c9b0be69a8 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x55c9b0be83b0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55c9b0be8380 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55c9b0be82f0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55c9b0be82a8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55c9b0be8290 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55c9b0be8250 <col:151> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55c9b0be82d8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55c9b0be82c0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55c9b0be8270 <col:169> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55c9b0be8350 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55c9b0be8310 <col:186> 'int' lvalue Var 0x55c9b0be69a8 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55c9b0be8368 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55c9b0be8330 <col:198> 'int' lvalue Var 0x55c9b0be69a8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55c9b0be8a58 <line:734:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0be84d0 <col:3> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55c9b0be8a40 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c9b0be8a10 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55c9b0be89c8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c9b0be89b0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c9b0be84f0 <col:20> '_Bool' lvalue Var 0x55c9b0be6b10 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55c9b0be89f8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c9b0be89e0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c9b0be8510 <col:36> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55c9b0be8990 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55c9b0be8960 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55c9b0be8720 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55c9b0be8640 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55c9b0be8568 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55c9b0be8550 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55c9b0be8530 <col:55> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55c9b0be8620 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55c9b0be85b8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55c9b0be85a0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55c9b0be8580 <col:74> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55c9b0be8608 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55c9b0be85f0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55c9b0be85d0 <col:93> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55c9b0be8700 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55c9b0be8698 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55c9b0be8680 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55c9b0be8660 <col:112> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55c9b0be86e8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55c9b0be86d0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55c9b0be86b0 <col:131> '_Bool' lvalue Var 0x55c9b0be6648 'z$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55c9b0be8948 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55c9b0be8930 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55c9b0be8740 <col:148> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55c9b0be8910 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55c9b0be88e0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55c9b0be8800 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55c9b0be87b8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55c9b0be87a0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55c9b0be8760 <col:166> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55c9b0be87e8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55c9b0be87d0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55c9b0be8780 <col:184> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55c9b0be8898 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55c9b0be8850 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55c9b0be8820 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55c9b0be88c8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55c9b0be88b0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55c9b0be8878 <col:212> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55c9b0be9048 <line:735:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0be8a78 <col:3> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55c9b0be9030 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c9b0be9000 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55c9b0be8fb8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c9b0be8fa0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c9b0be8a98 <col:20> '_Bool' lvalue Var 0x55c9b0be6b10 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55c9b0be8fe8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c9b0be8fd0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c9b0be8ab8 <col:36> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55c9b0be8f80 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55c9b0be8f50 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55c9b0be8cc8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55c9b0be8be8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55c9b0be8b10 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55c9b0be8af8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55c9b0be8ad8 <col:55> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55c9b0be8bc8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55c9b0be8b60 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55c9b0be8b48 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55c9b0be8b28 <col:74> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55c9b0be8bb0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55c9b0be8b98 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55c9b0be8b78 <col:93> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55c9b0be8ca8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55c9b0be8c40 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55c9b0be8c28 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55c9b0be8c08 <col:112> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55c9b0be8c90 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55c9b0be8c78 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55c9b0be8c58 <col:131> '_Bool' lvalue Var 0x55c9b0be6648 'z$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55c9b0be8f10 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55c9b0be8ef8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55c9b0be8ce8 <col:148> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55c9b0be8ed8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55c9b0be8ea8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55c9b0be8da8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55c9b0be8d60 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55c9b0be8d48 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55c9b0be8d08 <col:166> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55c9b0be8d90 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55c9b0be8d78 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55c9b0be8d28 <col:184> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55c9b0be8e78 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55c9b0be8df8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55c9b0be8dc8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55c9b0be8e90 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55c9b0be8e50 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55c9b0be8e20 <col:219> 'int' 0
|   |-BinaryOperator 0x55c9b0be95f0 <line:736:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0be9068 <col:3> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55c9b0be95d8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c9b0be95a8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55c9b0be9560 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c9b0be9548 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c9b0be9088 <col:20> '_Bool' lvalue Var 0x55c9b0be6b10 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55c9b0be9590 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c9b0be9578 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c9b0be90a8 <col:36> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55c9b0be9528 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55c9b0be94f8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55c9b0be92b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55c9b0be91d8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55c9b0be9100 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55c9b0be90e8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55c9b0be90c8 <col:55> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55c9b0be91b8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55c9b0be9150 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55c9b0be9138 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55c9b0be9118 <col:74> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55c9b0be91a0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55c9b0be9188 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55c9b0be9168 <col:93> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55c9b0be9298 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55c9b0be9230 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55c9b0be9218 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55c9b0be91f8 <col:112> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55c9b0be9280 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55c9b0be9268 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55c9b0be9248 <col:131> '_Bool' lvalue Var 0x55c9b0be6648 'z$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55c9b0be94e0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55c9b0be94c8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55c9b0be92d8 <col:148> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55c9b0be94a8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55c9b0be9478 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55c9b0be9398 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55c9b0be9350 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55c9b0be9338 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55c9b0be92f8 <col:166> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55c9b0be9380 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55c9b0be9368 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55c9b0be9318 <col:184> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55c9b0be9430 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55c9b0be93e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55c9b0be93b8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55c9b0be9460 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55c9b0be9448 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55c9b0be9410 <col:212> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55c9b0be9bb8 <line:737:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0be9610 <col:3> '_Bool' lvalue Var 0x55c9b0be6648 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55c9b0be9ba0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c9b0be9b70 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55c9b0be9b28 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c9b0be9b10 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c9b0be9630 <col:20> '_Bool' lvalue Var 0x55c9b0be6b10 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55c9b0be9b58 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c9b0be9b40 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c9b0be9650 <col:36> '_Bool' lvalue Var 0x55c9b0be6648 'z$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55c9b0be9af0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55c9b0be9ac0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55c9b0be9860 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55c9b0be9780 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55c9b0be96a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55c9b0be9690 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55c9b0be9670 <col:55> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55c9b0be9760 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55c9b0be96f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55c9b0be96e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55c9b0be96c0 <col:74> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55c9b0be9748 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55c9b0be9730 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55c9b0be9710 <col:93> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55c9b0be9840 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55c9b0be97d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55c9b0be97c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55c9b0be97a0 <col:112> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55c9b0be9828 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55c9b0be9810 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55c9b0be97f0 <col:131> '_Bool' lvalue Var 0x55c9b0be6648 'z$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55c9b0be9aa8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55c9b0be9a90 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55c9b0be9880 <col:148> '_Bool' lvalue Var 0x55c9b0be6648 'z$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55c9b0be9a70 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55c9b0be9a40 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55c9b0be9940 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55c9b0be98f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55c9b0be98e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55c9b0be98a0 <col:166> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55c9b0be9928 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55c9b0be9910 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55c9b0be98c0 <col:184> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55c9b0be9a10 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55c9b0be9990 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55c9b0be9960 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55c9b0be9a28 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55c9b0be99e8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55c9b0be99b8 <col:219> 'int' 0
|   |-BinaryOperator 0x55c9b0be9c30 <line:738:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55c9b0be9bd8 <col:3> 'int' lvalue Var 0x55c9b0be5860 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55c9b0be9c18 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c9b0be9bf8 <col:25> 'int' lvalue Var 0x55c9b0be6260 'z' 'int'
|   |-BinaryOperator 0x55c9b0be9d60 <line:739:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55c9b0be9c50 <col:3> 'int' lvalue Var 0x55c9b0be6260 'z' 'int'
|   | `-ConditionalOperator 0x55c9b0be9d30 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55c9b0be9ce8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55c9b0be9cd0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55c9b0be9c70 <col:7> '_Bool' lvalue Var 0x55c9b0be62f8 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55c9b0be9d00 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c9b0be9c90 <col:25> 'int' lvalue Var 0x55c9b0be6378 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55c9b0be9d18 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55c9b0be9cb0 <col:37> 'int' lvalue Var 0x55c9b0be6260 'z' 'int'
|   |-BinaryOperator 0x55c9b0be9df8 <line:740:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0be9d80 <col:3> '_Bool' lvalue Var 0x55c9b0be62f8 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55c9b0be9dd0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55c9b0be9da0 <col:28> 'int' 0
|   |-CallExpr 0x55c9b0be9e50 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55c9b0be9e38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0be9e18 <col:3> 'void ()' Function 0x55c9b0b8c570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55c9b0be9ea8 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55c9b0be9e90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0be9e70 <col:3> 'void ()' Function 0x55c9b0b8c4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55c9b0be9f20 <line:743:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55c9b0be9ec8 <col:3> 'int' lvalue Var 0x55c9b0be5980 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x55c9b0be9f08 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c9b0be9ee8 <col:25> 'int' lvalue Var 0x55c9b0be6020 'x' 'int'
|   |-CallExpr 0x55c9b0be9f98 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55c9b0be9f80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0be9f60 <col:3> 'void ()' Function 0x55c9b0b8c570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55c9b0be9ff0 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55c9b0be9fd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0be9fb8 <col:3> 'void ()' Function 0x55c9b0b8c4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55c9b0bea2d8 <line:746:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55c9b0bea010 <col:3> 'int' lvalue Var 0x55c9b0be6260 'z' 'int'
|   | `-ConditionalOperator 0x55c9b0bea2a8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55c9b0bea0d0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55c9b0bea088 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55c9b0bea070 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55c9b0bea030 <col:7> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55c9b0bea0b8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55c9b0bea0a0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55c9b0bea050 <col:25> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55c9b0bea290 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c9b0bea0f0 <col:42> 'int' lvalue Var 0x55c9b0be68b0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55c9b0bea270 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55c9b0bea240 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55c9b0bea1b0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55c9b0bea168 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55c9b0bea150 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55c9b0bea110 <col:55> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55c9b0bea198 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55c9b0bea180 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55c9b0bea130 <col:73> '_Bool' lvalue Var 0x55c9b0be6648 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55c9b0bea210 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55c9b0bea1d0 <col:90> 'int' lvalue Var 0x55c9b0be69a8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55c9b0bea228 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55c9b0bea1f0 <col:102> 'int' lvalue Var 0x55c9b0be6260 'z' 'int'
|   |-BinaryOperator 0x55c9b0bea4e0 <line:747:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0bea2f8 <col:3> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55c9b0bea4c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c9b0bea498 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55c9b0bea3b8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55c9b0bea370 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55c9b0bea358 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55c9b0bea318 <col:20> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55c9b0bea3a0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55c9b0bea388 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55c9b0bea338 <col:38> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55c9b0bea450 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55c9b0bea408 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55c9b0bea3d8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55c9b0bea480 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55c9b0bea468 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55c9b0bea430 <col:66> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55c9b0bea7c8 <line:748:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0bea500 <col:3> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55c9b0bea7b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c9b0bea780 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55c9b0bea6a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55c9b0bea5c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55c9b0bea578 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55c9b0bea560 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55c9b0bea520 <col:20> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55c9b0bea5a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55c9b0bea590 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55c9b0bea540 <col:38> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55c9b0bea680 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55c9b0bea638 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55c9b0bea620 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55c9b0bea5e0 <col:56> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55c9b0bea668 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55c9b0bea650 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55c9b0bea600 <col:74> '_Bool' lvalue Var 0x55c9b0be6648 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55c9b0bea738 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55c9b0bea6f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55c9b0bea6c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55c9b0bea768 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55c9b0bea750 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55c9b0bea718 <col:102> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55c9b0bea9d0 <line:749:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0bea7e8 <col:3> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55c9b0bea9b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c9b0bea988 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55c9b0bea8a8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55c9b0bea860 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55c9b0bea848 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55c9b0bea808 <col:20> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55c9b0bea890 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55c9b0bea878 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55c9b0bea828 <col:38> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55c9b0bea940 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55c9b0bea8f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55c9b0bea8c8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55c9b0bea970 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55c9b0bea958 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55c9b0bea920 <col:66> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55c9b0beacb8 <line:750:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0bea9f0 <col:3> '_Bool' lvalue Var 0x55c9b0be6648 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55c9b0beaca0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c9b0beac70 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55c9b0beab90 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55c9b0beaab0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55c9b0beaa68 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55c9b0beaa50 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55c9b0beaa10 <col:20> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55c9b0beaa98 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55c9b0beaa80 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55c9b0beaa30 <col:38> '_Bool' lvalue Var 0x55c9b0be6468 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55c9b0beab70 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55c9b0beab28 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55c9b0beab10 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55c9b0beaad0 <col:56> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55c9b0beab58 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55c9b0beab40 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55c9b0beaaf0 <col:74> '_Bool' lvalue Var 0x55c9b0be6648 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55c9b0beac28 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55c9b0beabe0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55c9b0beabb0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55c9b0beac58 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55c9b0beac40 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55c9b0beac08 <col:102> '_Bool' lvalue Var 0x55c9b0be6648 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55c9b0bead10 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55c9b0beacf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0beacd8 <col:3> 'void ()' Function 0x55c9b0b8c570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55c9b0bead68 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55c9b0bead50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0bead30 <col:3> 'void ()' Function 0x55c9b0b8c4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55c9b0beae20 <line:753:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55c9b0bead88 <col:3> 'int' lvalue Var 0x55c9b0be5740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55c9b0beae00 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55c9b0beade8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c9b0beada8 <col:22> 'int' lvalue Var 0x55c9b0be5740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55c9b0beadc8 <col:41> 'int' 1
|   |-CallExpr 0x55c9b0beae78 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55c9b0beae60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0beae40 <col:3> 'void ()' Function 0x55c9b0b8c570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55c9b0beaf28 <line:755:3, col:36>
|     `-CallExpr 0x55c9b0beaf08 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55c9b0beaef0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55c9b0beae98 <col:10> 'void *(void)' Function 0x55c9b0b8bfc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55c9b0beb180 prev 0x55c9b0be5268 <line:757:1, line:779:1> line:757:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55c9b0beb0e8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55c9b0bec4f8 <line:758:1, line:779:1>
|   |-CallExpr 0x55c9b0beb260 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55c9b0beb248 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0beb228 <col:3> 'void ()' Function 0x55c9b0b8c4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55c9b0beb2c0 <line:760:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55c9b0beb280 <col:3> 'int' lvalue Var 0x55c9b0be6020 'x' 'int'
|   | `-IntegerLiteral 0x55c9b0beb2a0 <col:7> 'int' 1
|   |-CallExpr 0x55c9b0beb318 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55c9b0beb300 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0beb2e0 <col:3> 'void ()' Function 0x55c9b0b8c570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55c9b0beb370 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55c9b0beb358 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0beb338 <col:3> 'void ()' Function 0x55c9b0b8c4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55c9b0beb3e8 <line:763:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55c9b0beb390 <col:3> 'int' lvalue Var 0x55c9b0be5aa0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55c9b0beb3d0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c9b0beb3b0 <col:25> 'int' lvalue Var 0x55c9b0be6020 'x' 'int'
|   |-CallExpr 0x55c9b0beb440 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55c9b0beb428 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0beb408 <col:3> 'void ()' Function 0x55c9b0b8c570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55c9b0beb498 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55c9b0beb480 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0beb460 <col:3> 'void ()' Function 0x55c9b0b8c4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55c9b0beb510 <line:766:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55c9b0beb4b8 <col:3> 'int' lvalue Var 0x55c9b0be5bc0 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x55c9b0beb4f8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c9b0beb4d8 <col:25> 'int' lvalue Var 0x55c9b0be6140 'y' 'int'
|   |-CallExpr 0x55c9b0beb568 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55c9b0beb550 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0beb530 <col:3> 'void ()' Function 0x55c9b0b8c570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55c9b0beb5c0 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55c9b0beb5a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0beb588 <col:3> 'void ()' Function 0x55c9b0b8c4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55c9b0beb8a8 <line:769:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55c9b0beb5e0 <col:3> 'int' lvalue Var 0x55c9b0be6260 'z' 'int'
|   | `-ConditionalOperator 0x55c9b0beb878 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55c9b0beb6a0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55c9b0beb658 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55c9b0beb640 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55c9b0beb600 <col:7> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55c9b0beb688 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55c9b0beb670 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55c9b0beb620 <col:25> '_Bool' lvalue Var 0x55c9b0be64e0 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55c9b0beb860 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c9b0beb6c0 <col:42> 'int' lvalue Var 0x55c9b0be68b0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55c9b0beb840 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55c9b0beb810 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55c9b0beb780 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55c9b0beb738 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55c9b0beb720 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55c9b0beb6e0 <col:55> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55c9b0beb768 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55c9b0beb750 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55c9b0beb700 <col:73> '_Bool' lvalue Var 0x55c9b0be66c0 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55c9b0beb7e0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55c9b0beb7a0 <col:90> 'int' lvalue Var 0x55c9b0be69a8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55c9b0beb7f8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55c9b0beb7c0 <col:102> 'int' lvalue Var 0x55c9b0be6260 'z' 'int'
|   |-BinaryOperator 0x55c9b0bebab0 <line:770:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0beb8c8 <col:3> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55c9b0beba98 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c9b0beba68 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55c9b0beb988 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55c9b0beb940 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55c9b0beb928 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55c9b0beb8e8 <col:20> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55c9b0beb970 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55c9b0beb958 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55c9b0beb908 <col:38> '_Bool' lvalue Var 0x55c9b0be64e0 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55c9b0beba20 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55c9b0beb9d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55c9b0beb9a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55c9b0beba50 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55c9b0beba38 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55c9b0beba00 <col:66> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55c9b0bebd98 <line:771:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0bebad0 <col:3> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55c9b0bebd80 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c9b0bebd50 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55c9b0bebc70 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55c9b0bebb90 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55c9b0bebb48 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55c9b0bebb30 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55c9b0bebaf0 <col:20> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55c9b0bebb78 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55c9b0bebb60 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55c9b0bebb10 <col:38> '_Bool' lvalue Var 0x55c9b0be64e0 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55c9b0bebc50 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55c9b0bebc08 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55c9b0bebbf0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55c9b0bebbb0 <col:56> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55c9b0bebc38 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55c9b0bebc20 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55c9b0bebbd0 <col:74> '_Bool' lvalue Var 0x55c9b0be66c0 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55c9b0bebd08 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55c9b0bebcc0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55c9b0bebc90 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55c9b0bebd38 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55c9b0bebd20 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55c9b0bebce8 <col:102> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55c9b0bebfc8 <line:772:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0bebdb8 <col:3> '_Bool' lvalue Var 0x55c9b0be64e0 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55c9b0bebfb0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c9b0bebf80 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55c9b0bebe78 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55c9b0bebe30 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55c9b0bebe18 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55c9b0bebdd8 <col:20> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55c9b0bebe60 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55c9b0bebe48 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55c9b0bebdf8 <col:38> '_Bool' lvalue Var 0x55c9b0be64e0 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55c9b0bebf10 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55c9b0bebec8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55c9b0bebe98 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55c9b0bebf40 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55c9b0bebf28 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55c9b0bebef0 <col:66> '_Bool' lvalue Var 0x55c9b0be64e0 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55c9b0bec2b0 <line:773:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0bebfe8 <col:3> '_Bool' lvalue Var 0x55c9b0be66c0 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55c9b0bec298 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c9b0bec268 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55c9b0bec188 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55c9b0bec0a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55c9b0bec060 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55c9b0bec048 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55c9b0bec008 <col:20> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55c9b0bec090 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55c9b0bec078 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55c9b0bec028 <col:38> '_Bool' lvalue Var 0x55c9b0be64e0 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55c9b0bec168 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55c9b0bec120 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55c9b0bec108 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55c9b0bec0c8 <col:56> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55c9b0bec150 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55c9b0bec138 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55c9b0bec0e8 <col:74> '_Bool' lvalue Var 0x55c9b0be66c0 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55c9b0bec220 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55c9b0bec1d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55c9b0bec1a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55c9b0bec250 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55c9b0bec238 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55c9b0bec200 <col:102> '_Bool' lvalue Var 0x55c9b0be66c0 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55c9b0bec308 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55c9b0bec2f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0bec2d0 <col:3> 'void ()' Function 0x55c9b0b8c570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55c9b0bec360 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55c9b0bec348 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0bec328 <col:3> 'void ()' Function 0x55c9b0b8c4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55c9b0bec418 <line:776:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55c9b0bec380 <col:3> 'int' lvalue Var 0x55c9b0be5740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55c9b0bec3f8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55c9b0bec3e0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c9b0bec3a0 <col:22> 'int' lvalue Var 0x55c9b0be5740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55c9b0bec3c0 <col:41> 'int' 1
|   |-CallExpr 0x55c9b0bec470 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55c9b0bec458 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0bec438 <col:3> 'void ()' Function 0x55c9b0b8c570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55c9b0bec4e8 <line:778:3, col:36>
|     `-CallExpr 0x55c9b0bec4c8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55c9b0bec4b0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55c9b0bec490 <col:10> 'void *(void)' Function 0x55c9b0b8bfc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55c9b0bec658 prev 0x55c9b0be53c0 <line:780:1, line:815:1> line:780:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55c9b0bec5c0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55c9b0bf0350 <line:781:1, line:815:1>
|   |-CallExpr 0x55c9b0bec738 <line:782:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55c9b0bec720 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0bec700 <col:3> 'void ()' Function 0x55c9b0b8c4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55c9b0bec798 <line:783:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55c9b0bec758 <col:3> 'int' lvalue Var 0x55c9b0be6140 'y' 'int'
|   | `-IntegerLiteral 0x55c9b0bec778 <col:7> 'int' 1
|   |-CallExpr 0x55c9b0bec7f0 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55c9b0bec7d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0bec7b8 <col:3> 'void ()' Function 0x55c9b0b8c570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55c9b0bec848 <line:785:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55c9b0bec830 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0bec810 <col:3> 'void ()' Function 0x55c9b0b8c4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55c9b0bec8c0 <line:786:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55c9b0bec868 <col:3> 'int' lvalue Var 0x55c9b0be5ce0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55c9b0bec8a8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c9b0bec888 <col:25> 'int' lvalue Var 0x55c9b0be6140 'y' 'int'
|   |-CallExpr 0x55c9b0bec918 <line:787:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55c9b0bec900 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0bec8e0 <col:3> 'void ()' Function 0x55c9b0b8c570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55c9b0bec970 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55c9b0bec958 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0bec938 <col:3> 'void ()' Function 0x55c9b0b8c4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55c9b0beca08 <line:789:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0bec990 <col:3> '_Bool' lvalue Var 0x55c9b0be6a98 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55c9b0bec9e8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55c9b0bec9d0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55c9b0bec9b0 <col:19> '_Bool (void)' Function 0x55c9b0b8bc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55c9b0becaa0 <line:790:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0beca28 <col:3> '_Bool' lvalue Var 0x55c9b0be6b10 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55c9b0beca80 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55c9b0beca68 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55c9b0beca48 <col:19> '_Bool (void)' Function 0x55c9b0b8bc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55c9b0becb18 <line:791:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0becac0 <col:3> '_Bool' lvalue Var 0x55c9b0be62f8 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55c9b0becb00 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c9b0becae0 <col:21> '_Bool' lvalue Var 0x55c9b0be6b10 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55c9b0becb90 <line:792:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55c9b0becb38 <col:3> 'int' lvalue Var 0x55c9b0be6378 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55c9b0becb78 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c9b0becb58 <col:15> 'int' lvalue Var 0x55c9b0be6260 'z' 'int'
|   |-BinaryOperator 0x55c9b0becfd8 <line:793:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55c9b0becbb0 <col:3> 'int' lvalue Var 0x55c9b0be6260 'z' 'int'
|   | `-ConditionalOperator 0x55c9b0becfa8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55c9b0becdc0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55c9b0becce0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55c9b0becc08 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55c9b0becbf0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55c9b0becbd0 <col:8> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55c9b0beccc0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55c9b0becc58 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55c9b0becc40 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55c9b0becc20 <col:27> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x55c9b0becca8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55c9b0becc90 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55c9b0becc70 <col:46> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55c9b0becda0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55c9b0becd38 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55c9b0becd20 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55c9b0becd00 <col:65> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x55c9b0becd88 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55c9b0becd70 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55c9b0becd50 <col:84> '_Bool' lvalue Var 0x55c9b0be6738 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55c9b0becf90 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c9b0becde0 <col:101> 'int' lvalue Var 0x55c9b0be6260 'z' 'int'
|   |   `-ParenExpr 0x55c9b0becf60 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55c9b0becf30 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55c9b0becea0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55c9b0bece58 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55c9b0bece40 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55c9b0bece00 <col:106> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55c9b0bece88 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55c9b0bece70 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55c9b0bece20 <col:124> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55c9b0becf00 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55c9b0becec0 <col:141> 'int' lvalue Var 0x55c9b0be68b0 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55c9b0becf18 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55c9b0becee0 <col:153> 'int' lvalue Var 0x55c9b0be69a8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55c9b0bed4e8 <line:794:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55c9b0becff8 <col:3> 'int' lvalue Var 0x55c9b0be68b0 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x55c9b0bed4b8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55c9b0bed488 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55c9b0bed470 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55c9b0bed018 <col:15> '_Bool' lvalue Var 0x55c9b0be6b10 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55c9b0bed4a0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c9b0bed038 <col:31> 'int' lvalue Var 0x55c9b0be68b0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55c9b0bed450 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55c9b0bed420 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55c9b0bed248 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55c9b0bed168 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55c9b0bed090 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55c9b0bed078 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55c9b0bed058 <col:45> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55c9b0bed148 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55c9b0bed0e0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55c9b0bed0c8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55c9b0bed0a8 <col:64> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55c9b0bed130 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55c9b0bed118 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55c9b0bed0f8 <col:83> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55c9b0bed228 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55c9b0bed1c0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55c9b0bed1a8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55c9b0bed188 <col:102> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55c9b0bed210 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55c9b0bed1f8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55c9b0bed1d8 <col:121> '_Bool' lvalue Var 0x55c9b0be6738 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55c9b0bed408 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55c9b0bed268 <col:138> 'int' lvalue Var 0x55c9b0be68b0 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x55c9b0bed3e8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55c9b0bed3b8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55c9b0bed328 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55c9b0bed2e0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55c9b0bed2c8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55c9b0bed288 <col:151> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55c9b0bed310 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55c9b0bed2f8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55c9b0bed2a8 <col:169> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55c9b0bed388 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55c9b0bed348 <col:186> 'int' lvalue Var 0x55c9b0be68b0 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55c9b0bed3a0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55c9b0bed368 <col:198> 'int' lvalue Var 0x55c9b0be68b0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55c9b0bed9f8 <line:795:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55c9b0bed508 <col:3> 'int' lvalue Var 0x55c9b0be69a8 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x55c9b0bed9c8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55c9b0bed998 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55c9b0bed980 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55c9b0bed528 <col:15> '_Bool' lvalue Var 0x55c9b0be6b10 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55c9b0bed9b0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c9b0bed548 <col:31> 'int' lvalue Var 0x55c9b0be69a8 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x55c9b0bed960 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55c9b0bed930 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55c9b0bed758 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55c9b0bed678 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55c9b0bed5a0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55c9b0bed588 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55c9b0bed568 <col:45> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55c9b0bed658 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55c9b0bed5f0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55c9b0bed5d8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55c9b0bed5b8 <col:64> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55c9b0bed640 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55c9b0bed628 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55c9b0bed608 <col:83> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55c9b0bed738 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55c9b0bed6d0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55c9b0bed6b8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55c9b0bed698 <col:102> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55c9b0bed720 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55c9b0bed708 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55c9b0bed6e8 <col:121> '_Bool' lvalue Var 0x55c9b0be6738 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55c9b0bed918 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55c9b0bed778 <col:138> 'int' lvalue Var 0x55c9b0be69a8 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x55c9b0bed8f8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55c9b0bed8c8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55c9b0bed838 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55c9b0bed7f0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55c9b0bed7d8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55c9b0bed798 <col:151> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55c9b0bed820 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55c9b0bed808 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55c9b0bed7b8 <col:169> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55c9b0bed898 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55c9b0bed858 <col:186> 'int' lvalue Var 0x55c9b0be69a8 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55c9b0bed8b0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55c9b0bed878 <col:198> 'int' lvalue Var 0x55c9b0be69a8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55c9b0bedfb8 <line:796:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0beda18 <col:3> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55c9b0bedfa0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c9b0bedf58 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55c9b0bedf10 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c9b0bedef8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c9b0beda38 <col:20> '_Bool' lvalue Var 0x55c9b0be6b10 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55c9b0bedf40 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c9b0bedf28 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c9b0beda58 <col:36> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55c9b0beded8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55c9b0bedea8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55c9b0bedc68 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55c9b0bedb88 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55c9b0bedab0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55c9b0beda98 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55c9b0beda78 <col:55> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55c9b0bedb68 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55c9b0bedb00 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55c9b0bedae8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55c9b0bedac8 <col:74> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55c9b0bedb50 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55c9b0bedb38 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55c9b0bedb18 <col:93> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55c9b0bedc48 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55c9b0bedbe0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55c9b0bedbc8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55c9b0bedba8 <col:112> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55c9b0bedc30 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55c9b0bedc18 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55c9b0bedbf8 <col:131> '_Bool' lvalue Var 0x55c9b0be6738 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55c9b0bede90 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55c9b0bede78 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55c9b0bedc88 <col:148> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55c9b0bede58 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55c9b0bede28 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55c9b0bedd48 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55c9b0bedd00 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55c9b0bedce8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55c9b0bedca8 <col:166> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55c9b0bedd30 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55c9b0bedd18 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55c9b0bedcc8 <col:184> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55c9b0bedde0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55c9b0bedd98 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55c9b0bedd68 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55c9b0bede10 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55c9b0beddf8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55c9b0beddc0 <col:212> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55c9b0bee580 <line:797:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0bedfd8 <col:3> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55c9b0bee568 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c9b0bee538 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55c9b0bee4f0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c9b0bee4d8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c9b0bedff8 <col:20> '_Bool' lvalue Var 0x55c9b0be6b10 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55c9b0bee520 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c9b0bee508 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c9b0bee018 <col:36> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55c9b0bee4b8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55c9b0bee488 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55c9b0bee228 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55c9b0bee148 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55c9b0bee070 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55c9b0bee058 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55c9b0bee038 <col:55> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55c9b0bee128 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55c9b0bee0c0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55c9b0bee0a8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55c9b0bee088 <col:74> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55c9b0bee110 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55c9b0bee0f8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55c9b0bee0d8 <col:93> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55c9b0bee208 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55c9b0bee1a0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55c9b0bee188 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55c9b0bee168 <col:112> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55c9b0bee1f0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55c9b0bee1d8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55c9b0bee1b8 <col:131> '_Bool' lvalue Var 0x55c9b0be6738 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55c9b0bee470 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55c9b0bee458 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55c9b0bee248 <col:148> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55c9b0bee438 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55c9b0bee408 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55c9b0bee308 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55c9b0bee2c0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55c9b0bee2a8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55c9b0bee268 <col:166> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55c9b0bee2f0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55c9b0bee2d8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55c9b0bee288 <col:184> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55c9b0bee3d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55c9b0bee358 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55c9b0bee328 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55c9b0bee3f0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55c9b0bee3b0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55c9b0bee380 <col:219> 'int' 0
|   |-BinaryOperator 0x55c9b0beeb28 <line:798:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0bee5a0 <col:3> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55c9b0beeb10 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c9b0beeae0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55c9b0beea98 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c9b0beea80 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c9b0bee5c0 <col:20> '_Bool' lvalue Var 0x55c9b0be6b10 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55c9b0beeac8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c9b0beeab0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c9b0bee5e0 <col:36> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x55c9b0beea60 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55c9b0beea30 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55c9b0bee7f0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55c9b0bee710 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55c9b0bee638 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55c9b0bee620 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55c9b0bee600 <col:55> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55c9b0bee6f0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55c9b0bee688 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55c9b0bee670 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55c9b0bee650 <col:74> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55c9b0bee6d8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55c9b0bee6c0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55c9b0bee6a0 <col:93> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55c9b0bee7d0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55c9b0bee768 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55c9b0bee750 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55c9b0bee730 <col:112> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55c9b0bee7b8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55c9b0bee7a0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55c9b0bee780 <col:131> '_Bool' lvalue Var 0x55c9b0be6738 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55c9b0beea18 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55c9b0beea00 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55c9b0bee810 <col:148> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x55c9b0bee9e0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55c9b0bee9b0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55c9b0bee8d0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55c9b0bee888 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55c9b0bee870 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55c9b0bee830 <col:166> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55c9b0bee8b8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55c9b0bee8a0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55c9b0bee850 <col:184> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55c9b0bee968 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55c9b0bee920 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55c9b0bee8f0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55c9b0bee998 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55c9b0bee980 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55c9b0bee948 <col:212> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55c9b0bef128 <line:799:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0beeb48 <col:3> '_Bool' lvalue Var 0x55c9b0be6738 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55c9b0bef110 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c9b0bef0e0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55c9b0bef098 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c9b0bef080 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c9b0beeb68 <col:20> '_Bool' lvalue Var 0x55c9b0be6b10 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55c9b0bef0c8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c9b0bef0b0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c9b0beeb88 <col:36> '_Bool' lvalue Var 0x55c9b0be6738 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x55c9b0bef060 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55c9b0bef030 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55c9b0beed98 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55c9b0beecb8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55c9b0beebe0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55c9b0beebc8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55c9b0beeba8 <col:55> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55c9b0beec98 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55c9b0beec30 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55c9b0beec18 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55c9b0beebf8 <col:74> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55c9b0beec80 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55c9b0beec68 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55c9b0beec48 <col:93> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55c9b0beed78 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55c9b0beed10 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55c9b0beecf8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55c9b0beecd8 <col:112> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55c9b0beed60 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55c9b0beed48 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55c9b0beed28 <col:131> '_Bool' lvalue Var 0x55c9b0be6738 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55c9b0bef018 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55c9b0bef000 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55c9b0beedb8 <col:148> '_Bool' lvalue Var 0x55c9b0be6738 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x55c9b0beefe0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55c9b0beefb0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55c9b0beee78 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55c9b0beee30 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55c9b0beee18 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55c9b0beedd8 <col:166> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55c9b0beee60 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55c9b0beee48 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55c9b0beedf8 <col:184> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55c9b0beef48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55c9b0beeec8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55c9b0beee98 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55c9b0beef60 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55c9b0beef20 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55c9b0beeef0 <col:219> 'int' 0
|   |-BinaryOperator 0x55c9b0bef1a0 <line:800:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55c9b0bef148 <col:3> 'int' lvalue Var 0x55c9b0be5e00 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x55c9b0bef188 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c9b0bef168 <col:25> 'int' lvalue Var 0x55c9b0be6260 'z' 'int'
|   |-BinaryOperator 0x55c9b0bef2d0 <line:801:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55c9b0bef1c0 <col:3> 'int' lvalue Var 0x55c9b0be6260 'z' 'int'
|   | `-ConditionalOperator 0x55c9b0bef2a0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55c9b0bef258 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55c9b0bef240 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55c9b0bef1e0 <col:7> '_Bool' lvalue Var 0x55c9b0be62f8 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55c9b0bef270 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c9b0bef200 <col:25> 'int' lvalue Var 0x55c9b0be6378 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55c9b0bef288 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55c9b0bef220 <col:37> 'int' lvalue Var 0x55c9b0be6260 'z' 'int'
|   |-BinaryOperator 0x55c9b0bef368 <line:802:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0bef2f0 <col:3> '_Bool' lvalue Var 0x55c9b0be62f8 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55c9b0bef340 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55c9b0bef310 <col:28> 'int' 0
|   |-CallExpr 0x55c9b0bef3c0 <line:803:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55c9b0bef3a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0bef388 <col:3> 'void ()' Function 0x55c9b0b8c570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55c9b0bef418 <line:804:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55c9b0bef400 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0bef3e0 <col:3> 'void ()' Function 0x55c9b0b8c4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55c9b0bef700 <line:805:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55c9b0bef438 <col:3> 'int' lvalue Var 0x55c9b0be6260 'z' 'int'
|   | `-ConditionalOperator 0x55c9b0bef6d0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55c9b0bef4f8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55c9b0bef4b0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55c9b0bef498 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55c9b0bef458 <col:7> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55c9b0bef4e0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55c9b0bef4c8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55c9b0bef478 <col:25> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55c9b0bef6b8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c9b0bef518 <col:42> 'int' lvalue Var 0x55c9b0be68b0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55c9b0bef698 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55c9b0bef668 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55c9b0bef5d8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55c9b0bef590 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55c9b0bef578 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55c9b0bef538 <col:55> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55c9b0bef5c0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55c9b0bef5a8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55c9b0bef558 <col:73> '_Bool' lvalue Var 0x55c9b0be6738 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55c9b0bef638 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55c9b0bef5f8 <col:90> 'int' lvalue Var 0x55c9b0be69a8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55c9b0bef650 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55c9b0bef618 <col:102> 'int' lvalue Var 0x55c9b0be6260 'z' 'int'
|   |-BinaryOperator 0x55c9b0bef908 <line:806:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0bef720 <col:3> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55c9b0bef8f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c9b0bef8c0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55c9b0bef7e0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55c9b0bef798 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55c9b0bef780 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55c9b0bef740 <col:20> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55c9b0bef7c8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55c9b0bef7b0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55c9b0bef760 <col:38> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55c9b0bef878 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55c9b0bef830 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55c9b0bef800 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55c9b0bef8a8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55c9b0bef890 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55c9b0bef858 <col:66> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55c9b0befbf0 <line:807:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0bef928 <col:3> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55c9b0befbd8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c9b0befba8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55c9b0befac8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55c9b0bef9e8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55c9b0bef9a0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55c9b0bef988 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55c9b0bef948 <col:20> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55c9b0bef9d0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55c9b0bef9b8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55c9b0bef968 <col:38> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55c9b0befaa8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55c9b0befa60 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55c9b0befa48 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55c9b0befa08 <col:56> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55c9b0befa90 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55c9b0befa78 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55c9b0befa28 <col:74> '_Bool' lvalue Var 0x55c9b0be6738 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55c9b0befb60 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55c9b0befb18 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55c9b0befae8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55c9b0befb90 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55c9b0befb78 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55c9b0befb40 <col:102> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55c9b0befdf8 <line:808:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0befc10 <col:3> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55c9b0befde0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c9b0befdb0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55c9b0befcd0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55c9b0befc88 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55c9b0befc70 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55c9b0befc30 <col:20> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55c9b0befcb8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55c9b0befca0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55c9b0befc50 <col:38> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55c9b0befd68 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55c9b0befd20 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55c9b0befcf0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55c9b0befd98 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55c9b0befd80 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55c9b0befd48 <col:66> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55c9b0bf0108 <line:809:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55c9b0befe18 <col:3> '_Bool' lvalue Var 0x55c9b0be6738 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55c9b0bf00f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c9b0bf00c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55c9b0beffe0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55c9b0befed8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55c9b0befe90 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55c9b0befe78 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55c9b0befe38 <col:20> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55c9b0befec0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55c9b0befea8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55c9b0befe58 <col:38> '_Bool' lvalue Var 0x55c9b0be6558 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55c9b0beffc0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55c9b0beff50 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55c9b0beff38 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55c9b0befef8 <col:56> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55c9b0beff80 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55c9b0beff68 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55c9b0beff18 <col:74> '_Bool' lvalue Var 0x55c9b0be6738 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55c9b0bf0078 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55c9b0bf0030 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55c9b0bf0000 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55c9b0bf00a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55c9b0bf0090 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55c9b0bf0058 <col:102> '_Bool' lvalue Var 0x55c9b0be6738 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55c9b0bf0160 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55c9b0bf0148 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0bf0128 <col:3> 'void ()' Function 0x55c9b0b8c570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55c9b0bf01b8 <line:811:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55c9b0bf01a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0bf0180 <col:3> 'void ()' Function 0x55c9b0b8c4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55c9b0bf0270 <line:812:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55c9b0bf01d8 <col:3> 'int' lvalue Var 0x55c9b0be5740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55c9b0bf0250 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55c9b0bf0238 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c9b0bf01f8 <col:22> 'int' lvalue Var 0x55c9b0be5740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55c9b0bf0218 <col:41> 'int' 1
|   |-CallExpr 0x55c9b0bf02c8 <line:813:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55c9b0bf02b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9b0bf0290 <col:3> 'void ()' Function 0x55c9b0b8c570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55c9b0bf0340 <line:814:3, col:36>
|     `-CallExpr 0x55c9b0bf0320 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55c9b0bf0308 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55c9b0bf02e8 <col:10> 'void *(void)' Function 0x55c9b0b8bfc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55c9b0bf0488 prev 0x55c9b0be5488 <line:816:1, line:818:1> line:816:6 fence 'void ()'
| `-CompoundStmt 0x55c9b0bf0528 <line:817:1, line:818:1>
|-FunctionDecl 0x55c9b0bf0558 prev 0x55c9b0be5548 <line:819:1, line:821:1> line:819:6 isync 'void ()'
| `-CompoundStmt 0x55c9b0bf05f8 <line:820:1, line:821:1>
|-FunctionDecl 0x55c9b0bf0628 prev 0x55c9b0be5608 <line:822:1, line:824:1> line:822:6 lwfence 'void ()'
| `-CompoundStmt 0x55c9b0bf06c8 <line:823:1, line:824:1>
`-FunctionDecl 0x55c9b0bf0738 <line:825:1, line:849:1> line:825:5 main 'int ()'
  `-CompoundStmt 0x55c9b0bf2550 <line:826:1, line:849:1>
    |-DeclStmt 0x55c9b0bf0850 <line:827:3, col:16>
    | `-VarDecl 0x55c9b0bf07e8 <col:3, col:13> col:13 used t34 'pthread_t':'unsigned long'
    |-CallExpr 0x55c9b0bf0a58 <line:828:3, col:52> 'int'
    | |-ImplicitCastExpr 0x55c9b0bf0a40 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55c9b0bf0868 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55c9b0bcc9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55c9b0bf08a8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55c9b0bf0888 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55c9b0bf07e8 't34' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55c9b0bf0a98 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55c9b0bf0920 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x55c9b0bf08f8 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55c9b0bf08c0 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x55c9b0bf0ab0 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55c9b0bf0940 <col:37> 'void *(void *)' Function 0x55c9b0be6c28 'P0' 'void *(void *)'
    | `-ParenExpr 0x55c9b0bf09c0 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x55c9b0bf0998 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55c9b0bf0960 <col:50> 'int' 0
    |-DeclStmt 0x55c9b0bf0b40 <line:829:3, col:16>
    | `-VarDecl 0x55c9b0bf0ad8 <col:3, col:13> col:13 used t35 'pthread_t':'unsigned long'
    |-CallExpr 0x55c9b0bf0ce8 <line:830:3, col:52> 'int'
    | |-ImplicitCastExpr 0x55c9b0bf0cd0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55c9b0bf0b58 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55c9b0bcc9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55c9b0bf0b98 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55c9b0bf0b78 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55c9b0bf0ad8 't35' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55c9b0bf0d28 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55c9b0bf0c10 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x55c9b0bf0be8 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55c9b0bf0bb0 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x55c9b0bf0d40 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55c9b0bf0c30 <col:37> 'void *(void *)' Function 0x55c9b0beb180 'P1' 'void *(void *)'
    | `-ParenExpr 0x55c9b0bf0cb0 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x55c9b0bf0c88 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55c9b0bf0c50 <col:50> 'int' 0
    |-DeclStmt 0x55c9b0bf0dd0 <line:831:3, col:16>
    | `-VarDecl 0x55c9b0bf0d68 <col:3, col:13> col:13 used t36 'pthread_t':'unsigned long'
    |-CallExpr 0x55c9b0bf0f78 <line:832:3, col:52> 'int'
    | |-ImplicitCastExpr 0x55c9b0bf0f60 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55c9b0bf0de8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55c9b0bcc9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55c9b0bf0e28 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55c9b0bf0e08 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55c9b0bf0d68 't36' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55c9b0bf0fd0 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55c9b0bf0ea0 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x55c9b0bf0e78 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55c9b0bf0e40 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x55c9b0bf0fe8 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55c9b0bf0ec0 <col:37> 'void *(void *)' Function 0x55c9b0bec658 'P2' 'void *(void *)'
    | `-ParenExpr 0x55c9b0bf0f40 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x55c9b0bf0f18 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55c9b0bf0ee0 <col:50> 'int' 0
    |-CallExpr 0x55c9b0bf1038 <line:833:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55c9b0bf1020 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55c9b0bf1000 <col:3> 'void ()' Function 0x55c9b0b8c4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55c9b0bf1108 <line:834:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55c9b0bf1058 <col:3> '_Bool' lvalue Var 0x55c9b0be5e98 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55c9b0bf10f0 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55c9b0bf10d0 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55c9b0bf10b8 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55c9b0bf1078 <col:21> 'int' lvalue Var 0x55c9b0be5740 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55c9b0bf1098 <col:41> 'int' 3
    |-CallExpr 0x55c9b0bf1160 <line:835:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55c9b0bf1148 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55c9b0bf1128 <col:3> 'void ()' Function 0x55c9b0b8c570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55c9b0bf11d8 <line:836:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55c9b0bf11c0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55c9b0bf1180 <col:3> 'void (int)' Function 0x55c9b0b8be50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55c9b0bf1218 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55c9b0bf1200 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55c9b0bf11a0 <col:21> '_Bool' lvalue Var 0x55c9b0be5e98 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55c9b0bf1268 <line:837:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55c9b0bf1250 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55c9b0bf1230 <col:3> 'void ()' Function 0x55c9b0b8c4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55c9b0bf1550 <line:838:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55c9b0bf1288 <col:3> 'int' lvalue Var 0x55c9b0be6260 'z' 'int'
    | `-ConditionalOperator 0x55c9b0bf1520 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55c9b0bf1348 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55c9b0bf1300 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55c9b0bf12e8 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55c9b0bf12a8 <col:7> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55c9b0bf1330 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55c9b0bf1318 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55c9b0bf12c8 <col:25> '_Bool' lvalue Var 0x55c9b0be63f0 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55c9b0bf1508 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55c9b0bf1368 <col:42> 'int' lvalue Var 0x55c9b0be68b0 'z$w_buff0' 'int'
    |   `-ParenExpr 0x55c9b0bf14e8 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55c9b0bf14b8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55c9b0bf1428 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55c9b0bf13e0 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55c9b0bf13c8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55c9b0bf1388 <col:55> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55c9b0bf1410 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55c9b0bf13f8 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55c9b0bf13a8 <col:73> '_Bool' lvalue Var 0x55c9b0be65d0 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55c9b0bf1488 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55c9b0bf1448 <col:90> 'int' lvalue Var 0x55c9b0be69a8 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55c9b0bf14a0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55c9b0bf1468 <col:102> 'int' lvalue Var 0x55c9b0be6260 'z' 'int'
    |-BinaryOperator 0x55c9b0bf1758 <line:839:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55c9b0bf1570 <col:3> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55c9b0bf1740 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55c9b0bf1710 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55c9b0bf1630 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55c9b0bf15e8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55c9b0bf15d0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55c9b0bf1590 <col:20> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55c9b0bf1618 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55c9b0bf1600 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55c9b0bf15b0 <col:38> '_Bool' lvalue Var 0x55c9b0be63f0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55c9b0bf16c8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55c9b0bf1680 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55c9b0bf1650 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55c9b0bf16f8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55c9b0bf16e0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55c9b0bf16a8 <col:66> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55c9b0bf1a40 <line:840:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55c9b0bf1778 <col:3> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55c9b0bf1a28 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55c9b0bf19f8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55c9b0bf1918 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55c9b0bf1838 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55c9b0bf17f0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55c9b0bf17d8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55c9b0bf1798 <col:20> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55c9b0bf1820 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55c9b0bf1808 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55c9b0bf17b8 <col:38> '_Bool' lvalue Var 0x55c9b0be63f0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55c9b0bf18f8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55c9b0bf18b0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55c9b0bf1898 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55c9b0bf1858 <col:56> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55c9b0bf18e0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55c9b0bf18c8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55c9b0bf1878 <col:74> '_Bool' lvalue Var 0x55c9b0be65d0 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55c9b0bf19b0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55c9b0bf1968 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55c9b0bf1938 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55c9b0bf19e0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55c9b0bf19c8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55c9b0bf1990 <col:102> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55c9b0bf1c48 <line:841:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55c9b0bf1a60 <col:3> '_Bool' lvalue Var 0x55c9b0be63f0 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55c9b0bf1c30 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55c9b0bf1c00 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55c9b0bf1b20 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55c9b0bf1ad8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55c9b0bf1ac0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55c9b0bf1a80 <col:20> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55c9b0bf1b08 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55c9b0bf1af0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55c9b0bf1aa0 <col:38> '_Bool' lvalue Var 0x55c9b0be63f0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55c9b0bf1bb8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55c9b0bf1b70 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55c9b0bf1b40 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55c9b0bf1be8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55c9b0bf1bd0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55c9b0bf1b98 <col:66> '_Bool' lvalue Var 0x55c9b0be63f0 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55c9b0bf1f30 <line:842:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55c9b0bf1c68 <col:3> '_Bool' lvalue Var 0x55c9b0be65d0 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55c9b0bf1f18 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55c9b0bf1ee8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55c9b0bf1e08 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55c9b0bf1d28 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55c9b0bf1ce0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55c9b0bf1cc8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55c9b0bf1c88 <col:20> '_Bool' lvalue Var 0x55c9b0be6928 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55c9b0bf1d10 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55c9b0bf1cf8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55c9b0bf1ca8 <col:38> '_Bool' lvalue Var 0x55c9b0be63f0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55c9b0bf1de8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55c9b0bf1da0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55c9b0bf1d88 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55c9b0bf1d48 <col:56> '_Bool' lvalue Var 0x55c9b0be6a20 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55c9b0bf1dd0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55c9b0bf1db8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55c9b0bf1d68 <col:74> '_Bool' lvalue Var 0x55c9b0be65d0 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55c9b0bf1ea0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55c9b0bf1e58 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55c9b0bf1e28 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55c9b0bf1ed0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55c9b0bf1eb8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55c9b0bf1e80 <col:102> '_Bool' lvalue Var 0x55c9b0be65d0 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55c9b0bf1f88 <line:843:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55c9b0bf1f70 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55c9b0bf1f50 <col:3> 'void ()' Function 0x55c9b0b8c570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55c9b0bf1ff8 <line:844:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55c9b0bf1fe0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55c9b0bf1fa8 <col:3> 'void ()' Function 0x55c9b0b8c4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55c9b0bf23f8 <line:845:3, col:187> '_Bool' '='
    | |-DeclRefExpr 0x55c9b0bf2018 <col:3> '_Bool' lvalue Var 0x55c9b0be5f20 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55c9b0bf23e0 <col:21, col:187> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55c9b0bf23c8 <col:21, col:187> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55c9b0bf23a8 <col:22, col:187> 'int'
    |       `-BinaryOperator 0x55c9b0bf2388 <col:23, col:186> 'int' '&&'
    |         |-BinaryOperator 0x55c9b0bf22f0 <col:23, col:158> 'int' '&&'
    |         | |-BinaryOperator 0x55c9b0bf2258 <col:23, col:130> 'int' '&&'
    |         | | |-BinaryOperator 0x55c9b0bf21c0 <col:23, col:102> 'int' '&&'
    |         | | | |-BinaryOperator 0x55c9b0bf2128 <col:23, col:74> 'int' '&&'
    |         | | | | |-BinaryOperator 0x55c9b0bf2090 <col:23, col:46> 'int' '=='
    |         | | | | | |-ImplicitCastExpr 0x55c9b0bf2078 <col:23> 'int' <LValueToRValue>
    |         | | | | | | `-DeclRefExpr 0x55c9b0bf2038 <col:23> 'int' lvalue Var 0x55c9b0be5860 '__unbuffered_p0_EAX' 'int'
    |         | | | | | `-IntegerLiteral 0x55c9b0bf2058 <col:46> 'int' 1
    |         | | | | `-BinaryOperator 0x55c9b0bf2108 <col:51, col:74> 'int' '=='
    |         | | | |   |-ImplicitCastExpr 0x55c9b0bf20f0 <col:51> 'int' <LValueToRValue>
    |         | | | |   | `-DeclRefExpr 0x55c9b0bf20b0 <col:51> 'int' lvalue Var 0x55c9b0be5980 '__unbuffered_p0_EBX' 'int'
    |         | | | |   `-IntegerLiteral 0x55c9b0bf20d0 <col:74> 'int' 0
    |         | | | `-BinaryOperator 0x55c9b0bf21a0 <col:79, col:102> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x55c9b0bf2188 <col:79> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x55c9b0bf2148 <col:79> 'int' lvalue Var 0x55c9b0be5aa0 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x55c9b0bf2168 <col:102> 'int' 1
    |         | | `-BinaryOperator 0x55c9b0bf2238 <col:107, col:130> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55c9b0bf2220 <col:107> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55c9b0bf21e0 <col:107> 'int' lvalue Var 0x55c9b0be5bc0 '__unbuffered_p1_EBX' 'int'
    |         | |   `-IntegerLiteral 0x55c9b0bf2200 <col:130> 'int' 0
    |         | `-BinaryOperator 0x55c9b0bf22d0 <col:135, col:158> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55c9b0bf22b8 <col:135> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55c9b0bf2278 <col:135> 'int' lvalue Var 0x55c9b0be5ce0 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x55c9b0bf2298 <col:158> 'int' 1
    |         `-BinaryOperator 0x55c9b0bf2368 <col:163, col:186> 'int' '=='
    |           |-ImplicitCastExpr 0x55c9b0bf2350 <col:163> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55c9b0bf2310 <col:163> 'int' lvalue Var 0x55c9b0be5e00 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x55c9b0bf2330 <col:186> 'int' 0
    |-CallExpr 0x55c9b0bf2450 <line:846:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55c9b0bf2438 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55c9b0bf2418 <col:3> 'void ()' Function 0x55c9b0b8c570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55c9b0bf24c8 <line:847:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55c9b0bf24b0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55c9b0bf2470 <col:3> 'void (int)' Function 0x55c9b0b8c238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55c9b0bf2508 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55c9b0bf24f0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55c9b0bf2490 <col:21> '_Bool' lvalue Var 0x55c9b0be5f20 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55c9b0bf2540 <line:848:3, col:10>
      `-IntegerLiteral 0x55c9b0bf2520 <col:10> 'int' 0
